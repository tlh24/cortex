256
[0]  
[1] move 4 , 0  | move 4 , ua  | move 2 * 2 , 0  | move 2 + 2 , ua  | move 3 + ul , 0  | move 2 * 2 , ua  | move 4 , ua * 2  | move 4 , ua / 2  | move 4 , ua * 4  | move 3 + ul , ua  | move 2 + 2 , ua * 4  | move 3 + ul , ua + ua  | loop 0 , 0 , move 4 , 0  | loop 0 , 0 , move 4 , ua  | loop 0 , 4 , move ul , 0  | loop 0 , ul , move 4 , ua  | ( pen ua ; move 4 , ua )  | ( pen ul ; move 4 , ua )  | loop 0 , ul , move 4 , v0  | loop 0 , 4 , move ul , ua * 4  | ( move 4 , ua + ua ; pen 0 )  | ( move 4 , ua ; v0 = ua * 4 )  | ( move 4 , ua ; v0 = ul ; pen ua )  | ( move 4 , ua ; loop 0 , 7 , pen v0 )  | ( pen ul ; ( move ul , ua ; move 3 , ua ) )  | ( move 3 + ul , ua ; v0 = ua ; pen v0 )  | ( move 4 , ua ; v0 = ul ; v1 = ua * 3 )  | ( ( pen ua ; move 0 - 4 , ua ) ; pen ua / 2 )  | ( v0 = 2 ; pen v0 ; loop 1 , 2 , move v0 , ua )  | ( v0 = 4 ; pen v0 ; loop 1 , ul , move 4 , v1 )  | ( move 4 , ua + ua ; loop 0 , 7 , pen v0 + ua ; pen ul )  
[2] move 4 , 2  | move 2 * 2 , 2  | move 4 , 4 - 2  | move 4 , ua + 2  | move 3 + ul , 2  | move 4 , 2 - ua  | move 4 , 3 - ul  | move 4 , ul + ul  | ( pen 3 - ul ; move 4 , 2 )  
[3] move 4 , 3  | move 3 + ul , 3  | move 4 , ua + 3  | move 4 , 2 + ul  | move 4 , 3 - ua  | move 4 , 4 - ul  | move 3 + ul , 2 + ul  | ( move 4 , 3 ; pen ul )  | ( move 3 + ul , 3 ; v0 = ul )  | ( loop 0 , 2 , v1 = 3 * v0 ; move 4 , v1 )  | ( v0 = 4 ; ( v1 = v0 ; move v0 , 3 ) )  
[4] move 4 , 4  | move 4 , ua + 4  | move 4 , 3 + ul  | move 3 + ul , 4  | move 4 , 4 - ua  | move 3 + ul , 3 + ul  | loop 0 , ul , move 4 , 4  | ( move 4 , 2 + 2 ; pen )  
[5] move ua , 0  | move ua , ua  | move ua , 0 - ua  | move 0 - ua , ua  | move ua , ua * 2  | move ua , ua * 4  | move ua , ua + ua  | ( pen 3 ; move ua , 0 )  | ( pen 3 ; move ua , ua )  | ( move ua , ua ; pen 4 )  | ( move ua , ua ; pen ua )  | ( pen ul ; move ua , ua )  | ( move ua , ua ; pen v0 )  | ( move ua , ua ; v0 = 0 )  | ( move ua , ua ; v0 = 3 )  | ( move ua , ua ; v0 = ul )  | loop 0 , 0 , move ua , v0 * 3  | ( v0 = ua ; move v0 , 0 )  | ( v0 = ua ; move v0 , v0 )  | loop 0 , ul , move ua , v0 * v0  | loop 0 , ul , move ua / v0 , v0  | ( loop 0 , ul , move ua , v0 ; pen v0 )  | loop 0 , ul , loop 1 , 0 , move 0 - ua , v0  | ( move 0 - ua , ua * 4 ; pen ua ; pen ul )  | ( pen 2 ; v0 = 0 ; move ua , ua * v0 )  | ( pen ul / 3 ; v0 = ua ; move v0 , 0 )  | ( v0 = ul ; v1 = v0 ; move ua , ua )  | ( v0 = ua ; v1 = ua ; move v1 , v1 )  | ( ( move ua , ua ; v0 = 4 - ua ) ; pen ua )  | ( pen 4 ; ( move ua , 0 ; pen ul - ua ; pen ) )  | loop 0 , 0 , ( v1 = v0 ; move v1 + ua , v1 )  
[6] move ua , 2  | move 0 - ua , 2  | move ua , 4 / 2  | move ua , ua + 2  | move ua , 2 - ua  | move ua , 3 - ul  | move ua , ul + ul  | ( pen ul ; move ua , 2 )  | ( move ua , 2 ; pen 3 / 2 )  | ( move ua , 2 ; pen ua + ul )  | ( move ua , 2 ; pen ua - ul )  | loop 0 , ul , move ua , 2 / v0  | ( loop 1 , ul , move ua , 2 ; pen 0 )  | ( move ua , ul + ul ; v0 = 3 + ul )  | loop 0 , ul , ( move v0 + v0 , ul ; move ua , ul )  | ( loop 0 , 9 , loop 1 , ul , v2 = ua ; move v2 , 2 )  | ( ( pen ua ; move ua , 2 ) ; loop 0 , ul , move v0 , ul )  
[7] move ua , 3  | move 0 - ua , 3  | move ua , ua + 3  | move ua , 2 + ul  | move ua , 3 - ua  | loop 0 , 0 , move ua , 3  | ( move ua , 3 ; v0 = 0 )  | ( move ua , 3 ; v0 = 4 )  | loop 0 , 0 , move ua , 2 + ul  | ( move ua , 3 ; v0 = ua )  | ( pen ua + 2 ; move ua , 3 ; pen ul )  | ( move 0 - ua , 3 ; v0 = ua * 2 )  | ( v0 = ua + ua ; v1 = 3 ; move ua , v1 )  | ( pen 3 ; move ua , 3 ; loop 0 , 9 , v1 = v0 )  
[8] move ua , 4  | move 4 + 2 , 4  | move 3 * 2 , 4  | move 0 - ua , 4  | move ua , 3 + ul  | move ua , ua + 4  | move ua , 4 - ua  | move 3 + 3 , ua + 4  | ( move ua , 4 ; pen ua )  | ( move ua , 4 ; pen ul )  | ( v0 = 3 ; move ua , 4 )  | ( move ua , 4 ; v0 = ul )  | loop 0 , 0 , move ua , 4 + v0  | loop 0 , 0 , move ua - v0 , 4  | ( move ua , 4 ; pen ua ; pen ul )  | ( move ua , ua + 4 ; v0 = 2 )  | ( move 0 , 2 ; move ua , 2 ; v0 = 3 + 2 )  | ( move ua , 4 ; v0 = ul - 4 ; v1 = ul )  | ( v0 = 3 + ul ; move ua , 4 ; v1 = ua + v0 )  
[9] move 4 , ul  | move 4 , 3 - 2  | move 2 + 2 , ul  | move 2 * 2 , ul  | move 4 , 2 - ul  | move 3 + ul , ul  | move 4 , ua + ul  | move 3 + ul , ua + ul  | ( move 4 , ul ; pen 0 )  | loop 0 , ul , move 4 , ul  | ( pen ul ; move 4 , ul )  | ( move 4 , ul ; pen ul )  | ( v0 = 0 ; move 4 , ul )  | ( move 3 + ul , ul ; pen ua )  | ( pen ul ; move 4 , ul ; pen ul )  | ( v0 = 2 - ul ; move 4 , ul )  | ( v0 = 2 - ul ; move 4 , v0 )  | ( v0 = 3 + ul ; move v0 , ul )  | ( v0 = ul ; pen ul ; move 4 , ul )  | ( pen ul ; move 0 - 4 , ul ; pen ua )  | ( move 4 , 4 - 3 ; v0 = ua + ul )  | ( v0 = 0 ; move 4 , ul ; pen v0 )  | ( move 4 , ul ; loop 0 , 4 , pen v0 )  | ( move 4 , ul ; loop 0 , 6 , pen v0 )  | ( move 4 , ul ; loop 1 , 9 , move v0 , ua + 3 )  | ( v0 = ul ; pen v0 + v0 ; move 4 , v0 )  | ( v0 = ul ; ( move 4 , v0 ; v1 = ul ) )  | ( move 3 + ul , ul ; move 0 , 4 ; v0 = ua * 2 )  | ( ( v0 = 0 ; move v0 , ul / v0 ) ; move 4 , ua )  
[10] move ua , ul  | move ua , 3 - 2  | move ua , 4 - 3  | move 0 - ua , ul  | move ua , 2 - ul  | move ua , ua + ul  | move ua , ul - ua  | loop 0 , 0 , move ua , ul  | ( move ua , ul ; pen 0 )  | ( move ua , ul ; pen 2 )  | ( pen 3 ; move ua , ul )  | ( pen ua ; move ua , ul )  | ( v0 = 0 ; move ua , ul )  | ( move ua , ul ; v0 = 3 )  | ( move ua , ul ; v0 = ua )  | ( v0 = ua ; move ua , ul )  | ( pen ua * 3 ; move ua , ul )  | ( move ua , ua + ul ; v3 = v2 )  | ( move ua , ul ; move 0 , ua ; pen ua )  | ( pen ul ; pen ua * 3 ; move ua , ul )  | ( loop 0 , ul , move ua , ul ; pen v0 )  | ( v0 = 4 ; move ua , ul ; move 0 , ul )  | ( pen ul / 4 ; move ua , ul ; v0 = 0 )  | ( v0 = ua + ua ; move ua , ul - v0 )  | ( loop 0 , 0 , v1 = ua ; move v1 , ul )  | ( pen 4 * 2 ; v0 = ul ; move ua , v0 )  | ( ( move ua , ul ; pen ul ) ; pen ul ; pen 2 )  | ( pen ua + ul ; ( move ua , ul ; v0 = ua ) )  | ( move ua , ul ; v0 = 0 ; v1 = v0 / ua )  | ( move ua , ul ; ( pen ua * 4 ; v0 = ua * ua ) )  | ( move ua , ul ; move 0 , ul ; loop 0 , 9 , v1 = v0 )  | ( move ua , ua + ul ; loop 2 , 9 , move v0 , ul - v2 )  
[11] move 3 + 2 , 0  | move 4 + ul , 0  | move 3 + 2 , ua  | move 4 + ul , ua  | move 4 + ul , ua * 4  | loop 0 , 5 , move ul , 0  | loop 0 , 5 , move ul , ua  | ( move 4 + ul , ua ; pen ua )  | loop 0 , 2 , move 3 - v0 , ua  | ( move 2 + ul , 0 ; move 2 , 0 - ua )  | ( pen ua + ua ; ( v0 = ua ; move 4 + ul , v0 ) )  
[12] move 4 , 0 - 2  | move 4 , ul - 3  | move 2 + 2 , ua - 2  
[13] move 4 + 3 , 0  | move 4 + 3 , ua  | move ua + ul , 0  | move ua + ul , 0 - ua  | loop 0 , 7 , move ul , 0  | ( move 4 , 0 ; move 3 , 0 ; v0 = ua + ul )  
[14] move 3 + 2 , 3  | move ua - ul , 3  | move ul - ua , 3  | ( move ua - ul , 3 ; v0 = 3 )  | ( move ua - ul , 3 ; pen ul ; v0 = ul )  
[15] move 4 , 3 + 2  | move 4 , 4 + ul  | move 0 - 4 , 4 + ul  | ( pen ul ; move 3 + ul , 4 + ul )  | ( v0 = 4 + ul ; move 4 , v0 )  
[16] move 4 , 4 + 2  | move 4 , 3 * 2  | move 3 + ul , 3 + 3  
[17] move 4 , 2 - 3  | move 4 , ua - ul  | move 3 + ul , 2 - 3  | move 3 + ul , 0 - ul  
[18] move 4 , 4 + 3  
[19] move 3 * 3 , 3  | ( v0 = 3 ; move v0 * v0 , v0 )  
[20] move 4 + 3 , 4  
[21] move 4 , 3 * 3  
[22] move 4 + 4 , 4  | move 4 * 2 , 4  | move ua + 2 , 4  | move ua + ul , 4  | move ua + 2 , 3 + ul  | ( move ua , 3 + ul ; move ul + ul , 0 ; pen ul )  
[23] move 4 , 4 + 4  | move 3 + ul , 4 * 2  
[24] move 4 , 4 / 3  
[25] move ua + 2 , 0  | move 4 * 2 , ua  | move ua + 2 , ua  
[26] move ua + 2 , 2  
[27] move ua , 0 - 3  | move ua , ua - 3  | move ua , ul - 4  | ( move ua , ul - 4 ; pen 4 )  
[28] move ua , 3 + 2  | move ua , 4 + ul  | ( move ua , 4 + ul ; pen 3 ; v0 = 2 )  
[29] move ua , 3 + 3  | move ua , 4 + 2  | move ua , 3 * 2  | ( loop 0 , 7 , v1 = ua ; move ua , v1 + v0 )  
[30] move 3 + 2 , ul  | move 4 + ul , ul  | move 4 + ul , ua + ul  | ( move 4 , ul ; move ul , ua )  | ( loop 0 , 7 , pen v0 ; move ul - v0 , ul )  | ( pen ul + ul ; ( v0 = 4 ; move v0 + ul , ul ) )  
[31] move ua + 3 , 4  | move ua + 4 , 4  | move ua + 4 , 3 + ul  
[32] move ua , 2 - 4  | move ua , ua - 2  | move ua , ul - 3  | move ua + ul , ua - 2  
[33] move ua , 4 + 3  
[34] move 4 + ul , 2  | move 4 + ul , ua + 2  
[35] move ua , 3 - 4  | move ua , ul - 2  | move ua , ua - ul  | move 0 - ua , ua - ul  | ( move ua , 0 - ul ; v0 = ul ; pen 0 )  
[36] move ua , 2 / 3  
[37] move ua , 3 / 2  
[38] move 4 , ua - 3  | move 4 , ul - 4  | move 3 + ul , 0 - 3  
[39] move ua , 4 + 4  | move ua , 4 * 2  
[40] move ua , 3 * 3  
[41] move 4 , ua - 4  | move ua - 2 , ua - 4  
[42] move 4 + 4 , ul  | move 4 * 2 , ul  | move ua + ul , ul  | loop 0 , ul , move ua + ul , ul  | ( move 4 , ul ; move 3 + ul , ua )  | ( v0 = ul ; move ua + ul , v0 )  
[43] move 3 * 3 , ul  | move ua + 3 , ul  | move 3 * 3 , 2 - ul  | move ua + 3 , ua + ul  | ( move ua + 3 , ul ; v0 = 2 )  
[44] move ua , 4 * 3  
[45] move 4 , 2 / ua  | move 4 , ul / 3  | ( move 3 + ul , ul / 3 ; v0 = 4 )  
[46] move 4 + ul , 4  
[47] move ua , 4 * 4  
[48] move ua , 4 / 3  
[49] move 4 , ul / 2  
[50] move 4 , ua / 4  
[51] move 4 , ul / 4  
[52] move ua + ul , 2  | move ua + ul , ul + ul  | ( pen ua + ul ; move 0 , 0 ; move ua + ul , 2 )  
[53] move ua + ul , 3  | move ua + ul , ua + 3  | move ua + ul , 2 + ul  | ( pen ua ; move ua + ul , 3 )  
[54] move ua , ua - 4  | move 0 - ua , 0 - 4  
[55] move ua + 4 , ul  | ( move 4 , ul ; move ua , ua )  
[56] move 4 , ua * ua  
[57] move ua , ul / 2  | ( move ua , ul / 2 ; v1 = ul / v0 )  
[58] move ua , ua / 3  
[59] move ua , 4 / ua  
[60] move ua , ua / 4  | ( pen ua ; move ua , ua / 4 )  | ( v0 = ua / 4 ; move ua , v0 ; pen 0 )  
[61] move ua , ul / 3  
[62] move ua , ul / 4  
[63] move ua , ua * ua  | ( move ua , ua * ua ; v0 = ul + ul )  | ( move ua , ua * ua ; loop 0 , ul , loop 1 , 6 , v2 = ul )  
[64] move 3 + 2 , 2 - 3  | move ua - ul , 0 - ul  | move 4 + ul , ua - ul  
[65] move 3 + 2 , 4 + 4  
[66] move 4 + 3 , 4 + 3  
[67] move ua + 3 , 4 + 3  
[68] move ua + 3 , 3 * 2  
[69] move 3 + ul , 2 / 3  
[70] move 4 * 2 , ua - 4  
[71] move ua - ul , 0 - 2  | move ua - ul , 2 - 4  | move ul - ua , ua - 2  | move ua - ul , ul - 3  
[72] move ua + ul , 4 + 2  
[73] move ua + 4 , ul - 2  
[74] move ul - ua , 4 + 2  
[75] move 4 + ul , ua - 3  | move 4 + ul , ul - 4  | ( move ul - ua , ul - 4 ; move ul , 0 )  
[76] move ua + ul , 3 - 4  | move ua + ul , 0 - ul  
[77] move ua + 3 , ul / 2  
[78] move ua + 2 , ua / 4  | move ua + ul , ua / 4  
[79] move ua + 3 , ul / 3  
[80] move ua + 4 , ua / 3  
[81] move 4 + 3 , ul / ua  | ( move 4 / 3 , ul / ua ; move ua , ua )  
[82] move ua + 4 , 4 / ua  
[83] move ua - ul , 3 / 4  
[84] move ua + ul , 2 / ua  
[85] move ua + ul , 4 + ul  
[86] move ul - ua , 2 / ua  
[87] move ua - ul , 4 + ul  | ( loop 0 , 6 , pen v0 ; move v0 , v0 )  
[88] move ua - ul , ul / 4  
[89] loop 0 , 6 , move 4 , 2  
[90] loop 0 , 6 , move 3 , 4  
[91] loop 0 , 2 , move 2 , ul  
[92] loop 0 , 4 , move ua , 2  
[93] loop 0 , 2 , move 4 , ul  
[94] loop 0 , 3 , move 3 , ul  
[95] loop 0 , 5 , move 2 , ul  
[96] loop 0 , 3 , move 4 , ul  
[97] loop 0 , 5 , move 3 , ul  
[98] loop 0 , 6 , move ua , 4  
[99] loop 0 , 7 , move ua , 3  
[100] loop 0 , 6 , move 4 , ul  | ( v0 = 3 + ul ; pen v0 ; loop 1 , 7 , move v0 , ul )  
[101] loop 0 , 7 , move ua , 4  
[102] loop 0 , 4 , move ul , ul  | ( loop 0 , 4 , move ul , ul ; pen v0 ; pen 2 )  | loop 0 , 4 , ( move ul , ul ; loop 1 , 4 , pen ul )  
[103] loop 0 , 5 , move ul , ul  | loop 0 , 5 , ( move ul , ul ; pen ua )  
[104] loop 0 , 2 , move 2 , v0  | loop 0 , 2 , move 2 , v0 - ua  
[105] loop 0 , 2 , move 3 , v0  
[106] loop 0 , 3 , move 2 , v0  
[107] loop 0 , 2 , move 4 , v0  
[108] loop 0 , 3 , move 3 , v0  | ( pen ul ; loop 0 , 3 , move 3 , v0 ; v1 = 4 )  
[109] loop 0 , 4 , move v0 , 3  | ( loop 0 , 4 , move v0 , 3 ; pen 4 - ua )  | loop 0 , 0 , loop 1 , 4 , move v1 , 3 + v0  
[110] loop 0 , 4 , move 3 , v0  
[111] loop 0 , 5 , move 2 , v0  
[112] loop 0 , 3 , move 4 , v0  
[113] loop 0 , 5 , move v0 , 2  
[114] loop 0 , 4 , move v0 , 4  
[115] loop 0 , 6 , move v0 , 3  | loop 0 , 6 , move v0 , 3 - ua  | ( v0 = ua ; loop 1 , 6 , move v1 , 3 ; v2 = ua )  
[116] loop 0 , 7 , move v0 , 2  
[117] loop 0 , 7 , move 2 , v0  
[118] loop 0 , 6 , move 3 , v0  
[119] loop 0 , 5 , move 4 , v0  | loop 0 , 5 , move 4 , v0 - ua  
[120] loop 0 , 7 , move v0 , 3  | loop 0 , 7 , ( pen v0 ; move v0 , 3 )  | ( v0 = ul ; pen ua ; loop 1 , 7 , move v1 * v0 , 3 )  
[121] loop 0 , 7 , move 3 , v0  
[122] loop 0 , 6 , move v0 , 4  
[123] loop 0 , 4 , move v0 , ul  | loop 0 , 4 , move v0 , ua + ul  | loop 0 , 0 , loop 1 , 4 , move v1 , ul  | loop 0 , 4 , ( pen ul ; move v0 , ul )  | loop 0 , 0 , loop 1 , 4 , move v0 + v1 , ul  
[124] loop 0 , 5 , move v0 , ul  | ( pen ul ; loop 0 , 5 , move v0 , ul ; pen ua + v0 )  | ( v0 = ul - 3 ; loop 1 , 5 , move v1 , ul ; pen ua )  
[125] loop 0 , 6 , move v0 , ul  | loop 0 , 6 , loop 1 , ul , move v0 , ul  | ( loop 0 , 6 , move v0 , ul ; pen v0 - ua )  
[126] loop 0 , 7 , move ul , v0  
[127] ( pen ; move ua - 2 , 0 )  
[128] loop 0 , 4 , move v0 , v0  | ( loop 0 , 4 , move v0 , v0 ; pen 4 )  | ( pen ua ; loop 0 , 4 , move v0 , v0 + ua )  
[129] loop 0 , 5 , move v0 , v0  | loop 0 , 5 , loop 1 , ul , move v0 , v0  
[130] loop 0 , 6 , move v0 , v0  | loop 0 , 5 , move ul + v0 , ul + v0  | ( loop 0 , 6 , move v0 , v0 ; v1 = ul )  | loop 0 , 6 , ( move v0 , v0 ; v1 = v0 )  
[131] ( move ua , 3 ; move 3 , 3 )  
[132] loop 0 , 2 , move 2 , ua - ul  
[133] loop 0 , 2 , move ua , ul - 4  
[134] loop 0 , 3 , move 4 , ua * ua  
[135] loop 0 , 7 , move ul , 0 - ul  
[136] loop 0 , 7 , move ul , ul / 4  
[137] ( move ul , ul ; move 4 , 4 )  
[138] ( pen 0 ; move ua + 2 , ul )  
[139] ( move ua , ua ; move 2 , ul )  
[140] loop 0 , 4 , move 2 , 3 * v0  
[141] loop 0 , 3 , move 3 , 2 / v0  
[142] ( move 4 , ul ; move ul , ul )  
[143] loop 0 , 4 , move v0 + ua , 4  
[144] loop 0 , 3 , move 4 + v0 , ul  
[145] loop 0 , 3 , move 4 , v0 + ul  
[146] loop 0 , 2 , move 3 / v0 , ul  | loop 0 , 2 , ( v1 = 3 ; move v1 , ul )  
[147] loop 0 , 5 , move 4 , ul + v0  
[148] loop 0 , 6 , move ua - v0 , 4  
[149] loop 0 , 4 , move 3 , ul / v0  
[150] loop 0 , 2 , move ul - ua , v0  
[151] loop 0 , 4 , move v0 - ul , ul  
[152] loop 0 , 2 , move v0 + 2 , v0  
[153] loop 0 , 3 , move 2 + v0 , v0  
[154] loop 0 , 4 , move v0 , 3 + v0  
[155] loop 0 , 3 , move 4 + v0 , v0  
[156] loop 0 , 4 , move v0 , v0 - 4  
[157] loop 0 , 6 , move v0 , 3 + v0  
[158] loop 0 , 3 , move 3 / v0 , v0  
[159] loop 0 , 5 , move v0 , 4 + v0  
[160] loop 0 , 4 , move v0 , v0 / 3  
[161] loop 0 , 5 , move v0 , 4 * v0  
[162] loop 0 , 6 , move v0 , v0 / 3  
[163] ( move 3 , 4 + 2 ; move 3 , ul )  
[164] loop 0 , 7 , move 3 * 2 , ua / 4  
[165] ( move 3 , 3 ; move 4 * 2 , ul )  
[166] loop 0 , 3 , move v0 + v0 , ul  
[167] loop 0 , 4 , move v0 , ua - v0  
[168] loop 0 , 4 , move v0 , ul - v0  
[169] loop 0 , 5 , move v0 , v0 + ul  
[170] loop 0 , 6 , move v0 + ul , v0  
[171] loop 0 , 5 , move ul - v0 , v0  
[172] loop 0 , 5 , move v0 , ul - v0  
[173] loop 0 , 4 , move v0 , ul / v0  
[174] ( move ul , 2 ; move 3 , 3 - ua )  
[175] ( move 2 , ua + 4 ; move 3 , ul )  
[176] ( move 2 , 4 ; move ua - ul , 3 )  
[177] ( move 2 , 4 ; move ua , ul - 4 )  
[178] ( move ua , 0 ; move ul + ul , 2 )  
[179] ( move ul - 4 , 0 ; move ua , ul )  
[180] ( move ul , ul ; move 2 - ua , 4 )  
[181] ( move 4 , ul ; move ul , ul - 2 )  
[182] ( move 3 , ua ; move ua , 4 / ua )  
[183] loop 0 , 4 , move v0 + v0 , v0  
[184] loop 0 , 4 , move v0 , v0 + v0  
[185] loop 0 , 5 , move v0 + v0 , v0  
[186] loop 0 , 3 , move v0 * v0 , v0  | loop 0 , 3 , move v0 * v0 , v0 - ua  
[187] loop 0 , 4 , move v0 * v0 , v0  
[188] ( move ua , 0 ; move ul - ua , ul )  
[189] loop 0 , 5 , move v0 , v0 * v0  
[190] ( move ua , ua ; move 3 , ua + ul )  
[191] loop 0 , 7 , move v0 , v0 * v0  
[192] ( move ua , ul ; move ua - ul , 4 )  
[193] loop 0 , 2 , move ua + v0 , ua + 4  
[194] ( move ul , ul ; move ua , ul + ul )  
[195] loop 0 , 7 , loop 1 , 0 , move ul , ul  | ( loop 0 , 7 , move ul , ul ; v1 = ul )  
[196] loop 0 , 7 , move 2 / v0 , 3 / v0  
[197] ( move 2 , ua ; pen ul ; move ua , 4 )  
[198] loop 0 , 2 , loop 1 , 3 , move v1 , ul  
[199] loop 0 , 4 , move v0 * 2 , ul - v0  
[200] ( move 3 , 4 ; move ua + 3 , ua + 3 )  
[201] ( move ul , ul ; move 4 + 2 , 3 * 2 )  
[202] loop 0 , 3 , move ul + v0 , ua / v0  
[203] ( move 0 - ul , ul + ul ; move 3 , 3 )  
[204] ( move ua , ul - 2 ; move 3 , 4 - ua )  
[205] loop 0 , 2 , loop 1 , 3 , move v1 , v0  
[206] loop 0 , 3 , move v0 - 4 , v0 * v0  
[207] ( move 2 , 4 ; move ul - ua , ul - ua )  
[208] ( move 3 - ua , ul ; move 4 , ua * ua )  
[209] ( move 3 - ul , ul ; move ua / 2 , ul )  
[210] ( move ul / ua , 4 ; move ua , ul / 2 )  
[211] ( move 0 , ul ; loop 1 , 5 , move 3 , 2 )  
[212] loop 0 , 5 , move v0 - ul , v0 * v0  
[213] ( move ua + ul , 3 ; move ul + ul , ul )  
[214] ( loop 0 , 0 , pen v0 ; move ua , v0 )  
[215] loop 0 , 2 , loop 1 , 2 , move 3 + v0 , 4  
[216] ( v0 = 4 ; loop 1 , 4 , move v0 , ul )  
[217] ( move ul , ul ; move ua , 4 ; move ul , ua )  
[218] ( move 3 , ul ; v0 = 2 ; move ul , v0 )  
[219] ( pen ul ; move ua , ua + ul ; move ua , 2 )  
[220] ( move 2 + ul , 2 ; move ua + ul , ul / 4 )  
[221] ( move ua + ul , 3 ; ( pen ; move ua , 3 ) )  
[222] ( move ua , 0 ; move ul , 3 * 2 ; v0 = 0 )  
[223] ( ( move ul , 3 ; move ua , 2 ) ; v0 = 0 )  
[224] loop 0 , 2 , ( pen v0 ; pen 3 ; move ua , 4 )  
[225] loop 0 , 6 , ( pen 0 ; pen v0 ; move ul , ul )  
[226] ( ( pen ua ; move 3 , 4 / ua ) ; move ul , 3 )  
[227] ( pen 0 - 3 ; loop 0 , 5 , move ul , v0 - 2 )  
[228] ( move ul , 4 ; move ua , ul + ul ; move 0 , ua )  
[229] ( pen ua ; pen ul - ua ; move 2 - ua , 3 - 4 )  
[230] ( loop 0 , 9 , pen v0 ; move ul - v0 , v0 )  | ( loop 0 , 9 , v1 = 0 ; move v0 + v1 , v0 )  
[231] ( v0 = 2 - ua ; pen v0 ; move ua , 4 / 3 )  
[232] loop 0 , 5 , ( v1 = v0 ; move v0 , 3 - 4 )  
[233] ( loop 0 , 8 , pen 3 ; loop 1 , 5 , move v0 , 2 )  
[234] loop 0 , 7 , ( v1 = v0 ; move v0 - ul , ul )  
[235] ( move 0 , 2 ; move ua , ua / 4 ; move ua , 3 + ul )  
[236] loop 0 , 4 , ( loop 1 , 0 , move 4 , 4 ; v2 = ua )  
[237] ( loop 0 , ul , pen v0 ; move ul , 0 ; move ua , ua )  
[238] ( move 3 - ul , 0 - ul ; v0 = ua ; move ua , ul )  | ( move ul + ul , 0 - ul ; pen ua / 4 ; move ua , ul )  
[239] ( move ua , ul ; move 2 / ua , 4 / ua ; v0 = ua )  
[240] ( pen ; loop 0 , 6 , move v0 , v0 / 2 ; pen v0 )  
[241] ( pen ul ; loop 0 , 7 , move v0 + 4 , 3 ; pen v0 )  
[242] ( v0 = ua + ua ; loop 1 , 7 , move ua - v0 , 2 )  
[243] ( v0 = 2 + ul ; move v0 , ul ; move 3 , ul / 2 )  
[244] ( pen ul ; ( move ul , 2 ; pen ul - 3 ) ; move 3 , 0 )  
[245] ( move ul , ua ; move 4 - ul , 2 + ul ; v1 = v0 )  
[246] loop 0 , 6 , ( loop 1 , 9 , v2 = ua ; move 2 , v1 )  
[247] ( pen ua ; ( pen ul ; move 4 , ua + 3 ) ; move ua , 2 )  
[248] ( move 4 , ua ; v0 = ul ; loop 1 , 3 , move 3 , v1 )  
[249] ( move ua + ul , ul ; move ua / 2 , 2 - 4 ; v1 = 4 )  
[250] ( loop 0 , 6 , v1 = v0 ; loop 2 , 4 , move 4 , v2 )  
[251] ( move ul , 0 ; move 3 - ul , ua + ul ; move ul , 0 - 4 )  
[252] ( loop 0 , 4 , pen 3 ; loop 1 , 5 , move ua - v0 , v1 )  
[253] loop 0 , 7 , ( move ul , v0 * v0 ; v1 = ua - v0 )  
[254] loop 0 , 0 , ( ( pen ul ; pen v0 + v0 ) ; move 4 , ul )  
[255] ( v0 = 3 ; move v0 * v0 , ul + v0 ; move ul , ul )  
