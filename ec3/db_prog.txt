<<<<<<< HEAD
12296
[0]  
[1] move 4 , 0  | move 4 , ua  | move 0 - 4 , 0  | move 2 * 2 , 0  | move 3 + ul , 0  | move 2 + 2 , ua  | move 0 - 4 , ua  | move 4 , 0 - ua  | move 2 * 2 , ua  | move 4 , ua * 2  | move 4 , ua * 3  | move 4 , ua * 4  | move 2 - ua , ua  | move 4 , ua + ua  | move 3 + ul , ua  | move 3 + ul , ua + ua  | ( pen ul ; move 4 , 0 )  | ( move 4 , ua * 2 ; pen 3 )  | ( move 3 , ua ; move ul , 0 )  | ( move 0 , ua ; move 4 , ua )  | ( move 4 , ua ; move 0 , ul )  | ( v0 = 4 ; move v0 , ua )  | ( pen ul ; pen ul ; move 4 , 0 )  | ( move 2 * 2 , ua ; pen 4 * 2 )  | ( move 3 + ul , ua ; v0 = ul )  | ( move 4 , ua ; pen ul ; move 0 , 0 )  | ( move 0 , 0 ; move 3 + ul , 0 ; pen ua )  | ( v0 = 0 ; move 3 + ul , v0 ; pen v0 )  | ( ( move 4 , 0 - ua ; pen ua ) ; v0 = ul )  | ( move ul , ua ; move 2 - ul , ua ; move 2 , ua )  | ( move 4 , 0 ; pen 4 / 2 ; ( pen 0 ; v0 = ua ) )  | ( v0 = 0 ; move 4 + v0 , v0 ; v1 = v0 - 3 )  
[2] move 4 , 2  | move 0 - 4 , 2  | move 2 * 2 , 2  | move 4 , 4 / 2  | move 4 , ua + 2  | move 3 + ul , 2  | move 4 , 2 - ua  | move 4 , 3 - ul  | move 4 , ul + ul  | move 3 + ul , 4 - 2  | move 3 + ul , ua + 2  | move 0 - 4 , ul + ul  | ( move 4 , 2 ; pen ul )  | ( move 4 , 4 - 2 ; pen 0 )  | ( move 4 , ul + ul ; pen 4 )  | ( v0 = 2 ; move 4 , v0 )  | ( v0 = 4 ; move v0 , 2 )  | ( pen ul ; move 4 , 2 ; pen 0 )  | ( pen ua ; pen ul ; move 4 , 2 )  | ( v0 = 4 ; move v0 , 3 - ul )  | ( ( move 4 , 2 ; pen ul ) ; pen 0 )  | ( v0 = ul + ul ; move 4 , v0 )  | ( move ul + ul , ul + ul ; move 2 , ua )  | ( pen ul ; ( move 4 , 2 ; move 0 , ua ) )  | ( move 0 , ul + ul ; move 4 , ua ; pen ua )  | ( v0 = 2 ; move v0 , 2 ; move v0 , ua )  | ( v0 = 2 ; move v0 , v0 ; move v0 , ua )  | ( v0 = ul + ul ; move 2 + v0 , 2 ; pen ua )  | ( move 0 , 4 / 2 ; move 3 + ul , 0 ; v0 = ua )  | ( v0 = ua ; move 4 , 2 - v0 ; v1 = v0 )  | ( move 4 , 2 ; ( pen ul - ua ; v0 = 4 - ul ) )  | ( v0 = 2 ; move v0 , v0 ; move v0 , ua * v0 )  
[3] move 4 , 3  | move 2 + 2 , 3  | move 0 - 4 , 3  | move 2 * 2 , 3  | move 3 + ul , 3  | move 4 , ua + 3  | move 4 , 2 + ul  | move 4 , 3 - ua  | move 4 , 4 - ul  | move 2 + 2 , 2 + ul  | move 0 - 4 , 2 + ul  | move 2 * 2 , 2 + ul  | move 3 + ul , 2 + ul  | move 3 + ul , ua + 3  | move ua - 2 , 4 - ul  | move 3 + ul , 4 - ul  | ( move 4 , 3 ; pen 0 )  | ( v0 = 3 ; move 4 , 3 )  | ( move 3 , 3 ; move ul , 0 )  | ( pen ul ; move 4 , ua + 3 )  | ( v0 = 3 ; move 4 , v0 )  | ( move 0 , 3 ; move 3 + ul , ua )  | ( move ul , 3 ; move 2 + ul , 0 )  | ( move 3 + ul , 3 ; v0 = ul )  | ( v0 = 2 + ul ; move 4 , v0 )  | ( v0 = 3 + ul ; move v0 , 3 )  | ( move 4 , 3 ; ( v0 = ua ; pen ul ) )  | ( pen ul ; move ul , ua + 3 ; move 3 , 0 )  | ( move 0 , 3 ; v0 = 4 ; move v0 , ua )  | ( move 4 , 4 - ul ; move 0 , 4 ; v0 = 0 )  | ( v0 = 4 ; ( move v0 , 3 ; pen ul ; pen ul ) )  | ( v0 = ua ; move v0 / ua , 3 ; move 3 , ua + ua )  
[4] move 4 , 4  | move 2 + 2 , 4  | move 4 , 2 + 2  | move 0 - 4 , 4  | move 2 * 2 , 4  | move 4 , 2 * 2  | move 4 , 3 + ul  | move 3 + ul , 4  | move 4 , ua + 4  | move 4 , 4 - ua  | move 2 + 2 , 3 + ul  | move 3 + ul , 2 * 2  | move 2 * 2 , 4 - ua  | move 3 + ul , 3 + ul  | ( move 4 , 4 ; pen ul )  | ( move 4 , 4 ; move 0 , ul )  | ( move 3 , 4 ; move ul , ua )  | ( v0 = 4 ; move 4 , v0 )  | ( move 4 , 4 ; pen ua ; pen ul )  | ( v0 = 4 ; move v0 , v0 )  | ( v0 = ul ; move 4 , 3 + v0 )  | ( move 3 , 4 ; move ul , ua ; pen ul )  | ( move 4 , 4 ; v0 = 4 ; pen v0 )  | ( v0 = 3 + ul ; move v0 , v0 )  | ( move 3 , 4 ; move ul , ua ; move 0 , 0 )  | ( move 4 , ua + 4 ; v0 = ul ; pen 3 )  | ( v0 = 4 ; move v0 , v0 ; pen v0 )  | ( v0 = 4 ; ( move v0 , v0 ; pen ul ) )  | ( move 4 , 4 ; v0 = 0 ; move v0 , 2 + ul )  | ( ( v0 = 4 ; move v0 , 4 ) ; v1 = ua )  | ( v0 = 0 ; move 4 , 4 ; move v0 + v0 , 0 )  | ( v0 = ul ; move v0 , 4 ; ( pen v0 ; move 3 , ua ) )  
[5] move ua , 0  | move ua , ua  | move 0 - ua , ua  | move ua , 0 - ua  | move ua , ua * 2  | move ua , ua * 3  | move ua , ua / 2  | move ua , ua * 4  | move ua , ua + ua  | move 0 - ua , ua + ua  | ( move ua , 0 ; pen 3 )  | ( move ua , ua ; pen 0 )  | ( pen ul ; move ua , 0 )  | ( move ua , ua ; pen 2 )  | ( move ua , ua ; pen ul )  | ( pen ul ; move ua , ua )  | ( move ua , 0 ; pen 3 - 4 )  | ( move 0 , ua ; move ua , 0 )  | ( move ua , ua ; v0 = ul )  | ( v0 = ua ; move ua , v0 )  | ( move 0 , ua * 3 ; move ua , 0 )  | ( v0 = ua ; move v0 , v0 )  | ( v0 = ua + 4 ; move ua , 0 )  | ( v0 = ul / ua ; move ua , 0 )  | ( move ua , ua ; pen ua ; v0 = ua )  | ( pen 2 ; ( move ua , 0 ; v0 = 0 ) )  | ( move ua , ua ; ( v0 = 0 ; pen 2 ) )  | ( v0 = 4 ; pen ua - v0 ; move ua , ua )  | ( move 0 , 0 ; v0 = ua ; move v0 , v0 )  | ( ( v0 = ul ; move ua , ua / 2 ) ; pen v0 )  | ( ( move ua , ua * 2 ; pen 0 ) ; move 0 , ua ; pen ua + ul )  
[6] move ua , 2  | move ua , 4 - 2  | move ua , 4 / 2  | move ua , ua + 2  | move ua , 2 - ua  | move ua , 3 - ul  | move ua , ul + ul  | move 0 - ua , ua + 2  | move 0 - ua , 2 - ua  | ( move ua , 2 ; v0 = ua )  | ( v0 = ul ; move ua , 2 )  | ( move ua , 2 ; pen 3 - ua )  | ( pen 2 - ul ; move ua , 2 )  | ( move 0 , ul ; move ua , ul )  | ( v0 = ua ; move v0 , 2 )  | ( v0 = 2 ; move ua , v0 )  | ( pen ua ; pen ul ; move ua , 2 )  | ( pen ul ; pen ul ; move ua , 2 )  | ( v0 = 4 - ul ; move ua , 2 )  | ( move ua , 2 ; move 0 , ul + ul )  | ( move ua , 2 ; move 0 , ua - ul )  | ( move ua , ul + ul ; v0 = 0 )  | ( v0 = ua + ul ; move ua , 2 )  | ( move ua , 2 ; v0 = ul / ua )  | ( move ua , ul + ul ; v0 = ul )  | ( v0 = ul ; move ua / v0 , 2 )  | ( move 0 - ua , 3 - ul ; move 0 , 4 )  | ( v0 = ul ; move ua , v0 + v0 )  | ( move ua , 2 ; v0 = 4 ; v1 = 4 )  | ( move ua , 2 ; v0 = ul ; v1 = ua )  | ( v0 = ua + 4 ; move ua , ul + ul ; pen v0 )  | ( ( v0 = ua + ul ; move ua , 2 ) ; v1 = ul )  
[7] move ua , 3  | move 0 - ua , 3  | move ua , ua + 3  | move ua , 2 + ul  | move ua , 3 - ua  | move ua , 4 - ul  | move 0 - ua , 2 + ul  | ( move ua , 3 ; pen 0 )  | ( move ua , 3 ; pen ua )  | ( pen ul ; move ua , 3 )  | ( move ua , 3 ; pen ul )  | ( move ua , 3 ; v0 = 0 )  | ( move ua , 3 ; v0 = 4 )  | ( move 0 , ul ; move ua , 2 )  | ( v0 = ua ; move ua , 3 )  | ( move ua , 3 ; v0 = ua )  | ( move ua , 3 ; v0 = ul )  | ( v0 = ul ; move ua , 3 )  | ( move ua , 3 ; pen ua * 3 )  | ( move ua , 3 ; pen ua + ua )  | ( move ua , 3 - ua ; pen ul )  | ( move 0 , ul ; move ua , 4 - 2 )  | ( move ua , ua + 3 ; v0 = 0 )  | ( v0 = ua * 3 ; move ua , 3 )  | ( v0 = ua + ul ; move ua , 3 )  | ( ( move ua , 3 ; pen 4 ) ; pen 0 )  | ( move 0 , ul ; move ua , 2 ; pen 0 )  | ( pen ul / ua ; move ua , 3 ; pen 3 )  | ( move ua , 2 + ul ; v0 = ua * 2 )  | ( ( v0 = ul ; v1 = 2 ) ; move ua , 3 )  | ( pen ul ; v0 = 3 - ul ; move ua , ul + v0 )  | ( move ua , 2 + ul ; v0 = ua ; move v0 - ua , 2 )  
[8] move ua , 4  | move 3 + 3 , 4  | move 4 + 2 , 4  | move 3 * 2 , 4  | move 0 - ua , 4  | move ua , 2 * 2  | move ua , 3 + ul  | move ua , ua + 4  | move ua , 4 - ua  | move 0 - ua , 2 * 2  | move 3 + 3 , ua + 4  | move 3 * 2 , ua + 4  | move 0 - ua , ua + 4  | ( move ua , 4 ; pen 0 )  | ( move ua , 4 ; pen 3 )  | ( move ua , 4 ; pen ul )  | ( pen ul ; move ua , 4 )  | ( move 0 , 0 ; move ua , 4 )  | ( move ua , 4 ; v0 = 2 )  | ( v0 = 3 ; move ua , 4 )  | ( move 0 , 3 ; move ua , ul )  | ( move 0 , 4 ; move ua , ua )  | ( move ua , ua + 4 ; pen 3 )  | ( move ua , 3 + ul ; pen ua )  | ( move ua , 4 ; v0 = 3 / 2 )  | ( move ua , 4 ; v0 = ul / ua )  | ( move ua - ul , 4 ; move ul , ua )  | ( move ua , 3 + ul ; pen ul - ua )  | ( move ua , 4 ; v0 = ul ; pen v0 )  | ( move ua , 4 ; move 0 , 4 ; v0 = 4 )  | ( move ua , 4 ; v0 = 0 ; v1 = 4 )  | ( ( move ua , 4 ; v0 = 3 - 4 ; pen ul / 3 ) ; pen ul )  
[9] move 4 , ul  | move 4 , 4 - 3  | move 2 + 2 , ul  | move 0 - 4 , ul  | move 2 * 2 , ul  | move 4 , 2 - ul  | move ua - 2 , ul  | move 4 , ua + ul  | move 3 + ul , ul  | move 4 , ul - ua  | move 2 + 2 , ua + ul  | move 3 + ul , 2 - ul  | move 3 + ul , ua + ul  | move 3 + ul , ul - ua  | ( pen ul ; move 4 , ul )  | ( move 4 , ul ; pen ul )  | ( move 4 , ul ; v0 = 2 )  | ( move 0 , ul ; move 4 , ua )  | ( move ul , ul ; move 3 , 0 )  | ( move 4 , ul ; pen ua - 4 )  | ( move ul , ul ; move 3 , ua )  | ( pen ul ; move 4 , ua + ul )  | ( v0 = ul ; move 4 , v0 )  | ( move 3 + ul , ul - ua ; pen 4 )  | ( pen ul ; ( move 4 , ul ; pen 3 ) )  | ( v0 = 2 ; move v0 + v0 , ul )  | ( move 4 , ul ; v0 = 0 ; pen v0 )  | ( move 0 , ul ; move 4 , ua ; v0 = ua )  | ( v0 = 0 ; move 3 , ul ; move ul , v0 )  | ( move 4 , ul ; v0 = ua ; v1 = v0 )  | ( move 3 , ul ; v0 = ul ; move v0 , ua )  | ( v0 = ul ; move 4 , v0 + ua ; pen 2 - ul )  
[10] move ua , ul  | move ua , 3 - 2  | move ua , 4 - 3  | move 0 - ua , ul  | move ua , 2 - ul  | move ua , ua + ul  | move ua , ul - ua  | ( move ua , ul ; pen ua )  | ( move ua , ul ; pen ul )  | ( pen ul ; move ua , ul )  | ( v0 = 0 ; move ua , ul )  | ( move ua , ul ; v0 = 0 )  | ( move ua , ul ; v0 = 2 )  | ( move ua , ul ; v0 = 4 )  | ( move 0 , ua ; move ua , ul )  | ( move 0 , ul ; move ua , ua )  | ( move 0 - ua , ul ; pen ua )  | ( move ua , ua + ul ; pen 3 )  | ( move ua , ul ; pen ua * ua )  | ( move ua , ul ; pen ul / ua )  | ( v0 = ua ; move v0 , ul )  | ( move ua , ul ; move 0 , 2 + ul )  | ( move ua , ul ; move 0 , 2 / ua )  | ( move ua , ua + ul ; v0 = 0 )  | ( move ua , ua + ul ; v0 = 4 )  | ( move ua , ul ; pen 2 ; v0 = 4 )  | ( move ua , ul ; ( pen ua ; pen ua ) )  | ( pen ua + ul ; pen ul ; move ua , ul )  | ( pen ul ; ( move ua , ul ; v0 = ul ) )  | ( ( pen ul ; move ua , ul ) ; v0 = ul )  | ( v0 = ua ; v1 = ua ; move v0 , ul )  | ( ( v0 = 3 ; move ua , ul ) ; move 3 - v0 , v0 )  
[11] move 4 , pen 2  | ( pen 2 ; move 4 , 2 )  | ( pen 2 ; move 2 * 2 , 2 )  | ( pen 2 ; move 4 , ua + 2 )  | ( pen 2 ; move 3 + ul , 2 )  | ( pen 2 ; move 4 , 3 - ul )  | ( pen ua / 3 ; move 4 , 2 )  | ( pen 2 ; move 4 , ul + ul )  | ( pen ul + ul ; move 4 , 2 )  | ( pen 3 ; pen 2 ; move 4 , 2 )  | ( pen 2 ; move 4 , 2 ; pen ua )  | ( pen ul ; pen 2 ; move 4 , 2 )  | ( pen 2 ; move 4 , 2 ; v0 = 0 )  | ( pen ul + ul ; move 4 , ul + ul )  | ( move 0 , ul ; pen 2 ; move 4 , ul )  | ( pen 2 ; move 4 , 2 ; v0 = 4 + 4 )  | ( v0 = 2 ; pen v0 ; move 4 , v0 )  | ( pen 4 - 2 ; move 4 , 2 ; v0 = ua )  | ( pen 3 - ul ; move 4 , 2 ; v0 = 4 )  | ( pen 2 ; move 4 , ul + ul ; v0 = 3 )  | ( move 0 , ua + ul ; pen 2 ; move 4 , ul )  | ( v0 = 2 ; ( pen v0 ; move 4 , v0 ) )  | ( pen 2 ; v0 = 2 - ua ; move v0 , v0 )  | ( move 0 , 2 ; ( pen 2 ; move 3 + ul , ua ) )  | ( pen 2 ; move 4 , ul + ul ; move 0 , ul / 4 )  | ( pen ul + ul ; move 3 + ul , 2 ; v0 = ua )  | ( pen ul + ul ; move 4 , ua + 2 ; pen 0 - ua )  | ( pen 0 - ul ; pen ul + ul ; move 3 + ul , 2 )  | ( v0 = ul + ul ; pen 2 ; move 4 , v0 - ua )  | ( v0 = 2 ; pen v0 ; move v0 * v0 , v0 )  | ( ( move 0 , ua ; pen 2 ; move 4 , 2 ) ; pen 4 / 3 )  | ( v0 = ul + ul ; pen v0 ; move v0 * v0 , 2 )  | ( move ul , ua - ul ; ( pen 2 ; move 4 , 3 ; v0 = 4 ) )  
[12] move 3 + 2 , 0  | move 3 + 2 , ua  | move 4 + ul , 0  | move 4 + ul , ua  | move ul - ua , ua  | move 3 + 2 , 0 - ua  | move 3 + 2 , ua * 3  | move 4 + ul , 0 - ua  | move 4 + ul , ua * 2  | move 4 + ul , ua / 2  | move 4 + ul , ua * 3  | move 4 + ul , ua * 4  | move 4 + ul , ua + ua  | ( move 4 , 0 ; move ul , 0 )  | ( move 4 + ul , ua ; pen 0 )  | ( pen 2 ; move 4 + ul , ua )  | ( move 4 , ua ; move ul , ua )  | ( move 4 + ul , ua ; move 0 , 0 )  | ( move 2 , ua ; move 3 , ua * 4 )  | ( move 4 + ul , 0 ; pen ua - 3 )  | ( move ul , ua / 2 ; move 4 , ua )  | ( move ul , ua ; pen ul ; move 4 , ua )  | ( move 4 + ul , 0 ; move 0 , ua + ul )  | ( ( move 4 , 0 ; move ul , 0 ) ; pen ua )  | ( move 4 , ua ; move ul , 0 ; v0 = ua )  | ( pen ul / ua ; move ul , 0 ; move 4 , 0 )  | ( move 4 + ul , 0 ; pen ul - 4 ; pen ua )  | ( move 4 + ul , 0 ; ( pen ul ; pen ua ) )  | ( v0 = ul ; move v0 + 4 , ul - v0 )  | ( move ul , 0 ; ( move 4 , ua ; v0 = 3 + ul ) )  | ( move 4 + ul , ua ; ( pen 4 ; v0 = ul - ua ) )  
[13] move 3 + 2 , 2  | move 4 + ul , 2  | move ua - ul , 2  | move ul - ua , 2  | move 3 + 2 , ua + 2  | move 3 + 2 , 3 - ul  | move 4 + ul , 4 - 2  | move 4 + ul , 4 / 2  | move 4 + ul , ua + 2  | move 3 + 2 , ul + ul  | move 4 + ul , 2 - ua  | move 4 + ul , 3 - ul  | move ua - ul , ua + 2  | move 4 + ul , ul + ul  | move ua - ul , ul + ul  | ( move 4 , 2 ; move ul , 0 )  | ( move ul , 2 ; move 4 , 0 )  | ( move 3 + 2 , 2 ; v0 = 3 )  | ( move 0 , 0 ; move 4 + ul , 2 )  | ( move 4 + ul , 2 ; v0 = 3 )  | ( move ul , 3 - ul ; move 4 , ua )  | ( v0 = 3 + 2 ; move v0 , 2 )  | ( move 3 + 2 , 2 ; v0 = 0 - ul )  | ( move 3 + 2 , 2 ; v0 = 2 + ul )  | ( move 4 + ul , ul + ul ; v0 = 0 )  | ( move 3 + ul , 3 - ul ; move ul , ua )  | ( move ul , ul + ul ; move 3 + ul , ua )  | ( ( move 0 , 2 ; move 4 , ua ) ; move ul , ua )  | ( move 4 , 2 ; ( move 4 - 3 , ua ; pen 0 - 2 ) )  | ( move 4 , ua + 2 ; move 2 - ul , 0 ; move 0 , 4 )  | ( move ul , 2 ; ( move ul , ua ; move 4 - ul , ua ) )  
[14] move 4 + 3 , 0  | move 4 + 3 , ua  | move 4 + 3 , 0 - ua  | move 4 + 3 , ua * 2  | move 4 + 3 , ua / 2  | move 4 + 3 , ua * 3  | move 4 + 3 , ua * 4  | move 4 + 3 , ua + ua  | ( move 4 + 3 , 0 ; pen 2 )  | ( move 4 , 0 ; move 3 , ua )  | ( move 4 , ua ; move 3 , ua )  | ( move 3 , ua ; move 4 , ua )  | ( move 4 , ua * 4 ; move 3 , 0 )  | ( move 4 + 3 , ua ; v0 = 3 )  | ( move 4 + 3 , 0 ; pen ua - 3 )  | ( move 3 , 0 ; move 3 + ul , ua )  | ( move 4 / ua , 0 ; move ua , ua )  | ( move 4 , ua ; move 4 - ul , ua )  | ( move 0 , ul ; move 4 + 3 , 3 - 4 )  | ( move 2 + ul , ua ; move 2 + 2 , 0 )  | ( move 3 , ua ; move 3 + ul , ua * 2 )  | ( v0 = 3 + ul ; move v0 + 3 , 0 )  | ( move 4 , 0 ; move 3 , ua ; move 0 , ul )  | ( pen 3 ; ( move ua , ua ; move 0 , 4 ) )  | ( move 4 , ua ; move 3 , ua ; v0 = ua )  | ( move 4 + 3 , 0 ; pen ul - ua ; pen ul )  | ( move ul , ua ; move 4 + 2 , ua ; pen ul )  | ( move 4 , 0 - ua ; move 3 , ua ; move 0 , 0 )  | ( v0 = ua + 3 ; move 4 , 0 ; move 3 , ua )  | ( move 4 + 3 , 0 ; v0 = ul / ua ; pen ua )  | ( move 3 , 0 ; ( v0 = ua ; move 4 , v0 ) )  | ( v0 = 4 - ul ; move 4 , ua ; move v0 , ua )  
[15] move 4 , 0 - 2  | move 4 , 2 - 4  | move 4 , ua - 2  | move 4 , ul - 3  | move 2 + 2 , 0 - 2  | move 0 - 4 , 0 - 2  | move 2 * 2 , 0 - 2  | move 2 + 2 , ua - 2  | move 0 - 4 , ua - 2  | move 2 * 2 , ua - 2  | move 2 + 2 , ul - 3  | move 3 + ul , 2 - 4  | move 2 * 2 , ul - 3  | move 3 + ul , ua - 2  | move 3 + ul , ul - 3  | ( move 4 , ua - 2 ; pen ua )  | ( move 4 , ul - 3 ; pen ul )  | ( move 2 , ua - 2 ; move 2 , 0 )  | ( move 4 , ul - 3 ; v0 = 0 )  | ( move 4 , ua - 2 ; v0 = 3 )  | ( pen ul ; move 2 + 2 , 2 - 4 )  | ( move 3 , ua - 2 ; move ul , ua ; pen 2 )  | ( move 3 , ua - 2 ; pen ul ; move ul , ua )  | ( v0 = ul - 3 ; move v0 + v0 , v0 )  | ( move ul , ul - 3 ; move 3 , 0 ; v0 = 4 )  | ( move 4 , ul - 3 ; pen 3 - ul ; v0 = 4 )  | ( move 4 , ul - 3 ; pen 4 ; v0 = ua + ul )  | ( pen ul ; v0 = ul ; move v0 * 4 , v0 - 3 )  | ( v0 = ul - 3 ; move v0 , v0 ; move v0 , ua )  | ( ( v0 = ua - 2 ; move 4 , v0 ) ; move 0 , v0 )  | ( v0 = ul ; move 4 / v0 , v0 - 3 ; v1 = ul )  | ( move 4 , ua - 2 ; move ul / ua , 0 ; v0 = ua - 2 )  
[16] move 4 , 0 - 3  | move 4 , ua - 3  | move 4 , ul - 4  | move 3 + ul , 0 - 3  | move 2 + 2 , ua - 3  | move 0 - 4 , ua - 3  | move 2 + 2 , ul - 4  | move 2 * 2 , ua - 3  | move 0 - 4 , ul - 4  | move 2 * 2 , ul - 4  | move 3 + ul , ua - 3  | move 2 + 2 , ul / ua  | move 3 + ul , ul - 4  | ( move 0 , 0 ; move 4 , ul - 4 )  | ( move 0 - 4 , ua - 3 ; pen 3 )  | ( move 4 , ul - 4 ; v0 = ua )  | ( move 4 , ul - 4 ; v0 = ul )  | ( move 4 , 0 - 3 ; v0 = ua * 2 )  | ( move 4 , ua - 3 ; v0 = 4 + 2 )  | ( v0 = 4 ; move v0 , ul - v0 )  | ( move 4 , ul - 4 ; move 0 , 2 - ua )  | ( move 0 , ul - 4 ; move 4 , 0 ; pen 2 )  | ( move 4 , ul - 4 ; pen ul ; v0 = 0 )  | ( pen ul ; v0 = ua ; move 4 , ua - 3 )  | ( move ua / 2 , ul - 4 ; move ul , ua * 2 )  | ( move 4 , ul - 4 ; ( pen 3 ; pen 3 + 2 ) )  | ( ( move ul , ul - 4 ; move 3 , ua ) ; pen 3 )  | ( move 4 , 0 - 3 ; v0 = ua * 2 ; v1 = v0 )  | ( ( v0 = ul ; v1 = v0 ) ; move 4 , ua - 3 )  | ( v0 = 0 - 3 ; move ul - v0 , v0 ; v1 = 3 )  | ( ( pen ul ; move 4 , ul - 4 ; v0 = ul ) ; v1 = ul )  
[17] move 3 + 2 , 3  | move 4 + ul , 3  | move ua - ul , 3  | move ul - ua , 3  | move 3 + 2 , ua + 3  | move 3 + 2 , 2 + ul  | move 3 + 2 , 3 - ua  | move 4 + ul , 2 + ul  | move 4 + ul , ua + 3  | move 4 + ul , 4 - ul  | ( move ul , 3 ; move 4 , 0 )  | ( move 4 + ul , 3 ; pen 0 )  | ( move 4 , 3 ; move ul , ua )  | ( move 3 + 2 , 3 ; v0 = 2 )  | ( move 3 , 3 ; move 3 - ul , 0 )  | ( move 4 - 3 , 3 ; move 4 , ua )  | ( move 4 + ul , 3 ; v0 = 4 )  | ( move 2 , ua + 3 ; move 3 , ua )  | ( move ul , 3 - ua ; move 4 , 0 )  | ( move ua / 3 , 3 ; move 3 , ua )  | ( move 3 + ul , 3 ; move ul , ua )  | ( move ul , 3 ; move 4 , ua + ua )  | ( move ul - ua , 3 ; pen 0 - ua )  | ( v0 = 4 + ul ; move v0 , 3 )  | ( move 4 + ul , 2 + ul ; move 0 , 4 )  | ( ( move 4 + ul , 3 ; pen ua ) ; pen 0 )  | ( v0 = 3 ; move 3 , v0 ; move 2 , ua )  | ( pen ul ; move 4 + ul , 3 ; pen ul / ua )  | ( move 0 , 3 ; move 4 , ua * 4 ; move ul , 0 )  | ( ( move 3 + 2 , ua + 3 ; v0 = ul ) ; pen 2 )  | ( move ul , 2 + ul ; move 4 , ua ; v0 = 2 - ul )  
[18] move 4 * 2 , 0  | move 4 + 4 , 0  | move ua + 2 , 0  | move 4 * 2 , ua  | move 4 + 4 , ua  | move ua + 2 , ua  | move ua + ul , ua  | move 4 * 2 , ua * 2  | move 4 + 4 , ua * 4  | move ua + 2 , ua / 2  | move ua + 2 , ua * 3  | move ua + 2 , ua + ua  | ( move ua , 0 ; move 2 , 0 )  | ( move ua + 2 , 0 ; pen ua )  | ( move 2 , ua ; move ua , ua )  | ( move 4 * 2 , 0 ; v0 = 3 )  | ( move 4 * 2 , ua ; v0 = 0 )  | ( move 3 , 0 ; move ua - ul , 0 )  | ( move ua , ua * 4 ; move 2 , 0 )  | ( move ua + 2 , ua ; v0 = 3 )  | ( v0 = ua + 2 ; move v0 , 0 )  | ( v0 = ua ; move 4 * 2 , v0 )  | ( move 4 , ua * 4 ; move 3 + ul , 0 )  | ( move ua , ua / 2 ; move ul + ul , 0 )  | ( pen ul ; move 4 * 2 , ua ; v0 = 3 )  | ( move ua + 2 , ua ; pen ul - 2 ; pen ul )  | ( v0 = ua ; move ua , v0 ; move 2 , 3 * v0 )  | ( ( move 4 + 4 , 0 ; pen ua ) ; v0 = ul - ua )  | ( ( v0 = 0 ; move 4 + 4 , v0 ) ; move v0 , ua )  | ( move ua + 2 , 0 ; ( pen 4 / ua ; v0 = 3 + 3 ) )  | ( move ul , ua * 2 ; v0 = 4 - ul ; move v0 + 4 , 0 )  
[19] move 3 * 3 , 0  | move 3 * 3 , ua  | move 3 * 3 , ua * 2  | move 3 * 3 , ua / 2  | move 3 * 3 , ua * 3  | move 3 * 3 , ua * 4  | move 3 * 3 , ua + ua  | ( move 3 * 3 , 0 ; v0 = 0 )  | ( move 4 , ua ; move 3 + 2 , ua )  | ( move ul , ua ; move 4 * 2 , 0 )  | ( move 4 + 4 , ua ; move ul , 0 )  | ( move 3 * 2 , ua ; move 3 , ua )  | ( move 3 * 3 , ua ; v0 = ua )  | ( v0 = 3 * 3 ; move v0 , 0 )  | ( v0 = 3 ; move v0 * v0 , ua )  | ( move 4 + 4 , 0 ; move ul , ua ; pen 2 )  | ( move 3 * 3 , ua ; pen 0 ; v0 = ul )  | ( v0 = ua - 4 ; move ua + v0 , ua )  | ( v0 = 4 - ul ; move v0 * v0 , 0 )  | ( move ul , ua + ua ; move 4 * 2 , ua + ua )  | ( v0 = 3 ; pen ul ; move v0 * v0 , ua )  | ( move 3 * 2 , ua * 2 ; pen ul ; move 3 , ua )  | ( move 4 + ul , ua ; move 4 , ua ; v0 = ul )  | ( move 3 + 2 , ua ; v0 = 2 + ul ; move 4 , 0 )  | ( v0 = 3 ; move v0 * v0 , 0 ; v1 = ul )  | ( move ul , 0 ; move 4 + 4 , ua ; v0 = 4 * 2 )  | ( pen ua / 4 ; move 3 * 3 , 0 ; v0 = ua * 3 )  | ( ( move 4 + ul , ua ; move 4 , ua ) ; v0 = 0 )  | ( v0 = 3 ; v1 = ua ; move v0 * v0 , v1 )  | ( ( move 3 / 4 , 0 ; move 4 * 2 , 0 ) ; v0 = 0 )  | ( v0 = ua * 2 ; v1 = v0 ; move 4 - v0 , 0 )  | ( ( pen 2 + ul ; v0 = 3 ) ; move v0 * v0 , 0 )  
[20] move 4 , 3 + 2  | move 4 , 4 + ul  | move 0 - 4 , 3 + 2  | move 2 - ua , 3 + 2  | move 3 + ul , 3 + 2  | move 2 + 2 , 4 + ul  | move 0 - 4 , 4 + ul  | move 2 * 2 , 4 + ul  | move ua - 2 , 4 + ul  | move 2 - ua , 4 + ul  | move 3 + ul , 4 + ul  | ( move 0 , ul ; move 4 , 4 )  | ( move 4 , 3 + 2 ; pen ul )  | ( move 4 , 4 + ul ; pen ul )  | ( move 4 , 3 + 2 ; move 0 , 2 )  | ( move 0 , 3 ; move 3 + ul , 2 )  | ( move 0 , ul ; move 2 + 2 , 4 )  | ( move 4 , 4 + ul ; move 0 , 0 )  | ( move 4 , 4 + ul ; pen 3 - 2 )  | ( move 0 , 3 + ul ; move 4 , ul )  | ( move 0 , ul ; move 4 , ua + 4 )  | ( move 4 , 4 + ul ; move 0 , ul )  | ( move 4 , 4 + ul ; pen 3 - ua )  | ( v0 = 4 + ul ; move 4 , v0 )  | ( move 0 , 3 ; pen ul ; move 4 , 2 )  | ( move 0 , ul ; move 4 , 4 ; pen ul )  | ( v0 = 4 ; move v0 , ul + v0 )  | ( move 0 , ul - ua ; move 4 , ua + 4 )  | ( v0 = 2 ; move v0 - ua , v0 + 3 )  | ( move 0 , ul ; v0 = 4 ; move v0 , v0 )  | ( v0 = 4 + ul ; v1 = 2 ; move 4 , v0 )  | ( move 0 , ua + ul ; v0 = 3 ; move v0 + ul , 4 )  
[21] move 4 + 3 , 2  | move ua + ul , 2  | move 4 + 3 , 2 - ua  | move ua + ul , 4 - 2  | move 4 + 3 , ul + ul  | move ua + ul , ua + 2  | move ua + ul , 2 - ua  | move ua + ul , 3 - ul  | move ua + ul , ul + ul  | ( move 4 , 2 ; move 3 , 0 )  | ( move 3 , 2 ; move 4 , ua )  | ( move ua , 2 ; move ul , ua )  | ( move 3 + 3 , 2 ; move ul , 0 )  | ( move 0 , ul ; move 4 + 3 , ul )  | ( move ua + ul , 2 ; v0 = ua )  | ( move ul , ua ; move ua + ul , 2 )  | ( v0 = ua + ul ; move v0 , 2 )  | ( move 3 + ul , 3 - ul ; move 3 , 0 )  | ( move 2 - ul , 2 ; move ua , ua * 4 )  | ( move ua + ul , 2 - ua ; v0 = ua )  | ( move ua + ul , 2 ; v0 = ul - ua )  | ( move ua + ul , ul + ul ; pen ul + ul )  | ( move ua + ul , 2 ; pen ua ; v0 = 0 )  | ( move ua + ul , 2 ; v0 = 2 ; pen ua )  | ( move ul , ua ; move ua + ul , 2 ; v0 = 4 )  | ( ( move ua + ul , 2 ; pen 2 - 3 ) ; move 0 , ul / 2 )  | ( pen ul ; v0 = ua + ul ; ( move v0 , 2 ; pen ul ) )  | ( v0 = ul ; move v0 / 2 , v0 + v0 ; move ua , ua )  | ( pen ul ; move ul , 2 ; ( move ua , ua ; pen 0 ; pen ul ) )  | ( ( pen ul ; move ua + ul , 2 ; v0 = ul ) ; v1 = ua )  
[22] move 4 , 0 - 4  | move 4 , ua - 4  | move 2 + 2 , 0 - 4  | move 2 * 2 , 0 - 4  | move 2 + 2 , ua - 4  | move 3 + ul , 0 - 4  | move 0 - 4 , ua - 4  | move 2 * 2 , ua - 4  | move 3 + ul , ua - 4  | ( move 4 , ua - 4 ; pen 0 )  | ( move 4 , ua - 4 ; pen 3 )  | ( move 4 , ua - 4 ; pen ua )  | ( pen ul ; move 4 , ua - 4 )  | ( move 4 , ua - 4 ; pen ul )  | ( move 4 , ua - 4 ; v0 = ua )  | ( move 4 , ua - 4 ; v0 = ul )  | ( move 4 , ua - 4 ; pen ua / 4 )  | ( v0 = 4 ; move 4 , ua - v0 )  | ( v0 = 4 ; move v0 , ua - 4 )  | ( v0 = ua - 4 ; move 4 , v0 )  | ( v0 = 0 - 4 ; move v0 , v0 )  | ( v0 = 4 ; move v0 , ua - v0 )  | ( move 2 * 2 , ua - 4 ; pen ua + 3 )  | ( move 4 , ua - 4 ; v0 = ua * ua )  | ( move 3 , ua - 4 ; move ul , ua ; pen 2 )  | ( move 3 , 0 - 4 ; move ul , 0 - ua ; pen 2 )  | ( v0 = 0 - 4 ; move v0 , v0 ; v1 = ul )  | ( v0 = 0 - 4 ; move v0 , v0 ; v1 = v0 )  | ( v0 = 2 - ul ; move 4 , ua - 4 ; v1 = v0 )  | ( move 3 + ul , 0 - 4 ; move 0 , ul / 4 ; v0 = ua )  | ( ( v0 = 0 - 4 ; move v0 , v0 ) ; v1 = v0 )  
[23] move 3 + 2 , 4  | move 4 + ul , 4  | move 4 + ul , 2 + 2  | move 3 + 2 , ua + 4  | move 3 + 2 , 3 + ul  | move 3 + 2 , 4 - ua  | move 4 + ul , 2 * 2  | move 4 + ul , ua + 4  | move 4 + ul , 3 + ul  | move 4 + ul , 4 - ua  | ( move ul , 4 ; move 4 , 0 )  | ( move 4 , 4 ; move ul , 0 )  | ( move 4 , 4 ; move ul , ua )  | ( move ul , 4 ; move 4 , ua )  | ( move 4 + ul , 4 ; pen ua )  | ( move 3 + 2 , 4 ; move 0 , 0 )  | ( move 0 , 2 ; move 3 + 2 , 2 )  | ( move ul , 3 + ul ; move 4 , ua )  | ( move 4 + ul , ua + 4 ; pen ua )  | ( move 4 + ul , 2 + 2 ; pen 3 * 2 )  | ( move ul , ua + 4 ; move 2 + 2 , 0 )  | ( v0 = 4 ; move ul + v0 , v0 )  | ( move ul , 4 ; move 4 , 0 ; move 0 , 4 )  | ( move 3 + 2 , 4 ; move 0 , ul ; pen 0 )  | ( move ua / 3 , 3 + ul ; move 2 + ul , 0 )  | ( move 0 , 4 ; ( move ul , 0 ; move 4 , ua ) )  | ( v0 = 3 + 3 ; move ul - v0 , 4 - ua )  | ( move ul , 4 ; move 4 , ua ; move 0 , ul - ua )  | ( move 4 + ul , 4 ; move 0 , ua ; pen ul + ul )  | ( move ul , 2 + 2 ; move 4 , 0 ; v0 = 4 + ul )  | ( ( v0 = 2 ; move v0 , v0 * v0 ) ; move 3 , 0 )  | ( move ul , 4 ; move 4 , ua ; ( pen ua ; v0 = ua + 4 ) )  
[24] move 4 , 2 - 3  | move 4 , 3 - 4  | move 4 , 0 - ul  | move 4 , ul - 2  | move 4 , ua - ul  | move 2 + 2 , 2 - 3  | move 2 + 2 , 3 - 4  | move 0 - 4 , ul - 2  | move 3 + ul , 3 - 4  | move 3 + ul , 0 - ul  | move 2 + 2 , ua - ul  | move 0 - 4 , ua - ul  | move 3 + ul , ul - 2  | move 3 + ul , ua - ul  | ( move 4 , ua - ul ; pen ua )  | ( move 4 , ua - ul ; pen ul )  | ( move 4 , ua - ul ; v0 = 0 )  | ( move 4 , 0 - ul ; v0 = ua )  | ( move 4 , ua - ul ; move 0 , ul )  | ( move 2 + 2 , ua - ul ; pen ua )  | ( move ul , ua - ul ; move 3 , ua )  | ( v0 = 0 - ul ; move 4 , v0 )  | ( v0 = ul ; move 4 , v0 - 2 )  | ( pen ul ; pen ul ; move 4 , ul - 2 )  | ( move ul + ul , 0 - ul ; move 2 , 0 )  | ( move 3 + ul , ul - 2 ; v0 = ua )  | ( move 4 , ua - ul ; v0 = ua + 4 )  | ( move 3 + ul , 0 - ul ; v0 = ua + ul )  | ( move 4 , ul - 2 ; v0 = 3 ; v1 = ua )  | ( v0 = ua - ul ; move 4 , v0 ; v1 = v0 )  | ( move 4 , ua - ul ; move 0 , ua - ul ; pen 3 - ul )  | ( v0 = ul ; ( move 4 , ua - v0 ; pen ua / v0 ) )  
[25] move 3 * 3 , 2  | move ua + 3 , 2  | move 3 * 3 , 4 / 2  | move 3 * 3 , ua + 2  | move 3 * 3 , 2 - ua  | move 3 * 3 , 3 - ul  | move 3 * 3 , ul + ul  | move ua + 3 , ul + ul  | ( move 3 * 3 , 2 ; pen ul )  | ( move 3 , 2 ; move 3 * 2 , 0 )  | ( move 3 * 3 , 2 ; pen 2 / 3 )  | ( move 4 + 4 , 2 ; move ul , 0 )  | ( move 4 * 2 , 2 ; move ul , 0 )  | ( move 4 + 4 , 2 ; move ul , ua )  | ( move 3 * 3 , 2 - ua ; v0 = 2 )  | ( move 2 , ua + 2 ; move 4 + 3 , ua )  | ( move 0 , ul ; move 3 * 3 , ua + ul )  | ( move 4 , ua + 2 ; move 4 + ul , ua )  | ( move ul , ua + 2 ; move 4 * 2 , ua )  | ( v0 = 2 + ul ; move v0 * v0 , 2 )  | ( move 3 * 3 , ul + ul ; v0 = 4 + ul )  | ( move 0 , 2 ; move 0 , ua ; move 3 * 3 , ua )  | ( move 3 * 3 , 2 ; pen 2 ; v0 = 4 / ua )  | ( v0 = 3 ; move v0 * v0 , v0 - ul )  | ( ( move ua , 2 ; move 3 , ua ) ; move 0 , 2 )  | ( move 4 * 2 , 2 ; ( pen ul ; move ul , 0 ) )  | ( move 0 , ul ; move 4 * 2 , ul ; move ul , 0 )  | ( move 3 * 2 , 2 ; ( move ul , 0 ; move 2 , 0 ) )  | ( move ua , ul + ul ; move ul , 0 ; move ua / 4 , ua )  | ( move 4 + 3 , ul + ul ; v0 = ua ; move 2 , v0 )  | ( v0 = 4 + ul ; move v0 + 4 , 2 ; pen ul / v0 )  
[26] move 4 * 2 , 2  | move 4 + 4 , 2  | move ua + 2 , 2  | move 4 + 4 , 4 - 2  | move 4 + 4 , ua + 2  | move 4 * 2 , ua + 2  | move 4 * 2 , 2 - ua  | move 4 + 4 , 2 - ua  | move 4 * 2 , 3 - ul  | move ua + 2 , 2 - ua  | move 4 + 4 , ul + ul  | move 4 * 2 , ul + ul  | move ua + 2 , ul + ul  | ( move 4 , 2 ; move 4 , ua )  | ( move 3 * 2 , 2 ; move 2 , 0 )  | ( move 4 * 2 , 2 ; move 0 , 2 )  | ( move 4 + 4 , 2 ; v0 = 2 )  | ( pen 3 - 2 ; move 4 * 2 , 2 )  | ( move 4 * 2 , 4 / 2 ; pen 4 )  | ( move ua , 2 ; move 4 - 2 , 0 )  | ( move 4 , 2 - ua ; move 4 , 0 )  | ( move 0 , ul ; move 4 * 2 , ul )  | ( move ua + ul , 2 ; move ul , 0 )  | ( v0 = 4 ; move v0 + v0 , 2 )  | ( move 4 * 2 , ua + 2 ; v0 = 4 )  | ( move 3 , ul + ul ; move 3 + 2 , 0 )  | ( pen ul ; move 4 , 2 ; move 2 * 2 , ua )  | ( move 4 * 2 , 2 ; pen ua ; v0 = ua )  | ( move 3 , 2 ; move 4 + ul , ua ; pen 3 + 2 )  | ( v0 = ul ; move 0 , v0 ; move 4 * 2 , v0 )  | ( ( move 4 * 2 , 3 - ul ; pen 3 ) ; v0 = ul )  
[27] move 4 + 3 , 3  | move ua + ul , 3  | move 4 + 3 , ua + 3  | move 4 + 3 , 2 + ul  | move 4 + 3 , 3 - ua  | move ua + ul , 2 + ul  | move ua + ul , ua + 3  | move ua + ul , 3 - ua  | move ua + ul , 4 - ul  | ( move 4 + 3 , 3 ; pen 2 )  | ( move 4 + 3 , 3 ; pen ua )  | ( pen ul ; move 4 + 3 , 3 )  | ( move ul , 3 ; move ua , ua )  | ( move ua + ul , 3 ; pen ua )  | ( pen ul ; move ua + ul , 3 )  | ( move ua , 3 ; move 2 / 3 , 0 )  | ( move ua + ul , 3 ; v0 = 0 )  | ( move 3 , 2 + ul ; move 4 , ua )  | ( move 4 + ul , 3 ; move 2 , ua )  | ( move ua + ul , 3 ; v0 = ua )  | ( move ua + ul , 3 ; v0 = ul )  | ( move ua + ul , ua + 3 ; pen 4 )  | ( v0 = ua + ul ; move v0 , 3 )  | ( move 4 , 3 ; move 3 , ua ; pen ua )  | ( v0 = 2 + ul ; move ua + ul , v0 )  | ( move ua + ul , 2 + ul ; v0 = ua - 4 )  | ( move ua + ul , 2 + ul ; v0 = 4 - ul )  | ( ( v0 = ul ; move ua + ul , 3 ) ; v1 = 3 )  | ( move 4 , 3 ; ( pen ul ; move 3 , 0 ; pen 0 - ul ) )  | ( move ua + ul , 3 ; v0 = ul ; v1 = v0 + 2 )  | ( move 3 + 2 , 2 + ul ; move 2 , 0 - ua ; pen ua + 2 )  
[28] move 4 , 3 + 3  | move 4 , 4 + 2  | move 4 , 3 * 2  | move 0 - 4 , 4 + 2  | move 2 + 2 , 3 * 2  | move 2 * 2 , 3 + 3  | move 2 * 2 , 4 + 2  | move ua - 2 , 3 + 3  | move ua - 2 , 4 + 2  | move 2 - ua , 4 + 2  | move 2 - ua , 3 + 3  | move ua - 2 , 3 * 2  | move 2 - ua , 3 * 2  | move 3 + ul , 4 + 2  | move 3 + ul , 3 * 2  | ( move 0 , 4 ; move 4 , 2 )  | ( move 0 , 2 + ul ; move 4 , 3 )  | ( move 0 , 3 * 2 ; move 4 , ua )  | ( move 3 + ul , 4 + 2 ; pen 2 )  | ( pen ul ; move 2 - ua , 3 * 2 )  | ( move 0 , 2 ; move 3 + ul , 2 * 2 )  | ( move 4 , 4 + 2 ; v0 = 2 + ul )  | ( move 0 , 3 - ua ; move 4 , 2 + ul )  | ( move 4 , 3 * 2 ; pen ul ; v0 = ul )  | ( move 2 * 2 , 4 + 2 ; v0 = ul / 3 )  | ( v0 = 3 ; move v0 + ul , v0 + v0 )  | ( v0 = 3 * 2 ; v1 = 3 ; move 4 , v0 )  | ( move 4 , 4 + 2 ; v0 = 2 - 4 ; v1 = ul )  | ( ( move 2 + 2 , 4 + 2 ; v0 = ua ) ; pen 0 )  | ( pen ul ; v0 = 3 ; move 3 + ul , v0 + v0 )  | ( pen ul / 2 ; v0 = ul + ul ; move 4 , v0 + 4 )  | ( move 0 , 3 + 2 ; ( move 2 * 2 , ul ; v0 = ul ) )  
[29] move 4 + 3 , 4  | move ua + ul , 4  | move 4 + 3 , 3 + ul  | move ua + ul , 2 + 2  | move ua + ul , 2 * 2  | move ua + ul , ua + 4  | move ua + ul , 3 + ul  | move ua + ul , 4 - ua  | ( move ua , 4 ; move ul , 0 )  | ( move ua + ul , 4 ; pen 0 )  | ( move ua + ul , 4 ; pen 4 )  | ( move ua , 4 ; move ul , ua )  | ( move ua + ul , 4 ; pen ua )  | ( move ua - ul , 4 ; move 2 , 0 )  | ( move ul , 3 + ul ; move ua , 0 )  | ( move ul , ua + 4 ; move ua , 0 )  | ( move ua , 4 ; move 2 - ul , ua )  | ( move ua , 3 + ul ; move ul , ua )  | ( move ua + ul , 4 ; pen ua * ua )  | ( move ua + ul , 4 ; pen ul - ua )  | ( v0 = ul ; move ua + v0 , 4 )  | ( pen ul ; move ul , 4 ; move ua , 0 )  | ( move 3 - 2 , 4 - ua ; move ua , ua )  | ( move ua + ul , 4 - ua ; v0 = 0 )  | ( v0 = ul ; move ua + ul , v0 * 4 )  | ( pen ul ; move ua , 4 ; move ul , ua + ua )  | ( v0 = 4 + ul ; move ua + ul , 2 + 2 )  | ( move ul , 4 ; v0 = ua ; move v0 , v0 )  | ( move ua , 4 ; move ul , 0 ; v0 = 2 - ul )  | ( pen ul ; move ua + ul , ua + 4 ; move 0 , ua )  | ( ( pen ul ; v0 = ua + ul ) ; move v0 , 4 )  
[30] move 4 , 4 + 3  | move 2 + 2 , 4 + 3  | move 0 - 4 , 4 + 3  | move 2 * 2 , 4 + 3  | move 3 + ul , 4 + 3  | ( move 0 , 3 ; move 4 , 4 )  | ( move 0 , 4 ; move 4 , 3 )  | ( move 4 , 4 + 3 ; pen 0 )  | ( move 4 , 4 + 3 ; pen ua )  | ( move 4 , 4 + 3 ; pen ul )  | ( pen ul ; move 4 , 4 + 3 )  | ( move 4 , 4 + 3 ; v0 = 2 )  | ( move 0 , ua + 4 ; move 4 , 3 )  | ( move 0 , 2 + ul ; move 4 , 4 )  | ( move 0 , 4 ; move 4 , ua + 3 )  | ( move 4 , 4 + 3 ; move 0 , ul )  | ( pen ul / 2 ; move 4 , 4 + 3 )  | ( move ul , 4 + 3 ; move 3 , ua )  | ( move 4 , 4 + 3 ; pen ul + ul )  | ( v0 = 4 + 3 ; move 4 , v0 )  | ( move 4 , 4 + 3 ; v0 = 4 * 2 )  | ( move 2 + 2 , 4 + 3 ; v0 = ua )  | ( move 4 , 4 + 3 ; v0 = 0 - ua )  | ( move 0 , ua + 4 ; move 3 + ul , 3 )  | ( move ul , 4 + 3 ; move 2 + ul , ua )  | ( move 0 , ul + ul ; move 4 , 4 + ul )  | ( v0 = 3 ; move ul + v0 , v0 + 4 )  | ( v0 = 4 ; move 0 , v0 ; move v0 , 3 )  | ( move 0 , 3 ; v0 = 4 ; move v0 , v0 )  | ( move 4 , 4 + 3 ; v0 = ul ; v1 = 2 )  | ( pen ul ; ( move 3 + ul , 4 + 3 ; pen ua ) )  | ( move 0 , 4 + ul ; move 3 + ul , 2 ; v0 = 2 + ul )  
[31] move 3 * 3 , 3  | move ua + 2 , 3  | move ua + ul , 3  | move 3 * 3 , 2 + ul  | move 3 * 3 , ua + 3  | move 3 * 3 , 3 - ua  | move 3 * 3 , 4 - ul  | ( move ua + ul , 3 ; pen ul - 2 )  | ( move 3 * 3 , 3 ; v0 = 2 - 4 )  | ( v0 = 3 ; move 3 * v0 , v0 )  | ( v0 = 3 ; move v0 * v0 , 3 )  | ( move 0 , ua ; move 3 * 3 , ua + 3 )  | ( move 4 + ul , 3 ; move 4 , ua + ua )  | ( v0 = 3 ; move v0 * v0 , v0 )  | ( move 3 * 3 , 3 ; pen 2 ; pen ul + ul )  | ( v0 = 3 ; move v0 * v0 , 3 - ua )  | ( move 4 , 3 ; ( move 3 , 0 ; move 2 , ua ) )  | ( move ul , 3 ; move 0 , 0 ; move 4 * 2 , ua )  | ( v0 = 2 + ul ; move v0 * v0 , v0 )  | ( move 3 * 2 , 3 ; move ul , 0 ; move 2 , ua )  | ( v0 = 4 - ul ; move v0 * v0 , v0 )  | ( move 3 * 3 , ua + 3 ; pen 0 ; move 0 , ul )  | ( pen ul ; v0 = 3 ; move v0 * v0 , v0 )  | ( move 2 / 3 , 3 ; move 4 * 2 , 0 ; pen 3 / 2 )  | ( move 4 , 3 ; move 3 + 2 , ua ; move 0 , ul / 4 )  | ( v0 = 3 ; move v0 * v0 , v0 ; pen v0 )  | ( v0 = 3 ; v1 = 3 * v0 ; move v1 , v0 )  | ( v0 = 4 - ul ; move 3 * v0 , v0 ; pen v0 )  | ( v0 = 3 ; v1 = v0 ; move v1 * v1 , v1 )  | ( move ua / 4 , 4 - ul ; move ua + ul , ua ; v0 = 4 )  | ( ( move 3 * 3 , 3 ; pen 3 ; pen ul ) ; move 0 , 4 + ul )  
[32] move 4 + 4 , 3  | move 4 * 2 , 3  | move ua + 2 , 3  | move 4 * 2 , ua + 3  | move 4 * 2 , 2 + ul  | move 4 + 4 , 2 + ul  | move 4 * 2 , 3 - ua  | move 4 * 2 , 4 - ul  | move ua + 2 , ua + 3  | move ua + 2 , 2 + ul  | move ua + 2 , 3 - ua  | move ua + 2 , 4 - ul  | ( move 4 * 2 , 3 ; pen 2 )  | ( move 4 * 2 , 3 ; v0 = 3 )  | ( move 4 * 2 , 3 ; move 0 , ul )  | ( move ua + 2 , 3 ; v0 = 4 )  | ( pen 2 / 4 ; move ua + 2 , 3 )  | ( move ua , 3 ; move 3 / 2 , ua )  | ( move ua + 2 , 3 ; pen ua - 4 )  | ( move ul , ua ; move ua + 2 , 3 )  | ( move ua , 3 ; move ua / 4 , ua )  | ( move ua / 4 , 0 ; move ua + 2 , 3 )  | ( move ul + ul , 2 + ul ; move ua , ua )  | ( move 2 , ua ; move ua + 2 , 3 ; pen ul )  | ( move ua + 2 , 3 ; v0 = 3 ; pen v0 )  | ( move ul , 3 ; move ul , ua ; move ua , ua )  | ( move ua + 2 , 2 + ul ; pen ul ; v0 = ul )  | ( move 4 * 2 , 3 ; ( move 0 , ul ; pen 4 + ul ) )  | ( move ua + 2 , 3 ; ( pen ua * ua ; pen 2 + ul ) )  | ( ( v0 = ua + 2 ; move v0 , 3 ) ; v1 = v0 )  | ( ( v0 = 3 - ul ; move v0 + ua , 3 ) ; pen v0 )  
[33] move 4 * 2 , 4  | move 4 + 4 , 4  | move ua + 2 , 4  | move ua + 3 , 4  | move 4 * 2 , 2 * 2  | move 4 + 4 , 3 + ul  | move 4 * 2 , 3 + ul  | move 4 * 2 , ua + 4  | move 4 + 4 , ua + 4  | move 3 * 3 , ua + 4  | move 4 + 4 , 4 - ua  | move 4 * 2 , 4 - ua  | ( move 4 , 4 ; move 4 , 0 )  | ( move 4 * 2 , 4 ; pen 3 )  | ( move 4 , 4 ; move 4 , ua )  | ( pen ul ; move 4 + 4 , 4 )  | ( move 4 * 2 , 4 ; pen ul )  | ( move 3 * 2 , 4 ; move 2 , 0 )  | ( move 0 , 4 ; move 4 * 2 , ua )  | ( move 3 + 2 , 4 ; move 3 , ua )  | ( v0 = 4 * 2 ; move v0 , 4 )  | ( v0 = 2 ; move v0 * 4 , 4 )  | ( v0 = 4 ; move v0 + 4 , v0 )  | ( pen ul / 2 ; move 4 * 2 , ua + 4 )  | ( v0 = 4 ; move v0 + v0 , v0 )  | ( v0 = 3 + ul ; move v0 + v0 , v0 )  | ( move 3 / 2 , 4 ; move ua , ua ; v0 = ul )  | ( move ua + 3 , 4 ; ( v0 = ua ; pen ul ) )  | ( v0 = 4 ; move v0 , v0 ; move v0 , ua )  | ( ( v0 = 4 ; move v0 , v0 ) ; move 4 , ua )  | ( v0 = 4 ; move v0 + v0 , v0 ; v1 = v0 )  
[34] move 4 , 3 * 3  | move 2 + 2 , 3 * 3  | move 0 - 4 , 3 * 3  | move 2 * 2 , 3 * 3  | move 3 + ul , 3 * 3  | ( move 4 , 3 * 3 ; pen 3 )  | ( move 4 , 3 * 3 ; pen ul )  | ( move ul , 3 * 3 ; move 3 , 0 )  | ( move 4 , 3 * 3 ; v0 = ua )  | ( move ul , 3 * 3 ; move 3 , ua )  | ( move 3 , 3 * 3 ; move ul , ua )  | ( v0 = 3 ; move 4 , 3 * v0 )  | ( move 4 , 3 * 3 ; pen ul ; pen 0 )  | ( v0 = 3 ; move 4 , v0 * v0 )  | ( move 3 , 3 * 3 ; move 4 - 3 , ua )  | ( move 0 , 4 * 2 ; move 3 + ul , ul )  | ( move 0 , 4 - ua ; move 4 , 4 + ul )  | ( move 2 , 3 * 3 ; move 3 - ul , ua )  | ( v0 = 4 + ul ; move 4 , v0 + 4 )  | ( move 0 , 4 + 2 ; move 4 , 3 ; pen ul )  | ( move 0 , 4 + ul ; move 4 , 4 ; pen 3 )  | ( move 0 , ul ; move 4 , 4 * 2 ; v0 = 4 )  | ( v0 = 3 ; move ul + v0 , v0 * v0 )  | ( move ul , 3 * 3 ; move 3 , ua ; v0 = 2 )  | ( v0 = 4 + ul ; move 3 + ul , 4 + v0 )  | ( move 3 + ul , 3 * 3 ; pen ua ; v0 = 2 )  | ( move ul , 3 * 3 ; v0 = 2 ; move 2 + ul , 0 )  
[35] move 4 , 4 * 2  | move 4 , 4 + 4  | move 2 + 2 , 4 * 2  | move 0 - 4 , 4 * 2  | move 2 - ua , 4 + 4  | move 3 + ul , 4 + 4  | move 3 + ul , 4 * 2  | move 4 + ul , 4 + 4  | ( move 0 , 4 ; move 4 , 4 )  | ( move 4 , 4 + 4 ; pen 2 )  | ( move 4 , 4 + 4 ; move 0 , 0 )  | ( move 4 , 4 * 2 ; v0 = 4 )  | ( move 2 + 2 , 4 * 2 ; pen 3 )  | ( move 4 , 4 + 4 ; move 0 , ua )  | ( v0 = ua ; move 4 , 4 * 2 )  | ( move 4 , 4 + 4 ; v0 = ua )  | ( move 4 , 4 * 2 ; v0 = ul )  | ( v0 = 4 ; move v0 , 4 + v0 )  | ( v0 = 4 ; move v0 , 2 * v0 )  | ( move 4 , 4 * 2 ; move 0 , ua - 4 )  | ( move 3 + ul , 4 * 2 ; move 0 , ul )  | ( move 0 , 4 ; move 4 , 4 ; v0 = 3 )  | ( v0 = 4 ; move v0 , v0 + v0 )  | ( v0 = 4 ; move 0 , 4 ; move v0 , v0 )  | ( v0 = 3 + ul ; move v0 , v0 + v0 )  | ( pen ul ; v0 = 4 ; move v0 , v0 + 4 )  | ( v0 = 4 ; move 0 , v0 ; move v0 , v0 )  | ( v0 = 2 ; ( move 4 , 4 * v0 ; pen v0 ) )  | ( v0 = 4 ; move v0 , v0 + v0 ; pen v0 )  | ( move 3 + ul , 4 * 2 ; pen ua + ul ; v0 = 0 )  | ( move ul , 4 + 4 ; ( move 3 , 0 ; pen 3 ; pen 0 ) )  | ( ( v0 = 4 ; move v0 , 2 * v0 ) ; v1 = v0 )  
[36] move 4 , 3 / 2  | move 2 + 2 , 3 / 2  | move 0 - 4 , 3 / 2  | move 3 + ul , 3 / 2  | ( move 4 , 3 / 2 ; pen ul )  | ( pen ul ; move 4 , 3 / 2 )  | ( move 4 , 3 / 2 ; move 0 , 3 )  | ( move 4 , 3 / 2 ; v0 = 0 )  | ( move 4 , 3 / 2 ; v0 = 4 )  | ( move 4 , 3 / 2 ; v0 = ul )  | ( move 2 + 2 , 3 / 2 ; pen ul )  | ( move 4 , 3 / 2 ; pen ua + 2 )  | ( move 0 , ul / 2 ; move 4 , ul )  | ( move 4 , 3 / 2 ; pen ul / ua )  | ( move 0 , 3 / ua ; move 4 , ul - ua )  | ( v0 = 2 + 2 ; move v0 , 3 / 2 )  | ( move 2 * 2 , 3 / 2 ; pen 2 ; pen ua )  | ( move 0 , 3 / ua ; move 4 , ul ; pen 4 )  | ( move 4 , 3 / 2 ; pen ua ; v0 = ul )  | ( v0 = 2 ; move v0 * v0 , 3 / v0 )  | ( move 0 , 3 / ua ; move 3 + ul , ul ; pen ua )  | ( v0 = 2 ; v1 = 3 / v0 ; move 4 , v1 )  | ( move 2 * 2 , 3 / 2 ; v0 = 2 ; v1 = ul )  | ( move 0 , 2 + 2 ; move 2 , 4 / ua ; move 2 , ua )  | ( move 0 , ul - ua ; ( move 4 , ul / 2 ; v0 = ua ) )  
[37] move 4 , 2 / 3  | move 4 , 4 / ua  | move 2 + 2 , 2 / 3  | move 0 - 4 , 2 / 3  | move 2 * 2 , 2 / 3  | move 3 + ul , 2 / 3  | move 3 + ul , 4 / ua  | ( move 4 , 2 / 3 ; pen 2 )  | ( move 4 , 2 / 3 ; pen ul )  | ( v0 = 2 / 3 ; move 4 , v0 )  | ( move 4 , 2 / 3 ; pen ua ; pen 3 - ul )  | ( v0 = 3 ; move 4 , 2 / v0 ; pen 3 )  | ( move 3 + ul , 2 / 3 ; move 0 , ua + ul )  | ( v0 = 2 ; move v0 + v0 , v0 / 3 )  | ( v0 = 2 ; move v0 * v0 , v0 / 3 )  | ( move 4 , 2 / 3 ; v0 = ul ; v1 = 0 )  | ( move 4 , 2 / 3 ; v0 = ua + ul ; v1 = ua )  | ( pen ul ; ( v0 = ua + ua ; move 4 , 2 / 3 ) )  | ( move 3 , 2 / 3 ; pen ua ; ( pen ul ; move ul , ua ) )  
[38] move 3 * 3 , 4  | move ua + 3 , 4  | move ua + 4 , 4  | move ua + 4 , 2 + 2  | move ua + 3 , 2 * 2  | move 3 * 3 , 3 + ul  | move 3 * 3 , 4 - ua  | move ua + 3 , 3 + ul  | move ua + 3 , ua + 4  | move ua + 3 , 4 - ua  | move ua + 4 , 3 + ul  | ( move ua + 3 , 4 ; pen 3 )  | ( move ua + 3 , 4 ; pen 4 )  | ( move ua , 4 ; move 3 , ua )  | ( pen ul ; move ua + 3 , 4 )  | ( move 4 + 3 , 4 ; move 2 , ua )  | ( move ua + 3 , 3 + ul ; pen 2 )  | ( move ua + ul , 4 ; move 2 , ua )  | ( move ua + 3 , 4 - ua ; pen ua )  | ( move 3 * 3 , ua + 4 ; v0 = ul )  | ( move 4 , 4 ; move 4 , 0 ; move ul , ua )  | ( move ua + 3 , 4 ; v0 = 3 ; pen ul )  | ( ( pen ul ; move 3 , 4 ) ; move ua , ua )  | ( move ua , 4 ; v0 = 3 ; move v0 , 0 )  | ( move ua - 3 , 2 + 2 ; move 3 + 3 , ua )  | ( v0 = ul - 4 ; move v0 * v0 , 4 )  | ( move ul + ul , 3 + ul ; move 4 + 3 , 0 )  | ( move ua + 3 , 4 ; v0 = ul / 3 ; pen ul )  | ( move ua , 4 ; move 3 + ul , ua ; v0 = 0 - ul )  | ( ( move ua , 3 + ul ; move ul , 0 ) ; move 2 , ua ; pen 0 )  
[39] move 4 , 4 * 3  | move 2 + 2 , 4 * 3  | move 0 - 4 , 4 * 3  | move 2 * 2 , 4 * 3  | move 3 + ul , 4 * 3  | ( move 4 , 4 * 3 ; pen 0 )  | ( move 4 , 4 * 3 ; pen 2 )  | ( move 4 , 4 * 3 ; pen 4 )  | ( move 4 , 4 * 3 ; pen ul )  | ( move 4 , 4 * 3 ; move 0 , 0 )  | ( move 4 , 4 * 3 ; move 0 , 2 )  | ( move 4 , 4 * 3 ; v0 = 0 )  | ( move 4 , 4 * 3 ; v0 = ul )  | ( move ul , 4 * 3 ; move 3 , ua )  | ( v0 = 4 ; move 4 , v0 * 3 )  | ( pen 0 ; pen ul ; move 4 , 4 * 3 )  | ( v0 = 4 ; move v0 , 3 * v0 )  | ( move 2 , 4 * 3 ; move 3 - ul , ua )  | ( move ua / 3 , 4 * 3 ; move 2 , ua )  | ( move 3 + ul , 4 * 3 ; pen ul - 2 )  | ( v0 = 4 ; move 3 + ul , 3 * v0 )  | ( move 4 , 4 * 3 ; pen 0 ; v0 = ua )  | ( move 4 , 4 * 3 ; pen ua ; v0 = ul )  | ( move 4 , 4 * 3 ; v0 = 2 ; pen v0 )  | ( move 2 * 2 , 4 * 3 ; v0 = ua - ul )  | ( move 0 , ul ; move 0 , ua / 4 ; move 4 , 0 )  | ( move 4 , 4 * 3 ; v0 = ua ; v1 = ua )  | ( v0 = 4 ; v1 = ul ; move v0 , 4 * 3 )  | ( v0 = 4 ; ( move v0 , 3 * v0 ; pen ua ) )  | ( move 0 , 4 * 3 ; move ul + ul , 0 ; move 4 - 2 , ua )  | ( ( move 4 , 4 * 3 ; v0 = ua ) ; v1 = v0 - ul )  | ( move ua / 3 , 4 * 3 ; v0 = ul + ul ; move v0 , ua )  
[40] move 4 , 2 / 4  | move 4 , ul / 2  | move 4 , 3 / ua  | move 2 + 2 , 2 / 4  | move 2 + 2 , ul / 2  | move 0 - 4 , ul / 2  | move 2 * 2 , ul / 2  | move 3 + ul , 2 / 4  | move 3 + ul , ul / 2  | ( move 4 , ul / 2 ; pen 0 )  | ( move 4 , 2 / 4 ; pen ua )  | ( pen ul ; move 4 , ul / 2 )  | ( move 4 , 2 / 4 ; v0 = 0 )  | ( move 4 , ul / 2 ; move 0 , 0 )  | ( move 4 , 2 / 4 ; move 0 , ul )  | ( move 4 , ul / 2 ; v0 = ua )  | ( v0 = ul ; move 4 , ul / 2 )  | ( move 4 , ul / 2 ; v0 = ul )  | ( move 3 , ul / 2 ; move ul , ua )  | ( move 3 + ul , ul / 2 ; pen ul )  | ( v0 = ul / 2 ; move 4 , v0 )  | ( move 2 , 2 / 4 ; move ul + ul , 0 )  | ( move 4 , ul / 2 ; v0 = ua * 2 )  | ( move 4 , 3 / ua ; v0 = ua / 2 )  | ( v0 = 2 * 2 ; move v0 , ul / 2 )  | ( move 4 , 2 / 4 ; v0 = 2 ; pen ul )  | ( move 0 - 4 , ul / 2 ; move 0 , 2 - ua )  | ( v0 = 3 + ul ; move v0 , 2 / v0 )  | ( move 4 , ul / 2 ; pen ul ; v0 = ua * 4 )  | ( v0 = ul ; ( move 4 , ul / 2 ; pen ul ) )  | ( v0 = 2 ; move 4 , ul / v0 ; v1 = v0 )  | ( v0 = ul + ul ; move v0 * v0 , ul / v0 )  
[41] move 4 , 3 / 4  | move 2 + 2 , 3 / 4  | move 0 - 4 , 3 / 4  | move 3 + ul , 3 / 4  | ( move 4 , 3 / 4 ; pen 0 )  | ( move 4 , 3 / 4 ; pen ua )  | ( move 4 , 3 / 4 ; pen ul )  | ( move 4 , 3 / 4 ; move 0 , 4 )  | ( v0 = ul ; move 4 , 3 / 4 )  | ( move 3 + ul , 3 / 4 ; pen ul )  | ( v0 = 4 ; move v0 , 3 / v0 )  | ( move 4 , 3 / 4 ; v0 = 3 / ua )  | ( move 0 , ua * ua ; move 4 , 2 - 3 )  | ( move ul , 3 / 4 ; move 4 - ul , 0 )  | ( move 4 , 3 / 4 ; v0 = ua ; pen v0 )  | ( move 4 , 3 / 4 ; pen 0 - ua ; v0 = 0 )  | ( ( move ul , 3 / 4 ; move 3 , ua ) ; v0 = 4 )  | ( move 3 , 3 / 4 ; move ul , ua + ua ; v0 = 0 )  | ( ( move 4 , 3 / 4 ; v0 = ul ) ; pen v0 - ul )  | ( v0 = 3 ; move ul + v0 , v0 / 4 ; v1 = v0 )  | ( v0 = 3 + ul ; move v0 , 3 / v0 ; pen v0 * ua )  
[42] move 4 , 4 * 4  | move 4 , 2 / ua  | move 4 , ul / 3  | move 2 + 2 , 4 * 4  | move 3 + ul , 4 * 4  | move 3 + ul , 2 / ua  | move 3 + ul , ul / 3  | ( move 4 , 4 * 4 ; move 0 , 0 )  | ( move 4 , 4 * 4 ; v0 = 2 )  | ( pen 3 - 2 ; move 4 , 4 * 4 )  | ( move 4 , 4 * 4 ; v0 = ul )  | ( move 4 , 4 * 4 ; pen ul + ul )  | ( v0 = 4 ; move v0 , 4 * 4 )  | ( v0 = 4 * 4 ; move 4 , v0 )  | ( v0 = 4 ; move 4 , 4 * v0 )  | ( v0 = 3 ; move 4 , ul / v0 )  | ( v0 = 4 ; move v0 , 4 * v0 )  | ( v0 = 4 ; move v0 , v0 * 4 )  | ( v0 = 4 ; move 4 , v0 * v0 )  | ( move 3 + ul , 4 * 4 ; v0 = 2 )  | ( move 4 , 4 * 4 ; v0 = 3 + ul )  | ( move ul + ul , 4 * 4 ; move 2 , 0 )  | ( move 4 , ul / 3 ; v0 = ua - 3 )  | ( v0 = 4 ; move v0 , v0 * v0 )  | ( v0 = ul - 4 ; move 4 , v0 + v0 )  | ( v0 = 2 + 2 ; move v0 , v0 * v0 )  | ( ( v0 = 4 ; move 4 , v0 * v0 ) ; pen ul )  | ( v0 = 4 ; move v0 , v0 * v0 ; v1 = ua )  | ( v0 = ua ; v1 = 4 ; move v1 , v1 * v1 )  | ( v0 = 4 ; v1 = v0 ; move v1 , v1 * v1 )  | ( v0 = 4 ; ( v1 = v0 ; move 4 , v1 * v0 ) )  
[43] move 4 , 4 / 3  | move 2 + 2 , 4 / 3  | move 0 - 4 , 4 / 3  | move 2 * 2 , 4 / 3  | move 3 + ul , 4 / 3  | ( move 4 , 4 / 3 ; pen 4 )  | ( move 0 , ul / 3 ; move 4 , ul )  | ( move 3 , 4 / 3 ; move ul , ua )  | ( move 4 , 4 / 3 ; pen ul - ua )  | ( v0 = 4 / 3 ; move 4 , v0 )  | ( v0 = 4 ; move v0 , v0 / 3 )  | ( move 3 + ul , 4 / 3 ; v0 = 3 )  | ( move 2 + 2 , 4 / 3 ; pen ua - 3 )  | ( move 4 , 4 / 3 ; move ul / ua , ua )  | ( move 4 , 4 / 3 ; ( pen ua ; pen 0 ) )  | ( v0 = 3 + ul ; move v0 , v0 / 3 )  | ( move 0 , 4 / 3 ; move 4 , 0 ; move 0 , ul )  | ( ( move 4 , 4 / 3 ; pen 4 - ul ) ; pen 2 )  | ( v0 = 2 / ua ; move 0 , ul ; move 4 , v0 )  | ( v0 = 4 / 3 ; move 4 , v0 ; v1 = v0 )  | ( move 0 , ua ; move 4 , 4 / 3 ; move 0 , 0 - ul )  | ( ( pen ul ; v0 = 4 ) ; move v0 , v0 / 3 )  | ( v0 = 4 ; move v0 , v0 / 3 ; v1 = v0 )  | ( ( move 4 , 4 / 3 ; pen ul ) ; pen 3 + ul ; pen 3 )  | ( move 3 + ul , 4 / 3 ; move ul / ua , ua ; v0 = 0 )  | ( ( v0 = 2 ; move 0 , ul / 3 ; move 4 , ul ) ; pen 0 )  
[44] move ua , 0 - 2  | move ua , 2 - 4  | move ua , ua - 2  | move ua , ul - 3  | move 0 - ua , ua - 2  | move ua + ul , 0 - 2  | ( move ua , ul - 3 ; pen ua )  | ( move ua , ul - 3 ; move 0 , 2 )  | ( move ua , ul - 3 ; move 0 , 4 )  | ( move ua , ul - 3 ; v0 = 4 )  | ( move ua , ul - 3 ; move 0 , ul )  | ( move ua , ul - 3 ; v0 = ua )  | ( move ua , ul - 3 ; v0 = ul )  | ( move ua , 0 - 2 ; pen ua + ua )  | ( move ua , ua - 2 ; pen 3 / ua )  | ( v0 = ua ; move ua , v0 - 2 )  | ( v0 = 2 ; move ua , ua - v0 )  | ( move ua , 0 - 2 ; v0 = 3 + 2 )  | ( move ua , ua - 2 ; move 0 , 0 - ul )  | ( move ua , ua - 2 ; v0 = ua - 3 )  | ( move ua , ul - 3 ; v0 = ua - 3 )  | ( move ua - ul , 0 - 2 ; move ul , ua )  | ( move ua , ul - 3 ; v0 = ul / ua )  | ( move ua , ul - 3 ; move 0 , 3 ; pen 3 )  | ( v0 = ua - 2 ; pen ul ; move ua , v0 )  | ( move ua , ul - 3 ; pen ul ; v0 = 4 * 3 )  | ( v0 = 2 ; move ua , ua - v0 ; v1 = ua )  | ( v0 = ul ; move ua , v0 - 3 ; v1 = ul )  | ( v0 = 2 + ul ; v1 = 2 ; move ua , ul - 3 )  | ( v0 = 3 ; ( move ua , ul - v0 ; pen v0 ) )  | ( v0 = ua - ul ; v1 = ul ; move ua , v0 - v1 )  | ( move ua , ul - 3 ; move 0 , ua ; ( pen 3 ; v0 = ul ) )  
[45] move 2 - ua , 0  | move ua - 2 , 0  | move ua - 2 , ua  | move 2 - ua , ua  | move 2 - ua , 0 - ua  | move ua - 2 , 0 - ua  | move 2 - ua , ua * 2  | move ua - 2 , ua * 3  | move 2 - ua , ua * 3  | move 2 - ua , ua * 4  | move ua - 2 , ua * 4  | move 2 - ua , ua + ua  | ( pen 2 ; move 4 , 0 )  | ( pen 2 ; move 4 , ua )  | ( pen 2 ; move 3 + ul , 0 )  | ( move 2 - ua , 0 ; pen ul )  | ( move 2 - ua , 0 ; v0 = 0 )  | ( move ua - 2 , 0 ; pen 3 + 2 )  | ( move 0 , ua ; move 2 - ua , 0 )  | ( move 2 - ua , ua ; v0 = 0 )  | ( move 2 - ua , ua ; v0 = 2 )  | ( move 2 - ua , 0 ; pen 4 - ul )  | ( move 2 , ua ; move 2 - ua , ua )  | ( pen ul + ul ; move 4 , ua * 2 )  | ( pen ul ; pen ua / 3 ; move 4 , 0 )  | ( pen 2 ; move 4 , ua * 2 ; pen 3 + 3 )  | ( move ua - 2 , ua * 3 ; pen 2 ; pen 0 )  | ( pen 2 ; move 4 , ua ; move 0 , ul / ua )  | ( move 2 , ua ; pen ul ; move 2 - ua , ua )  | ( move 2 - ua , ua ; v0 = 4 ; v1 = v0 )  | ( move 3 , ua ; ( pen 2 ; move ul , ua ) ; v0 = 0 )  
[46] move ua , 0 - 3  | move ua , ua - 3  | move ua , ul - 4  | move ua , ul / ua  | move 0 - ua , 0 - 3  | move 0 - ua , ua - 3  | move 0 - ua , ul - 4  | ( move ua , ul - 4 ; pen 2 )  | ( move ua , ua - 3 ; pen ul )  | ( move ua , ul - 4 ; pen ul )  | ( move ua , ua - 3 ; move 0 , 4 )  | ( move ua , 0 - 3 ; v0 = ua )  | ( move ua , ul - 4 ; pen 4 - 2 )  | ( move ua , ua - 3 ; move 0 , ul )  | ( move 0 , ul - 4 ; move ua , ua )  | ( move ua , ua - 3 ; v0 = ua )  | ( move ua , ul - 4 ; v0 = ua )  | ( move ua , ul - 4 ; v0 = ul )  | ( pen ul ; move 0 - ua , ul - 4 )  | ( move ua , ua - 3 ; pen 2 / ua )  | ( v0 = ul - 4 ; move ua , v0 )  | ( move ua , ul - 4 ; pen 0 ; pen 2 )  | ( move ua , ul - 4 ; v0 = ua + 3 )  | ( move ua , 0 - 3 ; move ul / ua , ua )  | ( v0 = 0 - ua ; move v0 , v0 - 3 )  | ( move 0 , 0 - 3 ; move ua , 0 ; pen ua + 3 )  | ( ( move ua , ua - 3 ; v0 = 3 ) ; v1 = v0 )  | ( v0 = 2 ; ( move ua , ul - 4 ; v1 = v0 ) )  | ( v0 = 0 - 3 ; ( move ua , v0 ; pen 3 / ua ) )  | ( move ua , ua - 3 ; ( v0 = ul ; v1 = v0 ) )  
[47] move ua , 3 + 2  | move ua , 4 + ul  | move 3 + 3 , 3 + 2  | move 4 + 2 , 3 + 2  | move 3 * 2 , 3 + 2  | move 4 + 2 , 4 + ul  | move 3 * 2 , 4 + ul  | move 0 - ua , 4 + ul  | ( move 0 , ul ; move ua , 4 )  | ( move 0 , 4 ; move ua , ul )  | ( pen ul ; move ua , 3 + 2 )  | ( move ua , 3 + 2 ; pen ul )  | ( pen ul ; move ua , 4 + ul )  | ( move ua , 3 + 2 ; move 0 , 4 )  | ( pen ul ; move 3 + 3 , 3 + 2 )  | ( move 0 , 2 - ua ; move ua , 3 )  | ( move 0 , 4 - ul ; move ua , 2 )  | ( move ua , 4 + ul ; pen 2 / 4 )  | ( move ua , 3 + 2 ; pen ul - ua )  | ( move ua , 3 + 2 ; pen ul + ul )  | ( move ua , 3 + 2 ; pen ua ; pen 4 )  | ( move 0 , ul ; move 4 + 2 , 3 + ul )  | ( move ua , 4 + ul ; move 0 , 3 - 4 )  | ( move 0 , ul ; move 0 - ua , 3 + ul )  | ( move ua , 4 + ul ; v0 = ua * 4 )  | ( move 0 , ul ; move ua , 4 - ua ; pen ua )  | ( move 0 , 4 + ul ; ( pen ul ; move ua , 0 ) )  | ( ( move 0 , ul ; pen 4 / ua ) ; move ua , 4 )  | ( move ua , 4 + ul ; pen ua ; v0 = ua * 2 )  | ( move ua , 4 + ul ; v0 = 4 ; v1 = v0 )  | ( move ua , 4 + ul ; pen ul - ua ; v0 = ul )  | ( v0 = 2 ; v1 = v0 ; move ua , v1 + 3 )  
[48] move ua , 0 - 4  | move ua , ua - 4  | move 3 + 3 , 0 - 4  | move 0 - ua , 0 - 4  | move 4 + 2 , ua - 4  | move 3 + 3 , ua - 4  | move 3 * 2 , ua - 4  | move 0 - ua , ua - 4  | ( move ua , ua - 4 ; pen 0 )  | ( move ua , 0 - 4 ; pen ua )  | ( move ua , ua - 4 ; pen 2 )  | ( move ua , ua - 4 ; pen ua )  | ( move ua , ua - 4 ; pen ul )  | ( pen ul ; move ua , ua - 4 )  | ( move ua , 0 - 4 ; move 0 , ul )  | ( move ua , 0 - 4 ; v0 = ua )  | ( move ua , ua - 4 ; v0 = 3 )  | ( pen ul / 3 ; move ua , 0 - 4 )  | ( move ua , ua - 4 ; v0 = ua )  | ( v0 = 0 ; move ua , v0 - 4 )  | ( pen ul ; pen ul ; move ua , 0 - 4 )  | ( v0 = ua ; move v0 , v0 - 4 )  | ( move ua , ua - 4 ; v0 = ul / ua )  | ( v0 = 3 ; move v0 + v0 , 0 - 4 )  | ( move ua , ua - 4 ; move 0 , 0 ; v0 = 2 )  | ( move 4 , ua - 4 ; move 2 , ua ; v0 = 0 )  | ( v0 = ua ; move v0 , v0 - 4 ; move 0 , 2 )  | ( move ua , 0 - 4 ; v0 = ua + ul ; v1 = ua )  | ( v0 = 3 + ul ; move ua , ua - v0 ; v1 = 0 )  | ( move 0 , 0 - 2 ; move ul , ua - 2 ; move 4 + ul , ua )  | ( move ua , ua - 4 ; ( v0 = 2 / 4 ; v1 = v0 ) )  | ( move ua , ua - 4 ; ( pen ua ; v0 = 3 ; v1 = ua ) )  
[49] move ua , 3 + 3  | move ua , 4 + 2  | move ua , 3 * 2  | move 4 + 2 , 4 + 2  | move 4 + 2 , 3 + 3  | move 3 * 2 , 4 + 2  | move 3 * 2 , 3 * 2  | move 0 - ua , 4 + 2  | move 0 - ua , 3 * 2  | ( move 0 , 2 ; move ua , 4 )  | ( move ua , 4 + 2 ; pen 4 )  | ( move ua , 4 + 2 ; pen ua )  | ( pen ul ; move ua , 4 + 2 )  | ( pen ul ; move ua , 3 * 2 )  | ( move 3 + 3 , 3 * 2 ; pen 2 )  | ( move ua , 3 * 2 ; v0 = 0 )  | ( move ua , 3 * 2 ; move 0 , ul )  | ( move ua , 3 * 2 ; v0 = ul )  | ( move ua , 3 * 2 ; pen ul - 4 )  | ( move 0 , 4 + ul ; move ua , ul )  | ( move ua , 4 + 2 ; pen ua + ul )  | ( move ua , 3 * 2 ; pen ul - ua )  | ( v0 = 4 + 2 ; move v0 , v0 )  | ( v0 = 3 * 2 ; move v0 , v0 )  | ( move ua , 3 * 2 ; move ul / 3 , 0 )  | ( move ua , 3 * 2 ; v0 = 4 ; pen ul )  | ( move ua , 4 + 2 ; move 0 , ua ; pen ul )  | ( move ul / 3 , ua + 3 ; move ua , ua + 3 )  | ( ( move 0 , 3 ; move ua , 2 + ul ) ; pen 4 )  | ( v0 = 3 ; move v0 + v0 , v0 + v0 )  | ( v0 = 4 + 2 ; move v0 , v0 ; v1 = v0 )  | ( v0 = 2 ; move ua , v0 + 4 ; v1 = ua * v0 )  
[50] move ua , 2 - 3  | move ua , 3 - 4  | move ua , 0 - ul  | move ua , ul - 2  | move ua , ua - ul  | move 0 - ua , 2 - 3  | move 0 - ua , ul - 2  | move 0 - ua , ua - ul  | ( move ua , 2 - 3 ; pen ul )  | ( pen ul ; move ua , 3 - 4 )  | ( move ua , ua - ul ; pen ua )  | ( move ua , ua - ul ; pen ul )  | ( pen ul ; move ua , ua - ul )  | ( move 0 , 0 - 4 ; move ua , 3 )  | ( move 0 , 0 - 2 ; move ua , ul )  | ( pen ul / 2 ; move ua , 3 - 4 )  | ( move ua , ua - ul ; move 0 , 4 )  | ( move ua , ul - 2 ; v0 = ul )  | ( v0 = ul ; move ua , ua - ul )  | ( move ua , 0 - ul ; pen ua + ul )  | ( move ua , 0 - ul ; move 0 , 2 / ua )  | ( move 3 , ua - ul ; move ua / 2 , 0 )  | ( move ua , ua - ul ; v0 = ua * 2 )  | ( move ua , ua - ul ; v0 = ul / ua )  | ( v0 = ua - ul ; move 0 - ua , v0 )  | ( v0 = ua ; move ua , v0 - ul ; pen ul )  | ( move ua , ua - ul ; pen 4 + ul ; v0 = ul )  | ( move ua , ua - ul ; move 0 , 0 ; move 0 , 4 / ua )  | ( v0 = ua ; v1 = ul ; move v0 , v0 - ul )  | ( move ua , ua - ul ; move 0 , ua - 4 ; pen 2 / ua )  | ( move ua , ua - ul ; v0 = ul ; v1 = v0 - ul )  | ( ( v0 = ua ; v1 = v0 ) ; move v0 , v0 - ul )  
[51] move 3 + 2 , ul  | move 4 + ul , ul  | move ua - ul , ul  | move ul - ua , ul  | move 3 + 2 , 2 - ul  | move 4 + ul , 3 - 2  | move 3 + 2 , ua + ul  | move 3 + 2 , ul - ua  | move 4 + ul , 2 - ul  | move 4 + ul , ua + ul  | move ua - ul , 2 - ul  | move 4 + ul , ul - ua  | ( move ul , ul ; move 4 , 0 )  | ( move 4 , ul ; move ul , 0 )  | ( move 3 + 2 , ul ; pen ul )  | ( move 4 + ul , ul ; pen ua )  | ( v0 = 3 ; move 4 + ul , ul )  | ( move ul , ul ; move 3 + ul , 0 )  | ( move 3 + ul , ul ; move ul , 0 )  | ( move 4 , ua + ul ; move ul , 0 )  | ( move 4 + ul , ul ; v0 = ul )  | ( move 4 + ul , ua + ul ; pen 4 )  | ( move ul - ua , ul ; v0 = ul )  | ( move 4 , ul ; move ul , 0 ; pen ul )  | ( pen ul / ua ; move 3 + 2 , ua + ul )  | ( move 4 , ul ; move ul , 0 ; v0 = 0 )  | ( move ul , ua + ul ; move 4 , ua ; pen 4 )  | ( move 3 + ul , ul ; move ul , ua + ua ; pen ul )  | ( ( v0 = ua ; v1 = 4 ) ; move v1 + ul , ul )  | ( v0 = 3 - 2 ; v1 = ua ; move 4 + v0 , v0 )  
[52] move ua , 4 + 3  | move 4 + 2 , 4 + 3  | move 3 * 2 , 4 + 3  | move 0 - ua , 4 + 3  | ( move 0 , 4 ; move ua , 3 )  | ( move 0 , 3 ; move ua , 4 )  | ( pen ul ; move ua , 4 + 3 )  | ( move ua , 4 + 3 ; pen ul )  | ( move ua , 4 + 3 ; move 0 , 0 )  | ( move ua , 4 + 3 ; v0 = 0 )  | ( move 0 , 4 ; move ua , ua + 3 )  | ( move 0 , 3 ; move ua , ua + 4 )  | ( move 0 , ul ; move ua , 3 * 2 )  | ( move ua , 4 + 3 ; v0 = ul )  | ( move ua , 4 + 3 ; pen ua + ul )  | ( move 4 + 2 , 4 + 3 ; move 0 , 0 )  | ( move 0 , 4 + 2 ; move 4 + 2 , ul )  | ( move 0 - ua , 4 + 3 ; v0 = ua )  | ( move 0 , 3 + ul ; move ua , 2 + ul )  | ( move 0 , 4 ; move ua , 3 ; v0 = 2 )  | ( move ua , 4 + 3 ; pen 3 ; pen ua + 4 )  | ( move 0 , 3 ; v0 = ua ; move v0 , 4 )  | ( move 0 , 4 ; ( move 0 , 0 ; move ua , 3 ) )  | ( move 0 , 2 ; move ua , 4 + ul ; move 0 , 0 )  | ( move 0 , 4 ; move 0 , ua + ua ; move ua , 3 )  | ( move 0 , 4 + 2 ; move ua , ul ; pen ua + 3 )  | ( v0 = 3 * 2 ; move 0 , 3 ; move v0 , 4 )  | ( move ua , 4 + 3 ; pen ul - ua ; v0 = ul )  | ( move 0 , 4 ; ( move ua , 3 ; v0 = 4 + 4 ) )  | ( v0 = 0 ; move v0 , 3 / v0 ; move ua , 4 )  | ( move 0 , 4 ; ( move ua , 3 ; v0 = 4 / ua ) )  | ( move 0 , ul - ua ; v0 = 4 + 2 ; move v0 , v0 )  
[53] move ua , 2 / 3  | move 0 - ua , 2 / 3  | ( move ua , 2 / 3 ; pen 0 )  | ( move ua , 2 / 3 ; pen ua )  | ( move ua , 2 / 3 ; pen ul )  | ( move 0 , 2 / 3 ; move ua , 0 )  | ( move ua , 2 / 3 ; move 0 , 0 )  | ( move 0 , 2 / 3 ; move ua , ua )  | ( move ua , 2 / 3 ; move 0 , ul )  | ( move ua , 2 / 3 ; v0 = ua )  | ( v0 = ua ; move v0 , 2 / 3 )  | ( v0 = 3 ; move ua , 2 / v0 )  | ( move 0 , ua * 3 ; move ua , 2 / 3 )  | ( move ua , 2 / 3 ; pen 2 + 2 ; pen 3 )  | ( move ua , 2 / 3 ; pen 0 ; pen 4 - ul )  | ( v0 = ul / 3 ; move ua , v0 + v0 )  | ( v0 = 2 ; move ua , v0 / 3 ; pen ua )  | ( move ua , 2 / 3 ; pen 4 - 2 ; pen 3 * 2 )  | ( move ua , 2 / 3 ; v0 = ul - ua ; pen v0 )  | ( v0 = ua ; move 0 , 2 / 3 ; move v0 , v0 )  | ( v0 = ul ; move v0 * ua , 2 / 3 ; pen v0 )  | ( move ua , 2 / 3 ; ( v0 = ul ; pen 0 ) ; pen v0 )  
[54] move ua , 3 * 3  | move 0 - ua , 3 * 3  | ( move ua , 3 * 3 ; pen 2 )  | ( move ua , 3 * 3 ; pen 3 )  | ( pen ul ; move ua , 3 * 3 )  | ( move 0 , 0 ; move ua , 3 * 3 )  | ( move 0 , 3 * 3 ; move ua , 0 )  | ( move 0 , 3 ; move ua , 3 + 3 )  | ( move ua , 3 * 3 ; move 0 , 3 )  | ( move ua , 3 * 3 ; v0 = 2 )  | ( v0 = ua ; move ua , 3 * 3 )  | ( pen 2 - ul ; move ua , 3 * 3 )  | ( move ua , 3 * 3 ; pen ua * 4 )  | ( move ua , 3 * 3 ; pen ua + ul )  | ( v0 = 3 ; move ua , v0 * 3 )  | ( v0 = ua ; move v0 , 3 * 3 )  | ( v0 = 3 * 3 ; move ua , v0 )  | ( pen ul ; move ua , 3 * 3 ; pen ul )  | ( v0 = 3 ; move ua , v0 * v0 )  | ( move 0 , ul + ul ; move ua , 4 + 3 )  | ( v0 = 2 + ul ; move ua , v0 * v0 )  | ( v0 = ua ; move v0 , 3 * 3 ; pen ul )  | ( pen ul ; ( move ua , 3 * 3 ; pen 2 / 4 ) )  | ( ( move 0 , 4 + ul ; pen ul ) ; move ua , 4 )  | ( move ul , 3 * 3 ; move ua - ul , ua ; pen 0 )  | ( move ua , 3 * 3 ; v0 = 0 ; pen ua - v0 )  | ( v0 = ua + 3 ; move ua , 3 * v0 ; pen ua )  | ( v0 = 3 ; move ua , v0 * v0 ; v1 = 4 )  | ( ( move ua , 3 * 3 ; v0 = 0 ) ; pen ua * 3 )  | ( ( move 0 , 3 + ul ; move ua , 4 + ul ) ; pen ua )  | ( v0 = 3 ; ( move ua , v0 * v0 ; pen v0 ) )  | ( v0 = 3 * 3 ; move ua , v0 ; v1 = ul - v0 )  
[55] move ua , 3 / 2  | move 0 - ua , 3 / 2  | ( move ua , 3 / 2 ; pen ul )  | ( move 0 , 0 ; move ua , 3 / 2 )  | ( move ua , 3 / 2 ; move 0 , ua )  | ( move ua , 3 / 2 ; v0 = ua )  | ( move ua , 3 / 2 ; v0 = ul )  | ( move ua , 3 / 2 ; pen 3 / ua )  | ( move 0 , ul / 2 ; move ua , ul )  | ( move 0 , ul ; move ua , ul / 2 )  | ( move ua , 3 / 2 ; pen ua * ua )  | ( move ua , 3 / 2 ; v0 = ua * 2 )  | ( move 3 * 2 , 3 / 2 ; move ul / 4 , 0 )  | ( pen ua - 4 ; pen ul ; move ua , 3 / 2 )  | ( move 0 , ul ; move ua , ul / 2 ; pen ul )  | ( move 0 - ua , 3 / 2 ; v0 = 3 + ul )  | ( move ua , 3 / 2 ; move 0 , 2 ; v0 = ua )  | ( ( move ua , 3 / 2 ; pen 0 ) ; v0 = ul )  | ( move 0 - ua , 3 / 2 ; v0 = ua ; pen ul )  | ( pen ul ; v0 = 4 + ul ; move ua , 3 / 2 )  | ( ( move 0 , ul ; move ua , ul / 2 ) ; pen ua * 3 )  | ( move 0 , 2 / 4 ; move 3 * 2 , ul ; v0 = 3 - ua )  | ( move 0 , 2 / 4 ; ( pen ul ; move 0 , ua ) ; move ua , ul )  | ( move ua , 3 / 2 ; ( pen ua * ua ; pen 2 ) ; pen ua + ua )  
[56] move ua + 4 , 4  | move ua + 4 , 2 + 2  | move ua + 4 , 2 * 2  | move ua + 4 , ua + 4  | move ua + 4 , 3 + ul  | move ua + 4 , 4 - ua  | ( move ua , 4 ; move 4 , 0 )  | ( pen ul ; move ua + 4 , 4 )  | ( move 3 * 3 , 4 ; move 2 , ua )  | ( move ua + 4 , 4 ; pen 3 - 2 )  | ( move ua + 4 , 4 ; v0 = ul )  | ( move ul , 4 ; move ua + 3 , ua )  | ( move ua , 4 ; pen ul ; move 4 , 0 )  | ( v0 = 4 ; move v0 + ua , v0 )  | ( v0 = ua + 4 ; move v0 , v0 )  | ( move ua , ua + 4 ; move 4 , ua + ua )  | ( v0 = 4 + ul ; move 2 * v0 , 4 )  | ( move ua , 4 ; move 4 , 0 ; move 0 , ul )  | ( move 4 , 4 ; v0 = ua ; move ua , ua )  | ( move 4 , 4 ; move ua , ua ; pen 4 + ul )  | ( move 4 , 4 ; move ua , ua * 3 ; pen ul )  | ( move 3 + ul , 3 + ul ; move ua , ua * 4 )  | ( move 3 , 4 ; move ua + ul , 0 ; v0 = ua )  | ( ( move 4 + 3 , 4 ; move 0 , 0 ) ; move 3 , 0 )  | ( move 4 , 4 ; v0 = 3 ; move v0 + v0 , ua )  | ( v0 = ua ; move v0 + 4 , 4 ; v1 = v0 )  | ( move ul , 4 ; ( move ua + ul , ua ; move 2 , 0 ) )  | ( pen ul ; ( move 0 , ua + ul ; move ua + 4 , 3 ) )  | ( ( v0 = 0 ; v1 = 4 ) ; move ua + 4 , v1 )  | ( move ua + ul , 4 ; move ua / 3 , ua ; move ul , 0 )  | ( move ul , 4 ; v0 = 4 - ul ; move v0 + ua , 0 )  | ( pen ul ; ( move ul , 4 ; move 3 , 0 ) ; move ua , ua + ua )  
[57] move 4 + 3 , ul  | move ua + ul , ul  | move 4 + 3 , 2 - ul  | move 4 + 3 , ua + ul  | move 4 + 3 , ul - ua  | move ua + ul , ua + ul  | ( move 4 , ul ; move 3 , 0 )  | ( move 4 , ul ; move 3 , ua )  | ( move 3 + 3 , ul ; move ul , 0 )  | ( move 3 + ul , ul ; move 3 , 0 )  | ( move ua / 2 , ul ; move 4 , 0 )  | ( move 4 + 3 , ul ; v0 = ua )  | ( move 4 + 3 , ul ; pen 3 - ul )  | ( move 2 / 4 , ul ; move ua , ua )  | ( move ua , ul ; move 3 / 4 , ua )  | ( v0 = 4 ; move v0 + 3 , ul )  | ( v0 = 4 + 3 ; move v0 , ul )  | ( move 4 + 3 , ul ; pen 3 ; pen 2 )  | ( move 4 + 3 , ul ; v0 = 4 - ul )  | ( move ul , 2 - ul ; move 4 + 2 , ua )  | ( move ua / 3 , ul ; move 4 + ul , 0 )  | ( move 3 , ul ; move 3 + ul , ua * 3 )  | ( pen ul ; move 2 / 3 , ul ; move ua , 0 )  | ( move ul / 2 , ul ; pen ul ; move ua , 0 )  | ( move ul , ul ; move 3 + 2 , 0 ; move ul , ua )  | ( move 4 / ua , ul ; move ua , ua ; v0 = 4 )  | ( ( move 0 , ul ; move 4 + 3 , 0 ) ; v0 = 0 )  | ( move 3 , ul ; ( move 4 , ua ; v0 = 0 ) ; pen 0 )  | ( v0 = 4 + ul ; ( move 2 , ul ; move v0 , ua ) )  | ( move ua , ul ; ( move 3 / ua , ua ; v0 = 4 / ua ) )  | ( ( move ua , ul ; pen ul ) ; move ul / 2 , 0 ; v0 = ua )  
[58] move ua , 4 + 4  | move ua , 4 * 2  | move 0 - ua , 4 + 4  | move 0 - ua , 4 * 2  | ( move 0 , 4 ; move ua , 4 )  | ( move ua , 4 + 4 ; pen 2 )  | ( move ua , 4 * 2 ; pen 4 )  | ( move ua , 4 * 2 ; pen ua )  | ( move ua , 4 + 4 ; pen ul )  | ( pen ul ; move ua , 4 * 2 )  | ( move ua , 4 * 2 ; pen ul )  | ( v0 = 0 ; move ua , 4 * 2 )  | ( move 0 , 3 ; move ua , 4 + ul )  | ( move ua , 4 + 4 ; move 0 , ul )  | ( v0 = ua ; move ua , 4 + 4 )  | ( move ua , 4 * 2 ; v0 = ul )  | ( move ua , 4 * 2 ; pen ua + 3 )  | ( v0 = 4 * 2 ; move ua , v0 )  | ( pen ul ; move 0 , 4 ; move ua , 4 )  | ( move ua , 4 * 2 ; pen ul ; pen 0 )  | ( v0 = 4 ; move ua , v0 + v0 )  | ( v0 = ua + ul ; move ua , 4 + 4 )  | ( move 0 , 3 * 2 ; move ua , 2 ; pen 4 )  | ( move 0 , 4 ; move ua , 4 ; v0 = ul )  | ( pen ul ; move ua , 4 * 2 ; v0 = 3 )  | ( move 0 , 3 ; v0 = 4 + ul ; move ua , v0 )  | ( move ua , 4 * 2 ; v0 = 4 ; pen ul + v0 )  | ( ( move ua , 4 * 2 ; move 0 , 4 ) ; v0 = 4 )  | ( move 0 , 4 * 2 ; v0 = ua ; move v0 , v0 )  | ( v0 = 4 ; v1 = v0 ; move ua , 4 + v1 )  | ( v0 = 4 ; move ua , v0 + v0 ; v1 = v0 )  | ( move ua , 4 * 2 ; ( v0 = ul ; v1 = v0 ) )  
[59] move 3 * 3 , ul  | move ua + 2 , ul  | move ua + 3 , ul  | move ua + 4 , ul  | move ua + 3 , 2 - ul  | move 3 * 3 , ua + ul  | move 3 * 3 , ul - ua  | move ua + 3 , ua + ul  | move ua + 3 , ul - ua  | ( move 3 * 3 , ul ; pen ul )  | ( move 2 , ul ; move ua , ua )  | ( v0 = 0 ; move ua + 3 , ul )  | ( move ua + 3 , ul ; v0 = 2 )  | ( move 4 , ul ; move ua - ul , 0 )  | ( move ua + 3 , ul ; v0 = ul )  | ( move ul , ul ; move 4 + 4 , ua )  | ( move ua + 3 , ul ; pen ul - 4 )  | ( move ua , ul ; move 3 , ua + ua )  | ( move ul , ul ; move ua + 2 , ua )  | ( move ua - ul , ul ; move 4 , ua )  | ( v0 = ua ; move 3 + v0 , ul )  | ( v0 = 3 ; move v0 * v0 , ul )  | ( move ul , ul ; move 4 * 2 , ua + ua )  | ( move 3 , ul ; move ua , 0 ; v0 = 4 )  | ( move ua , ul ; v0 = 4 ; move 3 , ua )  | ( v0 = ul - 4 ; move v0 * v0 , ul )  | ( move ua + 2 , ul ; move ul , 0 ; v0 = ul )  | ( move ua + 3 , ul ; pen ul - 4 ; move 0 , ul )  | ( v0 = 3 ; move ua , 2 - ul ; move v0 , ua )  | ( move ua , ul ; v0 = 4 ; move 3 , v0 * ua )  | ( move ua + 3 , ul ; v0 = ul ; pen v0 * v0 )  | ( ( move 3 , ul ; move ua , ua ) ; ( pen 3 ; pen 4 ) )  
[60] move ua , 4 * 3  | move 0 - ua , 4 * 3  | ( move ua , 4 * 3 ; pen 0 )  | ( move ua , 4 * 3 ; pen 2 )  | ( move ua , 4 * 3 ; pen 4 )  | ( move ua , 4 * 3 ; pen ul )  | ( pen ul ; move ua , 4 * 3 )  | ( move ua , 4 * 3 ; move 0 , 0 )  | ( move ua , 4 * 3 ; v0 = 0 )  | ( move ua , 4 * 3 ; v0 = 2 )  | ( move ua , 4 * 3 ; v0 = ua )  | ( move ua , 4 * 3 ; v0 = ul )  | ( move ua , 4 * 3 ; pen ua + 2 )  | ( pen ul / 2 ; move ua , 4 * 3 )  | ( move 0 , ua / 4 ; move ua , ul )  | ( move ua , 4 * 3 ; pen ul - ua )  | ( v0 = 4 * 3 ; move ua , v0 )  | ( move ua , 4 * 3 ; pen 0 ; pen 0 )  | ( move ua , 4 * 3 ; v0 = ua * 2 )  | ( v0 = 3 + ul ; move ua , 3 * v0 )  | ( pen ul ; v0 = ua ; move v0 , 4 * 3 )  | ( move 0 , 4 * 2 ; move ua , 3 + ul ; pen 0 )  | ( v0 = 4 * 3 ; move ua , v0 ; pen v0 )  | ( move ua , 4 * 3 ; pen 0 ; v0 = 2 + ul )  | ( move ua , 4 * 3 ; pen ua ; v0 = 2 - ua )  | ( move ua , 4 * 3 ; pen 4 ; v0 = ua + ul )  | ( v0 = 4 + 2 ; move 0 - ua , v0 + v0 )  | ( move 0 - ua , 4 * 3 ; pen 3 * 2 ; v0 = 4 )  | ( move 0 , 4 ; v0 = 4 ; move ua , v0 + v0 )  | ( move 0 , ua ; ( v0 = 0 ; move ua , 4 * 3 ) )  | ( ( move ua , 4 * 3 ; pen ul ) ; v0 = ul - 3 )  | ( ( move ua , 4 * 3 ; ( pen 2 ; v0 = 2 ) ) ; pen 4 )  
[61] move 4 , 2 / ua  | move 4 , ul / 3  | move 2 + 2 , 2 / ua  | move 2 * 2 , 2 / ua  | move 2 + 2 , ul / 3  | move 2 * 2 , ul / 3  | move 3 + ul , 2 / ua  | move ua - 2 , ul / 3  | move 3 + ul , ul / 3  | ( move 4 , ul / 3 ; pen 3 )  | ( move 4 , ul / 3 ; pen ul )  | ( move 4 , ul / 3 ; v0 = 4 )  | ( v0 = ul ; move 4 , 2 / ua )  | ( move 4 , ul / 3 ; v0 = ua )  | ( pen ul ; move 0 - 4 , 2 / ua )  | ( v0 = 2 / ua ; move 4 , v0 )  | ( v0 = ul / 3 ; move 4 , v0 )  | ( pen 0 ; pen ul ; move 4 , ul / 3 )  | ( move 4 / 2 , 2 / ua ; move 2 , ua )  | ( move 4 , 2 / ua ; v0 = ul / 3 )  | ( move ul , 2 / ua ; move 2 + ul , 0 )  | ( move 4 , 2 / ua ; v0 = ua + ua )  | ( move 4 , 2 / ua ; v0 = ua * ua )  | ( move 4 , ul / 3 ; v0 = ul + ul )  | ( move 4 , 2 / ua ; v0 = 0 ; pen 0 )  | ( move 4 , 2 / ua ; ( move 0 , 4 ; pen ua ) )  | ( move 4 , ul / 3 ; ( pen ua + 4 ; pen ua ) )  | ( move 4 , ul / 3 ; v0 = 3 - 2 ; pen ua * 2 )  | ( ( move 3 + ul , ul / 3 ; pen 4 + ul ) ; pen 4 )  | ( move 4 , ul / 3 ; v0 = 4 - ul ; v1 = v0 )  | ( ( pen ul ; pen ul / 4 ) ; move 4 , ul / 3 ; v0 = ul )  
[62] move 4 * 2 , ul  | move 4 + 4 , ul  | move ua + 2 , ul  | move 4 + 4 , 3 - 2  | move 4 + 4 , 4 - 3  | move 4 * 2 , 2 - ul  | move 4 + 4 , 2 - ul  | move 4 + 4 , ua + ul  | move 4 * 2 , ua + ul  | move 4 + 4 , ul - ua  | move 4 * 2 , ul - ua  | ( move 4 * 2 , ul ; pen 0 )  | ( move 4 * 2 , ul ; pen 2 )  | ( move 4 * 2 , ul ; pen 4 )  | ( move 4 * 2 , ul ; pen ul )  | ( move 3 , ul ; move 3 + 2 , 0 )  | ( move 4 * 2 , ul ; pen 4 * 3 )  | ( move 3 + ul , ul ; move 4 , 0 )  | ( move 0 , ul ; move 4 * 2 , ua )  | ( move 4 + 4 , ul ; v0 = ua )  | ( move 4 * 2 , ul ; pen 4 / ua )  | ( move ua / 4 , ul ; move ua , 0 )  | ( pen ul ; move 4 * 2 , ua + ul )  | ( move 4 + 4 , ul ; pen ua + ul )  | ( move ua , ul ; move ua / 4 , ua )  | ( v0 = 4 + 4 ; move v0 , ul )  | ( move 4 * 2 , ul ; ( pen 4 ; pen 0 ) )  | ( v0 = 4 + 4 ; v1 = ul ; move v0 , v1 )  | ( v0 = 4 * 2 ; ( move v0 , ul ; pen v0 ) )  | ( move ua - ul , ul ; move 4 * 2 , ua / 2 ; v0 = ua )  | ( move 4 * 2 , ul ; ( pen 4 ; v0 = ul ) ; pen ua + ul )  
[63] move ua , 2 / 4  | move ua , ul / 2  | move 4 + 2 , 2 / 4  | move 3 + 3 , 2 / 4  | move 0 - ua , 2 / 4  | move 3 + 3 , ul / 2  | move 4 + 2 , ul / 2  | move 3 * 2 , ul / 2  | move 0 - ua , ul / 2  | ( move ua , ul / 2 ; pen 2 )  | ( move ua , 2 / 4 ; pen ul )  | ( move ua , ul / 2 ; pen ul )  | ( move ua , ul / 2 ; move 0 , 4 )  | ( move ua , ul / 2 ; v0 = 0 )  | ( move ua , ul / 2 ; v0 = ua )  | ( move ua , ul / 2 ; v0 = ul )  | ( move ua , 2 / 4 ; move 0 , 0 - ua )  | ( move ua , ul / 2 ; move 0 , ua * 2 )  | ( move ua , ul / 2 ; move 0 , 3 / ua )  | ( move ua , ul / 2 ; v0 = 3 + ul )  | ( v0 = 3 + 3 ; move v0 , 2 / 4 )  | ( move ua , ul / 2 ; v0 = ul + ul )  | ( move ua , 2 / 4 ; v0 = ua ; pen ua )  | ( v0 = 2 ; move 4 + v0 , ul / v0 )  | ( ( move ua , ul / 2 ; pen ul ) ; pen ul )  | ( move ua , ul / 2 ; v0 = ul ; v1 = ua )  | ( move ua , ul / 2 ; v0 = ua + ua ; pen v0 )  | ( v0 = 2 / 4 ; v1 = v0 ; move ua , v0 )  | ( move ua , ul / 2 ; move 0 , ua * 3 ; v0 = 4 )  | ( ( move ua , ul / 2 ; move 0 , ul ) ; v0 = ul )  | ( move 3 + 3 , 2 / 4 ; v0 = ul - ua ; v1 = ua )  | ( move 0 - ua , ul / 2 ; ( pen 3 ; v0 = ua + 4 ) )  
[64] move ua , 4 / 3  | move 0 - ua , 4 / 3  | ( move ua , 4 / 3 ; pen 2 )  | ( move ua , 4 / 3 ; pen 4 )  | ( pen ul ; move ua , 4 / 3 )  | ( move ua , 4 / 3 ; move 0 , 3 )  | ( move ua , 4 / 3 ; move 0 , 4 )  | ( move ua , 4 / 3 ; move 0 , ua )  | ( move 0 , 4 / 3 ; move ua , ua )  | ( move ua , 4 / 3 ; v0 = ua )  | ( move ua , 4 / 3 ; v0 = ul )  | ( move ua , 4 / 3 ; pen ua * 4 )  | ( move 0 , ul ; move ua , ul / 3 )  | ( move ua , 4 / 3 ; pen ul + ul )  | ( v0 = 4 / 3 ; move ua , v0 )  | ( v0 = 3 ; move ua , 4 / v0 )  | ( pen 4 ; pen ul ; move ua , 4 / 3 )  | ( move ua , 4 / 3 ; v0 = 3 * 2 )  | ( move ua , 4 / 3 ; move 0 , ul / 3 )  | ( move 0 , 3 / ua ; move ua , ua + 4 )  | ( move ul / ua , 4 / 3 ; move ua , 0 )  | ( move ua , 4 / 3 ; v0 = ul / ua )  | ( move ua , 4 / 3 ; pen 0 ; pen 4 / ua )  | ( v0 = 2 / 3 ; move ua , v0 + v0 )  | ( move 0 , ul ; move ua , ul / 3 ; pen ua )  | ( pen ul ; v0 = 3 ; move ua , 4 / v0 )  | ( move ua , 4 / 3 ; move 0 , 2 ; v0 = ul )  | ( pen 4 + ul ; pen 4 / ua ; move ua , 4 / 3 )  | ( v0 = ua ; move ua , 4 / 3 ; v1 = v0 )  | ( move 0 , ul / 3 ; move ua , ul ; v0 = 0 - 2 )  | ( move 0 - ua , 4 / 3 ; v0 = 4 ; v1 = v0 + ul )  
[65] move ua , 4 * 4  | move 3 + 3 , 4 * 4  | move 4 + 2 , 4 * 4  | move 3 * 2 , 4 * 4  | move 0 - ua , 4 * 4  | ( move ua , 4 * 4 ; pen 2 )  | ( move ua , 4 * 4 ; pen 4 )  | ( move ua , 4 * 4 ; pen ul )  | ( move 0 , 4 * 3 ; move ua , 4 )  | ( move ua , 4 * 4 ; v0 = 0 )  | ( move ua , 4 * 4 ; v0 = 3 )  | ( move ua , 4 * 4 ; move 0 , ul )  | ( move ua , 4 * 4 ; v0 = ua )  | ( move ua , 4 * 4 ; v0 = ul )  | ( move ua , 4 * 4 ; pen ua - 3 )  | ( v0 = 4 ; move ua , v0 * v0 )  | ( move ua , 4 * 4 ; v0 = 0 - ua )  | ( move ua , 4 * 4 ; v0 = 3 + ul )  | ( v0 = 0 - 4 ; move ua , v0 - 2 )  | ( move 4 + 2 , 4 * 4 ; move 0 , ua * 3 )  | ( v0 = 3 + ul ; move ua , v0 * v0 )  | ( v0 = ul - 4 ; move ua , v0 + v0 )  | ( v0 = 4 * 4 ; pen ul ; move ua , v0 )  | ( move 0 , 3 * 3 ; move 0 , 4 ; move ua , 3 )  | ( v0 = 4 ; move 0 , v0 * v0 ; move ua , 0 )  | ( v0 = ua + 4 ; move ua , v0 / 3 ; pen v0 )  | ( move ua , 4 * 4 ; v0 = ul ; pen v0 * v0 )  | ( ( move ua , 4 * 4 ; v0 = ua + ua ) ; v1 = ua )  | ( move ua , 4 * 4 ; ( v0 = 4 ; pen v0 ; pen v0 ) )  | ( ( move ua , 4 * 4 ; pen 2 - ul ; pen 3 ) ; v0 = 3 )  
[66] move ua , 3 / 4  | move 0 - ua , 3 / 4  | ( move ua , 3 / 4 ; pen 0 )  | ( move ua , 3 / 4 ; pen ua )  | ( pen ul ; move ua , 3 / 4 )  | ( move ua , 3 / 4 ; v0 = 0 )  | ( move ua , 3 / 4 ; pen 3 + 3 )  | ( move 0 , ua ; move ua , 3 / 4 )  | ( move ua , 3 / 4 ; v0 = ul )  | ( move ua , 3 / 4 ; pen ua + ua )  | ( v0 = ua ; move v0 , 3 / 4 )  | ( pen 0 ; pen ul ; move ua , 3 / 4 )  | ( v0 = 0 - ul ; move ua , 3 / 4 )  | ( move ua , 3 / 4 ; v0 = ul / 3 )  | ( v0 = 3 / 4 ; pen v0 ; move ua , v0 )  | ( ( move ua , 3 / 4 ; v0 = 0 ) ; pen v0 )  | ( move ua , 3 / 4 ; v0 = ua ; v1 = v0 )  | ( ( move 0 , 3 / 4 ; move ua , ua ) ; v0 = ua )  | ( ( move ua , 3 / 4 ; move 0 , ua + ua ) ; pen ua )  
[67] move 4 , ua / 4  | move 2 + 2 , ua / 4  | move 0 - 4 , ua / 4  | move 2 * 2 , ua / 4  | move ua - 2 , ua / 4  | move 3 + ul , ua / 4  | ( move 4 , ua / 4 ; pen 0 )  | ( move 4 , ua / 4 ; pen ua )  | ( move 4 , ua / 4 ; pen ul )  | ( move 0 , 3 ; move 4 , 4 * 2 )  | ( move 0 , ua / 4 ; move 4 , 0 )  | ( move 4 , ua / 4 ; move 0 , 4 )  | ( move 4 , ua / 4 ; v0 = 4 )  | ( v0 = ul ; move 4 , ua / 4 )  | ( move 4 , ua / 4 ; v0 = ul )  | ( move 3 , ua / 4 ; move ul , ua )  | ( move 4 , ua / 4 ; pen ul / ua )  | ( move 4 , ua / 4 ; v0 = 0 - 4 )  | ( move 4 , ua / 4 ; v0 = 2 / ua )  | ( move 4 , ua / 4 ; v0 = 3 / ua )  | ( move 3 + ul , ua / 4 ; pen 4 / 2 )  | ( move 4 , ua / 4 ; v0 = ua + ul )  | ( move 3 + ul , ua / 4 ; v0 = ua + 2 )  | ( v0 = 4 / ua ; move 2 + 2 , ul / v0 )  | ( pen ua + 3 ; pen ul ; move 3 + ul , ua / 4 )  | ( ( move 0 , ua / 4 ; v0 = 0 ) ; move 4 , 0 )  | ( ( move 0 , ua / 4 ; move 4 , 0 ) ; v0 = ua )  | ( v0 = 4 ; v1 = ua ; move 4 , v1 / v0 )  | ( move 4 , ua / 4 ; v0 = ua * ua ; v1 = 0 )  | ( move 3 , ua / 4 ; move ul , 0 ; v0 = ul - ua )  | ( ( pen ul ; move 4 , ua / 4 ) ; v0 = ua + ua )  | ( move 3 , ua / 4 ; v0 = ua ; move ul , v0 * 4 )  
[68] move 4 , ul / 4  | move 2 + 2 , ul / 4  | move 0 - 4 , ul / 4  | move 2 * 2 , ul / 4  | move 3 + ul , ul / 4  | ( move 4 , ul / 4 ; pen 0 )  | ( move 4 , ul / 4 ; pen 2 )  | ( move 4 , ul / 4 ; pen 4 )  | ( move 4 , ul / 4 ; pen ul )  | ( pen ul ; move 4 , ul / 4 )  | ( move 4 , ul / 4 ; v0 = 2 )  | ( move 4 , ul / 4 ; v0 = 3 )  | ( move 4 , ul / 4 ; v0 = 4 )  | ( move ul , ul / 4 ; move 3 , 0 )  | ( move 4 , ul / 4 ; v0 = ua )  | ( v0 = ul ; move 4 , ul / 4 )  | ( move 4 , ul / 4 ; pen ua - ul )  | ( v0 = ul ; move 4 , v0 / 4 )  | ( v0 = 4 ; move v0 , ul / 4 )  | ( move 4 , ul / 4 ; pen ul ; pen 2 )  | ( pen 3 ; pen ul ; move 4 , ul / 4 )  | ( move 0 , 0 ; move 3 + ul , ul / 4 )  | ( v0 = 4 ; move v0 , ul / v0 )  | ( move 3 + ul , ul / 4 ; v0 = 0 )  | ( move 4 , ul / 4 ; v0 = ul - 2 )  | ( move 2 , ul / 4 ; pen ul ; move 2 , ua )  | ( move 3 + ul , ul / 4 ; v0 = ua * 4 )  | ( move 4 , ul / 4 ; v0 = ua ; pen v0 )  | ( move ul , ul / 4 ; move 3 , 0 ; v0 = 0 )  | ( move 4 , ul / 4 ; move ul / 2 , 3 ; pen 0 )  | ( pen ul ; ( v0 = ul / 2 ; move 4 , v0 * v0 ) )  | ( v0 = 3 + ul ; v1 = v0 ; move v1 , ul / v0 )  
[69] move ua - ul , 0  | move ul - ua , 0  | move ul - ua , ua  | move ua - ul , ua  | move ul - ua , 0 - ua  | move ul - ua , ua * 2  | move ua - ul , ua / 2  | move ul - ua , ua * 3  | move ul - ua , ua / 2  | move ua - ul , ua * 3  | move ua - ul , ua * 4  | move ua - ul , ua + ua  | move ul - ua , ua + ua  | ( move ul - ua , 0 ; pen 0 )  | ( move ul - ua , 0 ; v0 = 0 )  | ( move ul - ua , ua ; v0 = 2 )  | ( move ua - ul , ua ; v0 = 3 )  | ( move ul - ua , ua ; v0 = 3 )  | ( move ul - ua , 0 ; pen 0 - ul )  | ( move ua - ul , 0 ; pen ul / 4 )  | ( v0 = ua - ul ; move v0 , 0 )  | ( v0 = ua ; move v0 - ul , v0 )  | ( move ul - ua , 0 ; v0 = ul / 2 )  | ( move ul - ua , ua * 4 ; pen 2 / ua )  | ( move ul - ua , ua ; v0 = ua + ua )  | ( move 4 + ul , ua ; move 0 , ua ; pen ul )  | ( v0 = ua - ul ; move v0 , 0 ; pen 0 )  | ( move ua - ul , ua + ua ; pen ul ; pen ul )  | ( move ul - ua , ua ; pen ul ; pen ua + ul )  | ( move ua - ul , 0 ; move 0 , 2 ; pen 2 / ua )  | ( pen ul + ul ; move ul - ua , ua ; move 0 , ua + 3 )  | ( move ul - ua , 0 ; pen ul ; ( pen 2 ; move 0 , 3 ) )  
[70] move ua + 4 , ul  | move ua + 4 , 2 - ul  | move ua + 4 , ua + ul  | move ua + 4 , ul - ua  | ( move ua , ul ; move 4 , 0 )  | ( move 4 , ul ; move ua , 0 )  | ( move ua + 4 , ul ; pen 0 )  | ( move ua , ul ; move 4 , ua )  | ( move 4 , ul ; move ua , ua )  | ( move ua + 4 , ul ; v0 = 2 )  | ( move 0 , ua ; move ua + 4 , ul )  | ( move 4 , ul ; move ua , ua * 4 )  | ( move ua + 4 , ul ; v0 = ul )  | ( move ua + 4 , ul ; pen ua * 3 )  | ( move ua + 4 , ul ; pen 3 - ul )  | ( move ua , ul ; move ua - 2 , ua )  | ( move ua + ul , ul ; move 3 , ua )  | ( move ua + 4 , ul ; pen ua + ul )  | ( move ua + 4 , ua + ul ; pen ul )  | ( move ua + 4 , ul ; v0 = 4 * 2 )  | ( move ua + 4 , ua + ul ; v0 = 0 )  | ( move ul , ul ; move ua + 3 , ua * 4 )  | ( move ua + 4 , ul ; pen 0 ; v0 = ul )  | ( move ua + 4 , ul ; pen 3 - 2 ; pen ua )  | ( v0 = ul - ua ; move v0 + v0 , v0 )  | ( move 4 , 4 - 3 ; move ua , ua ; pen 4 - ul )  | ( move ua , ul ; move ua - 2 , 0 ; v0 = ul )  | ( move 3 , ul ; move ua + ul , 0 ; v0 = ua )  | ( move ul , ul ; v0 = ua + 3 ; move v0 , ua )  | ( v0 = 0 ; move 4 , ul ; move ua , v0 + v0 )  | ( move 4 , ul ; move ua , 0 ; ( v0 = ua ; pen ul ) )  | ( move ua + ul , ul ; move 3 , ua * 2 ; v0 = ua + 4 )  
[71] move ua , 2 / ua  | move ua , ul / 3  | move 4 + 2 , 2 / ua  | move 3 + 3 , 2 / ua  | move 3 * 2 , 2 / ua  | move 0 - ua , 2 / ua  | ( move ua , 2 / ua ; pen 0 )  | ( move ua , 2 / ua ; pen 3 )  | ( move ua , 2 / ua ; pen ul )  | ( pen ul ; move ua , 2 / ua )  | ( move ua , 2 / ua ; v0 = 0 )  | ( move ua , 2 / ua ; v0 = 3 )  | ( move ua , 2 / ua ; v0 = ua )  | ( v0 = ua ; move ua , 2 / ua )  | ( move ua , 2 / ua ; v0 = ul )  | ( v0 = ua ; move v0 , 2 / ua )  | ( v0 = 2 ; move ua , v0 / ua )  | ( v0 = 2 / ua ; move ua , v0 )  | ( move ua , 2 / ua ; pen ul ; pen 0 )  | ( move ua , 2 / ua ; pen ul ; pen 2 )  | ( move ua , 2 / ua ; v0 = 2 + ul )  | ( move ua , 2 / ua ; v0 = 2 - ul )  | ( pen 4 / ua ; move 0 - ua , 2 / ua )  | ( pen ul ; move 0 , 2 / ua ; move ua , ua )  | ( pen ul ; move ua , 2 / ua ; pen ul / 2 )  | ( move ua , 2 / ua ; ( pen ul ; pen ua ) )  | ( move 3 * 2 , 2 / ua ; v0 = ua - ul )  | ( v0 = ul / ua ; move ua , v0 + v0 )  | ( move ua , 2 / ua ; v0 = 0 ; move 0 , ul )  | ( move ua , 2 / ua ; v0 = 0 ; move v0 , 2 )  | ( v0 = 2 ; v1 = v0 / ua ; move ua , v1 )  | ( ( move ua , 2 / ua ; pen 3 - ul ) ; v0 = ul )  
[72] move ua , ua / 3  | move 0 - ua , ua / 3  | ( move ua , ua / 3 ; pen 0 )  | ( move ua , ua / 3 ; pen ua )  | ( move ua , ua / 3 ; pen ul )  | ( pen ul ; move ua , ua / 3 )  | ( move 0 , ua / 3 ; move ua , 0 )  | ( move ua , ua / 3 ; move 0 , 2 )  | ( move ua , ua / 3 ; v0 = 4 )  | ( v0 = ua ; move ua , ua / 3 )  | ( move ua , ua / 3 ; v0 = ua )  | ( move ua , ua / 3 ; pen 4 - ul )  | ( v0 = ua ; move ua , v0 / 3 )  | ( v0 = ua / 3 ; move ua , v0 )  | ( v0 = ua ; move v0 , v0 / 3 )  | ( pen ul ; pen ul ; move ua , ua / 3 )  | ( move ua , ua / 3 ; v0 = 3 - ua )  | ( move ua , ua / 3 ; v0 = ul / 4 )  | ( move ua , ua / 3 ; v0 = ua + ua )  | ( move 4 + 2 , ua / 3 ; move ul / 3 , 0 )  | ( move ua , ua / 3 ; v0 = ul ; pen v0 )  | ( pen ul ; v0 = 3 ; move ua , ua / v0 )  | ( move 0 , 0 ; ( move ua , ua / 3 ; pen 0 ) )  | ( move 0 , ua / 3 ; move ua , ua ; v0 = 0 )  | ( move ua , ua / 3 ; ( pen 3 ; v0 = ua ) )  | ( v0 = ua / 3 ; move ua , v0 ; v1 = v0 )  | ( v0 = ua / 3 ; v1 = v0 ; move ua , v0 )  | ( v0 = ua ; move v0 , v0 / 3 ; v1 = ul )  | ( v0 = 3 ; move ua , ua / v0 ; pen v0 - ul )  | ( move ua , ua / 3 ; v0 = 2 ; v1 = 3 * v0 )  | ( ( v0 = ua ; move v0 , v0 / 3 ) ; pen v0 )  | ( move ua , ua / 3 ; ( v0 = ua - ul ; pen ul ) )  
[73] move 4 , ua * ua  | move 2 + 2 , ua * ua  | move 0 - 4 , ua * ua  | move 2 * 2 , ua * ua  | move 3 + ul , ua * ua  | ( move 4 , ua * ua ; pen 2 )  | ( move 4 , ua * ua ; pen ua )  | ( pen ul ; move 4 , ua * ua )  | ( move 0 , 0 ; move 4 , ua * ua )  | ( move 4 , ua * ua ; v0 = 0 )  | ( move 4 , ua * ua ; pen 4 * 3 )  | ( v0 = ua ; move 4 , ua * ua )  | ( move 4 , ua * ua ; v0 = ua )  | ( move 4 , ua * ua ; v0 = ul )  | ( move 3 + ul , ua * ua ; pen 0 )  | ( move 4 , ua * ua ; pen ua * ua )  | ( move 4 , ua * ua ; pen ul / ua )  | ( v0 = ua ; move 4 , v0 * v0 )  | ( move 4 , ua * ua ; v0 = ua + 3 )  | ( move 4 , ua * ua ; v0 = 3 / ua )  | ( move 3 + ul , ua * ua ; pen 3 * 3 )  | ( move 4 , ua * ua ; move 0 , ua * ua )  | ( pen ul - ua ; pen ul ; move 4 , ua * ua )  | ( move 3 + ul , ua * ua ; v0 = 3 / ua )  | ( v0 = 0 ; move 4 , ua * ua ; v1 = 0 )  | ( v0 = 4 ; move v0 , ua * ua ; pen v0 )  | ( v0 = ua ; move 4 , v0 * v0 ; pen ua )  | ( move 4 , ua * ua ; ( pen 4 ; v0 = ul ) )  | ( ( pen ul ; move 3 + ul , ua * ua ) ; pen 3 )  | ( move 4 , ua * ua ; v0 = ul ; pen v0 + ua )  | ( v0 = 0 ; move 3 , ua * ua ; move v0 + ul , v0 )  | ( ( move 3 + ul , ua * ua ; v0 = ul ) ; v1 = 0 )  
[74] move ua , 4 / ua  | move 0 - ua , 4 / ua  | ( move ua , 4 / ua ; pen ua )  | ( move ua , 4 / ua ; move 0 , 2 )  | ( move ua , 4 / ua ; v0 = 0 )  | ( move ua , 4 / ua ; move 0 , ua )  | ( move 0 , ua ; move ua , 4 / ua )  | ( move ua , 4 / ua ; v0 = ua )  | ( move ua , 4 / ua ; v0 = ul )  | ( move ua , 4 / ua ; pen ua + 3 )  | ( move ua , 4 / ua ; pen ua * 3 )  | ( move ua , 4 / ua ; pen ul / 4 )  | ( v0 = 4 ; move ua , v0 / ua )  | ( v0 = ua ; move v0 , 4 / v0 )  | ( move ua , 4 / ua ; move 0 , 4 / 3 )  | ( move 0 - ua , 4 / ua ; move 0 , ul )  | ( move ua , 4 / ua ; v0 = 3 / ua )  | ( move ua , 4 / ua ; v0 = 4 / ua )  | ( move 0 , 3 - ul ; move ua , ua * ua )  | ( move ua - ul , 4 / ua ; move ul , 0 )  | ( move ua , 4 / ua ; pen 0 ; v0 = 2 )  | ( move ua , 4 / ua ; pen 2 ; v0 = 2 )  | ( move ua , 4 / ua ; v0 = 0 ; pen v0 )  | ( move ua , 4 / ua ; ( move 0 , ua ; pen 0 ) )  | ( move ua , 4 / ua ; pen 0 - ul ; v0 = ul )  | ( pen ul ; move ua , 4 / ua ; v0 = ua * 3 )  | ( v0 = ua ; move 0 , v0 ; move ua , 4 / v0 )  | ( ( pen ul ; v0 = ua ) ; move v0 , 4 / v0 )  | ( v0 = ua ; v1 = v0 ; move v1 , 4 / v1 )  | ( move ua , 4 / ua ; v0 = 0 ; v1 = 3 / v0 )  | ( move ua , 4 / ua ; ( v0 = 2 / 4 ; pen v0 ) )  | ( move ua , 4 / ua ; v0 = 2 - 4 ; v1 = ua / v0 )  
[75] move ua , ua / 4  | move 0 - ua , ua / 4  | ( move ua , ua / 4 ; pen 0 )  | ( move ua , ua / 4 ; pen 2 )  | ( pen 2 ; move ua , ua / 4 )  | ( move ua , ua / 4 ; pen 3 )  | ( pen ul ; move ua , ua / 4 )  | ( move ua , ua / 4 ; move 0 , 0 )  | ( move ua , ua / 4 ; v0 = 0 )  | ( move ua , ua / 4 ; v0 = 3 )  | ( move ua , ua / 4 ; v0 = 4 )  | ( move ua , ua / 4 ; pen 3 * 2 )  | ( move ua , ua / 4 ; v0 = ua )  | ( move ua , ua / 4 ; pen ua + 3 )  | ( move ua , ua / 4 ; pen ua * ua )  | ( v0 = ua / 4 ; move ua , v0 )  | ( move ua , ua / 4 ; pen 4 ; pen ua )  | ( v0 = ua ; move v0 , v0 / 4 )  | ( move ua , ua / 4 ; move 0 , 3 + ul )  | ( move ua , ua / 4 ; v0 = 2 + ul )  | ( move ua - ul , ua / 4 ; move ul , 0 )  | ( move ua , ua / 4 ; v0 = ua + ul )  | ( move ua , ua / 4 ; v0 = ul + ul )  | ( move ua , ua / 4 ; v0 = 2 ; pen ul )  | ( pen ul ; move ua , ua / 4 ; v0 = ua )  | ( ( move ua , ua / 4 ; pen ul ) ; pen ul )  | ( v0 = ua / 4 ; move ua , v0 ; pen ul )  | ( move ua , ua / 4 ; v0 = ul ; v1 = 2 )  | ( move ua , ua / 4 ; move 0 , 3 + ul ; pen ul )  | ( ( v0 = ua ; move ua , v0 / 4 ) ; pen ua )  | ( v0 = ua / 4 ; v1 = v0 ; move ua , v1 )  | ( v0 = 4 ; ( move ua , ua / v0 ; pen v0 ) )  
[76] move ua , ul / 4  | move 0 - ua , ul / 4  | ( move ua , ul / 4 ; pen 0 )  | ( move ua , ul / 4 ; pen ua )  | ( move ua , ul / 4 ; pen ul )  | ( pen ul ; move ua , ul / 4 )  | ( move ua , ul / 4 ; v0 = 0 )  | ( move ua , ul / 4 ; v0 = 2 )  | ( v0 = 3 ; move ua , ul / 4 )  | ( move ua , ul / 4 ; pen 4 + 3 )  | ( move ua , ul / 4 ; pen 4 / 2 )  | ( move ua , ul / 4 ; move 0 , ul )  | ( v0 = ua ; move ua , ul / 4 )  | ( move ua , ul / 4 ; pen ua + 2 )  | ( move ua , ul / 4 ; pen 4 / ua )  | ( pen 4 / ua ; move ua , ul / 4 )  | ( move ua , ul / 4 ; pen ua + ua )  | ( v0 = ul ; move ua , v0 / 4 )  | ( v0 = 4 ; move ua , ul / v0 )  | ( v0 = ua ; move v0 , ul / 4 )  | ( move ua , ul / 4 ; v0 = 4 + 4 )  | ( move ua , ul / 4 ; move 0 , ul - ua )  | ( v0 = ul / ua ; move ua , ul / 4 )  | ( move ua , ul / 4 ; pen ua * 3 ; pen 4 )  | ( v0 = 4 ; move ua , ul / v0 ; pen v0 )  | ( ( move ua , ul / 4 ; pen 0 ) ; v0 = ul )  | ( move ua , ul / 4 ; v0 = ua + ul ; pen 3 )  | ( move ua , ul / 4 ; pen ul ; v0 = ua + ul )  | ( move ul , ul / 4 ; move ua - ul , ua ; v0 = 0 )  | ( move ua , ul / 4 ; v0 = 2 + ul ; v1 = v0 )  | ( ( v0 = ul / 4 ; move ua , v0 - ua ) ; pen 2 )  | ( v0 = ul / 4 ; move v0 / ua , 0 ; move ua , v0 )  
[77] move ua + ul , ul  | move ua + ul , 3 - 2  | move ua + ul , 2 - ul  | move ua + ul , ua + ul  | move ua + ul , ul - ua  | ( move ul , ul ; move ua , ua )  | ( move ua , ul ; move ul , ua )  | ( move ua + ul , ul ; move 0 , 0 )  | ( move ua + ul , ul ; v0 = 0 )  | ( move ua + ul , ul ; v0 = ua )  | ( move ua + ul , ul - ua ; pen 0 )  | ( move ua + ul , ul ; pen ua - 3 )  | ( v0 = ua ; move v0 + ul , ul )  | ( v0 = ua + ul ; move v0 , ul )  | ( v0 = ul ; move ua + v0 , ul )  | ( v0 = ua + ul ; move v0 , v0 )  | ( move ua + ul , ul ; move v0 , v0 )  | ( move ua + ul , ul ; move ul / 4 , 4 )  | ( move ua + ul , ul ; move ul , ua - 3 )  | ( move ua + ul , ul ; move ul / ua , ul )  | ( pen ul ; move ua , ul ; move ul , ua * 2 )  | ( move ua + ul , ul ; v0 = 4 ; pen v0 )  | ( pen ul ; v0 = ul ; move ua + v0 , ul )  | ( move ul , ul ; move ua , 0 ; move 4 / ua , 2 )  | ( move ua , ul ; ( v0 = 2 ; move ul , ua ) )  | ( move ua , ul ; move ul , 0 ; move 0 , ua + ul )  | ( move ua + ul , ul ; move ul , 2 ; pen ua * ua )  | ( move ua , ul ; move ul , ua ; move ul , ul + ul )  | ( move ua + ul , ul ; v0 = 0 ; move v0 , v0 )  | ( move 0 , 0 ; move ua + ul , ul ; move ul / ua , ul )  | ( move ua + ul , ua + ul ; v0 = ul ; pen v0 * 3 )  | ( ( pen ul ; move ua + ul , ul ) ; pen ua * 2 ; pen ul )  
[78] move ua , ua * ua  | move 0 - ua , ua * ua  | ( move ua , ua * ua ; pen 0 )  | ( move ua , ua * ua ; pen ua )  | ( pen ul ; move ua , ua * ua )  | ( move ua , ua * ua ; pen ul )  | ( move 0 , ua * ua ; move ua , 0 )  | ( move ua , ua * ua ; move 0 , 2 )  | ( v0 = 0 ; move ua , ua * ua )  | ( move ua , ua * ua ; v0 = 4 )  | ( move 0 , ua * ua ; move ua , ua )  | ( move ua , ua * ua ; v0 = ul )  | ( move ua , ua * ua ; pen ul / 3 )  | ( v0 = ua * ua ; move ua , v0 )  | ( move ua , ua * ua ; pen 4 ; pen 0 )  | ( v0 = ua ; move v0 , v0 * ua )  | ( v0 = ua ; move ua , v0 * v0 )  | ( move 0 - ua , ua * ua ; pen 4 / ua )  | ( v0 = ua ; move v0 , v0 * v0 )  | ( move ul , ua * ua ; move ua - ul , ua )  | ( move ua , ua * ua ; v0 = 3 ; pen 0 )  | ( ( move ua , ua * ua ; pen 4 ) ; pen ul )  | ( move ua , ua * ua ; pen 3 + 2 ; pen 2 + ul )  | ( move ua , ua * ua ; v0 = 3 - ua ; pen ul )  | ( move ua , ua * ua ; v0 = 0 ; v1 = v0 )  | ( v0 = ua ; move v0 , ua * v0 ; pen v0 )  | ( v0 = ua ; move ua , v0 * v0 ; pen v0 )  | ( move ua , ua * ua ; pen 0 - 2 ; move ul / ua , 0 )  | ( v0 = ua ; v1 = ua ; move v0 , v1 * v1 )  | ( pen ul ; ( v0 = ua ; move v0 , v0 * v0 ) )  | ( v0 = ua ; move v0 , v0 * v0 ; pen v0 / 3 )  | ( v0 = ua ; move v0 , v0 * v0 ; pen ul - v0 )  
[79] move ua , ul / ua  | move 0 - ua , ul / ua  | ( move ua , ul / ua ; pen 2 )  | ( move ua , ul / ua ; pen 3 )  | ( move ua , ul / ua ; pen ua )  | ( move ua , ul / ua ; pen ul )  | ( pen ul ; move ua , ul / ua )  | ( move 0 , 3 ; move ua , 2 / ua )  | ( move ua , ul / ua ; v0 = 0 )  | ( move ua , ul / ua ; v0 = 2 )  | ( move ua , ul / ua ; v0 = 3 )  | ( move 0 , ul / ua ; move ua , ua )  | ( move ua , ul / ua ; v0 = ua )  | ( v0 = ul ; move ua , ul / ua )  | ( move ua , ul / ua ; pen ul - ua )  | ( v0 = ua ; move ua , ul / v0 )  | ( move ua , ul / ua ; pen 3 ; pen ua )  | ( move ua , ul / ua ; move 0 , 4 + 2 )  | ( v0 = ua ; move v0 , ul / v0 )  | ( move ua - 4 , ul / ua ; move 4 , ua )  | ( move ua , ul / ua ; move 0 , ua ; pen 3 )  | ( pen ul ; pen ul / ua ; move ua , ul / ua )  | ( v0 = ua ; move ua , ul / ua ; v1 = 4 )  | ( v0 = ul / ua ; move ua , v0 ; pen v0 )  | ( v0 = ua ; move ua , ul / v0 ; v1 = 0 )  | ( move ua , ul / ua ; v0 = 0 ; move v0 , v0 )  | ( v0 = ul ; v1 = v0 ; move ua , v1 / ua )  | ( move ua , ul / ua ; ( pen 0 ; v0 = ua - ul ) )  | ( ( v0 = 0 ; move v0 , ul / ua ) ; move ua , v0 )  | ( move ua , ul / ua ; v0 = ua / 3 ; v1 = ua + 4 )  | ( move ua , ul / ua ; ( v0 = ul / ua ; pen 3 - 4 ) )  | ( ( v0 = ua ; v1 = v0 ) ; move v0 , ul / v0 )  
[80] move 3 + 2 , 0 - 2  | move 3 + 2 , 2 - 4  | move 3 + 2 , ua - 2  | move 4 + ul , 0 - 2  | move 3 + 2 , ul - 3  | move 4 + ul , 2 - 4  | move 4 + ul , ua - 2  | move 4 + ul , ul - 3  | ( move 4 , 0 - 2 ; move ul , 0 )  | ( move 4 , ua - 2 ; move ul , 0 )  | ( move 4 + ul , 0 - 2 ; pen ul )  | ( move 4 , ul - 3 ; move ul , ua )  | ( move ul , ul - 3 ; move 4 , ua )  | ( move 4 + ul , ua - 2 ; pen ul )  | ( pen ul ; move 4 + ul , ul - 3 )  | ( move ul , 0 - 2 ; move 3 + ul , ua )  | ( move 4 + ul , ul - 3 ; move 0 , ua )  | ( move ua / 2 , ua - 2 ; move 2 , ua )  | ( move 4 + ul , ul - 3 ; v0 = ua )  | ( v0 = 0 - 2 ; move v0 - 3 , v0 )  | ( v0 = 3 + 2 ; move v0 , v0 * 4 )  | ( v0 = 4 + ul ; move v0 , v0 * 4 )  | ( move 4 , ul - 3 ; move ul , ua ; pen ul )  | ( move 4 + ul , 0 - 2 ; v0 = ua + ul )  | ( move 3 , ul - 3 ; move ul , ua ; move ul , ua )  | ( v0 = ul - 3 ; move 4 , v0 ; move ul , 0 )  
[81] move 3 + 2 , 0 - 3  | move 4 + ul , 0 - 3  | move 3 + 2 , ua - 3  | move 3 + 2 , ul - 4  | move 4 + ul , ua - 3  | move 4 + ul , ul - 4  | move ua - ul , ua - 3  | move ul - ua , ul - 4  | move 4 + ul , ul / ua  | move ul - ua , ul / ua  | ( move ul , 0 - 3 ; move 4 , ua )  | ( move 2 , ua - 3 ; move 3 , ua )  | ( move ul , ua - 3 ; move 4 , 0 )  | ( pen ul ; move 3 + 2 , ul - 4 )  | ( move 4 + ul , ul - 4 ; pen 2 )  | ( move ul , ul - 4 ; move 4 , ua )  | ( move 4 , ul - 4 ; move ul , ua )  | ( move 4 + ul , ua - 3 ; pen ua )  | ( move 4 + ul , ua - 3 ; pen ul )  | ( pen ul / ua ; move 3 + 2 , 0 - 3 )  | ( v0 = 4 + ul ; move v0 , ul - 4 )  | ( v0 = ul ; move 4 + ul , v0 - 4 )  | ( move 4 + ul , ua - 3 ; move 0 , 3 / 2 )  | ( move 4 + ul , ul - 4 ; v0 = 2 + ul )  | ( move 4 + ul , ul - 4 ; v0 = ua * 2 )  | ( move 3 , ua - 3 ; v0 = 0 ; move 2 , 0 )  | ( move 4 + ul , 0 - 3 ; pen ua ; v0 = 0 )  | ( move 3 + ul , ul - 4 ; pen ul ; move ul , ua )  | ( ( move 2 , ua - 3 ; v0 = 3 ) ; move v0 , 0 )  | ( move 4 , 0 - 3 ; v0 = 0 ; move ul - v0 , v0 )  | ( move ul , ua - 3 ; ( move 4 , 0 ; v0 = ul - ua ) )  
[82] move 3 + 2 , 3 + 2  | move 4 + ul , 3 + 2  | move 3 + 2 , 4 + ul  | move ul - ua , 3 + 2  | move 4 + ul , 4 + ul  | move ua - ul , 4 + ul  | move ul - ua , 4 + ul  | ( move 3 + 2 , 4 + ul ; pen 4 )  | ( move 4 , 4 + ul ; move ul , 0 )  | ( move 0 , 4 ; move 4 + ul , ul )  | ( move ul , 3 + 2 ; move 4 , ua )  | ( move 0 , ul ; move 4 + ul , 4 )  | ( move 4 , 3 + 2 ; move ul , ua )  | ( move 4 + ul , 3 + 2 ; pen ua )  | ( move 4 , 4 + ul ; move ul , ua )  | ( v0 = 3 + 2 ; move v0 , v0 )  | ( v0 = 4 + ul ; move v0 , v0 )  | ( move 3 + 2 , 3 + 2 ; pen ua + ul )  | ( move 0 , ul ; move 4 , 4 ; move ul , 0 )  | ( move 3 + 2 , 3 + 2 ; move 0 , ua + ua )  | ( move 4 + ul , 4 + ul ; v0 = 4 * 2 )  | ( v0 = 4 + ul ; pen ul ; move v0 , v0 )  | ( move ul , 4 + ul ; move 4 , ua ; v0 = ua )  | ( v0 = 3 + 2 ; move v0 , v0 ; pen v0 )  | ( move 3 + 2 , 3 + 2 ; move 0 , 4 - 3 ; pen 4 )  | ( v0 = 4 + ul ; ( move v0 , v0 ; pen 4 ) )  | ( v0 = 3 + 2 ; move v0 , v0 ; v1 = v0 )  | ( v0 = 3 + 2 ; v1 = v0 ; move v1 , v0 )  | ( v0 = 4 + ul ; move v0 , v0 ; move 0 , v0 )  | ( v0 = 4 + ul ; move v0 , v0 ; v1 = v0 )  | ( move 0 , ul ; ( move 3 , 4 ; move 2 , 0 ; pen ul + ul ) )  
[83] move 3 + 2 , 0 - 4  | move 3 + 2 , ua - 4  | move 4 + ul , 0 - 4  | move 4 + ul , ua - 4  | move ul - ua , ua - 4  | ( move ul , 0 - 4 ; move 4 , 0 )  | ( move ul , ua - 4 ; move 4 , 0 )  | ( move 2 , ua - 4 ; move 3 , ua )  | ( move 4 + ul , 0 - 4 ; pen ul )  | ( move 4 + ul , 0 - 4 ; v0 = 4 )  | ( move ul , ua - 4 ; move 2 * 2 , ua )  | ( v0 = 0 - 4 ; move ul - v0 , v0 )  | ( v0 = 4 + ul ; move v0 , ul - v0 )  | ( pen ul ; ( move ul , ua - 4 ; move 4 , 0 ) )  | ( move 4 , ua - 4 ; move ul , ua ; move 0 , ul )  | ( move 4 + ul , ua - 4 ; v0 = ua ; pen ul - v0 )  
[84] move 4 + 3 , 0 - 2  | move 4 + 3 , 2 - 4  | move 4 + 3 , ua - 2  | move 4 + 3 , ul - 3  | move ua + ul , 0 - 2  | move ua + ul , 2 - 4  | move ua + ul , ua - 2  | move ua + ul , ul - 3  | ( move 3 , 2 - 4 ; move 4 , 0 )  | ( move ul , 2 - 4 ; move ua , ua )  | ( move ua + ul , 2 - 4 ; pen ul )  | ( move ua , ua - 2 ; move ul , ua )  | ( move ua , ul - 3 ; move ul , ua )  | ( move ua + ul , ua - 2 ; pen ua )  | ( move ua + ul , ua - 2 ; pen ul )  | ( move ua + ul , ul - 3 ; pen ul )  | ( pen ul ; move ua + ul , ul - 3 )  | ( move ua + ul , 0 - 2 ; v0 = ua )  | ( move ul , ua - 2 ; move 4 + 2 , ua )  | ( move 4 , ua - 2 ; move 4 - ul , ua )  | ( move ua + ul , ul - 3 ; v0 = ul )  | ( pen ua / 4 ; move ua + ul , ua - 2 )  | ( move ua + ul , ul - 3 ; pen ul - 4 )  | ( move ua , ul - 3 ; move ul , ua ; pen 3 )  | ( v0 = ul ; move v0 + ua , v0 - 3 )  | ( move ul , ul - 3 ; move ua , 0 ; v0 = ul )  | ( move ul , 0 - 2 ; pen ul ; move ua , ua * 3 )  | ( move ul , ua - 2 ; v0 = ul ; move ua , ua )  | ( move ul , ua - 2 ; move ua , ua ; v0 = ul )  | ( v0 = 3 - ua ; move 4 - v0 , ul - v0 )  | ( v0 = ua ; move ul , v0 - 2 ; move v0 , 0 )  | ( move ul , ua - 2 ; ( v0 = ua ; move v0 , v0 ) )  
[85] move 3 + 2 , 2 - 3  | move 3 + 2 , 0 - ul  | move 3 + 2 , ul - 2  | move 4 + ul , 2 - 3  | move 4 + ul , 3 - 4  | move 3 + 2 , ua - ul  | move 4 + ul , 0 - ul  | move 4 + ul , ul - 2  | move 4 + ul , ua - ul  | ( move 3 , 0 - ul ; move 2 , 0 )  | ( move 3 + 2 , ul - 2 ; pen 0 )  | ( move 4 + ul , 3 - 4 ; pen 2 )  | ( move 4 + ul , 3 - 4 ; pen 4 )  | ( move 4 , 3 - 4 ; move ul , ua )  | ( move 2 , ua - ul ; move 3 , ua )  | ( move ul , ul - 2 ; move 4 , ua )  | ( move 4 , ua - ul ; move ul , ua )  | ( move 4 + ul , ul - 2 ; v0 = 2 )  | ( move 3 + ul , ua - ul ; move ul , 0 )  | ( move 4 , ua - ul ; move 2 - ul , ua )  | ( pen ul / 2 ; move 4 + ul , ua - ul )  | ( move 3 + ul , ua - ul ; move ul , ua )  | ( move 2 , ua - ul ; move 4 - ul , ua * 2 )  | ( move 2 , ua - ul ; move 3 , 0 ; move 0 , ua )  | ( move 4 , 3 - 4 ; ( pen ul ; move ul , ua ) )  | ( move 4 + ul , ua - ul ; v0 = 0 ; pen v0 )  | ( move 4 , 0 - ul ; v0 = 3 - ua ; move ul , 0 )  | ( move 0 , ua ; move 3 - ul , 0 - ul ; move 3 , ua )  | ( ( move 4 , 0 - ul ; move ul , 0 ) ; pen ua + ul )  | ( v0 = 3 - 4 ; ( move ul , v0 ; move 4 , ua ) )  | ( move 4 + ul , 0 - ul ; v0 = ua - ul ; v1 = 4 )  | ( ( move 0 , ua - 4 ; v0 = 4 + ul ) ; move v0 , 3 )  
[86] move 4 * 2 , 0 - 2  | move 4 * 2 , 2 - 4  | move 4 + 4 , ua - 2  | move 4 * 2 , ua - 2  | move 4 + 4 , ul - 3  | move 4 * 2 , ul - 3  | ( move 4 , 2 - 4 ; move 4 , 0 )  | ( move 4 , ul - 3 ; move 4 , ua )  | ( move 4 * 2 , ul - 3 ; pen ua * 2 )  | ( move 4 + ul , ul - 3 ; move 3 , ua )  | ( move 4 , ul - 3 ; v0 = 4 ; move v0 , ua )  | ( move 0 , ul - 3 ; move 3 + ul , 0 ; move 4 , ua )  | ( ( pen ul ; v0 = 4 * 2 ) ; move v0 , ul - 3 )  | ( ( move ua / 4 , 0 - 2 ; move ua , 0 ) ; move ul , 3 )  | ( v0 = 4 ; v1 = 2 ; move v1 * 4 , v1 - v0 )  | ( v0 = ul - 3 ; move v0 * 4 , v0 ; v1 = v0 )  | ( v0 = ul - 3 ; v1 = 4 * v0 ; move v1 , v0 )  
[87] move 4 + 3 , 0 - 3  | move 4 + 3 , ua - 3  | move 4 + 3 , ul - 4  | move ua + ul , 0 - 3  | move ua + ul , ua - 3  | move ua + ul , ul - 4  | ( move 4 + 3 , ul - 4 ; pen 2 )  | ( pen ul ; move 4 + 3 , ua - 3 )  | ( move ua + ul , 0 - 3 ; pen ul )  | ( move ua + ul , ul - 4 ; pen ul )  | ( pen ul ; move ua + ul , ul - 4 )  | ( move ul , 0 ; move 4 + 3 , ul - 4 )  | ( move 3 , ua - 3 ; move 3 + ul , ua )  | ( move ua , ua - 3 ; move 2 / 3 , ua )  | ( move ua + ul , ul - 4 ; v0 = 3 )  | ( v0 = ul - 4 ; move ua + ul , v0 )  | ( move 4 + 3 , ul - 4 ; v0 = ul / 4 )  | ( v0 = ua + ul ; move v0 , v0 - 4 )  | ( move ua + ul , 0 - 3 ; v0 = 0 - ul )  | ( move ua / 2 , ul - 4 ; move 2 * 2 , ua )  | ( move ua + ul , ua - 3 ; v0 = ul - 2 )  | ( move ua + ul , ul - 4 ; v0 = ua + 4 )  | ( move 3 , 0 - 3 ; move 4 , ua ; move 0 , ul )  | ( move 4 + 3 , ua - 3 ; move ul , v0 / ua )  | ( move 3 , ul - 4 ; move 4 , ua * 2 ; pen ul )  | ( v0 = ul - 4 ; move 4 , v0 ; move 3 , ua )  | ( move 3 , ua - 3 ; move 4 , ua + ua ; v0 = ul )  | ( move 2 , ua - 3 ; move 4 + ul , ua ; pen 4 / ua )  | ( v0 = 4 + 3 ; move ul , ua ; move v0 , 4 - v0 )  | ( ( v0 = ua + ul ; move v0 , v0 - 4 ) ; pen 0 )  | ( v0 = ul / 4 ; v1 = ul - 4 ; move ua + ul , v1 )  
[88] move 3 * 3 , 0 - 2  | move ua + 2 , 0 - 2  | move 3 * 3 , ua - 2  | move 4 * 2 , ua - 2  | move 3 * 3 , ul - 3  | move ua + 2 , ua - 2  | move ua + 2 , ul - 3  | move ua + 3 , ul - 3  | ( move 3 * 3 , ua - 2 ; v0 = ul )  | ( v0 = 3 ; move v0 * v0 , ul - v0 )  | ( v0 = 3 ; move v0 * v0 , ul - v0 ; v1 = ua )  
[89] move 3 + 2 , 3 + 3  | move 3 + 2 , 4 + 2  | move 3 + 2 , 3 * 2  | move 4 + ul , 3 + 3  | move 4 + ul , 4 + 2  | move 4 + ul , 3 * 2  | move ul - ua , 4 + 2  | move ul - ua , 3 * 2  | ( move 3 , 4 + 2 ; move 2 , 0 )  | ( move 2 , 4 + 2 ; move 3 , 0 )  | ( move ul , 3 * 2 ; move 4 , 0 )  | ( move 3 + 2 , 3 + 3 ; v0 = 0 )  | ( move 0 , ul ; move 3 + 2 , 4 + ul )  | ( move 0 , ul ; move 4 + ul , 3 + 2 )  | ( move ul , 3 * 2 ; move 4 , ua * 2 )  | ( move 4 + ul , 3 * 2 ; v0 = ua )  | ( move 0 , 4 + ul ; move 4 + ul , ul )  | ( move 3 + ul , 3 * 2 ; move ul , ua )  | ( pen ul ; move 3 + 2 , 4 + 2 ; pen 2 )  | ( move ul , 3 + 3 ; pen ul ; move 4 , 0 )  | ( v0 = 4 + 2 ; move v0 - ul , v0 )  | ( v0 = 4 + ul ; move v0 , ul + v0 )  | ( move 4 , 3 * 2 ; v0 = ua ; move ul , v0 )  | ( v0 = 4 ; move ul + v0 , 2 + v0 ; pen 0 )  | ( move 0 , ua + 2 ; move 3 , 3 + ul ; move 2 , ua )  | ( move 0 , 3 * 2 ; move ul - ua , 0 ; pen ua + ul )  | ( v0 = 4 + ul ; move v0 , ul + v0 ; pen v0 )  | ( move 4 + ul , 3 * 2 ; move 0 , ul / ua ; v0 = 3 )  | ( v0 = 4 + ul ; v1 = v0 ; move v0 , ul + v0 )  
[90] move 4 + 3 , 0 - 4  | move 4 + 3 , ua - 4  | move ua + ul , 0 - 4  | move ua + ul , ua - 4  | ( move ua , ua - 4 ; move ul , 0 )  | ( move ul , ua - 4 ; move ua , 0 )  | ( move ul , ua - 4 ; move ua , ua )  | ( move ua , ua - 4 ; move ul , ua )  | ( move ua + ul , ua - 4 ; pen ua )  | ( pen ul ; move ua + ul , ua - 4 )  | ( move 3 + 2 , ua - 4 ; move 2 , 0 )  | ( move 3 , ua - 4 ; move 3 + ul , ua )  | ( move ua + ul , 0 - 4 ; v0 = ul )  | ( move ua + ul , ua - 4 ; v0 = 2 )  | ( move ua + ul , ua - 4 ; v0 = ul )  | ( move ua , ua - 4 ; move ul , ua + ua )  | ( pen ul ; move 4 , ua - 4 ; move 3 , ua )  | ( move ul , 0 - 4 ; move ua , 0 ; pen 2 - 4 )  | ( move ua , 0 - 4 ; move ul , ua ; v0 = ul )  | ( move ua , ua - 4 ; ( move ul , 0 ; pen ul ) )  | ( move ua + ul , 0 - 4 ; ( pen ua ; pen ua ) )  | ( move ul , 0 - 4 ; v0 = ua ; move v0 , 0 )  | ( move ua + ul , ua - 4 ; v0 = 0 ; pen v0 )  | ( move ua , ua - 4 ; v0 = ua ; move ul , v0 )  | ( pen ul ; v0 = ua - 4 ; move ua + ul , v0 )  | ( move 4 , ua - 4 ; v0 = ua ; move v0 - 3 , v0 )  | ( move ul , ua - 4 ; v0 = ua ; move v0 , 3 * v0 )  | ( move ua , ua - 4 ; ( move ul , 0 ; pen ua * 3 ; pen 0 ) )  
[91] move 3 + 2 , 4 + 3  | move 4 + ul , 4 + 3  | move ul - ua , 4 + 3  | ( move 4 , 4 + 3 ; move ul , 0 )  | ( move 4 , 4 + 3 ; move ul , ua )  | ( move 3 , 4 + 3 ; move 4 - 2 , 0 )  | ( move 0 , 4 + 3 ; move 4 + ul , ua )  | ( move 0 , ua + 3 ; move 4 + ul , 4 )  | ( move 4 + ul , 4 + 3 ; v0 = ua )  | ( move 0 , 3 ; ( move 4 , 3 + ul ; move ul , 0 ) )  | ( move ul , 4 + 3 ; move 3 + ul , 0 ; v0 = ul )  | ( ( pen ul ; move 4 + ul , 4 + 3 ) ; pen ua * 2 )  
[92] move 4 + 3 , 3 + 2  | move 4 + 3 , 4 + ul  | move ua + ul , 3 + 2  | move ua + 2 , 4 + ul  | move ua + ul , 4 + ul  | ( move 4 + 3 , 3 + 2 ; pen ua )  | ( move 3 , 4 + ul ; move 4 , ua )  | ( move 0 , ul ; move ua + ul , 4 )  | ( move ul , 4 + ul ; move ua , ua )  | ( move 2 / 3 , 4 + ul ; move ua , 0 )  | ( move ul , 3 + 2 ; move 3 * 2 , ua )  | ( move ua - 3 , 4 + ul ; move 4 , ua )  | ( move ua + ul , 4 + ul ; v0 = 4 )  | ( move 4 + 3 , 4 + ul ; pen ua - ul )  | ( move ua + ul , 4 + ul ; move 0 , ua )  | ( move 4 + 3 , 4 + ul ; pen 2 ; pen 4 )  | ( move 0 , ul ; move ul , 4 ; move ua , ua )  | ( move 2 , 4 + ul ; move ul , 0 ; move 4 , 0 )  | ( move 0 , 4 ; move 4 + 3 , ul ; v0 = ul )  | ( v0 = 4 + ul ; move 2 + v0 , v0 ; pen 0 )  | ( move ua , 4 + ul ; move 4 / ua , ua * 4 ; pen 3 )  | ( v0 = 3 + 2 ; ( move v0 , v0 ; move 2 , 0 ) )  
[93] move 4 + 4 , 0 - 3  | move 4 * 2 , 0 - 3  | move ua + 2 , 0 - 3  | move 4 * 2 , ua - 3  | move 4 + 4 , ua - 3  | move 4 + 4 , ul - 4  | move 4 * 2 , ul - 4  | move ua + 2 , ua - 3  | move ua + 2 , ul - 4  | move ua + 2 , ul / ua  | ( move 2 , 0 - 3 ; move ua , ua )  | ( move ua + 2 , ua - 3 ; v0 = 3 )  | ( move ua + 2 , ul - 4 ; v0 = 3 )  | ( move ua + 2 , ul - 4 ; v0 = ua )  | ( move ua + 2 , ul - 4 ; v0 = ul )  | ( move ua + ul , 0 - 3 ; move ul , ua )  | ( move ul , ua - 3 ; move ua + ul , 0 )  | ( move ua - ul , ul - 4 ; move 3 , ua )  | ( move ul , ul - 4 ; move ua + ul , ua )  | ( move 2 , ua - 3 ; move ua , 0 ; pen 3 )  | ( move 4 , ul - 4 ; move 4 , ua ; pen 0 )  | ( move 4 * 2 , ul - 4 ; v0 = ua - 3 )  | ( move 3 , ua - 3 ; move ua - ul , 0 ; pen 3 )  | ( move ul , ul - 4 ; move ul , ua ; move ua , ua )  | ( move 3 , 0 - 3 ; move 2 , ua * 2 ; move 3 , 0 )  | ( move 3 + 2 , ua - 3 ; move 3 , 0 ; v0 = 4 )  | ( move 2 , 0 - 3 ; ( move ua , 0 ; v0 = ul ) )  | ( move 4 + 4 , 0 - 3 ; pen 0 - 3 ; v0 = ul / 2 )  
[94] move 4 + 4 , 3 + 2  | move 4 * 2 , 3 + 2  | move ua + 2 , 3 + 2  | move 4 + 4 , 4 + ul  | move 4 * 2 , 4 + ul  | move 3 * 3 , 4 + ul  | move ua + 2 , 4 + ul  | move ua + 3 , 4 + ul  | ( move ua , 4 + ul ; move 2 , ua )  | ( move 4 * 2 , 3 + 2 ; v0 = 0 )  | ( move ua , 3 + 2 ; move 2 , ua * 2 )  | ( move ua + 2 , 4 + ul ; v0 = 0 )  | ( move ua + 2 , 4 + ul ; v0 = 4 )  | ( move ua , 3 + 2 ; move ua / 4 , ua )  | ( move ua + 2 , 4 + ul ; v0 = ul )  | ( move ua + ul , 4 + ul ; move ul , 0 )  | ( move ul , 4 + ul ; move ua + ul , 0 )  | ( v0 = 4 + ul ; move ua + 2 , v0 )  | ( move ul , 3 + 2 ; move ua + ul , ua + ua )  | ( v0 = 4 ; move v0 + v0 , v0 + ul )  | ( move 0 , 2 + ul ; move 4 * 2 , 2 ; pen ul )  | ( v0 = ua + 4 ; move ua + 2 , v0 + ul )  | ( move 2 , 4 + ul ; move ua , ua ; v0 = ul )  | ( v0 = 0 - 2 ; move v0 - ua , 3 - v0 )  | ( v0 = ua + ul ; move v0 + ul , 4 + v0 )  | ( move ua + 2 , 4 + ul ; v0 = 0 ; v1 = 3 )  | ( move ua , 4 + ul ; ( v0 = 0 ; move 2 , ua ) )  | ( move 4 * 2 , 3 + 2 ; pen ua + ul ; v0 = ua )  | ( v0 = ua ; move ul + v0 , 3 + 2 ; move ul , 0 )  | ( move 2 , 4 + ul ; v0 = 0 ; move ua + v0 , v0 )  | ( v0 = 4 + ul ; move 3 , v0 ; move v0 , v0 * ua )  | ( move ua + ul , 4 + ul ; ( v0 = ua ; move ul , v0 ) )  
[95] move 3 * 3 , 3 + 2  | move ua + 3 , 3 + 2  | move 3 * 3 , 4 + ul  | move ua + 3 , 4 + ul  | ( move 0 , 3 ; move 3 * 3 , 2 )  | ( move 3 , 3 + 2 ; move ua , ua )  | ( move 3 , 4 + ul ; move ua , 0 )  | ( move ua , 4 + ul ; move 3 , 0 )  | ( move ua , 3 + 2 ; move 3 , ua )  | ( move 3 * 3 , 4 + ul ; pen ul )  | ( move ua , 4 + ul ; move 3 , ua )  | ( move 4 , 4 + ul ; move 4 + ul , 0 )  | ( move ua + 3 , 4 + ul ; v0 = 2 )  | ( move 0 , ua + ul ; move ua + 3 , 4 )  | ( move ul , 4 + ul ; move ua + 2 , 0 )  | ( move 0 , ul ; move ua + 3 , ua + 4 )  | ( move 0 , 4 ; move ua + 3 , ul - ua )  | ( move 3 , 4 + ul ; move ua , ua ; pen 0 )  | ( move 0 , 4 ; move ua + 3 , ul ; pen ul - 4 )  | ( move 3 , 4 + ul ; move ua , ua ; pen ua * ua )  | ( move ul , 3 + 2 ; move 4 * 2 , 0 ; move 0 , ua )  | ( move ua , 4 + ul ; move ul , 0 ; move 4 / 2 , ua )  
[96] move 4 * 2 , 0 - 4  | move 4 + 4 , ua - 4  | move 4 * 2 , ua - 4  | ( move 4 , 0 - 4 ; move 4 , 0 )  | ( move 4 , ua - 4 ; move 4 , ua )  | ( move 4 + 4 , 0 - 4 ; v0 = 0 )  
[97] move 3 + 2 , 3 * 3  | move 4 + ul , 3 * 3  | move ua - ul , 3 * 3  | move ul - ua , 3 * 3  | ( move 3 + 2 , 3 * 3 ; pen 3 )  | ( move 4 , 3 * 3 ; move ul , ua )  | ( move 4 , 3 * 3 ; move ul , ua * 4 )  | ( move 0 , 4 + 2 ; move 4 + ul , 2 + ul )  | ( move 4 + ul , 3 * 3 ; move ul / 3 , ua )  | ( v0 = 3 ; move 2 , v0 * v0 ; move v0 , 0 )  
[98] move 3 + 2 , 3 / 2  | move 4 + ul , 3 / 2  | ( move ul , 3 / 2 ; move 4 , ua )  | ( move 4 + ul , 3 / 2 ; move 0 , 0 )  | ( move 0 , ul ; move 4 + ul , ul / 2 )  | ( v0 = 2 ; move 3 + v0 , 3 / v0 )  | ( move ua - ul , 3 / 2 ; v0 = ua + ul )  
[99] move 3 + 2 , 4 * 2  | move 3 + 2 , 4 + 4  | move 4 + ul , 4 + 4  | move 4 + ul , 4 * 2  | move ul - ua , 4 * 2  | ( move 4 , 4 + 4 ; move ul , ua )  | ( move 4 + ul , 4 + 4 ; pen ul )  | ( move 4 + ul , 4 * 2 ; pen ul )  | ( move 0 , 3 ; move 3 + 2 , 4 + ul )  | ( move 0 , ul ; move 4 + ul , 4 + 3 )  | ( move 4 , 4 + 4 ; move ul , ua * 4 )  | ( move 4 + ul , 4 + 4 ; pen 2 + ul )  | ( v0 = 3 ; move 2 + v0 , 4 * 2 )  | ( v0 = 4 ; move v0 + ul , v0 + v0 )  | ( move 0 , 4 ; move 4 + ul , 4 - ua ; pen ua )  | ( move 0 , 3 ; v0 = 4 + ul ; move v0 , v0 )  | ( move 4 , 4 * 2 ; v0 = 2 / 4 ; move ul , ua )  
[100] move 4 + 3 , 2 - 3  | move 4 + 3 , 3 - 4  | move 4 + 3 , 0 - ul  | move 4 + 3 , ul - 2  | move 4 + 3 , ua - ul  | move ua + ul , 3 - 4  | move ua + 2 , ua - ul  | move ua + ul , ul - 2  | move ua + ul , ua - ul  | ( move 3 , ul - 2 ; move 4 , 0 )  | ( move 4 , 3 - 4 ; move 3 , ua )  | ( move 4 , ul - 2 ; move 3 , ua )  | ( pen ul ; move 4 + 3 , ua - ul )  | ( move ua , 0 - ul ; move ul , ua )  | ( move ul , ua - ul ; move ua , ua )  | ( v0 = 4 + 3 ; move v0 , 3 - 4 )  | ( move 0 , 0 ; move ua + ul , ua - ul )  | ( move 3 , ua - ul ; move 4 , ua + ua )  | ( move ul , ua - ul ; move 4 + 2 , ua )  | ( move 3 * 2 , ua - ul ; move ul , ua )  | ( move ua , ua - ul ; move ul / 2 , ua )  | ( move 4 - ul , ul - 2 ; move 4 , ua + ua )  | ( v0 = 0 - 2 ; move 4 + 3 , v0 + ul )  | ( move 3 + 3 , ul - 2 ; pen ul ; move ul , 0 )  | ( move 4 + 3 , 2 - 3 ; pen ua ; pen ua + ul )  | ( move 2 + ul , ua - ul ; move 3 + ul , ua + ua )  | ( move 4 + ul , ul - 2 ; move 2 , ua ; pen ul + ul )  | ( v0 = ua - ul ; move 4 + 3 , v0 ; pen v0 / 4 )  | ( v0 = 3 ; move ul + v0 , 2 - v0 ; move v0 , 0 )  | ( v0 = ua - ul ; move v0 / ua , v0 ; move ua , ua )  
[101] move 3 * 3 , 0 - 4  | move ua + 3 , 0 - 4  | move ua + 4 , 0 - 4  | move 3 * 3 , ua - 4  | move ua + 3 , ua - 4  | ( move 3 , ua - 4 ; move ua , ua )  | ( move 4 , ua - 4 ; move 4 + ul , ua )  | ( move 4 * 2 , 0 - 4 ; move ul , 0 ; pen 4 - ua )  
[102] move 4 + 3 , 4 + 2  | move 4 + 3 , 3 + 3  | move 4 + 3 , 3 * 2  | move ua + ul , 4 + 2  | move ua + ul , 3 * 2  | ( move 3 , 4 + 2 ; move 4 , 0 )  | ( move 4 , 3 + 3 ; move 3 , 0 )  | ( move 0 , 3 ; move 4 + 3 , ua + 3 )  | ( move 4 + 3 , 4 + 2 ; pen ua * 4 )  | ( move 0 , 3 + 2 ; move ua + ul , ul )  | ( move 3 , 3 * 2 ; move 4 , 0 ; pen ua )  | ( v0 = 4 + 2 ; move ul + v0 , v0 )  | ( move 2 + ul , 3 * 2 ; move 3 + ul , ua )  
[103] move 3 + 2 , 2 / 3  | move 4 + ul , 2 / 3  | move 4 + ul , 4 / ua  | ( pen ul ; move 4 + ul , 2 / 3 )  | ( move ua - ul , 4 / ua ; pen 3 - ua )  | ( move 4 , 2 / 3 ; move ul , 0 ; v0 = ul )  
[104] move 4 * 2 , 2 - 3  | move 4 + 4 , 2 - 3  | move 4 + 4 , 3 - 4  | move 4 * 2 , 3 - 4  | move 4 * 2 , 0 - ul  | move 4 + 4 , 0 - ul  | move ua + 2 , 3 - 4  | move ua + 3 , 3 - 4  | move 4 * 2 , ul - 2  | move 4 + 4 , ul - 2  | move ua + 3 , 0 - ul  | move ua + 2 , ul - 2  | move 4 + 4 , ua - ul  | move 4 * 2 , ua - ul  | ( move 4 , ua - ul ; move 4 , 0 )  | ( move 4 , ul - 2 ; move 4 , ua )  | ( move 4 + 4 , 0 - ul ; v0 = 0 )  | ( move ul , 0 - ul ; move 4 + 3 , ua )  | ( move 4 + 4 , ua - ul ; move 0 , ul )  | ( move ua / 4 , 2 - 3 ; move ua , ua )  | ( move ua , ua - ul ; move ua / 4 , 0 )  | ( move ul , ua - ul ; move 4 + 3 , ua )  | ( v0 = 4 ; move v0 + v0 , 3 - v0 )  | ( move 4 + 3 , 3 - 4 ; move ul , ua ; pen 0 )  | ( move ua + 2 , 0 - ul ; v0 = ua ; pen v0 )  | ( move ul , ul - 2 ; move 4 + 3 , ua ; v0 = 0 )  | ( move ua + ul , ua - ul ; move ul / 2 , ua + ua )  | ( v0 = ua - ul ; move 0 , ua ; move 4 * 2 , v0 )  | ( move 4 + ul , 2 - 3 ; v0 = 3 - 2 ; move 3 , 0 )  
[105] move 3 + 2 , 4 * 3  | move 4 + ul , 4 * 3  | move ua - ul , 4 * 3  | ( move 3 , 4 * 3 ; move 2 , ua )  | ( pen ul ; move 4 + ul , 4 * 3 )  | ( move 4 + ul , 4 * 3 ; v0 = ua )  | ( pen ul / ua ; pen ul ; move 4 + ul , 4 * 3 )  
[106] move 4 + 3 , 4 + 3  | move ua + ul , 4 + 3  | ( move 4 + 3 , 4 + 3 ; pen ua )  | ( move 3 , 4 + 3 ; move 2 + 2 , 0 )  | ( v0 = 4 + 3 ; move v0 , v0 )  | ( move 0 , 4 + ul ; move 4 + 3 , 2 )  | ( move 3 , 4 + 3 ; move 4 , ua * 2 )  | ( move ua + ul , 4 + 3 ; v0 = 0 )  | ( pen ul ; move ua , 4 + 3 ; move ul , 0 )  | ( v0 = 4 + 3 ; move v0 , v0 + ua )  | ( v0 = 2 / 4 ; move ua + ul , 4 + 3 )  | ( pen ul ; v0 = 4 + 3 ; move v0 , v0 )  | ( move 0 , 4 + 2 ; move 4 , ul ; move ua / 2 , ua )  | ( pen ul ; ( move ua + ul , 4 + 3 ; v0 = ul ) )  | ( move 0 , 4 + ul ; move ul / 2 , 2 - ua ; move ua , ua )  | ( ( v0 = 4 + 3 ; move v0 , v0 ) ; pen v0 * ua )  
[107] move 4 * 2 , 4 + 2  | move 4 + 4 , 3 + 3  | move 4 + 4 , 4 + 2  | move 4 * 2 , 3 + 3  | move 4 * 2 , 3 * 2  | move 4 + 4 , 3 * 2  | move 3 * 3 , 3 * 2  | move ua + 2 , 3 + 3  | move ua + 2 , 4 + 2  | move ua + 2 , 3 * 2  | ( move 0 , 3 ; move 4 * 2 , 3 )  | ( move 4 * 2 , 3 + 3 ; pen 2 )  | ( move 4 * 2 , 4 + 2 ; pen ua )  | ( move ua , 3 * 2 ; move ua / 4 , 0 )  | ( v0 = 4 + 2 ; move v0 + 2 , v0 )  | ( v0 = 2 ; move v0 + ua , 4 + v0 )  | ( v0 = 4 ; move v0 + v0 , 2 + v0 )  | ( v0 = 2 * 2 ; move 4 + v0 , v0 + 2 )  | ( pen ul ; v0 = 2 ; move v0 * 4 , v0 * 3 )  
[108] move 3 * 3 , 2 - 3  | move ua + 3 , 2 - 3  | move ua + 4 , 2 - 3  | move ua + 3 , 3 - 4  | move ua + 4 , 3 - 4  | move ua + 3 , 0 - ul  | move ua + 4 , 0 - ul  | move ua + 3 , ul - 2  | move ua + 4 , ul - 2  | move 3 * 3 , ua - ul  | move ua + 3 , ua - ul  | move ua + 4 , ua - ul  | ( move 4 , 0 - ul ; move ua , ua )  | ( move ua , ua - ul ; move 4 , 0 )  | ( pen ul ; move ua + 4 , 0 - ul )  | ( pen ul ; move ua + 4 , ua - ul )  | ( move ua + 3 , 0 - ul ; v0 = 4 )  | ( move ua , 3 - 4 ; move 3 , ua * 4 )  | ( move ua + ul , 0 - ul ; move 3 , 0 )  | ( move ua + 4 , 2 - 3 ; pen ul + ul )  | ( move ua / 2 , ua - ul ; move ua , 0 )  | ( move ua + 4 , ua - ul ; v0 = ul )  | ( move ua + 4 , ul - 2 ; move 0 , ua + ul )  | ( move ua + 4 , ua - ul ; v0 = 3 / ua )  | ( move 4 , ul - 2 ; v0 = 0 ; move ua , 0 )  | ( v0 = ua - ul ; move v0 + v0 , v0 )  | ( pen ul ; ( move ua + 4 , ua - ul ; pen ul ) )  | ( move ua + 3 , ua - ul ; v0 = 3 ; v1 = 0 )  | ( move ua + 4 , ul - 2 ; move 0 , ul / 4 ; move 0 , 4 )  | ( move 4 , 3 - 4 ; ( move ua , ua ; v0 = ul + ul ) )  | ( move ua , ua - ul ; ( move 4 , ua * 3 ; v0 = 3 ) )  | ( v0 = 0 ; move v0 , v0 - ul ; move ua + 4 , v0 )  
[109] move 3 + 2 , 2 / 4  | move 3 + 2 , ul / 2  | move 4 + ul , 2 / 4  | move 4 + ul , ul / 2  | move 4 + ul , 3 / ua  | move ul - ua , ul / 2  | ( move 4 + ul , 2 / 4 ; pen 2 )  | ( move 4 , ul / 2 ; move ul , ua )  | ( move 4 + ul , ul / 2 ; v0 = 2 )  | ( move 4 + ul , 2 / 4 ; v0 = ua )  | ( move 4 + ul , ul / 2 ; v0 = 4 )  | ( pen ul ; move 3 + 2 , ul / 2 ; pen ua )  | ( pen ul ; move 4 + ul , ul / 2 ; pen 4 )  | ( move 2 , ul / 2 ; move 3 , 0 ; v0 = 3 * 2 )  | ( move 3 + ul , 2 / 4 ; v0 = 2 ; move ul , 0 )  | ( move 4 + ul , 2 / 4 ; v0 = 3 ; pen 4 - ul )  | ( move 4 + ul , 2 / 4 ; v0 = ul + ul ; pen ul )  | ( move ul , 2 / 4 ; move 3 + ul , 0 ; move 0 , 3 / 4 )  
[110] move 3 * 3 , 4 + 2  | move 3 * 3 , 3 + 3  | move 3 * 3 , 3 * 2  | move ua + 3 , 3 + 3  | move ua + 3 , 4 + 2  | move ua + 3 , 3 * 2  | ( move 0 , 4 ; move ua + 3 , 2 )  | ( move ua , 4 + 2 ; move 3 , ua )  | ( pen ul ; move ua + 3 , 4 + 2 )  | ( move 4 , 4 + 2 ; move 4 + ul , 0 )  | ( move 0 , 2 ; move ua + 3 , ua + 4 )  | ( move ua + 3 , 3 + 3 ; v0 = ul )  | ( move ua + 3 , 3 * 2 ; v0 = ua )  | ( move ua + 3 , 4 + 2 ; pen ua + 4 )  | ( move ua , 3 + 3 ; move 2 + ul , ua )  | ( move 0 , 4 + ul ; move ua + 3 , ul )  | ( move 3 , 4 + 2 ; move ua , 0 ; pen ua )  | ( v0 = ua + 3 ; move v0 , v0 + 3 )  | ( move 0 , 2 + ul ; move 3 * 3 , 3 - ua )  | ( v0 = 3 ; move 3 * v0 , v0 + v0 )  | ( v0 = ua + 3 ; move v0 , v0 + v0 )  | ( move ua , 3 + 3 ; move 2 + ul , 0 ; pen 4 )  | ( v0 = 3 ; move v0 * v0 , v0 + v0 )  | ( move ua + 2 , 3 * 2 ; move ul , ua ; pen ua - 2 )  | ( v0 = ua + 3 ; move 0 , v0 ; move v0 , v0 )  | ( v0 = 3 ; move ua , v0 + v0 ; move v0 , 0 )  | ( v0 = ua + 3 ; move v0 , v0 + v0 ; pen 0 )  | ( ( v0 = ua + 3 ; move v0 , v0 * 2 ) ; pen ul )  | ( v0 = 4 - ul ; move v0 , v0 + v0 ; move ua , ua )  
[111] move 4 + 3 , 4 + 4  | move 4 + 3 , 4 * 2  | move 4 + 4 , 4 + 4  | move 4 * 2 , 4 + 4  | move 4 * 2 , 4 * 2  | move ua + 2 , 4 + 4  | move ua + 2 , 4 * 2  | move ua + ul , 4 + 4  | move ua + ul , 4 * 2  | ( move 4 + 3 , 4 * 2 ; pen 0 )  | ( pen ul ; move 4 * 2 , 4 * 2 )  | ( move ua , 4 * 2 ; move ul , 0 )  | ( move ua + ul , 4 * 2 ; pen 0 )  | ( move ua + ul , 4 + 4 ; pen 3 )  | ( move ul , 4 + 4 ; move ua , ua )  | ( move ua + ul , 4 * 2 ; pen ul )  | ( v0 = 4 + 4 ; move v0 , v0 )  | ( v0 = 4 * 2 ; move v0 , v0 )  | ( move ua + ul , 4 + 4 ; v0 = 0 )  | ( move 4 * 2 , 4 * 2 ; v0 = 4 - ul )  | ( v0 = 4 * 2 ; move ul - v0 , v0 )  | ( move ul , 4 * 2 ; pen ul ; move ua + ul , 0 )  | ( v0 = 3 + ul ; move 4 + v0 , v0 + v0 )  | ( move ul , 4 * 2 ; v0 = ua ; move v0 , v0 )  | ( ( move ua + ul , 4 + 4 ; v0 = 3 ) ; pen ul )  | ( ( move ua , 4 * 2 ; v0 = ul ) ; move ul , ua )  | ( move ua + 2 , 4 + 4 ; ( v0 = 0 ; pen v0 ) )  | ( v0 = 4 * 2 ; ( move ul - v0 , v0 ; pen ul ) )  | ( ( move ua , 4 + 4 ; move ul , ua ) ; v0 = ua + 2 )  
[112] move 3 * 3 , 4 + 3  | move ua + 2 , 4 + 3  | move ua + 3 , 4 + 3  | move ua + ul , 4 + 3  | ( move ua , 4 + 3 ; move 3 , 0 )  | ( move ua + 3 , 4 + 3 ; pen ua )  | ( move 4 - ul , 4 + 3 ; move ua , 0 )  | ( pen 4 / ua ; move ua + 3 , 4 + 3 )  | ( move ua + 3 , 4 + 3 ; v0 = ua + 2 )  | ( move 2 , 4 + 3 ; move ua + ul , ua * 2 )  | ( v0 = 3 ; move 3 * v0 , 4 + v0 ; pen 0 )  | ( ( move ua + 3 , 4 + 3 ; pen ua ) ; pen 4 * 2 )  
[113] move 4 + 3 , 3 * 3  | move ua + ul , 3 * 3  | ( move ul , 3 * 3 ; move ua , 0 )  | ( move ua + ul , 3 * 3 ; pen 0 )  | ( move ua , 3 * 3 ; move 4 / ua , 0 )  | ( move ul , 3 * 3 ; move ua , 0 ; v0 = ul )  | ( move ul , 3 * 3 ; move ua , 0 ; pen ua * 2 )  | ( v0 = 4 + ul ; move v0 + 2 , v0 + 4 )  | ( ( move ua , 3 * 3 ; move ul , ua ) ; pen ua * 2 )  | ( move 0 , ul ; v0 = 4 + 3 ; move v0 , v0 + ul )  
[114] move 3 + 2 , 4 * 4  | move 4 + ul , 4 * 4  | move 4 + ul , 2 / ua  | move 4 + ul , ul / 3  | ( move 4 , 4 * 4 ; move ul , ua )  | ( ( move 2 , 4 * 4 ; move 2 , ua ) ; move ul , 0 )  | ( ( v0 = 4 * 4 ; move ul , v0 ) ; move 4 , 0 )  
[115] move 3 + 2 , 3 / 4  | move 4 + ul , 3 / 4  | move ul - ua , 3 / 4  
[116] move 3 + 2 , 4 / 3  | move 4 + ul , 4 / 3  | ( move 4 + ul , 4 / 3 ; v0 = 0 )  | ( move 3 - ul , 4 / 3 ; move 3 , ua + ua )  | ( v0 = 4 / 3 ; move ua - v0 , v0 + ua )  | ( move 3 + ul , 4 / 3 ; ( move ul , 0 ; pen ua ) )  | ( move ul / 3 , ul / 3 ; move ul - ua , ul ; v0 = 0 )  
[117] move 4 + 4 , 4 + 3  | move 4 * 2 , 4 + 3  | move ua + ul , 4 + 3  | ( move 4 , 4 + 3 ; move 4 , ua )  
[118] move 3 * 3 , 3 * 3  | move ua + 3 , 3 * 3  | ( v0 = 3 * 3 ; move v0 , v0 )  | ( v0 = 3 ; move 3 * v0 , 3 * v0 )  | ( v0 = 3 ; move 3 * v0 , v0 * v0 )  | ( pen ul ; ( v0 = 3 * 3 ; move v0 , v0 ) )  
[119] move 3 * 3 , 3 / 2  | move ua + 2 , 3 / 2  | ( v0 = 3 ; move 3 * v0 , v0 / 2 )  
[120] move 3 * 3 , 2 / 3  | move ua + 3 , 2 / 3  | move ua + 4 , 2 / 3  | ( move ua + 3 , 2 / 3 ; pen 2 )  | ( move ua , 2 / 3 ; move 3 , ua )  | ( v0 = ua + 3 ; pen ul ; move v0 , 2 / 3 )  | ( pen ul ; v0 = 3 ; move v0 * v0 , 2 / v0 )  
[121] move 3 * 3 , 4 + 4  | move 3 * 3 , 4 * 2  | move ua + 2 , 4 * 2  | move ua + 2 , 4 + 4  | ( v0 = 4 * 2 ; move v0 , v0 )  | ( v0 = 4 + 4 ; move v0 , v0 )  | ( move 0 , 4 ; move 4 + 4 , ua + 4 )  | ( v0 = 4 * 2 ; move ul + v0 , v0 )  | ( move 3 * 3 , 4 * 2 ; move ul / ua , 4 )  | ( v0 = 4 ; move v0 + v0 , v0 + v0 )  | ( move ul + ul , 4 + 4 ; v0 = ua ; move v0 , v0 )  
[122] move 4 * 2 , 2 / 3  | move 4 + 4 , 2 / 3  | move ua + 2 , 2 / 3  | ( move 4 , 2 / 3 ; move 4 , 0 )  | ( v0 = ua + 2 ; move v0 , 2 / 3 ; pen ul )  
[123] move 4 + 3 , 2 / 4  | move 4 + 3 , ul / 2  | move ua + ul , 2 / 4  | move ua + ul , ul / 2  | ( move 3 , ul / 2 ; move 4 , 0 )  | ( pen ul ; move ua + ul , ul / 2 )  | ( move 0 , ul / 2 ; move 4 + 3 , ua )  | ( move ua + ul , 2 / 4 ; move 0 , 3 )  | ( move 4 + 3 , ul / 2 ; v0 = ua )  | ( move ua + ul , ul / 2 ; v0 = 0 )  | ( move ua + ul , ul / 2 ; pen 2 + 2 )  | ( move ua + ul , ul / 2 ; v0 = ul )  | ( move ua , ul / 2 ; move ul , 0 ; pen ua )  | ( move 4 + 3 , ul / 2 ; ( pen 3 ; pen 3 ) )  | ( move ua + ul , ul / 2 ; move 0 , ul / ua ; pen ua )  | ( move ua + ul , ul / 2 ; v0 = ul ; v1 = v0 )  | ( v0 = ua ; move v0 + ul , ul / 2 ; v1 = v0 )  | ( v0 = 3 + 3 ; v1 = 0 ; move ua + ul , 3 / v0 )  
[124] move 4 + 4 , 2 / 4  | move 4 * 2 , 2 / 4  | move ua + 2 , 2 / 4  | move ua + 3 , 2 / 4  | move 4 + 4 , ul / 2  | move 4 * 2 , ul / 2  | move ua + 2 , ul / 2  | move ua + 3 , ul / 2  | ( move 3 , ul / 2 ; move ua , ua )  | ( move 0 , ua ; move 4 * 2 , ul / 2 )  | ( v0 = 2 ; move v0 * 4 , ul / v0 )  | ( move 0 , ua * ua ; move ua + 2 , 4 + ul )  | ( move ul , ul / 2 ; move ua , ua ; move 2 , 0 )  | ( move ua + 3 , ul / 2 ; v0 = 0 ; v1 = v0 )  
[125] move 4 + 3 , 4 * 4  | move ua + ul , 4 * 4  | move ua + ul , 2 / ua  | ( v0 = 4 ; move v0 + 3 , v0 * v0 )  | ( move ul , ul / 3 ; move ua , ua ; move ul / ua , 3 )  
[126] move 4 + 4 , 4 * 3  | move 4 * 2 , 4 * 3  | move ua + 2 , 4 * 3  | move ua + ul , 4 * 3  | ( move 2 , 4 * 3 ; move 3 * 2 , ua )  | ( move 4 / ua , 4 * 3 ; move ua + ul , 0 )  | ( move 0 , 4 * 2 ; v0 = 4 ; move v0 + v0 , v0 )  
[127] move 3 * 3 , 4 * 3  | move ua + 3 , 4 * 3  | move ua + 4 , 4 * 3  | ( move ua , 4 * 3 ; move 3 , ua )  | ( move ua + 4 , 4 * 3 ; v0 = 4 - 3 )  | ( ( pen ul ; v0 = ua + 4 ) ; move v0 , v0 * 3 )  
[128] move 4 * 2 , 4 * 4  | move ua + 2 , 4 * 4  | ( move ua , 4 * 4 ; move 2 , ua )  | ( move 4 * 2 , 4 * 4 ; v0 = 4 / 2 )  | ( v0 = 4 * 2 ; move v0 , v0 + v0 )  | ( pen ul ; move 4 + 4 , 4 * 4 ; v0 = ua + ul )  | ( v0 = 4 + 4 ; move v0 , v0 + v0 ; v1 = ul )  | ( ( move ul , 4 * 4 ; move ua + ul , ua * 4 ) ; pen ua )  
[129] move 3 * 3 , 4 / 3  | ( move ul , 4 / 3 ; move 4 * 2 , 0 )  
[130] move 4 + 4 , 4 / 3  | move 4 * 2 , 4 / 3  | move ua + 2 , 4 / 3  | move ua + ul , 4 / 3  | ( move 2 , 4 / 3 ; move ua , 0 )  | ( move 4 , 4 / 3 ; move 4 , ua )  | ( move ul , ul / 3 ; move ul - ua , ul ; move ua + ul , ua )  
[131] move 3 * 3 , 4 * 4  | move ua + 3 , 4 * 4  | ( move 3 , 4 * 4 ; move ua , 0 )  | ( move 4 * 2 , 4 * 4 ; move ul , 0 )  | ( v0 = 3 ; move v0 + ua , 4 * 4 )  | ( move 3 , 4 * 4 ; move ua , 0 ; v0 = 0 )  
[132] move 4 * 2 , 3 / 4  | move 4 + 4 , 3 / 4  | move ua + ul , 3 / 4  | ( move 4 * 2 , 3 / 4 ; v0 = ua )  
[133] move 3 * 3 , 3 / 4  | move ua + 3 , 3 / 4  | move ua + 4 , 3 / 4  
[134] move 4 * 3 , 3 / 4  | ( move 3 * 3 , 3 / 4 ; move 2 + ul , ua )  
[135] move ua + 4 , 0 - 4  | move ua + 4 , ua - 4  | ( pen ul ; move ua + 4 , 0 - 4 )  | ( move ua + 4 , ua - 4 ; pen 2 )  | ( move 4 , ua - 4 ; move ua , ua )  | ( move ua + 4 , 0 - 4 ; move ul , ua )  | ( move ua , ua - 4 ; move 4 , 0 ; pen ul )  | ( v0 = ua + 4 ; move v0 , ua - v0 )  | ( v0 = 4 ; move ua + v0 , ua - v0 ; pen ua )  
[136] move ua + 4 , 2 - 3  | move ua + 4 , 3 - 4  | move ua + 4 , 0 - ul  | move ua + 4 , ul - 2  | move ua + 4 , ua - ul  | ( move ua , ul - 2 ; move 4 , 0 )  | ( move 4 , 0 - ul ; move ua , ua )  | ( move ua + 4 , ua - ul ; pen 4 )  | ( move 4 , ua - ul ; move ua , ua )  | ( move ua + 4 , ua - ul ; pen ua )  | ( move ua , 0 - ul ; move 4 , ua * 3 )  | ( move ua + 4 , ua - ul ; v0 = ul )  | ( move ua + 4 , ua - ul ; v0 = 2 + ul )  | ( move ua + 4 , ua - ul ; move 0 , ua + ul )  | ( move ua + 4 , ua - ul ; move ul , 3 + ul )  | ( move 0 , ua - ul ; move ua , ua ; move 4 , ua )  | ( v0 = 4 ; move v0 , ua - ul ; move ua , 0 )  | ( ( move ua + 4 , ua - ul ; pen ua ) ; v0 = ul )  | ( move 4 , ua - ul ; move 0 , 0 ; ( move ua , 0 ; pen ul ) )  
[137] move 3 + 2 , 2 / ua  | move 4 + ul , 2 / ua  | move ua - ul , 2 / ua  | move ua - ul , ul / 3  | ( move 3 , 2 / ua ; move 2 , ua )  | ( move 4 + ul , 2 / ua ; pen 0 )  | ( move 4 , 2 / ua ; move 4 - 3 , ua )  | ( move 0 , 2 / ua ; move 4 + ul , ua )  | ( move 4 + ul , 2 / ua ; v0 = ua )  | ( move ul , 2 / ua ; move 3 + ul , ua )  | ( move 4 + ul , 2 / ua ; pen 2 ; v0 = ua )  
[138] move ua + 4 , 4 + 3  | ( move 0 , 3 ; move ua + 4 , 4 )  | ( move ua + 4 , 4 + 3 ; pen ul )  | ( move 4 , 4 + 3 ; move 4 + 2 , 0 )  | ( move ua , 4 + 3 ; move 3 + ul , ua )  | ( move ul , 4 ; move ua + 4 , ua + 3 )  | ( move 3 + ul , 4 + 3 ; move ua , 0 ; v0 = ua )  | ( v0 = 2 + 2 ; move v0 , 3 + v0 ; move ua , ua )  
[139] move 3 + 2 , ua / 3  | move 4 + ul , ua / 3  | move ua - ul , ua / 3  | move ul - ua , ua / 3  | ( move 4 + ul , ua / 3 ; pen 0 )  | ( move 4 , ua / 3 ; move ul , ua )  | ( move 4 + ul , ua / 3 ; pen ul )  | ( move 2 , ua / 3 ; move 2 + ul , ua )  | ( v0 = ua ; move 4 + ul , v0 / 3 )  | ( v0 = ua / 3 ; move 4 + ul , v0 )  | ( move 3 + 2 , ua / 3 ; pen ul ; pen ul )  
[140] move 3 + 2 , ua / 4  | move 4 + ul , ua / 4  | move ul - ua , ua / 4  | ( move ul , ua / 4 ; move 4 , ua )  | ( move 4 + ul , ua / 4 ; pen ua )  | ( move 3 + 2 , ua / 4 ; v0 = ua )  | ( move 3 + ul , ua / 4 ; move ul , 0 )  | ( move 2 , ua / 4 ; move 4 - ul , ua )  | ( move 3 + 2 , ua / 4 ; pen ua + ul )  | ( move ul , ua / 4 ; pen ul ; move 4 , ua )  | ( move 4 + ul , ua / 4 ; v0 = ua + 3 )  | ( move 4 , ua / 4 ; ( move ul , ua ; v0 = ua ) )  
[141] move ua + 3 , 2 / 4  | move ua + 3 , ul / 2  | ( move ua , ul / 2 ; move 3 , ua )  | ( move 4 - ul , ul / 2 ; move ua , ua )  | ( move ua - ul , ul / 2 ; move 3 + ul , 0 )  | ( pen ul ; ( move ua + 3 , 2 / 4 ; pen 3 ) )  | ( move ua + 3 , ul / 2 ; move 0 - 4 , 0 ; pen 0 )  | ( move ua + 3 , ul / 2 ; v0 = ul ; v1 = 0 )  
[142] move 4 + 3 , 2 / ua  | move ua + ul , 2 / ua  | move ua + ul , ul / 3  | ( move ul , 2 / ua ; move ua , 0 )  | ( move 3 , 2 / ua ; pen 2 - ul ; move 4 , 0 )  
[143] move 3 + 2 , 4 / ua  | move 4 + ul , 4 / ua  | ( move 2 , 4 / ua ; move 3 , ua )  | ( move 4 + ul , 4 / ua ; pen 3 )  | ( move ul , 4 / ua ; move 4 , ua )  | ( move 3 + 2 , 4 / ua ; v0 = 3 )  | ( move 0 , 4 / ua ; move 4 + ul , ua )  | ( move ua / 2 , 4 / ua ; move 2 , ua )  | ( move 4 , 4 / ua ; move ul , ua * 4 )  | ( move 2 , 4 / ua ; pen ul ; move 3 , ua )  | ( move 4 - 2 , 4 / ua ; v0 = ua ; move ul - v0 , ua )  
[144] move ua + 4 , 2 / 3  | ( move 4 , 2 / 3 ; move ua , ua * 4 )  
[145] move 4 + 3 , ua / 3  | move ua + ul , ua / 3  | ( move ua + ul , ua / 3 ; pen 3 + 3 )  | ( move ua + ul , ua / 3 ; move 3 - ua , 0 )  | ( move ua + ul , ua / 3 ; v0 = ul / ua )  | ( move ua + ul , ua / 3 ; move 2 , 3 ; move 0 , 3 - ul )  
[146] move 4 + 4 , 2 / ua  | move 4 * 2 , 2 / ua  | move ua + 2 , 2 / ua  | move ua + 3 , 2 / ua  | ( move 4 , 2 / ua ; move 4 , ua )  
[147] move ua + 4 , 4 * 3  | ( move ua , 4 * 3 ; move 4 , 0 )  | ( move ua + 4 , 4 * 3 ; v0 = 0 )  | ( v0 = 4 ; move ua , 3 * v0 ; move v0 , 0 )  | ( move ua , 4 * 3 ; ( move 4 , ua ; v0 = 3 ) )  | ( move ua , 4 * 3 ; move 3 + ul , ua ; move 0 , ul )  
[148] move 3 + 2 , ul / 4  | move 4 + ul , ul / 4  | move ua - ul , ul / 4  | move ul - ua , ul / 4  | ( move 2 , ul / 4 ; move 3 , ua )  | ( move 3 , ul / 4 ; move 2 , ua )  | ( move 4 , ul / 4 ; move ul , 0 )  | ( move ul , ul / 4 ; move 4 , 0 )  | ( move 4 + ul , ul / 4 ; pen 2 )  | ( move ul , ul / 4 ; move 4 , ua )  | ( move 4 + ul , ul / 4 ; pen ul )  | ( move 4 + ul , ul / 4 ; v0 = ul )  | ( pen ul ; move 4 + ul , ul / 4 ; pen ul )  | ( move ul , ul / 4 ; move 3 + ul , ua + ua )  | ( move 4 , ul / 4 ; ( move ul , 0 ; pen ul ) )  | ( v0 = 4 ; move 4 , ul / v0 ; move ul , ua )  | ( move ul , ul / 4 ; ( move 4 , 0 ; move 0 , 3 ) )  | ( move 3 + 2 , ul / 4 ; ( v0 = ua ; pen v0 ) )  | ( ( move 3 - ul , ul / 4 ; pen ul ; move 3 , ua ) ; pen ul )  
[149] move 3 * 3 , 2 / ua  | move ua + 3 , 2 / ua  | move ua + 3 , ul / 3  | ( move ua + 3 , 2 / ua ; v0 = 2 )  | ( move ua / 3 , 2 / ua ; move ua + ul , 0 )  | ( move 3 , 2 / ua ; ( move ua , ua ; pen 0 ) )  | ( move ua + 3 , 2 / ua ; ( pen ua ; pen 2 - ul ) )  | ( move ua + 3 , 2 / ua ; v0 = 0 ; v1 = v0 )  | ( v0 = 4 ; v1 = v0 ; move ua + 3 , 2 / ua )  | ( move ua + 3 , ul / 3 ; v0 = 3 ; v1 = v0 )  
[150] move 3 * 3 , ua / 3  | move ua + 3 , ua / 3  | ( move 3 * 3 , ua / 3 ; pen ua )  | ( v0 = 3 ; move v0 * 3 , ua / 3 )  | ( v0 = 4 - ul ; move ua + v0 , ua / v0 )  | ( move 3 , ua / 3 ; move ua , 0 ; move ul / 3 , ua )  | ( pen ul ; move 3 / 4 , ua / 3 ; move ua + 2 , ua * 2 )  
[151] move 4 * 2 , 3 / ua  | move 4 + 4 , 3 / ua  | move ua + 2 , ul / 2  | ( move 4 * 2 , 3 / ua ; pen ua )  | ( move 4 * 2 , 3 / ua ; pen ul ; pen 2 - ul )  | ( ( move 4 / ua , 3 / ua ; move ua + ul , 0 ) ; pen 4 )  
[152] move ua + 4 , 3 / 4  | ( move 4 , 3 / 4 ; move ua , ua )  | ( move 4 , 3 / 4 ; v0 = 3 ; move ua , ua )  | ( v0 = ul / 4 ; ( move ua , ul - v0 ; move 4 , ua ) )  
[153] move 4 + 3 , ua / 4  | ( pen 3 ; move ua , ua / 4 )  | ( move ul , ua / 4 ; move 3 * 2 , ua )  | ( move ul , 4 * 2 ; ( pen 3 ; move ua , 3 ) )  | ( v0 = 4 ; move v0 , ua / v0 ; move 3 , 0 )  
[154] move 4 + 3 , 4 / ua  | move ua + ul , 4 / ua  | ( move 4 + 2 , 4 / ua ; move ul , ua )  | ( move ua , 4 / ua ; move ul , ua ; move ul , 3 )  | ( move ua , 4 / ua ; pen ul + ul ; move ul , ua )  
[155] move 3 * 3 , 3 / ua  | move ua + 3 , 3 / ua  | ( move 3 , 3 / ua ; move ua , 0 )  | ( pen ul ; move ua + 3 , 3 / ua )  | ( move ua + 3 , 3 / ua ; pen ul )  | ( move ua + 3 , 3 / ua ; pen 3 - 2 )  | ( move ua - ul , 3 / ua ; move 4 , 0 )  
[156] move 4 + 4 , ua / 3  | move 4 * 2 , ua / 3  | move ua + 2 , ua / 3  | ( move ua , ua / 3 ; move 2 , 0 )  | ( move 2 , ua / 3 ; move ua , ua )  | ( move ua , ua / 3 ; move 2 , ua )  | ( move 4 * 2 , ua / 3 ; v0 = ul )  | ( move ul + ul , ua / 3 ; move ua , 0 )  | ( move ua , ua / 3 ; move ul + ul , ua )  | ( pen ul ; move 4 , ua / 3 ; move 4 , 0 )  | ( v0 = ua / 3 ; move v0 + ua , v0 )  
[157] move 4 * 2 , ua / 4  | move 4 + 4 , ua / 4  | move ua + 2 , ua / 4  | move ua + ul , ua / 4  | ( move ua + 2 , ua / 4 ; v0 = 3 + ul )  | ( ( move ua , ua / 4 ; move 2 , ua ) ; pen 4 )  | ( v0 = ua / 4 ; move v0 + ua , v0 ; pen ul )  | ( move 4 * 2 , ua / 4 ; v0 = ul ; v1 = v0 )  
[158] move 3 * 3 , ua / 4  | ( pen ul ; move 3 * 3 , ua / 4 )  | ( pen 3 ; move ua , ua / 4 ; move 2 , ua )  
[159] move 4 * 2 , 4 / ua  | move 4 + 4 , 4 / ua  | move ua + 2 , 4 / ua  | ( move 4 * 2 , 4 / ua ; pen ul )  | ( move 2 , 4 / ua ; move ua , ua )  | ( move 4 * 2 , 4 / ua ; v0 = 3 - ul )  | ( move ul , 4 / ua ; move 4 + 2 , 0 ; move ul , ua )  | ( move ul , 4 / ua ; move ua + ul , ua ; v0 = ul )  
[160] move 3 * 3 , 4 / ua  | move ua + 3 , 4 / ua  | move ua + 4 , 4 / ua  | ( pen ul ; move ua , 4 / ua ; move 3 , ua )  | ( v0 = ua ; move ua , 4 / v0 ; move 3 , v0 )  
[161] move 4 * 2 , ul / 4  | move 4 + 4 , ul / 4  | move ua + 2 , ul / 4  | ( move 0 , ua ; move 4 * 2 , ul / 4 )  | ( move 4 + 4 , ul / 4 ; pen ua + ua )  
[162] move 3 * 3 , ul / 4  | move ua + 3 , ul / 4  | ( move ua + 3 , ul / 4 ; pen 0 )  | ( move ua + 3 , ul / 4 ; pen 2 / 4 )  | ( move ua + 3 , ul / 4 ; v0 = ua )  | ( move ua + 3 , ul / 4 ; pen ua * 3 )  | ( move ua + 3 , ul / 4 ; pen ua + ul )  | ( move ua + 3 , ul / 4 ; pen ul ; pen ul )  | ( move ua + 3 , ul / 4 ; move 0 , 2 - ua )  | ( move ua + 2 , ul / 4 ; move ul / 2 , 0 )  | ( move 2 , ul / 4 ; move ua , ua ; move ul , ua )  | ( v0 = ua ; move 3 , ul / 4 ; move v0 , v0 )  | ( move 3 * 3 , ul / 4 ; v0 = ul ; v1 = ua )  
[163] move ua - ul , 3 + 2  | move ul - ua , 3 + 2  | move ul - ua , 4 + ul  | move ua - ul , 4 + ul  | ( move 0 , 2 ; move ul - ua , 3 )  | ( move ul - ua , 3 + 2 ; pen 0 )  | ( move ul - ua , 4 + ul ; pen ua )  | ( move ul - ua , 3 + 2 ; v0 = 0 )  | ( move 4 , 4 + ul ; move 3 / 2 , ua )  | ( move 0 , ua ; move ul - ua , 3 + 2 )  | ( move 0 , 2 - ua ; move ul - ua , 3 )  | ( move ul - ua , 4 + ul ; v0 = ua )  | ( v0 = 4 + ul ; move ua - ul , v0 )  | ( move ua - ul , 3 + 2 ; v0 = ua + 4 )  | ( move ua - ul , 3 + 2 ; pen 2 ; v0 = 0 )  | ( move ua - ul , 4 + ul ; v0 = 3 ; pen ul )  | ( ( move 0 , 0 ; move 0 , ul ) ; move ua - ul , 4 )  | ( move ua / 3 , 4 + ul ; move 3 , ua ; move 0 , ua )  | ( move ul , 2 ; ( move ua - ul , 3 ; v0 = ua ) )  | ( move 0 , ul - ua ; move ua - ul , 4 ; v0 = ua )  | ( move 0 , 3 ; v0 = 2 ; move ul - ua , 4 / v0 )  | ( v0 = ul ; v1 = ul ; move ua - v1 , 4 + ul )  | ( move ul , 2 ; ( move ua - ul , 3 ; move ul , ua + 3 ) )  | ( ( move ua - ul , 4 + ul ; pen ua * 3 ) ; v0 = ua )  | ( ( move 0 , ul ; move ul - ua , 4 ; pen 0 ) ; move ul , 0 )  
[164] move 3 + 2 , ua * ua  | move 4 + ul , ua * ua  | ( move 3 , ua * ua ; move 2 , 0 )  | ( move 3 , ua * ua ; move 2 , ua )  | ( move 4 , ua * ua ; move ul , 0 )  | ( move 4 + ul , ua * ua ; pen 0 )  | ( pen ul ; move 4 + ul , ua * ua )  | ( move 2 , ua * ua ; move 2 + ul , ua )  | ( move 0 , ua * ua ; move 4 + ul , ua )  | ( move 4 , ua * ua ; move ul , 0 - ua )  | ( move ul , ua * ua ; move 4 , ua * 2 )  | ( move 4 + ul , ua * ua ; v0 = ua )  | ( move 4 + ul , ua * ua ; pen ua + 3 )  | ( move 4 + ul , ua * ua ; pen 3 / ua )  | ( v0 = ua ; move 4 + ul , v0 * v0 )  | ( pen ul ; move ul , ua * ua ; move 4 , ua )  | ( pen ul ; move 4 , ua * ua ; move ul , ua )  | ( move 4 + ul , ua * ua ; move 0 , ul / 3 )  | ( move 4 + ul , ua * ua ; v0 = ua + ul )  | ( move 4 + ul , ua * ua ; pen 4 ; v0 = 2 )  | ( move 4 + ul , ua * ua ; pen ua ; v0 = ua )  | ( ( move 4 , ua * ua ; v0 = 0 ) ; move ul , ua )  | ( pen ul ; move 4 + ul , ua * ua ; v0 = 2 + ul )  | ( move 4 + ul , ua * ua ; move 0 , ul ; v0 = ua / 3 )  
[165] move 4 + 3 , ua * ua  | move ua + ul , ua * ua  | ( move 3 , ua * ua ; move 4 , 0 )  | ( move 4 + 3 , ua * ua ; move 0 , 0 )  | ( move 4 + 3 , ua * ua ; v0 = ua )  | ( move 4 + 3 , ua * ua ; v0 = ul )  | ( move 2 + ul , ua * ua ; move 4 , ua )  | ( move ua , ua * ua ; move ul , ua + ua )  | ( move 3 + 2 , ua * ua ; move ul + ul , 0 )  | ( move 2 , ua * ua ; ( move ul , ua ; move 4 , ua ) )  | ( move 4 + 3 , ua * ua ; ( pen 3 / ua ; v0 = ua ) )  
[166] move 2 - ua , ua / 3  | move ua - 2 , ua / 3  | ( pen ul ; move ua - 2 , ua / 3 )  | ( pen ul ; move 2 - ua , ua / 3 )  | ( v0 = ua / 3 ; move v0 * v0 , v0 )  | ( v0 = ua / 3 ; move v0 , v0 ; move v0 , ua )  
[167] move 3 * 3 , ua * ua  | move ua + 2 , ua * ua  | ( move 3 * 3 , ua * ua ; pen 2 )  | ( move 3 * 3 , ua * ua ; pen ua )  | ( move 3 * 3 , ua * ua ; v0 = ua + 2 )  | ( move 3 * 3 , ua * ua ; pen ul / ua ; pen ul )  | ( move 3 * 3 , ua * ua ; v0 = ua - 3 ; pen 2 )  | ( ( move ua , ua * ua ; move 2 , 0 ) ; move 0 , ul )  
[168] move ua + 4 , ua / 3  | ( move 4 , ua / 3 ; move ua , ua )  | ( move ua + 4 , ua / 3 ; v0 = 4 )  | ( move 2 , ua / 3 ; move ua + 2 , ua )  | ( move ua + 4 , ua / 3 ; pen 3 ; pen 2 )  | ( pen 4 ; pen ul ; move ua + 4 , ua / 3 )  | ( move ua + 4 , ua / 3 ; move 0 , 2 + 2 )  | ( move ua , ua / 3 ; v0 = 4 + ul ; move 4 , ua )  | ( move 3 + ul , ua / 3 ; v0 = ua ; move ua , v0 )  
[169] move ua + 4 , 4 / ua  | ( move ua + 4 , 4 / ua ; pen 0 )  | ( move ua + 4 , 4 / ua ; pen ua - 3 )  
[170] move 3 * 3 , ul / ua  | ( move 3 * 3 , ul / ua ; v0 = ua )  | ( move 4 + ul , ul / ua ; move 4 , ua )  
[171] ( pen 3 ; move 4 , 0 )  | ( pen 3 ; move 4 , ua )  | ( pen 2 + ul ; move 4 , 0 )  | ( pen ua / 2 ; move 4 , 0 )  | ( pen 3 ; move 4 , ua * 2 )  | ( pen 3 ; move 4 , ua * 4 )  | ( pen 2 + ul ; move 4 , ua )  | ( pen ua / 2 ; move 4 , ua )  | ( pen ul ; pen 3 ; move 4 , 0 )  | ( pen ua / 2 ; move 3 + ul , ua )  | ( pen 3 ; move 4 , 0 ; v0 = 0 )  | ( pen 3 ; move 4 , 0 ; v0 = 2 )  | ( ( pen 4 ; pen 3 ) ; move 4 , 0 )  | ( pen 3 ; move 0 , ua ; move 4 , 0 )  | ( pen 3 ; move 4 , ua ; v0 = 0 )  | ( pen 3 ; move 4 , ua ; v0 = 3 )  | ( ( pen ul ; pen 3 ) ; move 4 , 0 )  | ( pen 4 * 3 ; pen 3 ; move 4 , ua )  | ( pen ua ; pen 2 + ul ; move 4 , ua )  | ( v0 = 4 ; pen 3 ; move v0 , ua )  | ( pen 3 ; move 4 , 0 ; move 0 , 3 - ul )  | ( pen ua / 2 ; move 4 , 0 ; v0 = 4 )  | ( pen 3 / ua ; pen 3 ; move 4 , ua * 4 )  | ( ( pen 3 ; v0 = 4 ) ; move v0 , 0 )  | ( pen 3 ; v0 = 2 * 2 ; move v0 , ua )  | ( pen 3 ; v0 = ua ; move 4 , v0 - ua )  | ( pen 2 + ul ; move 4 , 0 ; move 0 , 2 - ul )  | ( pen 3 ; move 4 , ua * 4 ; v0 = ua / 2 )  | ( pen 2 + ul ; ( move 4 , ua ; pen ul ; pen 0 ) )  | ( v0 = 2 + ul ; pen v0 ; move ul + v0 , ua )  | ( ( v0 = ua * 4 ; pen 3 ) ; ( move 4 , 0 ; pen ua ) )  
[172] ( pen 4 ; move 4 , 0 )  | ( pen 4 ; move 4 , ua )  | ( pen ua ; move 4 , ua )  | ( pen ua + 2 ; move 4 , 0 )  | ( pen ua - 2 ; move 4 , 0 )  | ( pen 4 ; move 2 + 2 , ua )  | ( pen ua - ul ; move 4 , 0 )  | ( pen 3 + ul ; move 4 , ua )  | ( pen ua + 4 ; move 4 , ua )  | ( pen ua + ul ; move 3 + ul , ua )  | ( pen 4 ; move 4 , ua ; move 0 , ul )  | ( pen ua ; move 4 , ua ; move 0 , ua )  | ( pen 3 + ul ; move 2 + 2 , ua + ua )  | ( v0 = ua ; pen ua ; move 4 , v0 )  | ( pen 4 ; ( pen 4 ; move 3 + ul , ua ) )  | ( pen 4 ; move 4 , ua ; move 0 , ul / ua )  | ( pen ua + ul ; move 4 , ua * 3 ; pen 0 )  | ( pen ua ; move 0 - 4 , ua ; move ul , ua )  | ( pen ua ; move 3 + ul , ua ; v0 = ul )  | ( pen 2 + 2 ; move 3 , ua * 4 ; move ul , 0 )  | ( ( v0 = 4 ; pen v0 ) ; move v0 , ua )  | ( pen 3 + ul ; move 4 , ua * 2 ; pen 4 + 3 )  | ( v0 = 4 ; pen v0 ; move v0 , v0 * ua )  | ( pen 4 ; move 4 , ua ; ( pen ul ; v0 = 3 ) )  | ( ( pen 0 ; pen ul ) ; pen ua + 4 ; move 4 , 0 )  | ( ( pen 0 ; v0 = 4 ) ; pen v0 ; move v0 , ua )  | ( pen 4 ; ( v0 = ul - ua ; move 4 , ul - v0 ) )  | ( pen 0 ; ( pen ua ; move 4 , 0 - ua ) ; v0 = ul )  | ( pen 3 ; ( pen 4 + 2 ; move 4 , ua ; pen ua + ul ) )  | ( move ul - 3 , 0 ; ( pen 4 ; move 4 , 0 ) ; v0 = ul )  | ( ( pen 4 ; move 3 + ul , ua ) ; pen ua ; v0 = 4 + ul )  
[173] ( pen 3 ; move 4 , 2 )  | ( pen 2 + ul ; move 4 , 2 )  | ( pen 3 ; move 3 + ul , 2 )  | ( pen 3 ; move 4 , 2 - ua )  | ( pen 4 - ul ; move 4 , 2 )  | ( pen 3 ; move 4 , ul + ul )  | ( pen ua - 3 ; move 3 + ul , 2 )  | ( pen 3 ; move 4 , 2 ; v0 = 0 )  | ( pen 3 ; move 4 , 2 ; v0 = ua )  | ( pen 3 ; move 4 , 2 ; v0 = 4 + 3 )  | ( pen 3 ; move 0 , 2 ; move 4 , 0 - ua )  | ( pen 4 ; ( pen 3 ; move 3 + ul , 2 ) )  | ( pen ua / 2 ; v0 = ua ; move 4 , 2 )  | ( ( pen 3 ; move 0 , ul ) ; move 4 , ul )  | ( pen 3 ; move 4 , ul + ul ; v0 = ua )  | ( ( pen 2 + 2 ; pen 3 ) ; move 4 , 4 - 2 )  | ( ( pen 2 + ul ; move 4 , 2 ) ; v0 = 0 )  | ( pen ua / 2 ; move 4 , 4 / 2 ; v0 = 2 )  | ( pen 3 ; ( move 4 , ua + 2 ; v0 = 4 ) )  | ( pen 3 ; move 2 + 2 , 2 ; v0 = ua + ul )  | ( pen 2 + ul ; move ul , ul + ul ; move 3 , 0 )  | ( pen 3 ; move 4 , ul + ul ; move 0 , ul + ul )  | ( pen 3 ; v0 = ul ; move 3 + v0 , v0 + v0 )  | ( pen 4 - ul ; move ul , ua + 2 ; move 4 - ul , ua )  | ( ( move 0 , ua ; pen 3 ) ; ( move 3 + ul , 2 ; pen ua ) )  
[174] ( pen 2 ; move 4 , 3 )  | ( pen 2 ; move 0 - 4 , 3 )  | ( pen 4 - 2 ; move 4 , 3 )  | ( pen 4 / 2 ; move 4 , 3 )  | ( pen 2 ; move 4 , 2 + ul )  | ( pen 3 - ul ; move 4 , 3 )  | ( pen ul + ul ; move 4 , 3 )  | ( pen 2 ; move 2 * 2 , ua + 3 )  | ( ( pen 4 ; pen 2 ) ; move 4 , 3 )  | ( pen 2 ; move 4 , 2 + ul ; pen 0 )  | ( pen ua + 2 ; pen 2 ; move 4 , 3 )  | ( pen 0 ; pen 2 ; move 4 , 4 - ul )  | ( pen ul - 3 ; pen 2 ; move 4 , 3 )  | ( pen 3 - ul ; move 2 + 2 , 4 - ul )  | ( move 0 , 3 - ul ; pen 2 ; move 4 , ul )  | ( pen ul ; ( pen 2 ; move 4 , 2 + ul ) )  | ( ( pen ul + ul ; move 4 , 3 - ua ) ; v0 = ua )  | ( v0 = 4 - ul ; ( pen 2 ; move ul + v0 , v0 ) )  
[175] ( pen 4 ; move 4 , 2 )  | ( pen 4 ; move 0 - 4 , 2 )  | ( pen 4 ; move 2 - ua , 2 )  | ( pen 3 + ul ; move 4 , 2 )  | ( pen 4 ; move 4 , ul + ul )  | ( pen ua - 2 ; move 4 , 3 - ul )  | ( pen 4 ; move ul , 2 ; move 3 , 0 )  | ( pen ul ; ( pen 4 ; move 4 , 2 ) )  | ( pen 4 ; move 4 , 4 / 2 ; v0 = 3 )  | ( ( pen 4 ; move 4 , 2 ) ; v0 = 3 )  | ( pen 3 ; move 3 , 2 ; move 2 - ua , 0 )  | ( pen 4 - ul ; move 4 , 2 ; v0 = 2 )  | ( ( pen ul ; pen 4 ) ; move 2 * 2 , 2 )  | ( pen ua ; pen 4 ; move 3 + ul , 4 / 2 )  | ( pen 4 ; move 3 , ul + ul ; move ul , 0 )  | ( ( pen 4 ; move 4 , ul + ul ) ; move 0 , 0 )  | ( pen 3 + ul ; ( v0 = ul ; move 4 , 2 ) )  | ( v0 = 2 ; ( pen ua - 2 ; move 4 , v0 ) )  | ( v0 = ul + ul ; pen v0 + v0 ; move 4 , v0 )  
[176] ( pen 2 ; move 4 , 4 )  | ( pen 2 ; move 2 * 2 , 4 )  | ( pen 4 / 2 ; move 4 , 4 )  | ( pen 2 ; move 4 , ua + 4 )  | ( pen 2 ; move 3 + ul , 4 )  | ( pen 3 - ul ; move 4 , 4 )  | ( pen 2 ; move 4 , 4 ; pen 0 )  | ( pen 2 ; move 4 , 4 ; pen ul )  | ( pen 2 ; move 3 + ul , ua + 4 )  | ( pen ul + ul ; move 4 , 3 + ul )  | ( pen 2 ; move 2 * 2 , 4 ; pen ua )  | ( ( pen ua ; pen 2 ) ; move 4 , 4 )  | ( v0 = 4 ; pen 2 ; move v0 , v0 )  | ( pen 2 ; v0 = 4 ; move v0 , v0 )  | ( ( pen 2 ; move 4 , 4 ) ; v0 = ua )  | ( pen 2 ; move 2 , 4 ; move 3 - ul , ua )  | ( pen ul + ul ; move 4 , 4 ; v0 = 4 )  | ( pen ul ; pen 4 / 2 ; move 4 , 4 - ua )  | ( ( move 0 , ua * 3 ; pen 2 ) ; move 4 , 4 )  | ( v0 = 3 + ul ; pen 2 ; move v0 , v0 )  | ( move 4 - 3 , ul ; pen 2 ; move 4 , 4 - ul )  | ( ( v0 = 4 - 2 ; pen v0 ) ; move 4 , 4 )  | ( v0 = 4 ; pen v0 - 2 ; move v0 , v0 )  | ( ( pen 2 ; move 4 , 4 ) ; v0 = ul ; pen 0 )  | ( v0 = ul + ul ; pen 2 ; move 4 , v0 + 2 )  | ( v0 = 2 ; pen 2 ; move 2 + v0 , v0 + v0 )  | ( pen ul + ul ; v0 = 2 ; move 3 + ul , v0 + v0 )  | ( v0 = 2 ; pen v0 ; move v0 + v0 , v0 + v0 )  | ( ( pen ua + 4 ; pen 2 ; move 4 , 4 ) ; v0 = ul - 4 )  | ( ( pen ul + ul ; v0 = 4 ) ; move v0 , v0 ; pen 4 )  
[177] ( pen 3 ; move 4 , 3 )  | ( pen 3 ; move 4 , ua + 3 )  | ( pen 3 ; move 3 + ul , 3 )  | ( pen 3 ; move 4 , 2 + ul )  | ( pen ua - 3 ; move 4 , 3 )  | ( pen 4 - ul ; move 4 , 3 )  | ( pen ua ; pen 3 ; move 4 , 3 )  | ( pen 3 + ul ; move 3 + ul , 3 )  | ( pen ua / 2 ; pen 3 ; move 4 , 3 )  | ( pen 3 ; ( move 4 , 3 ; v0 = 0 ) )  | ( v0 = 3 ; pen v0 ; move 4 , v0 )  | ( pen 3 ; v0 = ul + ul ; move 4 , 3 )  | ( pen 3 ; pen 2 + ul ; move 4 , ua + 3 )  | ( ( pen ul ; pen 3 ) ; move 4 , 3 - ua )  | ( v0 = 2 + ul ; pen v0 ; move 4 , v0 )  | ( pen 3 ; move 3 + ul , 2 + ul ; v0 = 3 )  | ( ( pen 3 ; move 4 , 2 + ul ) ; v0 = ua )  | ( ( v0 = 3 ; pen v0 ) ; move v0 + ul , 3 )  | ( pen 3 ; move 3 + ul , 4 - ul ; v0 = 4 - 3 )  | ( ( pen 3 ; move 4 , 3 ) ; v0 = 3 ; v1 = ul )  | ( ( pen 3 ; move 4 , 3 ; move 0 , 3 ) ; pen 3 + ul )  | ( ( v0 = 3 ; pen v0 ) ; move 4 , v0 ; pen ua )  | ( pen ua ; pen 3 ; ( v0 = 3 - ua ; move 4 , v0 ) )  | ( pen 3 ; ( move 0 , ua + ul ; move 2 , 2 ; move 2 , ua ) )  
[178] ( pen 3 ; move 4 , 4 )  | ( pen 3 ; move 0 - 4 , 4 )  | ( pen 3 ; move 4 , 3 + ul )  | ( pen 2 + ul ; move 4 , 4 )  | ( pen ua - 4 ; move 4 , 4 )  | ( v0 = ua ; pen 3 ; move 4 , 4 )  | ( pen 3 ; move 4 , 4 ; v0 = ul )  | ( pen 3 ; move 4 , 4 ; pen 3 + ul )  | ( pen 3 ; v0 = 4 ; move 4 , v0 )  | ( pen 2 + ul ; move 3 + ul , 2 * 2 )  | ( pen 3 ; ( move 4 , 4 ; move 0 , 4 ) )  | ( v0 = 4 ; pen 3 ; move v0 , v0 )  | ( pen 3 ; v0 = 4 ; move v0 , v0 )  | ( pen 0 ; ( pen 3 ; move 4 , ua + 4 ) )  | ( pen 4 - ul ; pen 3 ; move 4 , 4 - ua )  | ( pen 3 ; v0 = 3 + ul ; move v0 , 4 )  | ( pen 2 + ul ; v0 = 4 ; move v0 , v0 )  | ( pen ua / 2 ; v0 = 4 ; move v0 , v0 )  | ( ( pen 3 ; move 4 , ua + 4 ) ; v0 = ul )  | ( pen 2 + ul ; move 3 + ul , 4 ; v0 = ua )  | ( v0 = 4 ; pen v0 - ul ; move v0 , v0 )  | ( ( v0 = 3 ; pen v0 ) ; move ul + v0 , 4 )  | ( v0 = 3 + ul ; pen 2 + ul ; move v0 , v0 )  | ( pen 0 ; ( pen 3 ; move 4 , 4 ; pen ua ) ; pen 0 )  | ( v0 = 4 ; ( pen 3 ; move v0 , v0 ) ; pen 4 )  | ( ( pen 4 - ul ; move 4 , 4 ) ; pen 2 ; v0 = 0 )  
[179] ( pen 4 ; move 4 , 3 )  | ( pen 4 ; move 2 + 2 , 3 )  | ( pen 4 ; move 4 , ua + 3 )  | ( pen 4 ; move 4 , 4 - ul )  | ( pen 4 ; move 4 , 3 ; pen ul )  | ( pen 3 + ul ; move 4 , 2 + ul )  | ( pen 0 ; pen 4 + 3 ; move 4 , 3 )  | ( pen 4 ; v0 = 3 ; move 4 , v0 )  | ( pen ua * 2 ; move 3 + ul , 4 - ul )  | ( v0 = 4 ; pen v0 ; move v0 , 3 )  | ( pen ul ; pen 2 * 2 ; move 4 , 2 + ul )  | ( ( pen 0 ; pen ua ) ; pen 4 ; move 4 , 3 )  | ( v0 = 3 + ul ; pen v0 ; move v0 , 3 )  | ( ( move 0 , ul ; pen 2 + 2 ) ; move 4 , ul + ul )  | ( v0 = 3 ; pen ul + v0 ; move ul + v0 , v0 )  | ( ( v0 = 4 ; move 3 , ua ; pen v0 ) ; move v0 , 3 )  | ( ( v0 = 3 ; pen 4 ) ; move ul , v0 ; move v0 , ua )  
[180] ( pen 4 ; move 4 , 4 )  | ( pen 4 ; move 4 , 2 * 2 )  | ( pen 4 ; move 4 , 3 + ul )  | ( pen 3 + ul ; move 4 , 4 )  | ( pen 4 ; move 4 , 4 - ua )  | ( pen 4 ; move 4 , 4 ; pen ua )  | ( pen 2 * 2 ; move 2 * 2 , 4 )  | ( move ul , 0 ; pen 4 ; move 4 , 4 )  | ( pen ul ; pen 4 ; move 3 + ul , 4 )  | ( pen 4 ; v0 = 4 ; move 4 , v0 )  | ( v0 = 4 ; pen v0 ; move 4 , 4 )  | ( v0 = 4 ; pen v0 ; move v0 , 4 )  | ( v0 = 4 ; pen v0 ; move 4 , v0 )  | ( v0 = 4 ; pen 4 ; move v0 , v0 )  | ( v0 = 4 ; pen v0 ; move v0 , v0 )  | ( pen 4 ; v0 = 3 + ul ; move v0 , 4 )  | ( pen 4 ; v0 = 3 + ul ; move 4 , v0 )  | ( v0 = ul ; pen 4 ; move v0 * 4 , 4 )  | ( v0 = 4 ; pen v0 ; move v0 , 3 + ul )  | ( move ua / 4 , ul ; pen 4 ; move 4 , 4 - ul )  | ( pen ul - 4 ; pen 4 ; move 3 + ul , 4 - ua )  | ( ( v0 = 4 ; pen v0 ) ; move v0 , v0 )  | ( v0 = 3 + ul ; pen v0 ; move v0 , v0 )  | ( v0 = 4 ; pen v0 ; move v0 , v0 - ua )  | ( ( pen 4 ; move 4 , 4 ) ; ( pen ua ; pen 0 ) )  | ( pen 4 ; ( v0 = ul ; move 4 , 4 ; pen ua ) )  | ( v0 = 4 ; pen v0 * v0 ; move v0 , ua + 4 )  | ( pen 4 ; v0 = 4 ; ( move v0 , v0 ; pen ua ) )  | ( v0 = 4 ; ( pen 0 ; pen v0 ) ; move v0 , v0 )  | ( ( v0 = 4 ; pen ul ) ; pen v0 ; move v0 , v0 )  | ( pen 0 ; ( pen 0 ; move ul , ul ; pen 4 ) ; move 4 , 3 )  | ( ( move 0 , ua ; v0 = 4 ) ; pen v0 ; move 4 , v0 )  
[181] ( pen 3 ; move ua , 0 )  | ( pen 3 ; move ua , ua )  | ( pen 2 + ul ; move ua , 0 )  | ( pen 4 - ul ; move ua , 0 )  | ( pen 2 + ul ; move ua , ua )  | ( pen ua / 2 ; move ua , ua )  | ( pen 4 - ul ; move ua , ua )  | ( pen 3 ; move ua , 0 ; pen 3 )  | ( pen 3 ; pen 3 ; move ua , ua )  | ( pen ua ; pen 3 ; move ua , ua )  | ( pen ul ; pen 3 ; move ua , ua )  | ( pen 3 ; move ua , ua ; pen ul )  | ( pen ua / 2 ; move ua , ua * 3 )  | ( pen ua / 2 ; move ua , ua + ua )  | ( pen 0 ; ( pen 3 ; move ua , 0 ) )  | ( v0 = 0 ; pen 3 ; move ua , ua )  | ( pen 3 ; move ua , ua ; pen 4 / 2 )  | ( pen 3 ; move ua , ua ; v0 = ua )  | ( pen 3 ; move ua , ua ; v0 = ul )  | ( v0 = 3 ; pen v0 ; move ua , ua )  | ( v0 = ua ; pen 3 ; move ua , v0 )  | ( pen 3 ; move ua , ua ; v0 = 2 - 3 )  | ( pen 3 ; move ua , ua ; v0 = ul + ul )  | ( v0 = ua * 3 ; pen 3 ; move ua , v0 )  | ( pen 3 ; v0 = 0 ; move v0 - ua , v0 )  | ( pen 3 ; v0 = ua ; move v0 , v0 + ua )  | ( pen ua / 2 ; v0 = ua ; move v0 , v0 )  | ( v0 = 2 + ul ; ( pen v0 ; move ua , ua ) )  | ( v0 = ua + ul ; pen 3 ; move ua , ul - v0 )  | ( pen 0 ; ( pen ul ; pen 3 ) ; move ua , ua / 2 )  | ( ( pen 3 ; move ua , 0 ) ; pen ua ; pen ua + ul )  | ( ( pen 3 ; move ua , ua ) ; ( pen ua ; v0 = ul ) )  
[182] ( pen ua ; move 4 , 0 )  | ( pen ua ; move 4 , ua )  | ( pen ua ; move 0 - 4 , 0 )  | ( pen ua ; move 3 + ul , 0 )  | ( pen ua + ul ; move 4 , 0 )  | ( pen ua * 3 ; move 4 , ua )  | ( pen ua ; move 3 + ul , ua )  | ( pen ua + ul ; move 4 , ua )  | ( pen ua - ul ; move 4 , ua )  | ( pen ua ; move 4 , ua ; pen ua )  | ( pen ua ; pen ua ; move 4 , ua )  | ( pen 4 * 3 ; move 4 , ua * 3 )  | ( pen 4 + 3 ; move ua - 2 , ua )  | ( pen ua + ul ; move 4 , ua * 4 )  | ( pen ua + ul ; move 4 , ua + ua )  | ( pen ua ; move 4 , ua * 2 ; pen 4 )  | ( pen ua ; move 4 , ua ; v0 = ul )  | ( pen ua ; pen ua * ua ; move 4 , 0 )  | ( move ul - 4 , 0 ; pen ua ; move 4 , 0 )  | ( pen ua * 4 ; move 4 , 0 ; v0 = ul )  | ( pen ua ; ( move 4 , 0 ; pen 3 + ul ) )  | ( pen ua + ul ; move 4 , ua ; v0 = 3 )  | ( v0 = ul ; pen ua * 3 ; move 4 , ua )  | ( pen ul ; ( pen ua ; move 4 , ua * 2 ) )  | ( pen ua ; move ul , ua ; move ua / 2 , 0 )  | ( pen ua ; v0 = 3 + ul ; move v0 , ua )  | ( ( pen 4 - 3 ; pen 4 + ul ) ; move 4 , 0 )  | ( v0 = ua ; pen v0 * v0 ; move 4 , 0 )  | ( pen ua ; move 3 + ul , 0 ; move 0 , 4 + ul )  | ( ( pen ua ; move 4 , ua ) ; move 3 - ua , 0 )  | ( ( pen ua * 3 ; v0 = 0 ) ; move 4 , v0 )  | ( ( pen ua ; move 0 , ua ) ; v0 = 4 ; move v0 , ua )  
[183] ( pen 2 ; move ua , 2 )  | ( pen 2 ; move ua , 4 - 2 )  | ( pen 2 ; move ua , ua + 2 )  | ( pen 2 ; move ua , 2 - ua )  | ( pen ua - 4 ; move ua , 2 )  | ( pen 3 - ul ; move ua , 2 )  | ( pen 2 ; move ua , ul + ul )  | ( pen ul + ul ; move ua , 2 )  | ( pen 2 ; move ua , 2 ; pen ua )  | ( pen 2 ; move 4 + 2 , ul + ul )  | ( pen ul + ul ; move ua , 4 - 2 )  | ( pen ua / 3 ; move ua , 3 - ul )  | ( pen ua / 3 ; move ua , ul + ul )  | ( pen 2 ; move ua , ua + 2 ; pen 4 )  | ( pen 2 ; move ua , 3 - ul ; pen ul )  | ( pen ua ; pen ul + ul ; move ua , 2 )  | ( pen 2 ; move 4 + 2 , 2 ; v0 = 0 )  | ( pen 2 ; ( move ua , 2 ; move 0 , 0 ) )  | ( v0 = 2 ; pen v0 ; move ua , v0 )  | ( pen ua + 3 ; ( pen 2 ; move ua , 2 ) )  | ( pen ua - 4 ; ( pen 2 ; move ua , 2 ) )  | ( ( pen 2 ; move ua , ul + ul ) ; pen 3 )  | ( pen 4 ; ( pen ul + ul ; move ua , 2 ) )  | ( pen ua / 3 ; v0 = ua ; move v0 , 2 )  | ( ( pen 2 ; move 4 , 2 ) ; move 2 , ua + ua )  | ( pen 2 ; ( move ua , 2 ; v0 = ul / ua ) )  | ( v0 = ul + ul ; pen v0 ; move ua , v0 )  | ( pen 2 ; ( v0 = 3 - ul ; move ua , v0 ) )  | ( pen 2 + ul ; ( pen ul + ul ; pen 2 ) ; move ua , 2 )  | ( ( pen 3 - ul ; v0 = 2 ; pen v0 ) ; move ua , v0 )  | ( pen ul ; ( pen ul ; pen ua ; pen 3 - ul ) ; move ua , 2 )  | ( v0 = 2 ; pen ul + ul ; ( v1 = ua ; move ua , 2 ) )  
[184] ( pen 4 ; move ua , 0 )  | ( pen ua ; move ua , 0 )  | ( pen 4 ; move ua , ua )  | ( pen ua ; move ua , ua )  | ( pen ua * 4 ; move ua , 0 )  | ( pen 4 + 3 ; move ua , ua )  | ( pen ua + ul ; move ua , 0 )  | ( pen ua + 2 ; move ua , ua )  | ( pen 3 + ul ; move ua , ua )  | ( pen 4 + ul ; move ua , ua )  | ( pen ua * ua ; move ua , ua )  | ( pen ua ; move ua , 0 ; pen ua )  | ( pen 2 ; pen ua ; move ua , ua )  | ( pen 3 + 3 ; move ua , ua * 2 )  | ( pen ua ; move ua , 0 ; move 0 , 3 )  | ( pen ua ; v0 = 0 ; move ua , v0 )  | ( v0 = ua ; pen v0 ; move v0 , 0 )  | ( pen ua * 2 ; move ua , 0 ; v0 = 2 )  | ( pen ul ; ( pen 4 * 3 ; move ua , 0 ) )  | ( ( pen ua ; move ua , ua ) ; v0 = ua )  | ( ( pen ul ; pen ua ) ; move ua , ua / 2 )  | ( v0 = ua ; pen v0 ; move v0 , v0 )  | ( pen ua ; v0 = 0 ; move ua , v0 + v0 )  | ( v0 = ua ; ( pen v0 ; move v0 , ua ) )  | ( pen ua * 3 ; ( v0 = 3 ; move ua , ua ) )  | ( pen ua ; v0 = ua ; move v0 , v0 + ua )  | ( pen 4 + ul ; move ua , 0 ; move 0 , ua + ul )  | ( pen ul ; ( pen ul ; pen 4 + ul ) ; move ua , ua )  | ( ( move 0 , ua - ul ; pen ua + ul ) ; move ua , ul )  | ( ( pen 3 * 3 ; pen ua ) ; pen ua * 3 ; move ua , 0 )  | ( ( v0 = ua ; pen v0 ; move v0 , ua ) ; v1 = 0 )  | ( v0 = 0 ; pen ua + v0 ; move ua - v0 , ua / v0 )  
[185] ( pen 3 ; move ua , 2 )  | ( pen 3 ; move ua , ua + 2 )  | ( pen 2 + ul ; move ua , 2 )  | ( pen 4 - ul ; move ua , 2 )  | ( pen 3 ; move ua , ul + ul )  | ( pen 0 ; pen 3 ; move ua , 2 )  | ( pen 2 ; pen 3 ; move ua , 2 )  | ( pen 3 ; move 0 - ua , ua + 2 )  | ( move 0 , 0 ; pen 3 ; move ua , 2 )  | ( pen 4 - ul ; move ua , ul + ul )  | ( pen 3 ; ( move ua , 2 ; pen ul ) )  | ( move 0 , ul ; pen 3 ; move ua , ul )  | ( pen ul + ul ; pen 3 ; move ua , 2 )  | ( pen 3 ; v0 = ua ; move v0 , 2 )  | ( v0 = 0 ; ( pen 3 ; move ua , 2 ) )  | ( pen 0 ; ( pen 2 + ul ; move ua , 2 ) )  | ( pen 3 ; ( move ua , 3 - ul ; pen 0 ) )  | ( ( pen 3 ; pen 3 ) ; move ua , 3 - ul )  | ( pen 3 ; move ua , 2 - ua ; move 0 , ul )  | ( move 0 , ul ; pen 2 + ul ; move ua , ul )  | ( pen 3 ; v0 = ul ; move ua , ul + ul )  | ( ( pen 2 ; pen ua ; pen 3 ) ; move ua , 2 )  | ( pen 3 ; ( move ua , 2 ; move 0 , 4 + 3 ) )  | ( pen 3 ; move ua , 2 - ua ; move 2 / 4 , 3 )  | ( pen 3 ; v0 = ul ; move ua , v0 + v0 )  | ( pen 3 ; move ua , ua + 2 ; v0 = ua + 3 )  | ( pen 3 ; move ul / ua , ua ; move ua , 3 - ul )  | ( move 4 , 2 ; pen 4 - ul ; move 0 - ua , ua * 2 )  | ( ( pen 2 + ul ; v0 = ua ) ; move v0 , 2 + v0 )  | ( ( pen ua ; pen 3 ) ; v0 = ua ; move v0 , ul + ul )  | ( ( pen 2 + ul ; move ua , 2 ) ; v0 = ul ; v1 = ul )  | ( pen 2 + ul ; ( move ua , ul + ul ; move 0 , ul ) ; pen ua )  
[186] ( pen 2 ; move ua , 3 )  | ( pen 2 ; move 3 * 2 , 3 )  | ( pen 2 ; move ua , ua + 3 )  | ( pen 2 ; move ua , 2 + ul )  | ( pen 2 ; move ua , 4 - ul )  | ( pen ul + ul ; move ua , 3 )  | ( pen 2 ; move ua , 3 ; pen ul )  | ( pen ul + ul ; move 3 * 2 , 3 )  | ( pen 3 - ul ; move ua , ua + 3 )  | ( pen ul + ul ; move ua , 4 - ul )  | ( pen 4 * 3 ; pen 2 ; move ua , 3 )  | ( pen 2 ; ( pen 2 ; move ua , 3 ) )  | ( ( pen 2 ; pen 2 ) ; move ua , 3 )  | ( move 0 , 3 ; pen 2 ; move ua , ua )  | ( pen 2 ; v0 = ul ; move ua , 3 )  | ( pen ul ; pen 2 ; move ua , ua + 3 )  | ( pen ul ; pen 2 ; move ua , 2 + ul )  | ( pen ul + ul ; move ua , 3 ; pen ua )  | ( pen 2 ; ( move ua , 3 ; pen 0 - 3 ) )  | ( move 2 - ua , 3 ; pen 2 ; move ua , 0 )  | ( move ul - 4 , 3 ; pen 2 ; move ua , 0 )  | ( move ul , 3 ; ( pen 2 ; move ua , 0 ) )  | ( ( pen 2 ; move ua , 3 ) ; v0 = ul )  | ( v0 = 4 ; pen 2 ; move v0 + 2 , 3 )  | ( ( pen 2 ; v0 = ua ) ; move v0 , 3 )  | ( pen 4 - ul ; pen ul + ul ; move ua , 3 )  | ( ( pen 2 ; move ua , 3 ; pen 0 ) ; v0 = 4 )  | ( ( pen 2 ; v0 = ul ) ; move ua , 3 / v0 )  | ( pen 2 ; ( move ua , 3 ; pen 2 ) ; v0 = ua + ul )  | ( pen 3 - ul ; ( move ua , 4 - ul ; pen 4 ) ; pen 2 )  | ( v0 = ua ; ( pen 3 / v0 ; pen 2 ; move v0 , 3 ) )  | ( ( pen ua / 4 ; move 0 , ua + 3 ) ; pen 2 ; move ua , ua )  
[187] ( pen 4 ; move ua , 2 )  | ( pen ua ; move ua , 2 )  | ( pen ua + 2 ; move ua , 2 )  | ( pen 3 + ul ; move ua , 2 )  | ( pen 4 ; move ua , ua + 2 )  | ( pen ua * 2 ; move ua , 2 )  | ( pen 4 ; move ua , 3 - ul )  | ( pen 0 ; pen 4 ; move ua , 2 )  | ( pen 4 ; move ua , 2 ; pen ua )  | ( pen 2 + 2 ; move ua , ua + 2 )  | ( pen 4 ; move 0 - ua , 2 - ua )  | ( pen 3 + ul ; move ua , ua + 2 )  | ( pen 4 ; move ua , 2 ; move 0 , 2 )  | ( move 0 , ul ; pen 4 ; move ua , ul )  | ( pen ua ; pen 3 + ul ; move ua , 2 )  | ( pen ua ; move ua , 2 ; pen ua + 4 )  | ( pen 4 ; move ua , 2 ; pen ua + ul )  | ( ( pen ua ; move ua , 2 ) ; v0 = 2 )  | ( pen 4 ; v0 = ua - ul ; move ua , 2 )  | ( pen 4 ; ( move ua , 2 ; pen ua + ul ) )  | ( move 0 , ul + ul ; pen 4 ; move ua , ua )  | ( pen ua ; move ua , ul + ul ; v0 = ua )  | ( ( pen 4 ; move ua , 2 ) ; pen 2 ; pen 3 )  | ( ( pen 2 * 2 ; move ua , 2 ) ; v0 = 4 )  | ( ( pen 3 + ul ; move 0 , ul ) ; move ua , ul )  | ( ( pen 4 ; move ua , ul + ul ) ; v0 = ua )  | ( v0 = ua ; ( pen 4 * v0 ; move v0 , 2 ) )  | ( v0 = ua ; ( pen v0 ; move v0 , 2 ; pen 0 ) )  | ( ( pen ul ; pen 4 ) ; move ua , ua + 2 ; pen ul - ua )  | ( pen ua ; ( v0 = ua ; v1 = 2 ) ; move v0 , v1 )  | ( ( pen 4 ; move 0 , ul ) ; ( v0 = 0 ; move ua , ul ) )  
[188] ( pen 2 ; move ua , 4 )  | ( pen 2 ; move ua , 2 * 2 )  | ( pen 2 ; move ua , ua + 4 )  | ( pen ul + ul ; move ua , 4 )  | ( pen 0 ; pen 2 ; move ua , 4 )  | ( pen ul ; pen 2 ; move ua , 4 )  | ( pen ua / 3 ; move ua , 3 + ul )  | ( pen ul + ul ; move ua , ua + 4 )  | ( pen 2 ; move ua , 4 ; move 0 , 4 )  | ( pen 3 ; pen 2 ; move ua , 3 + ul )  | ( pen ua ; pen 2 ; move ua , ua + 4 )  | ( pen ul ; pen ul + ul ; move ua , 4 )  | ( pen 2 ; move ua , 2 * 2 ; v0 = 4 )  | ( pen 2 ; move ua , 4 - ua ; move 0 , 4 )  | ( pen 2 ; move ua , 4 ; v0 = 4 - ul )  | ( pen 2 ; move ua , 4 ; v0 = ul - 4 )  | ( ( pen 2 ; move ua , 4 ) ; pen ul / 2 )  | ( pen 2 ; move 0 - ua , 4 ; pen ua + ul )  | ( pen 2 ; ( v0 = 4 ; move ua , v0 ) )  | ( v0 = ul ; pen ul + v0 ; move ua , 4 )  | ( pen 3 - ul ; move ua , 4 ; move 0 , ua * 3 )  | ( pen ua / 3 ; move ua , 4 ; v0 = 4 / ua )  | ( v0 = 2 ; pen v0 ; move ua , v0 * v0 )  | ( pen 2 ; v0 = ul ; move 0 - ua , v0 * 4 )  | ( ( pen ua ; pen 2 ; v0 = 0 ) ; move ua , 4 )  | ( ( pen ul + ul ; move ua , 3 + ul ) ; v0 = ua )  | ( ( move 0 , 3 ; pen 2 ) ; move ua , ul ; pen 2 / ua )  | ( pen ua ; ( pen 2 ; move ua , 4 ) ; v0 = ul / 2 )  | ( pen 2 ; ( move ua , 4 ; v0 = 0 ) ; v1 = v0 )  | ( ( pen 2 ; v0 = 4 ; move ua , v0 ) ; move 0 , ul )  | ( v0 = 2 ; ( pen v0 ; move ua , 4 ) ; v1 = v0 )  | ( ( pen 3 - ua ; move 0 , 3 ) ; pen ul + ul ; move ua , ul )  
[189] ( pen 3 ; move ua , 3 )  | ( pen 3 ; move 0 - ua , 3 )  | ( pen 3 ; move ua , 2 + ul )  | ( pen 2 + ul ; move ua , 3 )  | ( pen 3 ; move ua , ua + 3 )  | ( pen ua / 2 ; move ua , 3 )  | ( pen 3 ; move ua , 4 - ul )  | ( pen 2 ; pen 3 ; move ua , 3 )  | ( pen 3 ; move ua , 3 ; v0 = 4 )  | ( pen ul + ul ; pen 3 ; move ua , 3 )  | ( pen ua - ul ; pen 3 ; move ua , 3 )  | ( pen 3 ; v0 = ua ; move v0 , 3 )  | ( v0 = 3 ; pen v0 ; move ua , v0 )  | ( pen 3 ; move 3 - ua , 3 ; move ua , 0 )  | ( ( pen 3 ; move ua , 3 ) ; move 0 , ua )  | ( pen 3 ; ( move ua , 3 ; move 0 , ua ) )  | ( move ul , 0 ; ( pen 3 ; move ua , 3 ) )  | ( pen 3 ; move ua , 3 ; v0 = ua * 2 )  | ( ( pen 3 ; move ua , 3 ) ; pen 4 - ua )  | ( pen 3 ; move 0 - ua , 3 - ua ; pen ul )  | ( v0 = 2 + ul ; pen v0 ; move ua , 3 )  | ( pen 3 ; move 2 - ua , 3 ; move 2 , ua / 2 )  | ( ( pen 2 + ul ; move ua , 3 ) ; v0 = ua )  | ( pen 3 ; move ua , 3 - ua ; move 0 , ul / ua )  | ( ( pen 3 ; move ua , 3 ) ; move ul / ua , ua )  | ( ( v0 = 3 ; pen v0 ) ; move 0 - ua , 3 )  | ( ( pen ua + ua ; pen 3 ) ; move ua , ua + 3 )  | ( pen 3 ; move ua , 3 ; ( pen 2 / 3 ; pen 2 ) )  | ( pen 4 ; pen ua + ul ; ( pen 3 ; move ua , 3 ) )  | ( v0 = 3 ; ( pen v0 ; move ua , v0 ) ; pen ul )  | ( pen 3 ; ( move ua , 2 + ul ; pen ul ) ; v0 = 3 )  | ( v0 = 3 ; pen v0 ; ( move ua , v0 ; pen v0 ) )  
[190] ( pen ua ; move 4 , 2 )  | ( pen ua ; move 2 + 2 , 2 )  | ( pen ua * 3 ; move 4 , 2 )  | ( pen 4 + ul ; move 4 , 2 )  | ( pen ua * 4 ; move 4 , 2 )  | ( pen ua + ua ; move 4 , 2 )  | ( pen ua ; move 3 + ul , 2 )  | ( pen ua ; move 4 , 2 - ua )  | ( pen ua * ua ; move 4 , 2 )  | ( pen ua ; move 4 , 3 - ul )  | ( pen ua ; move 4 , ul + ul )  | ( pen 0 ; pen ua ; move 4 , 2 )  | ( pen ua + ul ; move 0 - 4 , 2 )  | ( pen ua ; move 4 , 2 ; pen 3 - 2 )  | ( pen ua ; ( move 4 , 2 ; pen 3 ) )  | ( pen ua ; move 3 , 2 ; move ul , 0 )  | ( pen ua ; move 4 , 2 ; v0 = ua )  | ( pen ua ; move 4 , 2 ; v0 = ul )  | ( pen ua + ua ; move 4 , 2 ; pen 0 )  | ( pen ua ; move 0 , ul ; move 4 , ul )  | ( pen ua ; move 4 , 3 - ul ; pen ul )  | ( pen ua ; move 4 , 2 ; pen ul / ua )  | ( v0 = 4 ; pen ua ; move v0 , 2 )  | ( ( pen ua ; move 4 , 2 ) ; move 0 , 3 )  | ( pen 2 + ul ; ( pen ua ; move 4 , 2 ) )  | ( move 0 , ul ; pen ua ; move 4 , 2 - ul )  | ( pen ua ; v0 = 2 ; move 2 * v0 , v0 )  | ( pen ua + 4 ; ( move 4 , 2 ; pen 4 * 3 ) )  | ( ( pen ua ; move 4 , 3 - ul ) ; pen 2 * 2 )  | ( pen 3 * 3 ; move 0 , ul - ua ; move 4 , ul )  | ( pen 4 * 2 ; move 4 , ul + ul ; v0 = ul )  | ( pen ua * ua ; ( pen ua ; move 4 , 2 ; v0 = ul ) )  
[191] ( pen ua ; move 4 , 3 )  | ( pen ua * 3 ; move 4 , 3 )  | ( pen ua ; move 3 + ul , 3 )  | ( pen ua + ul ; move 4 , 3 )  | ( pen ua - ul ; move 4 , 3 )  | ( pen ua ; move 4 , 3 ; pen 0 )  | ( pen 4 * 2 ; move 4 , 4 - ul )  | ( pen ua * 3 ; move 3 + ul , 3 )  | ( pen ua * 4 ; move 4 , 4 - ul )  | ( pen ua + ua ; move 3 + ul , 3 )  | ( pen ua - ul ; move 4 , 3 - ua )  | ( pen ua ; move 4 , 3 ; v0 = ua )  | ( pen ua ; v0 = ul ; move 4 , 3 )  | ( pen 2 ; pen ua ; move 3 + ul , 3 )  | ( pen ua ; move 4 , ua + 3 ; pen 4 )  | ( move 4 , ua ; pen 3 * 3 ; move 4 , 3 )  | ( move 2 , ua ; ( pen ua ; move 4 , 3 ) )  | ( move 0 , ua ; pen ua - ul ; move 4 , 3 )  | ( pen ua + ul ; move 4 , 3 ; v0 = ul )  | ( pen ua * ua ; move 4 , 3 ; v0 = ul )  | ( v0 = 4 * 2 ; pen v0 ; move 4 , 3 )  | ( ( pen 3 + 3 ; move 0 , ul ) ; move 4 , 2 )  | ( pen ua + 2 ; pen 3 * 2 ; move 4 , 3 - ua )  | ( ( pen ua + 3 ; move 4 , 3 ) ; v0 = 3 + ul )  | ( v0 = ua ; pen v0 ; move ua - 2 , 3 - v0 )  | ( move ul / 3 , 0 ; pen ua * 4 ; move 3 + ul , 3 )  | ( ( pen ua ; move 4 , ua + 3 ) ; v0 = ul / 3 )  | ( pen ua * 3 ; ( move 3 + ul , 2 + ul ; pen 2 ) )  | ( pen ua + ua ; ( move ul , 0 ; move 4 , ua + 3 ) )  | ( pen ua + ua ; ( v0 = 4 ; pen ua ) ; move v0 , 3 )  | ( move ul / 4 , ua ; pen 3 ; ( pen 4 * 2 ; move 4 , 3 ) )  | ( pen ua + 2 ; ( move 4 , 3 ; pen ua * ua ; pen ua + ua ) )  
[192] ( pen 3 ; move ua , 4 )  | ( pen 3 ; move ua , 2 * 2 )  | ( pen 2 + ul ; move ua , 4 )  | ( pen 3 ; move ua , 3 + ul )  | ( pen 3 ; move ua , ua + 4 )  | ( pen ua - 3 ; move ua , 4 )  | ( pen 4 - ul ; move ua , 4 )  | ( pen 3 ; move ua , 4 ; pen 4 )  | ( pen ua - 3 ; move ua , ua + 4 )  | ( pen 3 ; v0 = 0 ; move ua , 4 )  | ( pen 3 ; move ua , 4 ; v0 = 4 )  | ( pen 0 ; pen 3 ; move ua , 4 - ua )  | ( pen ua + ul ; pen 3 ; move ua , 4 )  | ( pen 3 ; v0 = ua ; move v0 , 4 )  | ( v0 = ua ; pen 3 ; move v0 , 4 )  | ( v0 = 3 ; pen v0 ; move ua , 4 )  | ( pen 3 ; ( v0 = 3 ; move ua , 4 ) )  | ( pen 2 + ul ; move ua , 4 ; v0 = 2 )  | ( pen 3 ; move ua , 4 ; v0 = ua - 3 )  | ( pen ua - 3 ; move ua , 4 ; v0 = 3 )  | ( pen 3 ; move ua , ua + 4 ; pen 4 + 2 )  | ( v0 = ul ; pen 3 ; move ua , ua + 4 )  | ( pen 4 - ul ; move ua , 4 ; pen ul - 3 )  | ( pen ul + ul ; ( pen 3 ; move ua , 4 ) )  | ( pen 3 ; ( v0 = ua ; move v0 , 4 ) )  | ( v0 = 2 + ul ; pen v0 ; move ua , 4 )  | ( pen 3 ; ( v0 = ul ; move ua , 3 + ul ) )  | ( move ul , ua ; pen 2 + ul ; move ua , 2 + 2 )  | ( move ul , ul - ua ; pen 3 ; move ua , 3 - ua )  | ( pen ua - ul ; pen 2 + ul ; move ua , 4 - ua )  | ( ( pen 2 + ul ; v0 = ua ) ; move v0 , 4 )  | ( pen 3 ; ( move 0 , 4 ; move ua , ua ) ; pen 0 )  
[193] ( pen 2 ; move 4 , ul )  | ( pen 4 - 2 ; move 4 , ul )  | ( pen 2 ; move 4 , ua + ul )  | ( pen 2 ; move 3 + ul , ul )  | ( pen ul + ul ; move 4 , ul )  | ( pen 2 ; move 4 , ul ; pen 0 )  | ( pen 4 ; pen 2 ; move 4 , ul )  | ( pen 2 ; move 4 , ul ; pen ua )  | ( pen 2 ; move 4 , ul ; pen ul )  | ( pen ul + ul ; move 3 + ul , ul )  | ( pen 2 ; move 4 , ul ; move 0 , 0 )  | ( pen 2 ; move 4 , ul ; v0 = 3 )  | ( pen 4 ; ( pen 2 ; move 4 , ul ) )  | ( pen 2 ; move 4 , ul ; move 0 , ul )  | ( pen 2 ; move 4 , ul ; v0 = ua )  | ( pen 2 ; move 4 , ul ; pen ua + 2 )  | ( pen ul ; pen 4 / 2 ; move 4 , ul )  | ( pen 2 ; move 3 , ul ; move ul , ua )  | ( pen 2 ; v0 = ul ; move 4 , v0 )  | ( pen ua ; pen ul + ul ; move 4 , ul )  | ( pen 2 ; move 3 + ul , ul ; pen 4 - 3 )  | ( ( pen ul + ul ; move 4 , ul ) ; pen ul )  | ( pen ul + ul ; move 4 , ul - ua ; pen ul )  | ( ( pen 2 ; move 0 - 4 , ul ) ; move 0 , ul )  | ( pen 3 - ul ; ( move 3 , ul ; move ul , 0 ) )  | ( pen 2 ; move 2 - ul , ul - ua ; move 3 , ua )  | ( ( pen ul + ul ; move 4 , ul - ua ) ; pen ul )  | ( pen ul + ul ; pen ul + ul ; move 4 , ua + ul )  | ( pen 2 ; ( v0 = ul ; move 4 * v0 , v0 ) )  | ( ( pen ul + ul ; move 3 , ul ) ; move ul , ua + ua )  | ( ( pen ua ; ( v0 = ua ; pen 2 ) ) ; move 4 , ul )  | ( pen ul + ul ; move 4 , ul ; ( move 0 , ua ; v0 = 0 ) )  
[194] ( pen 4 ; move ua , 3 )  | ( pen ua ; move ua , 3 )  | ( pen 4 ; move ua , 4 - ul )  | ( pen ua ; move ua , 3 - ua )  | ( pen ua * ua ; move ua , 3 )  | ( pen ua ; move ua , 4 - ul )  | ( pen 4 ; move ua , 3 ; v0 = 0 )  | ( pen 4 ; v0 = 3 ; move ua , 3 )  | ( pen ua ; ( move ua , 3 ; pen 3 ) )  | ( move ul , 0 ; pen ua ; move ua , 3 )  | ( pen 4 ; move ua , ua + 3 ; pen ua )  | ( pen ua - ul ; pen 4 ; move ua , 3 )  | ( pen ul ; pen 4 ; move ua , 4 - ul )  | ( ( pen ul ; pen ua ) ; move ua , 3 )  | ( pen ua ; v0 = 3 ; move ua , v0 )  | ( ( pen 4 ; move ua , 3 ) ; v0 = ua )  | ( ( pen 4 ; move ua , 4 - ul ) ; pen 4 )  | ( pen ul ; pen ua ; move 4 + 2 , 3 - ua )  | ( pen ua ; pen ua - 2 ; move ua , 2 + ul )  | ( pen ua * ua ; move ua , 3 ; pen ua + ul )  | ( pen ua ; ( v0 = ua ; move v0 , 3 ) )  | ( ( move 3 , ua ; pen 3 + ul ) ; move ua , 3 )  | ( move 0 , ua ; pen ua * 3 ; move ua , 4 - ul )  | ( pen 4 ; move ua , 3 ; ( v0 = 3 ; pen v0 ) )  | ( v0 = ua + ul ; pen ua * 2 ; move 4 + 2 , 3 )  | ( ( pen ua * 2 ; move 0 , ua * 4 ) ; move ua , 3 )  | ( pen ua + 4 ; move ua , 2 + ul ; v0 = ua * 2 )  | ( pen 3 + 3 ; ( pen 4 ; move ua , 3 ) ; v0 = 0 )  | ( pen 4 ; ( ( move 0 , 2 ; move 0 , ua ) ; move ua , ul ) )  | ( ( pen 3 * 2 ; v0 = ul ; move 0 , ul ) ; move ua , 2 )  | ( ( move 0 , ua + ua ; pen 3 + ul ; move ua , 3 ) ; pen ul )  
[195] ( pen 4 ; move ua , 4 )  | ( pen 2 + 2 ; move ua , 4 )  | ( pen ua - 2 ; move ua , 4 )  | ( pen 3 + ul ; move ua , 4 )  | ( pen 4 ; move ua , 3 + ul )  | ( pen 4 ; move ua , ua + 4 )  | ( pen 4 ; move ua , 4 - ua )  | ( pen 4 ; move ua , 4 ; pen 3 )  | ( move 0 , 4 ; pen 4 ; move ua , ua )  | ( pen 4 ; move 0 , 3 ; move ua , ul )  | ( move 4 , ul ; pen 4 ; move ua , 3 )  | ( pen 4 ; v0 = ua ; move ua , 4 )  | ( pen 4 ; move ua , 4 ; v0 = ul )  | ( pen 3 ; pen 3 + ul ; move ua , 4 )  | ( v0 = 4 ; pen v0 ; move ua , v0 )  | ( move 0 , ua ; ( pen 4 ; move ua , 4 ) )  | ( ( pen 4 ; move ua , 4 ) ; pen ua + 4 )  | ( move 2 , ul - ua ; pen 4 ; move ua , 3 )  | ( pen 3 + ul ; move ua , 4 - ua ; pen 2 )  | ( pen 3 + ul ; move ul , ul ; move ua , 3 )  | ( pen 4 ; move 3 * 2 , 4 ; move 0 , 3 + 2 )  | ( pen 4 ; v0 = 2 ; move ua , v0 * v0 )  | ( pen 4 ; ( v0 = ua + 3 ; move ua , 4 ) )  | ( pen 4 ; ( move ua , 4 ; v0 = ua + ul ) )  | ( pen 4 ; v0 = 0 ; ( move ua , 4 ; pen 4 ) )  | ( ( pen 4 ; v0 = ua ) ; move v0 , ua + 4 )  | ( v0 = 4 ; pen ul ; ( pen v0 ; move ua , v0 ) )  | ( ( pen 2 ; pen 4 ; move ua , 4 ) ; move ul , ua - 4 )  | ( pen ul ; pen 2 - 3 ; ( pen 4 ; move ua , ua + 4 ) )  | ( ( pen 3 + 3 ; pen 4 ; v0 = 4 ) ; move ua , v0 )  | ( ( pen 4 ; move 0 , 4 ; move ua , ua ) ; v0 = 0 - ul )  
[196] ( pen 3 ; move 4 , ul )  | ( pen 3 ; move 4 , 2 - ul )  | ( pen 3 ; move 3 + ul , ul )  | ( pen 2 + ul ; move 4 , ul )  | ( pen ua - 3 ; move 4 , ul )  | ( pen ua / 2 ; move 4 , ul )  | ( pen 0 ; pen 3 ; move 4 , ul )  | ( pen 3 ; pen 3 ; move 4 , ul )  | ( pen 3 ; move 4 , ul ; pen 4 )  | ( pen 3 ; move 4 , ul ; pen ua )  | ( pen ua ; pen 3 ; move 4 , ul )  | ( pen 3 ; move 4 , ul ; pen ul )  | ( pen ua / 2 ; move 2 + 2 , ul )  | ( pen 2 + ul ; move 3 + ul , ul )  | ( pen 3 ; move 4 , ul ; v0 = 4 )  | ( pen 3 - 2 ; pen 3 ; move 4 , ul )  | ( pen 3 ; move 3 , ul ; move ul , 0 )  | ( pen 3 ; move 4 , ul ; v0 = ua )  | ( ( pen 3 ; move 4 , ul ) ; pen ua )  | ( pen ua ; pen 3 ; move 3 + ul , ul )  | ( v0 = 3 ; pen v0 ; move 4 , ul )  | ( pen 3 ; v0 = ul ; move 4 , v0 )  | ( pen 3 ; v0 = 4 ; move v0 , ul )  | ( ( pen 3 ; move 4 , ul ) ; v0 = 0 )  | ( pen 3 ; ( move 4 , ul ; v0 = ua ) )  | ( pen ua / 4 ; pen 3 ; move 3 + ul , ul )  | ( pen 3 ; v0 = ua ; move 4 , ua / v0 )  | ( pen 3 ; move 0 , ua + ul ; move 4 , ua + ua )  | ( ( pen 4 - ul ; pen ua - 3 ) ; move 4 , ul )  | ( ( pen 3 ; v0 = 3 + ul ) ; move v0 , ul )  | ( ( pen 4 ; pen 3 ) ; move 4 , ul ; v0 = ul )  | ( pen 3 ; ( move 4 , ul ; v0 = 2 ; pen v0 ) )  
[197] ( pen ua ; move 4 , 4 )  | ( pen 3 + 3 ; move 4 , 4 )  | ( pen ua ; move 2 + 2 , 4 )  | ( pen ua + 4 ; move 4 , 4 )  | ( pen ua * 4 ; move 4 , 4 )  | ( pen ua ; move 4 , 3 + ul )  | ( pen ua + ul ; move 4 , 4 )  | ( pen ua - ul ; move 4 , 4 )  | ( pen ua ; pen ua ; move 4 , 4 )  | ( pen ul ; pen ua ; move 4 , 4 )  | ( pen 4 + 3 ; move 4 , 4 - ua )  | ( pen ua + ul ; move 4 , ua + 4 )  | ( pen ua ; move 2 * 2 , 4 ; pen 4 )  | ( pen ua ; ( pen ua ; move 4 , 4 ) )  | ( pen ua ; ( move 4 , 4 ; move 0 , 2 ) )  | ( ( pen 4 + ul ; move 4 , 4 ) ; pen 0 )  | ( v0 = 4 ; pen ua ; move v0 , v0 )  | ( pen ua ; v0 = 4 ; move v0 , v0 )  | ( pen ua ; move 4 , 4 - ua ; move 0 , 4 )  | ( pen ua ; v0 = ua / 4 ; move 4 , 4 )  | ( pen ua ; move 0 , ul - ua ; move 4 , 3 )  | ( move 3 , ul ; pen ua ; move 4 , 4 - ul )  | ( pen ua ; move 4 , 4 ; v0 = ua + ul )  | ( pen 4 * 3 ; v0 = 4 ; move v0 , 4 )  | ( pen 3 * 3 ; v0 = 4 ; move v0 , v0 )  | ( ( pen ua * 3 ; move 4 , 4 ) ; v0 = 3 )  | ( pen ua * 2 ; v0 = 4 ; move v0 , v0 )  | ( pen ua ; ( v0 = 4 ; move v0 , v0 ) )  | ( move 0 , ul ; pen ua - ul ; move 4 , 4 - ul )  | ( pen ua + ul ; move ul / ua , 2 - ul ; move 4 , 3 )  | ( ( move ul , 0 ; pen ua ; v0 = ul ) ; move 4 , 4 )  | ( v0 = 2 * 2 ; pen v0 * v0 ; move v0 , v0 )  
[198] ( pen 4 ; move 4 , ul )  | ( pen ua ; move 4 , ul )  | ( pen 4 ; move 2 + 2 , ul )  | ( pen ua - 2 ; move 4 , ul )  | ( pen 4 ; move 3 + ul , ul )  | ( pen 4 ; move 4 , ua + ul )  | ( pen 4 ; move 4 , ul - ua )  | ( pen 4 ; move 4 , ul ; pen 2 )  | ( pen 4 ; pen 4 ; move 4 , ul )  | ( pen 4 ; move 4 , ul ; pen ul )  | ( pen ul ; pen 4 ; move 4 , ul )  | ( v0 = ul ; pen 4 ; move 4 , ul )  | ( pen 4 ; move 4 , ul ; v0 = ul )  | ( pen 4 ; move 4 , ul - ua ; pen 0 )  | ( pen 4 ; move 3 + ul , ul ; pen 2 )  | ( pen 2 ; pen 3 + ul ; move 4 , ul )  | ( pen 4 ; move 4 , ul ; pen ua + 3 )  | ( pen 4 + ul ; pen 4 ; move 4 , ul )  | ( pen ua ; pen 3 + ul ; move 4 , ul )  | ( pen 4 ; v0 = 4 ; move v0 , ul )  | ( v0 = 4 ; pen v0 ; move v0 , ul )  | ( pen 4 ; move 4 , ul ; v0 = 2 - ul )  | ( ( pen 4 ; move 3 + ul , ul ) ; pen 2 )  | ( v0 = 4 ; pen 3 + ul ; move v0 , ul )  | ( v0 = 4 ; ( pen ua ; move v0 , ul ) )  | ( pen 4 ; v0 = ul ; move 3 + v0 , v0 )  | ( pen 4 ; move 0 - 4 , ul ; v0 = ul / 4 )  | ( pen 4 * 2 ; pen ul ; ( pen 4 ; move 4 , ul ) )  | ( pen 4 ; move ul , ul ; ( move 3 , 0 ; pen ul ) )  | ( ( pen ua / 4 ; pen 3 + ul ) ; move 4 , 2 - ul )  | ( ( pen 4 ; move 0 , ul ) ; v0 = ua ; move 4 , ua )  | ( pen 4 ; move 3 , ul ; ( move ul , ua + ua ; pen 0 ) )  
[199] ( pen ua ; move ua , 2 )  | ( pen ua * 2 ; move ua , 2 )  | ( pen ua * 3 ; move ua , 2 )  | ( pen ua + ul ; move ua , 2 )  | ( pen ua - ul ; move ua , 2 )  | ( pen ua ; move ua , ul + ul )  | ( pen 4 + 3 ; move 4 + 3 , 2 )  | ( pen ua ; move 0 - ua , 2 - ua )  | ( pen ua + ul ; move ua , 3 - ul )  | ( pen ua ; move ua + ul , ul + ul )  | ( pen ua - ul ; move ua , ul + ul )  | ( move ul , 0 ; pen ua ; move ua , 2 )  | ( pen ua ; move ua , 2 ; pen 4 + ul )  | ( pen ua * 3 ; move ua , 2 ; pen ul )  | ( pen ua ; move ua , 2 ; pen ua / 3 )  | ( pen ua ; move ul , 2 ; move ua , ua )  | ( v0 = 2 ; pen ua ; move ua , v0 )  | ( pen ua ; move ua , ul + ul ; pen ua )  | ( v0 = ua ; pen v0 ; move v0 , 2 )  | ( pen ua + ul ; move ua , 2 ; move 0 , 0 )  | ( pen ua ; move ua , ul + ul ; move 0 , ul )  | ( pen ua ; move ua , ul + ul ; v0 = ul )  | ( pen 4 ; v0 = ua + ul ; move v0 , 2 )  | ( v0 = ua ; pen v0 ; move v0 , ul + ul )  | ( move ul , ua - ul ; pen 4 * 3 ; move ua , 3 )  | ( pen ua ; move ua , ul + ul ; move 0 , ul / 4 )  | ( pen ua + 4 ; pen ua * ua ; move ua , ul + ul )  | ( pen ua ; ( v0 = ul ; move ua , 2 ) ; v1 = 0 )  | ( ( move ul , ua ; pen ua ; move ua , 2 ) ; v0 = ua )  | ( pen 3 / ua ; pen ul - 2 ; ( pen ua ; move ua , 2 ) )  | ( ( pen ua + ul ; move ua , 2 ; v0 = 0 ) ; pen v0 )  | ( pen ul / ua ; ( pen ua ; v0 = 4 + 2 ) ; move ua , 2 )  
[200] ( pen ua ; move ua , 3 )  | ( pen ua ; move 3 * 2 , 3 )  | ( pen 3 * 2 ; move ua , 3 )  | ( pen ua + 3 ; move ua , 3 )  | ( pen 4 + ul ; move ua , 3 )  | ( pen ua * 3 ; move ua , 3 )  | ( pen ua ; move ua , ua + 3 )  | ( pen ua ; move ua , 2 + ul )  | ( pen ua ; move ua , 3 - ua )  | ( pen 0 ; pen ua ; move ua , 3 )  | ( pen ua ; move ua , 3 ; pen ul )  | ( pen ua + 3 ; move ua , 2 + ul )  | ( pen ua + 3 ; move ua , 4 - ul )  | ( pen ua * 2 ; move ua , 4 - ul )  | ( pen ua + ul ; move ua , 2 + ul )  | ( pen ua ; move ua , 3 ; v0 = 2 - 3 )  | ( ( pen ul ; pen ua + 2 ) ; move ua , 3 )  | ( pen ua * 2 ; ( move ua , 3 ; pen ua ) )  | ( pen ua ; move ua , 3 - ua ; move 0 , ul )  | ( pen ua ; move ua , 3 ; move ul - 3 , ua )  | ( move 4 , ua ; pen ua ; move ua , 4 - ul )  | ( pen 0 ; pen ua + ul ; move ua , 2 + ul )  | ( v0 = 3 * 2 ; pen v0 ; move ua , 3 )  | ( pen ua * 3 ; v0 = 3 ; move ua , v0 )  | ( pen 4 * 2 ; ( move ua , 3 ; v0 = 0 ) )  | ( pen 3 * 2 ; ( v0 = ul ; move ua , 3 ) )  | ( ( pen ua ; v0 = 3 ) ; move ua , 4 - ul )  | ( pen ua ; ( v0 = ul ; move ua , 4 - ul ) )  | ( pen ua ; ( v0 = 3 ; move 3 + v0 , v0 ) )  | ( ( pen ua - ul ; move ua , 2 + ul ) ; move 0 , ua )  | ( pen ua + 2 ; ( move ul , ua ; move ul - ua , 3 ) )  | ( pen 3 * 2 ; ( move ua , 2 + ul ; v0 = ua * 4 ) )  
[201] ( pen 2 ; move ua , ul )  | ( pen 2 ; move 0 - ua , ul )  | ( pen 4 / 2 ; move ua , ul )  | ( pen 2 ; move ua , ua + ul )  | ( pen 2 ; move ua , ul - ua )  | ( pen 3 - ul ; move ua , ul )  | ( pen ul + ul ; move ua , ul )  | ( pen 2 ; move ua , ul ; pen ua )  | ( pen 4 - 2 ; move ua , ul - ua )  | ( pen ul + ul ; move ua , ul - ua )  | ( pen 2 ; move ua , ul ; move 0 , ul )  | ( pen 2 ; v0 = ul ; move ua , ul )  | ( pen 2 ; move ua , ul ; pen ul - 4 )  | ( pen ua ; ( pen 2 ; move ua , ul ) )  | ( pen 2 ; ( move ua , ul ; pen ul ) )  | ( pen ul ; ( pen 2 ; move ua , ul ) )  | ( v0 = 4 * 3 ; pen 2 ; move ua , ul )  | ( ( pen 2 ; v0 = ul ) ; move ua , ul )  | ( pen ul + ul ; move ua , ul ; move 0 , 2 )  | ( pen 3 - ul ; move ua , ua + ul ; pen 3 )  | ( pen 4 - 2 ; v0 = ua ; move v0 , ul )  | ( v0 = 2 ; pen v0 ; move ua , 3 - v0 )  | ( pen 3 - ul ; move ua , ul ; v0 = ua + 2 )  | ( pen 2 ; ( move ua , ua + ul ; v0 = 4 - 2 ) )  | ( ( pen 2 ; move 0 - ua , ul ) ; v0 = 4 / ua )  | ( v0 = ul ; pen ul + v0 ; move ua / v0 , v0 )  | ( ( pen 2 ; v0 = ua ; move v0 , ul ) ; pen 3 * 2 )  | ( pen 2 ; v0 = 2 - ua ; ( move ua , ul ; pen v0 ) )  | ( v0 = 4 + ul ; ( pen v0 ; pen 2 ) ; move ua , ul )  | ( ( pen 2 ; move ua , ul ) ; move ua + v1 , v0 * ua )  | ( ( pen 2 ; v0 = ua ; move 0 , v0 ) ; move v0 , ul )  | ( v0 = 2 ; ( pen v0 ; move ua , ul ) ; v1 = v0 )  
[202] ( pen 3 ; move ua , ul )  | ( pen 3 ; move 0 - ua , ul )  | ( pen 3 ; move ua , ua + ul )  | ( pen 2 + ul ; move ua , ul )  | ( pen 3 ; move ua , ul - ua )  | ( pen ua - 3 ; move ua , ul )  | ( pen 4 - ul ; move ua , ul )  | ( pen 2 ; pen 3 ; move ua , ul )  | ( pen 3 ; pen 3 ; move ua , ul )  | ( pen ua ; pen 3 ; move ua , ul )  | ( pen 3 ; ( move ua , ul ; pen 4 ) )  | ( pen 3 ; move ua , ul ; v0 = ua )  | ( v0 = ul ; pen 3 ; move ua , ul )  | ( pen 0 ; pen 4 - ul ; move ua , ul )  | ( pen 2 + ul ; move ua , ul ; pen ul )  | ( v0 = ua ; pen 3 ; move v0 , ul )  | ( pen 3 ; v0 = ua ; move v0 , ul )  | ( pen 3 ; v0 = ul ; move ua , v0 )  | ( pen 3 ; move 2 , ul ; move 0 - ua , ua )  | ( pen 4 - ul ; move ua , ul ; pen 3 + 3 )  | ( pen ul + ul ; ( pen 3 ; move ua , ul ) )  | ( pen 3 ; v0 = ua ; move v0 , v0 / ua )  | ( pen 3 ; v0 = ul ; move ua / v0 , v0 )  | ( v0 = 0 ; ( pen ua - 3 ; move ua , ul ) )  | ( pen 2 + ul ; move ua , ul ; v0 = ua * ua )  | ( pen 4 - ul ; ( move ua , ul ; pen ul / ua ) )  | ( v0 = ul + ul ; pen 3 ; move ua , 2 / v0 )  | ( pen 4 - ul ; v0 = ua ; move v0 , ua / v0 )  | ( pen ul ; ( ( pen ua * 4 ; pen 3 ) ; move ua , ul ) )  | ( v0 = 3 ; pen v0 ; ( v1 = ua ; move v1 , ul ) )  | ( v0 = 0 ; ( pen v0 + v0 ; pen 3 ; move ua , ul ) )  | ( pen 3 ; move ua , ul ; ( pen ua * 2 ; v0 = ua / 4 ) )  
[203] ( pen ua ; move ua , 4 )  | ( pen ua ; move ua , 2 + 2 )  | ( pen ua + 2 ; move ua , 4 )  | ( pen ua - 2 ; move ua , 4 )  | ( pen ua ; move ua , ua + 4 )  | ( pen ua ; move ua , 3 + ul )  | ( pen ua + ul ; move ua , 4 )  | ( pen 0 ; pen ua ; move ua , 4 )  | ( pen ul ; pen ua ; move ua , 4 )  | ( pen ua ; move ua , 4 ; pen ul )  | ( pen ua * 3 ; move ua , 4 - ua )  | ( pen ua + ua ; move ua , ua + 4 )  | ( pen ul ; ( pen ua ; move ua , 4 ) )  | ( pen ul ; pen ua ; move ua , ua + 4 )  | ( pen ua ; move ua , 4 ; pen ua - ul )  | ( pen ua ; move ua , 4 ; pen ul + ul )  | ( v0 = ua ; pen v0 ; move ua , 4 )  | ( v0 = ua ; pen v0 ; move v0 , 4 )  | ( pen ua ; move ua , 4 ; v0 = ua + 3 )  | ( pen ua + 4 ; move ua , 4 ; v0 = ul )  | ( pen ua ; ( move ua , 4 ; v0 = ul ) )  | ( pen 4 * 2 ; v0 = 4 ; move ua , v0 )  | ( pen ua - ul ; pen ua * 3 ; move ua , 4 )  | ( pen ua - ul ; move ul , ul ; move ua , 3 )  | ( v0 = ua ; pen v0 * 3 ; move v0 , 4 )  | ( pen ua + ul ; move ua , 4 ; v0 = ul - 3 )  | ( ( pen ua ; move ul , ul ) ; move ua , ua + 3 )  | ( ( move ul , ul ; pen ua - ul ) ; move ua , 3 )  | ( pen ua ; v0 = ua + ul ; move ua , ua / v0 )  | ( ( pen ua ; move ua , 3 + ul ) ; move 0 - ul , ua )  | ( pen ua + ua ; ( move ua , 4 ; pen ul ) ; v0 = ua )  | ( ( pen ua ; move ul - ua , 4 ; move ua , ua ) ; v0 = 2 )  
[204] ( pen 4 ; move ua , ul )  | ( pen ua ; move ua , ul )  | ( pen ua - 2 ; move ua , ul )  | ( pen ua + 3 ; move ua , ul )  | ( pen 4 ; move ua , ua + ul )  | ( pen 3 + ul ; move ua , ul )  | ( pen ua + ul ; move ua , ul )  | ( pen ua ; move ua + ul , ul )  | ( pen ua - ul ; move ua , ul )  | ( pen 4 ; move ua , ul ; pen ua )  | ( pen ul ; pen 4 ; move ua , ul )  | ( pen ul ; pen ua ; move ua , ul )  | ( pen 2 + 2 ; move ua , ua + ul )  | ( pen 2 * 2 ; move ua , ul - ua )  | ( pen 4 ; move ua , ul ; v0 = ul )  | ( pen 3 + ul ; move ua , ul ; pen 0 )  | ( pen ua ; move ua , ul ; move 0 , ua )  | ( v0 = ul ; pen 4 ; move ua , v0 )  | ( pen 2 * 2 ; move ua , ul ; v0 = ul )  | ( pen ua + 4 ; move ua , ul ; v0 = ua )  | ( pen ua + ua ; pen 4 ; move 0 - ua , ul )  | ( pen ua ; pen 3 + ul ; move ua , ua + ul )  | ( v0 = ua ; ( pen v0 ; move ua , ul ) )  | ( pen 3 + ul ; move ua , 2 - ul ; move 0 , 0 )  | ( ( pen 4 ; move ua , ul ) ; v0 = 2 - ul )  | ( pen ua ; v0 = ul ; move v0 * ua , v0 )  | ( pen 4 ; move ua , ul - ua ; v0 = 3 + ul )  | ( pen ua ; ( move ua , ua + ul ; v0 = ul ) )  | ( ( pen ul - ua ; pen ua + 2 ) ; move ua , ul )  | ( ( pen 4 ; move ua , ul ) ; v0 = 0 ; pen ul )  | ( ( pen 4 ; move ua , 4 - 3 ; pen 4 ) ; pen 2 / ua )  
[205] ( pen ua ; move 4 , ul )  | ( pen ua ; move 2 + 2 , ul )  | ( pen ua * 2 ; move 4 , ul )  | ( pen ua ; move 3 + ul , ul )  | ( pen ua * ua ; move 4 , ul )  | ( pen ua - ul ; move 4 , ul )  | ( pen ua ; pen ua ; move 4 , ul )  | ( pen ua ; move 4 , ul ; pen ul )  | ( pen ul ; pen ua ; move 4 , ul )  | ( pen ua ; move 2 * 2 , 2 - ul )  | ( pen 4 * 3 ; move 4 , ul - ua )  | ( pen 4 + ul ; move 2 - ua , ul )  | ( pen 3 * 2 ; move 4 , ul ; pen 2 )  | ( pen ua ; v0 = ul ; move 4 , ul )  | ( v0 = 4 ; pen ua ; move v0 , ul )  | ( pen ua + 4 ; move 3 + ul , ul - ua )  | ( pen ua ; move 2 * 2 , ul ; v0 = 0 )  | ( ( pen ua ; move 4 , ul ) ; v0 = ul )  | ( ( pen ua ; move 4 , ul ) ; pen ul - 2 )  | ( ( pen ua ; move 3 + ul , ul ) ; v0 = 3 )  | ( ( v0 = 3 - 2 ; pen ua ) ; move 4 , v0 )  | ( pen ua * ua ; move 0 , ua ; move 4 , ua + ul )  | ( pen ua ; move ul + ul , ul ; move 3 - ul , 0 )  | ( pen ua - ul ; move 4 , ua + ul ; v0 = ua )  | ( ( pen ua ; v0 = 3 + ul ) ; move v0 , ul )  | ( pen ul ; v0 = ul ; ( pen ua ; move 4 , ul ) )  | ( ( pen ua ; pen ua ; move 0 - 4 , ul ) ; pen ua )  | ( pen ua ; ( move 2 - ua , ul ; move 2 / 4 , 0 ) )  | ( pen 4 + ul ; ( move 4 , ul - ua ; pen ua + ul ) )  | ( v0 = ul ; pen v0 * ua ; move 3 + v0 , v0 )  | ( pen 4 ; ( pen ua ; v0 = 2 ; move v0 + v0 , ul ) )  | ( pen ua ; move 3 , ul ; ( v0 = 3 - ua ; move ul , 0 ) )  
[206] ( pen ua ; move ua , ul )  | ( pen ua ; move 4 + 3 , ul )  | ( pen ua + 3 ; move ua , ul )  | ( pen ua ; move ua , ua + ul )  | ( pen ua + ul ; move ua , ul )  | ( pen ua ; move ua , ul - ua )  | ( pen ua * ua ; move ua , ul )  | ( pen ua ; move ua , ul ; pen 0 )  | ( pen 3 ; pen ua ; move ua , ul )  | ( pen ua ; move ua , ul ; pen ul )  | ( pen 3 * 2 ; move ua + ul , ul )  | ( pen ua + ul ; move ua , ua + ul )  | ( pen ua * ua ; move ua + ul , ul )  | ( move 0 , ul ; pen ua ; move ua , 0 )  | ( pen ua ; v0 = 2 ; move ua , ul )  | ( pen ua ; ( move ua , ul ; pen 3 ) )  | ( pen ua ; move ua , ul ; v0 = ua )  | ( pen ua ; v0 = ul ; move ua , ul )  | ( pen ua ; move ua , ul ; pen ua / 4 )  | ( pen ua ; move ua , ul - ua ; pen ua )  | ( v0 = ua ; pen v0 ; move ua , ul )  | ( v0 = ua ; pen v0 ; move v0 , ul )  | ( pen ua * 3 ; move 0 , ua ; move ua , ul )  | ( pen ua + 4 ; move ua , ul ; move ul , ua )  | ( pen ul - 2 ; pen ua ; move ua , ua + ul )  | ( v0 = ul ; ( pen ua ; move ua , v0 ) )  | ( pen ua ; ( move ua , ul ; v0 = ul ) ; pen 3 )  | ( pen ua ; v0 = ua + ul ; move v0 - ul , v0 )  | ( pen ua * 3 ; move ua + ul , ul ; move 4 , ua / 2 )  | ( pen ua ; move ul , ul ; ( move ua , 0 ; v0 = 3 ) )  | ( pen 4 * 4 ; ( move ua , ul ; v0 = 3 ; v1 = 4 ) )  | ( ( pen ul ; pen ua + ul ; move ua , ul ) ; move 2 - ul , 0 )  
[207] ( move 2 , 0 ; move 2 , 2 )  | ( move 2 , ua ; move 2 , 2 )  | ( move 2 , 0 ; move 4 - 2 , 2 )  | ( move 4 - 2 , ua ; move 2 , 2 )  | ( move ul + ul , 0 ; move 2 , 2 )  | ( move 2 , 0 ; move 2 , ul + ul )  | ( move 2 , ua ; move 2 , ua + 2 )  | ( move 2 , 0 ; move ul + ul , 2 )  | ( move ul + ul , ua ; move 2 , 2 )  | ( move 2 , ua ; move 2 , 2 ; pen ul )  | ( move ul + ul , 0 ; move ul + ul , 2 )  | ( move ul + ul , 0 ; move 2 , ul + ul )  | ( move 2 , ua ; move ul + ul , ul + ul )  | ( move 2 , ua ; move ul , 2 ; move ul , ua )  | ( v0 = 2 ; move 2 , 0 ; move v0 , v0 )  | ( move 2 , 0 ; v0 = 2 ; move v0 , v0 )  | ( v0 = 2 ; move v0 , ua ; move 2 , v0 )  | ( move 2 , ua ; v0 = 2 ; move v0 , v0 )  | ( move 2 , ua ; ( move 2 , 2 ; v0 = ul ) )  | ( v0 = 2 ; move v0 , 0 ; move v0 , v0 )  | ( move 2 , ua ; move 0 , ul ; move ul + ul , ul )  | ( v0 = 2 ; move v0 , ua ; move v0 , v0 )  | ( v0 = 4 - 2 ; move 2 , 0 ; move v0 , v0 )  | ( move 2 , ua ; v0 = 4 / 2 ; move v0 , v0 )  | ( move 2 , ua ; v0 = 2 ; move v0 , v0 + ua )  | ( v0 = ul ; move 2 , ua ; move 2 , v0 + v0 )  | ( move 2 , ua ; ( move 2 , 4 / 2 ; pen 2 + ul ) )  | ( v0 = ul + ul ; move v0 , ua ; move v0 , 2 )  | ( v0 = ul + ul ; move v0 , 0 ; move v0 , v0 )  | ( ( move 3 - ul , 0 ; move ul , ul + ul ) ; move ul , ua )  | ( move 2 , 0 ; move 0 , ul ; ( move 2 , ul ; v0 = ua ) )  
[208] ( move 2 , 0 ; move 3 , 2 )  | ( move 2 , ua ; move 3 , 2 )  | ( move 2 , 0 ; move 2 + ul , 2 )  | ( move 2 , 0 ; move 3 , ul + ul )  | ( move ul + ul , ua ; move 2 + ul , 2 )  | ( move ul + ul , ua ; v0 = 3 ; move 3 , 2 )  | ( move 2 , ua ; v0 = ua + 2 ; move 3 , v0 )  | ( ( move 2 , 0 ; move 3 , 2 ; pen 2 ) ; pen ul )  | ( move 3 - ul , ua ; v0 = ul / ua ; move 3 , 2 )  | ( move 3 - ul , ua * 4 ; ( move 3 , 2 ; v0 = 0 ) )  | ( move 2 , 0 ; ( pen 3 / 2 ; move 2 , 2 ; move ul , ua ) )  | ( ( move 2 , 0 - ua ; move 3 , ua + 2 ; pen ul ) ; pen 4 )  
[209] ( move 3 , 0 ; move 2 , 2 )  | ( move 3 , ua ; move 2 , 2 )  | ( move 3 , 0 ; move 2 , 3 - ul )  | ( move 3 , ua * 4 ; move 2 , 2 )  | ( move 3 , 0 ; move ul + ul , 2 )  | ( move 4 - ul , ua ; move 2 , 2 )  | ( move 3 , ua ; move 2 , 3 - ul )  | ( move 3 , ua ; move 2 , ul + ul )  | ( move 3 , ua ; move ul + ul , 2 )  | ( move 3 , ua * 4 ; move 2 , ul + ul )  | ( move 3 , ua ; move 3 - ul , 3 - ul )  | ( ( pen ul ; move 3 , 0 ) ; move 2 , 2 )  | ( v0 = 2 ; move 3 , 0 ; move v0 , v0 )  | ( move 3 , ua ; move ul , ul + ul ; move ul , 0 - ua )  | ( ( move 3 , ua ; v0 = ul + ul ) ; move v0 , v0 )  | ( move 3 , 0 ; move ul , 2 ; ( move ul , 0 ; v0 = 2 ) )  
[210] ( move 2 , 0 ; move 2 , 3 )  | ( move 2 , ua ; move 2 , 3 )  | ( move 2 , 0 ; move 2 , 4 - ul )  | ( move 2 , ua * 2 ; move 2 , 3 )  | ( move ul + ul , 0 ; move 2 , 3 )  | ( move 2 , 0 ; move ul + ul , 3 )  | ( move 2 , ua ; pen ul ; move 2 , 3 )  | ( move 3 - ul , 0 ; move 2 , ua + 3 )  | ( move 2 , ua * 4 ; move 2 , 2 + ul )  | ( move 2 , ua ; v0 = ul ; move 2 , 3 )  | ( move 2 , 0 ; v0 = ul ; move 2 , ua + 3 )  | ( move 2 , ua ; ( move 2 , 3 ; v0 = ul ) )  | ( move ul , ua ; move ul , 0 ; move ul + ul , 3 )  | ( move 2 , ua ; move ul + ul , 3 ; pen ul - ua )  | ( pen ul ; move 3 - ul , ua ; move ul + ul , 3 )  | ( move 3 - ul , 0 ; move ul + ul , 3 ; v0 = ua )  | ( ( move 2 , ua ; pen ul ; move ul , 3 ) ; move ul , ua )  
[211] ( move 3 , 0 ; move 2 , 3 )  | ( move 3 , ua ; move 2 , 3 )  | ( move 3 , ua ; move 2 , ua + 3 )  | ( move 3 , ua ; move ul + ul , 3 )  | ( move 2 + ul , 0 ; move 4 / 2 , 3 )  | ( move 3 , ua ; ( v0 = 0 ; move 2 , 3 ) )  | ( ( move 4 - ul , 0 ; move 2 , 3 ) ; pen ul / ua )  | ( ( v0 = 3 ; move v0 , 0 ) ; move 2 , v0 ; pen 3 )  
[212] ( move 2 , 0 ; move 2 , 4 )  | ( move 2 , ua ; move 2 , 4 )  | ( move 2 , ua * 3 ; move 2 , 4 )  | ( move 2 , ua ; move ul + ul , 4 )  | ( pen ul ; move 2 , ua ; move 2 , 4 )  | ( move ul + ul , 0 ; move 2 , 3 + ul )  | ( move ul + ul , 0 ; move ul + ul , 4 )  | ( v0 = 2 ; move v0 , ua ; move v0 , 4 )  | ( move ul + ul , ua ; move 0 , ua ; move 2 , 4 )  | ( move ul , ua ; move ul , ua ; move 2 , 3 + ul )  | ( v0 = 2 ; move v0 , 0 ; move v0 , v0 * v0 )  | ( move ul + ul , ua ; move 0 , ua + ul ; move 2 , ua + 3 )  
[213] ( move 2 , 2 ; move 2 , 2 )  | ( move ul + ul , 2 ; move 2 , 2 )  | ( move 2 , ul + ul ; move 2 , ul + ul )  | ( v0 = 0 ; move 2 , 2 ; move ua / 3 , 2 )  | ( v0 = 2 ; move 2 , v0 ; move v0 , v0 )  | ( v0 = 2 ; move v0 , v0 ; move 2 , v0 )  | ( v0 = 2 ; move v0 , v0 ; move v0 , v0 )  | ( move 2 , 2 ; move ul + ul , ul + ul ; v0 = 2 )  | ( v0 = ul + ul ; move v0 , v0 ; move v0 , v0 )  | ( v0 = 3 - ul ; ( move v0 , 2 ; move v0 , v0 ) )  
[214] ( move 2 , 0 ; move 4 , 2 )  | ( move 2 , ua ; move 4 , 2 )  | ( move ul + ul , 0 ; move 4 , 2 )  | ( move 3 - ul , ua ; move 4 , 2 )  | ( move ul + ul , ua ; move 4 , 2 )  | ( move 2 , ua ; move 4 , 2 ; pen 0 )  | ( move 3 - ul , ua ; move 4 , ua + 2 )  | ( move 2 , ua ; move 4 , 2 ; move 0 , ul )  | ( pen ul ; move 2 , 0 ; move 4 , 3 - ul )  | ( v0 = 2 ; move v0 , 0 ; move 4 , v0 )  | ( move ul , ua ; move ul , 0 ; move 4 , ua + 2 )  | ( v0 = ua ; ( move 2 , v0 ; move 4 , 2 ) )  | ( move ul + ul , ua ; v0 = 4 ; move v0 , 2 )  | ( pen ul / ua ; move 2 , ua ; move 2 + 2 , 2 - ua )  | ( v0 = 2 ; move v0 , 0 ; move v0 + v0 , v0 )  | ( v0 = 2 ; ( move v0 , 0 ; move 4 , ua + v0 ) )  | ( move 2 , 0 ; ( move 4 , 2 ; v0 = 4 ) ; v1 = ul )  | ( ( move 2 , ua ; move 0 , ua ; move 4 , 2 ) ; v0 = 0 )  
[215] ( move 4 , 0 ; move 2 , 2 )  | ( move 4 , ua ; move 2 , 2 )  | ( move 4 , 0 - ua ; move 2 , 2 )  | ( move 4 , 0 ; move ul + ul , 2 )  | ( move 4 , ua + ua ; move 2 , 2 )  | ( move 4 , ua ; move ua / 3 , 2 )  | ( move 3 + ul , ua ; move 2 , 4 / 2 )  | ( move 3 + ul , ua ; move ul + ul , 2 )  | ( pen ul ; move 4 , ua ; move 2 , ul + ul )  | ( move 4 , 0 ; v0 = 2 ; move v0 , v0 )  | ( move 4 , ua ; v0 = 2 ; move v0 , v0 )  | ( move 3 + ul , ua ; move 2 , 2 ; pen 2 - 3 )  | ( move 4 , 0 ; v0 = 2 - ua ; move 2 , v0 )  | ( move 2 * 2 , ua ; move ul + ul , 2 ; pen ua )  | ( move 4 , 0 ; move ul , ul + ul ; move ul , ua )  | ( move 0 , 0 - ul ; move 4 , ua + ul ; move 2 , 2 )  | ( move 4 , ua ; move ul , 4 - 2 ; move ul , 0 - ua )  | ( move 2 * 2 , ua ; move ul , ul + ul ; move ul , ua )  | ( move 3 , 0 ; move ul , ua ; ( move 2 , 2 ; v0 = 0 ) )  
[216] ( move 2 , 0 ; move 3 , 3 )  | ( move 2 , 0 ; move 3 , 2 + ul )  | ( move 2 , ua * 2 ; move 3 , 3 )  | ( move 2 , ua ; move 3 , 4 - ul )  | ( move 2 , ua + ua ; move 3 , 2 + ul )  | ( move 4 / 2 , ua ; pen ul ; move 3 , 3 )  | ( move 2 , ua ; move 2 + ul , 3 ; v0 = 3 )  | ( move 2 , 0 ; move 2 , 3 ; move ul , ul / 4 )  | ( move ul + ul , ua ; move 2 + ul , 3 ; v0 = 3 )  
[217] ( move 4 , 0 ; move 2 , 3 )  | ( move 4 , ua ; move 2 , ua + 3 )  | ( move 3 + ul , ua * 2 ; move 2 , 3 )  | ( move 4 , 0 - ua ; move ul + ul , 3 )  | ( move 3 + ul , ua ; pen ul ; move 2 , 3 )  | ( move 4 , ua ; move ul , 3 ; move ul , ua )  | ( move 4 , 0 ; v0 = 2 ; move 2 , ul + v0 )  | ( move 3 + ul , ua ; v0 = ua + 4 ; move 2 , 3 )  | ( move 4 , ua ; ( move ul + ul , ua + 3 ; v0 = 0 ) )  | ( move 4 , 0 ; move 2 , ua + 3 ; ( pen 3 ; v0 = 3 ) )  | ( move 3 + ul , ua ; move ul + ul , 3 - ua ; pen ua + 4 )  
[218] ( move 3 , 0 ; move 3 , 3 )  | ( move 3 , ua ; move 3 , 3 )  | ( move 3 , 0 ; move 4 - ul , 3 )  | ( move 3 , ua * 2 ; move 3 , 3 )  | ( move 3 , ua ; move 3 , 3 ; pen ul )  | ( move 3 , 0 ; move ul , 3 ; move 2 , ua )  | ( move 3 , 0 ; v0 = 3 ; move v0 , v0 )  | ( v0 = 3 ; move v0 , 0 ; move 3 , v0 )  | ( v0 = 3 ; move 3 , ua ; move v0 , v0 )  | ( move 3 , ua ; v0 = 3 ; move v0 , v0 )  | ( move 2 + ul , ua ; move 0 , 3 ; move 3 , ua )  | ( v0 = 3 ; move v0 , 0 ; move v0 , v0 )  | ( move 3 , 0 ; move 3 , 3 ; move ua / 4 , ul - 4 )  | ( ( move 3 , ua ; move 2 + ul , ua + 3 ) ; pen 3 )  | ( v0 = 3 ; ( move v0 , ua ; move v0 , v0 ) )  | ( v0 = 4 - ul ; move v0 , ua ; move v0 , v0 )  
[219] ( move 3 , 0 ; move 2 , 4 )  | ( move 3 , ua ; move 2 , 4 )  | ( move 3 , 0 ; move 3 - ul , 2 * 2 )  | ( move 3 , ua * 3 ; move 2 , 3 + ul )  | ( move 3 , ua ; move 2 , 4 ; v0 = ul )  | ( move 2 + ul , 0 ; move ul + ul , ua + 4 )  | ( move 3 , 0 ; v0 = ua ; move 2 , 3 + ul )  | ( move 4 - ul , ua * 2 ; pen ul ; move 2 , 4 )  | ( move 4 - ul , 0 ; ( v0 = ua ; move 2 , 4 ) )  | ( ( move 3 , 0 ; move ul , 4 ) ; pen ul ; move ul , 0 )  
[220] ( move 3 , 0 ; move 4 , 2 )  | ( move 3 , ua ; move 4 , 2 )  | ( move 3 , ua ; move 4 , ua + 2 )  | ( move 4 - ul , 0 ; move 4 , 4 - 2 )  | ( move 3 , 0 ; move ul , 2 ; move 3 , ua )  | ( move ul , ua ; move 2 , ua ; move 4 , 2 )  | ( move 3 , 0 ; move 4 , 2 ; v0 = ua - 3 )  | ( move 3 , ua ; move 3 + ul , ul + ul ; pen 0 )  | ( move 2 , 0 ; move 2 - ul , ua ; move 4 , ul + ul )  | ( move 2 + ul , ua ; move 0 , 3 ; move 4 , ua - ul )  | ( move 3 , 0 ; pen ul ; ( move 3 + ul , 2 ; pen ua ) )  
[221] ( move 2 , 0 ; move 4 , 3 )  | ( move 2 , ua ; move 4 , 3 )  | ( move 2 , 0 ; move 4 , 3 - ua )  | ( move 3 - ul , 0 ; move 4 , 3 )  | ( move 2 , ua ; move ua - 2 , 3 )  | ( move 2 , ua ; move 3 + ul , 3 )  | ( move ul + ul , ua ; move 4 , 3 )  | ( move 4 - 2 , ua * 2 ; move 4 , 3 )  | ( move ul + ul , ua ; move 4 , ua + 3 )  | ( move 2 , ua * 4 ; move 2 + 2 , ua + 3 )  | ( move 2 , 0 ; ( move 4 , ua + 3 ; pen ua ) )  | ( ( move 2 , ua ; v0 = 4 ) ; move v0 , 3 )  
[222] ( move 4 , 0 ; move 3 , 2 )  | ( move 4 , ua ; move 3 , 2 )  | ( move 4 , 0 ; move 2 + ul , 2 )  | ( move 4 , 0 ; move 3 , 3 - ul )  | ( move 4 , ua ; move 3 , ua + 2 )  | ( move 3 + ul , ua ; move 3 , 2 )  | ( move 4 , ua ; move ua / 2 , 2 )  | ( move 4 , ua ; move 3 , ul + ul )  | ( move 4 , ua ; move 3 , 2 ; pen ua )  | ( move 2 + 2 , 0 ; move 2 + ul , 2 )  | ( move 2 + 2 , ua * 2 ; move 3 , 2 )  | ( move 3 + ul , ua ; move 3 , ua + 2 )  | ( move 4 , ua + ua ; move 4 - ul , 2 )  | ( move 4 , ua ; ( v0 = 3 ; move v0 , 2 ) )  | ( move 3 + ul , ua * 3 ; v0 = ul ; move 3 , 2 )  | ( move 4 , ua + ua ; v0 = 3 ; move v0 , ua + 2 )  | ( move 4 , 0 ; v0 = 4 - 2 ; move v0 + ul , v0 )  
[223] ( move 4 , 0 ; move 2 , 4 )  | ( move 4 , ua ; move 2 , 4 )  | ( move 4 , ua * 3 ; move 2 , 4 - ua )  | ( move 4 , ua ; move 3 - ul , ua + 4 )  | ( move 4 , 0 ; move 2 , 4 ; v0 = ua )  | ( move 3 + ul , 0 ; move 2 , 4 ; pen 0 )  | ( move 4 , 0 ; move 3 - ul , 4 ; pen 2 )  | ( move 4 , 0 ; move 2 , 4 ; pen ul - ua )  | ( v0 = 3 ; move 4 , v0 * ua ; move 2 , 4 )  | ( ( move 4 , ua + ua ; move 2 , 4 ) ; pen ul - 3 )  
[224] ( move 3 , 0 ; move 4 , 3 )  | ( move 3 , ua ; move 4 , 3 )  | ( move 2 + ul , 0 ; move 4 , 3 )  | ( move ua / 2 , 0 ; move 4 , 3 )  | ( move 3 , ua ; move 4 , 2 + ul )  | ( move 2 + ul , ua ; move 4 , 3 )  | ( move 3 , ua ; move 4 , 3 - ua )  | ( pen ul ; move 3 , ua ; move 4 , 3 )  | ( move 3 , 0 ; ( move 4 , 3 ; pen 0 ) )  | ( move 3 , ua ; move 4 , 3 ; v0 = ul )  | ( ( move 3 , ua ; move 4 , 3 ) ; pen ul )  | ( move 3 , ua ; v0 = 3 ; move 4 , v0 )  | ( move 2 + ul , 0 ; move 4 , 3 ; move 0 , 4 )  | ( move 2 + ul , 0 ; move 2 , 3 ; move 2 , ua )  | ( move 3 , ua ; move 0 , 0 ; move 4 , 2 + ul )  | ( ( move 3 , ua ; move 4 , ua + 3 ) ; pen ul )  | ( move ul , 0 ; move ul + ul , ua ; move 4 , 3 )  | ( v0 = 2 + ul ; move v0 , ua ; move 4 , v0 )  | ( move ua / 3 , ua ; move ul , 0 ; move 3 + ul , 3 )  | ( move 3 , ua * 3 ; move 3 + ul , 3 ; v0 = ul - 2 )  | ( move 3 , 0 ; ( move 4 , 2 + ul ; pen ul ) ; move 0 , 0 )  
[225] ( move 3 , 2 ; move 2 , 3 )  | ( move 3 , 2 ; move 3 - ul , 3 )  | ( move 2 + ul , 2 ; move 2 , 2 + ul )  | ( move ul , 2 ; move 2 , 0 ; move 4 / 2 , 3 )  | ( move 2 + ul , 2 ; move 2 , 3 - ua ; pen ul )  | ( move ua / 2 , 2 ; move ul , 3 ; move ul , ua )  | ( move 3 , ul + ul ; move ul + ul , 3 ; move 0 , 0 )  | ( move 3 , 2 ; move ul + ul , 3 - ua ; v0 = ul )  | ( move 3 , 2 ; ( move ul , 3 ; pen ul ; move ul , ua ) )  
[226] ( move 3 , 0 ; move 3 , 4 )  | ( move 3 , ua ; move 3 , 4 )  | ( move 3 , 0 ; move 3 , 3 + ul )  | ( move 2 + ul , 0 ; move 3 , 4 )  | ( move 3 , ua * 3 ; move 3 , 4 )  | ( move 3 , 0 ; move 3 , 4 ; pen ua )  | ( pen ul ; move 3 , 0 ; move 3 , 4 )  | ( move 3 , ua ; move 3 , 4 ; pen 4 )  | ( move 3 , 0 ; move 4 - ul , ua + 4 )  | ( move 4 - ul , ua * 4 ; move 3 , 4 )  | ( move 4 - ul , ua ; move 4 - ul , 4 )  | ( move 3 , 0 ; move 3 , 4 ; v0 = ul )  | ( move 3 , 0 ; v0 = 3 ; move v0 , 4 )  | ( move 3 , 0 ; ( move 3 , 4 ; v0 = 0 ) )  | ( move 3 , 0 ; move 3 , 4 ; v0 = ua * 2 )  | ( move 3 , ua * 4 ; move 3 , 4 ; v0 = 4 )  | ( v0 = 3 ; ( move v0 , 0 ; move 3 , 4 ) )  | ( v0 = 3 ; ( move v0 , ua ; move v0 , 4 ) )  | ( move 2 + ul , ua * 4 ; move 3 , 4 ; v0 = ul )  | ( move 2 + ul , ua ; v0 = ul ; move 2 + v0 , 4 )  | ( ( v0 = 3 ; move v0 , 0 ) ; move v0 , 2 + 2 )  
[227] ( move 4 , 0 ; move 4 , 2 )  | ( move 4 , ua ; move 4 , 2 )  | ( move 4 , 0 ; move 3 + ul , 2 )  | ( move 4 , ua * 2 ; move 4 , 2 )  | ( move 4 , ua * 3 ; move 4 , 2 )  | ( move 4 , ua ; move 3 + ul , 2 )  | ( move 4 , ua ; move 4 , ul + ul )  | ( move 4 , ua ; move 4 , 2 ; pen 3 )  | ( move 2 + 2 , 0 ; move 4 , 2 ; pen ua )  | ( move 4 , ua ; v0 = 4 ; move v0 , 2 )  | ( move ul , 0 ; move 4 - ul , 0 ; move 4 , 2 )  | ( move 4 , ua ; ( move 4 , ul + ul ; v0 = 4 ) )  | ( v0 = ua + ua ; ( move 4 , ua ; move 4 , v0 + 2 ) )  | ( ( move 4 , ua ; v0 = ua ; v1 = ul ) ; move 4 , 2 )  
[228] ( move 3 , 3 ; move 2 , 2 )  | ( move 3 , 2 + ul ; pen ul ; move 2 , 2 )  | ( move 3 , ua + 3 ; move 0 , ul ; move 2 , ul )  | ( move 3 , 3 ; v0 = ul + ul ; move v0 , v0 )  | ( move 2 + ul , 3 ; v0 = ul + ul ; move v0 , v0 )  
[229] ( move 2 , 3 ; move 3 , 2 )  | ( move 2 , 3 ; move 2 + ul , 2 )  | ( move 2 , 3 ; move 3 , 2 ; move 0 , ua )  | ( move 0 , 2 + ul ; ( move 2 , ua ; move 3 , ul + ul ) )  | ( ( move 2 , 4 - ul ; move ul , 2 ) ; move ul + ul , ua )  
[230] ( move 4 , 2 ; move 2 , 2 )  | ( move 4 , 2 ; move ul + ul , ul + ul )  | ( move 4 , 2 ; move 2 , 2 ; v0 = ul + ul )  | ( move 3 + ul , 2 - ua ; move 2 , 2 ; pen 0 )  | ( v0 = 2 ; move 2 + v0 , 2 ; move v0 , 2 )  | ( ( move 4 , 2 ; v0 = ul ) ; move 2 , ul + v0 )  | ( move 4 , ul + ul ; v0 = ul + ul ; move 2 , v0 )  
[231] ( move 2 , 4 ; move 2 , 2 )  | ( move 2 , 4 ; move 2 , 2 ; v0 = 3 )  | ( move 2 , 4 - ua ; move 3 - ul , ul + ul )  | ( v0 = 2 ; move v0 , 4 ; move v0 , 2 )  | ( v0 = 2 ; move v0 , v0 + v0 ; move 2 , v0 )  
[232] ( move 2 , 2 ; move 3 , 3 )  | ( move 2 , 2 ; move 3 , 3 ; pen ua )  | ( move 2 , 2 ; move 3 , 3 ; move 0 , ul )  | ( move ul , 0 - ul ; move 2 , 3 ; move 3 , 3 )  | ( move ul + ul , 2 ; move 3 , 3 ; v0 = 4 )  | ( move 0 , 2 - ul ; move 3 - ul , ul - ua ; move 3 , 3 )  | ( move 2 , 2 ; ( move 3 , 3 ; pen ul - ua ) ; v0 = ua )  
[233] ( move 4 , 0 ; move 3 , 4 )  | ( move 4 , ua ; move 3 , 4 )  | ( move 2 + 2 , ua ; move 3 , 4 )  | ( move 4 , ua * 2 ; move 3 , 4 )  | ( v0 = 4 ; move v0 , 0 ; move 3 , v0 )  | ( v0 = 4 ; move v0 , ua ; move 3 , v0 )  | ( pen ul ; move 4 , ua ; move 4 - ul , ua + 4 )  | ( move 3 + ul , 0 ; move 3 , 4 - ua ; v0 = ua )  | ( move 4 , ua ; ( pen 2 - ul ; move 2 + ul , 4 ) )  | ( v0 = 4 ; move v0 , 0 ; move v0 - ul , v0 )  
[234] ( move 3 , 2 ; move 2 , 4 )  | ( move 2 + ul , 2 ; move 2 , 4 )  | ( move 3 , 2 ; move ul + ul , 2 * 2 )  | ( move ul , ua + 2 ; move 2 , ua ; move 2 , 4 )  | ( move 3 , ul + ul ; v0 = 2 ; move v0 , 4 )  
[235] ( move 3 , 4 ; move 2 , 2 )  | ( move 3 , 4 ; move 2 , ua + 2 )  | ( move 3 , ua + 4 ; pen ul ; move 2 , ul + ul )  | ( ( move 0 , 3 ; move 4 - ul , ul ) ; move 2 , 2 )  
[236] ( move 3 , 3 ; move 3 , 2 )  | ( move 2 + ul , ua + 3 ; move 3 , 2 )  | ( move 3 , 3 ; move 3 , 2 ; pen ul - 2 )  | ( v0 = 3 ; move v0 , v0 ; move v0 , 2 )  
[237] ( move 4 , 3 ; move 2 , 2 )  | ( move 4 , ua + 3 ; move 2 , 2 )  | ( move 4 , 3 ; move 3 - ul , 2 )  | ( move 4 , 3 ; move 2 , ul + ul )  | ( move 3 , 3 ; move ul , 0 ; move 2 , 2 )  | ( move 4 , 3 ; pen 4 / ua ; move 2 , 2 )  
[238] ( move 2 , 2 ; move 4 , 3 )  | ( move 2 , 3 - ul ; move 4 , 3 )  | ( move ul + ul , 2 ; move 4 , 3 )  | ( move 4 / 2 , ul + ul ; move 4 , 3 )  | ( move 2 , 2 ; ( move 3 , 3 ; move ul , ua ) )  
[239] ( move 2 , 3 ; move 4 , 2 )  | ( move 2 , 3 ; move 4 , ua + 2 )  | ( move 2 , 3 ; move 4 , 3 - ul )  | ( move ul + ul , 3 ; move 3 + ul , 2 )  | ( v0 = 2 ; move v0 , ul + v0 ; move 4 , v0 )  
[240] ( move 2 , 3 ; move 3 , 3 )  | ( move 2 , 3 ; move 2 + ul , 3 ; pen ua )  | ( move ul , 3 ; move ul , 0 ; move 3 , 2 + ul )  | ( v0 = 3 ; move 2 , v0 ; move v0 , v0 )  | ( move 2 , 3 ; v0 = 2 + ul ; move v0 , v0 )  | ( move 2 , 2 + ul ; v0 = 3 ; move v0 , v0 )  | ( move ul + ul , 3 ; v0 = 3 ; move v0 , v0 )  | ( move ul + ul , 3 ; move 3 , ua + 3 ; v0 = 3 )  | ( move 3 - ul , 2 + ul ; pen ul ; move ua - 3 , 3 )  
[241] ( move 2 , 4 ; move 3 , 2 )  | ( move ul + ul , 4 ; move 3 , 2 )  | ( move 2 , 4 ; move 3 , 2 ; v0 = ua + ul )  | ( move ul , 4 ; move ul , ua + ua ; move 3 , 3 - ul )  | ( move ul + ul , 3 + ul ; move 4 - ul , 2 ; pen ul )  | ( move 2 , 4 ; ( move 3 , ul + ul ; pen 3 ; pen ua ) )  | ( v0 = 2 ; move v0 , 2 * v0 ; move 4 - ul , v0 )  
[242] ( move 3 , 0 ; move 4 , 4 )  | ( move 3 , ua ; move 4 , 4 )  | ( move 3 , 0 ; move 2 + 2 , 4 )  | ( move 3 , 0 ; move 4 , 2 * 2 )  | ( move 3 , 0 ; move 3 + ul , 4 )  | ( move 3 , ua ; move 3 + ul , 4 )  | ( move 3 , 0 ; v0 = 4 ; move v0 , v0 )  | ( v0 = 4 ; move 3 , ua ; move v0 , v0 )  | ( ( move 3 , 0 ; v0 = ua * 3 ) ; move 4 , 4 )  | ( ( move 2 , 0 ; move ul , ua ) ; move 4 , 4 - ua )  | ( move 3 , ua ; move 3 + ul , 3 + ul ; pen 3 * 2 )  | ( ( move 3 , ua ; move 4 , 4 ; pen 0 ) ; v0 = 3 )  | ( pen ul ; ( move 0 , ua ; move 3 , ua ; move 4 , 2 + 2 ) )  
[243] ( move 4 , 0 ; move 4 , 3 )  | ( move 4 , 0 ; move 3 + ul , 3 )  | ( move 4 , ua * 2 ; move 4 , 3 )  | ( move 4 , ua * 4 ; move 4 , 3 )  | ( move 3 + ul , ua ; move 4 , 3 )  | ( move 4 , ua ; move 4 , ua + 3 )  | ( move 3 , 0 ; move ul , ua ; move 4 , 3 )  | ( move 4 , ua ; v0 = ua ; move 4 , 3 )  | ( move 4 , ua ; move 3 + ul , 3 ; pen 2 )  | ( move 4 , ua ; v0 = 4 ; move v0 , 3 )  | ( move 4 , ua ; move 4 , 3 ; move 0 , ul / 4 )  | ( v0 = ul ; move 4 , 0 ; move 4 , v0 * 3 )  | ( move 3 - 4 , ua ; move 4 , ua ; move 4 , 2 + ul )  
[244] ( move 4 , 2 ; move 3 , 2 )  | ( move 2 * 2 , 2 ; move 3 , 2 )  | ( move 4 , 2 ; move 3 , ua + 2 )  | ( move 4 , 2 ; move 2 + ul , ul + ul )  | ( ( move 4 , 2 ; move 3 , 2 ) ; pen 0 - 3 )  | ( ( move 4 , ua + 2 ; move 3 , 3 - ul ) ; pen 0 )  | ( move 2 , 3 - ul ; move ul + ul , 0 ; move 3 , 2 )  
[245] ( move 4 , 2 ; move 4 , 2 )  | ( move 4 , 2 ; move 2 * 2 , 2 )  | ( move 2 + 2 , 2 ; move 3 + ul , 2 )  | ( ( move 3 + ul , 2 ; pen ul ) ; move 4 , 2 )  
[246] ( move 4 , 2 ; move 2 , 4 )  | ( move 3 + ul , 2 ; move 2 , 4 )  | ( move 4 , 3 - ul ; move 2 , 4 )  | ( move 4 , 2 ; move 2 , 4 ; v0 = 3 )  | ( move 4 , ul + ul ; move ul + ul , 3 + ul )  | ( v0 = 2 ; move 4 , v0 ; move v0 , v0 * v0 )  | ( v0 = 2 ; move 4 , v0 ; move ul + ul , v0 + v0 )  
[247] ( move 3 , 2 ; move 3 , 4 )  | ( move 3 , 2 ; move 3 , 2 * 2 )  | ( move 2 + ul , 2 ; move 3 , 4 )  | ( move 3 , 3 - ul ; move 3 , ua + 4 )  | ( v0 = 4 ; move 3 , 2 ; move 3 , v0 )  
[248] ( move 2 , 2 ; move 4 , 4 )  | ( move 2 , 2 - ua ; move 4 , 4 )  | ( move ul , 2 ; move ul , ua ; move 4 , 4 )  | ( move 2 , 2 ; v0 = 4 ; move v0 , v0 )  | ( ( v0 = 4 ; move 2 , 2 ) ; move v0 , 4 )  | ( ( move ul + ul , 2 ; v0 = 4 ) ; move v0 , v0 )  | ( v0 = 2 ; move 4 / v0 , v0 ; move 4 , 2 * v0 )  
[249] ( move 4 , 3 ; move 3 , 2 )  | ( move 4 , 3 ; move 3 , ul + ul )  | ( move 4 , 3 ; move 0 , 2 ; move 2 + ul , 0 )  | ( move 4 , 3 ; move 3 , 2 ; move 0 , 4 + ul )  | ( v0 = 3 ; move 4 , v0 ; move 3 , ul + ul )  
[250] ( move 3 , 3 ; move 2 , 4 )  | ( move 3 , 3 ; move ul + ul , 4 )  | ( move 3 , 3 ; move 3 - ul , 4 - ua )  | ( ( move 2 + ul , 3 ; move 2 , 3 + ul ) ; v0 = ul )  
[251] ( move 3 , 2 ; move 4 , 3 )  | ( move 3 , 2 ; move 3 + ul , 3 )  | ( move 2 + ul , ul + ul ; move 4 , 3 )  | ( pen ul ; move 3 , ul + ul ; move 4 , 3 )  
[252] ( move 2 , 3 ; move 3 , 4 )  | ( move 2 , 3 ; move 4 - ul , 4 )  | ( move 3 - ul , 3 ; v0 = ul ; move 3 , 4 )  | ( move 2 , 4 - ul ; move 3 , 4 ; pen 2 + ul )  
[253] ( move 3 , 3 ; move 3 , 3 )  | ( move 2 + ul , 3 ; move 3 , 3 )  | ( move 4 - ul , 3 ; move 3 , 3 )  | ( move 3 , 3 ; move 3 , 3 ; pen ul )  | ( move 3 , 2 + ul ; move 3 , 4 - ul )  | ( move 3 , 4 - ul ; move 3 , 2 + ul )  | ( move 4 - ul , 2 + ul ; move 3 , 3 )  | ( v0 = 3 ; move v0 , 3 ; move 3 , v0 )  | ( v0 = 3 ; move 3 , v0 ; move 3 , v0 )  | ( move 0 , ul ; move 2 + ul , 2 ; move 3 , 3 )  | ( move 3 , ua + 3 ; move 3 , 2 + ul ; pen ua )  | ( v0 = 3 ; move v0 , 3 ; move v0 , v0 )  | ( v0 = 3 ; move v0 , v0 ; move 3 , v0 )  | ( v0 = 3 ; move v0 , v0 ; move v0 , 3 )  | ( v0 = 3 ; move v0 , v0 ; move v0 , v0 )  | ( v0 = 4 - ul ; move 3 , v0 ; move v0 , v0 )  | ( v0 = 3 ; move v0 , ua + v0 ; move v0 , v0 )  | ( v0 = 2 + ul ; move v0 , v0 ; move v0 , v0 )  | ( v0 = 3 ; move v0 , v0 ; move v0 , v0 - ua )  | ( v0 = 4 - ul ; move v0 , v0 ; move v0 , v0 )  | ( ( ( move 3 , 3 ; move 3 , 3 ) ; move 0 , ul ) ; pen 3 )  
[254] ( move 3 , 4 ; move 3 , 2 )  | ( move 3 , 4 ; move 3 , ua + 2 )  | ( move 3 , ua + 4 ; move 3 , 2 )  | ( move 3 , 4 ; pen ul ; move 3 , 3 - ul )  | ( move 4 - ul , 4 ; move 0 , ul ; move 3 , ul )  | ( move 3 , 4 ; move 2 + ul , 2 ; v0 = 2 + ul )  | ( v0 = 2 ; move v0 + ul , 4 ; move ua / v0 , v0 )  
[255] ( move 4 , 0 ; move 4 , 4 )  | ( move 4 , ua ; move 4 , 4 )  | ( move 4 , 0 ; move 4 , ua + 4 )  | ( move 3 + ul , 0 ; move 4 , 4 )  | ( move 4 , 0 - ua ; move 4 , 4 )  | ( move 4 , ua * 4 ; move 4 , 4 )  | ( move 4 , ua ; move 4 , 3 + ul )  | ( move 4 , ua + ua ; move 4 , 4 )  | ( move 4 , ua ; move 4 , ua + 4 )  | ( move ul , ua ; move 3 , 0 ; move 4 , 4 - ua )  | ( v0 = 4 ; move v0 , ua ; move v0 , v0 )  | ( ( move 4 , 0 ; v0 = 4 ) ; move v0 , v0 )  | ( v0 = 3 + ul ; move v0 , 0 ; move 4 , v0 )  | ( move 4 , ua ; v0 = 4 ; move v0 , v0 + ua )  | ( v0 = 3 + ul ; move v0 , ua ; move v0 , 4 )  | ( v0 = 2 * 2 ; move v0 , ua ; move v0 , v0 )  | ( ( v0 = 4 ; move v0 , ua ) ; move v0 , v0 )  | ( move 4 , ua ; ( move 4 , 4 ; pen ua ) ; v0 = 4 )  | ( v0 = 4 ; move v0 , 4 - v0 ; move v0 , v0 )  
[256] ( move 2 , 3 ; move 4 , 3 )  | ( move 3 - ul , 3 ; move 4 , 3 )  | ( move 2 , 3 ; move 4 , ua + 3 ; pen ul )  | ( ( move ul , ua + ua ; move 2 , 3 ) ; move 4 , 3 - ua )  
[257] ( move 3 , 4 ; move 4 , 2 )  | ( move 3 , 4 ; move 4 , ua + 2 )  | ( move 3 , ua + 4 ; move 4 , 2 )  | ( v0 = 4 ; move 3 , v0 ; move v0 , 2 )  | ( move 3 , ua + 4 ; move 4 , 2 ; v0 = 4 )  | ( move 3 , 4 ; move 3 - ul , 2 ; move 2 , ua )  
[258] ( move 4 , 3 ; move 2 , 4 )  | ( move 0 , 3 ; move 4 , ua ; move 2 , 3 + ul )  | ( ( move 4 , 3 - ua ; pen ul ) ; move 2 , 4 )  | ( v0 = ul ; ( move 4 , 3 ; move ul + v0 , 4 ) )  
[259] ( move 3 , 3 ; move 4 , 3 )  | ( move 2 + ul , 3 ; move 4 , 3 )  | ( move 3 , 3 ; move 4 , 3 ; pen ul )  | ( move 3 , ua + 3 ; move 3 + ul , 3 )  | ( move 3 , 4 - ul ; move 4 , ua + 3 )  | ( move 2 + ul , 3 ; move 4 , 3 ; pen ua )  | ( v0 = 3 ; move v0 , v0 ; move 4 , v0 )  | ( move 3 , 3 ; v0 = 2 + ul ; move 4 , v0 )  | ( ( move 2 , 3 ; move ul , 0 ) ; move 4 , ua + 3 )  | ( v0 = 3 ; move v0 , v0 ; move v0 + ul , 3 )  
[260] ( move 3 , 2 ; move 4 , 4 )  | ( move 3 , 2 ; v0 = 4 ; move v0 , v0 )  
[261] ( move 4 , 2 ; move 4 , 3 )  | ( move ul , 2 ; ( move 3 , 0 ; move 4 , 3 - ua ) )  
[262] ( move 2 , 3 ; move 4 , 4 )  | ( move ul + ul , 3 ; move 4 , ua + 4 )  | ( move ul + ul , 3 ; move 4 , 3 + ul )  | ( move 3 - ul , ua + 3 ; move 4 , 4 - ua )  | ( v0 = ul + ul ; move v0 , 3 ; move 4 , 4 )  | ( move 2 , 3 ; ( v0 = 4 ; move v0 , v0 ) )  | ( move 3 - ul , 2 + ul ; ( move 4 , 4 ; pen 2 ) ; pen ua )  
[263] ( move 3 , 3 ; move 3 , 4 )  | ( move 3 , 3 ; move 3 , 3 + ul )  | ( move 3 , 3 ; v0 = 2 + ul ; move 3 , 4 )  | ( v0 = 3 ; move v0 , v0 ; move v0 , 4 )  | ( v0 = 2 + ul ; move v0 , 3 ; move 2 + ul , 4 )  | ( ( v0 = 4 - ul ; move v0 , v0 ) ; move v0 , 4 )  
[264] ( move 4 , 3 ; move 4 , 2 )  | ( move 4 , 3 ; move 4 , ul + ul )  
[265] ( move 4 , 2 ; move 3 , 4 )  | ( move 4 , ul + ul ; move 3 , 4 )  | ( move 4 , 2 - ua ; move 4 - ul , 4 )  | ( move 4 , ul + ul ; move 4 - ul , 4 )  | ( move 0 , 2 ; ( move 4 , ua ; move 3 , 4 ) )  
[266] ( move 4 , 4 ; move 2 , 4 )  | ( move 4 , 4 - ua ; move 2 , 4 )  | ( v0 = 4 ; move v0 , 4 ; move 2 , v0 )  | ( v0 = 4 ; move v0 , v0 ; move 2 , v0 )  | ( v0 = 4 ; move v0 , v0 ; move ua / 4 , 4 )  
[267] ( move 4 , 4 ; move 3 , 3 )  | ( move 4 , 4 ; move 3 , ua + 3 ; pen ul )  | ( move 4 , 4 ; v0 = ua ; move 3 , v0 + 3 )  
[268] ( move 4 , 3 ; move 3 , 4 )  
[269] ( move 2 , 4 ; move 4 , 4 )  | ( move 2 , 4 ; move 4 , 4 ; v0 = 0 )  | ( move 0 , 0 ; move 2 , 4 ; move 4 , 2 + 2 )  | ( v0 = 4 ; move 2 , v0 ; move v0 , v0 )  | ( v0 = 4 ; move ul + ul , v0 ; move 4 , v0 )  | ( v0 = 4 ; ( move 2 , v0 ; move v0 , v0 ) )  | ( move 2 , 4 ; v0 = 4 / 2 ; move 4 , v0 * v0 )  
[270] ( move 3 , 4 ; move 4 , 3 )  | ( move 3 , 4 ; move 4 , ua + 3 )  | ( move 2 + ul , 4 ; move 4 , 3 )  | ( move 3 , 4 ; move ul + ul , 4 - ul ; move 2 , ua )  
[271] ( move 4 , 2 ; move 4 , 4 )  | ( move 4 , 2 ; move 4 , 2 + 2 )  | ( move 4 , ul + ul ; move 3 + ul , ua + 4 )  | ( move 4 , ua + 2 ; move 4 , 2 + 2 ; pen ua - 4 )  | ( v0 = 3 + ul ; move v0 , 2 - ua ; move v0 , v0 )  
[272] ( move 4 , 4 ; move 4 , 3 )  | ( move 4 , 4 ; move 4 , 3 - ua )  | ( move 0 , 3 ; move 4 , ul ; move 4 , 3 )  | ( v0 = 4 ; move v0 , v0 ; move 4 , 3 - ua )  
[273] ( move 4 , 4 ; move 3 , 4 )  | ( move 4 , 4 ; move 2 + ul , 4 )  | ( move 4 , 4 ; move 3 , 4 ; pen ul / ua )  
[274] ( move 4 , 3 ; move 4 , 4 )  | ( move 4 , 4 - ul ; move 4 , 4 )  | ( move 4 , 3 ; move 0 , ua + 3 ; move 4 , ul )  | ( v0 = 4 ; move v0 , 3 ; move v0 , v0 )  | ( v0 = ua ; ( move 4 , 3 + v0 ; move 4 , 4 ) )  
[275] ( move 4 , 4 ; move 4 , 4 )  | ( move 4 , ua + 4 ; move 4 , 4 )  | ( move 4 , 4 ; move 4 , ua + 4 ; pen 0 )  | ( v0 = 4 ; move v0 , v0 ; move v0 , 4 )  | ( ( v0 = 4 ; move v0 , v0 ) ; move 4 , 4 )  | ( v0 = 4 ; move v0 , v0 ; move v0 , v0 )  | ( move 3 + ul , 4 ; move 3 + ul , 4 ; move 0 , ua )  | ( v0 = 2 + 2 ; move v0 , v0 ; move v0 , 4 )  | ( v0 = 2 + 2 ; move v0 , v0 ; move v0 , v0 )  | ( move 4 , 4 ; move 4 , 3 + ul ; ( pen ul ; pen ua ) )  | ( v0 = 2 + 2 ; move 4 , v0 ; move v0 , v0 - ua )  
[276] ( pen 2 ; move 3 + 2 , 2 )  | ( pen 4 - 2 ; move 4 + ul , 2 )  | ( pen 2 ; move ul - ua , ua + 2 )  | ( pen 2 ; move 4 + ul , 2 ; v0 = ua )  | ( pen 2 ; v0 = 4 ; move ul + v0 , 2 )  | ( move 0 , 2 ; ( pen 2 ; move 4 + ul , 0 ) )  | ( pen 2 ; v0 = ul ; move 4 + v0 , 3 - v0 )  | ( pen ua / 3 ; move ul , ua + 2 ; move 2 * 2 , 0 )  | ( pen 2 ; ( v0 = 2 ; move v0 , v0 ) ; move 3 , 0 )  
[277] ( pen 2 ; move 3 + 2 , 4 )  | ( pen 2 ; move 4 + ul , 4 )  | ( pen 2 ; move ul - ua , 4 )  | ( pen 2 ; move 4 + ul , ua + 4 )  | ( pen 2 ; move 4 , ua + 4 ; move ul , ua )  | ( pen 2 ; move 3 + 2 , ua + 4 ; v0 = ul )  | ( pen ul ; pen ul + ul ; move 4 + ul , ua + 4 )  | ( ( pen 2 ; move 4 + ul , 4 ) ; move 0 , ua ; pen 0 )  
[278] ( pen 4 ; move 4 + 4 , 0 )  | ( pen 4 ; move ua + 2 , 0 )  | ( pen ua ; move 3 * 3 , 0 )  | ( pen 4 ; move 4 * 2 , ua )  | ( pen ua ; move ua + 2 , 0 )  | ( pen 4 ; move ua + 2 , ua )  | ( pen ua ; move ua + 2 , ua )  | ( pen 4 ; move 4 + 4 , 0 - ua )  | ( pen ua + 3 ; move ua + 2 , ua )  | ( pen ua + ul ; move ua + 2 , ua )  | ( pen ua ; move ua , 0 ; move 2 , 0 )  | ( pen 2 ; pen ua ; move 4 * 2 , ua )  | ( pen 4 ; move 2 , ua ; move ua , ua )  | ( pen 4 ; move 4 * 2 , 0 ; pen 2 - ul )  | ( pen 4 ; move 4 + 3 , ua ; move ul , 0 )  | ( pen 4 ; move 3 * 3 , 0 ; pen ua + ul )  | ( v0 = ul ; pen 4 ; move ua + 2 , ua )  | ( pen ua ; move ul , 0 ; move ua + ul , 0 )  | ( ( pen ul ; pen ua ) ; move ua + 2 , ua )  | ( v0 = ua + 2 ; pen v0 ; move v0 , 0 )  | ( pen ua * 2 ; move 4 + 4 , 0 ; v0 = ua )  | ( pen ua ; move 0 - 4 , 0 ; move ua + 2 , ua )  | ( pen 4 ; ( move ua + 2 , ua ; v0 = ua ) )  | ( v0 = 4 ; pen v0 ; move v0 + v0 , 0 )  | ( pen ua ; move 3 + ul , ua ; move 3 + ul , ua )  | ( pen 4 ; v0 = ua - ul ; move 3 + v0 , ua )  | ( pen 4 ; v0 = 2 + ul ; move v0 * v0 , 0 )  | ( pen 4 + 3 ; v0 = 4 ; move v0 + v0 , ua )  | ( pen 3 * 3 ; v0 = 3 ; move v0 * v0 , ua )  | ( v0 = ul - 3 ; ( pen 4 ; move v0 - ua , ua ) )  | ( pen 4 ; v0 = 0 ; ( move ua , v0 ; move 2 , ua ) )  
[279] ( pen 3 ; move 3 + 2 , 4 )  | ( pen 3 ; move ua - ul , 4 )  | ( pen 2 + ul ; move 4 + ul , 4 )  | ( pen 3 ; move 4 + ul , 4 ; move 0 , ua )  | ( pen 3 ; move 4 , 2 + 2 ; move ul , ua )  | ( pen 2 + ul ; move ul , 4 ; move 4 , ua )  | ( pen 3 ; move 0 , 2 ; move ua - ul , ua + 2 )  
[280] ( pen 3 ; move 4 , 2 - 3 )  | ( pen 3 ; move 4 , 3 - 4 )  | ( pen 3 ; move 3 + ul , 0 - ul )  
[281] ( pen 4 ; move 4 , 0 - 4 )  | ( pen 4 ; move 4 , ua - 4 ; pen ua )  | ( pen 4 ; ( move 4 , ua - 4 ; pen 3 ) )  | ( pen ua - 3 ; move 0 , ul / ua ; move 4 , ua - ul )  
[282] ( pen 2 ; move 4 * 2 , 4 )  | ( pen 2 ; move ua + 2 , 4 )  | ( pen 2 ; move ua + ul , 4 )  | ( pen ul + ul ; move ua + 2 , 4 )  | ( pen ua - 4 ; move ua + ul , 4 )  | ( pen ua ; pen 2 ; move ua + 2 , 3 + ul )  | ( pen ul + ul ; move ua + ul , 2 * 2 ; v0 = ul / 3 )  | ( pen 2 ; ( v0 = 3 + ul ; move v0 + v0 , v0 ) )  
[283] ( pen 2 ; move 4 , 4 * 2 )  | ( pen ul + ul ; move 4 , ua * ua )  | ( pen ul + ul ; move 0 , ua * ua ; move 4 , 0 )  | ( pen ul + ul ; v0 = 4 ; move v0 , v0 + v0 )  
[284] ( pen 4 ; move 4 , 4 + 2 )  | ( pen ua ; move 4 , 4 + 2 )  | ( pen 4 ; move 2 - ua , 3 + 3 )  | ( pen 4 ; move 4 , 3 + 3 ; pen ua )  | ( move ua / 4 , 3 ; pen 4 ; move 4 , 3 )  
[285] ( pen 2 ; move 4 , 2 / 3 )  | ( pen ua - 4 ; move 3 + ul , 2 / 3 )  | ( pen 2 ; move ul , ua + 4 ; move 4 , 3 )  
[286] ( pen 2 ; move 4 , 3 - 4 )  | ( pen 2 ; move 4 , ul - 2 )  | ( pen 2 ; move 4 , ua - ul )  | ( pen 2 ; ( pen 2 ; move 4 , ua - ul ) )  | ( pen 2 ; v0 = ua - ul ; move 4 , v0 )  
[287] ( pen 3 ; move 4 , 4 * 2 )  | ( pen 3 ; move 4 , 4 + 4 )  
[288] ( pen 3 ; move 4 * 2 , 4 )  | ( pen 3 ; move ua + 2 , 4 )  | ( pen 3 ; move 2 , 2 + 2 ; move ua , 0 )  | ( pen 3 ; move 2 , 3 + ul ; move ua , 0 )  | ( pen 3 ; ( move ul , 4 ; move ua , ua ) )  | ( pen 3 ; ( v0 = ua + ul ; move v0 , 4 ; pen ul ) )  | ( pen 3 ; ( move ua + ul , 4 ; pen 3 * 3 ; v0 = ul ) )  
[289] ( pen 4 ; move 4 + 4 , 3 )  | ( pen 4 ; move ua + 2 , 3 )  | ( pen 4 ; move ua + ul , 3 )  | ( pen ua ; move ua + ul , 3 )  | ( pen ua + 3 ; move ua + ul , 3 )  | ( pen 0 ; pen 4 ; move ua + 2 , 3 )  | ( pen ua ; move ua + ul , 3 ; move 0 , 2 )  | ( pen 4 ; pen ua ; move ua + ul , ua + 3 )  | ( v0 = ua + ul ; pen v0 ; move v0 , 3 )  | ( pen 4 + ul ; ( move ul , 3 ; move ua , ua ) )  | ( ( pen ua + ua ; move ua , 3 ) ; move ul , ua )  | ( pen ul ; ( pen 4 ; move ul , 3 ; move ua , 0 ) )  | ( ( pen ua ; move ua , 3 ; pen ua ) ; move ul , 0 )  | ( ( pen 4 ; move ul , 3 ) ; v0 = ua ; move v0 , v0 )  | ( move ul , 0 ; ( pen 4 ; move 0 , ua ) ; move ua + ul , 3 )  
[290] ( pen 4 ; move 3 * 3 , 4 )  | ( pen 4 ; move ua + 3 , 4 )  | ( pen ua ; move 3 * 3 , 4 )  | ( pen ua ; move ua + 3 , 4 )  | ( pen ua ; move ua + 4 , 4 )  | ( pen 4 ; move ua , 4 ; move 3 , ua )  
[291] ( pen 4 ; move 4 * 2 , 4 )  | ( pen 4 ; move ua + ul , 4 )  | ( pen ua ; move ua + ul , 4 )  | ( pen 4 ; move ua + ul , 3 + ul )  | ( pen 4 ; move ua , 4 ; move 2 , 0 )  | ( pen ua ; move 3 , ua + 4 ; move 4 , 0 )  | ( pen ua ; move ul , 4 ; move ua , 0 - ua )  | ( ( pen ua ; move ua , 4 ) ; move ul , ua )  | ( pen 4 ; v0 = ul ; move v0 + ua , 4 )  | ( pen 4 ; v0 = ua + ul ; move v0 , 4 - ua )  | ( pen ua + ul ; v0 = ua + ul ; move v0 , 4 )  | ( pen 4 ; v0 = ua ; move v0 + ul , v0 + 4 )  | ( pen 4 ; v0 = 2 * 2 ; move v0 + v0 , v0 )  
[292] ( move 2 , 0 ; move ua , 2 )  | ( move 2 , ua ; move ua , 2 )  | ( move 3 - ul , 0 ; move ua , 2 )  | ( move 2 , ua * 2 ; move ua , 2 )  | ( move 2 , ua + ua ; move ua , 2 )  | ( move ul + ul , 0 ; move ua , 2 )  | ( move 2 , ua ; move ua , ua + 2 )  | ( move 2 , 0 ; move ua , ul + ul )  | ( move 2 , ua ; move ua , 2 - ua )  | ( move ua / 3 , ua ; move ua , 2 )  | ( move ul + ul , ua ; move ua , 2 )  | ( move 2 , 0 ; move ua , 2 ; pen ua )  | ( move 2 , 0 ; move ua , 2 ; pen ul )  | ( move 2 , ua ; move ua , 2 ; pen ua )  | ( move 2 , ua ; move ua , 2 ; v0 = 0 )  | ( move 2 , 0 ; move ua , 2 ; v0 = ua )  | ( v0 = ua ; move 2 , ua ; move ua , 2 )  | ( move 3 - ul , ua ; move ua , 2 ; pen 3 )  | ( move 2 , 0 ; v0 = 2 ; move ua , v0 )  | ( move 2 , ua ; move ua , ul + ul ; pen ul )  | ( move 3 - ul , ua * 4 ; move ua , 4 - 2 )  | ( v0 = ua ; move 2 , v0 ; move v0 , 2 )  | ( move 2 , ua ; move ua , 2 ; move 0 , ua * 2 )  | ( ( v0 = ul ; move 2 , ua ) ; move ua , 2 )  | ( ( move 2 , 0 ; move ua , ul + ul ) ; pen 4 )  | ( move 3 - ul , ua ; ( move ua , 2 ; pen ul ) )  | ( move ul , ua ; move ul , ua * 3 ; move ua , 2 )  | ( ( move 2 , 0 ; move ua , 2 ) ; move 0 , ua - ul )  | ( move ul + ul , 0 ; ( move ua , 2 ; move 0 , 4 ) )  | ( v0 = ul + ul ; move v0 , ua ; move ua , v0 )  | ( move 0 , ul ; ( move ul + ul , ua - ul ; move ua , 2 ) )  | ( ( move 2 , ua * 2 ; move ua , 2 ; v0 = 3 ) ; pen ul )  
[293] ( move ua , 0 ; move 2 , 2 )  | ( move ua , ua ; move 2 , 2 )  | ( move ua , ua * 2 ; move 2 , 2 )  | ( move ua , 0 ; move ul + ul , 2 )  | ( move ua , 0 ; move 2 , ul + ul )  | ( move ua , ua ; move 3 - ul , 2 )  | ( move ua , ua ; move 2 , ul + ul )  | ( move ua , ua ; move ul + ul , 2 )  | ( move ua , ua ; move 2 , 2 ; pen 3 )  | ( pen ul ; move ua , ua ; move 2 , 2 )  | ( move ua , ua ; move 3 - ul , ua + 2 )  | ( move ua , ua * 3 ; move ul + ul , 2 )  | ( move ua , 0 ; move 0 , ua ; move 2 , 2 )  | ( move ua , ua ; move 0 , 2 ; move 2 , ua )  | ( move ua , 0 ; v0 = 2 ; move v0 , v0 )  | ( ( move ua , 0 ; move 2 , 2 ) ; v0 = ua )  | ( move ua , ua ; v0 = 2 ; move v0 , v0 )  | ( move ua , 0 ; move ul + ul , 2 ; v0 = 2 )  | ( move ua , ua ; move 2 , 2 ; v0 = 3 - ua )  | ( ( move ua , ua ; move 0 , ul ) ; move 2 , ul )  | ( move ua , 0 ; ( move 2 , ul + ul ; pen ua ) )  | ( v0 = ul ; move ua , ua ; move ul + ul , 2 )  | ( move ua , ua ; ( move ul , 2 ; move ul , ua ) )  | ( move ua , ua ; move ul , ul + ul ; move ul , 0 )  | ( pen ul ; move ua , ua + ua ; move ul + ul , 2 )  | ( v0 = 2 ; ( move ua , 0 ; move v0 , v0 ) )  | ( move ua , ua ; v0 = 4 / 2 ; move v0 , v0 )  | ( move ul , ua ; move ua - ul , 0 ; move 2 , ul + ul )  | ( move ua , ua ; ( v0 = ul + ul ; move v0 , v0 ) )  | ( ( move ua , ua + ua ; move 2 , ul + ul ) ; pen 2 - 3 )  | ( move ua , 0 ; v0 = 3 * 2 ; move ul + ul , v0 - 4 )  
[294] ( pen 3 ; move 4 , 4 * 4 )  | ( pen 2 + ul ; move 0 - 4 , 2 / ua )  
[295] ( pen 4 ; move 4 , 3 / 4 )  | ( ( pen ua - 3 ; move 0 , 3 ) ; move 2 - ua , 4 )  
[296] ( move ua , 0 ; move 3 , 2 )  | ( move ua , ua ; move 3 , 2 )  | ( move ua , 0 ; move 3 , ua + 2 )  | ( move ua , 0 ; move 3 , 3 - ul )  | ( move ua , 0 ; move 3 , ul + ul )  | ( move ua , ua ; move 3 , 2 - ua )  | ( move ua , ua ; move 3 , 2 ; pen ul )  | ( move ua , 0 ; move 2 + ul , ua + 2 )  | ( move ua , ua * 2 ; move 3 , ua + 2 )  | ( move ua , ua * 4 ; move 2 + ul , 2 )  | ( move ua , ua * 4 ; move 3 , 3 - ul )  | ( move ua , ua ; move 0 , ul ; move 3 , ul )  | ( move ua , ua ; v0 = 3 ; move v0 , 2 )  | ( move ua , ua ; move 4 - ul , 2 ; v0 = ul )  | ( move ua , 0 ; v0 = ul ; move 3 , v0 + ul )  | ( v0 = 2 ; move ua , 0 ; move v0 + ul , v0 )  | ( move ua , ua ; ( v0 = ua * 4 ; move 3 , 2 ) )  | ( move ua , ua * 4 ; ( move 3 , 2 ; v0 = ul ) )  | ( move ua , 0 ; ( pen ul ; move 2 + ul , ul + ul ) )  
[297] ( move 3 , 0 ; move ua , 2 )  | ( move 3 , ua ; move ua , 2 )  | ( move 3 , 0 ; move ua , 4 / 2 )  | ( move 3 , 0 ; move ua , ua + 2 )  | ( move 3 , ua * 4 ; move ua , 2 )  | ( move 3 , ua ; move ua , 2 ; pen 0 )  | ( move 3 , 0 ; pen ul ; move ua , 2 )  | ( move 3 , ua * 4 ; move ua , ua + 2 )  | ( move 2 + ul , ua ; move ua , ua + 2 )  | ( move 2 , ua ; move ul , 0 ; move ua , 2 )  | ( move 3 , 0 ; v0 = ua ; move v0 , 2 )  | ( v0 = 3 ; move v0 , 0 ; move ua , 2 )  | ( pen ul ; move 3 , ua ; move ua , ua + 2 )  | ( move 3 , ua ; v0 = 2 ; move ua , v0 )  | ( move 3 , ua ; ( move ua , 2 ; v0 = 0 ) )  | ( move 3 , 0 ; v0 = ua ; move ua , ua + 2 )  | ( move 4 - ul , ua ; move ua , 2 ; v0 = ua )  | ( v0 = 3 ; move 3 , v0 - 3 ; move ua , 2 )  | ( move ul , 0 ; move 2 , ua ; move ua , ul + ul )  | ( move 3 , ua * 2 ; v0 = ua ; move v0 , 2 )  | ( move 2 + ul , ua ; pen ul ; move ua , ul + ul )  | ( ( move 3 , 0 ; move ua , 2 - ua ) ; v0 = 4 )  | ( move 3 , ua + ua ; move ua , ul + ul ; pen 2 + ul )  | ( move 3 , ua ; move 0 , ul ; ( move ua , ul ; pen ul ) )  | ( move 3 , ua * 2 ; v0 = 4 / 2 ; move ua , ua + v0 )  
[298] ( move 2 , 0 ; move ua , 3 )  | ( move 2 , ua ; move ua , 3 )  | ( move 2 , 0 ; move ua , 3 - ua )  | ( move 2 , 0 ; move ua , 4 - ul )  | ( move 2 , ua * 3 ; move ua , 3 )  | ( move ul + ul , 0 ; move ua , 3 )  | ( move 2 , ua ; move ua , ua + 3 )  | ( move 2 , ua ; move ua , 3 - ua )  | ( move 2 , 0 ; move ua , 3 ; pen 3 )  | ( move 3 - ul , 0 ; move ua , ua + 3 )  | ( move ul + ul , 0 ; move ua , 4 - ul )  | ( move ul + ul , ua ; move ua , 3 - ua )  | ( move 2 , 0 ; v0 = ua ; move ua , 3 )  | ( move 3 - ul , 0 ; move ua , 3 ; pen 2 )  | ( move 4 / 2 , 0 ; move ua , 3 ; pen ua )  | ( move ua / 3 , 0 ; move ua , 3 ; pen 4 )  | ( move 2 , ua ; move ua , 4 - ul ; pen 0 )  | ( move 2 , ua * 2 ; move ua , 3 ; pen ua )  | ( move 2 , ua ; ( pen ul ; move ua , 3 ) )  | ( move 2 , ua ; v0 = 3 ; move ua , v0 )  | ( ( move 2 , 0 ; move ua , 3 ) ; pen 2 - ul )  | ( move 2 , ua ; move ua , 3 ; move 0 , ul + ul )  | ( move 3 - ul , ua ; ( v0 = 4 ; move ua , 3 ) )  
[299] ( move 2 , 0 ; move 2 , ul )  | ( move 2 , ua ; move 2 , ul )  | ( move 2 , 0 - ua ; move 2 , ul )  | ( move 2 , ua ; move 2 , 2 - ul )  | ( move 2 , ua ; move 2 , ua + ul )  | ( move 2 , ua ; move 3 - ul , ul )  | ( move 2 , ua ; move ul + ul , ul )  | ( move 2 , 0 ; pen ul ; move 2 , ul )  | ( move 2 , 0 ; move 3 - ul , ua + ul )  | ( move 2 , ua ; move ul + ul , 3 - 2 )  | ( move 3 - ul , 0 ; move ul + ul , ul )  | ( move 3 - ul , ua + ua ; move 2 , ul )  | ( v0 = ua ; move 2 , 0 ; move 2 , ul )  | ( ( move 2 , 0 ; move 2 , ul ) ; pen ua )  | ( move ul + ul , ua ; move ul + ul , ul )  | ( move ul , 0 ; move ul , 0 ; move 2 , ul )  | ( move 2 , ua ; move 2 , ul ; v0 = ul )  | ( move ul + ul , ua ; move 2 , ul ; pen 3 )  | ( v0 = 2 ; move v0 , ua ; move v0 , ul )  | ( move 2 , ua ; move 2 , ul ; v0 = ua + 3 )  | ( move 2 , 0 ; move 4 / 2 , ul ; pen ua + ul )  | ( move ul + ul , ua ; move 2 , ul ; v0 = 0 )  | ( move 2 , ua * 2 ; move ul , ul ; move ul , ua )  | ( move ul + ul , 0 ; move 2 , ul ; pen ul + ul )  | ( move ul , ua ; move ul , ua ; move 2 , ua + ul )  | ( ( v0 = 2 ; move v0 , 0 ) ; move v0 , ul )  | ( v0 = 2 ; ( move v0 , ua ; move v0 , ul ) )  | ( move ul , 0 ; ( move ul , ua * 2 ; move 2 , ul ) )  | ( move 2 , ua + ua ; move ul + ul , ul ; move 0 , 0 )  | ( move 2 , ua * 4 ; move ul , ul ; move ul , 0 - ua )  | ( move ul + ul , ua * 3 ; ( move ul , ul ; move ul , 0 ) )  
[300] ( move ua , 0 ; move 2 , 3 )  | ( move ua , ua ; move 2 , 3 )  | ( move ua , 0 ; move 2 , 2 + ul )  | ( move ua , 0 ; move 2 , ua + 3 )  | ( move ua , ua ; move 4 - 2 , 3 )  | ( move ua , ua ; move 2 , 2 + ul )  | ( move ua , ua ; move 2 , 4 - ul )  | ( move ua , ua ; move ua / 3 , 3 )  | ( move ua , ua ; move ul + ul , 3 )  | ( move ua , 0 ; move 2 , 3 ; pen ua )  | ( move ua , ua ; pen ul ; move 2 , 3 )  | ( move ua , 0 ; move 0 , 3 ; move 2 , ua )  | ( move ua , 0 ; pen ul ; move 2 , 2 + ul )  | ( pen ul ; ( move ua , ua ; move 2 , 3 ) )  | ( move ua , ua ; ( pen ul ; move 2 , 3 ) )  | ( move ua , 0 ; v0 = 2 ; move v0 , 3 )  | ( v0 = ua ; move v0 , v0 ; move 2 , 3 )  | ( v0 = ul ; move ua , 0 ; move 2 , ua + 3 )  | ( move ua , ua ; move 2 , 4 - ul ; move 0 , ul )  | ( move ua , ua ; ( pen ul ; move 2 , 3 - ua ) )  | ( move ua , ua ; v0 = 4 / 2 ; move v0 , 3 )  | ( move ua , ua ; v0 = 2 ; move v0 , ul + v0 )  | ( move ua , ua ; v0 = ul ; move v0 + v0 , 3 )  | ( move ua , ua ; move ul + ul , ua + 3 ; v0 = 2 )  | ( move ua , ua ; ( move 0 , ul ; move ul + ul , 2 ) )  | ( v0 = ua ; move v0 , v0 ; move v0 / 3 , 3 )  | ( move ua , ua ; move 2 , 3 ; ( pen 2 ; v0 = ul / 2 ) )  
[301] ( move ul , 0 ; move 3 , 2 )  | ( move ul , ua ; move 3 , 2 )  | ( move ul , 0 ; move 2 + ul , 2 )  | ( move ul , ua ; move 3 , ua + 2 )  | ( move ul , ua ; move 2 + ul , 2 )  | ( move ul , ua + ua ; move 3 , 2 )  | ( move ul , 0 ; move 3 , ul + ul )  | ( move ul , ua ; move 3 , ul + ul )  | ( move ul , ua ; move 3 , 2 ; pen 3 )  | ( pen ul ; move ul , ua ; move 3 , 2 )  | ( move ul , 0 ; move 2 + ul , 2 - ua )  | ( move ul , 0 ; move 3 , 2 ; v0 = ua )  | ( move ul , ua ; move 3 , 2 ; v0 = 0 )  | ( move ul , 0 ; move 2 + ul , 2 ; pen 0 )  | ( move ul , 0 ; move 3 , ul + ul ; pen 4 )  | ( move ul , ua ; v0 = 3 ; move v0 , 2 )  | ( v0 = 3 ; move ul , ua ; move v0 , 2 )  | ( move ul , 0 ; move 3 , ul + ul ; v0 = 3 )  | ( move ul , ua ; move 3 , 2 - ua ; pen ul / 4 )  | ( move ul , ua * 3 ; pen ul ; move 4 - ul , 2 )  | ( pen 0 ; ( pen ul ; move ul , 0 ; move 3 , 2 ) )  | ( move ul , 0 ; ( move 2 , 2 - ua ; move ul , 0 ) )  | ( move ul , ua * 4 ; move 2 + ul , 2 ; v0 = 0 )  | ( move ul , ua ; move 3 , 3 - ul ; v0 = ul - 2 )  | ( move ul , 0 ; ( move 4 - ul , ul + ul ; pen ul ) )  | ( pen ul ; ( move ul , 0 ; move 3 , 2 ; move 0 , ul ) )  | ( move ul , ua + ua ; v0 = ul ; move 3 , v0 + v0 )  
[302] ( move 4 , 0 ; move ua , 2 )  | ( move 4 , ua ; move ua , 2 )  | ( move 3 + ul , 0 ; move ua , 2 )  | ( move 4 , 0 ; move ua , 3 - ul )  | ( move 4 , ua ; move ua , ua + 2 )  | ( move 4 , 0 ; move ua , ul + ul )  | ( move 4 , 0 ; move ua , 2 ; pen 0 )  | ( pen ul ; move 4 , 0 ; move ua , 2 )  | ( move 4 , 0 ; move ua , 2 ; pen ul )  | ( move 2 + 2 , ua ; move ua , ul + ul )  | ( move 2 * 2 , ua ; move ua , ul + ul )  | ( v0 = ul ; move 4 , 0 ; move ua , 2 )  | ( move 4 , 0 ; ( move ua , 2 ; pen ul ) )  | ( v0 = 0 ; move 4 , v0 ; move ua , 2 )  | ( ( move 3 , 0 ; move ul , ua ) ; move ua , 2 )  | ( move 4 , 0 ; ( move 0 , ul ; move ua , ul ) )  | ( move 4 , ua ; move ua , 2 - ua ; v0 = ul )  | ( move 4 , ua ; v0 = ua + 2 ; move ua , v0 )  | ( v0 = ul + ul ; move 4 , ua ; move ua , v0 )  | ( move 4 , ua ; move ua , ul + ul ; move 0 , ul - 3 )  | ( ( move 4 , ua ; ( pen ul ; move ua , ua + 2 ) ) ; pen 4 )  
[303] ( move 3 , 0 ; move 2 , ul )  | ( move 3 , ua ; move 2 , ul )  | ( move 3 , 0 ; move 2 , ua + ul )  | ( move 3 , ua ; move 2 , ua + ul )  | ( move 2 + ul , ua ; move 2 , ul )  | ( move 3 , 0 ; move ul + ul , ul )  | ( move 4 - ul , ua ; move 2 , ul )  | ( move 3 , ua ; move ul + ul , ul )  | ( move 3 , ua ; move 2 , ul ; pen ul )  | ( move 2 + ul , ua * 3 ; move 2 , ul )  | ( move 2 + ul , ua ; move 2 , ul - ua )  | ( move 2 + ul , ua ; move 3 - ul , ul )  | ( move 3 , 0 ; move 2 , ul ; pen 0 - ua )  | ( move 3 , ua ; move 2 , ul ; v0 = ua )  | ( move 3 , 0 ; v0 = 2 ; move v0 , ul )  | ( move 2 + ul , 0 ; move ul + ul , ul - ua )  | ( move 3 , 0 ; move 2 , ul ; move ul / ua , 2 )  | ( move 3 , ua ; v0 = 2 / ua ; move 2 , ul )  | ( move 3 , ua ; move ul + ul , 3 - 2 ; pen 0 )  | ( move 3 , ua * 4 ; move 2 , 2 - ul ; pen ul )  | ( move 3 , ua ; move 2 , ul ; v0 = ul + ul )  | ( move 3 , 0 ; move ul , ua + ul ; move ul , ua )  | ( move 3 , ua ; v0 = ul ; move ul + ul , v0 )  | ( move 3 , 0 ; v0 = ul ; move ul + v0 , v0 )  | ( ( move 3 , 0 ; move ul + ul , ul ) ; move 0 , 3 )  | ( ( pen ul ; move 3 , 0 ) ; v0 = 2 ; move v0 , ul )  | ( ( move 3 , ua ; move ul + ul , ul ) ; v0 = ua + 4 )  | ( ( move 3 , 0 ; move 2 , ul ; v0 = 4 ) ; v1 = ul )  | ( move 3 , ua * 3 ; move ul + ul , ua + ul ; move 0 , ul )  | ( ( move 2 , 0 ; move ul , ua ; move 2 , ul ) ; move 0 , ul )  | ( move 3 , ua ; ( move 0 , ul ; move 2 , ua ; v0 = ul ) )  
[304] ( move 2 , 0 ; move ua , 4 )  | ( move 2 , ua ; move ua , 4 )  | ( move 2 , ua ; move ua , 2 + 2 )  | ( move 2 , ua ; move ua , 2 * 2 )  | ( move ul + ul , 0 ; move ua , 4 )  | ( move 2 , ua ; move ua , 3 + ul )  | ( move ul + ul , ua ; move ua , 4 )  | ( move 2 , 0 ; pen ul ; move ua , 4 )  | ( move ua / 3 , ua * 2 ; move ua , 4 )  | ( move 2 , 0 ; move ua , 4 ; move 0 , 2 )  | ( move ul + ul , ua ; move ua , 4 - ua )  | ( move 2 , 0 ; move ul / ua , ua ; move ua , 4 )  | ( move ul + ul , 0 ; move ua , 4 ; v0 = ua )  | ( move ul + ul , 0 ; move ua , 3 + ul ; pen 2 )  | ( move 2 , ua ; move ua , ua + 4 ; pen ul - ua )  | ( ( move 2 , ua ; move ua , 4 ) ; v0 = ua * ua )  | ( ( move 2 , ua ; move ua , 4 - ua ) ; pen ul / 2 )  | ( ( move 2 , ua ; move ua , 4 ; pen 2 ) ; move 0 , ua )  | ( pen ul ; move 2 , ua ; ( v0 = ul - 3 ; move ua , 4 ) )  
[305] ( move 3 , 0 ; move ul , 2 )  | ( move 3 , ua ; move ul , 2 )  | ( move 3 , 0 ; move ul , 4 / 2 )  | ( move 3 , 0 ; move ul , ua + 2 )  | ( move 2 + ul , 0 ; move ul , 2 )  | ( move 3 , 0 ; move ul , 3 - ul )  | ( move 4 - ul , 0 ; move ul , 2 )  | ( move 3 , ua * 3 ; move ul , 2 )  | ( move 3 , 0 ; move ul , ul + ul )  | ( move 3 , ua ; move ul , ua / 3 )  | ( move 3 , ua ; move 2 - ul , ua + 2 )  | ( move 4 - ul , ua * 2 ; move ul , 2 )  | ( move 3 , ua * 3 ; move ul , ul + ul )  | ( move 3 , ua ; move ul , 2 ; v0 = ul )  | ( move 2 + ul , 0 ; move ul , 2 ; pen ul )  | ( move 3 , ua + ua ; move ul , 2 ; pen 4 )  | ( move 2 + ul , ua ; v0 = 0 ; move ul , 2 )  | ( move 4 - 3 , ua ; move 2 , ua ; move ul , 2 )  | ( move 2 , 0 ; ( move ul , ua ; move ul , 2 ) )  | ( move 3 , 0 ; move 0 , ul ; move ul , ua + ul )  | ( move 2 , 0 ; move ul , ua ; move ul , ua + 2 )  | ( move 3 , ua ; move ul , ua + 2 ; v0 = ua )  | ( move 3 , ua * 2 ; pen ul ; move ul , ul + ul )  | ( move 3 , ua ; v0 = 2 - ua ; move ul , v0 )  | ( move 3 , 0 ; v0 = ul ; move v0 , v0 + ul )  | ( ( move 3 , ua * 3 ; move ul , 2 ) ; v0 = ul )  | ( move 4 - ul , 0 ; move ul , ul + ul ; pen 3 + 2 )  | ( pen 2 - ul ; ( move 2 + ul , ua ; move ul , 2 ) )  | ( move 2 , ua * 2 ; move ul , ua ; move ul , ua + 2 )  | ( move 3 , 0 ; ( move ul , 2 ; move 0 , ua ; pen ul ) )  | ( move 2 + ul , ua ; v0 = ul ; move v0 , 2 * v0 )  | ( ( move ul , 0 - ua ; move 2 , ua ) ; move ul , 3 - ul )  
[306] ( move 2 , 2 ; move ua , 2 )  | ( move 2 , ul + ul ; move ua , 2 )  | ( move 2 , 2 ; move ua , ul + ul )  | ( move 2 , 2 ; move ua , 2 ; pen ua )  | ( move 3 - ul , ul + ul ; move ua , ua + 2 )  | ( move 2 , 2 ; move ua , ua + 2 ; v0 = ul )  | ( ( move ul , 2 ; move ul , ua ) ; move ua , 2 )  | ( move 0 , ul ; move 2 , ul ; move ua , ul + ul )  | ( v0 = 2 ; move v0 , v0 ; move ua , v0 )  | ( move 2 , 2 ; move ua , ul + ul ; v0 = ua - ul )  | ( ( v0 = 2 ; move v0 , v0 ) ; move ua , v0 )  | ( ( move 2 , 2 ; move ua , 2 ) ; pen ul ; move 0 , 4 )  | ( ( v0 = 3 - ul ; move v0 , v0 ) ; move ua , v0 )  | ( v0 = ul + ul ; move v0 , v0 - ua ; move ua , v0 )  
[307] ( move 3 , 0 ; move ua , 3 )  | ( move 3 , ua ; move ua , 3 )  | ( move 2 + ul , 0 ; move ua , 3 )  | ( move 3 , 0 ; move ua , 3 - ua )  | ( move 3 , 0 ; move ua , 4 - ul )  | ( move 3 , ua * 2 ; move ua , 3 )  | ( move 2 + ul , ua ; move ua , 3 )  | ( move 3 , ua ; move ua , 4 - ul )  | ( move 3 , ua * 2 ; move ua , 3 - ua )  | ( move 3 , 0 ; move 0 , 0 ; move ua , 3 )  | ( move ua / 2 , ua ; move ua , 2 + ul )  | ( move 3 , 0 ; move ua , 3 ; move 0 , 2 )  | ( move 3 , 0 ; move ua , 3 ; v0 = 2 )  | ( move 3 , 0 ; ( pen ul ; move ua , 3 ) )  | ( pen ul ; move 3 , 0 ; move ua , 2 + ul )  | ( move ul - 4 , ua / 2 ; move 0 - ua , 3 )  | ( move 3 , 0 ; ( move ua , 3 ; v0 = ul ) )  | ( v0 = 3 ; move v0 , ua ; move ua , v0 )  | ( move 3 , ua ; move ua , ua + 3 ; v0 = 4 )  | ( ( move 3 , ua ; move ua , 3 ) ; v0 = ua )  | ( ( move 3 , ua ; move ua , 3 ) ; v0 = ul )  | ( move 3 , ua ; v0 = ul ; move ua , 2 + v0 )  | ( v0 = 3 ; ( move v0 , ua ; move ua , v0 ) )  | ( ( move 3 , 0 ; move ua , 3 ) ; v0 = ua + ul )  
[308] ( move ua , 0 ; move 3 , 3 )  | ( move ua , ua ; move 3 , 3 )  | ( move ua , 0 ; move 2 + ul , 3 )  | ( move ua , 0 - ua ; move 3 , 3 )  | ( move ua , 0 ; move 3 , 4 - ul )  | ( move ua , ua * 2 ; move 3 , 3 )  | ( move ua , ua ; move 3 , ua + 3 )  | ( move ua , ua ; move 3 , 2 + ul )  | ( move ua , ua ; move ua - 3 , 3 )  | ( move ua , 0 ; move 3 , 3 ; pen ul )  | ( move ua , ua * 4 ; move 2 + ul , 3 )  | ( move ua , 0 ; move 3 , 3 ; pen ua / 2 )  | ( move ua , 0 ; pen ul ; move 3 , 2 + ul )  | ( ( move 0 , 0 ; move ua , 0 ) ; move 3 , 3 )  | ( v0 = ua ; move v0 , v0 ; move 3 , 3 )  | ( move ua , 0 ; move 3 , 3 ; v0 = ul / 2 )  | ( move ua , ua ; move 3 , 3 ; v0 = 4 * 3 )  | ( move ua , ua ; v0 = 3 ; move v0 , v0 )  | ( move ua , 0 ; move 4 - 2 , 3 ; move ul , ua )  | ( move ua , 0 ; move ul , 2 + ul ; move 2 , ua )  | ( v0 = ua ; ( move v0 , 0 ; move 3 , 3 ) )  | ( move ua , ua ; v0 = ua + 3 ; move 3 , v0 )  | ( v0 = ua ; move ua , v0 ; move 4 - ul , 3 )  | ( move ua , ua ; ( v0 = 3 ; move v0 , v0 ) )  | ( move ua , ua + ua ; v0 = 3 ; move v0 , v0 )  | ( move ua , ua ; v0 = 4 - ul ; move v0 , v0 )  | ( v0 = 2 ; ( move ua , ua ; move ul + v0 , 3 ) )  | ( move ua , 0 ; ( v0 = 2 + ul ; move v0 , v0 ) )  | ( ( move ua , 0 ; move 3 , 4 - ul ) ; v0 = 0 - ul )  
[309] ( move 2 , 0 ; move 3 , ul )  | ( move 2 , ua ; move 3 , ul )  | ( move 4 - 2 , 0 ; move 3 , ul )  | ( move 2 , 0 ; move 4 - ul , ul )  | ( move 2 , ua * 4 ; move 3 , ul )  | ( move 2 , ua ; move 2 + ul , ul )  | ( move 2 , ua + ua ; move 3 , ul )  | ( move 2 , ua ; move 3 , ua + ul )  | ( move ul + ul , 0 ; move 3 , ul )  | ( move ul + ul , ua ; move 3 , ul )  | ( move 3 - ul , ua ; move 2 + ul , ul )  | ( move ul + ul , ua * 3 ; move 3 , ul )  | ( move 2 , ua ; move 3 , ul ; v0 = 0 )  | ( move 2 , 0 ; move 3 , ul ; pen 0 - ua )  | ( move 2 , 0 ; move 3 , ul ; pen 4 - ua )  | ( move 2 , 0 ; move 2 , ul ; move ul , ua )  | ( move 2 , ua ; move 3 , ul ; pen 2 - ul )  | ( move 2 , 0 ; move 3 , ul ; move 0 , 2 - ua )  | ( pen 3 - 2 ; move 2 , ua ; move 2 + ul , ul )  | ( move ul + ul , 0 ; move 0 , ua ; move 3 , ul )  | ( move 2 , ua ; move 2 + ul , ul ; pen 4 - ua )  | ( move 2 , ua * 3 ; move 3 , ul ; pen ua + ua )  | ( move ul + ul , ua * 4 ; move 3 , ul ; pen 2 )  | ( move 2 , ua + ua ; ( pen ul ; move 3 , ul ) )  | ( move 2 , ua ; v0 = ul ; move 3 * v0 , ul )  | ( ( move 2 , 0 ; move 3 , ul ) ; v0 = ul - 3 )  | ( v0 = 2 - ul ; move 4 / 2 , ua ; move 3 , ul )  | ( move 2 , 0 ; ( move 2 , ul - ua ; move ul , ua ) )  | ( move ul + ul , ua ; move 3 , ua + ul ; pen 2 + ul )  | ( move ul , ua ; move ul , ua + ua ; move 3 , ua + ul )  | ( move ul , ua ; ( move ul , ua ; pen ul ) ; move 3 , ul )  | ( move ul + ul , ua ; ( move 3 , ul ; v0 = ul ; pen 2 ) )  
[310] ( move ua , 0 ; move 2 , 4 )  | ( move ua , ua ; move 2 , 4 )  | ( move ua , 0 ; move 3 - ul , 4 )  | ( move ua , ua ; move 4 - 2 , 4 )  | ( move ua , 0 ; move ul + ul , 4 )  | ( move ua , ua ; move ul + ul , 4 )  | ( move ua , 0 ; pen ul ; move 2 , 4 )  | ( move ua , ua ; move 2 , 4 ; pen ul )  | ( move ua , ua * 3 ; move 2 , ua + 4 )  | ( move ua , ua ; move 4 / 2 , ua + 4 )  | ( v0 = 2 ; move ua , ua ; move 2 , 4 )  | ( move ua , ua ; move 0 , ul ; move 2 , 3 )  | ( move ua , 0 ; v0 = 4 ; move 2 , v0 )  | ( move 0 , 0 ; move ua , ua ; move 2 , 3 + ul )  | ( move ua , ua ; move 2 , ua + 4 ; v0 = 2 )  | ( move ua , 0 ; move ul + ul , 4 ; v0 = 2 )  | ( move ua , ua ; move ul + ul , 4 ; v0 = ua )  | ( v0 = ua ; move v0 , v0 ; move 2 , 3 + ul )  | ( move ua , ua ; ( move 3 - ul , 4 ; v0 = 0 ) )  | ( move ua , 0 ; move ul + ul , 4 ; v0 = ua * 2 )  | ( v0 = ua ; move v0 , v0 ; move v0 / 3 , 4 )  | ( v0 = 2 ; move ua , ua ; move v0 , v0 + v0 )  
[311] ( move ua , 2 ; move 2 , 2 )  | ( move ua , 2 ; move 3 - ul , 2 )  | ( move ua , 2 ; move ul + ul , 2 )  | ( move ua , ul + ul ; move 4 - 2 , 2 )  | ( move 0 , ua ; move ua , 2 ; move 2 , 2 )  | ( ( move ua , ul + ul ; move 2 , 2 ) ; pen 3 )  | ( v0 = 0 ; move v0 + ua , 2 ; move 2 , 2 )  | ( move ua , ul + ul ; move 2 , 2 ; pen 3 / ua )  | ( v0 = 2 ; move ua , v0 ; move v0 , v0 )  | ( v0 = ul + ul ; move ua , v0 ; move v0 , v0 )  
[312] ( move ua , 0 ; move 4 , 2 )  | ( move ua , ua ; move 4 , 2 )  | ( move ua , 0 ; move 4 , 2 - ua )  | ( move ua , ua * 4 ; move 4 , 2 )  | ( move ua , ua ; move 3 + ul , 2 )  | ( move ua , ua + ua ; move 4 , 2 )  | ( move ua , ua ; move 4 , ua + 2 )  | ( move ua , ua ; move 4 , ul + ul )  | ( move ua , 0 ; move 0 , 2 ; move 4 , 0 )  | ( move ua , 0 ; move 0 , 0 ; move 4 , 2 )  | ( move ua , ua + ua ; move 4 , ua + 2 )  | ( move ua , 0 ; ( move 4 , 2 ; pen ua ) )  | ( move ua , ua ; move ul , 2 ; move 3 , 0 )  | ( move 0 , 0 ; move ua , 0 ; move 2 * 2 , 2 )  | ( move ua , 0 ; ( move 4 , 2 ; v0 = 0 ) )  | ( v0 = ua ; move v0 , v0 ; move 4 , 2 )  | ( move ua , 0 ; ( move 0 , ul ; move 4 , ul ) )  | ( move ua , ua ; move 4 , 4 / 2 ; v0 = ua )  | ( move ua , ua ; move 4 , 2 ; move 0 , ua + ul )  | ( move ua , ua * 2 ; move 0 , ul ; move 4 , ul )  | ( ( move ua , 0 ; move 4 , ul + ul ) ; v0 = 0 )  | ( ( move ua , ua ; move 4 , 2 ) ; v0 = 4 / ua )  | ( move ua , ua ; ( move 4 , 2 ; v0 = ua ) ; pen v0 )  | ( move ua , ua ; v0 = ul + ul ; move v0 + 2 , v0 )  
[313] ( move 2 , 2 ; move ua , 3 )  | ( move 2 , 4 - 2 ; move ua , 3 )  | ( move 2 , 2 ; move ua , 2 + ul )  | ( move ul + ul , 2 ; move ua , 3 )  | ( pen ul ; move 2 , 2 ; move ua , 3 )  | ( move 0 , 0 ; move 2 , 2 ; move ua , 3 )  | ( move 2 , 2 ; v0 = 3 ; move ua , 3 )  | ( move ul + ul , ul + ul ; move ua , 3 )  | ( move 2 , 2 ; ( pen ul ; move ua , 3 ) )  | ( v0 = 2 ; move v0 , 2 ; move ua , 3 )  | ( move ul , 2 ; move ul , 0 ; move ua , 2 + ul )  | ( move 2 , ul + ul ; move ua , 3 ; pen ua * 4 )  | ( move 2 , 4 - 2 ; move ua , 3 ; v0 = ul / ua )  | ( move ul , 0 - ul ; move 2 , 3 ; move ua , 2 + ul )  | ( ( move 0 , ua ; move 2 , 2 ; pen ul ) ; move ua , 3 )  
[314] ( move ul , 0 ; move 3 , 3 )  | ( move ul , ua ; move 3 , 3 )  | ( move ul , 0 ; move 3 , 2 + ul )  | ( move ul , ua * 3 ; move 3 , 3 )  | ( move ul , ua ; move 3 , 2 + ul )  | ( move ul , ua ; move 2 + ul , 3 )  | ( move ul , 0 ; move 3 , 3 ; pen ua )  | ( move ul , ua ; move 3 , 3 ; pen ul )  | ( move ul - 4 , 3 ; move ul + ul , 0 )  | ( ( move ul , 0 ; move 3 , 3 ) ; pen 0 )  | ( move ul , 0 ; move 3 , 3 ; pen 4 - ul )  | ( ( move ul , 0 ; pen ul ) ; move 3 , 3 )  | ( move ul , ua ; move 0 , ua ; move 3 , 3 )  | ( move ul , 0 ; v0 = 3 ; move 3 , v0 )  | ( move ul , ua ; v0 = 3 ; move 3 , v0 )  | ( v0 = 3 ; move ul , 0 ; move v0 , v0 )  | ( move ul , 0 ; move 3 , ua + 3 ; v0 = 2 )  | ( move ul , ua ; v0 = 3 ; move v0 , v0 )  | ( ( move ul , ua ; move 2 , 3 ) ; move ul , 0 )  | ( move ul , 0 ; v0 = 4 - ul ; move 3 , v0 )  | ( move ul , ua ; move 3 , 2 + ul ; pen ul + ul )  | ( move 0 - ul , 3 ; move 3 , ua * 2 ; v0 = 0 )  | ( move ul - 2 , 3 ; move ul , ua + ua ; move 2 , ua )  | ( move ul - 4 , 2 + ul ; move ul , ul / ua ; pen 3 )  | ( ( move ul , ua ; move 3 , 3 ) ; v0 = 2 ; pen 0 )  | ( v0 = ul + ul ; move ul , ua ; move 3 , v0 + ul )  | ( move ul , ua ; ( move 3 , 3 ; ( pen ua ; pen ua ) ) )  | ( ( move ul , 0 - ua ; v0 = 3 ) ; move v0 , v0 )  | ( v0 = 4 ; move ul , 0 ; move v0 - ul , v0 - ul )  | ( ( move ul , 0 ; pen ul ; v0 = 3 ) ; move v0 , v0 )  | ( v0 = 2 ; move ul , ua ; ( move 3 , 3 ; pen ua + ul ) )  
[315] ( move ua , 2 ; move 3 , 2 )  | ( move ua , 2 ; move 3 , ua + 2 )  | ( move ua , 3 - ul ; move 3 , 2 )  | ( move ua , ul + ul ; move 3 , 2 )  | ( move ua , 2 ; move 3 , 2 ; pen 0 )  | ( move 0 , ul + ul ; move ua , ua ; move 3 , 2 )  | ( v0 = ul + ul ; move ua , v0 ; move 3 , 2 )  | ( move ua , ua + 2 ; move 3 , 2 ; v0 = ua * 4 )  | ( move ua , 2 ; ( move 0 , 2 + ul ; move 3 , 0 - ul ) )  
[316] ( move ua , 3 ; move 2 , 2 )  | ( move ua , 2 + ul ; move 2 , 2 )  | ( move ua , 3 ; move 2 , ul + ul ; pen ul )  | ( move ua , 3 ; move 0 , 2 ; move 4 / 2 , 0 )  | ( move ua , ua + 3 ; move 3 - ul , ul + ul )  | ( pen ul / ua ; move ua , 3 ; move ul + ul , 2 )  | ( move ua , 4 - ul ; v0 = 2 ; move v0 , v0 )  | ( v0 = 2 ; move ua , ul + v0 ; move v0 , v0 )  | ( ( move ul / ua , ul ; move ua , 2 ) ; move 2 , 2 - ua )  
[317] ( move ul , 0 ; move 4 , 2 )  | ( move ul , ua ; move 4 , 2 )  | ( move ul , 0 ; move 4 , 3 - ul )  | ( move ul , 0 ; move 4 , ul + ul )  | ( move ul , ua ; move 4 , ua + 2 )  | ( move ul , ua ; move 4 , 2 - ua )  | ( move ul , ua ; move 4 , 3 - ul )  | ( move ul , ua ; move 4 , ul + ul )  | ( move ul , ua ; move 4 , 2 ; pen 0 )  | ( move ul , 0 ; move 4 , 2 ; pen ul )  | ( move 3 - 2 , 0 ; move 4 , ul + ul )  | ( move ul , ua + ua ; move 4 , ul + ul )  | ( move ul , ua ; move 4 , 2 ; v0 = ul )  | ( move ul , ua ; pen ul ; move 4 , 4 / 2 )  | ( move ul , ua ; move 0 , ul ; move 4 , ul )  | ( move ul , ua ; pen ul ; move 3 + ul , 2 )  | ( move ul , 0 ; move 0 , 0 ; move 4 , ul + ul )  | ( ( move ul , ua ; move 4 , 4 - 2 ) ; pen 4 )  | ( ( move ul , 0 ; move 4 , 2 ) ; pen ua + ul )  | ( move ul , 0 ; move 0 , ul ; move 3 + ul , ul )  | ( move 0 , ua ; move ul , ua ; move 4 , 3 - ul )  | ( move ul , ua ; move 4 , 2 ; move 4 - ua , ua )  | ( ( move ul , 0 ; pen ul ) ; move 4 , ul + ul )  | ( move ul , ua * 3 ; v0 = 2 ; move 4 , v0 )  | ( move ul , ua ; v0 = 3 + ul ; move v0 , 2 )  | ( ( move ul , ua ; move 4 , 2 ; pen ul ) ; pen ul )  | ( move ul , ua ; move 3 + ul , 2 - ua ; v0 = ua )  | ( pen ul ; ( move ul , ua ; move 2 * 2 , ul + ul ) )  | ( move ul , 0 ; move 4 , 2 ; ( pen 2 ; pen ul + ul ) )  | ( ( move ul , ua ; pen ul ; move 4 , 2 ) ; pen ul - 4 )  | ( v0 = ul + ul ; move ul , ua ; move v0 + v0 , v0 )  
[318] ( move 3 , 2 ; move ua , 2 )  | ( move 3 , ua + 2 ; move ua , 2 )  | ( move 3 , 2 ; move ua , 2 - ua )  | ( move 4 - ul , 2 ; move ua , 2 )  | ( move 3 , 4 - 2 ; move ua , ul + ul )  | ( move 3 , ul + ul ; move ua , ua + 2 )  | ( move 4 - ul , 2 - ua ; move ua , 2 - ua )  | ( v0 = 2 ; move 3 , v0 ; move ua , v0 )  | ( move 3 , ul + ul ; move ua , 2 ; v0 = 4 )  | ( move 3 , 3 - ul ; v0 = ul ; move ua , 2 )  
[319] ( move 3 , 0 ; move 3 , ul )  | ( move 3 , ua ; move 3 , ul )  | ( move 3 , 0 ; move 2 + ul , ul )  | ( move 3 , 0 ; move 3 , ul - ua )  | ( move 3 , ua * 3 ; move 3 , ul )  | ( move 3 , ua * 4 ; move 3 , ul )  | ( move 2 + ul , ua ; move 3 , ul )  | ( move 3 , ua ; move 2 + ul , ul )  | ( move 3 , ua ; move ua / 2 , ul )  | ( move 3 , 0 ; move 3 , ul ; pen 2 )  | ( move 3 , ua ; move 3 , ul ; pen 3 )  | ( move 3 , ua ; move 3 , ul ; pen ul )  | ( move 2 + ul , 0 ; move 3 , ul - ua )  | ( move 3 , 0 ; move 3 , ul ; v0 = ua )  | ( move 3 , ua ; v0 = 3 ; move 3 , ul )  | ( move 3 , ua ; move 3 , ul ; v0 = ul )  | ( move 3 , ua ; move 3 , ul - ua ; pen 0 )  | ( pen ul ; move 3 , 0 ; move 4 - ul , ul )  | ( pen 2 - ul ; move 3 , ua ; move 3 , ul )  | ( move 3 , ua ; v0 = ul ; move 3 , v0 )  | ( v0 = 3 ; move v0 , 0 ; move v0 , ul )  | ( v0 = 3 ; move v0 , ua ; move v0 , ul )  | ( move 3 , ua ; move 0 , ua * 2 ; move 3 , ul )  | ( move 3 , ua ; ( move 0 , ua ; move 3 , ul ) )  | ( move 3 , ua ; v0 = ua + ul ; move 3 , ul )  | ( move 3 , 0 ; move 3 , ul - ua ; pen ua + ul )  | ( v0 = 0 ; move 3 , v0 ; move 4 - ul , ul )  | ( move 3 , ua ; move ul + ul , ul ; move ul , ua )  | ( v0 = ul ; move 3 , v0 * ua ; move 3 , v0 )  | ( move 3 , ua + ua ; move 3 - ul , ul ; move ul , 0 )  | ( move ul , ua ; move 4 / 2 , ua ; move 2 + ul , ul )  | ( move 4 - ul , ua + ua ; move 3 , ul ; move v0 , 3 )  
[320] ( move 4 , 0 ; move ul , 2 )  | ( move 4 , ua ; move ul , 2 )  | ( move 3 + ul , 0 ; move ul , 2 )  | ( move 4 , ua ; move 2 - ul , 2 )  | ( move 4 , 0 ; move ul , 3 - ul )  | ( move 4 , ua * 2 ; move ul , 2 )  | ( move 4 , 0 ; move ul , ul + ul )  | ( move 3 + ul , ua ; move ul , 2 )  | ( move 4 , ua ; move ul , ul + ul )  | ( move 4 , ua ; move ul , 2 ; pen ua )  | ( move 4 , ua * 4 ; move ul , 4 - 2 )  | ( move 3 + ul , 0 ; move ul , ua + 2 )  | ( move 4 , 0 ; move 0 , 0 ; move ul , 2 )  | ( move 4 , ua * 4 ; move ul , ul + ul )  | ( move 4 , 0 ; move ul , 2 ; v0 = ul )  | ( move 4 , ua ; v0 = 2 ; move ul , 2 )  | ( move 4 , ua ; move ul , 2 ; v0 = 4 )  | ( move 4 , ua * 3 ; move ul , 2 ; pen ua )  | ( move 4 , ua ; ( move ul , 2 ; pen ul ) )  | ( move 3 , ua ; move ul , ua ; move ul , 2 )  | ( move 4 , ua ; v0 = ul ; move v0 , 2 )  | ( ( move 4 , ua ; move ul , 4 - 2 ) ; pen 0 )  | ( move 4 , 0 ; v0 = ul + ul ; move ul , v0 )  | ( v0 = 2 ; move v0 * 2 , ua ; move ul , v0 )  | ( ( move 4 , ua ; move ul , 2 ) ; v0 = 2 - ul )  | ( move 4 , ua ; v0 = ul ; move ul , v0 + v0 )  | ( ( move 2 * 2 , ua ; move ul , 2 ) ; pen ul ; pen 3 )  | ( ( move 4 , 0 ; move ul , 2 ) ; v0 = 2 ; v1 = ul )  | ( move 4 , ua ; ( ( move 0 , ul ; pen ul ) ; move ul , ul ) )  
[321] ( move ua , 0 ; move 4 , 3 )  | ( move ua , ua ; move 4 , 3 )  | ( move ua , 0 ; move 3 + ul , 3 )  | ( move ua , ua ; move 2 + 2 , 3 )  | ( move ua , ua * 4 ; move 4 , 3 )  | ( move ua , ua ; move 4 , 2 + ul )  | ( move ua , ua + ua ; move 4 , 3 )  | ( pen ul ; move ua , 0 ; move 4 , 3 )  | ( move ua , ua ; move 4 , 3 ; pen 3 )  | ( move ua , ua ; move 4 , 3 ; v0 = 0 )  | ( move ua , ua * 2 ; pen ul ; move 4 , 3 )  | ( move ua , ua ; move 3 , 3 ; move ul , ua )  | ( move ua , ua * 3 ; move 0 , 0 ; move 4 , 3 )  | ( move ua , ua ; move 3 + ul , 3 ; v0 = ul )  | ( move ua , ua ; move 4 , 3 - ua ; pen ul / 3 )  | ( ( move ua , ua ; v0 = 3 ) ; move 4 , v0 )  | ( move ua , ua ; move 3 + ul , 3 ; move 0 , ua + 4 )  | ( move ua , ua ; v0 = ua * 4 ; move 4 , 3 - ua )  | ( move ua , ua ; ( move 4 , 3 ; v0 = ul + ul ) )  | ( move ua , ua * 4 ; ( move 4 , ua + 3 ; v0 = 0 ) )  | ( ( move ua , 0 ; v0 = ul ; move 4 , 3 ) ; v1 = ul )  
[322] ( move 4 , 0 ; move 2 , ul )  | ( move 4 , ua ; move 2 , ul )  | ( move 2 + 2 , ua ; move 2 , ul )  | ( move 4 , ua * 2 ; move 2 , ul )  | ( move 4 , ua * 4 ; move 2 , ul )  | ( move 4 , 0 ; move ul + ul , ul )  | ( move 4 , ua ; move 2 , ul - ua )  | ( move 4 , ua ; move ul + ul , ul )  | ( move 2 * 2 , ua ; move ul + ul , ul )  | ( move 4 , ua ; move ul + ul , ul - ua )  | ( move 3 + ul , 0 ; move 2 , ul ; pen 2 )  | ( move 4 , 0 ; v0 = ul ; move 2 , v0 )  | ( move 4 , 0 ; pen ul ; move ul + ul , ul )  | ( move 3 + ul , ua ; move 2 , ul ; move 0 , 0 )  | ( ( move 4 , 0 ; move ul + ul , ul ) ; pen 0 )  | ( ( move 3 + ul , ua ; pen ul ) ; move 2 , ul )  | ( move 4 , 0 ; v0 = ul ; move ul + ul , v0 )  | ( v0 = ul ; move 4 * v0 , 0 ; move 2 , v0 )  | ( move 2 * 2 , ua * 4 ; move 2 , ul ; v0 = ua )  | ( ( move 4 , ua ; v0 = ul / 2 ) ; move 2 , ul )  | ( move 3 + ul , ua ; ( move 2 , ul ; move 0 , ul ) )  | ( v0 = ul - 4 ; move 4 , 0 ; move ul + ul , ul )  | ( pen ul / 2 ; move 4 , ua ; move 3 - ul , ua + ul )  | ( move 4 , 0 ; move 2 , ul ; ( move 0 , ul ; pen 3 ) )  | ( ( move 4 , 0 ; move 2 , ul ) ; ( pen ul ; pen 3 ) )  | ( move 3 + ul , ua + ua ; v0 = 2 ; move v0 , ul )  | ( move 4 , 0 ; ( move 2 , ul ; pen 3 + ul ) ; pen ul )  | ( move 4 , 0 ; ( move 2 , ul ; v0 = ul ; pen v0 ) )  | ( ( move 4 , ua ; move 2 , ul ) ; ( pen 2 / ua ; pen ul ) )  | ( ( move 4 , ua + ua ; move 2 , ul ) ; pen ul ; pen ul / ua )  | ( ( move 4 , ua ; move ul , ua + ul ) ; move ul , ua ; pen ul )  
[323] ( move 3 , 0 ; move ua , 4 )  | ( move 3 , ua ; move ua , 4 )  | ( move 4 , ua ; move ua , 4 )  | ( move 2 + ul , 0 ; move ua , 4 )  | ( move 3 , 0 ; move ua , ua + 4 )  | ( move 3 , 0 ; move ua , 4 - ua )  | ( move 3 , ua ; move ua , ua + 4 )  | ( move 3 , ua + ua ; move ua , 4 )  | ( move 2 + ul , ua ; move ua , 4 )  | ( move 3 , ua * 3 ; move ua , 3 + ul )  | ( move 4 - ul , ua ; move ua , ua + 4 )  | ( move 3 , ua ; move ua , 4 ; v0 = ua )  | ( pen ul ; move 3 , 0 ; move ua , 4 - ua )  | ( move 3 , ua ; v0 = 4 ; move ua , v0 )  | ( move 3 , ua * 3 ; move ua , 4 ; v0 = 3 )  | ( move 3 , 0 ; move 0 , 3 ; move ua , ua + ul )  | ( move 3 , ua * 3 ; ( move ua , 4 ; pen 2 ) )  | ( move 3 , ua * 4 ; move ua , 4 ; v0 = ua )  | ( move 3 , ua ; pen 2 - ul ; move ua , 3 + ul )  | ( move 4 , ua * 4 ; v0 = ua ; move v0 , 4 )  | ( ( move 3 , ua ; v0 = ua ) ; move v0 , 4 - ua )  | ( move 3 , ua ; ( move ua , 4 ; pen ul ; v0 = ua ) )  
[324] ( move ua , 0 ; move 3 , 4 )  | ( move ua , ua ; move 3 , 4 )  | ( move ua , 0 ; move 3 , ua + 4 )  | ( move ua , 0 ; move 4 - ul , 4 )  | ( move ua , ua * 4 ; move 3 , 4 )  | ( move ua , ua ; move 2 + ul , 4 )  | ( move ua , ua ; move 3 , ua + 4 )  | ( move ua , ua ; move 3 , 3 + ul )  | ( move ua , 0 ; move 3 , 4 ; move 0 , ul )  | ( move ua , ua ; move 3 , 4 ; v0 = 4 )  | ( move ua , ua ; move ul , 4 ; move 2 , 0 )  | ( move ua , 0 ; move 2 , 4 ; move ul , ua )  | ( v0 = 3 ; move ua , 0 ; move v0 , 4 )  | ( move ua , ua ; v0 = 3 ; move v0 , 4 )  | ( move ua , 0 ; move 3 , 2 * 2 ; v0 = 2 )  | ( move ua , ua + ua ; move 0 , 4 ; move 3 , 0 )  | ( move ua , ua ; move 2 + ul , 3 + ul ; pen ul )  | ( move ua , 0 ; move 3 , 3 + ul ; move 0 , 2 / 3 )  | ( move ua , 0 ; move 3 , 4 - ua ; v0 = ua / 2 )  | ( move ua , ua ; move 2 + ul , 3 + ul ; v0 = ul - 3 )  | ( move ua , 0 ; ( move 3 , 4 ; move 0 , 4 ; v0 = ul ) )  | ( ( move ua , 0 ; move 3 , ua + 4 ; v0 = ul ) ; pen ul )  
[325] ( move 4 , 0 ; move ua , 3 )  | ( move 4 , ua ; move ua , 3 )  | ( move 4 , 0 ; move ua , ua + 3 )  | ( move 4 , 0 ; move ua , 3 - ua )  | ( move 3 + ul , ua ; move ua , 3 )  | ( move 4 , ua + ua ; move ua , 3 )  | ( move 4 , ua ; move ua , 2 + ul )  | ( move 4 , 0 ; move ua , 3 ; pen ua )  | ( move 0 , ua ; move 4 , 0 ; move ua , 3 )  | ( v0 = ua ; move 4 , v0 ; move v0 , 3 )  | ( move 4 , 0 ; move 0 , ua ; move ua , 4 - ul )  | ( move 4 , 0 ; move ua , 2 + ul ; v0 = ua )  | ( ( move 2 , ua ; move 2 , ua ) ; move ua , 3 )  | ( move 3 + ul , 0 ; move ua , 3 ; pen ul / 3 )  | ( move 4 , 0 ; ( pen ul ; move ua , 3 - ua ) )  | ( v0 = ua ; move 2 + 2 , 0 ; move v0 , 3 )  | ( move 4 , ua ; v0 = 0 ; move ua , 3 + v0 )  | ( move 4 , 0 ; ( move ua , 3 ; pen ua + 4 ) ; pen ua )  | ( move 4 , ua ; ( move ua , 2 + ul ; move 0 , ua * ua ) )  
[326] ( move 2 , 2 ; move 2 , ul )  | ( move 3 - ul , 2 ; move 2 , ul )  | ( move 2 , 2 ; move ul + ul , ul )  | ( move 2 , ul + ul ; move 2 , ul )  | ( move ul + ul , 2 - ua ; move 2 , ul )  | ( move 2 , 2 ; move ul + ul , ul - ua )  | ( move 3 - ul , ul + ul ; move 2 , ul )  | ( move 2 , 2 ; move 2 , ul ; v0 = 0 )  | ( move 2 , 2 ; move ul + ul , ul ; pen 4 )  | ( move 2 , ua + 2 ; move ul + ul , ua + ul )  | ( move 2 , 2 ; ( move 2 , ul ; move 0 , ul ) )  | ( move ul + ul , 2 ; v0 = 0 ; move 2 , ul )  | ( move ul , 2 ; move ul , 0 ; move 2 , ua + ul )  | ( v0 = 2 ; move v0 , v0 ; move v0 , ul )  | ( move 2 , 3 - ul ; move 2 , ul ; v0 = ua * 4 )  | ( move 2 , 2 ; v0 = 0 ; ( move 2 , ul ; pen 0 ) )  | ( v0 = 2 ; move v0 , v0 ; move v0 , v0 / 2 )  | ( v0 = 2 ; move v0 , v0 ; move v0 , v0 - ul )  
[327] ( move 2 , 0 ; move 4 , ul )  | ( move 2 , ua ; move 4 , ul )  | ( move 2 , 0 ; move 3 + ul , ul )  | ( move 2 , ua ; move 2 * 2 , ul )  | ( move ul + ul , ua ; move 4 , ul )  | ( pen ul ; move 2 , 0 ; move 4 , ul )  | ( pen ul ; move 2 , ua ; move 4 , ul )  | ( move 2 , ua + ua ; move 4 , ua + ul )  | ( move 2 , 0 ; move 4 , ul ; v0 = ul )  | ( move 2 , ua ; move 4 , ul ; v0 = 3 )  | ( move 2 , 0 ; move 4 , ul ; pen 3 / ua )  | ( ( move 2 , ua ; move 4 , ul ) ; pen 0 )  | ( move 2 , ua ; move 0 , ul ; move 4 , ua )  | ( move 2 , ua ; v0 = ua ; move 4 , ul )  | ( move 2 , ua ; move 4 , ul ; pen ua - ul )  | ( move ul + ul , ua ; move 4 , ul ; pen 4 )  | ( v0 = 2 ; move v0 , ua ; move 4 , ul )  | ( move 2 , 0 ; ( move 3 , ul ; move ul , 0 ) )  | ( ( move 2 , 0 ; move 4 , ul ) ; v0 = ul )  | ( v0 = ul / 4 ; move 2 , ua ; move 4 , ul )  | ( move 2 , ua ; move 4 , ul ; move 0 , ua - ul )  | ( move 2 , 0 ; ( v0 = 4 ; move v0 , ul ) )  | ( v0 = 2 ; ( move v0 , 0 ; move 4 , ul ) )  | ( ( pen ul / ua ; move 2 , ua ) ; move 4 , ul )  | ( move ul + ul , ua ; move 4 , ua + ul ; pen 3 )  | ( move ul + ul , ua ; pen ul ; move 4 , ul - ua )  | ( move ul + ul , ua ; v0 = ul ; move 4 , v0 )  | ( move 3 - ul , ua ; move 4 , ul ; v0 = ua + ul )  | ( v0 = 2 ; move v0 , ua ; move v0 * v0 , ul )  | ( ( move 0 , 0 ; move 3 - ul , ua ) ; move 4 , 3 - 2 )  | ( v0 = ul + ul ; move v0 , 0 ; move v0 + 2 , ul )  | ( move ul + ul , ua ; ( move 4 , ul ; pen 4 ; pen ul ) )  
[328] ( move 3 , 0 ; move ul , 3 )  | ( move 3 , ua ; move ul , 3 )  | ( move 3 , ua ; move 4 - 3 , 3 )  | ( move 2 + ul , 0 ; move ul , 3 )  | ( move 3 , 0 ; move ul , 2 + ul )  | ( move 3 , 0 ; move ul , ua + 3 )  | ( move 3 , 0 ; move ul , 4 - ul )  | ( move 4 - ul , 0 ; move ul , 3 )  | ( move 2 + ul , ua ; move ul , 3 )  | ( move 3 , ua ; move ul , ua + 3 )  | ( move 4 - ul , ua ; move ul , 3 )  | ( move 3 , ua ; move ul , 4 - ul )  | ( move 3 , ua ; move ul , 3 ; pen ul )  | ( move 3 , ua * 3 ; move ul , 3 - ua )  | ( move 4 - ul , ua ; move 2 - ul , 3 )  | ( move 2 + ul , ua ; move ul , 2 + ul )  | ( move 3 , 0 ; move ul , 3 ; move 0 , ul )  | ( move 3 , ua ; move ul , 3 ; pen 3 / 4 )  | ( move 3 , ua ; move 0 , 2 ; move ul , ul )  | ( move 3 , 0 ; v0 = 3 ; move ul , v0 )  | ( move 3 , ua ; pen ul ; move ul , ua + 3 )  | ( pen ul ; move 2 + ul , ua ; move ul , 3 )  | ( move 2 + ul , ua ; move 2 - ul , 2 + ul )  | ( ( move 3 , 0 ; move ul , 3 ) ; move 0 , 2 )  | ( move 3 , ua ; move ul , ua + 3 ; v0 = 0 )  | ( move 3 , ua ; move ul , 3 ; v0 = ua + ul )  | ( move 3 , 0 ; move ul , 2 + ul ; pen ua - ul )  | ( ( move 3 , 0 ; move ul , 3 - ua ) ; move 0 , 4 )  | ( move 3 , ua ; v0 = ul ; move v0 , v0 * 3 )  | ( move 3 , ua + ua ; v0 = 0 ; move ul , 3 - v0 )  | ( move 3 , ua ; ( move ul , 3 ; move 0 , ul ) ; pen ua )  | ( move ul + ul , ua + ua ; move ul , ua ; move ul , ua + 3 )  
[329] ( move 2 , 3 ; move ua , 2 )  | ( move 2 , 3 ; move ua , ua + 2 )  | ( move 2 , ua + 3 ; move ua , 2 )  | ( move ul + ul , 3 ; move ua , 2 )  | ( move 2 , 2 + ul ; move ua , ul + ul )  | ( ( pen ul ; move 2 , 3 ) ; move ua , 2 )  | ( move 2 , 3 ; move 0 , ul ; move ua , ul )  | ( move ul + ul , 3 ; ( move ua , 2 ; pen ul ) )  | ( v0 = ul ; move 2 , 3 ; move ua , ul + v0 )  | ( ( move 2 , 3 ; v0 = 2 ; move ua , v0 ) ; pen 0 )  
[330] ( move ua , 2 ; move 2 , 3 )  | ( move ua , 2 ; move 2 , 3 - ua )  | ( move ua , 2 ; move 3 - ul , 3 )  | ( move ua , 2 ; move 2 , 4 - ul )  | ( move ua , 2 - ua ; move ul + ul , 3 )  | ( move ua , 2 ; move ul , 3 ; move ul , ua )  | ( move ua , 2 ; v0 = 2 ; move v0 , 3 )  | ( move ua , 2 ; v0 = 3 ; move v0 , v0 )  | ( move ua , 2 ; move 0 , ul ; move ul + ul , 2 )  | ( move 0 , ul ; move ua , ul ; move 2 , 3 - ua )  | ( v0 = 2 ; move ua , v0 ; move v0 , 3 - ua )  | ( move ua , ul + ul ; move 2 , 3 ; v0 = ul / ua )  | ( move 0 , ua * 3 ; ( move ua , 2 ; move 2 , 2 + ul ) )  
[331] ( move ua , 4 ; move 2 , 2 )  | ( move ua , ua + 4 ; move 2 , 2 )  | ( move ua , 4 ; move 2 , ua + 2 )  | ( move ua , 4 ; move ul + ul , 2 )  | ( move ua , 4 ; move 2 , ul + ul )  | ( move ua , 4 - ua ; move 2 , 2 ; pen 2 )  | ( move ua , 4 ; move 2 , 2 ; pen 2 + ul )  | ( move ua , 4 ; ( move 2 , 2 ; pen 4 + 4 ) )  | ( move ua , 4 ; v0 = 2 ; move v0 , v0 )  | ( pen ul ; move ua , 2 * 2 ; move 4 / 2 , 2 )  | ( ( move ua , 4 ; move 2 , 2 ) ; v0 = ul / 2 )  
[332] ( move 2 , 2 ; move ua , 4 )  | ( move 2 , ul + ul ; move ua , 4 )  | ( move 2 , 3 - ul ; move ua , 3 + ul )  | ( move ul + ul , 4 / 2 ; move ua , 4 )  | ( pen ul ; move 2 , ul + ul ; move ua , 4 )  
[333] ( move 4 , 2 ; move ua , 2 )  | ( move 4 , ul + ul ; move ua , ua + 2 )  | ( move 4 , 2 - ua ; move ua , 2 ; pen 0 )  | ( move 4 , ua + 2 ; move ua , 2 ; pen ul )  | ( move 4 , 2 ; move ua , ul + ul ; pen ua )  | ( move 4 , ua + 2 ; v0 = ua ; move ua , 2 )  | ( move 4 , 2 ; ( move 0 , 2 ; move ua , ua ) ; v0 = ul )  
[334] ( move ua , 2 ; move 2 , 4 )  | ( move ua , 2 ; move 2 , 4 ; move 4 / 3 , 3 )  
[335] ( move 3 , 0 ; move 4 , ul )  | ( move 3 , ua ; move 4 , ul )  | ( move 3 , ua ; move 2 * 2 , ul )  | ( move 3 , ua * 3 ; move 4 , ul )  | ( move 2 + ul , ua ; move 4 , ul )  | ( move 3 , ua ; move 3 + ul , ul )  | ( move 3 , ua ; move 4 , ul - ua )  | ( move 3 , ua ; pen ul ; move 4 , ul )  | ( move 2 + ul , 0 ; move 4 , ua + ul )  | ( move 3 , 0 ; move 0 , ul ; move 4 , 0 )  | ( v0 = ua ; move 3 , 0 ; move 4 , ul )  | ( move 3 , ua * 2 ; move 4 , ul ; pen 2 )  | ( move 3 , ua ; move 0 , ua ; move 4 , ul )  | ( move 3 , ua ; v0 = ua ; move 4 , ul )  | ( move 2 , ua ; move ul , ua ; move 4 , ul )  | ( move 3 , 0 ; v0 = ul ; move 4 , v0 )  | ( v0 = 4 ; move 3 , 0 ; move v0 , ul )  | ( move 3 , ua ; v0 = ul ; move 4 , v0 )  | ( move 3 , 0 ; move 4 , ul ; v0 = 4 * 3 )  | ( move 3 , ua ; move 4 , ua + ul ; v0 = ua )  | ( move 3 , ua ; move 3 + ul , ul ; v0 = ul )  | ( ( move 3 , ua ; move ul , ul ) ; move 3 , ua )  | ( move 2 + ul , 0 ; move 4 , ul ; pen ul / ua )  | ( move 4 - ul , ua ; move 4 , ul - ua ; pen ua )  | ( ( move 3 , ua ; move 4 , ul ) ; pen 0 ; pen ul )  | ( v0 = 0 ; move 3 , v0 ; move 4 , ul + v0 )  | ( move 3 , ua ; v0 = ul ; move v0 + 3 , v0 )  | ( ( v0 = 2 ; move 3 , 0 ) ; move 4 , ul ; pen v0 )  | ( move 0 , ua ; ( move 3 , 0 ; pen ul ; move 4 , ua + ul ) )  | ( ( move 3 , ua ; move 4 , ul - ua ; pen ua ) ; pen 2 / ua )  
[336] ( move 2 , 3 ; move 2 , ul )  | ( move 2 , 3 ; move 4 / 2 , ul )  | ( move 2 , 3 ; move 2 , ua + ul )  | ( move 2 , 3 ; move 2 , ul - ua )  | ( move 2 , 3 - ua ; move 2 , ul )  | ( move 3 - ul , 3 ; move 2 , ul )  | ( move 2 , 3 ; move 2 , ul ; pen ua )  | ( move 2 , ua + 3 ; move 4 / 2 , ul )  | ( move 3 - ul , 3 ; move 2 , ua + ul )  | ( v0 = 2 ; move v0 , 3 ; move v0 , ul )  | ( ( move ul + ul , 3 ; move ul , ul ) ; move ul , ua )  
[337] ( move 2 , ul ; move 3 , 2 )  | ( move 2 , ul ; move 2 + ul , 2 )  | ( move ul + ul , ul ; move 3 , 2 )  | ( move 4 / 2 , ul ; move 3 , ul + ul )  | ( pen 2 / 3 ; move 2 , ul ; move 3 , 2 )  | ( move 0 , ua ; move 2 , ul ; move 3 , 2 )  | ( move 2 , ul ; v0 = ul ; move 3 , 2 )  | ( move 2 , ul ; v0 = 2 ; move 3 , v0 )  | ( v0 = 2 ; move 2 , ul ; move 3 , v0 )  | ( move 2 , ul ; ( move ul , 2 ; move 2 , ua ) )  | ( move 2 , ul ; move ua / 2 , 2 ; pen ul / 3 )  | ( ( move ul + ul , ul ; move 3 , 2 ) ; pen 4 )  | ( ( move ul + ul , ul ; pen ul ) ; move 3 , 2 )  | ( move 2 , ua + ul ; pen ul ; move 3 , ul + ul )  | ( move 2 , ul ; move 2 + ul , 3 - ul ; v0 = ul )  | ( v0 = 2 ; move v0 , ul ; move v0 + ul , v0 )  
[338] ( move ul , 0 ; move 3 , 4 )  | ( move ul , ua ; move 3 , 4 )  | ( move ul , 0 ; move 3 , 3 + ul )  | ( move ul , 0 ; move 3 , 4 - ua )  | ( move ul , 0 ; move 4 - ul , 4 )  | ( move ul , ua * 4 ; move 3 , 4 )  | ( move ul , ua + ua ; move 3 , 4 )  | ( move ul , ua ; move 3 , ua + 4 )  | ( move ul , ua ; move 3 , 3 + ul )  | ( move ul , ua ; move 2 + ul , 4 )  | ( move ul , 0 ; move 3 , 4 ; pen 0 )  | ( move ul , ua ; move 3 , 4 ; pen 0 )  | ( pen ul ; move ul , 0 ; move 3 , 4 )  | ( move ul , ua * 4 ; move 3 , 2 + 2 )  | ( move 2 - ul , ua ; move 2 + ul , 4 )  | ( move ul , ua ; move 2 + ul , 4 - ua )  | ( move ul , 0 ; move 3 , 4 ; v0 = 3 )  | ( move ul , 0 ; move 3 , 4 ; pen 4 * 2 )  | ( move ul , ua ; move 3 , 4 ; move 0 , 2 )  | ( v0 = 0 ; move ul , ua ; move 3 , 4 )  | ( move ul , ua ; move 3 , 4 ; v0 = 2 )  | ( move ul , 0 ; move 3 , 4 ; pen ua * 4 )  | ( move ul , ua ; v0 = 3 ; move v0 , 4 )  | ( v0 = 4 ; move ul , ua ; move 3 , v0 )  | ( ( move 4 - 3 , 0 ; move 3 , 4 ) ; pen ul )  | ( move ul , 0 ; move 3 , 4 ; move 0 , 2 - ul )  | ( move ul , 0 ; move 3 , 4 ; v0 = 2 + ul )  | ( move ul , 0 ; move 3 , 4 ; v0 = ul / ua )  | ( move ul , ua ; ( move 3 , ua + 4 ; move 0 , 3 ) )  | ( v0 = 3 ; move v0 - 2 , 0 ; move v0 , v0 + ul )  | ( move ul , ua ; ( move 3 , 3 + ul ; move 0 , ua + ua ) )  | ( ( pen 2 - ul ; move ul , ua ; move 2 , 4 ) ; move ul , 0 )  
[339] ( move 3 , 2 ; move 2 , ul )  | ( move 3 , 2 ; move 4 - 2 , ul )  | ( move 2 + ul , 2 ; move 2 , ul )  | ( move 3 , 2 ; move 2 , ul - ua )  | ( move 4 - ul , 2 ; move 2 , ul )  | ( move 3 , ul + ul ; move 2 , ul )  | ( move 3 , 2 ; pen ul ; move 2 , ul )  | ( move 3 , 3 - ul ; move 2 , ua + ul )  | ( move 3 , ua + 2 ; move ul + ul , ul )  | ( move 3 , 2 ; ( move 2 , ul ; pen 4 ) )  | ( v0 = 2 ; move 3 , v0 ; move v0 , ul )  | ( ( move 3 , 2 ; move 2 , ul ) ; v0 = 4 / ua )  | ( ( move 3 , ua + 2 ; move 2 , ul ) ; v0 = ua )  | ( ( move 2 + ul , 2 ; v0 = 2 ) ; move v0 , ul )  | ( v0 = 2 ; move v0 + ul , v0 ; move v0 , ul )  | ( move 3 , 2 ; v0 = ul ; move v0 + v0 , ul - ua )  | ( pen ul ; ( move 3 , 2 ; move 2 , ul ) ; v0 = 2 + ul )  
[340] ( move 4 , 0 ; move ul , 3 )  | ( move 4 , ua ; move ul , 3 )  | ( move 2 + 2 , 0 ; move ul , 3 )  | ( move 4 , 0 ; move ul , ua + 3 )  | ( move 4 , ua * 2 ; move ul , 3 )  | ( move 4 , ua * 4 ; move ul , 3 )  | ( move 3 + ul , ua ; move ul , 3 )  | ( move 4 , ua ; move ul , 2 + ul )  | ( move 4 , ua ; move ul , ua + 3 )  | ( move 4 , ua ; move ul , 4 - ul )  | ( move 4 , 0 ; move ul , 3 ; pen ua )  | ( move 4 , 0 ; move ul , 3 ; pen ul )  | ( move 4 , ua ; move ul , 3 ; pen ua )  | ( move 4 , 0 - ua ; move ul , ua + 3 )  | ( move 4 , 0 ; move ul , 3 ; move 0 , 0 )  | ( move 4 , ua ; move ul , 3 ; v0 = 3 )  | ( move 4 , ua * 3 ; move ul , 3 ; pen 4 )  | ( move 4 , ua ; move ul , 3 ; v0 = ua )  | ( move 4 , 0 ; pen ul ; move ul , ua + 3 )  | ( move 3 + ul , 0 ; move ul , 3 ; move 0 , 2 )  | ( v0 = ul ; ( move 4 , 0 ; move ul , 3 ) )  | ( move 3 , 0 ; move ul , 0 ; move ul , 2 + ul )  | ( move 2 * 2 , ua ; move ul , 3 ; v0 = ul )  | ( ( move 2 , ua ; move 2 , ua ) ; move ul , 3 )  | ( move 4 , 0 ; move ul , 3 ; v0 = ul / ua )  | ( move 4 , ua ; move 0 , 2 - ua ; move ul , ul )  | ( move 4 , ua ; move ul , ua + 3 ; v0 = ul )  | ( move 3 , ua ; move ul , ua ; move ul , 3 - ua )  | ( move 4 , 0 ; v0 = ul ; move v0 , 2 + ul )  | ( v0 = ul ; move 4 , 0 ; move v0 , 2 + v0 )  | ( move 2 * 2 , ua ; move ul , 3 ; v0 = 2 - 4 )  | ( ( move 4 , 0 ; v0 = ul ) ; move v0 , 3 ; pen ul )  
[341] ( move 2 , 2 ; move 3 , ul )  | ( move 2 , 2 ; move 3 , 3 - 2 )  | ( move 2 , 2 - ua ; move 3 , ul )  | ( move 2 , 3 - ul ; move 3 , ul )  | ( move ul + ul , 2 ; move 3 , ul )  | ( move 2 , ul + ul ; move 3 , ul )  | ( move 2 , 2 ; pen ul ; move 3 , ul )  | ( move ul + ul , ua + 2 ; move 3 , ul )  | ( move 2 , 2 ; move 3 , ul ; v0 = ul )  | ( pen ul ; move 2 , ul + ul ; move 3 , ul )  | ( move 2 , 2 ; move 3 , ul ; v0 = ua + ul )  | ( move 3 - ul , 2 ; move 3 , ua + ul ; pen 2 )  | ( move ul , 2 - ua ; move ul , ua ; move 3 , ul )  | ( pen ul ; move ul + ul , ul + ul ; move 3 , ul )  
[342] ( move 2 , 4 ; move ua , 2 )  | ( move 2 , 4 ; move ua , 4 / 2 )  | ( move 2 , 3 + ul ; move ua , 2 )  | ( move ul + ul , 4 ; move ua , 2 )  | ( move 0 , 2 ; move 2 , 2 ; move ua , 2 )  | ( v0 = 2 ; move v0 , 4 ; move ua , v0 )  | ( move 2 , 4 ; move ua , 2 ; v0 = ua + ua )  | ( v0 = 2 ; move 2 , v0 + 2 ; move ua , v0 )  | ( pen 2 / 4 ; ( move ul + ul , 4 ; move ua , 2 ) )  
[343] ( move ua , 2 ; move 3 , 3 )  | ( move ua , 2 ; move 4 , 3 )  | ( move ua , ua + 2 ; move 3 , 3 )  | ( move ua , 2 ; move 3 + ul , 3 )  | ( move ua , 2 ; move 4 , 3 - ua )  | ( move ua , 2 ; move 4 , 3 ; pen ua )  | ( move ua , 2 ; move 2 + 2 , 4 - ul )  | ( move ua , ua + 2 ; move 4 , 2 + ul )  | ( move ua , ul + ul ; move 3 , 2 + ul )  | ( move ua , 2 ; move 0 , 2 ; move 4 , ul )  | ( move ua , 2 ; v0 = 2 ; move v0 + ul , 3 )  | ( move ua , ul + ul ; v0 = 3 ; move v0 , v0 )  
[344] ( move ua , 0 ; move 4 , 4 )  | ( move ua , ua ; move 4 , 4 )  | ( move ua , 0 ; move 4 , ua + 4 )  | ( move ua , ua ; move 2 * 2 , 4 )  | ( move ua , ua ; move 4 , 2 * 2 )  | ( move ua , ua ; move 4 , 4 - ua )  | ( move ua , ua * 3 ; move 4 , 4 - ua )  | ( move ua , ua ; move 3 + ul , 3 + ul )  | ( move ua , ua ; move 2 , 4 ; move 2 , ua )  | ( move ua , ua ; move 4 , 3 + ul ; pen 4 )  | ( move ua , 0 ; move 4 , 4 ; pen ul / ua )  | ( v0 = 4 ; move ua , 0 ; move v0 , v0 )  | ( move ua , 0 ; v0 = 4 ; move v0 , v0 )  | ( move 0 , ua * 3 ; move ua , 0 ; move 4 , 4 )  | ( v0 = ua ; move v0 , v0 ; move 4 , 4 )  | ( ( move ua , 0 ; move 4 , ua + 4 ) ; pen 3 )  | ( move ua , ua ; v0 = 4 ; move v0 , v0 )  | ( move ua , ua ; move 4 , 4 ; v0 = 2 - ul )  | ( move ua , ua ; move 4 , 4 ; v0 = ul / 4 )  | ( move ua , ua ; ( move 4 , 4 ; v0 = ul ) )  | ( move ua , ua ; move 3 - ul , 4 ; move 2 , ua )  | ( ( v0 = ua ; move v0 , ua ) ; move 4 , 4 )  | ( move ua , 0 ; v0 = 3 + ul ; move v0 , v0 )  | ( move ua , 0 ; move 4 , ua + 4 ; v0 = 4 + ul )  | ( move ua , 0 ; move 0 , ul - ua ; move 4 , 2 + ul )  | ( move ua , 0 ; move 4 , 4 - ua ; move 0 , ua - ul )  | ( move ua , 0 ; ( move 4 , 4 ; v0 = ua ) ; pen 4 )  | ( move ua , 0 ; ( v0 = 4 ; move v0 , v0 ; pen 2 ) )  | ( move ua , ua ; v0 = 4 ; ( move v0 , v0 ; pen 0 ) )  
[345] ( move 3 , 0 ; move ul , 4 )  | ( move 3 , ua ; move ul , 4 )  | ( move 3 , 0 ; move ul , 3 + ul )  | ( move 3 , 0 ; move ul , 4 - ua )  | ( move 3 , ua ; move 2 - ul , 4 )  | ( move 3 , ua * 2 ; move ul , 4 )  | ( move 2 + ul , ua ; move ul , 4 )  | ( move 3 , ua ; move ul , 3 + ul )  | ( move 3 , 0 ; move ul , 4 ; pen 0 )  | ( move 3 , ua * 2 ; move ul , 3 + ul )  | ( move 3 , 0 ; move 0 , 4 ; move ul , ua )  | ( move 3 , 0 ; move ul , ua + 4 ; pen 2 )  | ( ( move 3 , 0 ; pen ul ) ; move ul , 4 )  | ( move 3 , ua ; move ul , 4 ; move 0 , ua )  | ( move 3 , ua ; move 0 , 4 ; move ul , ua )  | ( move 3 , ua ; move ul , 4 ; v0 = ua )  | ( move 3 , ua ; move ul , 4 ; v0 = ul )  | ( move 3 , 0 ; pen ul ; move ul , 3 + ul )  | ( move ul , ua ; move 2 , ua ; move ul , 4 )  | ( move 3 , 0 ; v0 = ul ; move v0 , 4 )  | ( pen ul ; move 2 + ul , ua ; move ul , 4 )  | ( ( move 3 , ua ; move 0 , 3 ) ; move ul , ul )  | ( ( move 3 , ua ; v0 = ua ) ; move ul , 4 )  | ( pen 3 / ua ; move 2 + ul , ua ; move ul , 4 )  | ( ( move 3 , ua ; pen ul ) ; move ul , 3 + ul )  | ( v0 = 4 ; ( move 3 , ua ; move ul , v0 ) )  | ( v0 = 0 ; move 3 + v0 , v0 ; move ul , 4 )  | ( ( move 2 + ul , ua ; move ul , 4 ) ; v0 = ua )  | ( move ul , ua ; move 2 , ua + ua ; move ul , 3 + ul )  | ( ( move 3 , ua ; move ul , 4 ; move 0 , 2 ) ; v0 = 4 )  | ( move 4 - ul , ua * 2 ; ( v0 = 4 ; move ul , v0 ) )  
[346] ( move 2 , 3 ; move ua , 3 )  | ( move 3 , 3 ; move ua , 3 )  | ( move 2 , 3 ; move ua , 2 + ul )  | ( move 2 , 4 - ul ; move ua , 3 )  | ( move ul + ul , 3 ; move ua , 3 )  | ( move 2 , 3 ; move ua , 3 ; pen 4 )  | ( move 2 , 4 - ul ; move ua , 4 - ul )  | ( move 2 , 3 ; move ua , 3 ; v0 = ua )  | ( ( move 2 , 3 ; move ua , 3 ) ; move 0 , 4 + ul )  | ( v0 = 2 + ul ; move 2 , v0 ; move ua , v0 )  | ( move 2 , 3 ; ( move ua , 4 - ul ; pen ua - 3 ) )  | ( move 2 , 3 ; ( v0 = ua ; move ua , 3 - v0 ) )  | ( v0 = 3 ; move v0 - ul , v0 ; move ua , 3 - ua )  | ( ( move 2 , 4 - ul ; move ua , ua + 3 ) ; v0 = ul )  | ( v0 = ul + ul ; move v0 , v0 + ul ; move ua , 3 )  
[347] ( move 4 , 0 ; move 3 , ul )  | ( move 4 , ua ; move 3 , ul )  | ( move 4 , 0 ; move 3 , ua + ul )  | ( move 4 , ua ; move 3 , 2 - ul )  | ( move 4 , ua * 4 ; move 3 , ul )  | ( move 4 , ua ; move 2 + ul , ul )  | ( move 4 , ua ; move 4 - ul , ul )  | ( pen ul ; move 4 , 0 ; move 3 , ul )  | ( move 4 , ua ; move 3 , ul ; pen ua )  | ( move 3 + ul , 0 ; move 2 + ul , ul )  | ( move 3 + ul , ua ; move 2 + ul , ul )  | ( move 4 , ua ; move 4 - ul , ua + ul )  | ( move 4 , ua ; move 0 , ul ; move 3 , ua )  | ( move 4 , ua ; move 3 , ul ; v0 = ul )  | ( move 4 , ua ; move 2 + ul , ul ; pen 2 )  | ( pen ul ; move 4 , ua * 3 ; move 3 , ul )  | ( move 3 + ul , ua * 2 ; move 3 , 2 - ul )  | ( move 4 , 0 ; ( move 3 , ul ; v0 = 3 ) )  | ( v0 = ul + ul ; move 4 , 0 ; move 3 , ul )  | ( move 4 , 0 ; v0 = 3 ; move v0 , ul - ua )  | ( ( move 0 , 0 ; move 4 , ua ) ; move 3 , ua + ul )  | ( ( move 4 , 0 ; move ul , ul ) ; move ul + ul , 0 )  
[348] ( move 3 , 2 ; move ul , 2 )  | ( move 3 , ua + 2 ; move ul , 2 )  | ( move 4 - ul , 2 ; move ul , 2 )  | ( move 3 , 2 ; move ul , 2 ; pen 0 )  | ( move 3 , ul + ul ; move ul , ul + ul )  | ( move 0 , 0 ; move 3 , 2 ; move ul , 4 - 2 )  | ( move 4 - ul , 2 ; move ul , 2 ; move 0 , 0 )  | ( v0 = 2 ; move 3 , v0 ; move ul , v0 )  | ( ( move 4 - ul , 2 ; move ul , 2 ) ; v0 = ua )  | ( move 3 , ul + ul ; ( move ul , ua + 2 ; move 0 , ul ) )  
[349] ( move 3 , ul ; move 2 , 2 )  | ( move 3 , ul ; move ul + ul , 2 )  | ( pen ul ; move 3 , ul ; move 2 , 2 )  | ( move 3 , ul ; pen ul ; move 2 , 2 )  | ( move 2 + ul , ul ; move 2 , ua + 2 )  | ( move 2 + ul , ul ; move 2 , 2 - ua )  | ( move 3 , ua + ul ; move ul + ul , 2 )  | ( move 4 - ul , ul ; move 2 , ul + ul )  | ( move 3 , ul ; move 2 , 2 ; v0 = 4 )  | ( move 3 , ul ; move ul + ul , ul + ul )  | ( move 3 , ul ; move 2 , 2 ; v0 = ua )  | ( move 3 , ul ; move 0 , ul ; move 2 , ul )  | ( v0 = ul ; move 3 , v0 ; move 2 , ua + 2 )  | ( v0 = ul + ul ; move 3 , ul ; move v0 , v0 )  | ( v0 = 2 ; move v0 + ul , ua + ul ; move 2 , v0 )  
[350] ( move 3 , 3 ; move ua , 2 )  | ( move ul , ua ; move 3 , 3 ; move ua , 2 )  | ( move 4 - ul , 3 ; move ua , 2 ; pen ua + ua )  
[351] ( move 3 , ua ; move 3 , 2 )  | ( move 3 , 0 ; move 3 , ul + ul )  | ( move 2 + ul , ua ; move 3 , 2 )  | ( move 4 - ul , ua ; move 3 , 2 )  | ( move 3 , ua ; move 3 , ul + ul )  | ( move 3 , 0 - ua ; move 3 , 2 - ua )  | ( move 3 , 0 ; move 0 , 2 ; move 3 , ua )  | ( move 3 , ua ; move 3 , 4 - 2 ; pen ul )  | ( move 3 , 0 ; v0 = 3 ; move v0 , 2 )  | ( move 2 , 0 ; move ul , ua + ua ; move 3 , 2 )  | ( move 3 , ua ; v0 = ul ; move 3 , ua + 2 )  
[352] ( move ua , 2 ; move 4 , 2 )  | ( move ua , ua + 2 ; move 4 , 2 )  | ( move ua , 2 ; move 4 , 2 ; pen 2 - ua )  | ( move ua , 2 ; move 4 , 3 - ul ; pen 0 )  | ( ( move ua , 2 ; move 4 , 2 ) ; v0 = 3 )  | ( move ua , 2 ; move 4 , ua + 2 ; v0 = ul )  | ( v0 = 2 ; move ua , v0 ; move v0 + v0 , 2 )  | ( move ua , ul + ul ; move 4 , 3 - ul ; pen 3 - ua )  | ( move ua , 2 ; ( move 0 , 0 ; move 0 , ul ; move 4 , ul ) )  
[353] ( move 3 , 2 ; move ua , 3 )  | ( move 4 , 2 ; move ua , 3 )  | ( move 3 , 2 ; move ua , 2 + ul )  | ( move 4 , 2 ; move ua , ua + 3 )  | ( move 3 , ul + ul ; move ua , 3 )  
[354] ( move ua , 3 ; move 3 , 2 )  | ( move ua , 3 ; move 3 , 2 ; pen ul )  | ( move ua , 3 ; move 4 - ul , ul + ul )  | ( move ua , ua + 3 ; move 3 , 2 ; v0 = ul )  | ( ( move ua , 2 + ul ; v0 = 3 ) ; move v0 , 2 )  
[355] ( move ua , 3 ; move 2 , 3 )  | ( move ua , 3 ; move 3 , 3 )  | ( move ua , 3 ; move 2 , 2 + ul )  | ( move ua , 2 + ul ; move 3 , 3 )  | ( move ua , 3 ; move ua / 2 , 3 )  | ( move ua , 4 - ul ; move 2 , 4 - ul )  | ( move ua , 3 - ua ; move ul + ul , 2 + ul )  | ( v0 = 3 ; move ua , v0 ; move v0 , 3 )  | ( v0 = 3 ; move ua , 3 ; move v0 , v0 )  | ( move ua , 3 ; v0 = 3 ; move v0 , v0 )  
[356] ( move ul , 2 ; move 3 , 2 )  | ( move ul , ua + 2 ; move 3 , 2 )  | ( move ul , 2 ; move 2 + ul , 2 )  | ( move ul , 2 ; move 3 , 2 ; pen ua )  | ( move ul , ua + 2 ; move 4 - ul , 2 )  | ( move ul , ua + 2 ; move 2 + ul , ua + 2 )  | ( move ul , 3 - ul ; move 3 , 2 ; pen ua + ua )  | ( ( move 3 - 2 , 2 ; move 3 , 2 ) ; move 0 , ul )  | ( ( move ul , ua + 2 ; move 3 , 2 ) ; v0 = 4 )  | ( move ul , 2 ; move 3 , 2 ; ( pen ul ; pen ul / ua ) )  | ( ( v0 = 2 ; move ul , 2 ) ; move 3 , v0 ; pen ul )  | ( v0 = ul + ul ; ( move ul , v0 ; move 3 , v0 ) )  | ( ( move ul , ua + 2 ; pen ua ; pen ul ) ; move 3 , ua + 2 )  
[357] ( move 2 , 3 ; move 3 , ul )  | ( move 2 , 3 ; move 3 , 3 - 2 )  | ( move 2 , 3 ; move 3 , ul - ua )  | ( move 2 , 3 ; move 2 + ul , ua + ul )  | ( move 2 , 4 - ul ; move 2 + ul , ul )  | ( move 0 , 2 ; move 2 , ul ; move 3 , ul )  | ( move 2 , 3 ; move 3 , ul ; v0 = ul )  | ( move 3 - ul , 3 ; move 3 , ul ; pen ua )  | ( move 4 - 2 , 3 ; move 2 + ul , ul - ua )  | ( move 2 , 3 ; v0 = ua * ua ; move 3 , ul )  | ( pen ul ; move ul + ul , 2 + ul ; move 3 , ul )  | ( pen ul ; move ul + ul , 3 ; move 3 , ua + ul )  | ( move 2 , 3 ; move 2 + ul , ul ; v0 = ul / ua )  | ( move ul + ul , 3 - ua ; move 3 , ul ; v0 = ua )  | ( ( move 2 , 2 + ul ; move 0 , ul ) ; move 2 + ul , ua )  | ( move ul + ul , 2 + ul ; move 3 , ul ; v0 = ua * ua )  
[358] ( move 2 , ul ; move 3 , 3 )  | ( move 4 - 2 , ul ; move 3 , 3 )  | ( move 2 , ul ; move 3 , 2 + ul )  | ( move 2 , ua + ul ; move 3 , 3 )  | ( move 3 - ul , ul ; move 3 , ua + 3 )  | ( move ul + ul , ul ; move 3 , ua + 3 )  | ( move 2 , ul ; move 3 , 3 ; v0 = ul )  | ( move 2 , ul ; move 3 , 3 ; pen ua - ul )  | ( move 2 , ul ; pen ul ; move 3 , 4 - ul )  | ( move 2 , ul ; ( move 3 , 3 ; v0 = 0 ) )  | ( v0 = 3 ; move 2 , ul ; move v0 , v0 )  | ( move ul , ul ; move ul , ua ; move 4 - ul , 3 )  | ( move 2 , ul - ua ; v0 = 3 ; move v0 , v0 )  | ( move 3 - ul , ul ; v0 = 3 ; move v0 , v0 )  
[359] ( move ul , 2 ; move 3 , 3 )  | ( move ul , 2 ; move 4 - ul , 3 )  | ( move ul , 2 ; move 3 , 4 - ul )  | ( move ul , 2 ; move 3 , ua + 3 ; pen 3 )  | ( v0 = ul ; move v0 , 2 ; move 3 , 3 )  | ( move ul , 2 ; v0 = 3 ; move 3 , v0 )  | ( v0 = 3 ; move ul , 2 ; move v0 , v0 )  | ( move ul , 2 ; v0 = 3 ; move v0 , v0 )  | ( move ul , 2 ; move 3 , ua + 3 ; v0 = 2 )  | ( move ul , 2 ; move 2 + ul , 3 ; v0 = 4 )  | ( pen ul ; ( move ul , 2 ; move 2 + ul , 3 ) )  | ( move ul , 2 ; move 2 + ul , ua + 3 ; move 0 , 3 )  | ( move ul , ua + 2 ; v0 = 3 ; move v0 , v0 )  | ( move ul , 2 ; move ua / 2 , 2 + ul ; v0 = 2 )  | ( pen ul ; ( move ul , 2 ; move 3 , 3 ) ; v0 = ul )  | ( v0 = 3 ; ( move ul , v0 - ul ; move v0 , v0 ) )  
[360] ( move ua , 4 ; move 2 , 3 )  | ( move ua , 4 ; move 3 , 3 )  | ( move ua , 4 ; move 2 , ua + 3 )  | ( move ua , 3 + ul ; move 3 , 3 )  | ( ( move ua , 4 ; move 2 , 3 ) ; pen 4 )  | ( move ua , 2 * 2 ; move 2 , 3 ; pen ul )  | ( ( v0 = 4 ; move ua , v0 ) ; move 2 , 3 )  | ( ( move ua , 4 ; move 2 , 3 ) ; v0 = 4 + ul )  
[361] ( move 3 , 3 ; move ul , 2 )  | ( move 3 , ua + 3 ; move ul , 2 )  | ( move 3 , 3 ; move ul , ua + 2 )  | ( move 3 , 3 ; move ul , ul + ul )  | ( pen ul ; move 3 , 3 ; move ul , 2 )  | ( move 4 - ul , 3 ; move 2 - ul , 2 )  | ( move 3 , 4 - ul ; move ul , ul + ul )  | ( move 3 , 3 ; move 0 , 2 ; move ul , ua )  | ( move 3 , 3 ; move ul , 2 ; move 0 , ul )  | ( move 3 , 3 ; move ul , 2 ; v0 = ua )  | ( move 3 , 3 ; move ul , 4 / 2 ; v0 = ul )  | ( v0 = 2 + ul ; move v0 , v0 ; move ul , 2 )  | ( v0 = ul + ul ; move 3 , 3 ; move 2 / v0 , v0 )  
[362] ( move 3 , 2 ; move ul , 3 )  | ( move 3 , 2 ; move ul , 2 + ul )  | ( move 3 , 2 ; move ul , ua + 3 )  | ( move 3 , ul + ul ; move ul , 3 )  | ( move 3 , 2 ; move ul , 3 ; pen ua )  | ( move 3 , 2 ; move 0 , 0 ; move ul , 3 )  | ( move 3 , 2 ; move ul , 3 ; v0 = 0 )  | ( move 3 , 2 ; ( move ul , 3 ; pen 0 ) )  | ( move 3 , 2 ; move ul , 3 ; move 0 , ua )  | ( move 3 , 2 ; move ul , 3 ; v0 = ul )  | ( move 3 , 2 ; move ul , ua / 2 ; move 0 , 0 )  | ( v0 = 3 ; move v0 , 2 ; move ul , v0 )  | ( move 3 , 2 ; ( move ul , 3 ; v0 = ua ) )  | ( move 2 , ul + ul ; move ul , ua ; move ul , 3 )  | ( move ua / 2 , 2 ; v0 = ul ; move v0 , 3 )  | ( move 3 , 2 ; v0 = ul ; move ul , v0 * 3 )  | ( v0 = 2 + ul ; move v0 , 2 ; move ul , v0 )  | ( move 2 + ul , 2 ; move ul , ua + 3 ; v0 = 3 )  | ( move 2 + ul , 2 - ua ; move 0 , 3 ; move ul , ua )  | ( ( move 3 , 2 ; pen ul ) ; move ul , ua + 3 ; v0 = ul )  
[363] ( move 2 , ul ; move 4 , 2 )  | ( move 2 , ul ; move 4 , ua + 2 )  | ( move 2 , ul ; move 4 , 3 - ul )  | ( move 2 , ul ; move 4 , ul + ul )  | ( move ul + ul , ul ; move 4 , 2 )  | ( move 2 , ul ; move 4 , 2 ; pen 0 )  | ( move 2 , ul ; move 4 , 2 ; pen ul )  | ( move 2 , ua + ul ; move 4 , 4 - 2 )  | ( move 2 , ul ; move 4 , 2 ; move 0 , 4 )  | ( v0 = ul ; move 2 , v0 ; move 4 , 2 )  | ( move 2 , ul ; move 4 , 2 - ua ; move 0 , 4 )  | ( move 2 , ul ; move 4 , ul + ul ; move 0 , 4 )  | ( move 0 , ua + ul ; move 2 , 0 ; move 4 , ul + ul )  | ( move 2 , ul - ua ; v0 = 4 ; move v0 , v0 - 2 )  
[364] ( move 3 , 3 ; move ua , 3 )  | ( move 4 , 3 ; move ua , 3 )  | ( move 4 , 3 ; move ua , 2 + ul )  | ( move 4 , 3 ; move ua , ua + 3 )  | ( move 4 , 3 - ua ; move ua , 3 )  | ( v0 = 3 ; move v0 , v0 ; move ua , v0 )  | ( move 4 , 3 ; pen ul ; ( move ua , 3 ; move 0 , 4 ) )  
[365] ( move 3 , 4 ; move ua , 2 )  | ( move 3 , 2 * 2 ; move ua , 2 )  | ( move 3 , 4 ; move ua , ua + 2 )  | ( move 3 , ua + 4 ; move ua , ul + ul )  | ( move 2 + ul , 4 ; move ua , ul + ul )  | ( move 2 + ul , ua + 4 ; move ua , 2 ; v0 = ul )  | ( v0 = 2 + ul ; move v0 , 4 ; move ua , v0 - ul )  | ( pen ul / 3 ; ( move 3 , 4 ; move ua , 2 ; v0 = 4 ) )  
[366] ( move 2 , 4 ; move 2 , ul )  | ( move 2 , 3 + ul ; move 2 , ul )  | ( move 3 - ul , 4 ; move 2 , ul )  | ( move 2 , 4 ; move ul + ul , ul )  | ( move ul + ul , 4 ; move 2 , ul )  | ( move 2 , 4 ; pen ul ; move 2 , ul )  | ( pen ul ; move 2 , 4 ; move 2 , ul )  | ( move ul + ul , 2 + 2 ; move 2 , ul )  | ( move ul + ul , 4 ; move ul + ul , ul )  | ( ( move 2 , 4 ; move ul , ul ) ; move ul , 0 )  | ( move ul + ul , 4 ; move 2 , ul ; pen 4 + 3 )  | ( ( move 2 , 4 ; move 2 , ul ) ; pen ua + ul )  | ( move 2 , 4 ; ( move ul , ul ; move ul , ua ) )  | ( v0 = 2 ; move 2 , v0 + v0 ; move v0 , ul )  
[367] ( move 3 , 2 ; move ua , 4 )  | ( move 3 , 2 ; move ua , 3 + ul )  | ( move 3 , ua + 2 ; move ua , 4 )  | ( move 3 , 2 - ua ; move ua , 4 )  | ( move 3 , ul + ul ; move ua , 4 )  | ( move 3 , ul + ul ; move ua , 3 + ul )  | ( move 3 , ul + ul ; move ua , 4 ; v0 = ul )  | ( move 3 , 2 ; ( v0 = ua ; move v0 , 4 ) )  | ( ( move 3 , 2 ; v0 = 3 + ul ) ; move ua , v0 )  | ( move ul , 2 ; ( move ul + ul , ua ; move ua , ua + 4 ) )  
[368] ( move 4 , 2 ; move ul , 2 )  | ( move 3 + ul , 2 ; move ul , 2 )  | ( move 4 , 2 ; move ul , 3 - ul )  | ( move 3 + ul , 3 - ul ; move ul , 2 )  | ( move 3 + ul , 2 ; move ul , ul + ul )  | ( move 4 , ul + ul ; move ul , ua + 2 )  | ( move 4 , 3 - ul ; move ul , ul + ul )  | ( move 4 , ul + ul ; move ul , ul + ul )  | ( move 4 , ul + ul ; move ul , 2 ; pen 2 )  | ( move 4 , 2 ; v0 = ul ; move v0 , 2 * v0 )  | ( move 0 , 0 - ul ; move 4 , ua + 3 ; move ul , 2 )  | ( v0 = 2 ; move v0 * v0 , v0 ; move ul , v0 )  
[369] ( move ul , 3 ; move 3 , 2 )  | ( move ul , 3 ; move 3 , ul + ul )  | ( move ul , 3 ; v0 = ua ; move 3 , 2 )  | ( pen ul ; move ul , 4 - ul ; move 3 , 2 )  | ( move ul , 3 ; move 3 , ua + 2 ; move 0 , ul )  | ( ( move ul , 3 ; pen ul ) ; move 3 , ul + ul )  | ( move ul , 3 ; move 4 - ul , 2 ; v0 = ua - ul )  | ( move 0 , 3 ; ( move ul , 0 ; move 3 , 2 ) ; pen 4 )  
[370] ( move 4 , 0 ; move 4 , ul )  | ( move 4 , ua ; move 4 , ul )  | ( move 4 , 0 ; move 3 + ul , ul )  | ( move 3 + ul , 0 ; move 4 , ul )  | ( move 2 + 2 , ua ; move 4 , ul )  | ( move 3 + ul , ua ; move 4 , ul )  | ( move 4 , ua ; move 4 , ua + ul )  | ( move 4 , ua ; move 3 + ul , ul )  | ( move 4 , ua ; move 4 , ul - ua )  | ( move 4 , ua ; move 4 , ul ; pen 3 )  | ( move 4 , ua ; move 4 , ul ; pen ua )  | ( move 4 , ua + ua ; move 4 , 3 - 2 )  | ( move 4 , 0 ; move 3 + ul , ua + ul )  | ( move 4 , ua * 4 ; move 4 , ua + ul )  | ( move 4 , ua ; move 4 , ul ; move 0 , 2 )  | ( move 4 , 0 ; move 3 + ul , ul ; pen 0 )  | ( move ul , ua ; move 3 , 0 ; move 4 , ul )  | ( move 4 , ua ; move 4 , ul ; move 0 , ul )  | ( move 4 , ua ; move 4 , ul ; v0 = ua )  | ( move 4 , 0 ; v0 = ul ; move 4 , v0 )  | ( move 4 , ua + ua ; pen ul ; move 4 , ul )  | ( move 0 , 0 ; move 3 + ul , 0 ; move 4 , ul )  | ( ( move 3 + ul , 0 ; move 4 , ul ) ; pen 4 )  | ( move ul , ua ; move 3 , 0 ; move 3 + ul , ul )  | ( move 2 + 2 , 0 ; v0 = ul ; move 4 , v0 )  | ( move 4 , ua ; ( v0 = 4 ; move v0 , ul ) )  | ( move 4 , ua ; move 2 + ul , ua + ul ; move ul , 0 )  | ( move 2 + ul , 0 ; move ul , ua ; move 4 , ua + ul )  | ( move 3 + ul , ua ; ( move 4 , ua + ul ; pen ul ) )  | ( v0 = 4 ; move v0 , ua * v0 ; move v0 , ul )  | ( ( v0 = 2 ; move 4 , 0 ) ; move v0 + v0 , ul )  | ( ( move 4 , ua * 3 ; move 3 + ul , ul ) ; move 0 , ua )  
[371] ( move 2 , 2 ; move 4 , ul )  | ( move 2 , ua + 2 ; move 4 , ul )  | ( move 2 , 2 ; move 4 , ua + ul )  | ( move ul + ul , 2 ; move 4 , ul )  | ( pen ul ; move 2 , ul + ul ; move 4 , ul )  | ( move 2 , ul + ul ; pen ul ; move 4 , ul )  | ( move 2 , 2 - ua ; move 4 , ul ; v0 = 0 )  | ( ( move ul , 2 ; move ul , 0 ) ; move 4 , ul )  | ( move 2 , ul + ul ; ( move 4 , ul ; pen ul ) )  | ( pen ul / ua ; move 2 , 2 ; move 3 + ul , ua + ul )  | ( move ul + ul , 2 ; ( move 4 , ul ; pen ua + ul ) )  | ( v0 = 2 ; move v0 , v0 ; move v0 * v0 , ul )  
[372] ( move 4 , 2 ; move 2 , ul )  | ( move 2 + 2 , 2 ; move 2 , ul )  | ( move 4 , 2 ; move 2 , ul - ua )  | ( move 4 , ul + ul ; move 2 , ul )  | ( move 0 , ua ; move 4 , 2 ; move 2 , ul )  | ( ( pen ul ; move 4 , 2 ) ; move 2 , ul )  | ( move ul + ul , 2 ; move 2 , ua ; move 2 , ul )  | ( move 4 , 2 - ua ; move ul , ul ; move ul , 0 )  | ( move 4 , 2 ; ( pen ul ; move ul + ul , ul ) )  | ( move 0 , 2 - ul ; move 4 , ua + ul ; move 2 , ul )  | ( move 3 + ul , ul + ul ; v0 = 0 ; move 2 , ul - v0 )  | ( v0 = ul + ul ; ( move 4 , 2 ; move v0 , ua + ul ) )  
[373] ( move 4 , 3 ; move ua , 2 )  | ( move 4 , ua + 3 ; move ua , 2 )  | ( move 4 , 2 + ul ; move ua , 2 )  | ( move 4 , 3 ; move ua , 3 - ul )  | ( move 4 , 3 ; move ua , 2 ; pen ua )  | ( ( move 4 , 3 ; move ua , 2 ) ; v0 = ul )  | ( move 3 + ul , 3 ; v0 = ua ; move ua , 2 )  | ( move 3 + ul , 3 ; move ua , 2 ; v0 = ul )  | ( move 4 , 3 ; v0 = ua ; move v0 , v0 + 2 )  | ( ( move ul , 3 ; move 4 - ul , ua ) ; move ua , 2 )  | ( move 0 , ul + ul ; move 4 , ul ; move ua , 2 - ua )  | ( move 4 , 4 - ul ; move 0 , ua + ul ; move ua , ul )  | ( ( move 0 , ua + 3 ; move 2 + 2 , 0 ) ; move ua , 2 )  | ( ( move 4 , 3 ; move ua , 2 ; v0 = ul ) ; pen v0 )  
[374] ( move 2 , ua ; move 3 , 4 )  | ( move 2 , 0 ; move 3 , 3 + ul )  | ( move 2 , 0 ; move 3 , ua + 4 )  | ( move 2 , 0 ; move 3 , 4 - ua )  | ( move 2 , ua ; move 3 , ua + 4 )  | ( move 2 , 0 ; pen ul ; move 3 , 4 )  | ( move ul + ul , 0 ; move 3 , 3 + ul )  | ( move 2 , ua ; move 4 - ul , ua + 4 )  | ( move ul + ul , ua * 4 ; move 3 , 4 )  | ( move 2 , 0 ; pen ul ; move 2 + ul , 4 )  | ( ( move 2 , ua ; move 3 , 4 ) ; move 0 , 2 )  | ( move 2 , 0 ; move 0 , ua + 3 ; move 3 , ul )  | ( move 2 , ua ; move 3 , 4 ; move 0 , 3 + ul )  | ( move 2 , 0 ; ( move 3 , 4 ; move 0 , 3 ) ; v0 = 0 )  | ( ( move 2 , ua ; move 3 , 3 + ul ) ; v0 = ul - ua )  | ( move ul + ul , 0 ; move ul , 4 ; move ul + ul , ua + ua )  | ( move 2 , 0 ; move 4 - ul , 4 ; ( pen ul ; v0 = ua ) )  
[375] ( move 2 , 3 ; move ua , 4 )  | ( move 2 , 4 - ul ; move ua , 4 )  | ( move 2 , 3 ; move ua , 4 ; pen 4 )  | ( move ul + ul , 3 ; move ua , 4 ; move 0 , 2 )  | ( move ul + ul , 3 ; move ua , 4 ; move 0 , ua - 2 )  
[376] ( move ua , 4 ; move 3 , 2 )  | ( move ua , 2 + 2 ; move 3 , 2 )  | ( move ua , 4 ; move 2 + ul , 2 )  | ( move ua , 4 ; move 3 , 2 ; move ul / ua , ul )  | ( ( move ua , 4 ; v0 = 3 ) ; move v0 , 3 - ul )  | ( ( move ua , 4 ; v0 = ul + ul ; move 3 , 2 ) ; pen ua )  
[377] ( move 3 , ul ; move 3 , 2 )  | ( move 2 + ul , ul ; move 3 , 2 )  | ( move 3 , ua + ul ; move 3 , 2 )  | ( move 3 , ul ; move 3 , ul + ul )  | ( move 3 , ul ; move 3 , 2 ; pen 4 )  | ( move 3 , ul ; move 2 + ul , ul + ul )  | ( move 2 + ul , ul ; move 3 , ul + ul )  | ( move 0 , ul ; move 3 , ua ; move 3 , 2 )  | ( move 3 , ul - ua ; move 2 + ul , ul + ul )  | ( move 3 , ul ; move 3 , 4 / 2 ; v0 = ua )  | ( move 3 , ua + ul ; move 3 , 2 ; v0 = ul )  | ( move 3 , ul ; move 2 + ul , 3 - ul ; pen ul )  | ( move 3 , ua + ul ; move ua / 2 , 3 - ul ; v0 = 4 )  
[378] ( move ua , 2 ; move 3 , 4 )  | ( move ua , 2 ; move 2 + ul , 4 )  | ( move ua , ua + 2 ; move 3 , ua + 4 )  | ( pen ul ; move ua , 2 ; move 3 , 3 + ul )  
[379] ( move ul , 2 ; move 4 , 2 )  | ( move ul , 2 ; move 4 , 4 - 2 )  | ( move ul , 2 ; move 4 , 4 / 2 )  | ( move ul , 2 ; move 4 , 2 - ua )  | ( move ul , ua + 2 ; move 4 , 3 - ul )  | ( move 0 - 4 , 4 - ua ; move ul , ul )  | ( move ul , ua + 2 ; move 4 , ul + ul )  | ( pen ul ; move ul , 3 - ul ; move 4 , 2 )  | ( ( v0 = 2 ; move ul , v0 ) ; move 4 , v0 )  | ( move ul , 2 ; ( move 4 , ul + ul ; v0 = ua ) )  | ( move ul , ul + ul ; move 4 , 2 ; move 0 , ua + ua )  | ( ( move ul , 2 ; move 3 + ul , ul + ul ) ; v0 = ul )  
[380] ( move 2 , 4 ; move ua , 3 )  | ( move 4 - 2 , 4 ; move ua , 3 )  | ( move 0 , 3 ; move 2 , ul ; move ua , ua + 3 )  | ( pen 4 / ua ; move 2 , 4 ; move ua , 4 - ul )  
[381] ( move 4 , 0 ; move ul , 4 )  | ( move 4 , ua ; move ul , 4 )  | ( move 2 + 2 , 0 ; move ul , 4 )  | ( move 4 , 0 ; move 3 - 4 , ul )  | ( move 2 + 2 , ua ; move ul , 4 )  | ( move 4 , 0 ; move ul - 2 , ul )  | ( move 3 + ul , 0 ; move ul , 4 )  | ( move 4 , ua ; move ul , 3 + ul )  | ( move 3 + ul , ua ; move ul , 4 )  | ( move 4 , ua ; move ul , 4 - ua )  | ( move 4 , ua ; move 2 - ul , 2 + 2 )  | ( v0 = 4 ; move 4 , 0 ; move ul , 4 )  | ( pen ul / ua ; move 4 , 0 ; move ul , 4 )  | ( move 4 , 0 ; move 0 , 0 ; move ul , 3 + ul )  | ( v0 = 4 ; move v0 , ua ; move ul , v0 )  | ( move 4 - ul , 0 ; move ul , ua ; move ul , 4 )  | ( v0 = 0 ; move 4 , 0 ; move ul , v0 + 4 )  | ( v0 = 4 ; move v0 , ua * 2 ; move ul , v0 )  | ( move 4 , 0 ; move ul , ua + 4 ; v0 = ul - ua )  | ( move 3 + ul , ua ; v0 = ul ; move 2 - v0 , 4 )  | ( v0 = 2 + 2 ; move v0 , v0 * ua ; move ul , 4 )  | ( move 4 , ua ; ( pen ul ; ( move ul , 3 + ul ; pen ua ) ) )  
[382] ( move 3 , ul ; move 2 , 3 )  | ( move 3 , ul ; move 4 / 2 , 3 )  | ( move 3 , ul ; move 2 , 2 + ul )  | ( move 3 , ul ; move 2 , ua + 3 )  | ( move 3 , ul ; move 2 , 4 - ul )  | ( move 3 , ul ; move ul + ul , 3 )  | ( move 3 , ul ; move 2 , 3 ; pen ul )  | ( move 2 + ul , ul ; move 2 , ua + 3 )  | ( move 4 - ul , ul ; move ua / 3 , 3 )  | ( move 3 , ul ; move 0 , 0 ; move 2 , 3 )  | ( move 3 , ul ; move 0 , ua ; move 2 , 3 )  | ( move 3 , ul ; move 2 , 3 ; v0 = ua )  | ( move 3 , ul ; pen ul ; move 2 , 2 + ul )  | ( move 3 , ul ; v0 = 2 ; move v0 , 3 )  | ( move 3 , ul ; move ul + ul , 3 ; pen ul )  | ( move 4 - ul , 2 - ul ; move 2 , 3 - ua )  | ( move 2 + ul , ul ; move ul + ul , ua + 3 )  | ( move 2 , ul ; ( move ul , ua ; move 2 , 3 ) )  | ( v0 = 3 ; move v0 , ul ; move ul + ul , v0 )  | ( move 3 , ul ; ( v0 = 3 ; move 2 , v0 ; pen v0 ) )  
[383] ( move ua , 2 ; move 4 , 3 )  | ( move ua , 2 ; move 3 + 2 , 3 )  | ( move ua , 2 ; move 4 + ul , 2 + ul )  | ( move ua , ul + ul ; ( move 0 , 3 ; move 4 + ul , 0 ) )  | ( ( move ua , 2 ; v0 = ul ) ; ( pen ul ; move 4 , 3 ) )  
[384] ( move ua , 3 ; move 2 , 4 )  | ( move ua , 3 ; move 4 / 2 , 4 )  | ( move ua , 4 - ul ; move 2 , 4 )  | ( move 3 * 2 , ua + 3 ; move 2 , 4 )  | ( move ua , 4 - ul ; move ul + ul , 4 )  | ( ( pen ul ; move ua , 3 ; move ul , 4 ) ; move ul , ua )  
[385] ( move ul , 0 ; move 4 , 4 )  | ( move ul , ua ; move 4 , 4 )  | ( move ul , 0 ; move 4 , 2 * 2 )  | ( move ul , 0 ; move 4 , 3 + ul )  | ( move ul , 0 ; move 4 , ua + 4 )  | ( move ul , 0 ; move 4 , 4 - ua )  | ( move ul , ua ; move 4 , 3 + ul )  | ( move ul , ua ; move 4 , ua + 4 )  | ( move ul , ua ; move 4 , 4 ; pen ul )  | ( move ul , 0 ; move 2 * 2 , 3 + ul )  | ( move 0 , 0 ; move ul , ua ; move 4 , 4 )  | ( pen ul ; move ul , ua ; move 2 * 2 , 4 )  | ( move ul , ua ; ( pen ul ; move 4 , 4 ) )  | ( move ul , ua ; move 3 + ul , 4 ; pen ul )  | ( v0 = ul ; move v0 , ua ; move 4 , 4 )  | ( v0 = 4 ; move ul , 0 ; move v0 , v0 )  | ( move ul , 0 ; v0 = 4 ; move v0 , v0 )  | ( ( move ul , 0 ; move 4 , 4 ) ; move 0 , ul )  | ( move ul , ua ; v0 = 4 ; move v0 , v0 )  | ( move ul , ua ; ( move 0 , ul ; move 4 , 3 ) )  | ( ( v0 = 0 ; move ul , v0 ) ; move 4 , 4 )  | ( move ul , 0 ; v0 = 4 ; move v0 , ua + 4 )  | ( ( move 4 - 3 , 0 ; v0 = ul ) ; move 4 , 4 )  | ( move ul , 0 ; v0 = 3 + ul ; move v0 , v0 )  | ( move ul , 0 ; ( move ul , 4 ; move 2 + ul , 0 ) )  | ( v0 = 3 + ul ; move ul , ua ; move v0 , v0 )  | ( move ul , ua ; move 2 + ul , 3 + ul ; move ul , ua )  | ( ( move ul , 0 ; move 4 , 4 ) ; v0 = ul ; pen ul )  | ( ( v0 = 2 + 2 ; move ul , 0 ) ; move v0 , v0 )  | ( v0 = 2 ; move ul , ua ; move v0 + v0 , v0 + 2 )  | ( ( pen ul ; move ul , ua ) ; v0 = 4 ; move v0 , v0 )  
[386] ( move 3 , 3 ; move 2 , ul )  | ( move 2 + ul , 3 ; move 2 , ul )  | ( move 3 , 3 ; move 2 , ua + ul )  | ( move 3 , 3 ; move ul + ul , ul )  | ( move 3 , 3 ; pen ul ; move 2 , ul )  | ( move 3 , 2 + ul ; move 2 , ul - ua )  | ( move 4 - ul , ua + 3 ; move 2 , ul )  | ( move 3 , 2 + ul ; move ul + ul , ul )  | ( move 3 , 3 ; move 2 , ul ; move 0 , ua )  | ( move 3 , 3 ; move ul + ul , ul ; pen ul )  | ( pen 4 / ua ; move 3 , 3 ; move 4 / 2 , ul )  | ( move 2 + ul , 3 ; move 2 , ul ; pen ul - 2 )  | ( move 3 , ua + 3 ; move ul , ul ; move ul , ua )  | ( move 3 , 3 ; move 2 , 3 - 2 ; move 0 , 4 * 2 )  | ( move 3 , 3 ; move 3 - ul , ua + ul ; v0 = 3 )  | ( ( v0 = 3 ; move v0 , v0 ) ; move 2 , ul ; pen ua )  | ( ( pen ul ; move 3 , 3 ; move ul + ul , ul ) ; v0 = ul )  
[387] ( move 3 , 2 ; move 3 , ul )  | ( move 3 , ua + 2 ; move 3 , ul )  | ( move 3 , 2 - ua ; move 3 , ul )  | ( move 4 - ul , ul + ul ; move 3 , ul )  | ( move 3 , 2 ; move 3 , ul ; v0 = 4 )  | ( v0 = 3 ; move v0 , 2 ; move v0 , ul )  | ( move 3 , 4 - 2 ; v0 = 3 ; move v0 , ul )  | ( ( v0 = ul ; move 3 , 2 ) ; move 3 , v0 )  | ( ( move 3 , ua + 2 ; move ul , ul ) ; move 2 , 0 )  | ( pen 2 / ua ; ( move 2 + ul , 2 ; move 3 , ul ) )  | ( v0 = ul ; pen v0 ; ( move 3 , 2 ; move 3 , ul ) )  
[388] ( move 4 , 2 ; move 3 , ul )  | ( move 3 + ul , 2 ; move 3 , ul )  | ( move 4 , 3 - ul ; move 3 , ul )  | ( move 4 , ul + ul ; move 2 + ul , ul )  | ( move 4 , 2 ; pen ul ; move 2 + ul , ul )  | ( move 4 , 2 ; v0 = 3 ; move v0 , ul )  | ( move 4 , ua + 2 ; move 2 + ul , ua + ul )  | ( move 4 , 2 ; v0 = 2 - ua ; move 3 , ul )  | ( move 4 , 2 ; ( move 3 , ul ; v0 = 0 - ua ) )  | ( move 4 , ul + ul ; v0 = 4 + 2 ; move 3 , ul )  
[389] ( move 3 , ul ; move 2 , 4 )  | ( move 3 , 2 - ul ; move 2 , 4 )  | ( move 3 , ul - ua ; move 2 , 4 )  | ( move 3 , ul ; move 2 , 4 ; pen ul )  | ( move 3 , ul ; move 3 - ul , ua + 4 )  | ( ( move 3 , ul ; move 2 , 4 ) ; pen 4 / ua )  | ( move 3 , ul ; move ul + ul , 4 ; v0 = ul )  | ( move 3 , ul ; move 2 , 2 + 2 ; move 0 , 2 / ua )  | ( move ul , ul ; ( move 2 , ua ; move 2 , 4 ; pen 4 ) )  | ( ( move 3 , ul ; v0 = 4 ) ; move v0 - 2 , v0 )  | ( move 4 - ul , ul ; v0 = 2 ; move 2 , v0 * v0 )  | ( move 3 , ul ; ( move ul , 4 ; move ul , ua * 3 ; pen ua ) )  
[390] ( move ua , 4 ; move 3 , 3 )  | ( move ua , 4 ; move 3 , ua + 3 )  | ( move ua , ua + 4 ; move 3 , 3 )  | ( move ua , 4 ; pen ul ; move 3 , 3 )  | ( move ua , 3 + ul ; move 3 , 2 + ul )  | ( pen ul ; move ua , 2 * 2 ; move 3 , 3 )  | ( move ua , 4 ; move 2 + ul , 3 ; pen ua )  | ( v0 = 3 ; move ua , 4 ; move v0 , v0 )  | ( move ua , 4 ; move 3 , 2 + ul ; move 0 , ua )  | ( move 0 , ul - ua ; ( move ua , 3 ; move 3 , 3 ) )  | ( move ua , 4 ; move 3 , 2 + ul ; v0 = 4 / ua )  | ( move 0 , ua ; move ua , ua + 4 ; move 3 , 4 - ul )  | ( move ua , 4 ; v0 = ul / ua ; move 3 , ua + 3 )  | ( v0 = 3 ; move ua , ul + v0 ; move v0 , v0 )  | ( move ua , 3 + ul ; ( v0 = 3 ; move v0 , v0 ) )  
[391] ( move 3 , 4 ; move ua , 3 )  | ( move 2 + ul , 4 ; move ua , 3 )  | ( move 3 , 4 ; move ua , 2 + ul )  | ( move 3 , 4 ; move ua , 4 - ul )  | ( move 3 , 3 + ul ; move ua , 2 + ul )  | ( move 2 + ul , 4 ; move ua , 3 - ua )  | ( move 3 , 4 ; move ua , 3 ; move 0 , 4 )  | ( v0 = 4 - ul ; move 3 , 4 ; move ua , v0 )  | ( move ul + ul , 4 ; ( move ul , ua ; move ua , 2 + ul ) )  
[392] ( move ua , 4 ; move 2 , 4 )  | ( move ua , 4 ; move 2 , 2 * 2 )  | ( move ua , 3 + ul ; move 2 , 4 )  | ( move ua , 4 ; move 2 , 3 + ul )  | ( move ua , 4 ; move ua / 3 , 4 )  | ( move ua , 3 + ul ; move 2 , ua + 4 )  | ( move ua , 4 ; move ul + ul , 3 + ul )  | ( pen ul ; move ua , 4 ; move ua / 3 , 4 )  | ( move ua , 4 ; move ul + ul , 4 ; pen ul )  | ( move 0 , 3 + ul ; move ua , 0 ; move 2 , 4 )  | ( ( move ua , 4 ; v0 = ua ) ; move 2 , 4 )  | ( move ua , 4 ; ( move 2 , 3 + ul ; v0 = ua ) )  | ( move ua , 3 + ul ; move 0 , ua + 4 ; move 2 , ua )  | ( ( move 0 , ua ; move ua , 4 ) ; move 2 , ua + 4 ; pen 0 )  
[393] ( move ua , 3 ; move 3 , 4 )  | ( move ua , ua + 3 ; move 3 , 4 - ua )  | ( move ua , 3 ; move 3 , 4 ; v0 = ul )  | ( move ua , 3 ; v0 = ul ; move 3 , 4 )  | ( move ua , 3 ; move 2 + ul , 4 ; pen ul )  | ( move ua , 3 ; ( move 3 , 4 ; pen 4 ) ; pen 2 + ul )  
[394] ( move 2 , 3 ; move 4 , ul )  | ( move 4 - 2 , 3 ; move 4 , ul )  | ( move 2 , 3 ; move 4 , ua + ul )  | ( move 2 , 4 - ul ; move 4 , ul )  | ( move ul + ul , 3 ; move 4 , ul )  | ( move 2 , 3 ; move 2 + 2 , 2 - ul )  | ( move ul + ul , 3 ; move 4 , ua + ul )  | ( move 2 , 3 ; move 4 , ul ; v0 = ua )  | ( pen ul / 2 ; move 2 , 3 ; move 4 , ul )  | ( move 2 , 3 ; move ul , ul ; move 3 , ua )  | ( move 2 , 3 ; ( move 4 , ua + ul ; v0 = ul ) )  
[395] ( move 3 , 4 ; move 2 , ul )  | ( move 2 + ul , 3 + ul ; move 2 , ul )  | ( move 3 , 3 + ul ; move ul + ul , ul )  | ( move 3 , 4 ; v0 = 3 ; move 2 , ul )  | ( ( move 3 , 4 ; move 2 , ul ) ; pen ul )  | ( v0 = ul ; move 3 , 4 ; move 2 , v0 )  | ( move 3 , 4 ; v0 = 4 * 3 ; move 2 , ul )  | ( move 0 , 2 ; move 3 , ul + ul ; move 2 , ul )  | ( move 3 , 4 ; ( move 2 , ul ; move 0 , ua + ul ) )  | ( v0 = 2 + 2 ; move 3 , v0 ; move 2 , ua + ul )  | ( v0 = ul ; ( move 3 , v0 * 4 ; move 2 , v0 ) )  
[396] ( move ul , 3 ; move 3 , 3 )  | ( move ul , 2 + ul ; move 3 , 3 )  | ( move ul , ua + 3 ; move 3 , 3 )  | ( move ul , 4 - ul ; move 3 , 3 )  | ( move 2 - ul , 3 ; move 4 - ul , 3 )  | ( move ul , 3 ; v0 = 0 ; move 3 , 3 )  | ( ( move ul , 3 ; move 3 , 3 ) ; pen 2 )  | ( move ul , 2 + ul ; move 2 + ul , ua + 3 )  | ( v0 = 3 ; move ul , v0 ; move v0 , 3 )  | ( move ul , 3 ; v0 = 3 ; move v0 , v0 )  | ( v0 = 3 ; move ul , v0 ; move v0 , v0 )  | ( move ul , 2 + ul ; move ul / 4 , 0 ; move 3 , 3 )  | ( v0 = 3 ; ( move ul , v0 ; move v0 , v0 ) )  | ( v0 = 3 ; move ul , ua + v0 ; move v0 , v0 )  | ( v0 = 2 + ul ; move ul , v0 ; move v0 , v0 )  
[397] ( move ul , 3 ; move 4 , 2 )  | ( move ul , 3 ; move 2 * 2 , 2 )  | ( move ul , 2 + ul ; move 4 , 2 )  | ( move ul , 3 ; move 4 , ua + 2 )  | ( pen ul ; move ul , 3 ; move 4 , 2 )  | ( move ul , 3 ; move 4 , 2 ; pen ul )  | ( move ul , 3 - ua ; move 4 , ul + ul )  | ( move ul , 3 ; move 4 , ul + ul ; pen ul )  | ( move ul , 3 ; move 0 , 2 - 4 ; move 4 , 4 )  | ( move ul , 3 ; v0 = 2 ; move v0 * v0 , v0 )  
[398] ( move 3 , 3 ; move ua , 4 )  | ( move 2 + ul , 3 ; move ua , 4 )  | ( move 3 , 2 + ul ; move ua , 4 )  | ( move ua / 2 , 3 ; move ua , 4 )  | ( move ul , 3 ; move 2 , ua * 4 ; move ua , 4 )  | ( ( move 2 + ul , 2 + ul ; move ua , 4 ) ; v0 = ul )  | ( move 3 , 3 ; ( move ua , 4 ; move 0 , ul ; v0 = 4 ) )  
[399] ( move 4 , 2 ; move ua , 4 )  | ( move 4 , ul + ul ; move ua , 4 )  | ( pen ul ; move 4 , 2 ; move ua , 4 )  | ( v0 = 3 ; ( move 4 , 2 ; move ua , v0 + ul ) )  | ( move 4 , 2 ; ( pen ul ; move ua , 4 ) ; v0 = 3 + ul )  
[400] ( move 4 , 2 ; move ul , 3 )  | ( move ua - 2 , 2 ; move ul , 3 )  | ( move 4 , 2 ; pen ul ; move ul , 3 )  | ( move 4 , 2 ; v0 = ul ; move v0 , 3 )  | ( move 4 , 2 ; pen ul + ul ; move 3 - 4 , 0 )  
[401] ( move 3 , ul ; move 4 , 2 )  | ( move 3 , ul ; move 4 , ua + 2 )  | ( move 2 + ul , ul ; move 4 , 2 )  | ( move 3 , ul ; move 3 + ul , 2 )  | ( move 3 , ul ; move 4 , 2 ; pen 2 )  | ( move 3 , ul ; move 2 + 2 , ul + ul )  | ( move 2 + ul , ul ; move 4 , ua + 2 )  | ( move 3 , ul ; move 0 , 2 ; move 4 , ua )  | ( pen ul ; ( move 3 , ul ; move 4 , 2 ) )  | ( move 3 , ul ; move 4 , ul + ul ; pen 0 )  | ( move 3 , ul ; move 4 , 2 - ua ; pen 2 - ul )  | ( move 3 , ul ; move 3 + ul , 4 / 2 ; pen ul )  | ( move ul + ul , ul ; move ul , ua ; move 4 , ul + ul )  | ( move 3 , ul ; ( move 2 + 2 , ul + ul ; pen ul ; pen 0 ) )  
[402] ( move 3 , 2 ; move 4 , ul )  | ( move 3 , ua + 2 ; move 4 , ul )  | ( move 2 + ul , 2 ; move 4 , ul )  | ( move 3 , 2 ; move 4 , ul - ua )  | ( move 3 , 2 ; pen ul ; move 4 , ul )  | ( move 3 , 4 / 2 ; move 4 , 2 - ul )  | ( move 3 , 2 ; move 4 , ul ; move 0 , ul )  | ( v0 = 4 ; move 3 , 2 ; move v0 , ul )  | ( move 3 , ul + ul ; move 0 , ul ; move 4 , 0 )  | ( move 3 , 4 - 2 ; move 3 + ul , ul ; v0 = ul )  | ( move 4 - ul , 2 ; move 4 , ua + ul ; v0 = ua )  | ( move 3 , 2 ; ( move ul , ul ; move 2 + ul , ua ) )  | ( v0 = ul ; ( move 3 , 2 ; move 4 / v0 , ul ) )  | ( move 3 , ul + ul ; ( v0 = ul ; move 2 * 2 , v0 ) )  
[403] ( move ul , 2 ; move 3 , 4 )  | ( move ul , 2 ; move 3 , ua + 4 )  | ( move ul , 2 ; move 3 , 3 + ul )  | ( move ul , 2 ; move 4 - ul , 4 )  | ( move ul , 2 ; pen ul ; move 3 , 4 )  | ( move ul , 2 ; move 4 - ul , 3 + ul )  | ( move 0 , ul ; move ul , ul ; move 3 , 4 )  | ( move ul , ul + ul ; pen ul ; move 3 , 4 )  | ( move ul , 2 ; move 3 , 2 * 2 ; v0 = ua )  | ( move ul , 2 ; move 0 , ul ; move 3 , ua + 3 )  | ( move 0 , ul ; move ul , ul ; move 3 , 3 + ul )  | ( move 0 , 0 ; move ul , 3 - ul ; move 3 , ua + 4 )  | ( v0 = 3 ; move ul , v0 - ul ; move v0 , 4 )  
[404] ( move 3 , 2 ; move ul , 4 )  | ( move 4 - ul , 2 ; move ul , 4 )  | ( move 3 , ul + ul ; move ul , 4 )  | ( move 3 , ul + ul ; move ul , 3 + ul )  | ( move 3 , 2 ; move ul , 4 ; pen 2 + ul )  | ( move 2 + ul , 2 ; v0 = ul ; move ul , 4 )  | ( move 3 , ul + ul ; move ul , 4 ; v0 = ul )  | ( pen ul ; move 2 + ul , ul + ul ; move ul , 4 )  
[405] ( move 2 , ua ; move 4 , 4 )  | ( move 2 , 0 ; move 4 , 2 + 2 )  | ( move 2 , 0 ; move 4 , 3 + ul )  | ( move 2 , ua * 4 ; move 4 , 4 )  | ( move 2 , ua ; move 4 , ua + 4 )  | ( move 2 , ua ; move 4 , 4 - ua )  | ( move ul + ul , 0 ; move 4 , 3 + ul )  | ( move 0 , ua ; move 2 , 0 ; move 4 , 4 )  | ( move 2 , 0 ; v0 = ua ; move 4 , 4 )  | ( move 2 , ua ; ( move 0 , 3 ; move 4 , ul ) )  | ( move ul + ul , ua ; move 4 , 4 ; pen 4 / ua )  | ( move 4 - 2 , 0 ; v0 = 4 ; move v0 , v0 )  | ( move 2 , 0 ; v0 = 4 ; move v0 , v0 - ua )  
[406] ( move ua , 2 ; move 4 , 4 )  | ( move ua , 2 ; move 4 , 3 + ul )  | ( move ua , 2 ; move 4 , 4 - ua )  | ( move ua , 2 ; move 0 , 3 ; move 4 , ul )  | ( move ua , 2 ; move 4 , 4 ; v0 = ul )  | ( move ua , 2 ; v0 = 4 ; move v0 , v0 )  | ( v0 = 4 ; move ua , 2 ; move v0 , ua + 4 )  | ( move ua , ul + ul ; move 4 , ua + 4 ; pen ul )  | ( move ua , 2 ; ( v0 = 4 ; move v0 , v0 ) )  | ( v0 = 3 + ul ; move ua , 2 ; move v0 , v0 )  | ( move ua , 3 - ul ; v0 = 4 ; move v0 , v0 )  | ( move ua , ul + ul ; v0 = 4 ; move v0 , v0 )  
[407] ( move 2 , 4 ; move ua , 4 )  | ( move 2 , 4 - ua ; move ua , 4 )  | ( move ul + ul , 4 ; move ua , 4 )  | ( move 2 , 3 + ul ; move ua , 3 + ul )  | ( move 2 - ul , 4 ; move ul , ua ; move ua , 4 )  | ( v0 = 2 ; move v0 , 4 ; move ua , ua + 4 )  
[408] ( move 3 , 4 ; move ul , 2 )  | ( move 3 , 4 ; move ul , 2 - ua )  | ( move 4 - ul , 4 ; move ul , 2 - ua )  | ( move 3 , 4 ; v0 = 3 ; move ul , 2 )  | ( move 3 , 4 ; v0 = 0 ; move ul , 2 + v0 )  | ( v0 = ul ; ( move 3 , 4 ; move v0 , 2 ) )  | ( move 3 , 4 ; v0 = ul ; move ul , v0 + v0 )  | ( v0 = 2 ; move 3 , v0 * v0 ; move ul , v0 )  | ( move 3 , 4 ; ( pen ul - 2 ; pen ul ) ; move ul , 2 )  
[409] ( move 4 , 3 ; move ul , 2 )  | ( move 4 , ua + 3 ; move ul , 2 )  | ( move 4 , 3 ; move ul , ua + 2 )  | ( move 4 , 3 ; move ul , ul + ul )  | ( move 4 , 3 ; move ul , 2 ; pen 0 )  | ( pen ul ; move 4 , 3 ; move ul , 2 )  | ( move 4 , ua + 3 ; move 2 - ul , 2 )  | ( move 2 , 3 ; move 2 , 0 ; move ul , ua + 2 )  | ( move 0 , ua ; ( move 4 , 3 ; move ul , 2 ) )  | ( ( move 4 , 3 ; move ul , 2 ) ; move 0 , ul )  | ( v0 = 2 ; move v0 + 2 , 3 ; move ul , v0 )  
[410] ( move 4 , ul ; move 3 , 2 )  | ( move 3 + ul , ul ; move 3 , 2 )  | ( move 4 , ua + ul ; move 3 , 2 )  | ( move 4 , ul ; move 3 , 3 - ul )  | ( move 4 , ul ; move 3 , ul + ul )  | ( move 4 , ul ; move 4 - ul , ua + 2 )  | ( move 3 + ul , ul ; move 4 - ul , 2 )  | ( move 3 + ul , ul ; move 3 , ul + ul )  | ( move 3 + ul , ul ; v0 = 3 ; move 3 , 2 )  | ( move 4 , ul ; move 3 , 2 ; v0 = ua + ul )  | ( ( move 4 , ua + ul ; move 3 , 2 - ua ) ; move 0 , ua )  
[411] ( move 2 , ul ; move 4 , 3 )  | ( move 2 , ul ; move 3 + ul , 3 )  | ( move 2 , ul ; move 4 , ua + 3 )  | ( move 2 , ul ; move 4 , 2 + ul )  | ( move 2 , ul ; move 4 , 3 ; pen ua )  | ( pen ul ; move 2 , ul ; move 4 , 3 )  | ( move 2 , ua + ul ; move 4 , 3 - ua )  | ( move ua / 3 , ua + ul ; move 4 , 3 )  | ( move ul + ul , ul - ua ; move 4 , 3 )  | ( move 2 , ul ; move 3 , 3 ; move ul , ua )  | ( move ul + ul , ul ; move 4 , 3 ; pen ua )  | ( move ul + ul , ua + ul ; move 4 , 4 - ul )  | ( move 4 / 2 , ul ; pen ul ; move 4 , 4 - ul )  | ( move 0 , ua + ul ; move 2 , 0 ; move 3 + ul , 3 )  | ( move ul , ul ; ( move ul , ua * 4 ; move 4 , 2 + ul ) )  
[412] ( move 4 , 3 ; move 2 , ul )  | ( move 4 , 3 ; move 2 , ul ; pen ua )  | ( move 4 , ua + 3 ; move 2 , ua + ul )  | ( move 3 + ul , 3 ; move ul + ul , ul )  | ( move 4 , 3 ; ( pen ul ; move 2 , ul ) )  | ( ( move 4 , 3 ; move 2 , ul ) ; v0 = 0 )  | ( move 4 , 2 + ul ; move ul + ul , ul - ua )  | ( move 4 , 3 ; move ul + ul , ul ; pen 3 - 2 )  | ( move 4 , 3 ; move ul + ul , ul ; v0 = ul )  
[413] ( move ua , 3 ; move 4 , 3 )  | ( move ua , 2 + ul ; move 4 , 3 )  | ( move ua , 3 ; move 4 , 4 - ul )  | ( ( v0 = 3 ; move ua , v0 ) ; move 4 , v0 )  
[414] ( move ua , 4 ; move 4 , 2 )  | ( move ua , 4 ; move 4 , ul + ul )  | ( move ua , ua + 4 ; move 4 , ul + ul )  | ( move ua , 3 + ul ; move 4 , 2 ; pen ua )  | ( v0 = 4 ; move ua , v0 ; move v0 , 2 )  | ( move ua , ua + 4 ; move 4 , ul + ul ; pen ul )  | ( move ua , ua + 4 ; move 4 / 2 , 2 ; move 2 , 0 )  
[415] ( move 2 , 4 ; move 3 , ul )  | ( move 2 , 3 + ul ; move 3 , ul )  | ( move 0 , 4 ; move 2 , ua ; move 3 , ul )  | ( move 2 , 3 + ul ; ( move 3 , ul ; pen 3 ) )  | ( move ul + ul , 4 ; v0 = ua ; move 3 , ul )  | ( move 3 - ul , 4 ; move 4 - ul , ul ; v0 = 4 )  | ( move 2 , 4 - ua ; v0 = 2 + ul ; move v0 , ul )  
[416] ( move 3 , 3 ; move 3 , ul )  | ( move 3 , 2 + ul ; move 3 , ul )  | ( move 2 + ul , 3 ; move 3 , ul - ua )  | ( move 3 , ua + 3 ; move 3 , ul - ua )  | ( move 3 , 3 ; move 3 , ul ; v0 = ua )  | ( pen ul ; move 3 , 3 ; move 3 , ua + ul )  | ( v0 = 3 ; move 3 , v0 ; move v0 , ul )  | ( move 3 , ua + 3 ; move ul , ul ; move 2 , 0 )  | ( v0 = 3 ; move v0 , v0 ; move v0 , ul )  | ( v0 = 2 + ul ; move v0 , 3 ; move v0 , ul )  | ( move 3 , 3 ; move 2 + ul , ul ; v0 = ul - 2 )  | ( move 4 - ul , 3 ; move 0 , ul ; move 2 + ul , ua )  
[417] ( move 4 , ua ; move 3 , 3 )  | ( move 2 + 2 , 0 ; move 3 , 3 )  | ( move 4 , 0 - ua ; move 3 , 3 )  | ( move 2 * 2 , ua ; move 3 , 3 )  | ( move 4 , ua * 3 ; move 4 - ul , 3 )  | ( move 4 , 0 ; move 3 , 3 ; move 0 , ua )  | ( move 4 , ua ; move 3 , 3 ; v0 = 0 )  | ( move 4 , ua ; move 3 , 3 ; v0 = 3 )  | ( move 4 , ua ; move 3 , 3 ; move 0 , ua )  | ( ( move 4 , ua ; move 3 , 3 ) ; v0 = ul )  | ( move 3 + ul , 0 ; move 2 , 3 ; move ul , ua )  | ( move 4 , ua ; move 4 - ul , ua + 3 ; pen 4 )  | ( move 4 , ua ; move 0 , ul ; move 3 , ul + ul )  | ( move 4 , 0 ; v0 = 3 ; move v0 , ua + v0 )  | ( move 4 , ua ; ( move 2 + ul , 3 ; v0 = 0 ) )  | ( move 2 + 2 , ua ; move 0 , ua ; move ua / 2 , 3 )  | ( move 3 + ul , ua ; move 3 , 3 ; move 0 , 3 + ul )  | ( move 4 , ua + ua ; ( move 3 , 3 ; v0 = ul ) )  | ( move 4 , ua * 2 ; ( v0 = 3 ; move v0 , v0 ) )  | ( move 4 , ua * 4 ; v0 = 3 ; move v0 , v0 + ua )  
[418] ( move ul , 4 ; move 3 , 2 )  | ( move ul , 4 ; move 3 , ul + ul )  | ( v0 = 4 ; move ul , v0 ; move 3 , 2 )  | ( pen ul ; move ul , 4 ; move 3 , ul + ul )  | ( move ul , 4 ; move 3 , 2 ; v0 = 4 + 3 )  | ( move ul , 4 ; ( move ul , 2 ; move 2 , ua ) )  
[419] ( move 3 , 3 ; move ul , 3 )  | ( move 2 + ul , 3 ; move ul , 3 )  | ( move 3 , 3 ; move ul , 2 + ul )  | ( move 3 , 2 + ul ; move ul , 3 )  | ( move 3 , 3 ; move ul , 4 - ul )  | ( move 3 , 3 ; move ul , 3 ; pen 0 )  | ( move 2 + ul , 2 + ul ; move ul , 3 )  | ( move 3 , 3 ; ( move 2 - ul , 3 ; pen ul ) )  | ( move 4 - ul , 3 ; pen 2 / 4 ; move ul , 3 )  | ( v0 = 3 ; move v0 , v0 ; move ul , v0 )  | ( move 2 + ul , 3 ; v0 = 3 ; move ul , v0 )  | ( v0 = 3 ; move v0 , 2 + ul ; move ul , v0 )  | ( v0 = 2 + ul ; move 3 , v0 ; move ul , v0 )  | ( v0 = 3 ; move v0 , v0 - ua ; move ul , v0 )  | ( v0 = 3 ; move ua - v0 , v0 ; move ul , v0 )  | ( v0 = 4 - ul ; move v0 , v0 ; move ul , v0 )  | ( v0 = 3 ; move v0 , v0 ; move v0 - 2 , v0 )  
[420] ( move 4 , ul ; move 2 , 3 )  | ( move 4 , ul ; move 2 , 2 + ul )  | ( move 4 , ua + ul ; move 2 , 3 )  | ( move 4 , ul ; move 2 , 3 ; pen ua )  | ( move 4 , 2 - ul ; move 2 , 2 + ul )  | ( move 4 , ul ; move ua / 3 , ua + 3 )  | ( move 4 , ua + ul ; pen ul ; move 2 , 3 )  | ( move 4 , ul ; move ul + ul , 3 ; pen 3 )  | ( move 3 + ul , ul ; move 2 , 2 + ul ; pen 0 )  | ( move 4 , ua + ul ; move 2 , 2 + ul ; v0 = 2 )  | ( ( move 4 , ul ; move 2 , 3 ) ; v0 = ul + ul )  
[421] ( move 4 , ul ; move 2 , 4 )  | ( move 3 + ul , ul ; move 2 , 4 )  | ( move 4 , ua + ul ; move 2 , 4 )  | ( move 4 , ul ; move 3 - ul , 4 )  | ( move 4 , ul ; move ua / 3 , 4 )  | ( move 4 , ua + ul ; move 2 , 4 - ua )  | ( move 4 , ul ; move ul , 4 ; move ul , ua )  | ( v0 = 4 ; move v0 , ul ; move 2 , v0 )  | ( move 2 + 2 , ul ; move ul , 4 ; move ul , ua )  | ( move 3 , ul ; move ul , ua ; move ua - 4 , 4 )  | ( pen ul ; ( move 4 , ul ; move ul + ul , 4 ) )  | ( move 4 , ua + ul ; ( v0 = 0 ; move 2 , 4 ) )  | ( move 3 + ul , ua + ul ; move ul + ul , ua + 4 )  | ( ( pen 3 / 4 ; move 4 , ul ) ; move 2 , ua + 4 )  | ( move 4 , ul - ua ; move 2 , 3 + ul ; v0 = 0 )  | ( ( move 4 , ua + ul ; move ul , 4 ) ; move ul , ua )  | ( ( move 4 , ul ; move 2 , 4 ; v0 = ul ) ; pen ua )  | ( move 4 , ul ; ( move ua / 3 , 3 + ul ; v0 = ua ) )  | ( ( move 4 , ul ; move ua / 3 , 4 - ua ) ; v0 = ua )  | ( move 4 , ul ; move 2 , 4 ; ( move 0 , ua ; v0 = ul ) )  
[422] ( move 3 , ul ; move 4 , 3 )  | ( move 3 , ul ; move 2 * 2 , 3 )  | ( move 3 , ul ; move 4 , 2 + ul )  | ( move 2 + ul , ul ; move 4 , 3 )  | ( move 3 , ul ; move 4 , 3 ; pen ul )  | ( pen ul ; move 3 , ul ; move 4 , 3 )  | ( move 3 , ul ; move 4 , 3 ; pen ua + 2 )  | ( move 3 , ul ; move 4 , 3 ; pen 4 - ul )  | ( ( move 3 , ul ; move 4 , 3 ) ; pen ul )  | ( move 4 - ul , ul ; pen ul ; move 4 , 3 )  | ( move 2 + ul , ul ; move 3 + ul , 2 + ul )  | ( move 0 , ua ; ( move 3 , ul ; move 4 , 3 ) )  | ( move ul , ua + ul ; move 2 , 0 ; move 4 , 3 )  | ( v0 = 3 ; move v0 , ul ; move v0 + ul , ua + v0 )  
[423] ( move 4 , 3 ; move 3 , ul )  | ( move 4 , 3 ; move 3 , ua + ul )  | ( move 4 , 3 ; move 3 , ul - ua )  | ( move 4 , 3 ; move 4 - ul , ul )  | ( move 3 + ul , 3 ; move 2 + ul , ul )  | ( move 4 , 3 ; move 4 - ul , ul - ua )  | ( move 4 , 3 ; move 2 , ul ; move ul , ua )  | ( move 4 , 3 ; ( v0 = 3 ; move v0 , ul ) )  | ( move 0 , 3 ; ( move 4 , ua ; move 3 , 2 - ul ) )  | ( move 4 , 3 - ua ; ( move ul , ul ; move 2 , 0 ) )  | ( move 4 , 3 - ua ; v0 = 3 + ul ; move 3 , ul )  | ( move 3 + ul , 3 ; ( move 3 , ul ; pen ua + 2 ) )  | ( ( pen ul ; move 4 , 3 ) ; move 3 , ul ; v0 = ua )  | ( move ul / ua , ul ; ( move 4 , 2 ; move 3 , ua + ul ) )  
[424] ( move 3 , 3 ; move ul , 4 )  | ( move 3 , 4 - ul ; move ul , 4 )  | ( move 4 - ul , 3 ; move ul , 4 )  | ( move 3 , ua + 3 ; move ul , 2 * 2 )  | ( move 3 , 3 ; v0 = ul ; move ul , 4 )  | ( move 2 + ul , 3 ; pen 2 - ul ; move ul , 4 )  | ( move 3 , 2 + ul ; move 0 , 4 ; move 2 - ul , ua )  
[425] ( move 2 , 4 ; move 4 , ul )  | ( move 2 , ua + 4 ; move 4 , ul )  | ( move 2 , 4 ; move 4 , ua + ul )  | ( move 3 - ul , 4 ; move 4 , ul )  | ( move 2 , 4 ; move 4 , ul ; v0 = ul )  | ( move ul , 4 ; move ul , ua ; move 4 , ul )  | ( v0 = 4 ; move 2 , v0 ; move v0 , ul )  | ( ( move 2 , 4 ; move 2 + 2 , ul ) ; v0 = 3 )  | ( move ul + ul , 4 ; v0 = ul - ua ; move 4 , ul )  | ( move ul + ul , 4 ; move 3 + ul , ul ; pen ua * ua )  | ( ( v0 = 4 ; move 4 - 2 , 4 ) ; move v0 , ua + ul )  
[426] ( move 4 , ul ; move 4 , 2 )  | ( move 3 + ul , ul ; move 4 , 4 - 2 )  | ( move 3 + ul , ul ; move 4 , ua + 2 )  | ( move 4 , ul - ua ; move 3 + ul , 2 )  | ( move 4 , ul ; ( move 4 , 3 - ul ; pen ul ) )  | ( move 4 , ul ; v0 = 3 + ul ; move v0 , 2 )  | ( move 4 , ul ; ( move 4 , 2 ; pen 2 ) ; pen ua )  | ( move 4 , ul ; move ul , 2 ; ( move 3 , 0 ; pen 4 ) )  | ( pen ul / ua ; move 4 , ul ; ( move 4 , 2 ; pen 0 ) )  | ( move 4 , ul ; move 3 + ul , 3 - ul ; v0 = ua + 2 )  
[427] ( move 3 , 4 ; move ul , 3 )  | ( move 2 + ul , 4 ; move ul , 3 )  | ( move 3 , 4 ; move ul , 2 + ul )  | ( move 3 , 3 + ul ; move ul , 3 )  | ( move 3 , 4 ; move ul , ua + 3 )  | ( move 3 , 4 - ua ; move ul , 3 )  | ( move 3 , 4 ; move ul , 3 ; pen 0 )  | ( move 2 + ul , 4 ; move ua / 4 , 3 )  | ( move ul , 4 ; move 2 , 0 ; move ul , 3 )  | ( move ul , 4 ; move 2 , ua ; move ul , 3 )  | ( move 3 , 3 + ul ; pen ul ; move ul , 3 )  | ( v0 = ul ; move 3 , 4 ; move v0 , 3 )  | ( ( move 3 , 4 ; move ul , 4 - ul ) ; pen 4 )  | ( move 2 , 4 ; ( move ul , ua ; move ul , 3 ) )  | ( pen ul ; ( move 3 , 3 + ul ; move ul , 3 ) )  | ( move ul + ul , 4 ; move ul , ua ; move ul , 3 )  | ( v0 = 3 ; move v0 , ul + v0 ; move ul , v0 )  
[428] ( move 3 , ul ; move 3 , 4 )  | ( move 3 , ul ; move 2 + ul , 4 )  | ( move 3 , ul ; move 3 , 3 + ul )  | ( move 3 , ul - ua ; move 3 , 4 )  | ( move 3 , ul ; move 2 + ul , ua + 4 )  | ( move 3 , ul ; v0 = 0 ; move 3 , 4 )  | ( move 3 , ul - ua ; move 2 + ul , 3 + ul )  | ( move 3 , ul ; move 3 , 3 + ul ; pen 3 * 2 )  | ( move 3 , ul ; v0 = ul + ul ; move 3 , 4 )  | ( v0 = 2 ; move 3 , ul ; move 3 , 2 + v0 )  | ( move 3 , ul ; move 4 / 2 , ua + 4 ; move ul , ua )  | ( v0 = ul ; move 4 - v0 , v0 ; move 3 , v0 * 4 )  
[429] ( move ua , 4 ; move 4 , 3 )  | ( move 4 + 2 , 4 ; move 4 , 3 )  
[430] ( move 4 , 2 ; move 4 , ul )  | ( move 4 , 2 ; move 4 , ua + ul )  | ( move 4 , ua + 2 ; move 4 , ul )  | ( move 4 , ul + ul ; move 4 , ul )  | ( pen ul ; move 4 , 2 ; move 4 , ul )  | ( move 4 , 2 ; pen ul ; move 4 , ul )  | ( move 3 + ul , 2 ; move 4 , 2 - ul )  | ( pen ul ; move 3 + ul , 2 ; move 2 + 2 , ul )  | ( move 4 , ua + 2 ; move 4 , ul ; pen 4 - ul )  | ( move 4 , 2 ; move ul , ul ; move 2 + ul , ua )  | ( ( move 4 , 2 ; v0 = 3 ) ; move v0 + ul , ul )  
[431] ( move 4 , 2 ; move ul , 4 )  | ( move 3 + ul , 2 ; move ul , 4 )  | ( move 4 , 2 ; move ul , 3 + ul )  | ( move 4 , 2 - ua ; move ul , 4 )  | ( move 4 , ul + ul ; move ul , 4 )  | ( move 3 + ul , 2 ; move ul , 4 - ua )  | ( move ul , 2 ; move 3 , 0 ; move ul , 4 )  | ( move ul , 2 ; move 3 , ua ; move ul , 4 )  | ( move 4 , ul + ul ; move ul , 4 ; pen ul )  | ( move 4 , 2 ; move ul , 4 ; v0 = 3 - 4 )  | ( move 3 , 2 ; move ul , ua * 3 ; move ul , 4 )  | ( move 0 , 3 ; move 2 + 2 , 0 - ul ; move ul , 4 )  | ( v0 = 4 ; move v0 , 3 - ul ; move ul , v0 )  | ( move 4 , ul + ul ; move ul , ua + 4 ; v0 = 3 + 2 )  | ( ( move ul / 4 , ua ; move 4 , ua + 2 ) ; move ul , 4 )  
[432] ( move ul , 3 ; move 3 , 4 )  | ( move ul , ua + 3 ; move 3 , 4 )  | ( move ul , 2 + ul ; move 3 , 4 )  | ( move ul , 3 ; move 3 , 4 - ua )  | ( move ul , 3 ; pen ul ; move 3 , 4 )  | ( move ul , 3 ; move 4 - ul , 3 + ul )  | ( ( move ul , 3 ; move 3 , 4 ) ; pen 3 )  | ( move ul , 3 ; move 3 , 4 ; v0 = ua )  | ( move 3 - 2 , 3 ; v0 = ul ; move 3 , 4 )  | ( move ul , ua + 3 ; v0 = ul ; move 3 , 4 )  | ( v0 = 3 ; ( move ul , v0 ; move v0 , 4 ) )  | ( move ul , 3 ; move 3 , 3 + ul ; move 0 , 4 - ul )  | ( move ul , 2 + ul ; ( move 0 , 3 ; move 3 , ul ) )  | ( ( move ul , 3 ; move ul , 4 ) ; move 2 , ua * 3 )  
[433] ( move 2 , ul ; move 4 , 4 )  | ( move 2 , ul ; move 4 , 3 + ul )  | ( move 2 , ul ; move 3 + ul , 4 )  | ( move 2 , ul ; move 4 , 4 - ua )  | ( move 3 - ul , ul ; move 4 , 4 )  | ( move ul + ul , ul ; move 4 , 4 )  | ( move 2 , ul ; move 4 , 4 ; pen ua )  | ( move 2 , ua + ul ; move 4 , 2 + 2 )  | ( move ul , ul ; move ul , ua ; move 4 , 4 )  | ( v0 = 4 ; move 2 , ul ; move v0 , v0 )  | ( ( move 2 , ul ; pen ul ) ; move 3 + ul , 4 )  | ( move ul + ul , ul ; pen ul ; move 4 , ua + 4 )  | ( move 2 , ul ; ( pen ul ; pen ul ; move 4 , 4 ) )  | ( v0 = 4 ; ( move 2 , ul ; move v0 , v0 ) )  | ( move 2 , ua + ul ; v0 = 4 ; move v0 , v0 )  | ( move 2 , ul ; move 4 , ua + 4 ; v0 = 2 - ua )  | ( move 3 - ul , ul ; ( move 0 , 3 ; move 4 , ul ) )  | ( move 2 , ul ; ( move 4 , 4 ; pen ul ; v0 = 4 + ul ) )  | ( ( move 2 , ul ; move 4 , 3 + ul ) ; pen ua ; pen 0 - 2 )  
[434] ( move ul , 4 ; move 4 , 2 )  | ( move ul , 3 + ul ; move 4 , 2 )  | ( move ul , 4 ; move 4 , ul + ul )  | ( move 3 - 2 , 4 ; move 4 , ul + ul )  | ( move ul , 3 + ul ; move 4 , ul + ul )  | ( pen ul ; move ul , ua + 4 ; move 4 , 2 )  | ( move ul , 4 ; v0 = 4 ; move v0 , 2 )  | ( move ul , 4 ; move 3 + ul , 2 - ua ; pen ul )  | ( move ul , ua + 4 ; v0 = 4 ; move v0 , 2 )  | ( move ul , 4 ; v0 = 3 - ul ; move 4 , v0 )  
[435] ( move 4 , 3 ; move ua , 4 )  | ( move 4 , 2 + ul ; move ua , 4 )  | ( move 3 + ul , 3 ; move ua , 4 )  | ( move 4 , 3 ; move ua , 3 + ul )  | ( move 4 , 3 ; move ua , 4 ; pen ul )  | ( move 4 , 3 ; v0 = 4 ; move ua , 4 )  | ( move 4 , 3 ; v0 = 4 ; move ua , v0 )  | ( move 3 + ul , 3 ; move ua , 4 ; v0 = ua )  | ( move 3 + ul , 3 ; v0 = 3 + ul ; move ua , v0 )  | ( v0 = ua ; ( move 4 , 3 ; move v0 , 4 + v0 ) )  
[436] ( move ua , 4 ; move 3 , 4 )  | ( move ua , 3 + ul ; move 3 , 4 )  | ( move ua , 4 - ua ; move 3 , 4 )  | ( move ua , 4 ; move 2 + ul , ua + 4 )  | ( v0 = 4 ; ( move ua , 4 ; move 3 , v0 ) )  | ( v0 = 3 ; move ua , v0 + ul ; move v0 , ul + v0 )  
[437] ( move 3 , 4 ; move 3 , ul )  | ( move 4 - ul , 4 ; move 3 , ul )  | ( move 3 , 4 ; move 3 , ul ; pen 4 - ul )  | ( move 3 , 4 ; ( move 3 , ul ; v0 = ul ) )  | ( move 3 , 4 - ua ; move 3 , ul ; v0 = ua )  | ( ( v0 = 3 ; move v0 , 4 ) ; move v0 , ul )  | ( v0 = 3 ; move v0 , v0 + ul ; move v0 , ul )  | ( ( move 3 , 2 + 2 ; move 3 , ul ) ; v0 = 3 - ul )  | ( v0 = 4 - ul ; move v0 , ul + v0 ; move v0 , ul )  
[438] ( move 3 , 4 ; move ua , 4 )  | ( move 3 , 4 ; move ua , ua + 4 )  | ( move 3 , 4 ; move ua , 4 ; move ul , 3 )  | ( move ul , 2 + 2 ; move 2 , 0 ; move ua , 4 )  | ( v0 = 4 ; move 3 , v0 ; move ua , v0 )  
[439] ( move 4 , 4 ; move ul , 2 )  | ( move 4 , 3 + ul ; move ul , 2 )  | ( move 4 , 4 ; move ul , ua + 2 )  | ( move 4 , ua + 4 ; move 2 - ul , 2 )  | ( move 3 + ul , ua + 4 ; move ul , 2 )  | ( move 4 , 4 ; move 2 - ul , ul + ul )  | ( move 4 , ua + 4 ; move ul , ul + ul )  | ( move 4 , 4 ; move ul , 2 ; v0 = 3 )  | ( move 4 , 4 - ua ; move ul , 2 ; pen 0 )  | ( move 4 , 4 ; v0 = 2 ; move ul , v0 )  | ( move 4 , 4 ; move ul , ul + ul ; v0 = ul )  | ( v0 = ul - ua ; move 4 , 4 ; move ul , ul + v0 )  | ( ( move 4 , 4 ; move 0 , ul ) ; pen ul ; move ul , ul )  | ( move 2 * 2 , ua + 4 ; v0 = ul ; move ul , ul + v0 )  | ( ( move 3 , 4 ; move ul , ua * 4 ; move ul , 2 ) ; pen ua )  
[440] ( move ua , 3 ; move 4 , 4 )  | ( move ua , 3 ; move 3 + ul , 4 )  | ( move ua , 3 ; move 4 , 3 + ul )  | ( move ua , 3 ; move 4 , 4 ; move 0 , ul )  | ( move ua , 3 ; move ul , 3 + ul ; move 3 , 0 )  | ( move ua , 3 ; v0 = 3 + ul ; move v0 , v0 )  | ( move ua , 3 - ua ; v0 = 4 ; move v0 , v0 )  | ( ( move ua , 2 + ul ; v0 = ul ) ; move 4 , 4 )  
[441] ( move ul , 2 ; move 4 , 4 )  | ( move ul , ua + 2 ; move 4 , 4 )  | ( move ul , 2 ; move 4 , 3 + ul )  | ( pen ul ; move ul , 2 ; move 4 , 4 )  | ( move ul , ul + ul ; move 3 + ul , ua + 4 )  | ( move ul , 2 ; move 0 , 3 + ul ; move 4 , 0 )  | ( move ul , 2 ; v0 = 4 ; move v0 , v0 )  | ( ( move ul , 2 ; v0 = 4 ) ; move v0 , 4 )  | ( move ul , 2 ; ( v0 = 4 ; move v0 , v0 ) )  | ( move ul , 2 ; v0 = 3 + ul ; move v0 , v0 )  | ( move ul , ul + ul ; v0 = 4 ; move v0 , ua + v0 )  
[442] ( move 4 , ul ; move 3 , 3 )  | ( move 4 , ua + ul ; move 3 , 3 )  | ( move 4 , ul ; move 3 , 2 + ul )  | ( move 4 , ul - ua ; move 3 , 3 )  | ( move 4 , ul ; move 3 , 4 - ul )  | ( move 4 , ul ; move 3 , 3 ; pen ul )  | ( move 4 , ul ; move 4 - ul , ua + 3 )  | ( move 4 , ul ; v0 = ua ; move 3 , 3 )  | ( move 3 + ul , ul ; move 3 , 3 ; pen 2 )  | ( move 3 + ul , ul ; move 2 , 3 ; move ul , 0 )  | ( move ul , ul ; move 3 , ua ; move 3 , 2 + ul )  | ( move 4 , ul ; ( v0 = 3 ; move 3 , v0 ) )  | ( move 4 , ul ; v0 = 2 + ul ; move v0 , 3 )  | ( move 4 , ul ; v0 = 3 ; move v0 , ua + v0 )  | ( move 4 , ua + ul ; v0 = ul ; move 3 , 4 - v0 )  | ( move 4 , ul ; ( move 2 + ul , 3 ; v0 = 4 * 4 ) )  | ( move 4 , ul ; ( v0 = 4 - ul ; move v0 , v0 ) )  | ( ( move 4 , ul ; move 3 , 3 ; move 0 , ua ) ; v0 = ul )  
[443] ( move 4 , 4 ; move 2 , ul )  | ( move 4 , 2 * 2 ; move 2 , ul )  | ( move 4 , 4 ; move 2 , ua + ul )  | ( move 4 , 3 + ul ; move 2 , ul )  | ( move 4 , 4 ; move ul + ul , ul )  | ( move 4 , 4 ; ( move 0 , 0 ; move 2 , ul ) )  | ( move 4 , 4 ; ( move 2 , ul ; v0 = ua ) )  | ( move 4 , 4 ; v0 = 0 ; move 2 + v0 , ul )  | ( ( move 4 , ua + 4 ; v0 = 4 ) ; move 2 , ul )  | ( v0 = 2 ; move 4 , v0 * v0 ; move v0 , ul )  | ( ( move 4 , 2 * 2 ; move 2 , ul ) ; move 0 , 3 / ua )  
[444] ( move 3 , 3 ; move 4 , ul )  | ( move 3 , 3 ; move 3 + ul , ul )  | ( move 3 , 3 ; move 0 , ul ; move 4 , ua )  | ( move 3 , 3 - ua ; move 3 + ul , 2 - ul )  | ( ( move 2 + ul , 3 ; move 4 , ul ) ; move 0 , 4 ; pen ul )  | ( ( move 2 + ul , 3 ; v0 = 4 ) ; move 4 , ul ; pen ua )  
[445] ( move 4 , 4 ; move ul , 3 )  | ( move 4 , 4 ; move 3 / 2 , 3 )  | ( move 4 , 4 ; move 2 , 3 ; pen ua )  | ( move 3 + ul , 2 * 2 ; move 2 , 3 )  | ( pen ul ; move 4 , 2 + 2 ; move ul , 3 )  | ( move 4 , 4 ; move ul + ul , 3 ; v0 = 3 )  
[446] ( move 4 , ul ; move 3 , 4 )  | ( move 4 , ul ; move 3 , 2 + 2 )  | ( move 3 + ul , ul ; move 3 , 4 )  | ( move 4 , ua + ul ; move 3 , 4 )  | ( move 3 + ul , ul ; move 3 , 4 ; pen ul )  | ( move 4 , ul ; v0 = 3 ; move v0 , 4 )  | ( v0 = 3 ; move 4 , ul ; move v0 , 4 )  | ( v0 = 4 ; move v0 , ul ; move 3 , v0 )  | ( move 2 , ul ; move 2 , ua * 3 ; move 3 , 4 )  | ( move 4 , ul ; move 3 , 3 + ul ; v0 = ua )  | ( v0 = 4 ; move 4 , ul - ua ; move 3 , v0 )  | ( move 3 + ul , ul ; ( move 2 , 4 ; move ul , 0 ) )  | ( move 4 , ul ; ( move ul , 4 ; move 2 , ua ) ; pen ua )  | ( move 4 , ul ; ( pen ul ; pen ul ) ; move 2 + ul , 4 )  | ( ( v0 = 4 ; move v0 , ul ) ; move v0 - ul , v0 )  
[447] ( move 4 , 4 ; move ua , 4 )  | ( move 4 , 4 ; move ua , 4 ; v0 = 4 )  | ( move 4 , 4 ; move ua , 4 ; v0 = ul )  | ( move 4 , 3 + ul ; move ua , 4 ; v0 = 4 )  | ( ( move 4 , 4 ; move ua , 4 ) ; v0 = ua )  | ( v0 = 4 ; move v0 , v0 ; move ua , v0 )  
[448] ( move 3 , 4 ; move 4 , ul )  | ( move 2 + ul , 4 ; move 4 , ul )  | ( move 3 , 4 ; move 3 + ul , ul )  | ( move 4 - ul , 4 ; move 4 , ul )  | ( move 3 , 4 ; move 4 , ul ; v0 = 0 )  | ( pen ul ; move 3 , ua + 4 ; move 4 , ul )  | ( pen ul ; move 3 , 4 ; move 3 + ul , ul )  | ( pen ul / 4 ; move 3 , 4 ; move 4 , ul - ua )  | ( move ul , 4 ; move ul + ul , 0 ; move 4 , ul )  | ( move 3 , ua + 4 ; ( move 4 , ul ; pen ua ; pen 4 ) )  | ( ( v0 = ul ; move v0 * 3 , 4 ) ; move 4 , v0 )  | ( v0 = 3 ; move v0 , 4 ; move v0 + ul , ua + ul )  | ( ( pen ul / 4 ; move 3 , 4 ; move 4 , ul ) ; v0 = ul )  
[449] ( move ul , 4 ; move 3 , 4 )  | ( move 2 - ul , 4 ; move 3 , 4 )  | ( move ul , 4 ; move 3 , 3 + ul )  | ( move ul , 4 ; move 4 - ul , 4 )  | ( move ul , 4 - ua ; move 2 + ul , 4 )  | ( move ul , ua + 4 ; move 4 - ul , 4 )  | ( move ul , 4 ; move 2 + ul , 4 ; pen ul )  | ( move ul , 4 ; move 3 , 2 * 2 ; pen 2 + ul )  | ( ( pen ul ; move ul , 4 ) ; move 3 , 2 * 2 )  | ( move ul , 4 ; move 3 , ua + 4 ; v0 = ua )  | ( move ul , 4 ; v0 = ua ; move v0 / 2 , 4 )  | ( move ul , 4 ; ( move 0 , 4 ; move 4 - ul , 0 ) ; pen 0 )  
[450] ( move 4 , 3 ; move ul , 4 )  | ( move 4 , 3 ; move ul , ua + 4 )  | ( move 3 + ul , 3 ; move ul , 4 )  | ( move 4 , 4 - ul ; move ul , 3 + ul )  | ( move 4 , 3 ; move ul , 4 ; move 0 , 0 )  | ( move 4 , 3 ; move ul , 4 ; pen ul - ua )  | ( move 4 , 3 ; move ul , 4 ; move 0 , ul + ul )  
[451] ( move 4 , 3 ; move 4 , ul )  | ( move 4 , ua + 3 ; move 4 , ul )  | ( move 4 , 3 ; move 4 , ua + ul )  | ( move 3 + ul , 3 ; move 4 , ul )  | ( move 4 , 3 ; move 3 + ul , ul )  | ( move 4 , 3 - ua ; move 4 , ul )  | ( move 4 , 2 + ul ; move 3 + ul , ul )  | ( move 4 , 3 ; move 4 , ua + ul ; pen ul )  | ( move 3 + ul , 3 ; v0 = 4 ; move v0 , ul )  | ( move 4 , 2 + ul ; v0 = 4 ; move v0 , ul )  | ( ( v0 = 4 ; move v0 , 3 ) ; move v0 , ul )  | ( ( move 4 , 2 + ul ; move 4 , ul ) ; v0 = 0 )  | ( move 4 , 3 ; move 3 + ul , ul ; v0 = ua + ua )  | ( move 3 + ul , 4 - ul ; move 4 , ul ; v0 = ul )  | ( v0 = 4 ; move v0 , v0 - ul ; move v0 , ul )  | ( move 4 , 3 ; ( move 4 , ul ; move 0 , ul ; pen ul ) )  | ( ( move 3 + ul , 3 ; move 4 , ul ; v0 = ua ) ; pen ul )  
[452] ( move 3 , ul ; move 4 , 4 )  | ( move 2 + ul , ul ; move 4 , 4 )  | ( move 3 , ul ; move 4 , 4 - ua )  | ( move 3 , ul ; move 4 , 2 * 2 ; pen 4 )  | ( move 3 , ul ; pen ul ; move 4 , 3 + ul )  | ( v0 = 4 ; move 3 , ul ; move v0 , v0 )  | ( move 3 , ul ; v0 = 4 ; move v0 , v0 )  | ( move 4 - ul , ul ; move 4 , 4 ; pen 2 + 2 )  | ( move 4 - ul , ul ; move 4 , 2 + 2 ; v0 = 2 )  | ( move 3 , ul ; ( move 3 , ua + 4 ; move ul , 0 ) )  | ( move 2 + ul , ul ; move 4 , 4 ; v0 = ul + ul )  | ( ( move 3 , ul ; move 4 , 3 + ul ) ; pen ua + ul )  | ( v0 = 4 ; move 3 , v0 / 4 ; move 2 * 2 , v0 )  | ( v0 = 4 ; ( move 3 , ul - ua ; move v0 , v0 ) )  | ( move 3 , ul ; ( move 0 , 4 - ua ; move 4 , ua ) ; pen ua )  
[453] ( move ul , 3 ; move 4 , 4 )  | ( move ul , 3 ; move 3 + ul , 4 )  | ( move ul , 2 + ul ; move 2 + 2 , 4 )  | ( move ul , 3 ; move 3 + ul , ua + 4 )  | ( move ul , 3 ; move 3 + ul , 4 - ua )  | ( move ul , 3 - ua ; move 4 , 4 - ua )  | ( move 3 - 2 , ua + 3 ; move 4 , ua + 4 )  | ( move ul , 3 ; v0 = 4 ; move v0 , v0 )  | ( ( v0 = 4 ; move ul , 3 ) ; move 4 , v0 )  | ( ( move ul , 3 ; v0 = 4 ) ; move v0 , v0 )  | ( move ul , 3 ; v0 = 3 + ul ; move v0 , v0 )  | ( move ul , 3 ; move 0 , 3 ; move 3 + ul , ul - ua )  | ( v0 = ul ; v1 = ua ; ( move ul , 3 ; move 4 , 4 ) )  | ( move ul , 3 ; ( pen ul ; move 4 , ua + 4 ; pen ua + 4 ) )  
[454] ( move ua , 4 ; move 4 , 4 )  | ( move ua , 3 + ul ; move 4 , 4 )  | ( move ua , ua + 4 ; move 3 + ul , 4 )  | ( move 0 , 4 ; ( move ua , 0 ; move 4 , 4 ) )  | ( v0 = 4 ; move ua , v0 ; move 4 , v0 )  | ( v0 = 4 ; move ua , v0 ; move v0 , 4 )  | ( ( move ua , 4 ; move 4 , 4 ) ; v0 = ua )  | ( v0 = 4 ; move ua , v0 ; move v0 , v0 )  | ( v0 = 2 + 2 ; move ua , v0 ; move v0 , 4 )  | ( ( move ua , 4 ; v0 = 4 ) ; move v0 , v0 )  | ( v0 = 4 ; move ua , 3 + ul ; move v0 , v0 )  | ( move ua , 4 ; move 4 , 3 + ul ; move 4 - ua , ua )  | ( move ua , ua + 4 ; move 3 + ul , ua + 4 ; pen ua )  | ( v0 = 4 ; move ua , ua + v0 ; move v0 , v0 )  | ( move ua , 3 + ul ; move 3 + ul , ua + 4 ; pen ua - 4 )  
[455] ( move 4 , 4 ; move 3 , ul )  | ( move 4 , 4 ; move 2 + ul , ul )  | ( move 4 , 4 ; move 3 , ul ; pen ua )  | ( move 4 , 4 ; move 3 , ul ; v0 = 0 )  | ( pen ul ; move 4 , 4 ; move 3 , ua + ul )  | ( pen ul ; move 4 , 3 + ul ; move 4 - ul , ul )  | ( move 4 , 3 + ul ; v0 = 3 ; move v0 , ul )  | ( move 4 , ua + 4 ; ( move 0 , ul ; move 3 , 0 ) )  | ( ( move 3 + ul , 4 ; move 3 , ul ) ; pen 3 / ua )  
[456] ( move 4 , ul ; move 4 , 3 )  | ( move 2 + 2 , ul ; move 4 , 3 )  | ( move 4 , ul ; move 4 , 3 ; move ul / ua , 4 )  | ( ( move 4 , ul ; v0 = 0 ) ; move 4 , 3 - v0 )  | ( move 4 , ul ; ( move 4 , 3 ; pen 4 ) ; v0 = ua )  | ( ( move 4 , ul ; v0 = ul ) ; move 4 , 3 ; pen v0 )  
[457] ( move 3 , 4 ; move ul , 4 )  | ( move 3 , 3 + ul ; move ul , 4 )  | ( move 3 , 4 ; move ul , 4 ; v0 = 2 )  | ( move 3 , 4 ; move ul , 4 ; v0 = 3 )  | ( v0 = 3 ; move v0 , 4 ; move ul , 4 )  | ( ( move ul , 4 ; move 2 , 0 ) ; move ul , 4 )  | ( ( move 3 , 4 ; move ul , 4 ) ; pen ua + 2 )  | ( move 3 , 3 + ul ; move ul , ua + 4 ; pen 0 )  | ( v0 = 4 ; move 3 , v0 ; move ul , v0 - ua )  | ( ( move ul , 4 ; move 2 , ua + ua ) ; move ul , 4 )  
[458] ( move ul , 4 ; move 4 , 4 )  | ( move ul , 3 + ul ; move 4 , 4 )  | ( move ul , ua + 4 ; move 4 , 4 )  | ( move ul , 4 - ua ; move 4 , 4 )  | ( move ul , 4 ; move 4 , 4 ; pen 4 + ul )  | ( move ul , 4 ; v0 = 4 ; move v0 , v0 )  | ( v0 = 4 ; move ul , v0 ; move 4 , v0 )  | ( move ul , 4 - ua ; pen ul ; move 4 , 3 + ul )  | ( move ul , ua + 4 ; v0 = 4 ; move v0 , v0 )  | ( move ul , 4 ; ( move 4 , 3 + ul ; v0 = ul ) )  | ( v0 = 4 ; ( move ul , v0 ; move v0 , v0 ) )  | ( v0 = 3 ; move ul , v0 + ul ; move 4 , v0 + ul )  | ( ( v0 = 3 + ul ; move ul , v0 ) ; move v0 , v0 )  
[459] ( move 4 , ul ; move 4 , 4 )  | ( move 4 , ul ; move 3 + ul , 4 )  | ( move 4 , ul - ua ; move 4 , 4 )  | ( move 4 , ul ; move 4 , 4 - ua )  | ( move 4 , ul ; move 2 + 2 , ua + 4 )  | ( v0 = ul ; move 4 , v0 ; move 4 , 4 )  | ( v0 = 4 ; move 4 , ul ; move 4 , v0 )  | ( move 4 , ul ; v0 = 4 ; move v0 , v0 )  | ( move ul , ua + ul ; move 3 , ua ; move 4 , 4 )  | ( v0 = 4 ; move v0 , ul ; move v0 , v0 )  | ( move 3 + ul , ul ; v0 = 4 ; move 4 , v0 )  | ( move 4 , ul ; ( v0 = 4 ; move v0 , v0 ) )  | ( move 3 + ul , ul ; move 4 , 4 ; v0 = 4 / 2 )  | ( ( v0 = 4 ; move v0 , ul ) ; move v0 , v0 )  | ( v0 = 3 + ul ; move v0 , ul ; move v0 , v0 )  | ( v0 = 3 + ul ; move v0 , ul ; move 2 + 2 , v0 )  | ( ( v0 = 3 + ul ; move v0 , ul ) ; move v0 , v0 )  | ( ( v0 = 4 ; move v0 , ul ) ; move v0 , 4 ; pen ul )  
[460] ( move 4 , 4 ; move 4 , ul )  | ( move 3 + ul , 4 ; move 4 , ul )  | ( move 4 , 4 - ua ; move 4 , ul )  | ( move 2 + 2 , 4 ; move 4 , 3 - 2 )  | ( move 4 , 3 + ul ; move 4 , 3 - 2 )  | ( move 4 , 4 ; v0 = ua ; move 4 , ul )  | ( v0 = 4 ; move v0 , 4 ; move 4 , ul )  | ( pen ul ; ( move 4 , 4 ; move 2 + 2 , ul ) )  | ( move 0 , ua + ul ; move 4 , 3 ; move 4 , ul )  | ( v0 = 4 ; move v0 , v0 ; move v0 , ul )  | ( move 4 , ua + 4 ; v0 = 4 ; move v0 , ul )  | ( move 4 , ua + 4 ; move 0 , ua ; move 3 + ul , ul )  | ( v0 = 4 ; move v0 , v0 ; move v0 , ul - ua )  
[461] ( move 4 , 4 ; move ul , 4 )  | ( move 3 + ul , 4 ; move ul , 4 )  | ( move 4 , 4 ; move ul , 3 + ul )  | ( pen ul ; move 4 , 4 ; move ul , 4 )  | ( v0 = 4 ; move v0 , v0 ; move ul , 4 )  | ( move 4 , 4 ; move ul , ua + 4 ; v0 = ua )  | ( v0 = 4 ; move v0 , v0 ; move ul , v0 )  | ( ( v0 = 4 ; move 4 , v0 ) ; move ul , v0 )  | ( v0 = 3 + ul ; move v0 , v0 ; move ul , v0 )  | ( move 4 , 4 ; move ul , 4 ; ( pen ua ; pen 2 + ul ) )  | ( move 3 + ul , 4 ; ( move ul , 4 ; v0 = 4 * 4 ) )  | ( ( v0 = 4 ; move v0 , v0 ) ; move 2 - ul , v0 )  
[462] ( pen 2 ; move ua , 0 - 2 )  | ( pen 2 ; move ua , ul - 3 )  | ( pen 2 ; pen 2 ; move ua , 0 - 2 )  | ( pen 2 ; move 2 , ua - 2 ; move 4 , 0 )  | ( pen 2 ; v0 = ua - 2 ; move ua , v0 )  | ( pen 2 ; v0 = ul - 3 ; move ua , v0 )  | ( pen 2 ; move 3 * 2 , ul - 3 ; pen ul + ul )  
[463] ( pen 3 ; move ua , 0 - 2 )  | ( pen 2 + ul ; move ua , ul - 3 )  | ( pen ua / 2 ; move ua , ul - 3 )  | ( move ul , ua ; pen 3 ; move ua , ul - 3 )  
[464] ( pen ua ; move 4 + 3 , 0 )  | ( pen ua ; move 4 + 3 , ua )  | ( pen ua ; move ua + ul , 0 )  | ( pen ua ; move ua + ul , ua )  | ( pen ua * 2 ; move 4 + 3 , 0 )  | ( pen ua + 3 ; move 4 + 3 , ua )  | ( pen ua * 2 ; move ua + ul , 0 )  | ( pen 3 + 3 ; move ua + ul , ua )  | ( pen 4 + 3 ; move ua + ul , ua )  | ( pen ua ; move ua + ul , ua + ua )  | ( pen 2 ; pen ua ; move ua + ul , 0 )  | ( pen ua ; move ua , 0 ; move ul , ua )  | ( pen ua ; move ua + ul , ua ; pen ua )  | ( pen ua + 4 ; move 4 + 3 , ua ; pen 4 )  | ( pen ua ; move 3 - 2 , 0 ; move ua , ua )  | ( pen ua ; move ua + ul , 0 ; v0 = ua )  | ( ( pen ua ; move ua , ua ) ; move ul , ua )  | ( pen ua ; pen ua + 4 ; move ua + ul , ua )  | ( pen ua ; ( pen ua ; move ua + ul , ua ) )  | ( pen ul / ua ; pen ua ; move ua + ul , ua )  | ( v0 = ua + ul ; pen v0 ; move v0 , 0 )  | ( pen 4 * 2 ; move ua + ul , ua ; move 0 , ul )  | ( pen 2 - ua ; pen 3 * 2 ; move ua + ul , ua )  | ( pen 4 + 2 ; ( pen ua ; move ua + ul , ua ) )  | ( ( pen ua ; move ua + ul , ua ) ; move 0 , ul )  | ( pen 3 ; pen ua + ul ; move ua + ul , ua * 3 )  | ( pen ua + 2 ; v0 = ua + ul ; move v0 , ua )  | ( ( v0 = ua + ul ; pen v0 ) ; move v0 , 0 )  | ( pen 4 + 2 ; move ua + ul , ua + ua ; v0 = 3 )  | ( ( pen ua ; move ua + ul , ua ) ; move 0 , 0 - ul )  | ( pen 4 + ul ; move ua + ul , 0 ; move ul / ua , 2 )  | ( ( pen 4 + ul ; move ua + ul , ua ) ; v0 = ul )  | ( pen ua ; ( move ul , ua ; move ua , 0 ) ; pen ua + ul )  | ( ( pen ua ; move 4 + 3 , ua ) ; move ul , 3 ; move ul , 0 )  | ( ( pen ua ; move ua + ul , 0 ) ; pen ul ; v0 = 3 + 3 )  
[465] ( pen ua ; move 3 + 2 , 2 )  | ( pen ua ; move 4 + ul , 2 )  | ( pen 3 + 2 ; move ul - ua , 2 )  | ( pen ua ; move 4 + ul , 4 - 2 )  | ( pen ua ; move ul - ua , 4 - 2 )  | ( pen ua ; move ul - ua , ua + 2 )  | ( pen ul ; pen ua ; move 3 + 2 , 2 )  | ( pen ua ; move 4 , 2 ; move ul , ua )  | ( pen ua ; move ua - ul , 2 ; pen ul )  | ( pen 4 * 2 ; move 4 + ul , 2 - ua )  | ( pen ua * 4 ; move 4 + ul , ul + ul )  | ( pen ua ; move ua - ul , 3 - ul ; pen ul )  | ( pen ul ; pen ua ; move ul - ua , ul + ul )  | ( pen ua ; v0 = 2 ; move 3 + v0 , v0 )  | ( v0 = 4 + ul ; pen v0 ; move v0 , 2 )  | ( ( pen ua + ul ; move ua - ul , 2 ) ; pen 0 )  | ( v0 = 2 ; pen ua * v0 ; move 4 + ul , v0 )  | ( ( pen ua ; move ul - ua , 2 ) ; move 0 , ua - 4 )  | ( move 0 , ua + ul ; pen ua ; move 4 + ul , ua + ul )  | ( pen ua ; move ua - ul , ul + ul ; v0 = 2 + ul )  | ( ( v0 = 3 + 2 ; pen ua ) ; move v0 , v0 - 3 )  | ( ( pen ua + ua ; move 3 + 2 , 2 ) ; v0 = ua - 4 )  
[466] ( pen 3 ; move ua + 2 , 2 )  | ( pen 3 ; move ua + ul , 2 )  | ( pen 3 ; move ua + 2 , 2 - ua )  | ( pen 3 ; ( move 2 , 2 ; move ua , 0 ) )  | ( pen 3 ; move ua + 2 , ua + 2 ; move 0 , 0 )  | ( pen 3 ; v0 = ua + 2 ; move v0 , v0 )  | ( ( pen 3 ; move ul + ul , 2 ) ; move ua , ua )  | ( ( pen 3 ; move 2 , 2 ; move 4 , ua ) ; move ul , 0 )  | ( pen 3 ; ( move ul , 2 ; v0 = 0 ; move ua , v0 ) )  | ( pen 3 ; move 0 , ul ; ( move ua + ul , ul ; pen ua ) )  | ( pen 2 + ul ; v0 = ua + 2 ; move v0 , v0 + ua )  | ( ( v0 = ul + ul ; pen 3 ) ; move ua + v0 , v0 )  
[467] ( pen 3 ; move ua , 3 + 2 )  | ( pen 3 ; move ua , 4 + ul )  | ( pen 2 + ul ; move ua , 4 + ul )  | ( pen ua - 3 ; move ua , 4 + ul )  | ( pen ul ; pen 3 ; move ua , 4 + ul )  | ( ( pen 3 ; move ua , 4 + ul ) ; pen 2 )  | ( move 0 , ul - ua ; pen 3 ; move ua , 4 )  | ( pen 3 ; move ua , 4 + ul ; v0 = ua )  | ( pen 3 ; move ua , 4 + ul ; pen 4 + ul )  | ( v0 = ua ; pen 2 + ul ; move ua , 4 + ul )  | ( move ul / ua , ua + 4 ; pen 3 ; move ua , ul )  | ( ( pen 3 ; move ua , 4 + ul ) ; pen 3 + 2 ; pen ua )  | ( move 0 , 4 ; pen 3 ; ( move ua , ul ; move 0 , ua - 3 ) )  
[468] ( pen 3 ; move 3 + 2 , ua )  | ( pen 3 ; move 4 + ul , 0 )  | ( pen 3 ; move ua - ul , 0 )  | ( pen 3 ; move ul - ua , 0 )  | ( pen 3 ; move 4 + ul , ua )  | ( pen 3 ; move 4 + ul , ua * 3 )  | ( pen 3 ; move 4 + ul , ua + ua )  | ( pen 3 ; move 4 + ul , 0 ; pen ua )  | ( pen 3 ; move 4 + ul , ua ; pen 2 )  | ( pen 3 ; move ul , ua ; move 4 , ua )  | ( pen 3 ; move 4 + ul , ua ; pen ua )  | ( pen 3 ; ( move ul , 0 ; move 4 , ua ) )  | ( pen 3 ; v0 = ul - ua ; move v0 , 0 )  | ( pen 4 - ul ; ( move 4 , 0 ; move ul , 0 ) )  | ( pen 3 ; move 4 + ul , ua / 2 ; v0 = 3 )  | ( pen ua / 2 ; move 4 - 2 , ua ; move 3 , ua )  | ( ( pen 3 ; move 3 + 2 , ua * 2 ) ; v0 = ul )  | ( ( pen 4 + 4 ; pen 3 ) ; move 4 + ul , ua * 3 )  | ( pen 3 ; move 2 + 2 , 0 ; ( move ul , 0 ; v0 = 2 ) )  | ( pen 3 ; move 4 + ul , ua ; ( v0 = ul ; v1 = 0 ) )  
[469] ( pen ua ; move 3 + 2 , 3 )  | ( pen ua + 3 ; move 3 + 2 , 3 )  | ( pen ua * 2 ; move 4 + ul , 3 )  | ( pen ua * ua ; move ul - ua , 3 )  | ( pen ua ; move 3 , 3 ; move 2 , ua )  | ( pen ua ; move ul - ua , 3 ; pen ul )  | ( pen ua + ul ; move 3 + 2 , 2 + ul )  | ( pen 3 + 3 ; move ul - ua , 3 - ua )  | ( pen ua - ul ; move 4 + ul , 4 - ul )  | ( pen ua ; move 0 , ua ; move 3 + 2 , 3 )  | ( pen ua + 4 ; move ul , 3 ; move 4 , 0 )  | ( pen ua ; move 0 , 3 ; move ua - ul , ua )  | ( pen ua ; move ul , ua ; move 4 + ul , 3 )  | ( pen 2 ; pen ua * ua ; move ul - ua , 3 )  | ( pen ua + 2 ; ( move 2 , 3 ; move 3 , ua ) )  | ( pen ua ; move ul , 4 - ul ; move 2 * 2 , 0 )  | ( pen 4 + ul ; move ul , 3 ; move 3 + ul , 0 )  | ( pen ua ; ( v0 = 3 ; move ul - ua , v0 ) )  | ( ( pen ua * 3 ; move ua - ul , 3 ) ; v0 = ul - 2 )  | ( move ul , ul ; ( pen ua * 2 ; move ul - ua , 2 - ua ) )  | ( pen ul / ua ; ( pen ua ; pen ua + ul ) ; move 4 + ul , 3 )  
[470] ( pen 2 ; move ua , 4 + 2 )  | ( pen 2 ; move ua , 4 + 2 ; pen 3 )  | ( v0 = 2 ; pen v0 ; move ua , v0 + 4 )  | ( pen ul + ul ; move 0 , ul ; move ua , 4 + ul )  | ( move 0 , ul ; ( move 0 , ul ; pen 2 ; move ua , 2 * 2 ) )  
[471] ( pen 2 ; move ua , 4 + 3 )  | ( pen 3 - ul ; move ua , 4 + 3 )  | ( pen ul + ul ; move ua , 4 + 3 )  | ( pen ul + ul ; move ua , 3 / 4 )  | ( ( pen ul + ul ; move 0 , 4 + 2 ) ; move ua , ua + ul )  
[472] ( pen ua ; move 4 + 3 , 2 )  | ( pen ua ; move ua + ul , 2 )  | ( pen ua * 2 ; move ua + ul , 2 )  | ( pen ua * 3 ; move ua + ul , 2 )  | ( pen ua ; move ua + ul , 2 - ua )  | ( pen ua - ul ; move ua + ul , 2 )  | ( pen ua ; move ul , 2 ; move ua , 0 )  | ( pen ua + 2 ; move ua + ul , ul + ul )  | ( pen ua + 2 ; move ua + ul , 2 ; pen 2 )  | ( pen ua + ul ; move ua + ul , 2 ; pen 0 )  | ( pen 3 / ua ; pen ua ; move ua + ul , 2 )  | ( pen ua + ul ; move ul , 2 ; move ua , ua )  | ( pen ua ; v0 = ua + ul ; move v0 , 2 )  | ( pen ua ; ( move ua , ua + 2 ; move ul , 0 ) )  | ( ( pen ua + ul ; move ul , 2 ) ; move ua , ua )  | ( move 0 , ul ; pen ua + ul ; move ua + ul , ul )  | ( pen ua + ul ; v0 = ua + ul ; move v0 , 2 )  | ( pen ua ; v0 = ua + ul ; move v0 , v0 + v0 )  | ( v0 = 2 ; ( pen 3 * v0 ; move ua + ul , v0 ) )  | ( ( pen ua ; move ua + ul , 2 ) ; v0 = ul ; pen ua )  | ( pen 2 ; pen ua ; ( move ua + ul , 2 ; pen ul ; pen ul ) )  | ( ( pen ul ; pen ua ) ; move ul - ua , 2 ; move ul + ul , 3 )  
[473] ( pen ua ; move 4 , 3 + 2 )  | ( pen 4 ; move 4 , 4 + ul )  | ( pen ua ; move 4 , 4 + ul )  | ( pen ua + 3 ; move 4 , 3 + 2 )  | ( pen ua ; move 2 * 2 , 4 + ul )  | ( pen 4 + ul ; move 4 , 4 + ul )  | ( pen ua ; move 3 + ul , 4 + ul )  | ( pen 3 ; pen 4 ; move 4 , 3 + 2 )  | ( move ul , 3 ; pen 3 + 2 ; move 4 , 2 )  | ( pen ul + ul ; pen ua ; move 4 , 4 + ul )  | ( pen ua ; move 4 , 4 + ul ; pen ul + ul )  | ( ( move 0 , 3 ; pen ua ) ; move 4 , ua + 2 )  | ( move ul , 3 ; pen 4 * 3 ; move 4 , 3 - ul )  | ( pen 4 + 2 ; v0 = 4 + ul ; move 4 , v0 )  | ( ( move 0 , ul ; pen ua ) ; move 4 , 3 + ul ; pen 0 )  
[474] ( pen 4 ; move ua , 0 - 4 )  | ( pen 4 ; move ua , ua - 4 )  | ( pen 4 ; move 0 , ua - 3 ; move ua , ua - ul )  | ( pen 4 ; v0 = 0 - ua ; move v0 , v0 - 4 )  | ( ( pen ul ; v0 = ua ) ; pen 4 ; move v0 , v0 - 4 )  
[475] ( pen 4 ; move 4 + ul , 0 )  | ( pen ua ; move 3 + 2 , ua )  | ( pen ua ; move ua - ul , 0 )  | ( pen ua ; move 4 + ul , ua )  | ( pen 4 ; move ul - ua , ua )  | ( pen ua ; move ul - ua , ua )  | ( pen ua ; move ua - ul , ua )  | ( pen 3 * 2 ; move ul - ua , 0 )  | ( pen ua + ua ; move ul - ua , 0 )  | ( pen ua ; move ul - ua , 0 - ua )  | ( pen ua + ul ; move ua - ul , 0 )  | ( pen ua + ul ; move ul - ua , 0 )  | ( pen 0 ; pen 4 ; move 4 + ul , 0 )  | ( pen 2 ; pen ua ; move ua - ul , ua )  | ( pen ua + ul ; move ua - ul , ua / 2 )  | ( pen ua ; move ua - ul , ua ; v0 = ua )  | ( pen ua ; move ua - ul , ua ; v0 = ul )  | ( pen 3 ; pen ua * ua ; move ul - ua , ua )  | ( pen ua + 4 ; move ua - ul , ua ; pen ul )  | ( pen ul ; pen ua * 3 ; move ua - ul , ua )  | ( pen ua ; v0 = ua - ul ; move v0 , ua )  | ( pen ua ; v0 = ua ; move ul - v0 , v0 )  | ( ( pen ua ; move ul - ua , 0 ) ; move 0 , ul )  | ( pen ua ; move ua - ul , 0 ; v0 = ua + ul )  | ( pen 3 + ul ; pen ua - ul ; move ua - ul , 0 )  | ( v0 = ua ; pen v0 ; move ul - v0 , v0 )  | ( pen 4 + ul ; v0 = 0 ; move ul - ua , v0 )  | ( pen 3 + 2 ; v0 = ua ; move ul - v0 , v0 )  | ( ( v0 = ua ; pen v0 ) ; move ul - v0 , ua )  | ( pen ua * ua ; move ul - ua , 0 ; v0 = 4 * 4 )  | ( ( pen ua ; move 0 , ul ) ; move 4 + ul , ua - ul )  | ( v0 = ua ; ( pen v0 ; move v0 - ul , v0 ) )  | ( ( pen ua + ul ; move ua - ul , ua ) ; pen ua / 4 )  | ( v0 = ua ; pen v0 * v0 ; move ul - v0 , ua )  
[476] ( pen ua ; move 4 , 0 - 4 )  | ( pen ua ; move 4 , ua - 4 )  | ( pen ua * ua ; move 4 , ua - 4 )  | ( pen 4 * 4 ; v0 = 4 ; move v0 , ua - v0 )  | ( pen ua ; ( move 4 , 0 - 4 ; pen ul + ul ) ; pen 4 / ua )  
[477] ( pen 2 ; move 4 , ua - 2 )  | ( pen 2 ; move 4 , ul - 3 )  | ( pen ul + ul ; move 4 , ua - 2 )  | ( pen 2 ; v0 = ul - 3 ; move 4 , 4 / v0 )  | ( ( pen 2 ; move 4 , ua - 2 ) ; v0 = ul ; v1 = ua )  
[478] ( pen ua ; move 3 + 2 , 4 )  | ( pen ua ; move 4 + ul , 4 )  | ( pen ua ; move 3 + 2 , 3 + ul )  | ( pen ua + ua ; move 4 + ul , 4 )  | ( pen ua ; move 4 + ul , 4 - ua )  | ( pen 3 * 2 ; move 2 + ul , 4 ; move 2 , 0 )  | ( pen ua * 4 ; ( pen ua ; move 3 + 2 , 4 ) )  | ( ( pen ua ; move ul - ua , 4 ) ; v0 = ul / 2 ; pen ul )  | ( ( move ua , 4 ; pen ul + ul ) ; pen ua ; move ul - ua , ua )  
[479] ( pen 3 ; move ua , 4 + 2 )  | ( pen 3 ; move ua , 3 + 3 )  | ( pen 3 ; move ua , 3 * 2 )  | ( pen 4 ; pen 3 ; move ua , 3 + 3 )  | ( pen 3 ; ( move ua , 4 + 2 ; v0 = 3 + ul ) )  | ( move ul , 2 + ul ; pen ua / 2 ; move ua , 2 + ul )  
[480] ( pen 3 ; move ua , 4 + 3 )  | ( pen 3 ; move ua , 3 / 4 ; v0 = 0 )  
[481] ( pen 4 ; move ua , 4 + 2 )  | ( pen 4 ; move ua , 3 * 2 )  | ( pen ua ; move ua , 4 + 2 )  | ( pen 3 * 2 ; move ua , 4 + 2 )  | ( pen ua + 3 ; move ua , 4 + 2 )  | ( pen ua + 4 ; move ua , 3 * 2 )  | ( move ua , 3 ; pen ua ; move ua , 3 )  | ( move 0 , 3 ; pen ua ; move 0 - ua , 3 )  | ( move ul , ua + 2 ; pen 4 ; move ua , 4 )  | ( move ul , 3 - ul ; pen ua ; move ua , 4 )  | ( pen ua ; move ua , 3 + 3 ; pen ua + ul )  | ( v0 = 4 + 2 ; pen v0 ; move ua , v0 )  | ( pen ua ; move 2 - ua , 4 + 2 ; move ua , ua )  | ( pen 4 ; ( v0 = ua ; move ua , 3 + 3 ) ; pen v0 )  
[482] ( pen 4 ; move 4 , 0 - ul )  | ( pen 3 + ul ; move 4 , 0 - ul )  | ( pen 4 ; move 3 + ul , ua - ul )  | ( pen 3 + ul ; move 2 - ua , ua - ul )  | ( pen 4 ; move 4 , ua - ul ; v0 = ul )  | ( pen 4 ; v0 = 4 ; move v0 , 0 - ul )  
[483] ( pen 2 ; move ua + 4 , 4 )  | ( pen 2 ; move 3 , 4 ; move ua , ua )  | ( pen 2 ; v0 = 3 ; move v0 * v0 , 4 )  
[484] ( pen ua ; move 4 * 2 , 2 )  | ( pen ua ; move ua + 2 , 2 )  | ( pen ua ; move ua + 3 , 2 )  | ( pen 3 + 2 ; move ua + 2 , 2 )  | ( pen ua + 4 ; move 4 * 2 , 2 )  | ( pen ua ; move 3 * 3 , ua + 2 )  | ( pen ua - ul ; move 4 * 2 , 2 )  | ( move 0 , 0 ; pen ua ; move ua + 2 , 2 )  | ( pen ua ; move ua + 3 , 2 ; pen 3 + 2 )  | ( pen 2 ; pen ua ; move ua + 3 , 4 / 2 )  | ( move 0 , ul ; pen ua ; move ua + 3 , ul )  | ( pen ua ; move ua + ul , 2 ; move ul , ua )  | ( ( move 0 , 2 ; pen ua ) ; move ua + 2 , ua )  | ( move 0 , ua ; pen ua ; move ua + 2 , 2 - ua )  | ( pen ua ; move ul , 2 ; move ua + ul , ua * 2 )  | ( v0 = ua + 2 ; pen v0 ; move v0 , v0 )  | ( ( pen ua * 3 ; move ul + ul , 2 ) ; move ua , ua )  | ( ( pen ua ; move ua + 2 , 2 ; pen ul / 4 ) ; pen ua )  | ( pen ua ; ( v0 = ua + 2 ; move ul + v0 , v0 ) )  | ( pen ua - ul ; ( move 2 + ul , ua + 2 ; move ua , 0 ) )  | ( pen ua ; move ua - ul , 2 ; ( move 2 , 0 ; move ul , 0 ) )  
[485] ( pen 2 ; move 4 + ul , 3 )  | ( pen 2 ; move ul - ua , 3 )  | ( pen 2 ; move ua - ul , 3 )  | ( pen 2 ; move ul - ua , 2 + ul )  | ( pen 2 ; move 2 , 3 ; move ua - 3 , ua )  | ( pen 2 ; move ua - ul , 3 ; v0 = ul )  | ( pen 2 ; move ul - ua , 4 - ul ; v0 = ul )  | ( ( v0 = 3 ; pen 2 ) ; move ul - ua , v0 )  | ( pen 2 ; move ul - ua , 3 ; ( pen 2 ; move ul , 0 ) )  | ( pen ul + ul ; move ul - ua , 3 ; ( pen 0 ; move ul , 0 ) )  
[486] ( pen 2 ; move 4 + 3 , ul )  | ( pen 2 ; move 4 + 3 , 2 - ul )  | ( pen 2 ; move ua + ul , 3 - 2 )  | ( pen 2 ; move 4 + 3 , ul - ua )  | ( pen 2 ; move ua + ul , ua + ul )  | ( pen ua / 3 ; move ua + ul , ul )  | ( pen ul + ul ; move 3 , ul ; move 4 , 0 )  | ( v0 = ua + 2 ; pen 2 ; move ua + ul , ul - ua )  
[487] ( pen 2 ; move ua , 4 * 2 )  | ( pen ul + ul ; move ua , 4 * 2 )  
[488] ( pen ua ; move 4 + 3 , 4 )  | ( pen ua ; move ua + ul , 4 )  | ( pen ua + 2 ; move 4 + 3 , 4 )  | ( pen ua + ul ; move ua + ul , 4 )  | ( pen ua ; move ua , 4 ; move ul , 0 )  | ( pen ua * 4 ; move ua + ul , 3 + ul )  | ( move 0 , 4 ; pen ua ; move ua + ul , 0 )  | ( pen 4 + 2 ; move ua , 4 ; move ul , ua )  | ( ( pen ua ; move ul , 4 ) ; move ua , 0 )  | ( pen ua ; move ul , ua + 4 ; move ua , 0 )  | ( pen ua - ul ; move ua + ul , 4 ; pen 0 )  | ( pen ua + 2 ; move 4 + 3 , 4 ; v0 = ul )  | ( pen 3 - ul ; pen 4 + ul ; move ua + ul , 4 )  | ( move ul , ul ; pen 4 + ul ; move ua + ul , 3 )  | ( move ul / ua , ua ; pen ua ; move ua + ul , 4 )  | ( pen ua ; ( v0 = 4 ; move 4 + v0 , ua + v0 ) )  | ( pen ua ; ( move ul , 4 ; move ua , 0 ; pen 2 ) ; pen ua )  | ( pen ua ; move ul , 4 ; ( move ua , 0 ; v0 = 0 - ul ) )  | ( ( move 0 , 3 + ul ; pen ua ) ; move ua + ul , ua ; pen 2 )  
[489] ( pen 4 ; move 4 + ul , 2 )  | ( pen 4 ; move 4 , 4 / 2 ; move ul , 0 )  | ( pen 3 + ul ; move 4 , 2 ; move ul , 0 )  | ( v0 = 2 ; pen 4 ; move 4 + ul , v0 )  | ( move ul + ul , ua ; pen 4 ; move 4 + ul , 2 )  | ( pen 2 + ul ; pen 4 ; move 4 + ul , ul + ul )  | ( move 0 , 4 - 3 ; ( pen 0 ; pen 4 ) ; move 4 + ul , ul )  
[490] ( pen 3 ; move 4 * 2 , ua )  | ( pen ul ; pen 3 ; move 4 * 2 , 0 )  | ( pen 3 ; move 4 * 2 , 0 ; move ul / ua , ul )  
[491] ( pen 2 ; move 4 , 4 + ul )  | ( pen 2 ; move 3 + ul , 3 + 2 )  | ( pen 2 ; move 3 + ul , 4 + ul )  | ( pen ul + ul ; move 4 , 4 + ul )  | ( pen 2 ; move 4 , 3 + 2 ; pen ul )  | ( pen ul ; pen 2 ; move 4 , 4 + ul )  | ( pen 0 ; pen 3 - ul ; move 4 , 4 + ul )  | ( pen 2 ; move 4 , 4 + ul ; pen ua - ul )  | ( pen 4 - 2 ; move 0 , 2 ; move 3 + ul , 3 )  | ( pen 3 - ul ; move 4 , 4 + ul ; v0 = ul )  | ( move ul , ul + ul ; pen ul + ul ; move 4 , 3 )  | ( pen ua / 3 ; move 0 , ua + ul ; move 4 , 2 + 2 )  | ( ( pen ul + ul ; move 3 + ul , 4 + ul ) ; pen ul )  | ( pen 2 ; ( move 4 , 4 + ul ; pen ua ; v0 = 0 - 4 ) )  | ( ( pen 3 - 4 ; pen ul + ul ; move 4 , 4 + ul ) ; pen 4 )  
[492] ( pen ua ; move 4 , 2 - 4 )  | ( pen ua ; move 4 , ua - 2 )  | ( pen ua ; move 2 + 2 , ul - 3 )  | ( pen ua - ul ; move 4 , ua - 2 )  | ( pen ua + 2 ; move 3 + ul , ua - 2 )  | ( pen ua + ul ; move 3 + ul , ul - 3 )  | ( pen ua ; v0 = 2 ; move 4 , ua - v0 )  | ( pen ua ; move 2 + 2 , ua - 2 ; v0 = ul - ua )  
[493] ( pen 4 ; move ua , 2 - 4 )  | ( pen ua ; move ua , 0 - 2 )  | ( pen ua ; move ua , 2 - 4 )  | ( pen 4 ; move ua , ul - 3 )  | ( pen ua + ul ; move ua , ua - 2 )  | ( pen ua + ul ; move ua , ul - 3 )  | ( pen ul ; pen ua ; move ua , 2 - 4 )  | ( pen ua ; move ua , ul - 3 ; pen 3 )  | ( pen 4 ; ( move ua , ua - 2 ; pen ul ) )  | ( pen ua ; move ua , ul - 3 ; pen ua + 3 )  | ( pen ua - ul ; move ua , 2 - 4 ; pen ul )  | ( pen ua ; v0 = ua + ul ; move ua , ul - 3 )  | ( pen ua ; ( move 0 , ua - 2 ; move ua , ua * 2 ) )  | ( pen ua + 3 ; move ul , ul - 3 ; move ua , ua * 4 )  | ( pen ua ; ( move 0 , ul ; move ua , ul - 4 ) ; pen 3 )  
[494] ( pen 3 ; move ua , 3 * 3 )  | ( v0 = 3 ; pen v0 ; move ua , v0 * v0 )  
[495] ( pen ua ; move 4 , 4 + 3 )  | ( move ul , 4 ; pen ua ; move 4 , 3 )  | ( pen ua * ua ; move 3 + ul , 4 + 3 )  | ( move 0 , 4 + 2 ; pen ua ; move 3 + ul , ul )  | ( pen ua ; ( move ul , 4 ; move 4 , 3 ) ; v0 = ua )  | ( move ul , 4 ; ( pen ul + ul ; pen ua ; move 4 , 3 ) )  | ( ( pen 3 ; move 0 , 0 ) ; ( pen ua ; move 4 , 4 + 3 ) )  
[496] ( pen 3 ; move 4 + ul , 3 )  | ( pen 3 ; move ul - ua , 3 )  | ( pen 3 ; move ua - ul , 3 )  | ( pen 3 ; move 4 + ul , 2 + ul )  | ( pen 2 + ul ; move 4 , 3 ; move ul , ua * 4 )  
[497] ( pen 3 ; move 4 , 4 + ul )  
[498] ( pen ua ; move 4 , 3 / 2 )  | ( pen ua - 2 ; move 4 , ua / 4 )  | ( pen 4 ; move 4 , ua / 4 ; v0 = ul / ua )  
[499] ( pen 3 ; move 4 * 2 , ul )  | ( pen 3 ; move ua + 2 , ul )  | ( pen 3 ; move ua + ul , ul )  | ( pen 2 + ul ; move 4 * 2 , ul )  | ( pen 3 ; move ua + ul , ua + ul )  | ( pen ua - 3 ; move ua + ul , ul )  | ( pen 2 ; pen 3 ; move ua + ul , ul )  | ( pen 3 ; move ua + 2 , ul ; v0 = 2 )  | ( pen 3 ; move 2 , ul ; move ua , ua * 2 )  | ( pen 3 ; move ua + ul , ul ; pen 2 + ul )  | ( pen 3 ; move ua + ul , ua + ul ; pen 3 )  | ( pen 4 + ul ; pen 3 ; move ua + ul , ul )  | ( pen 3 ; v0 = 2 - ul ; move 4 + 4 , ul )  | ( v0 = ua + ul ; pen 3 ; move v0 , v0 )  | ( pen 2 + ul ; move 4 + 4 , ul ; pen ul / ua )  | ( pen 4 - ul ; v0 = ul ; move ua + ul , ul )  | ( pen 4 - ul ; ( move ua + ul , ul ; pen ul ) )  | ( ( pen 3 ; move ul , ul ; move ua , 0 ) ; pen 2 )  | ( ( pen 3 ; move 4 * 2 , ul ) ; move 0 , 2 * 2 )  
[500] ( pen 4 ; move ua , 3 / 2 )  | ( pen ua + ul ; move 3 * 2 , 3 / 2 )  | ( ( pen 4 ; v0 = 3 / 2 ) ; move ua , v0 )  | ( v0 = 3 / 2 ; pen ua + v0 ; move ua , ua + v0 )  
[501] ( pen 3 ; move 3 * 3 , ul )  | ( pen 3 ; move ua + 3 , ul )  | ( pen 2 + ul ; move ua + 3 , ul )  | ( pen 3 ; move ua , ul ; move 4 - ul , 0 )  | ( pen 3 ; ( move 3 * 3 , ul ; pen 3 + 2 ) )  | ( pen 3 ; v0 = 3 ; move v0 * v0 , ul )  | ( ( pen 3 ; move ua + 2 , ul ) ; move 2 , ua )  | ( pen 3 ; move ua + 3 , ul ; v0 = ul + ul )  | ( pen 3 ; ( move 3 , ul ; move ua , 0 ; pen ua + 4 ) )  | ( ( pen ua / 2 ; move 4 , ul ) ; move ua , 0 ; v0 = ua )  
[502] ( pen 4 ; move 4 + ul , 3 )  | ( pen 4 ; move ua - ul , 3 )  | ( pen 4 ; move ul - ua , 3 )  | ( pen 4 ; move ua - ul , 3 ; pen ua )  | ( pen 0 ; ( pen 4 ; move ul - ua , 3 ) )  | ( ( move ul / 4 , ul ; pen 4 ; move ul - ua , 2 ) ; pen 3 )  
[503] ( pen 2 ; move 4 , ul - 4 )  | ( pen 2 ; move 3 + ul , ul / ua )  | ( pen 2 ; move 3 , ul / ua ; move ul , ua * 4 )  | ( ( pen 2 - ua ; pen ul + ul ) ; move 4 , ul - 4 )  
[504] ( pen 3 ; move 4 , ul - 3 )  
[505] ( pen 2 ; move 4 , ul / 2 )  
[506] ( pen 3 ; move ua , 2 / 4 )  | ( pen 3 ; move ua , ul / 2 )  | ( pen ua - 3 ; move ua , ul / 2 )  | ( pen 2 + ul ; ( move ua , ul / 2 ; v0 = 3 + ul ) )  
[507] ( pen 4 ; move 4 , ua - 3 )  | ( pen 4 ; move 4 , ul / ua )  | ( move 0 , ua + 3 ; pen 4 ; move 4 , ul / 4 )  
[508] ( pen ua ; move 4 , 4 * 2 )  | ( pen 4 ; move 4 , 4 * 2 ; pen ul )  | ( move 0 , 4 ; pen ua * 3 ; move 4 , 4 )  | ( pen 4 + ul ; move 4 , 4 + 4 ; pen 4 )  | ( v0 = 4 ; pen ua - ul ; move v0 , v0 + v0 )  | ( pen ul ; pen ua ; ( move 0 , 3 * 2 ; move 3 + ul , 2 ) )  
[509] ( pen 4 ; move 4 * 2 , ul )  | ( pen 4 ; move ua + 2 , ul )  | ( pen 4 ; move ua + ul , ul )  | ( pen 4 ; move ul , ul ; move ua , 0 )  | ( pen 4 ; ( move ua + ul , ul ; pen ul ) )  | ( pen ul ; ( pen 4 ; move ua + ul , ul ) )  | ( pen 4 ; move ua + ul , ul ; v0 = 2 - ul )  | ( pen ul ; ( pen 2 + 2 ; move ua + ul , ul ) )  | ( pen 3 + ul ; ( move ua + ul , ul ; pen 3 ) )  | ( move 0 , ua ; ( pen 2 * 2 ; move ua + 2 , ul ) )  | ( move ul , ul ; pen ul ; ( pen 4 ; move ua , ua ) )  | ( move 0 , ul ; ( ( pen 4 ; move ua + ul , ua ) ; pen ua ) )  
[510] ( pen 4 ; move ua , 4 * 3 )  | ( pen ua ; move ua , 4 * 3 )  | ( move 0 , 0 ; pen ua ; move ua , 4 * 3 )  | ( pen 4 ; move ua , 4 * 3 ; move 0 , ul )  | ( pen ua ; ( pen 4 ; move ua , 4 * 3 ) )  | ( pen 4 ; move ua , 4 * 3 ; v0 = 0 - ul )  
[511] ( pen 3 ; move ua , 4 / 3 )  
[512] ( pen 3 ; move 4 , ul / 2 )  
[513] ( pen ua ; move 4 , 4 * 3 )  | ( pen 4 + ul ; move 4 , 4 * 3 )  | ( pen ua * 4 ; move 0 , 0 ; move 4 , 4 * 3 )  | ( pen ua - ul ; move 4 , 4 * 3 ; pen ul / ua )  | ( ( pen ua ; move 3 + ul , 4 * 3 ) ; v0 = 4 )  
[514] ( pen 4 ; move 4 + ul , 4 )  | ( pen 4 ; move ua - ul , 4 )  | ( pen ua ; move ua - ul , 4 )  | ( pen ua + 3 ; move 4 + ul , 4 )  | ( pen 4 + 3 ; move ul - ua , 4 )  | ( pen ua + 4 ; move 4 + ul , ua + 4 )  | ( pen 4 ; move ua - ul , 3 + ul ; pen 4 )  | ( pen ua ; pen 3 + ul ; move ua - ul , 4 )  | ( ( pen 3 + ul ; move ul , 4 ) ; move 4 , ua )  | ( pen ua - 4 ; pen 4 ; move 4 + ul , 3 + ul )  | ( move 3 , 4 - ua ; pen 4 ; move ul - ua , ua )  | ( v0 = 4 ; pen v0 ; move ul + v0 , v0 )  | ( v0 = 4 ; pen v0 ; move v0 + ul , v0 )  | ( pen ua + 4 ; move 4 + ul , 4 ; v0 = ua + 3 )  
[515] ( pen 3 ; move 4 , ul - 4 )  | ( pen 2 + ul ; move 4 , ul / ua )  | ( v0 = 4 ; pen 3 ; move 4 , ul / ua )  | ( pen 3 ; move ul , ul / ua ; move 3 , ua )  | ( ( pen 3 + ul ; pen 3 ) ; move 4 , ul - 4 ; pen 4 )  
[516] ( pen ua ; move 4 , 2 / 4 )  | ( pen 4 + ul ; move 4 , ul / 2 )  | ( ( pen 0 ; pen ua ) ; move 4 , 3 / ua )  | ( pen 2 - ua ; pen ua ; move 4 , ul / 2 )  | ( ( pen ua ; move 4 , 3 / ua ) ; move 0 , 2 )  
[517] ( pen 4 ; move 3 * 3 , ul )  | ( pen 4 ; move ua + 3 , ul )  | ( pen 4 ; move ua + 4 , ul )  | ( pen ua ; move ua + 3 , ul )  | ( pen ua ; move ua + 4 , ul )  | ( pen ua + ul ; move 3 * 3 , ul )  | ( pen 4 ; move 3 , ul ; move ua , 0 )  | ( pen 4 ; move ua , ul ; move 3 , ua )  | ( pen ua ; move 3 , ul ; move ua , ua )  | ( pen ua ; move ua , ul ; move 3 , ua )  | ( pen 0 ; pen 4 + 3 ; move ua + 3 , ul )  | ( ( pen 4 ; move ua + 3 , ul ) ; pen 0 )  | ( pen ua + 2 ; move ua , ul ; move 3 , 0 )  | ( pen 4 ; move ua + ul , ul ; move 2 , ua )  | ( pen 4 ; move ua + 3 , 3 - 2 ; v0 = ul )  | ( v0 = ua + 3 ; pen v0 ; move v0 , ul )  | ( pen 4 ; move 4 - ul , ul - ua ; move ua , 0 )  | ( pen ua * 2 ; ( move ua + 3 , ul ; pen ul ) )  | ( pen ua * 2 ; v0 = ua ; move 3 + v0 , ul )  | ( pen 4 ; ( move ua + 4 , 2 - ul ; v0 = ul ) )  
[518] ( pen ua ; move 4 , 4 / 3 )  
[519] ( pen 4 ; move ua , 3 / 4 )  | ( ( pen 4 ; move ul , 3 ) ; move ua , 3 + ul )  
[520] ( pen 4 ; move ua , 4 * 4 )  | ( pen ua ; move ua , 2 / ua )  | ( pen ua ; move ua , ul / 3 )  | ( pen ua + 2 ; move ua , ul / 3 )  | ( pen ua + ua ; move ua , 2 / ua )  | ( pen 2 ; pen 4 + ul ; move ua , 2 / ua )  | ( pen ua * 3 ; move ua , ul / 3 ; pen ua )  | ( pen ua + ua ; v0 = ua ; move ua , 2 / v0 )  
[521] ( pen 2 ; move 4 , ul / 4 )  | ( pen 2 ; move 4 , ul / 4 ; v0 = ua )  
[522] ( move ua , 0 ; move ua , 2 )  | ( move ua , ua ; move ua , 2 )  | ( move ua , 0 ; move ua , ua + 2 )  | ( move ua , 0 - ua ; move ua , 2 )  | ( move ua , 0 ; move ua , 3 - ul )  | ( move ua , ua * 3 ; move ua , 2 )  | ( move ua , 0 ; move ua , ul + ul )  | ( move ua , ua ; move ua , ul + ul )  | ( move ua , ua ; pen ul ; move ua , 2 )  | ( move ua , ua ; move 0 , 0 ; move ua , 2 )  | ( move ua , ua ; v0 = 0 ; move ua , 2 )  | ( v0 = ul ; move ua , 0 ; move ua , 2 )  | ( move ua , 0 ; move ua , 2 ; pen ul / 2 )  | ( move ua , 0 ; move 0 , ul ; move ua , ul )  | ( move ua , ua ; move 0 , 2 ; move ua , ua )  | ( move ua , ua ; move ua , 2 ; v0 = ul )  | ( move ua , ua ; pen ul ; move ua , 4 - 2 )  | ( pen ul ; move ua , ua * 4 ; move ua , 2 )  | ( v0 = ua ; move v0 , 0 ; move v0 , 2 )  | ( move ua , ua ; move 0 , 0 ; move ua , 4 - 2 )  | ( v0 = ua ; move v0 , v0 ; move ua , 2 )  | ( move ua , ua ; move ua , 2 ; v0 = 3 + ul )  | ( move ua , 0 ; move ua , 3 - ul ; v0 = ul )  | ( move ua , ua ; ( move ua , 2 ; v0 = ua ) )  | ( move ua , 0 ; move 0 , ua + ul ; move ua , ul )  | ( move ua , ua ; move ua , 2 ; v0 = ua + ua )  | ( v0 = ua ; ( move ua , v0 ; move v0 , 2 ) )  | ( move ua , ua ; move ua , 3 - ul ; v0 = ul - 3 )  | ( move ua , 0 ; ( move ua , ul + ul ; pen 0 - ul ) )  | ( v0 = ua ; move v0 , v0 + v0 ; move v0 , 2 )  | ( ( move ua , ua ; move ua , 2 - ua ; pen 0 ) ; v0 = ua )  
[523] ( move 2 , 0 ; move ua , ul )  | ( move 2 , ua ; move ua , ul )  | ( move 2 , ua * 2 ; move ua , ul )  | ( move 4 - 2 , ua ; move ua , ul )  | ( move 2 , ua * 4 ; move ua , ul )  | ( move ul + ul , 0 ; move ua , ul )  | ( move 2 , ua ; move ua , ua + ul )  | ( move 2 , ua ; move ua , ul - ua )  | ( move 3 - ul , ua ; move ua , ul )  | ( move ul + ul , ua ; move ua , ul )  | ( move 2 , ua ; move ua , ul ; pen 4 )  | ( move 2 , ua ; move ua , ul ; pen ua )  | ( move 2 , ua ; pen ul ; move ua , ul )  | ( move 2 , 0 ; move ua , ul ; v0 = 3 )  | ( move 2 , ua ; v0 = ua ; move ua , ul )  | ( move 2 , ua ; move ua , ul ; v0 = ua )  | ( move 2 , 0 ; v0 = ul ; move ua , v0 )  | ( move 2 , 0 ; ( move ua , ul ; v0 = 0 ) )  | ( v0 = ua ; move 2 , v0 ; move v0 , ul )  | ( move 2 , 0 ; ( move 0 , ul ; move ua , ua ) )  | ( ( move 2 , 0 ; move ua , ul ) ; pen ua + 4 )  | ( ( move 2 , ua ; move ua , ul ) ; move 0 , ul )  | ( move 2 , ua ; move ua , ua + ul ; v0 = 4 )  | ( move 2 , 0 ; v0 = ua ; move v0 , v0 / ua )  | ( move 2 , ua ; ( pen ua ; pen ul ; move ua , ul ) )  | ( ( move 4 - 2 , ua ; move ua , ul ) ; v0 = ua )  | ( ( move ul + ul , 0 ; move ua , ul ) ; v0 = ul )  | ( move 3 - ul , ua + ua ; move ua , ul ; move 0 , ua )  | ( ( move 2 , 0 ; v0 = ul ) ; move v0 * ua , v0 )  | ( ( v0 = ua ; move 2 , v0 ) ; move v0 , ul - v0 )  | ( move ul + ul , ua * 2 ; v0 = ua + ul ; move ua , ul )  | ( ( pen ul + ul ; pen ul ; move ul + ul , ua ) ; move ua , ul )  
[524] ( move ul , 0 ; move ua , 2 )  | ( move ul , ua ; move ua , 2 )  | ( move ul , 0 ; move ua , 4 / 2 )  | ( move ul , 0 ; move ua , ua + 2 )  | ( move ul , 0 ; move ua , 2 - ua )  | ( move 2 - ul , ua ; move ua , 2 )  | ( move ul , ua * 2 ; move ua , 2 )  | ( move ul , ua * 3 ; move ua , 2 )  | ( move ul , ua ; move ua , 4 - 2 )  | ( move ul , ua ; move ua , ua + 2 )  | ( move ul , 0 ; move ua , ul + ul )  | ( move ul , ua + ua ; move ua , 2 )  | ( move ul , ua ; move ua , 2 - ua )  | ( move ul , ua ; move ua , ul + ul )  | ( move ul , 0 ; move ua , 2 ; pen ul )  | ( move ul , ua ; move ua , 2 ; pen ul )  | ( move ul , ua * 4 ; move ua , 3 - ul )  | ( move ul , ua + ua ; move ua , ul + ul )  | ( move ul , 0 ; v0 = ua ; move ua , 2 )  | ( move ul , ua ; move ua , 2 ; v0 = 4 )  | ( ( move ul , 0 ; pen ul ) ; move ua , 2 )  | ( move ul , 0 ; move ua , ul + ul ; pen 2 )  | ( move ul , ua ; move ua , ul + ul ; pen 4 )  | ( move ul , ua ; v0 = 3 + ul ; move ua , 2 )  | ( move ul , 0 ; move ua , ul + ul ; v0 = ua )  | ( v0 = ul ; move v0 , 0 ; move ua , v0 + ul )  | ( move ul , ua ; v0 = ua ; move v0 , 2 + v0 )  | ( move ul , ua ; move ua , 3 - ul ; v0 = ul / 3 )  | ( move ul , ua + ua ; move 0 , ul - 4 ; move ua , 4 + ul )  | ( v0 = 2 ; move ul , ua ; ( move ua , v0 ; pen v0 ) )  | ( ( move 0 , ua ; move ul , 0 ) ; move ua , ul + ul ; pen 2 )  | ( move ul , ua ; move ua , 2 ; ( v0 = ua - ul ; pen 2 ) )  
[525] ( move ua , 0 ; move ul , 2 )  | ( move ua , ua ; move ul , 2 )  | ( move ua , ua ; move 4 - 3 , 2 )  | ( move ua , 0 ; move ul , 3 - ul )  | ( move ua , 0 ; move ul , ua / 3 )  | ( move ua , 0 ; move ul , ul + ul )  | ( move ua , ua + ua ; move ul , 2 )  | ( move ua , ua ; move ul , 2 - ua )  | ( move ua , ua ; move ul , 3 - ul )  | ( move ua , ua ; move ul , ul + ul )  | ( move ua , ua ; pen ul ; move ul , 2 )  | ( move ua , ua ; move 3 - 2 , 3 - ul )  | ( move ua , ua ; move ul , 2 ; v0 = ua )  | ( move ua , ua ; move ul , ua + 2 ; pen 0 )  | ( move ua , 0 ; move ul , ua / 3 ; pen ul )  | ( pen ul / 4 ; move ua , ua ; move ul , 2 )  | ( move 0 - ul , 0 ; move ua , 0 ; move ul , 2 )  | ( move ua , ua ; move ul , 4 * 2 ; v0 = 0 )  | ( move ua , ua ; ( v0 = 0 ; move ul , 2 ) )  | ( move ua - ul , 0 ; move ul , ua ; move ul , 2 )  | ( move ua , ua ; move ul , ua / 3 ; v0 = ua )  | ( v0 = 2 ; move ua , 0 ; move ul , 4 / v0 )  | ( move ua , 0 ; ( v0 = 2 ; move ul , v0 ) )  | ( pen ul ; move ua , ua ; move 2 - ul , 3 - ul )  | ( move ua , ua ; ( move ul , 2 ; move 0 , ua - 3 ) )  | ( move ua , 0 ; ( move 2 - ul , ua + 2 ; pen ua ) )  | ( ( move ua , ua ; move ul , 2 ) ; v0 = 4 / ua )  | ( ( move ua , ua ; move 0 , ua ) ; move ul , ua / 3 )  | ( move ua , ua ; move ul , ul + ul ; v0 = ua + 3 )  | ( move ua , 0 ; ( move ul , 2 ; pen ul ; pen 4 / ua ) )  | ( ( move ua , 0 ; move ul , 2 - ua ) ; move 0 , 0 ; pen 0 )  
[526] ( move ua , 0 ; move ua , 3 )  | ( move ua , ua ; move ua , 3 )  | ( move ua , 0 ; move ua , ua + 3 )  | ( move ua , 0 ; move ua , 3 - ua )  | ( move ua , ua ; move ua , 2 + ul )  | ( move ua , ua ; move ua , 3 - ua )  | ( pen ul ; move ua , ua ; move ua , 3 )  | ( move ua , ua ; pen ul ; move ua , 3 )  | ( move ua , 0 - ua ; move ua , 2 + ul )  | ( move ua , ua * 3 ; move ua , ua + 3 )  | ( move ua , ua ; move ua , 3 ; v0 = 0 )  | ( move ua , ua ; move ua , 3 ; v0 = ul )  | ( move ua , 0 ; move ua , ua + 3 ; move 0 , 3 )  | ( v0 = ua ; move v0 , ua ; move v0 , 3 )  | ( move ua , 0 ; ( move ua , 3 ; v0 = ua ) )  | ( move ua , 0 ; move 0 , ua + 2 ; move ua , ul )  | ( ( move ua , ua ; move ua , 3 ) ; v0 = ul )  | ( move ua , ua * 3 ; move ua , 3 ; pen 0 - ul )  | ( move ua - ul , ua ; move ul , 0 ; move ua , 3 )  | ( move ua , ua ; move 0 , ul ; move ua , ul + ul )  | ( move ua , ua ; v0 = 2 + ul ; move ua , v0 )  | ( ( v0 = ua ; move v0 , 0 ) ; move v0 , 3 )  | ( ( move ua , ua ; move ua , 3 ; pen 2 ) ; pen ul )  | ( ( move ua , 0 ; move ua , 2 + ul ) ; move 0 , 2 )  | ( ( pen ul ; move ua , ua ; move ua , 3 ) ; pen ul )  | ( v0 = ua ; ( move v0 , v0 ; move v0 , 3 ) )  | ( move ua , ua * 2 ; move 0 , ul ; move ua , ul + ul )  | ( move ua , 0 ; ( v0 = 2 ; move ua , v0 + ul ) )  | ( ( move ua , ua ; move 0 , 3 ; move ua , ua ) ; pen 0 )  | ( v0 = ua ; move v0 , ua * 4 ; move v0 , ua + 3 )  | ( ( move ua , ua ; v0 = ul ; move ua , 3 ) ; pen v0 )  | ( move ua , 0 ; ( pen ul ; move ul , 3 ) ; move ua - ul , ua )  
[527] ( move ua , 0 ; move 2 , ul )  | ( move ua , ua ; move 2 , ul )  | ( move ua , 0 ; move 2 , 2 - ul )  | ( move ua , 0 ; move 3 - ul , ul )  | ( move ua , 0 ; move ul + ul , ul )  | ( move ua , ua ; move ul + ul , ul )  | ( move ua , ua ; move 2 , ul ; pen 3 )  | ( move ua , ua ; pen ul ; move 2 , ul )  | ( pen ul ; move ua , ua ; move 2 , ul )  | ( move ua , 0 ; move ul + ul , ua + ul )  | ( move ua , 0 ; move 2 , ul ; v0 = 4 )  | ( ( move ua , 0 ; move 2 , ul ) ; pen 2 )  | ( move ua , 0 ; move 0 , ul ; move 2 , ua )  | ( move ua , ua ; move 2 , ul ; move 0 , 0 )  | ( move ua , ua + ua ; move ul + ul , ul )  | ( move ua , 0 ; move 2 , ul ; v0 = ua )  | ( move ua , 0 ; pen 2 - ul ; move 2 , ul )  | ( move ua , ua ; move 2 , ul ; move 0 , ua )  | ( move ua , 0 ; pen ul ; move 2 , ua + ul )  | ( move ua , ua ; move ul , ul ; move ul , 0 )  | ( move ua , ua ; move 3 - ul , ul ; pen ua )  | ( move ua , ua * 2 ; move 2 , ul ; move 0 , 0 )  | ( ( move ua , ua ; move 0 , ua ) ; move 2 , ul )  | ( v0 = 2 ; move ua , ua * 2 ; move v0 , ul )  | ( move ua , ua ; move ul + ul , ua + ul ; pen 4 )  | ( move ua , 0 ; ( move 2 , ul ; v0 = 2 + ul ) )  | ( move ua , 0 ; move 2 , ul - ua ; v0 = ua + 4 )  | ( move ua , ua ; v0 = ul ; move v0 + ul , v0 )  | ( move 0 , 0 ; move ua , ua * 3 ; move ul + ul , ul )  | ( move ua , ua ; ( move ul + ul , ul ; pen ua + 2 ) )  | ( move ua , ua + ua ; ( move 2 , ua + ul ; pen ul / ua ) )  | ( pen ul ; ( move ua , 0 ; move ul , ul ; move ul , ua + ua ) )  
[528] ( move ua , 0 ; move ul , 3 )  | ( move ua , ua ; move ul , 3 )  | ( move ua , 0 ; move ul , 2 + ul )  | ( move ua , 0 ; move ul , ua + 3 )  | ( move ua , ua ; move 2 - ul , 3 )  | ( move ua , 0 ; move ul , 4 - ul )  | ( move ua , ua * 2 ; move ul , 3 )  | ( move ua , ua * 3 ; move ul , 3 )  | ( move ua , ua ; move ul , 2 + ul )  | ( move ua , ua ; move ul , 3 - ua )  | ( pen ul ; move ua , 0 ; move ul , 3 )  | ( move ua , ua * 3 ; move ul , 2 + ul )  | ( move ua , ua + ua ; move ul , ua + 3 )  | ( move ua , 0 ; move 0 , 2 ; move ul , ul )  | ( move ua , 0 ; v0 = ua ; move ul , 3 )  | ( move ua , 0 ; move ul , 3 ; v0 = ua )  | ( move ua , 0 ; v0 = ul ; move ul , 3 )  | ( move ua , 0 ; move ul , 2 + ul ; pen 0 )  | ( v0 = ul ; move ua , ua ; move ul , 3 )  | ( move ua , ua ; v0 = ul ; move ul , 3 )  | ( move ua , ua ; move ul , 3 ; v0 = ul )  | ( move ua , 0 ; pen ul ; move ul , ua + 3 )  | ( v0 = ua ; move ua , v0 ; move ul , 3 )  | ( move ua , 0 ; move 0 , 0 ; move 4 - 3 , 3 )  | ( ( move ua , 0 ; move ul , 3 ) ; move 0 , 3 )  | ( move ua , 0 ; move ul , 2 + ul ; v0 = 4 )  | ( move ua , 0 ; move ul , ua + 3 ; v0 = ua )  | ( v0 = ul ; move ua , 0 ; move v0 , 4 - v0 )  | ( move ua , ua ; v0 = ul ; move v0 , 2 + v0 )  | ( move ua , ua * 3 ; v0 = ul ; move ul , ua + 3 )  | ( ( move ua , ua ; v0 = ul ) ; move v0 , 3 / v0 )  | ( move ua , 0 ; ( move ul , 3 ; v0 = 2 ; v1 = ul ) )  
[529] ( move 3 , 0 ; move ua , ul )  | ( move 3 , ua ; move ua , ul )  | ( move 2 + ul , 0 ; move ua , ul )  | ( move 3 , 0 ; move ua , ua + ul )  | ( move 3 , 0 - ua ; move ua , ul )  | ( move 3 , ua * 3 ; move ua , ul )  | ( move 2 + ul , ua ; move ua , ul )  | ( move 4 - ul , ua ; move ua , ul )  | ( pen ul ; move 3 , 0 ; move ua , ul )  | ( move 3 , 0 ; move ua , ul ; pen ul )  | ( move 3 , 0 ; pen ul ; move ua , ul )  | ( move 3 , ua ; move ua , ul ; pen ua )  | ( move 3 , ua ; move ua , ul ; pen ul )  | ( move 3 , 0 ; move 0 , ul ; move ua , 0 )  | ( move 3 , ua ; move 0 , ul ; move ua , ua )  | ( move 3 , ua ; move ua , ul ; v0 = ul )  | ( move 3 , ua ; move ua , ul ; pen 0 - ua )  | ( ( move 3 , ua ; move ua , ul ) ; pen ua )  | ( v0 = 3 ; move v0 , 0 ; move ua , ul )  | ( move 3 , 0 ; move ua , ul ; move 0 , ua - ul )  | ( move 3 , 0 ; v0 = ua * ua ; move ua , ul )  | ( move 3 , ua ; v0 = ua ; move ua , ul + v0 )  | ( move 3 , 0 ; pen ul ; ( move ua , ul ; pen ua ) )  | ( move 3 , 0 ; v0 = ua ; move v0 , v0 / ua )  | ( v0 = ua ; move 3 , v0 ; move v0 , ul - ua )  | ( move 3 , ua ; v0 = ul ; move ua / v0 , v0 )  | ( ( move ul , 0 ; move 4 / 2 , ua ) ; move ua , ul )  | ( move 2 + ul , ua ; move ua , ul ; move 0 , ul / 2 )  | ( move 3 , ua ; ( move ua , ua + ul ; v0 = ua ) )  | ( move 4 - ul , ua ; move ua , ua + ul ; pen ua + 2 )  | ( v0 = ua ; move 3 , ua ; ( move ua , ul ; pen 3 ) )  
[530] ( move ua , 0 ; move ua , 4 )  | ( move ua , ua ; move ua , 4 )  | ( move ua , 0 ; move ua , ua + 4 )  | ( move ua , ua ; move ua , ua + 4 )  | ( move ua , ua ; move ua , 3 + ul )  | ( move ua , 0 ; move ua , 4 ; pen 3 )  | ( move ua , ua ; move ua , 4 ; pen 4 )  | ( move ua , ua ; move ua , 4 ; pen ul )  | ( move ua , ua + ua ; move ua , 2 + 2 )  | ( move ua , 0 ; move 0 , 4 ; move ua , ua )  | ( move ua , ua ; move 0 , 0 ; move ua , 4 )  | ( move ua , ua ; move ua , 4 ; move 0 , 0 )  | ( move ua , ua ; move ua , 4 ; move 0 , 2 )  | ( move ua , ua ; move ua , 4 ; v0 = 4 )  | ( move ua , ua ; move ua , 4 ; v0 = ul )  | ( move ua , 0 ; pen ul ; move ua , 3 + ul )  | ( pen ul ; ( move ua , ua ; move ua , 4 ) )  | ( move ua , 0 ; v0 = ua ; move v0 , 4 )  | ( pen ul ; move ua , ua ; move ua , 3 + ul )  | ( move ua , ua ; v0 = ua ; move v0 , 4 )  | ( v0 = ua ; move v0 , ua ; move v0 , 4 )  | ( v0 = ua ; move v0 , v0 ; move v0 , 4 )  | ( v0 = 2 ; move ua , ua ; move ua , 2 * v0 )  | ( move ua , ua ; v0 = ua ; move ua , 4 + v0 )  | ( move ua , ua ; move ua , 4 ; move ul / 2 , ua - 3 )  | ( move ua , ua ; move ua , 3 + ul ; v0 = 2 / ua )  | ( move ua , ua * 2 ; move ua , 3 + ul ; pen ua * 4 )  | ( ( move ua , 0 ; move 0 , ul ; move ua , 3 ) ; pen ua )  | ( v0 = ua ; move v0 , v0 ; move v0 , v0 + 4 )  | ( v0 = ua ; move v0 , v0 ; move v0 , 4 + v0 )  | ( move ua , 0 ; ( move ul , 4 ; move ua - ul , ua * 3 ) )  | ( ( move ua , ua ; move ua , 4 ; pen ua - 4 ) ; v0 = ua )  
[531] ( move ua , 2 ; move ua , 2 )  | ( move ua , ul + ul ; move ua , 2 )  | ( move ua , 2 ; move ua , ul + ul )  | ( move ua , 4 / 2 ; move ua , 3 - ul )  | ( move ua , 3 - ul ; move ua , 3 - ul )  | ( move ua , 2 ; move 0 , 2 ; move ua , 0 )  | ( move ua , 2 ; move ua , 2 ; pen 4 - ul )  | ( move ua , 2 ; v0 = ua ; move v0 , 2 )  | ( move ua , 2 ; move ua , ul + ul ; pen ua )  | ( v0 = 2 ; move ua , v0 ; move ua , v0 )  | ( v0 = ua + ul ; move ua , 2 ; move ua , 2 )  | ( move ua , 2 ; v0 = ul / ua ; move ua , 2 )  | ( ( move ua , 2 ; v0 = 2 ) ; move ua , v0 )  | ( v0 = 3 - ul ; move ua , 2 ; move ua , ua + v0 )  
[532] ( move ua , 0 ; move 3 , ul )  | ( move ua , ua ; move 3 , ul )  | ( move ua , 0 ; move 3 , ua + ul )  | ( move ua , ua * 4 ; move 3 , ul )  | ( move ua , ua ; move 3 , ua + ul )  | ( move ua , ua + ua ; move 3 , ul )  | ( move ua , ua ; move 2 + ul , ul )  | ( move ua , ua ; move 3 , ul - ua )  | ( move ua , ua ; move 3 , ul ; pen 0 )  | ( move ua , ua ; move 3 , ul ; pen 4 )  | ( move ua , ua ; move 3 , ul ; pen ua )  | ( pen ul ; move ua , ua ; move 3 , ul )  | ( move ua , ua ; pen ul ; move 3 , ul )  | ( move ua , 0 ; v0 = 3 ; move 3 , ul )  | ( move ua , ua ; move 3 , ul ; v0 = 0 )  | ( move ua , 0 ; move ul , ul ; move 2 , ua )  | ( move ua , ua ; move ul , ul ; move 2 , ua )  | ( pen ul ; move ua , ua ; move 3 , ua + ul )  | ( move ua , 0 ; v0 = 3 + ul ; move 3 , ul )  | ( move ua , 0 ; v0 = 3 ; move 4 - ul , ul )  | ( move ua , 0 ; ( move 4 - ul , ul ; pen 0 ) )  | ( ( move ua , ua ; move 3 , ul ) ; pen 3 + 2 )  | ( move ua , 0 ; move 3 , ul ; v0 = ua - ul )  | ( move ua , ua ; move 4 - ul , ul ; v0 = 2 )  | ( move 0 , ua ; move ua , ua ; move 2 + ul , ul )  | ( move ua , ua + ua ; move ul , ul ; move 2 , 0 )  | ( move ua , ua + ua ; move 3 , ua + ul ; pen ua )  | ( move ua , 0 ; ( move 3 , ul ; v0 = ua - ul ) )  | ( ( move ua , 0 - ua ; v0 = 3 ) ; move v0 , ul )  | ( pen ul / ua ; move ua , ua * 2 ; move 2 + ul , ul )  | ( ( move ua , 0 ; v0 = ul ) ; move v0 * 3 , v0 )  | ( ( ( move ua , ua ; move 3 , ul ) ; pen ul / 2 ) ; pen 0 )  
[533] ( move ua , 3 ; move ua , 2 )  | ( move ua , 3 ; move ua , 4 / 2 )  | ( move ua , ua + 3 ; move ua , 2 )  | ( move ua , 3 ; move ua , ua + 2 )  | ( move ua , 3 ; move ua , ul + ul )  | ( move ua , 3 ; move ua , 2 ; pen ul )  | ( move ua , 3 ; move ua , ua + 2 ; pen ua )  | ( move ua , 2 + ul ; move ua , 2 ; v0 = ul )  | ( move ua , 3 ; v0 = ul ; move ua , ul + v0 )  | ( ( move ua , 3 ; move ua , 4 - 2 ) ; v0 = 3 )  
[534] ( move ua , 0 ; move ul , 4 )  | ( move ua , ua ; move ul , 4 )  | ( move ua , 0 ; move 4 - 3 , 4 )  | ( move ua , 0 ; move ul , 3 + ul )  | ( move ua , 0 - ua ; move ul , 4 )  | ( move ua , ua * 2 ; move ul , 4 )  | ( move ua , ua ; move ul , 3 + ul )  | ( move ua , ua ; move ul , ua + 4 )  | ( pen ul ; move ua , ua ; move ul , 4 )  | ( move ua , ua * 3 ; move ul , 3 + ul )  | ( v0 = 0 ; move ua , 0 ; move ul , 4 )  | ( move ua , ua ; move ul , 4 ; move 0 , ul )  | ( move ua , ua ; ( pen ul ; move ul , 4 ) )  | ( v0 = ua ; move v0 , ua ; move ul , 4 )  | ( move ua , 0 - ua ; move ul , 4 ; v0 = 0 )  | ( ( move ua , ua ; move ul , 4 ) ; v0 = 0 )  | ( move ua , ua + ua ; move ul , 4 ; v0 = 0 )  | ( v0 = 2 - ua ; move ua , ua ; move ul , 4 )  | ( move ua , ua ; ( move ul , 4 ; move 0 , ul ) )  | ( move ua , ua ; move ul , 3 + ul ; move 0 , ua )  | ( move ua , ua ; move ul , 4 ; v0 = ua + ul )  | ( ( v0 = 4 ; move ua , ua ) ; move ul , v0 )  | ( ( move ua , ua ; v0 = 4 ) ; move ul , v0 )  | ( move ua , ua ; v0 = ua + 4 ; move ul , v0 )  | ( pen ul ; ( move ua , 0 ; pen ul ) ; move ul , 4 )  | ( ( move ua , 0 ; move ul , 4 ) ; v0 = 4 + ul )  | ( move ua , ua ; move ul , 4 - ua ; v0 = 4 + ul )  | ( ( move ua , ua ; move ul , 4 ) ; v0 = ua * ua )  | ( move ua , ua ; ( pen ul ; move ul , 4 ) ; pen 3 + ul )  | ( v0 = ul ; move v0 * ua , ua / v0 ; move ul , 4 )  | ( ( v0 = ul ; move ua , ua ) ; pen ul ; move v0 , 4 )  
[535] ( move ua , 2 ; move 2 , ul )  | ( move ua , ua + 2 ; move 2 , ul )  | ( move ua , ul + ul ; move 2 , ul )  | ( move ua , 2 ; move ul + ul , ul )  | ( move ua , 2 ; move 2 , ul ; pen 4 )  | ( move ua , 2 ; pen ul ; move 2 , ul )  | ( move ua , 2 ; move 0 , 0 ; move 2 , ul )  | ( move ua , 2 ; move ul + ul , ul - ua )  | ( move ua , ul + ul ; move ul + ul , ul )  | ( move ua , 4 - 2 ; move 2 , ul ; pen ul )  | ( pen ul ; ( move ua , 2 ; move 2 , ul ) )  | ( move ua , ul + ul ; pen ul ; move 2 , ul )  | ( v0 = 2 ; move ua , v0 ; move v0 , ul )  | ( move ua , 2 ; move 2 , ul - ua ; v0 = ul )  | ( move ua , ul + ul ; move 2 , ul ; v0 = 4 )  | ( move ua , 2 ; ( move ul + ul , ul ; pen 2 ) )  | ( ( move ua , 2 ; v0 = 2 ) ; move v0 , ul )  | ( move ua , ul + ul ; move ul , ul ; move ul , 0 )  | ( ( move 0 , 0 ; move ua , 2 ) ; move 2 , ul - ua )  | ( v0 = ul + ul ; move ua , v0 ; move v0 , ul )  | ( move ua , 3 - ul ; move 2 , ul ; v0 = ua - ul )  | ( move ua , 2 ; move 2 - ul , ul - ua ; move ul , ua )  | ( move ua , ul + ul ; move 2 , ul ; v0 = ul + ul )  | ( move ua , 2 ; ( move 2 , ul ; move 0 , ul ; pen 0 ) )  | ( v0 = 3 - ul ; move ua , v0 ; move v0 , 4 - 3 )  | ( v0 = ul ; ( move ua , v0 + v0 ; move 2 , ul ) )  | ( ( v0 = 3 - ul ; move ua , v0 ) ; move v0 , ul )  | ( ( move ua , ul + ul ; move 4 / 2 , ul ) ; move 0 , ul )  | ( v0 = ul ; move ua , v0 + v0 ; move 2 , 2 - v0 )  | ( ( move ua , 2 ; ( move 2 , ul ; move 0 , ul ) ) ; pen 0 )  | ( ( move ua , 2 ; move ul , ua + ul ) ; pen ul ; move ul , ua )  
[536] ( move 2 , ul ; move ua , 2 )  | ( move 4 - 2 , ul ; move ua , 2 )  | ( move 4 / 2 , ul ; move ua , 2 )  | ( move 2 , ul ; move ua , ua + 2 )  | ( move 2 , ul - ua ; move ua , 2 )  | ( move 3 - ul , ul ; move ua , 2 )  | ( move 2 , ul ; move ua , ul + ul )  | ( move ul + ul , ul ; move ua , 2 )  | ( move 2 , ul ; move ua , 2 ; v0 = ul )  | ( move 2 , ul ; v0 = ua ; move v0 , 2 )  | ( pen ul ; move 2 , ul ; move ua , ul + ul )  | ( move ul + ul , ul ; pen ul ; move ua , 2 )  | ( ( move 2 , ul ; v0 = 3 ) ; move ua , 2 )  | ( v0 = 2 ; move v0 , ul ; move ua , v0 )  | ( move 2 , ul ; ( move 0 , ul ; move ua , ul ) )  | ( move ul + ul , ul ; move ua , 2 ; pen 0 - 2 )  | ( move ul + ul , ul ; ( move ua , 2 ; pen 0 ) )  | ( move ul , ua + ul ; move ul , ua ; move ua , 2 )  | ( move 2 , ul ; v0 = 3 - ul ; move ua , v0 )  | ( move ul , ul ; move ul , ua ; move ua , ul + ul )  | ( move 2 , ua + ul ; move ua , 2 ; move 0 , ua * 4 )  | ( move ul + ul , ul ; ( move ua , 2 ; v0 = ul ) )  | ( move ul , ul - ua ; move ul , ua * 4 ; move ua , 2 )  | ( move ul + ul , ul ; move ua , ul + ul ; v0 = 2 + ul )  | ( move ul + ul , ul ; ( move ua , ul + ul ; v0 = ul ) )  | ( pen ul ; ( v0 = 2 ; move v0 , ul ) ; move ua , v0 )  | ( move 2 , ul ; ( move ua , 3 - ul ; v0 = 4 ; pen ul ) )  
[537] ( move ua , 2 ; move ua , 3 )  | ( move ua , 4 / 2 ; move ua , 3 )  | ( move ua , 2 ; move ua , ua + 3 )  | ( move ua , ua + 2 ; move ua , 3 )  | ( move ua , 2 ; move ua , 4 - ul )  | ( move ua , 3 - ul ; move ua , 3 )  | ( move ua , ul + ul ; move ua , 3 )  | ( move ua , 2 ; move ua , 3 ; v0 = ul )  | ( move ua , 2 ; move ua , 3 ; pen ul + ul )  | ( move ua , 2 ; v0 = 3 ; move ua , v0 )  | ( ( move 0 , 0 ; move ua , 2 ) ; move ua , 3 )  | ( move ua , 2 ; v0 = ul ; move ua / v0 , 3 )  | ( move ua , 2 ; move ua , 4 - ul ; v0 = 2 + 2 )  | ( move ua , 2 ; move ua , 4 - ul ; v0 = 3 + 2 )  | ( move ua , 3 - ul ; move ua , 3 ; move 0 , 2 - ul )  | ( move ua , ua + 2 ; v0 = ua + 3 ; move ua , v0 )  
[538] ( move ul , 0 ; move ua , 4 )  | ( move ul , ua ; move ua , 4 )  | ( move 4 - 3 , 0 ; move ua , 4 )  | ( move ul , 0 ; move ua , 2 + 2 )  | ( move ul , ua ; move ua , 2 + 2 )  | ( move ul , 0 ; move ua , 3 + ul )  | ( move ul , 0 ; move ua , ua + 4 )  | ( move ul , ua * 2 ; move ua , 4 )  | ( move ul , ua * 3 ; move ua , 4 )  | ( move ul , 0 ; pen ul ; move ua , 4 )  | ( pen ul ; move ul , ua ; move ua , 4 )  | ( move ul , ua ; move ua , 4 ; pen ul )  | ( move ul , 0 ; move ua , 4 ; move 0 , 2 )  | ( move 0 , ua ; move ul , ua ; move ua , 4 )  | ( move ul , ua ; move ua , 4 ; v0 = ua )  | ( ( move ul , ua ; move ua , 4 ) ; pen ul )  | ( v0 = 4 ; move ul , ua ; move ua , v0 )  | ( v0 = ua ; move ul , v0 ; move v0 , 4 )  | ( ( move ul , 0 ; move ua , 4 ) ; move 0 , ua )  | ( move ul , ua ; move ua , 4 ; v0 = ua * 3 )  | ( move ul , ua ; ( move ua , 4 ; v0 = ul ) )  | ( pen ul ; ( move ul , ua * 3 ; move ua , 4 ) )  | ( move ul , ua ; move ua , 4 ; v0 = ul + ul )  | ( ( move ul , ua ; v0 = ua ) ; move v0 , 4 )  | ( move ul , 0 ; ( move ua , 4 ; v0 = ul / 3 ) )  | ( move ul , ua * 4 ; move ua , 4 ; v0 = ul - 2 )  | ( move ul - 2 , 4 - ul ; move ua , ul ; v0 = ua )  | ( ( move ul , 0 ; move ua , 4 ; v0 = 2 ) ; pen ul )  | ( v0 = ua ; ( move ua / v0 , ua ; move v0 , 4 ) )  | ( move ul , 0 ; ( pen ul ; ( v0 = ul ; move ua , 4 ) ) )  
[539] ( move 2 , 2 ; move ua , ul )  | ( move 2 , 2 ; move ua , ua + ul )  | ( move 2 , 3 - ul ; move ua , ul )  | ( move ul + ul , 2 ; move ua , ul )  | ( move 4 / 2 , ul + ul ; move ua , ul )  | ( move 2 , 2 ; move ua , ul ; v0 = 4 )  | ( move ul + ul , ul + ul ; move ua , ul )  | ( move 2 , 2 ; move ua , ul ; move 0 , ul )  | ( move 2 , 2 ; move ua , ul ; pen ul / ua )  | ( ( move 2 , 2 ; move ua , ul ) ; v0 = 0 )  | ( v0 = 2 ; move v0 , v0 ; move ua , ul )  | ( ( move 2 , 2 ; move ua , ul ) ; v0 = ua )  | ( move 2 , 3 - ul ; v0 = 4 + 3 ; move ua , ul )  | ( move ul + ul , ua + 2 ; move ua , ul ; pen 0 - 4 )  | ( v0 = ul ; move 2 , v0 + v0 ; move ua , v0 )  | ( move ul + ul , ul + ul ; move ua , ul ; v0 = 2 )  | ( v0 = ua ; move 3 - ul , 2 ; move v0 , ul - ua )  | ( move ul + ul , 3 - ul ; v0 = ul ; move ua , v0 )  | ( ( move 2 , ua + 2 ; move ua , ul ) ; v0 = ua + 2 )  | ( pen ul ; ( move ul + ul , 2 ; move ua , ul ; v0 = 0 ) )  | ( pen ul ; move ul + ul , 2 ; ( move ua , ul ; v0 = ul ) )  
[540] ( move ua , 2 ; move ul , 2 )  | ( move ua , 2 ; move ul , 4 - 2 )  | ( move ua , 4 / 2 ; move ul , 2 )  | ( move ua , ua + 2 ; move ul , 2 )  | ( move ua , 3 - ul ; move ul , 2 )  | ( move ul , ul ; move 0 - ua , ul )  | ( move ua , ul + ul ; move ul , 2 )  | ( move ua , 2 ; move ul , ul + ul )  | ( move ua , 2 ; move ul , 2 ; pen 4 )  | ( move ua , 2 ; move ul , 2 ; pen ua )  | ( pen ul ; move ua , 2 ; move ul , 2 )  | ( move ua , 2 ; move ul , 2 ; pen ul )  | ( pen 4 - 3 ; move ua , 2 ; move ul , 2 )  | ( move ua , 2 ; v0 = ul ; move ul , 2 )  | ( ( pen ul ; move ua , 2 ) ; move ul , 2 )  | ( move 0 , ul ; move ua , ul ; move ul , 2 )  | ( move ua , ul + ul ; move ul , 2 ; pen 0 )  | ( move ua , 2 ; move ul , ua + 2 ; pen ul )  | ( move ua , 3 - ul ; pen ul ; move ul , 2 )  | ( move ua , 2 ; ( move ul , 2 ; v0 = ua ) )  | ( ( move ua , 2 ; move 2 - ul , 2 ) ; pen ua )  | ( move ua , ul + ul ; move ul , 4 / 2 ; pen 0 )  | ( move ua , 2 ; move ul / ua , ua ; move ul , 2 )  | ( ( pen ul ; move ua , 2 ) ; move ul , ul + ul )  | ( ( move ua , ul + ul ; v0 = 2 ) ; move ul , v0 )  | ( move ua , 2 ; move ul , 2 ; ( pen ul ; v0 = ua ) )  | ( ( move ua , 2 ; move ul , ua + 2 ) ; v0 = ul - 4 )  | ( move ua , 2 ; move ul , 2 ; ( pen 0 ; v0 = 0 - ua ) )  
[541] ( move ul , 0 ; move 3 , ul )  | ( move ul , ua ; move 3 , ul )  | ( move ul , 0 ; move 3 , ua + ul )  | ( move ul , 0 ; move 3 , ul - ua )  | ( move ul , ua * 3 ; move 3 , ul )  | ( move ul , ua ; move 3 , ua + ul )  | ( move ul , ua ; move 3 , ul - ua )  | ( move ul , ua ; move 4 - ul , ul )  | ( move ul , ua ; move 3 , ul ; pen 3 )  | ( move ul , ua ; move 3 , ul ; pen ul )  | ( move ul , ua * 2 ; move 3 , ul - ua )  | ( move ul , 0 ; move 0 , 0 ; move 3 , ul )  | ( move ul , ua ; move 2 + ul , ua + ul )  | ( move ul , 0 ; v0 = 0 ; move 3 , ul )  | ( move ul , 0 ; v0 = ua ; move 3 , ul )  | ( move ul , 0 ; move 2 , ul ; move ul , ua )  | ( move ul , 0 ; move 4 - ul , ul ; pen ua )  | ( move ul , ua ; move 3 , ul ; pen ua * 4 )  | ( ( pen ul ; move ul , ua ) ; move 3 , ul )  | ( v0 = 0 ; move ul , v0 ; move 3 , ul )  | ( move ul , ua ; pen ul ; move 2 + ul , ul )  | ( move ul , 0 ; move 3 , ul ; v0 = 2 - 4 )  | ( ( move ul , 0 ; move 3 , ul ) ; v0 = 0 )  | ( move ul , 0 ; move 3 , ul ; v0 = ua * ua )  | ( move ul , ua ; ( move 3 , ul ; pen ua / 2 ) )  | ( move ul , ua ; v0 = ua - ul ; move 3 , ul )  | ( ( move ul , 0 ; move 2 + ul , ul ) ; v0 = 0 )  | ( move ul , 0 ; ( move ul , ua + ul ; move 2 , ua ) )  | ( move ul , ua * 3 ; move 2 + ul , ul ; pen 3 - ua )  | ( move ul , 0 ; ( v0 = ua + ul ; move 3 , v0 ) )  | ( v0 = 0 ; ( move ul , v0 ; move 3 , ul ; pen ua ) )  | ( move ul , ua ; ( ( pen ul ; v0 = 0 ) ; move 3 , ul ) )  
[542] ( move ua , 0 ; move 4 , ul )  | ( move ua , ua ; move 4 , ul )  | ( move ua , 0 ; move 3 + ul , ul )  | ( move ua , 0 ; move 4 , ua + ul )  | ( move ua , ua * 2 ; move 4 , ul )  | ( move ua , ua * 3 ; move 4 , ul )  | ( move ua , ua * 4 ; move 4 , ul )  | ( move ua , ua ; move 4 , ua + ul )  | ( move ua , ua ; move 3 + ul , ul )  | ( move ua , ua ; move 4 , ul ; pen 2 )  | ( move ua , ua ; move 3 + ul , 2 - ul )  | ( move ua , ua + ua ; move 3 + ul , ul )  | ( move ua , 0 ; move 4 , ul ; pen 4 + 3 )  | ( ( move ua , 0 ; move 4 , ul ) ; pen 0 )  | ( move ua , ua ; move 4 , ul ; v0 = 4 )  | ( move ua , ua ; move 4 , ul ; v0 = ua )  | ( move ua , 0 ; move 4 , ua + ul ; pen ul )  | ( move ua , 0 ; move 4 , ul ; pen ul - ua )  | ( move ua , ua ; move 4 , ul ; pen 3 + ul )  | ( ( move ua , ua ; pen ul ) ; move 4 , ul )  | ( v0 = ua ; move v0 , 0 ; move 4 , ul )  | ( move ua , ua ; move 4 , ua + ul ; pen ua )  | ( pen ul ; move ua , ua + ua ; move 4 , ul )  | ( move ua , ua ; move 4 , ul ; pen ua + ul )  | ( move ua , ua ; v0 = ul ; move 4 , v0 )  | ( move ua , ua ; v0 = 4 ; move v0 , ul )  | ( ( move ua , 0 ; pen ul ) ; move 4 , ua + ul )  | ( v0 = ua ; ( move v0 , v0 ; move 4 , ul ) )  | ( move ul - 4 , 0 ; move ua , ua ; move 4 , ua + ul )  | ( ( move ua , ua + ua ; v0 = ul ) ; move 4 , ul )  | ( move ua , 0 ; v0 = 0 ; move 4 / v0 , ul - v0 )  
[543] ( move 3 , 0 ; move ul , ul )  | ( move 3 , ua ; move ul , ul )  | ( move 3 , 0 ; move ul , ul - ua )  | ( move 3 , ua + ua ; move ul , ul )  | ( move 2 + ul , ua ; move ul , ul )  | ( move 3 , ua ; move ul , ua + ul )  | ( move 3 , ua ; move ul , ul - ua )  | ( move 3 , 0 ; pen 4 - 3 ; move ul , ul )  | ( move 3 , 0 ; move ul , ul ; v0 = ul )  | ( move 3 , 0 ; v0 = ul ; move ul , ul )  | ( move 3 , ua ; move ul , ul ; v0 = 3 )  | ( move 2 + ul , 0 ; move ul , ul ; pen 0 )  | ( move 3 , 0 ; ( move ul , ul ; pen ul ) )  | ( ( move 3 , ua ; move ul , ul ) ; pen ua )  | ( move 3 , ua ; v0 = ul ; move v0 , ul )  | ( move 3 , 0 ; v0 = ul ; move v0 , v0 )  | ( ( move 3 , 0 ; move ul , ul ) ; pen 4 / 2 )  | ( ( move 3 , ua ; move ul , ul ) ; v0 = 0 )  | ( move 3 , ua ; move ul , ul ; v0 = 2 / 3 )  | ( ( move 3 , 0 ; pen 2 - ul ) ; move ul , ul )  | ( move 3 , ua ; move ul , ul ; v0 = ul - 3 )  | ( move 3 , ua ; ( move ul , ua + ul ; pen 0 ) )  | ( move ul , ua ; ( move 2 , ua ; move ul , ul ) )  | ( move ul , 0 ; move 2 , ua * 3 ; move ul , 3 - 2 )  | ( ( move 3 , 0 ; move ul , ul ) ; v0 = ua + 3 )  | ( v0 = ul ; move 3 , ua * v0 ; move ul , v0 )  | ( move 2 + ul , 0 ; ( move ul , ul ; move 0 , ua ) )  | ( v0 = ul ; move 3 , ua * v0 ; move v0 , v0 )  | ( ( move 2 + ul , 0 ; move ul , ua + ul ) ; v0 = 2 )  | ( move 3 , 0 ; v0 = ul ; ( move v0 , ul ; pen ua ) )  | ( move 3 , ua ; move ul , ua + ul ; ( pen ul ; pen ul ) )  | ( ( pen ul - ua ; pen ul ) ; move 3 , ua * 2 ; move ul , ul )  
[544] ( move 4 , 0 ; move ua , ul )  | ( move 4 , ua ; move ua , ul )  | ( move 4 , ua ; move ua , 4 - 3 )  | ( move 4 , 0 ; move ua , ua + ul )  | ( move 4 , ua + ua ; move ua , ul )  | ( move 4 , ua ; move ua , ua + ul )  | ( move 4 , 0 ; move ua , ul ; pen ul )  | ( move 3 + ul , ua + ua ; move ua , ul )  | ( move 3 + ul , ua ; move ua , ua + ul )  | ( move 3 + ul , ua ; move ua , ul - ua )  | ( move 4 , 0 ; v0 = ua ; move ua , ul )  | ( v0 = 2 ; move 4 , ua ; move ua , ul )  | ( v0 = 3 ; move 4 , ua ; move ua , ul )  | ( ( move 4 , ua ; move ua , ul ) ; pen 0 )  | ( ( pen ul ; move 4 , 0 ) ; move ua , ul )  | ( move 4 , ua ; move ua , ul ; v0 = ul )  | ( move 3 + ul , 0 ; move ua , ul ; pen ul )  | ( ( pen ul ; move 4 , ua ) ; move ua , ul )  | ( move 4 , 0 ; v0 = ul ; move ua , v0 )  | ( v0 = ua ; move 4 , v0 ; move ua , ul )  | ( move 4 , 0 ; move ua , ul ; v0 = 3 + 2 )  | ( v0 = ua ; move 4 , v0 ; move v0 , ul )  | ( move 4 , ua + ua ; v0 = 2 ; move ua , ul )  | ( move 4 , ua * 2 ; move ua , ul ; v0 = ua )  | ( move 4 , ua ; move ua , ul - ua ; v0 = 4 )  | ( pen ul ; ( move 4 , 0 ; move ua , ua + ul ) )  | ( ( move 3 , ua ; move ul , ua ) ; move ua , ul )  | ( ( v0 = ua ; move 4 , 0 ) ; move v0 , ul )  | ( pen 2 / ua ; move 2 + 2 , ua ; move ua , ua + ul )  | ( move 4 , ua ; ( move ua , ul ; pen ul ) ; v0 = 4 )  | ( move 0 , 0 ; ( move 4 , ua ; move ua , ul ) ; v0 = ua )  
[545] ( move ul , 2 ; move ua , 2 )  | ( move ul , 4 / 2 ; move ua , 2 )  | ( move ul , 2 - ua ; move ua , 2 )  | ( move ul , 2 ; move ua , 2 - ua )  | ( move ul , 2 ; move ua , 3 - ul )  | ( move ul , ul + ul ; move ua , 2 )  | ( move ul , 2 ; move ua , ul + ul )  | ( move ul , ua + 2 ; move ua , 4 - 2 )  | ( move ul , ua + 2 ; move ua , ua + 2 )  | ( move ul , ul + ul ; move ua , 3 - ul )  | ( move ul , 2 ; move ua , 2 ; v0 = ua )  | ( pen 2 / ua ; move ul , 2 ; move ua , 2 )  | ( pen ul ; move ul , 2 ; move ua , 4 / 2 )  | ( move ul , 2 ; move ua , ul + ul ; pen ul )  | ( move ul , ua + 2 ; move ua , 2 ; v0 = 4 )  | ( move ul , 2 ; move ua , 2 ; move ul / 4 , 3 )  | ( move ul , 2 ; ( v0 = ul ; move ua , 2 ) )  | ( move ul , 2 ; move ua , 2 ; v0 = ua - ul )  | ( move ul , ul + ul ; move ua , 2 ; v0 = 2 )  | ( move ul , ul + ul ; move ua , 2 ; v0 = ul )  | ( pen ul ; move ul , ul + ul ; move ua , ul + ul )  | ( move ul , ul + ul ; move ua , 2 ; v0 = ua + 2 )  | ( move ul , 2 ; move ua , ul + ul ; v0 = 4 + ul )  | ( move ul , ul + ul ; move ua , ul + ul ; pen ul / ua )  | ( v0 = ul + ul ; move ul , v0 ; move ua , v0 - ua )  | ( move ul , ul + ul ; move ua , ua + 2 ; move 0 , ul / ua )  
[546] ( move ua , ul ; move 2 , 2 )  | ( move ua , ul ; move 2 , 4 - 2 )  | ( move ua , ul ; move 4 / 2 , 2 )  | ( move ua , ua + ul ; move 2 , 2 )  | ( move ua , ul ; move 2 , ua + 2 )  | ( move ua , ul - ua ; move 2 , 2 )  | ( move ua , ul ; move 2 , 3 - ul )  | ( move ua , ul ; move 2 , ul + ul )  | ( move ua , ul ; move ul + ul , 2 )  | ( move ua , ua + ul ; move 3 - ul , 2 )  | ( move ua , 2 - ul ; move 2 , ul + ul )  | ( move ua , ul ; move 2 , 2 ; v0 = 4 )  | ( move 0 , ua ; move ua , ul ; move 2 , 2 )  | ( move ua , ul ; move 2 , 2 ; v0 = ua )  | ( pen ul ; move ua , ul ; move 2 , 3 - ul )  | ( move ua , ul ; v0 = 2 ; move 2 , v0 )  | ( move ua , ul ; move ul + ul , 2 ; pen ul )  | ( move ua , ul ; v0 = 2 ; move v0 , v0 )  | ( move ua , ul ; v0 = ua - 3 ; move 2 , 2 )  | ( move ua , ul ; move 2 , 2 ; v0 = 2 - ul )  | ( ( move ua , ul ; move ul + ul , 2 ) ; pen ua )  | ( v0 = ua + ul ; move ua , v0 ; move 2 , 2 )  | ( pen ul ; move ua , ua + ul ; move ul + ul , 2 )  | ( ( pen ul ; move ua , ul ; move 2 , 2 ) ; pen ua )  | ( v0 = 4 / 2 ; move ua , ul ; move v0 , v0 )  | ( ( move ua , ua + ul ; move 2 , 2 ) ; v0 = 0 )  | ( move ua , ul ; move 2 , ua + 2 ; v0 = ua / 3 )  | ( move ua , ul ; v0 = ul + ul ; move v0 , v0 )  | ( move ua , ul ; move 3 - ul , ul + ul ; v0 = 4 )  | ( move ua , ul ; v0 = ul / 3 ; move ua * v0 , 2 )  
[547] ( move 3 , 2 ; move ua , ul )  | ( move 3 , ua + 2 ; move ua , ul )  | ( move 2 + ul , 2 ; move ua , ul )  | ( move 3 , 2 ; move ua , ua + ul )  | ( move 4 - ul , 2 ; move ua , ul )  | ( move 3 , ul + ul ; move ua , ul )  | ( move 0 , ul ; move 3 , ul ; move ua , ul )  | ( move 3 , ul + ul ; move ua , ul ; pen 0 )  | ( ( move 3 , 2 ; move ua , ul ) ; v0 = ua )  | ( move ul , 2 ; move 2 , ua ; move ua , ua + ul )  | ( move 0 , ul ; move 4 - ul , ul ; move ua , ul )  | ( move 2 + ul , 2 ; v0 = ul ; move ua , v0 )  | ( move 3 , ul + ul ; move ua , ua + ul ; pen ua )  | ( ( move 2 + ul , 3 - ul ; move ua , ul ) ; v0 = ul )  
[548] ( move ua , 4 ; move ua , 2 )  | ( move ua , 4 ; move ua , ua + 2 )  | ( move ua , ua + 4 ; move ua , 2 )  | ( move ua , 4 ; move ua , ul + ul )  | ( move ua , 2 + 2 ; move ua , ul + ul )  | ( move ua , ua + 4 ; move ua , ul + ul )  | ( move ua , 4 ; move ua , 2 ; move 0 , 4 )  | ( v0 = ua ; move v0 , 4 ; move v0 , 2 )  | ( move ua , ua + 4 ; move ua , 2 ; pen ua - 2 )  | ( v0 = 2 ; move ua , v0 + 2 ; move ua , 2 )  
[549] ( move ua , ul ; move 2 , 3 )  | ( move 4 + 2 , ul ; move 2 , 3 )  | ( move ua , ua + ul ; move 2 , 3 )  | ( move ua , ul - ua ; move 2 , 3 )  | ( move ua , ul ; move 3 - ul , 3 )  | ( move ua , ul ; move 2 , 4 - ul )  | ( move ua , ul ; move ua / 3 , 3 )  | ( move ua , ul ; move ul + ul , 3 )  | ( pen ul ; move ua , ul ; move 2 , 3 )  | ( move ua , ul ; move 4 / 2 , 4 - ul )  | ( move ua , ul ; move 3 - ul , ua + 3 )  | ( move ua , ul ; move 2 , 3 ; v0 = ua )  | ( move ua , ul ; move ul , 3 ; move ul , ua )  | ( ( move ua , ul ; move 2 , 3 ) ; move 0 , 4 )  | ( move ua , ua + ul ; move ul + ul , 2 + ul )  | ( move ua , ul ; move 2 , 2 + ul ; v0 = 2 )  | ( move ua , ul ; v0 = 4 - 2 ; move v0 , 3 )  | ( move ua , ul - ua ; move ul + ul , 3 ; pen ul )  | ( move ua , ul ; move 2 , ua + 3 ; move 2 - 3 , 0 )  | ( move ua , ul - ua ; move 2 , 3 - ua ; v0 = 3 + ul )  
[550] ( move ul , 3 ; move ua , 2 )  | ( move ul , 3 ; move ua , 4 / 2 )  | ( move ul , 3 ; move ua , ua + 2 )  | ( move ul , ua + 3 ; move ua , 2 )  | ( move ul , 3 ; move ua , 2 - ua )  | ( move ul , 3 - ua ; move ua , 4 - 2 )  | ( move ul , 2 + ul ; move ua , ul + ul )  | ( move ul , 3 ; v0 = 0 ; move ua , 2 )  | ( move ul , 3 ; ( move ua , 2 ; pen 0 ) )  | ( move ul , 3 ; move ua , 2 ; move 0 , ua )  | ( move ul , 3 ; move ua , 2 ; v0 = ua )  | ( pen ul ; move ul , ua + 3 ; move ua , 2 )  | ( pen ul / ua ; move ul , 3 ; move ua , 2 )  | ( ( move ul , 3 ; move ua , 2 ) ; v0 = 3 )  | ( move ul , 3 ; move ua , 2 ; move 0 , ua - ul )  | ( move ul , 3 ; move ua , ul + ul ; v0 = ul )  | ( v0 = 2 ; move ul , 3 ; move ua , 4 - v0 )  | ( v0 = 4 ; move ul , v0 - ul ; move ua , 2 )  | ( move ul , 3 ; v0 = ul ; move ua , v0 + ul )  | ( move ul / ua , ua ; move ul , 3 ; move ua , ul + ul )  | ( move ul , 2 + ul ; move ua , ul + ul ; move 0 , ua * ua )  | ( move ul , 3 ; ( move ua , 2 ; pen ua / 2 ) ; v0 = 2 )  | ( move ul , 3 ; ( move ua , 2 ; v0 = ul + ul ; pen 3 ) )  
[551] ( move 2 , ul ; move ua , 3 )  | ( move 3 , ul ; move ua , 3 )  | ( move 2 , ul ; move ua , 2 + ul )  | ( move 2 , ua + ul ; move ua , 3 )  | ( move 2 , ul - ua ; move ua , 3 )  | ( move 2 , ul ; move ua , 3 - ua )  | ( move 2 , ul ; move ua , 4 - ul )  | ( move ua - 4 , ul ; move ua , 3 )  | ( move ua / 3 , ul ; move ua , 3 )  | ( move ul + ul , ul ; move ua , 3 )  | ( move 3 - ul , ul ; move ua , 4 - ul )  | ( move ul + ul , ul ; move ua , 3 - ua )  | ( move 2 , ul ; move ua , 3 ; v0 = 0 )  | ( move 2 , ul ; move 0 , 3 ; move ua , ua )  | ( move 2 , ul ; move ua , 3 ; v0 = ul )  | ( move 2 , ul ; move ua , 3 ; pen 3 + ul )  | ( pen ul / 2 ; move 2 , ul ; move ua , 3 )  | ( ( move 2 , ul ; move ua , 3 ) ; pen ul )  | ( move ul , ul ; move ul , ua ; move ua , 3 )  | ( move 3 - ul , ul - ua ; move ua , 4 - ul )  | ( move 2 , ul ; move ua , 2 + ul ; v0 = 3 )  | ( move 3 , ul - ua ; move ua , 3 ; v0 = 4 )  | ( move 2 , ul ; move ua , 2 + ul ; v0 = ua )  | ( move ul , ul ; ( move ul , 0 ; move ua , 3 ) )  | ( move 2 , ul ; ( move ua , 3 - ua ; pen ua ) )  
[552] ( move ul , 0 ; move 4 , ul )  | ( move ul , ua ; move 4 , ul )  | ( move ul , 0 ; move 3 + ul , ul )  | ( move ul , 0 ; move 4 , ua + ul )  | ( move ul , 0 - ua ; move 4 , ul )  | ( move 2 - ul , ua ; move 4 , ul )  | ( move ul , ua + ua ; move 4 , ul )  | ( move ul , ua ; move 4 , ua + ul )  | ( move ul , 0 ; pen ul ; move 4 , ul )  | ( move ul , ua ; move 4 , ul ; pen 3 )  | ( move ul , ua ; move 4 , ul ; pen ua )  | ( move ul , ua * 3 ; move 4 , ua + ul )  | ( move ul , ua ; move 3 + ul , ua + ul )  | ( move ul , 0 ; move 4 , ul ; v0 = ul )  | ( move ul , 0 ; ( pen ul ; move 4 , ul ) )  | ( move ul , 0 ; move ul , ul ; move 3 , ua )  | ( move ul , ua ; v0 = ua ; move 4 , ul )  | ( move ul , 0 ; move 4 , ua + ul ; pen ua )  | ( move ul , 0 ; move 3 + ul , ul ; pen ul )  | ( move ul , ua ; move 4 , ul ; pen ua + 2 )  | ( move ul , 0 ; v0 = ul ; move 4 , v0 )  | ( move ul , ua ; v0 = ul ; move 4 , v0 )  | ( move ul , 0 ; move 0 , ul ; move 3 + ul , 0 )  | ( move ul , 0 ; move 4 , ua + ul ; v0 = 3 )  | ( ( move ul , ua ; move 4 , 4 - 3 ) ; pen ul )  | ( v0 = ul ; move v0 , 0 ; move v0 * 4 , ul )  | ( move ul , ua * 2 ; v0 = 3 + 2 ; move 4 , ul )  | ( pen ul ; ( pen ul ; move ul , ua ) ; move 4 , ul )  | ( v0 = ul + ul ; move ul , ua ; move 2 + v0 , ul )  | ( move 0 , ua ; ( pen ul ; move ul , ua ) ; move 4 , ul )  | ( move ul , ua ; ( pen ul ; move ul , ul ; move 3 , ua ) )  | ( move ul , ua ; move 4 , ul ; ( pen 0 ; v0 = ul - 2 ) )  
[553] ( move 2 , 3 ; move ua , ul )  | ( move 2 , 3 ; move ua , 2 - ul )  | ( move 2 , ua + 3 ; move ua , ul )  | ( move 2 , 3 ; move ua , ua + ul )  | ( move 2 , 2 + ul ; move ua , ul )  | ( move 3 - ul , 3 ; move ua , ul )  | ( move ul + ul , 3 ; move ua , ul )  | ( move 2 , 3 ; pen ul ; move ua , ul )  | ( move ul + ul , ua + 3 ; move ua , ul )  | ( move ul + ul , 4 - ul ; move ua , ul )  | ( move 2 , 3 ; move ua , ul ; v0 = 2 )  | ( move 2 , 3 ; v0 = 4 ; move ua , ul )  | ( move 2 , 3 ; move ua , ul ; v0 = ua )  | ( move 4 / 2 , 3 ; move ua , ul ; pen ul )  | ( move ul , 3 ; move ul , ua ; move ua , ul )  | ( v0 = 2 ; move v0 , 3 ; move ua , ul )  | ( move 2 , 3 ; v0 = ua ; move v0 , ul )  | ( ( move 2 , 3 ; move ua , ul ) ; v0 = 4 )  | ( ( move 2 , 3 ; pen ul ) ; move ua , 3 - 2 )  | ( move 2 , 4 - ul ; move ua , ul ; v0 = 0 )  | ( move 2 , 3 ; ( move ua , ul ; move 0 , ua ) )  | ( move 2 , 3 ; move ua , ul ; v0 = ul / 3 )  | ( move 0 , ul ; move 2 , 2 - ua ; move ua , ul )  | ( move 2 , 3 - ua ; v0 = ul ; move ua , ul )  | ( move 0 , 3 ; ( move 2 , 0 ; move ua , ua + ul ) )  | ( move 2 , 4 - ul ; move ua , ul ; v0 = ua + ul )  | ( v0 = ul ; move v0 + v0 , 3 ; move ua , v0 )  | ( ( move 0 , 0 ; move 4 / 2 , 3 ) ; move ua , ul ; pen ua )  | ( ( move ul + ul , ua + 3 ; v0 = ul ) ; move ua , v0 )  
[554] ( move ua , 3 ; move ul , 2 )  | ( move ua , ua + 3 ; move ul , 2 )  | ( move ua , 2 + ul ; move ul , 2 )  | ( move ua , 3 ; move ul , ua + 2 )  | ( move ua , 3 - ua ; move ul , 2 )  | ( move ua , 3 ; move ul , ul + ul )  | ( move ua , 3 ; pen ul ; move ul , 2 )  | ( move ua , 3 - ua ; move ul , 4 - 2 )  | ( move ua , 2 + ul ; move ul , ul + ul )  | ( move ua , 3 - ua ; move ul , ul + ul )  | ( move ua , 3 ; move ul , 2 ; v0 = 4 )  | ( move ua , 3 ; move ul , 2 ; v0 = ul )  | ( move ua , 3 ; move ul , 2 ; pen 2 + ul )  | ( ( move ua , 3 ; move ul , 2 ) ; pen ua )  | ( v0 = ua ; move v0 , 3 ; move ul , 2 )  | ( move ua , 3 ; move ul , 2 ; v0 = ua * 2 )  | ( move ua , 3 ; move ul , 2 ; v0 = ua + 4 )  | ( move ua , 2 + ul ; move ul , 2 ; v0 = ul )  | ( ( move ua , 3 - ua ; pen ul ) ; move ul , 2 )  | ( ( v0 = ul ; move ua , 3 ) ; move v0 , 2 )  | ( ( move ua , 3 ; move ul , ul + ul ) ; move 0 , 0 )  | ( move 0 , ua - ul ; move ua , 4 ; move ul , ua + 2 )  | ( move ua , ua + 3 ; move ul , ua + 2 ; v0 = ua )  | ( move ua , 3 ; move ul , ul + ul ; v0 = ul - ua )  | ( move ua , 3 ; ( pen ul ; v0 = 2 ) ; move ul , v0 )  
[555] ( move 4 , 0 ; move ul , ul )  | ( move 4 , ua ; move ul , ul )  | ( move 4 , ua ; move ul , 4 - 3 )  | ( move 4 , 0 ; move ul , ua + ul )  | ( move 3 + ul , 0 ; move ul , ul )  | ( move 4 , ua * 4 ; move ul , ul )  | ( move 4 , ua ; move ul , ua + ul )  | ( pen ul ; move 4 , 0 ; move ul , ul )  | ( pen ul ; move 4 , ua ; move ul , ul )  | ( move 4 , ua ; pen ul ; move ul , ul )  | ( move 4 , 0 ; ( move ul , ul ; pen 2 ) )  | ( move 3 , 0 ; move ul , 0 ; move ul , ul )  | ( move 4 , ua ; v0 = 0 ; move ul , ul )  | ( ( move 4 , ua ; move ul , ul ) ; pen 2 )  | ( move 0 , ua ; move 4 , ua ; move ul , ul )  | ( move 4 , ua ; move ul , ul ; v0 = ul )  | ( move 4 , 0 ; move ul , ul ; pen ua * ua )  | ( pen ul ; ( move 4 , ua ; move ul , ul ) )  | ( move 4 , 0 ; v0 = ul ; move v0 , v0 )  | ( move 4 , ua ; move ul , 3 - 2 ; v0 = ul )  | ( move 4 , ua ; move ul , ul ; v0 = 3 * 2 )  | ( move 4 , ua ; move ul , ul ; v0 = 2 + ul )  | ( move 4 , ua ; move ul , ua + ul ; v0 = 3 )  | ( move 4 , ua ; move ul , ua + ul ; pen 2 - 3 )  | ( move 3 + ul , ua ; v0 = ul ; move v0 , ul )  | ( ( pen 4 ; pen ul ; move 4 , ua ) ; move ul , ul )  | ( v0 = ul ; move 4 / v0 , 0 ; move v0 , ul )  | ( ( move 4 , ua ; move ul , ul ) ; v0 = 3 - ua )  | ( ( move 3 , ua ; move ul , ua * 4 ) ; move ul , ul )  | ( ( move 2 + 2 , 0 ; v0 = ul ) ; move v0 , v0 )  | ( v0 = 4 ; ( move v0 , ua ; move ul , ul ) ; pen ul )  | ( move 4 , ua ; ( v0 = ul ; move v0 * v0 , v0 ) )  
[556] ( move ua , ul ; move 3 , 2 )  | ( move ua , ul ; move 3 , 4 / 2 )  | ( move ua , ua + ul ; move 3 , 2 )  | ( move ua , ul ; move 3 , ua + 2 )  | ( move ua , ul ; move 2 + ul , 2 )  | ( move ua , ul ; move 3 , 2 - ua )  | ( move ua , ul ; move 3 , ul + ul )  | ( move ua , ul ; pen ul ; move 3 , 2 )  | ( move ua , ul ; move 4 - ul , 3 - ul )  | ( move ua , ul ; move 0 , 2 ; move 3 , 0 )  | ( move ua , ul ; v0 = 0 ; move 3 , 2 )  | ( move ua , ul ; move 3 , 2 ; v0 = ul )  | ( pen ul ; move ua , ul ; move 3 , 3 - ul )  | ( move ua , ul ; v0 = 2 ; move 3 , v0 )  | ( v0 = ul ; move ua , v0 ; move 3 , 2 )  | ( move 0 , 0 ; ( move ua , ul ; move 3 , 2 ) )  | ( move ua , ul ; move 2 , 2 ; move ul , ua * 2 )  | ( move ua , ul ; move 2 , 4 - 2 ; move ul , ua )  | ( move ua , ul ; v0 = 4 - 2 ; move 3 , v0 )  | ( move 0 , 0 ; ( move ua , ul ; move 3 , 2 - ua ) )  | ( move ua , ul ; ( move 0 , ul - ua ; move 3 , ul ) )  
[557] ( move ua , 2 ; move 3 , ul )  | ( move ua , 3 - ul ; move 3 , ul )  | ( move ua , ul + ul ; move 3 , ul )  | ( move ua , 2 ; move 3 , ul ; pen 0 )  | ( move ua , 2 ; ( move 3 , ul ; pen 0 ) )  | ( move ua , 2 ; move 2 , ul ; move ul , 0 )  | ( move ua , 2 ; move 3 , ul ; v0 = ua )  | ( move ua , 2 ; v0 = ul ; move 3 , v0 )  | ( move ul , 2 ; move ua - ul , ua ; move 3 , ul )  | ( move ua , 2 ; ( move 3 , ul ; move 0 , ua - 3 ; pen ua ) )  
[558] ( move 2 , ul ; move 2 , ul )  | ( move 2 , 2 - ul ; move 2 , ul )  | ( move 2 , ua + ul ; move 2 , ul )  | ( move 2 , ul ; move 2 , ua + ul )  | ( move 2 , ul ; move 2 , ul - ua )  | ( move ul + ul , ul ; move 2 , ul )  | ( move 2 , ul ; move ul + ul , ul )  | ( move 2 , ul ; move 2 , ul ; pen 2 )  | ( move 2 , ul ; move 2 , ul ; pen ul )  | ( pen ul ; move 2 , ul ; move 2 , ul )  | ( move 4 / 2 , ul ; move 3 - ul , ul )  | ( move ul + ul , ua + ul ; move 2 , ul )  | ( move ul + ul , ul ; move 2 , ul - ua )  | ( move 3 - ul , ul ; move ul + ul , ul )  | ( move 2 , ul ; move 2 , ul ; v0 = 0 )  | ( move 2 , ul ; move 2 , ul ; v0 = 2 )  | ( move 2 , ul ; move 4 / 2 , ul ; pen 2 )  | ( move 2 , ul ; move 2 , ul ; move 0 , ua )  | ( move 2 , ul ; move ul , ul ; move ul , 0 )  | ( move 2 , ul ; v0 = 2 ; move v0 , ul )  | ( v0 = 2 ; move 2 , ul ; move v0 , ul )  | ( v0 = ul ; move 2 , v0 ; move 2 , v0 )  | ( move 2 , ul ; move 2 - ul , ul ; move ul , ua )  | ( ( move 2 , ul ; v0 = ul ) ; move 2 , v0 )  | ( v0 = 2 ; move v0 , ul ; move ul + ul , ul )  | ( pen ul ; move ul + ul , ul ; move ul + ul , ul )  | ( move 2 , ul ; move 2 , ul - ua ; v0 = ua + ul )  | ( move 3 - ul , ua + ul ; move 2 , ul - ua ; v0 = 0 )  | ( ( v0 = ul ; move v0 + ul , v0 ) ; move 2 , v0 )  | ( move 2 , ul ; ( pen ua ; pen ul ; move 2 , ul ) ; pen 3 )  | ( ( move 0 , ul ; move 2 , 0 ) ; move 2 , ul ; pen ua + 3 )  | ( v0 = ul + ul ; move v0 , 3 - v0 ; move v0 , ul )  
[559] ( move ua , 2 ; move ua , 4 )  | ( move ua , 2 ; move ua , ua + 4 )  | ( move ua , 2 ; move ua , 3 + ul )  | ( move ua , ua + 2 ; move ua , 4 )  | ( move ua , 2 ; move ua , 4 - ua )  | ( move ua , 3 - ul ; move ua , 4 )  | ( move ua , 2 ; move ua , 4 ; pen ua )  | ( pen ul ; move ua , 2 ; move ua , 4 )  | ( pen 4 - 3 ; move ua , 2 ; move ua , 4 )  | ( move ua , 2 ; move ua , 4 ; pen ul - ua )  | ( move ua , ua + 2 ; v0 = ua ; move v0 , 4 )  | ( ( move ua , 2 ; move ua , 4 ) ; move 0 , 3 - ul )  | ( v0 = ul ; move ua / v0 , 2 ; move ua , v0 * 4 )  
[560] ( move ua , 3 ; move 2 , ul )  | ( move ua , 2 + ul ; move 2 , ul )  | ( move ua , ua + 3 ; move 2 , ul )  | ( move ua , 3 - ua ; move 2 , ul )  | ( move ua , 4 - ul ; move 2 , ul )  | ( move ua , 3 ; move ul + ul , ul )  | ( move ua , 3 ; move 2 , ul ; pen ul )  | ( move ua , 3 ; pen ul ; move 2 , ul )  | ( move ua , 3 ; move 4 / 2 , ua + ul )  | ( move ua , 2 + ul ; move 2 , ua + ul )  | ( move ua , 3 ; move ul + ul , ua + ul )  | ( move ua , 3 ; move 2 , ul ; v0 = 4 )  | ( ( move ua , 3 ; move 2 , ul ) ; pen 4 )  | ( move 0 , 2 ; move ua , ul ; move 2 , ul )  | ( move ua , 3 ; v0 = 2 ; move v0 , ul )  | ( move ua , 2 + ul ; v0 = 2 ; move v0 , ul )  | ( move ua , 2 + ul ; v0 = ul ; move 2 , v0 )  | ( move 0 , 2 - 3 ; move ua , 3 + ul ; move 2 , ul )  | ( move ua , 3 ; v0 = ul ; move v0 + v0 , v0 )  | ( move ua , 3 ; ( v0 = ul ; move ul + v0 , ul ) )  
[561] ( move 3 , ul ; move ua , 2 )  | ( move 3 , 4 - 3 ; move ua , 2 )  | ( move 2 + ul , ul ; move ua , 2 )  | ( move 3 , ul ; move ua , 2 - ua )  | ( move 3 , ul - ua ; move ua , 2 )  | ( move 3 , ul ; move ua , ul + ul )  | ( move 3 , ul ; pen ul ; move ua , 2 )  | ( move 3 , ua + ul ; move ua , ul + ul )  | ( move 3 , ul ; move ua , ua + 2 ; pen 3 )  | ( pen ul ; ( move 3 , ul ; move ua , 2 ) )  | ( move 3 , ul ; v0 = ua ; move v0 , 2 )  | ( move 3 , ul ; move ua , ul + ul ; pen ul )  | ( move 2 + ul , ua + ul ; move ua , ua + 2 )  | ( ( move 2 , ul ; move ul , 0 ) ; move ua , 2 )  | ( move 3 , ul ; v0 = ua * 2 ; move ua , 2 )  | ( move 3 , ul ; move ua , 2 - ua ; v0 = 4 )  | ( move 3 , ul ; move 0 , ua - ul ; move ua , 3 )  | ( move 3 , ul ; v0 = ul + ul ; move ua , v0 )  | ( move 3 , ul ; move ua , ua + 2 ; v0 = 2 / ua )  | ( ( pen 4 - 3 ; move 3 , ul ) ; move ua , ul + ul )  | ( move 3 , ul ; move 0 , ul + ul ; move ua , ua * 3 )  | ( move 3 , ua + ul ; move ua , ua + 2 ; v0 = ua )  | ( move ul , ua + ul ; move ul + ul , 0 ; move ua , 2 )  | ( ( v0 = 3 ; move v0 , ua + ul ) ; move ua , 2 )  | ( ( move ul , ul ; move 3 - ul , 0 ) ; move ua , 2 ; pen ua )  | ( ( pen ul ; move 3 , ua + ul ) ; move ua , 2 ; v0 = ul )  
[562] ( move ua , 3 ; move ua , 3 )  | ( move 3 + 3 , 3 ; move ua , 3 )  | ( move ua , 2 + ul ; move ua , 3 )  | ( move ua , 3 ; move ua , 2 + ul )  | ( move ua , ua + 3 ; move ua , 3 )  | ( move ua , 3 ; move ua , ua + 3 )  | ( move ua , 2 + ul ; move ua , ua + 3 )  | ( move 0 , 0 ; move ua , 3 ; move ua , 3 )  | ( move ua , 3 ; move ua , 3 ; v0 = ul )  | ( move ua , 3 ; move ua , 2 + ul ; pen 2 )  | ( v0 = 3 ; move ua , v0 ; move ua , v0 )  | ( move ua , 3 ; v0 = ul ; move v0 * ua , 3 )  | ( v0 = 2 + ul ; ( move ua , v0 ; move ua , v0 ) )  
[563] ( move ul , 2 ; move 3 , ul )  | ( move ul , 2 ; move 3 , 3 - 2 )  | ( move ul , 2 ; move 3 , 4 - 3 )  | ( move ul , 4 - 2 ; move 3 , ul )  | ( move ul , ua + 2 ; move 3 , ul )  | ( move ul , 2 ; move 2 + ul , ul )  | ( move ul , 2 - ua ; move 3 , ul )  | ( move ul , 2 ; move 4 - ul , ul )  | ( move ul , ul + ul ; move 3 , ul )  | ( move ul , 2 ; move 3 , ul ; pen 0 )  | ( move ul , 2 ; move 3 , ul ; pen 4 )  | ( pen ul ; move ul , 2 ; move 3 , ul )  | ( move ul , 2 ; pen ul ; move 3 , ul )  | ( move ul , 4 / 2 ; move 2 + ul , ul )  | ( move ul , ul + ul ; move 3 , ul - ua )  | ( move ul , 2 ; move 3 , ul ; pen ul / 4 )  | ( v0 = ul ; move ul , 2 ; move 3 , v0 )  | ( move ul , 2 ; v0 = ul ; move 3 , v0 )  | ( move ul , 2 ; move 2 + ul , ul ; v0 = 2 )  | ( ( pen ul ; move ul , 2 ) ; move 4 - ul , ul )  | ( v0 = 2 ; ( move ul , v0 ; move 3 , ul ) )  | ( move ul , 2 ; ( move 4 - ul , ul ; move 0 , 4 ) )  | ( ( move ul , 2 ; move 3 , 2 - ul ) ; v0 = ua )  | ( move ul , ua + 2 ; move 3 , ul ; v0 = ua + 3 )  | ( v0 = ul ; move ul , v0 + v0 ; move 3 , v0 )  | ( move ul , 2 ; ( move 3 , ul ; v0 = 0 ; pen ul ) )  | ( move ul , 2 ; ( v0 = 3 ; move v0 , ul ) ; pen v0 )  
[564] ( move 2 , 4 ; move ua , ul )  | ( move 4 - 2 , 4 ; move ua , ul )  | ( move 2 , 4 ; move ua , ua + ul )  | ( move 2 , ua + 4 ; move ua , ul )  | ( move 2 , 4 ; move ua , ul - ua )  | ( move ua / 3 , 4 ; move ua , ul )  | ( move ul + ul , 4 ; move ua , ul )  | ( move 2 , 4 ; move ua , ul ; pen ul )  | ( move 2 , 3 + ul ; move ua , ua + ul )  | ( move 3 - ul , 3 + ul ; move ua , ul )  | ( move 3 - ul , 4 ; move ua , ul - ua )  | ( move ul + ul , ua + 4 ; move ua , ul )  | ( move 2 , 4 ; move ua , ul ; v0 = 2 )  | ( move 4 / 2 , 4 ; move ua , ul ; pen 2 )  | ( ( move 2 , 4 ; move ua , ul ) ; pen 4 )  | ( move 2 , 4 ; move 0 , ua ; move ua , ul )  | ( move 2 , 4 ; move ua , ul ; v0 = ul )  | ( move 2 , ua + 4 ; move ua , ul ; pen 0 )  | ( move 2 , 4 ; v0 = ul ; move ua , v0 )  | ( v0 = 2 ; move v0 , 4 ; move ua , ul )  | ( move ul + ul , 3 + ul ; move ua , 2 - ul )  | ( ( move 2 , 4 ; move ua , ul ) ; v0 = 2 )  | ( move 2 , 3 + ul ; move 0 , 0 ; move ua , ul )  | ( move 0 , 4 ; ( move 2 , ua ; move ua , ul ) )  | ( ( move 0 , 3 ; move 2 , ul ) ; move ua , ul )  | ( move ul + ul , 4 ; move ua , ul ; pen 3 + 2 )  | ( move 2 , 3 + ul ; move ua , ul ; pen ua / 4 )  | ( move 2 , 2 + 2 ; ( move ua , ul ; v0 = ul ) )  | ( move 2 , ua + 4 ; move ua , ua + ul ; v0 = ua )  | ( move 2 , 4 ; ( v0 = 2 ; move ua , ul ; pen 3 ) )  | ( move 3 - ul , 4 ; ( v0 = ul - 3 ; move ua , ul ) )  | ( move ul + ul , 4 ; ( move ua , ul ; pen ul / 3 ; pen ul ) )  
[565] ( move 4 , ul ; move ua , 2 )  | ( move 4 , 3 - 2 ; move ua , 2 )  | ( move 2 + 2 , ul ; move ua , 2 )  | ( move 3 + ul , ul ; move ua , 2 )  | ( move 4 , ul ; move ua , ul + ul )  | ( move 4 , ul ; move ua , 2 ; pen 4 )  | ( move 4 , ua + ul ; move ua , 3 - ul )  | ( move 3 + ul , ul ; move ua , 2 ; pen 0 )  | ( move 4 , ul ; v0 = 2 ; move ua , v0 )  | ( move 0 , 3 ; move 4 , 0 - 2 ; move ua , 2 )  | ( ( move 4 , ul ; move ua , 4 / 2 ) ; pen 4 )  | ( move 4 , ul ; move ua , 2 ; v0 = ul / 4 )  | ( move 4 , ul - ua ; move ua , 2 ; v0 = ul )  | ( move 3 + ul , ul ; v0 = 2 ; move ua , v0 )  | ( move 4 , ul ; v0 = 2 - ua ; move ua , v0 )  | ( move 3 + ul , ul ; move ua , 3 - ul ; v0 = 3 )  | ( move 3 + ul , ul ; v0 = ul ; move ua , ul + ul )  | ( v0 = ul ; ( move 4 , v0 ; move ua , 3 - ul ) )  | ( ( move 2 * 2 , ul ; move ua , ul + ul ) ; v0 = 4 )  | ( v0 = 2 ; move v0 + v0 , ul ; move ua , ua + v0 )  
[566] ( move ul , 2 ; move ua , 4 )  | ( move ul , ua + 2 ; move ua , 4 )  | ( move ul , 2 ; move ua , ua + 4 )  | ( move ul , 2 ; move ua , 4 - ua )  | ( move ul , 2 - ua ; move ua , 4 )  | ( move ul , ul + ul ; move ua , 4 )  | ( move ul , 2 ; move ua , 4 ; pen ua )  | ( move ul , 2 ; pen ul ; move ua , 4 )  | ( move 0 , ul ; move ul , ul ; move ua , 4 )  | ( move ul , 2 ; move ua , 4 - ua ; pen ul )  | ( move ul , ul + ul ; move ua , 4 ; pen ul )  | ( move ul , ua + 2 ; move ua , 4 ; move 0 , ul )  | ( move ul , 2 ; move 0 , 4 - ul ; move ua , ul )  | ( ( pen ul ; move ul , 2 ) ; move ua , 4 - ua )  | ( move ul , ul + ul ; move ua , 3 + ul ; pen 0 )  | ( pen ul ; ( move ul , 2 ; pen ul ; move ua , 4 ) )  | ( ( move ul , 2 ; v0 = 0 ) ; move ua , 4 + v0 )  | ( move ul , 2 ; ( move ua , 4 ; pen ua * ua ) ; pen ua )  | ( ( move ul , ul + ul ; move ua , 3 + ul ) ; pen ua * ua )  | ( ( move 0 , ul ; move ul , ul ) ; move ua , 4 ; v0 = ul )  
[567] ( move ul , 4 ; move ua , 2 )  | ( move ul , 2 * 2 ; move ua , 2 )  | ( move 2 - ul , 4 ; move ua , 2 )  | ( move ul , 4 ; move ua , ua + 2 )  | ( move ul , 4 ; move ua , 3 - ul )  | ( move ul , 4 ; move ua , ul + ul )  | ( move ul , 4 ; move ua , 2 ; pen 2 )  | ( move ul , 4 ; move ua , 2 ; pen 3 )  | ( pen ul ; move ul , 4 ; move ua , 2 )  | ( move ul , 4 ; move ua , 2 ; v0 = 2 )  | ( move ul , 4 ; move ua , 2 ; pen 4 * 2 )  | ( move ul , 4 ; move 0 , 2 ; move ua , ua )  | ( move 0 , ul ; move ul , 3 ; move ua , 2 )  | ( move ul , 4 ; move 0 , ul ; move ua , ul )  | ( pen ul ; move ul , 4 ; move ua , 2 - ua )  | ( move ul , 3 + ul ; move ua , 2 ; move 0 , ul )  | ( move ul , 4 ; v0 = ua + ul ; move ua , 2 )  | ( move ul , 4 ; move ua , ul + ul ; v0 = ul )  | ( move ul , 4 ; v0 = ua + 2 ; move ua , v0 )  | ( v0 = ul ; move v0 , 4 ; move ua , ul + v0 )  | ( ( move ul , 4 ; v0 = 3 - ul ) ; move ua , v0 )  | ( v0 = ul + ul ; move ul , v0 + v0 ; move ua , v0 )  | ( move ul , ua + 4 ; ( move ua , 2 ; pen 3 ) ; v0 = ua )  | ( move ul , 4 ; move ua , 2 ; ( pen ua + 4 ; pen ua + 3 ) )  | ( move ul , 4 ; ( move ua , 4 - 2 ; pen ul + ul ; pen 0 ) )  
[568] ( move 3 , ul ; move ul , 2 )  | ( move 3 , ul ; move 2 - ul , 2 )  | ( move 2 + ul , ul ; move ul , 2 )  | ( move 3 , ul ; move ul , ua + 2 )  | ( move 3 , ul - ua ; move ul , 2 )  | ( move 3 , ul ; move ul , 2 - ua )  | ( move 4 - ul , ul ; move ul , 2 )  | ( move 3 , ul ; move ul , ul + ul )  | ( move 3 , ul ; move ul , 2 ; pen 2 )  | ( move 3 , ua + ul ; move ul , ua + 2 )  | ( move 3 , ua + ul ; move ul , 2 - ua )  | ( move 3 , ul - ua ; move ul , 2 - ua )  | ( move 3 , ul ; move ul , 2 ; v0 = ua )  | ( pen ul ; move 3 , ul ; move 2 - ul , 2 )  | ( move 3 , ul ; move 0 , ul ; move ul , ul )  | ( move 3 , ul ; move ul , ul + ul ; pen 0 )  | ( move ul , ul ; move 2 , ua * 4 ; move ul , 2 )  | ( move 3 , ul ; ( move 0 , ul ; move ul , ul ) )  | ( pen 2 / ua ; move 4 - ul , ul ; move ul , 2 )  | ( move 2 + ul , ul ; v0 = ul ; move v0 , 2 )  | ( move 3 , ul ; v0 = ul ; move v0 , 3 - ul )  | ( v0 = 2 - ul ; move 3 , v0 ; move v0 , 2 )  | ( move 3 , ul ; move ul , 2 - ua ; v0 = 4 - ua )  | ( ( move ul , ul ; move 2 , 0 ) ; move ul , ul + ul )  | ( move 4 - ul , ul ; v0 = ul ; move v0 , ua + 2 )  | ( v0 = ua + ul ; move 3 , v0 ; move ul , v0 + ul )  | ( v0 = ul ; move 2 + ul , ul ; move v0 , v0 + ul )  | ( v0 = ul ; move 3 / v0 , v0 ; move ul , ul + v0 )  
[569] ( move ua , 3 ; move ua , 4 )  | ( move ua , 3 ; move ua , 2 + 2 )  | ( move ua , ua + 3 ; move ua , 4 )  | ( move ua , 3 ; move ua , 4 - ua )  | ( move ua , 3 ; move ua , 4 ; v0 = 0 )  | ( v0 = ua ; move v0 , 3 ; move v0 , 4 )  | ( move ua , 4 - ul ; move ua , 4 ; move 0 , 3 )  | ( ( move ua , 3 ; move 0 , ul - ua ) ; move ua , 3 )  | ( move ua , 4 - ul ; v0 = 0 ; move ua , v0 + 4 )  | ( ( move 0 , ul ; move ua , 2 ) ; move ua , 4 ; pen 2 )  
[570] ( move ua , 4 ; move 2 , ul )  | ( move ua , 4 ; move 4 - 2 , ul )  | ( move ua , 3 + ul ; move 2 , ul )  | ( move ua , 4 ; move 2 , ua + ul )  | ( move ua , 4 - ua ; move 2 , ul )  | ( move ua , 4 ; move 2 , ul - ua )  | ( move ua , 4 ; move 3 - ul , ul )  | ( move ua , 4 ; move ul + ul , ul )  | ( move ua , 4 ; move 2 , ul ; pen ua )  | ( move ua , 4 ; move 2 , ul ; pen ul )  | ( move ua , 4 ; move 4 / 2 , 4 - 3 )  | ( move ua , 2 + 2 ; move 3 - ul , ul )  | ( move ua , 3 + ul ; move 2 , 2 - ul )  | ( move ua , ua + 4 ; move ul + ul , ul )  | ( move ua , 4 ; move ul + ul , ul - ua )  | ( move ua , 4 ; move 2 , ul ; pen ul / ua )  | ( move ua , 4 ; move ul , ul ; move ul , ua )  | ( v0 = ua + 2 ; move ua , 4 ; move 2 , ul )  | ( move ua , 2 + 2 ; pen ul ; move 4 - 2 , ul )  | ( move ua , 4 ; move 2 , ul ; v0 = ul + ul )  | ( move ua , 4 ; ( move ul , ul ; move ul , 0 ) )  | ( move ua , 4 ; move ul + ul , ua + ul ; v0 = ul )  | ( move ua , 4 ; ( move 2 , ul ; move 0 , ul ; pen ua ) )  | ( move ua , 2 + 2 ; v0 = ul ; move v0 + v0 , ul )  
[571] ( move 3 , 3 ; move ua , ul )  | ( move 3 , 3 ; move ua , 2 - ul )  | ( move 3 , ua + 3 ; move ua , ul )  | ( move 3 , 3 ; move ua , ua + ul )  | ( move 2 + ul , 3 ; move ua , ul )  | ( move 3 , 3 ; move ua , ul - ua )  | ( move 4 - ul , 3 ; move ua , ul )  | ( move 2 + ul , 4 - ul ; move ua , ul )  | ( move 3 , 3 ; move ua , ul ; move 0 , 0 )  | ( move 0 , 2 ; move 3 , ul ; move ua , ul )  | ( move 3 , 3 ; move ua , ul ; move 0 , ul )  | ( move 3 , 3 ; move ua , ul ; v0 = ua )  | ( move 3 , 3 ; move ua , ua + ul ; pen 0 )  | ( move 3 , 3 - ua ; move ua , ul ; pen ul )  | ( move 3 , 3 ; v0 = ul ; move ua , v0 )  | ( move 3 , 3 ; move ua , 2 - ul ; v0 = 0 )  | ( move 3 , ua + 3 ; move ua , ul ; v0 = ua )  | ( ( move 4 - ul , 3 ; v0 = 0 ) ; move ua , ul )  | ( v0 = 3 ; move v0 , ua + v0 ; move ua , ul )  | ( move 3 , 4 - ul ; ( v0 = ua ; move v0 , ul ) )  | ( move 3 , ua + 3 ; v0 = ua + ul ; move ua , v0 )  | ( move 2 + ul , 4 - ul ; v0 = ul ; move ua , v0 )  
[572] ( move 3 , 2 ; move ul , ul )  | ( move 3 , 2 ; move ul , 3 - 2 )  | ( move 2 + ul , 2 ; move ul , ul )  | ( move 3 , 2 ; move ul , ua + ul )  | ( move 3 , ul + ul ; move ul , ul )  | ( move 3 , 2 ; move ul , ul ; pen ul )  | ( move 3 , 4 / 2 ; move ul , ua + ul )  | ( move 4 - ul , 2 ; move ul , ua + ul )  | ( move 3 , 3 - ul ; move ul , ul - ua )  | ( move 3 , 2 ; move ul , ul ; v0 = 4 )  | ( move 0 , 2 ; move 3 , ua ; move ul , ul )  | ( move 3 , 2 ; move ul , ul ; v0 = ua )  | ( move 3 , ua + 2 ; move ul , ul ; pen 0 )  | ( move 3 , 3 - ul ; move ul , ul ; pen 4 )  | ( move 2 , 2 ; move ul , ua ; move ul , ul )  | ( v0 = ul ; move 3 , 2 ; move v0 , ul )  | ( v0 = ul ; move 3 , 2 ; move ul , v0 )  | ( move 3 , 2 ; v0 = ul ; move ul , v0 )  | ( move 3 , ul + ul ; move ul , ul ; pen ua )  | ( move 3 , 2 ; v0 = ul ; move v0 , v0 )  | ( ( move 3 , 2 ; move 0 , 0 ) ; move ul , ul )  | ( move 3 , 2 ; ( v0 = 2 ; move ul , ul ) )  | ( move 3 , ul + ul ; move ul , ul ; v0 = ul )  | ( ( v0 = 2 ; move 3 , v0 ) ; move ul , ul )  | ( move 3 , ua + 2 ; v0 = ul ; move v0 , ul )  | ( move 3 , 3 - ul ; v0 = ul ; move ul , v0 )  | ( move 3 , 2 - ua ; v0 = ul ; move v0 , v0 )  | ( move 3 , 4 / 2 ; move 2 - ul , ul - ua ; pen ua )  | ( ( move 3 , ul + ul ; v0 = ul ) ; move ul , ul )  | ( ( move 3 , ul + ul ; v0 = ul ) ; move v0 , ul )  | ( v0 = ul ; move 3 , v0 + v0 ; move v0 , v0 )  | ( ( move 3 , 3 - ul ; move 0 , ul ) ; move ul , ua * 3 )  
[573] ( move 2 , ul ; move 3 , ul )  | ( move 2 , 4 - 3 ; move 3 , ul )  | ( move 2 , ul - ua ; move 3 , ul )  | ( move 2 , ul ; move 4 - ul , ul )  | ( move ul + ul , ul ; move 3 , ul )  | ( move 2 , ul ; pen ul ; move 3 , ul )  | ( move 4 / 2 , ua + ul ; move 3 , ul )  | ( move 2 , ul ; move 2 + ul , ua + ul )  | ( move 2 , ul - ua ; move 4 - ul , ul )  | ( move ul + ul , ul ; move 2 + ul , ul )  | ( move 2 , ul ; move 3 , ul ; move 0 , 0 )  | ( move ul + ul , ul ; move 3 , ul - ua )  | ( move 2 , ul ; v0 = 3 ; move 3 , ul )  | ( move 2 , ul ; move 3 , ul ; v0 = ul )  | ( move 2 , ua + ul ; move 3 , ul ; pen 3 )  | ( ( move 2 , ul ; move 3 , ul ) ; pen ul )  | ( move 2 , ul ; ( pen ul ; move 3 , ul ) )  | ( move 2 , ul ; move ul , ul ; move 2 , ua )  | ( ( move 2 , ul ; move 3 , ul ) ; v0 = ua )  | ( ( move 2 , ul ; move 3 , ul ) ; v0 = ul )  | ( ( move 2 , ul ; move ul , ul ) ; move 2 , ua )  | ( pen ul ; ( move 2 , ul ; move 4 - ul , ul ) )  | ( move ul + ul , ul ; move 3 , ul ; v0 = ul )  | ( v0 = 3 - ul ; move v0 , ul ; move 3 , ul )  | ( move ul + ul , ul ; move 3 , ul ; pen ul - ua )  | ( pen ul ; move ul + ul , ul ; move 3 , ul - ua )  | ( move 2 , ul ; ( move 4 - ul , ul ; move 0 , 2 ) )  | ( v0 = ul ; move v0 + v0 , ul ; move 3 , v0 )  | ( move ul , ul ; ( move ul , ua ; move 2 + ul , ul ) )  | ( v0 = ul ; move 2 , v0 ; move v0 + 2 , ua + ul )  | ( move ul + ul , ul ; v0 = ul ; move 2 + v0 , v0 )  | ( move 3 - ul , ul ; move 3 , ua + ul ; v0 = ul + ul )  
[574] ( move ua , 3 ; move 3 , ul )  | ( move ua , 2 + ul ; move 3 , ul )  | ( move ua , 3 ; move 2 + ul , ul )  | ( move ua , 3 - ua ; move 3 , ul )  | ( move ua , 4 - ul ; move 3 , ul )  | ( pen ul ; move ua , 3 ; move 3 , ul )  | ( move ua , 2 + ul ; move 4 - ul , ul )  | ( move ua , 3 ; move 0 , ua ; move 3 , ul )  | ( move ua , 3 ; move 3 , ul ; v0 = ua )  | ( move ua , 3 ; move 3 , ul ; pen 4 / ua )  | ( ( move ua , 3 ; pen ul ) ; move 3 , ul )  | ( move ua , 3 ; move 3 , ul ; pen ua + ul )  | ( move ua , 3 ; move 3 , ul ; v0 = ua / 2 )  | ( move ua , 3 - ua ; ( move ul , ul ; move 2 , ua ) )  | ( move ua , 2 + ul ; v0 = ua + ul ; move 3 , ua + v0 )  | ( ( move ua , ua + 3 ; v0 = ul ; pen ul ) ; move 3 , ul )  
[575] ( move 3 , ul ; move ua , 3 )  | ( move 4 , ul ; move ua , 3 )  | ( move 3 , ul ; move ua , ua + 3 )  | ( move 3 , ua + ul ; move ua , 3 )  | ( move 3 , ul ; move ua , 2 + ul )  | ( move 3 , ul - ua ; move ua , 3 )  | ( move ua / 2 , ul ; move ua , 3 )  | ( move 3 , ul ; pen ul ; move ua , 3 )  | ( move 2 + ul , ua + ul ; move ua , 3 )  | ( move ua / 2 , ua + ul ; move ua , 3 )  | ( move 3 , ul ; move ua , 3 ; v0 = ua )  | ( move 3 , ul ; pen ul ; move ua , 3 - ua )  | ( move 3 , ul ; v0 = ua ; move v0 , 3 )  | ( move 3 , ul ; ( move ua , 3 ; move 0 , ul ) )  | ( move 3 + ul , ul ; move ua , 3 ; v0 = 3 )  | ( move 3 , ul ; v0 = ul + ul ; move ua , 3 )  | ( move 2 + ul , ul ; move 0 , 0 ; move ua , 2 + ul )  | ( move 3 , ul ; ( move ua , 4 - ul ; v0 = ul ) ; pen ul )  | ( move 4 - ul , ul ; ( pen 2 ; pen ul ; move ua , 2 + ul ) )  
[576] ( move ua , 4 ; move ul , 2 )  | ( move ua , 4 ; move ul , 4 / 2 )  | ( move ua , 4 ; move ul , ua + 2 )  | ( move ua , ua + 4 ; move ul , 2 )  | ( move ua , 4 ; move ul , ul + ul )  | ( move ua , ua + 4 ; move ul , ua + 2 )  | ( move ua , 4 ; v0 = ul ; move v0 , 2 )  | ( move ua , 4 ; move ul , 2 ; v0 = ul + ul )  | ( v0 = 4 ; move ua , v0 ; move ul , ul + ul )  | ( v0 = 4 ; move ua , v0 ; move ul , v0 / 2 )  | ( ( move ua , 4 ; move 0 , ul ) ; move ul , 2 - ul )  | ( v0 = 4 - ua ; move ua , v0 ; move ul , ul + ul )  
[577] ( move ua , 2 ; move ul , 4 )  | ( move ua , 2 ; move 2 - ul , 4 )  | ( move ua , 4 / 2 ; move ul , 4 )  | ( move ua , ua + 2 ; move ul , 4 )  | ( move ua , 2 ; move ul , ua + 4 )  | ( move ua , 2 ; move ul - 2 , ul )  | ( move ua , 2 - ua ; move ul , 4 )  | ( move ua , ul + ul ; move ul , 4 )  | ( move ua , 2 ; move ul , 4 ; pen 2 )  | ( move ua , 2 ; pen ul ; move ul , 4 )  | ( move ua , ul + ul ; move 0 - ul , ul )  | ( move ua , 2 ; move 0 , 0 ; move ul , 4 )  | ( move ua , 2 ; move ul , 4 ; v0 = ul )  | ( move ua , 2 - ua ; move ul , 4 ; pen 0 )  | ( ( move ua , 2 ; move ul , 4 ) ; pen ua )  | ( move 0 , ul ; move ua , ul ; move ul , 4 )  | ( move ua , 2 ; move ul , 3 + ul ; pen ua )  | ( move ua , ul + ul ; move ul , 4 ; pen 2 )  | ( ( move ua , 2 ; move 2 - ul , 4 ) ; pen 0 )  | ( move 0 , 2 ; move ua , ua ; move 2 - 3 , ul )  | ( ( v0 = ul ; move ua , 2 ) ; move ul , 4 )  | ( ( move ua , 2 ; move ul , 3 + ul ) ; pen 0 )  | ( move ua , 2 - ua ; move ul , 4 ; v0 = ul )  | ( move ua , 3 - ul ; pen ul ; move ul , 2 * 2 )  | ( move ua , 2 ; v0 = 3 + ul ; move ul , v0 )  | ( move ua , ul + ul ; move ul , 3 + ul ; pen ul / ua )  | ( move ua , ul + ul ; ( move ul , 3 + ul ; move 0 , ul ) )  | ( ( ( move ua , 2 ; move ul , 4 ) ; v0 = 2 ) ; pen ul )  
[578] ( move 4 , 2 ; move ua , ul )  | ( move 3 + ul , 2 ; move ua , ul )  | ( move 4 , 3 - ul ; move ua , ul )  | ( move 4 , ul + ul ; move ua , ul )  | ( move 4 , 2 ; pen ul ; move ua , ul )  | ( move 4 , 4 - 2 ; move ua , 2 - ul )  | ( move 4 , ul + ul ; move ua , ua + ul )  | ( move 4 , 2 ; move ua , ul ; v0 = 4 )  | ( move 4 , 2 ; move ua , ul ; v0 = ua )  | ( move 4 , 2 ; move ua , ul ; pen ul / 4 )  | ( ( move 4 , 2 ; move ua , ul ) ; pen ul )  | ( move 3 , 2 ; move ul , ua ; move ua , ul )  | ( move 4 , 2 ; move ua , ul ; pen ua - ul )  | ( ( move 4 , 2 ; move 0 , ua ) ; move ua , ul )  | ( move 0 , ul ; move 2 + 2 , ul ; move ua , ul )  | ( ( move 4 , 2 ; pen 2 ; pen ul ) ; move ua , ul )  | ( move ul , 2 - ua ; move 3 , ua + ua ; move ua , ul )  | ( pen 4 ; ( pen ul ; move 4 , 4 / 2 ) ; move ua , ul )  | ( move 4 , ua + 2 ; ( move ua , ua + ul ; v0 = 4 ) )  | ( ( move 0 , 0 ; move 4 , ul + ul ) ; move ua , ua + ul )  | ( move 4 , ul + ul ; move ua , ua + ul ; v0 = ua * 2 )  
[579] ( move 3 , ul ; move 2 , ul )  | ( move 3 , ul ; move 2 , 3 - 2 )  | ( move 3 , ul ; move 2 , 4 - 3 )  | ( move 3 , ul ; move 4 / 2 , ul )  | ( move 2 + ul , ul ; move 2 , ul )  | ( move 3 , ul ; move 2 , ul - ua )  | ( move 4 - ul , ul ; move 2 , ul )  | ( move 3 , ul ; move 3 - ul , ul )  | ( move 3 , ul ; move ul + ul , ul )  | ( move 3 , ul ; move 2 , ul ; pen ua )  | ( move 3 , ul ; move 2 , ul ; pen ul )  | ( move 2 + ul , ul ; move 3 - ul , ul )  | ( move 3 , ul ; move 2 , ul ; move 0 , ul )  | ( move 3 , ul ; move 2 , ul ; v0 = ul )  | ( move 3 , ul ; move 2 , ul ; pen 3 - ua )  | ( move 2 , ul ; move ul , ua ; move 2 , ul )  | ( move 3 , ul ; v0 = ul ; move 2 , v0 )  | ( move 4 - ul , 2 - ul ; move 2 , ul - ua )  | ( ( move 3 , ul ; move 0 , ul ) ; move 2 , ua )  | ( move 3 , ul ; ( v0 = ua ; move 2 , ul ) )  | ( move 2 , ua + ul ; move ul , 0 ; move 2 , ul )  | ( pen ul ; move 4 - ul , ul ; move 4 - 2 , ul )  | ( move 0 , ua ; move 3 , ul ; move ul + ul , ul )  | ( move 3 , 2 - ul ; v0 = ul ; move 2 , v0 )  | ( ( move 3 , ul ; pen ul ; move 2 , ul ) ; pen ul )  | ( v0 = ul ; move 3 / v0 , ul ; move 2 , v0 )  | ( move 3 , ul ; move 3 - ul , ul ; v0 = 4 - ua )  | ( move 0 , 0 ; move 2 + ul , ul ; move ul + ul , ul )  | ( move ul , ul - ua ; move 2 , ua ; move 2 , ua + ul )  | ( v0 = 0 ; move 3 , ul ; move ul + ul , ul / v0 )  | ( move 3 , ul ; ( pen 2 ; ( pen ul ; move 2 , ul ) ) )  | ( move 3 , ul ; v0 = ul + ul ; move v0 , ua + ul )  
[580] ( move ua , 4 ; move ua , 3 )  | ( move ua , ua + 4 ; move ua , 3 )  | ( move ua , 4 ; move ua , ua + 3 )  | ( move ua , 4 ; move ua , 2 + ul )  | ( move ua , 3 + ul ; move ua , 3 )  | ( move ua , 4 - ua ; move ua , 3 )  | ( move ua , 4 ; move ua , 4 - ul )  | ( move ua , ua + 4 ; move ua , 2 + ul )  | ( move ua , 4 ; v0 = 0 ; move ua , 3 )  | ( move ua , 4 ; move ua , 3 ; v0 = ua )  | ( move ua , 3 + ul ; move ua , 3 ; pen 4 )  | ( v0 = ua ; move v0 , 4 ; move ua , 3 )  | ( move ua , 4 ; move 0 , 2 ; move ua , 2 - ul )  | ( move ua , 4 ; move ua , 4 - ul ; pen ul - ua )  | ( v0 = 3 ; move ua , v0 + ul ; move ua , v0 )  | ( move ua , 4 ; ( move ua , 3 ; move 0 , 0 ; v0 = 2 ) )  
[581] ( move ua , ul ; move 3 , 3 )  | ( move ua , ul ; move 4 , 3 )  | ( move ua , ul ; move 3 , 2 + ul )  | ( move ua , ul ; move 3 , ua + 3 )  | ( move ua , ua + ul ; move 3 , 3 )  | ( move ua , ul ; move 4 - ul , 3 )  | ( move ua , ul ; move 2 + ul , 2 + ul )  | ( move ua , ul - ua ; move 3 , ua + 3 )  | ( move ua , ul ; move 2 + ul , 4 - ul )  | ( move ua , ul ; move 4 - ul , ua + 3 )  | ( move ua , ua + ul ; move 3 , 4 - ul )  | ( move ua , ul ; move 4 , 3 ; pen ul - 2 )  | ( pen ul ; move ua , ua + ul ; move 3 , 3 )  | ( move ua , ul ; move 3 , 3 ; pen ua + ul )  | ( move ua , ul ; v0 = 3 ; move 3 , v0 )  | ( v0 = 3 ; move ua , ul ; move v0 , v0 )  | ( move ua , ul ; v0 = 3 ; move v0 , v0 )  | ( move ua , ul ; move 2 + ul , 3 ; v0 = ul )  | ( move ua , ua + ul ; v0 = ul ; move 4 , 3 )  | ( move ua , ul ; ( move ul , 3 ; move 2 , ua ) )  | ( move ua , ul ; v0 = 2 ; move v0 + ul , 3 )  | ( move ua , ul - ua ; move 3 , ua + 3 ; move ul , 3 )  | ( v0 = 2 + ul ; ( move ua , ul ; move v0 , v0 ) )  | ( ( move ua , ul - ua ; v0 = 3 ) ; move v0 , v0 )  | ( v0 = 3 ; ( move ua , ul ; move v0 , v0 - ua ) )  | ( move ua - ul , ul ; move ul , ua * 3 ; move 3 , ua + 3 )  | ( ( move ua , ul - ua ; move ul , 3 ) ; move 2 , ua + ua )  
[582] ( move ua , ul ; move 2 , 4 )  | ( move ua , ul ; move 2 , 2 * 2 )  | ( move ua , 2 - ul ; move 2 , 4 )  | ( move ua , ua + ul ; move 2 , 4 )  | ( move ua , ul ; move 2 , ua + 4 )  | ( move ua , ul ; move 2 , 4 - ua )  | ( move ua , ul ; move 3 - ul , 4 )  | ( move ua , ul ; move ul + ul , 4 )  | ( move ua , ul ; move 2 , 4 ; pen 0 )  | ( move ua , ul ; move 2 , 4 ; pen 3 )  | ( move ua , ua + ul ; move 2 , 3 + ul )  | ( move ua , 2 - ul ; move ul + ul , 4 )  | ( move ua , ua + ul ; move ul + ul , 4 )  | ( move ua , ul ; move ul , 4 ; move ul , ua )  | ( v0 = 4 ; move ua , ul ; move 2 , v0 )  | ( move ua , ul ; move ul + ul , 4 ; pen ul )  | ( move ua , ul ; move 2 , 4 ; v0 = 0 - 4 )  | ( move ua , ul ; move 2 , 4 ; v0 = ul - 2 )  | ( move ua , ul ; move 2 , 4 ; v0 = ul - 4 )  | ( move ua , ul ; move 0 , 3 ; move ua / 3 , ul )  | ( move ua , ul ; v0 = 2 + 2 ; move 2 , v0 )  | ( pen ul ; ( move ua , ul ; move ul + ul , 4 ) )  | ( v0 = 2 ; move ua , ul ; move v0 , 3 + ul )  | ( move ua , ul ; move ua / 3 , ua + 4 ; v0 = ul )  | ( move ua , ul ; v0 = 2 ; move v0 , v0 + v0 )  | ( v0 = ul ; move ua , v0 ; move v0 + v0 , 4 )  | ( move ua , 2 - ul ; v0 = ul ; move v0 + v0 , 4 )  | ( move ua , ua + ul ; ( move ul + ul , 4 ; move 0 , ua ) )  | ( move ua , ul - ua ; ( move 2 , 4 ; pen 3 ; v0 = 2 ) )  
[583] ( move ua , 2 ; move 4 , ul )  | ( move ua , 2 ; move 2 + 2 , ul )  | ( move ua , 2 ; move 3 + ul , ul )  | ( move ua , 2 ; move 4 , ua + ul )  | ( move ua , 2 ; move 4 , ul - ua )  | ( move ua , 3 - ul ; move 4 , ul )  | ( move ua , ul + ul ; move 4 , ul )  | ( move ua , 2 ; move 4 , ul ; pen ul )  | ( move ua , 2 ; pen ul ; move 4 , ul )  | ( move ua , 2 ; move 2 * 2 , ua + ul )  | ( move ua , 2 ; move 3 + ul , ua + ul )  | ( move ua , 2 ; move 4 , ul ; pen 4 * 3 )  | ( move ua , 2 ; move 4 , ua + ul ; pen 0 )  | ( move 0 , ul ; move ua , ul ; move 4 , ul )  | ( move ua , 2 ; v0 = 4 ; move v0 , ul )  | ( move ua , 2 ; move 4 , ul ; v0 = 2 - ul )  | ( v0 = ua ; ( move ua , 2 ; move 4 , ul ) )  | ( move ua , ul + ul ; ( move 4 , ul ; pen 4 ) )  | ( move ua , 2 - ua ; v0 = ul ; move 4 , v0 )  | ( move ua , 2 ; move 4 , ul ; ( pen ua ; pen ua ) )  | ( v0 = ua ; move v0 , 2 + v0 ; move 4 , ul )  | ( move ua , ua + 2 ; move 4 , ul ; v0 = 4 + ul )  | ( move ua , 3 - ul ; move 4 , ua + ul ; v0 = ul )  | ( move ua , ul + ul ; v0 = ul - ua ; move 4 , v0 )  | ( ( move 0 , ul ; move ua , ul ; move 4 , ua + ul ) ; pen ua )  | ( move ua , ul + ul ; ( pen ul ; v0 = ul ; move 4 , ul ) )  
[584] ( move 2 , ul ; move ua , 4 )  | ( move 2 , ul ; move ua , 2 + 2 )  | ( move 2 , ul ; move ua , 3 + ul )  | ( move 2 , ul ; move ua , ua + 4 )  | ( move 2 , ua + ul ; move ua , 4 )  | ( move ul + ul , ul ; move ua , 4 )  | ( move ul + ul , ul ; move ua , 3 + ul )  | ( move 2 , ul ; move ua , 4 ; v0 = ua )  | ( move ul , ul ; move ul , 0 ; move ua , 4 )  | ( move 2 , ul - ua ; move ua , 4 ; pen ul )  | ( move 2 , ul ; ( move ua , 4 ; v0 = 2 ) )  | ( move 2 , ul - ua ; v0 = ua ; move v0 , 4 )  | ( move 2 , 2 - ul ; move ua , 4 ; v0 = 4 - ul )  | ( move 2 , ul ; ( move ua , 4 ; v0 = ul ) ; pen 0 )  | ( move ul + ul , ul ; v0 = 2 ; move ua , v0 * 2 )  | ( move 3 - ul , ul ; v0 = ua + 4 ; move ua , v0 )  | ( ( move 4 - 2 , ul ; move 2 , 4 ) ; move ua - 2 , 0 )  
[585] ( move ua , ul ; move 4 , 2 )  | ( move ua , ul ; move 4 , ua + 2 )  | ( move ua , ua + ul ; move 4 , 2 )  | ( move ua , ul ; move 4 , 2 - ua )  | ( move ua , ul ; move 4 , 2 ; pen 2 )  | ( pen ul ; move ua , ul ; move 4 , 2 )  | ( move ua , 2 - ul ; move 4 , 2 ; pen 3 )  | ( move ua , ul ; v0 = ul ; move 4 , 2 )  | ( move ua , ul ; pen ul ; move 3 + ul , 2 )  | ( pen ul ; move ua , ul ; move 4 , ul + ul )  | ( move ua , ul - ua ; move 4 , 2 ; v0 = 2 )  | ( move ua , ul ; move 0 , ul ; move 4 , ua + ul )  | ( move ua , ul ; ( move 4 , 2 ; pen 0 ; pen 3 ) )  | ( ( move ua , 2 - ul ; move 2 , 2 ) ; move 2 , ua )  | ( move ua , ul ; move 3 + ul , ul + ul ; move 0 , ul )  | ( v0 = 2 ; move ua , ul ; move v0 * v0 , v0 )  | ( move ua , 4 - 3 ; ( move 4 , 2 ; v0 = ua * ua ) )  | ( ( move ua , ul ; v0 = ul ; v1 = 0 ) ; move 4 , 2 )  
[586] ( move ul , ul ; move 3 , 2 )  | ( move ul , ua + ul ; move 3 , 2 )  | ( move ul , ul ; move 3 , ua + 2 )  | ( move ul , ul ; move 2 + ul , 2 )  | ( move ul , ul ; move 3 , 3 - ul )  | ( move ul , ul ; move 4 - ul , 2 )  | ( move ul - 4 , 3 ; move ul , ul )  | ( move ul , ul ; move 3 , ul + ul )  | ( move ul , ul ; move 3 , 2 ; pen 3 )  | ( pen ul ; move ul , ul ; move 3 , 2 )  | ( move ul , ul ; move 3 , 2 ; pen ul )  | ( move ul , ua + ul ; move 3 , 3 - ul )  | ( move ul , ul ; move 4 - ul , ua + 2 )  | ( move ul , ul ; move 3 , 2 ; pen 3 + ul )  | ( move ul , ul ; move 2 + ul , 2 ; pen 4 )  | ( v0 = ul ; move ul , v0 ; move 3 , 2 )  | ( move ul , ul ; move 0 , 4 / 2 ; move 3 , 0 )  | ( move ul , ul ; ( move 3 , 2 ; v0 = 3 ) )  | ( move ul , ul - ua ; move 3 , 2 ; move 0 , 0 )  | ( move ul , ul ; move 3 , 2 ; v0 = ul / 4 )  | ( move ul , ul ; move 2 + ul , 2 ; v0 = ua )  | ( move ul , ul ; move 0 , ua ; move 3 , ul + ul )  | ( move ul , ul ; move 3 - ul , 2 ; move ul , ua )  | ( move ul , ul ; move 3 , ul + ul ; v0 = ua )  | ( ( move ul , ul ; v0 = 3 ) ; move v0 , 2 )  | ( move ul , ul ; v0 = 2 + ul ; move v0 , 2 )  | ( move ul , ul ; v0 = 2 ; move 4 - ul , v0 )  | ( v0 = ul ; move ul , ul ; move 4 - v0 , 2 )  | ( move ul , ua + ul ; move 3 , 4 - 2 ; pen 4 + 4 )  | ( move ul , ul - ua ; move ul , 2 ; move ul + ul , ua )  | ( ( v0 = ul ; move v0 * v0 , v0 ) ; move 3 , 2 )  | ( move ul , ul ; move ul , 2 ; ( pen ul ; move 2 , ua + ua ) )  
[587] ( move 3 , 4 ; move ua , ul )  | ( move 3 , ua + 4 ; move ua , ul )  | ( move 3 , 4 ; move ua , ua + ul )  | ( move 3 , 4 ; move ua , ul - ua )  | ( move 3 , 4 ; pen ul ; move ua , ul )  | ( move 3 , 4 ; move ua , ul ; v0 = 0 )  | ( move 3 , 4 ; move 0 , ul ; move ua , ua )  | ( pen ul ; move 3 , ua + 4 ; move ua , ul )  | ( move 3 , 3 + ul ; pen ul ; move ua , ul )  | ( move 3 , 3 + ul ; move ua , ul ; v0 = 2 )  | ( move 0 , 3 ; ( move 3 , ul ; move ua , ul ) )  | ( move 3 , 4 ; move ua , ul ; v0 = ua + 4 )  | ( move 2 , 4 ; move ul , ua * 4 ; move ua , ul )  | ( move 4 - ul , 4 ; v0 = ua ; move ua , ul )  | ( ( move 2 + ul , 4 ; pen ul ) ; move ua , ul )  | ( move 3 , 4 ; v0 = ua ; ( move v0 , ul ; pen 2 ) )  | ( move 3 , 3 + ul ; v0 = ul ; move v0 * ua , v0 )  | ( ( move 3 , 4 ; v0 = ua ; move v0 , ul ) ; pen ul )  
[588] ( move ua , 4 ; move ua , 4 )  | ( move ua , 4 ; move ua , ua + 4 )  | ( move ua , 4 ; move ua , 4 ; pen 3 )  | ( move ua , 3 + ul ; move ua , 4 ; pen 0 )  | ( ( move ua , 4 ; move ua , 4 ) ; pen ua )  | ( move ua , 4 ; move ua , 4 ; pen ua * ua )  | ( move ua , 4 ; move ua , 4 ; v0 = ua + ul )  | ( move ua , 4 ; move ua , 4 ; v0 = ua - ul )  | ( v0 = 3 ; move ua , v0 + ul ; move ua , 4 )  | ( ( v0 = ua ; move v0 , 4 ) ; move v0 , 4 )  | ( move ua , 4 ; ( move ua , 2 * 2 ; v0 = ul ) )  | ( v0 = 4 ; move ua , ua + v0 ; move ua , v0 )  | ( move ua , ua + 4 ; move ua , ua + 4 ; v0 = 3 )  
[589] ( move ua , ul ; move 3 , 4 )  | ( move ua , ul ; move 3 , 3 + ul )  | ( move ua , ul ; move 3 , ua + 4 )  | ( move ua , ua + ul ; move 3 , 4 )  | ( move ua , ul - ua ; move 3 , 4 )  | ( move ua , ul ; move 3 , 4 ; pen ul )  | ( move ua , 2 - ul ; move 3 , 4 - ua )  | ( move ua , ul - ua ; move 3 , 3 + ul )  | ( move ua , ul ; move 3 , 4 ; v0 = 0 )  | ( move ua , ul ; move 3 , 4 ; v0 = 2 )  | ( move ua , ul ; move 3 , 4 ; move 0 , ua )  | ( move ua , ul ; move 3 , 4 ; pen ua + ul )  | ( move ua , ul ; move 3 , ua + 4 ; v0 = ua )  | ( move ua , ul ; move 3 , 3 + ul ; v0 = ua )  | ( move ua , ul ; move 3 , 4 ; v0 = ua + ul )  | ( ( pen ul ; move ua , ul ) ; move 2 + ul , 4 )  | ( pen ul ; ( move ua , ul ; move 3 , ua + 4 ) )  | ( move ua , ul ; v0 = 3 ; move v0 , 4 - ua )  | ( move ua , ul ; v0 = 3 ; move v0 , v0 + ul )  | ( move ua , ul ; move 3 , 4 - ua ; v0 = ua + 4 )  | ( move ua , ul ; v0 = ua + ul ; move 3 , 3 + v0 )  | ( ( pen ul ; move ua , ul ; move 3 , 4 ) ; v0 = ua )  | ( ( move ua , 2 - ul ; v0 = 2 * 2 ) ; move 3 , v0 )  | ( move ua , ua + ul ; ( move 3 , 4 ; v0 = 4 ) ; pen ul )  
[590] ( move 4 , 3 ; move ua , ul )  | ( move 4 , 3 ; move ua , 3 - 2 )  | ( move 4 , 2 + ul ; move ua , ul )  | ( move 3 + ul , 3 ; move ua , ul )  | ( move 4 , 3 - ua ; move ua , ul )  | ( move 4 , 3 ; move ua , ul - ua )  | ( move 4 , 3 ; move ua , ul ; pen 0 )  | ( move 3 + ul , 3 ; move ua , ua + ul )  | ( move 4 , 3 ; move ua , ul ; move 0 , ul )  | ( move 4 , 3 ; move ua , ul ; v0 = ul )  | ( move 4 , 2 + ul ; move ua , ul ; pen ul )  | ( move 4 , 3 ; v0 = ua ; move v0 , ul )  | ( move 0 , ul ; ( move 4 , 2 ; move ua , ul ) )  | ( move 3 , 3 ; move ul , 0 ; move ua , ua + ul )  | ( v0 = 3 ; move ul + v0 , v0 ; move ua , ul )  | ( ( move 3 , 2 + ul ; move ul , ua ) ; move ua , ua + ul )  
[591] ( move 2 , ul ; move 4 , ul )  | ( move 2 , ul ; move 4 , 2 - ul )  | ( move 2 , ul ; move 3 + ul , ul )  | ( move 2 , ua + ul ; move 4 , ul )  | ( move 3 - ul , ul ; move 4 , ul )  | ( move ul + ul , ul ; move 4 , ul )  | ( move 2 , ul ; pen ul ; move 4 , ul )  | ( move ul + ul , ul ; move 4 , 2 - ul )  | ( move ul + ul , ul ; move 4 , ua + ul )  | ( move ul + ul , ul - ua ; move 4 , ul )  | ( move 2 , ul ; move ul , ul ; move 3 , 0 )  | ( move 2 , ul ; move 4 , ul ; v0 = ua )  | ( move 2 , ul ; move 4 , ul ; pen 4 - ul )  | ( move 2 , ul ; move 4 , ul ; pen ua + ua )  | ( move ul + ul , ul ; move 4 , ul ; pen 2 )  | ( move ul , ul ; move ul , ua ; move 4 , ul )  | ( move 2 , ul ; v0 = ul ; move 4 , v0 )  | ( move 2 , ul ; move 4 , ul ; v0 = ua + ua )  | ( move ul , ul ; move ul , ua ; move 4 , ua + ul )  | ( move 2 , ul ; pen ul ; ( move 4 , ul ; pen 4 ) )  | ( move 2 , ul ; v0 = ul ; move 4 * v0 , v0 )  | ( move 2 , 2 - ul ; move 3 + ul , ul ; pen 4 + 2 )  | ( move ul + ul , ua + ul ; move 2 * 2 , ul ; pen 4 )  | ( move 2 , ul ; ( move 4 , ul ; v0 = 4 ) ; pen 0 )  | ( v0 = ul ; move ul + v0 , v0 ; move 4 , v0 )  | ( v0 = 4 ; move v0 - 2 , ul - ua ; move v0 , ul )  | ( move ul + ul , ul ; ( move 4 , ul ; v0 = ua - ul ) )  | ( move ul , ul ; move ul , ua ; ( move ul , ul ; move 3 , ua ) )  
[592] ( move 3 , ul ; move 3 , ul )  | ( move 3 , ul ; move 3 , 4 - 3 )  | ( move 2 + ul , ul ; move 3 , ul )  | ( move 3 , ul ; move 3 , ua + ul )  | ( move 3 , ul ; move 2 + ul , ul )  | ( move 3 , ul ; move 3 , ul - ua )  | ( move 3 , ul - ua ; move 3 , ul )  | ( move 3 , ul ; move 4 - ul , ul )  | ( move 4 - ul , ul ; move 3 , ul )  | ( move 3 , ul ; move 3 , ul ; pen 2 )  | ( move 3 , ul ; move 3 , ul ; pen ul )  | ( move 3 , 2 - ul ; move 3 , 2 - ul )  | ( move 2 + ul , ul ; move 3 , ua + ul )  | ( move 0 , 0 ; move 3 , ul ; move 3 , ul )  | ( move 3 , 3 - 2 ; move 3 , ul ; pen ua )  | ( move 3 , ul - ua ; move 3 , ul ; pen 2 )  | ( move 3 , ul ; move 3 , ul ; pen ua + ua )  | ( move 3 , ul ; move 3 , ua + ul ; pen ul )  | ( move 3 , ul ; move 3 , ul ; pen ua + ul )  | ( v0 = 3 ; move v0 , ul ; move 3 , ul )  | ( move 3 , ul ; move 3 , ul ; v0 = 2 / ua )  | ( move 3 , ua + ul ; move ul , ul ; move 2 , 0 )  | ( move 2 + ul , ul ; move 3 , ul ; pen ua * 3 )  | ( move 4 - ul , ul ; move 3 , ul - ua ; pen ul )  | ( move 3 , ul ; move 2 + ul , ul ; v0 = ua + 4 )  | ( move 3 , ul ; ( move 3 , ul ; move 0 , 3 ) ; pen 3 / 4 )  
[593] ( move 3 , 3 ; move ul , ul )  | ( move 3 , ua + 3 ; move ul , ul )  | ( move 3 , 2 + ul ; move ul , ul )  | ( move 3 , 4 - ul ; move ul , ul )  | ( move 3 , 3 ; move ul , ul ; pen 3 )  | ( move 2 + ul , ua + 3 ; move ul , ul )  | ( move 3 , 3 ; v0 = 2 ; move ul , ul )  | ( ( move 3 , 3 ; move ul , ul ) ; pen 0 )  | ( move 3 , 3 ; move ul , ul ; pen 4 / 2 )  | ( move 0 , 3 ; move 3 , ua ; move ul , ul )  | ( move ul , 3 ; move 2 , 0 ; move ul , ul )  | ( move 3 , 3 ; move ul , ul ; v0 = ul )  | ( move 3 , 3 ; move ul , ul ; pen 2 + ul )  | ( move 3 , 3 ; ( pen ul ; move ul , ul ) )  | ( pen ul ; move 3 , 3 ; move ul , ua + ul )  | ( move 2 + ul , 2 + ul ; move ul , 3 - 2 )  | ( v0 = ul ; move 3 , 3 ; move v0 , ul )  | ( move 3 , 3 ; v0 = ul ; move ul , v0 )  | ( v0 = ul ; move 3 , 3 ; move ul , v0 )  | ( v0 = 3 ; move v0 , v0 ; move ul , ul )  | ( move 3 , ua + 3 ; move 3 - 2 , ul ; pen ua )  | ( move 3 , 2 + ul ; move ul , ul ; v0 = ul )  | ( move ul + ul , 3 ; move ul , 0 ; move ul , ul )  | ( ( v0 = 3 ; move 3 , v0 ) ; move ul , ul )  | ( move 3 , 3 ; v0 = 2 - ul ; move v0 , v0 )  | ( ( move 3 , 3 ; v0 = ul ) ; move v0 , v0 )  | ( move 3 , 3 - ua ; v0 = 2 / 4 ; move ul , ul )  
[594] ( move 3 , ul ; move ua , 4 )  | ( move 3 , ul ; move ua , ua + 4 )  | ( move 2 + ul , ul ; move ua , 4 )  | ( move 3 , ua + ul ; move ua , 4 )  | ( move 3 , ul ; move ua , 3 + ul )  | ( move 3 , 4 - 3 ; move ua , 4 - ua )  | ( move 2 + ul , ul ; pen ul ; move ua , 4 )  | ( ( move 2 , ul ; move ul , 0 ) ; move ua , 4 )  | ( move 3 , ul ; move ua , 4 ; v0 = ul - 3 )  | ( move 3 , ul ; v0 = ul ; move ua , 4 - ua )  | ( pen ul ; ( move 3 , ul ; move ua , 4 ; pen ul ) )  | ( ( move 3 , ul ; move ua , 4 ) ; move 0 , 4 + ul )  | ( move 2 + ul , ul ; move ua , 4 ; v0 = ul / ua )  | ( move 3 , ul ; v0 = 4 / 2 ; move ua , v0 + v0 )  | ( ( v0 = ua ; move 3 , ul ) ; move v0 , 4 ; pen v0 )  | ( ( move 3 , ul ; move ua , 4 ) ; pen 2 ; v0 = 3 / ua )  | ( move 2 , ul ; move ul , ua ; ( move ua , 4 ; v0 = 2 ) )  | ( ( pen ul ; move 3 , ua + ul ; move ua , 4 ) ; v0 = 0 )  
[595] ( move 4 , ul ; move ua , 3 )  | ( move 2 + 2 , ul ; move ua , 3 )  | ( move 4 , ul ; move ua , ua + 3 )  | ( move 4 + ul , ul ; move ua , 3 )  | ( pen ul ; move 4 , ul ; move ua , 3 )  | ( move 3 + ul , ua + ul ; move ua , 3 )  | ( move 4 , ul ; move 0 , ua ; move ua , 3 )  | ( move 4 , ul ; move ua , 3 ; move 0 , ua )  | ( move 4 + ul , ua + ul ; move 4 + 2 , 3 )  | ( move 3 + ul , ul ; move ua , 3 ; v0 = 3 )  | ( ( move 4 , ul ; move ua , 3 ; pen 2 ) ; pen 2 )  
[596] ( move ul , ul ; move 3 , 3 )  | ( move ul - 4 , 4 ; move 2 , 0 )  | ( move ul , ul ; move 3 , 2 + ul )  | ( move ul , ul ; move 2 + ul , 3 )  | ( move ul , ul ; move 3 , ua + 3 )  | ( move ul , ul ; move 3 , 3 - ua )  | ( move ul , ul ; move 4 - ul , 3 )  | ( move ul , ul ; move 3 , 4 - ul )  | ( move 2 - ul , ul ; move 3 , ua + 3 )  | ( move 2 - ul , ul ; move 3 , 3 - ua )  | ( move ul , ul ; move 2 + ul , ua + 3 )  | ( move ul , ul ; move 4 - ul , ua + 3 )  | ( move ul , ul ; move 3 , 3 ; v0 = 2 )  | ( move ul , ul ; move 2 , 3 ; move ul , ua )  | ( move ul , ul ; move ul , 3 ; move 2 , ua )  | ( move ul , ul ; move 3 , 4 - ul ; pen ua )  | ( move ul , ul ; v0 = 3 ; move 3 , v0 )  | ( move ul , ul ; v0 = 3 ; move v0 , v0 )  | ( move 0 , 0 ; move ul , ul ; move 3 , 4 - ul )  | ( move ul , ul ; pen ul ; move 4 - ul , 2 + ul )  | ( ( v0 = 3 ; move ul , ul ) ; move v0 , v0 )  | ( ( move ul , ul ; move 0 , 2 ) ; move 3 , ua + ul )  | ( v0 = ul ; move v0 , v0 ; move v0 * 3 , 3 )  | ( move ul , ul ; ( move 0 , ul ; move 2 + ul , 2 ) ; pen 3 )  
[597] ( move ul , ul ; move 4 , 2 )  | ( move ul , ul ; move 2 + 2 , 2 )  | ( move ul , ul ; move 4 , 4 / 2 )  | ( move ul , ul ; move 4 , ua + 2 )  | ( move ul , ua + ul ; move 4 , 2 )  | ( move ul , ul ; move 3 + ul , 2 )  | ( move ul , ul ; move 4 , ul + ul )  | ( move ul , ul ; move 4 , 2 ; pen 3 )  | ( move ul , ul ; move 3 + ul , 4 - 2 )  | ( move ul , ua + ul ; move 3 + ul , 2 )  | ( move ul , 2 - ul ; move 4 , ul + ul )  | ( move ul , ul ; v0 = 4 ; move v0 , 2 )  | ( move ul , ul ; move 3 + ul , 2 ; v0 = ul )  | ( move ul , ul ; v0 = ul - ua ; move 4 , 2 )  | ( move ul , ul ; move 0 , ul ; move 4 , ua + ul )  | ( move ul , ul ; ( move 0 , 2 - ua ; move 4 , ua ) )  | ( move ul , ul ; move 4 , ul + ul ; v0 = 4 + 4 )  | ( ( v0 = ul + ul ; move ul , ul ) ; move 4 , 2 )  | ( v0 = ul ; move v0 , v0 ; move 4 , v0 + v0 )  | ( ( pen ul ; move ul , ul ) ; v0 = 4 ; move v0 , 2 )  | ( move ul , ul ; ( v0 = 2 ; move v0 * v0 , v0 ) )  | ( v0 = ul ; ( move v0 , v0 ; move 4 , ul + v0 ) )  | ( ( move ul , ul ; move 3 + ul , 2 ) ; v0 = 0 ; pen 3 )  | ( move ul , ul ; ( move 4 , ul + ul ; move 0 , 0 ; pen 3 ) )  | ( ( move ul , ul ; move 4 , ul + ul ) ; move 0 , 4 ; pen 0 )  | ( move ul , ul ; v0 = ul + ul ; move v0 + v0 , v0 )  
[598] ( move ua , 3 ; move ul , 4 )  | ( move ua , 3 ; move ul , 2 + 2 )  | ( move ua , 3 ; move 0 - ul , ul )  | ( move ua , ua + 3 ; move ul , 4 )  | ( move ua , 3 ; move ul , ua + 4 )  | ( move ua , 2 + ul ; move ul , 4 )  | ( move ua , 3 ; move ul , 3 + ul )  | ( move 0 , 2 ; move ua , ul ; move ul , 4 )  | ( move ua , 3 ; move ul , 4 ; v0 = ua )  | ( move ua , 3 ; move ul , 3 + ul ; pen ua )  | ( move 3 , 3 ; move ua - 3 , 0 ; move ul , 4 )  | ( ( move ua , 3 ; move 0 , ul ) ; move ul , 3 )  | ( move 0 , 2 + ul ; move ua , ua ; move ul , 4 )  | ( move ua , ua + 3 ; v0 = ua ; move ul , 4 )  | ( move ua , 3 ; v0 = 3 + ul ; move ul , v0 )  | ( ( move ua , 3 ; move ul , 4 ) ; v0 = ul + ul )  
[599] ( move ul , 3 ; move ua , 4 )  | ( move ul , 2 + ul ; move ua , 4 )  | ( move ul , 3 ; move ua , ua + 4 )  | ( move ul , 3 ; move ua , 4 - ua )  | ( move ul , 2 + ul ; move ua , 3 + ul )  | ( move ul , 3 ; move ua , 4 ; pen 4 * 2 )  | ( move ul , 3 ; move 0 , 3 ; move ua , ul )  | ( move ul , 3 ; move ua , 4 ; move 0 , ua )  | ( move ul , 3 ; v0 = ua ; move ua , 4 )  | ( move ul , 3 ; move ua , 3 + ul ; v0 = 4 )  | ( move 0 , ua ; move ul , 3 ; move ua , 4 - ua )  | ( move ul , 3 ; move ua , 3 + ul ; pen ua - ul )  | ( move ul , 3 - ua ; move 0 , 3 ; move ua , ul - ua )  | ( move ul , ua + 3 ; move ua , 4 ; v0 = ul + ul )  
[600] ( move ul , 2 ; move 4 , ul )  | ( move ul , 2 ; move 2 * 2 , ul )  | ( move ul , 2 ; move 3 + ul , ul )  | ( move ul , 2 ; move 4 , ua + ul )  | ( move ul , 2 - ua ; move 4 , ul )  | ( move ul , 2 ; move 4 , ul - ua )  | ( move ul , 3 - ul ; move 4 , ul )  | ( move ul , ul + ul ; move 4 , ul )  | ( move ul , 2 ; move 4 , ul ; pen 2 )  | ( move ul , 2 - ua ; move 2 * 2 , ul )  | ( move 2 - ul , ul + ul ; move 4 , ul )  | ( move ul , 2 ; move 4 , ul ; move 0 , 2 )  | ( ( move ul , 2 ; move 4 , ul ) ; pen 0 )  | ( move ul , 2 ; ( move 4 , ul ; pen 4 ) )  | ( move ul , 2 ; ( move 4 , ul ; pen ua ) )  | ( move ul , 2 ; v0 = ul ; move 4 , v0 )  | ( move ul , ul + ul ; pen ul ; move 4 , ul )  | ( ( move ul , 2 ; move 4 , ul ) ; move 0 , 2 )  | ( move 4 - 3 , 2 ; move 4 , 2 - ul ; pen ua )  | ( move ul , 2 ; move 2 * 2 , ul ; pen 2 - ul )  | ( ( move ul , 3 - ul ; move 4 , ul ) ; pen 2 )  | ( move ul , ul + ul ; move 4 , ul ; move 0 , 4 )  | ( ( move ul , 2 ; v0 = 4 ) ; move v0 , ul )  | ( ( move ul , ua + 2 ; move 4 , ul ) ; v0 = ul )  | ( move ul , 2 - ua ; ( move 4 , ul ; v0 = ul ) )  | ( ( pen ul ; move ul , ul + ul ; move 4 , ul ) ; pen 2 )  | ( move ul , 2 ; ( v0 = ua ; move 4 , ul ; pen v0 ) )  | ( ( move ul , 2 ; move 0 , ul ; move 4 , ua ) ; v0 = 3 )  | ( move ul , ul + ul ; move ul , ul - ua ; move 3 , ua * 4 )  | ( v0 = ul ; move v0 , ul + ul ; move 4 / v0 , v0 )  | ( v0 = ul + ul ; move ul , v0 ; move v0 + v0 , ul )  | ( move ul , 2 ; ( ( pen ul ; move 4 , ul ) ; pen ua + 2 ) )  
[601] ( move 4 , 2 ; move ul , ul )  | ( move 4 , 2 ; move 0 - ul , 4 )  | ( move 4 , ua + 2 ; move ul , ul )  | ( move 4 , 2 - ua ; move ul , ul )  | ( move 4 , 2 ; move ul , ul - ua )  | ( move 4 , 3 - ul ; move ul , ul )  | ( move 4 , ul + ul ; move ul , ul )  | ( move 4 , 2 ; move ul , ul ; pen ua )  | ( move 4 , 2 ; move 0 , 0 ; move ul , ul )  | ( move 4 , ul + ul ; move ul , ua + ul )  | ( move 4 , 2 ; move ul , ul ; v0 = ul )  | ( ( pen ul ; move 4 , 2 ) ; move ul , ul )  | ( move 4 , 2 ; v0 = ul ; move v0 , v0 )  | ( v0 = ua + 4 ; move 4 , 2 ; move ul , ul )  | ( move 4 , 2 ; ( move ul , ul ; pen 4 - ua ) )  | ( move 4 , 2 ; move ul , ul ; v0 = ua - ul )  | ( move 4 , ul + ul ; move ul , ul ; pen 2 - ul )  | ( move 4 , 2 ; ( v0 = ul ; move ul , v0 ) )  | ( move 4 , 2 ; ( v0 = ul ; move ul , ul / v0 ) )  | ( ( move 4 , 2 ; pen ul ; v0 = ul ) ; move ul , ul )  | ( ( move 4 , 2 ; v0 = ul ) ; move v0 * v0 , ul )  | ( move 3 + ul , 4 - 2 ; move ul , ua + ul ; v0 = 3 )  | ( move 4 , 2 ; move ul , ul ; ( v0 = ul ; pen v0 ) )  | ( move 4 , 2 ; ( v0 = ul ; move v0 , v0 ) ; pen ul )  
[602] ( move ua , 3 ; move 4 , ul )  | ( move ua , 3 ; move 2 + 2 , ul )  | ( move ua , 3 ; move 4 , ua + ul )  | ( move ua , 2 + ul ; move 4 , ul )  | ( move ua , 3 ; move 3 + ul , ul )  | ( move ua , 4 - ul ; move 4 , ul )  | ( move ua , ua + 3 ; move 4 , ua + ul )  | ( move ua , 3 ; move 3 + ul , ua + ul )  | ( move ua , 3 ; move 0 , ul ; move 4 , ua )  | ( move ua , 3 ; move 4 , ul ; move 0 , 4 + ul )  | ( move 0 , 2 ; ( move ua , ul ; move 4 , ul ) )  | ( ( move ua , 3 ; move 3 , ul ) ; move ul , 0 )  | ( move ua , ua + 3 ; move 4 , ul ; move 0 , ua )  | ( move ua , 4 - ul ; v0 = 4 ; move v0 , ul )  | ( v0 = 3 ; move ua , v0 ; move 4 , v0 - 2 )  | ( move ua , 2 + ul ; v0 = 3 * 3 ; move 4 , ul )  | ( ( move ua , 3 ; move 4 , ul ; pen 2 / ua ) ; pen 4 )  
[603] ( move 3 , ul ; move ul , 3 )  | ( move 3 , ul ; move ul , 3 - ua )  | ( move 3 , ul - ua ; move ul , 3 )  | ( move ul - 4 , ul ; move 2 , ua )  | ( move 4 - ul , ul ; move ul , 3 )  | ( pen ul ; move 3 , ul ; move ul , 3 )  | ( move 2 + ul , ua + ul ; move ul , 3 )  | ( move 2 + ul , ul ; move ul , 3 - ua )  | ( move 3 , ul ; move ul , 3 ; pen 4 * 3 )  | ( move 4 - ul , ul ; move ul , 3 ; pen ua )  | ( move 4 - ul , ua + ul ; move 2 - ul , 3 )  | ( ( move 3 , ul ; v0 = 0 ) ; move ul , 3 )  | ( move 3 , ul ; move ul , 3 - ua ; v0 = 3 )  | ( move 3 , ua + ul ; move 0 , ul ; move ul , 2 )  | ( move 2 , ul ; move ul , ua ; move ul , ua + 3 )  | ( ( move 3 , ul ; v0 = 3 ) ; move ul , v0 )  | ( ( v0 = ul ; move 3 , v0 ) ; move v0 , 3 )  | ( move 3 , 4 - 3 ; move ul , 3 ; v0 = 4 - ua )  | ( ( move 3 , ul ; move ul , 3 ) ; v0 = 2 + ul )  | ( move 2 + ul , ul ; move ul , ua + 3 ; move 0 , 0 )  | ( move 3 , ul ; move 0 - ul , 0 ; v0 = ua + ua )  | ( ( move 2 + ul , ul ; move ul , 3 ) ; pen ua * 4 )  | ( ( pen ul ; move 3 , ul ) ; move ul , 3 ; pen ua + 4 )  | ( move ul - 2 , 4 ; v0 = ul - 4 ; move v0 , v0 )  | ( move 4 - ul , ul ; ( move ul , 3 ; v0 = ua * ua ) )  | ( move 3 , ul ; ( v0 = 3 ; move ul , 3 ; v1 = ul ) )  
[604] ( move ua , 4 ; move 3 , ul )  | ( move ua , 3 + ul ; move 3 , ul )  | ( move ua , 4 ; move 3 , ul - ua )  | ( move ua , 4 ; move 4 - ul , ul )  | ( move ua , 4 ; pen ul ; move 3 , ul )  | ( move ua , ua + 4 ; move 2 + ul , ul )  | ( move ua , 3 + ul ; move 2 + ul , ul )  | ( move ua , 4 ; move 3 , ul ; move 0 , 4 )  | ( move ua , 4 ; move 3 , ul ; v0 = 4 )  | ( move ua , 4 ; v0 = ul ; move 3 , ul )  | ( move ua , 4 ; move 2 + ul , ul ; pen 0 )  | ( pen ul ; move ua , 4 ; move 3 , ua + ul )  | ( v0 = ua ; ( move ua , 4 ; move 3 , ul ) )  | ( move ua , ua + 4 ; move 3 , ul ; move 0 , ua )  | ( move ua , 4 ; move 2 , ul ; move ul , ua * 3 )  | ( move ua , 3 + ul ; v0 = 3 ; move v0 , ul )  | ( ( move ua , 2 * 2 ; move 0 , ul ) ; move 3 , ua )  | ( move ua , ua + 4 ; move 2 , 2 - ul ; move ul , ua )  | ( move ua , ua + 4 ; move 3 , ul ; move 0 , ul / ua )  | ( ( move ua , 4 ; move 3 , ul ) ; pen 2 ; v0 = ul )  
[605] ( move 4 , ul ; move 2 , ul )  | ( move 4 , ul ; move 2 , 2 - ul )  | ( move 4 , ua + ul ; move 2 , ul )  | ( move 3 + ul , ul ; move 2 , ul )  | ( move 4 , ul ; move 3 - ul , ul )  | ( move 4 , ul ; move ul + ul , ul )  | ( move 4 , ul ; move 2 , ul ; pen 4 )  | ( move 4 , ul ; move 2 , ul ; pen ul )  | ( pen ul ; move 4 , ul ; move 2 , ul )  | ( move 2 + 2 , ua + ul ; move 2 , ul )  | ( move 4 , ul ; move 2 , ul ; move 0 , 4 )  | ( move 4 , ul ; v0 = 0 ; move 2 , ul )  | ( move 4 , ul ; move 2 , ul ; v0 = 3 )  | ( ( move 4 , ul ; move 2 , ul ) ; pen ul )  | ( move 3 , ul ; move ul , ua ; move 2 , ul )  | ( move 4 , ul - ua ; move 2 , ul ; pen ua )  | ( pen ul ; move 3 + ul , ul ; move 2 , ul )  | ( move 0 , ua + ul ; move 4 , 0 ; move 2 , ul )  | ( move 2 , ul ; move 2 , 0 ; move 2 , ul - ua )  | ( ( move 4 , ul ; move 0 , ua ) ; move 2 , ul )  | ( move 4 , ul ; move ul + ul , ul ; move 0 , 0 )  | ( move 4 , ul ; ( move 3 - ul , ul ; pen 3 ) )  | ( move 4 , ul ; move 0 , ul - ua ; move 2 , ua )  | ( ( move 4 , ul ; move ul , ul ) ; move ul , 0 )  | ( pen ul ; move 3 + ul , ul ; move 2 , ua + ul )  | ( move 4 , ul ; v0 = ul ; move 2 , ul / v0 )  | ( move 4 , ul ; move 2 , ul ; ( pen ua ; pen 2 ) )  | ( move 4 , ul ; v0 = ul ; move 3 - v0 , v0 )  | ( move 3 + ul , ul ; move 2 , ul ; v0 = 2 - ul )  | ( move 4 , ul ; move 2 , ul - ua ; v0 = ua / 4 )  | ( move 4 , ul ; v0 = ul ; move v0 + v0 , v0 )  | ( move 4 , ul ; ( move 2 , ul ; v0 = ua ) ; pen ul )  
[606] ( move ua , ul ; move 4 , 3 )  | ( move ua , 3 - 2 ; move 4 , 3 )  | ( move ua , ul ; move 3 + 2 , 3 )  | ( move ua , 2 - ul ; move 4 , 3 )  | ( move ua , ua + ul ; move 4 , 3 )  | ( move ua , ul ; move 3 + ul , 3 )  | ( move ua , ul ; move 4 , ua + 3 )  | ( move ua , ul ; move 4 + ul , 3 )  | ( move ua , ul ; move 4 , 3 ; pen 3 )  | ( move ua , ul ; pen ul ; move 4 , 3 )  | ( pen ul ; move ua , ul ; move 4 , 3 )  | ( move ua , ul ; move 3 + ul , ua + 3 )  | ( move ua , ul ; move 4 , 3 ; v0 = ua )  | ( move ua , ul ; v0 = ua ; move 4 , 3 )  | ( move ua , ul ; move 4 , 4 - ul ; pen ul )  | ( move ua , ul ; move 0 , 0 ; move 3 + ul , 3 )  | ( move ua , ul ; move 2 + 2 , 4 - ul ; pen 4 * 2 )  | ( move ua , ul ; v0 = 3 ; move v0 + ul , v0 )  | ( move ua , ul ; move 4 + ul , 3 ; v0 = 2 / ua )  | ( move ua , ul ; ( pen ul ; move 4 , 3 ; move 0 , ul ) )  | ( move ua , ul ; ( pen ul ; move 4 , 3 ; v0 = ul ) )  
[607] ( move ul , 3 ; move 3 , ul )  | ( move ul , ua + 3 ; move 3 , ul )  | ( move ul , 3 ; move 3 , ua + ul )  | ( move ul , 2 + ul ; move 3 , ul )  | ( move ul , 4 - ul ; move 3 , ul )  | ( move ul , 3 ; move 3 , ul ; pen ua )  | ( move ul , 3 ; move 2 + ul , 3 - 2 )  | ( move 0 , 2 ; move ul , ul ; move 3 , ul )  | ( move ul , 3 ; v0 = ua ; move 3 , ul )  | ( pen ul / 4 ; move ul , 3 ; move 3 , ul )  | ( ( move ul , 3 ; pen ul ) ; move 3 , ul )  | ( move ul , 3 ; move 2 + ul , ul ; move 0 , 2 )  | ( v0 = 3 ; move ul , v0 ; move v0 , ul )  | ( move 4 / ua , 0 ; move ul , 3 ; move 3 , ul )  | ( move ul , 4 - ul ; move 3 , ul ; v0 = 2 )  | ( move ul , 3 ; ( move 2 + ul , ul ; pen 0 ) )  | ( pen ul ; move ul , 2 + ul ; move 3 , ua + ul )  | ( move ul , 2 + ul ; v0 = 3 ; move v0 , ul )  | ( move 0 , 4 / 2 ; move ul , 2 - ul ; move 3 , ul )  | ( move ul , 2 + ul ; move 3 , ul ; ( pen 2 ; pen 4 ) )  | ( ( pen ul ; move 0 , ul ; move ul , 2 ) ; move 3 , ul )  | ( move ul , 2 + ul ; move 2 + ul , ul ; move 0 , ul - 2 )  | ( move ul , 3 - ua ; move ul , ua + ul ; move ul + ul , 0 )  | ( move ul , 3 ; move 3 , ul ; ( v0 = ua ; v1 = ul ) )  | ( move ul , 3 ; ( move 2 , ul ; ( pen ul ; move ul , 0 ) ) )  
[608] ( move 4 , ul ; move ul , 2 )  | ( move 4 , ul ; move ul , 4 - 2 )  | ( move 4 , ua + ul ; move ul , 2 )  | ( move 4 , ul ; move ul , ua + 2 )  | ( move 3 + ul , ul ; move ul , 2 )  | ( move 4 , ul ; move ul , ul + ul )  | ( pen ul ; move 4 , ul ; move ul , 2 )  | ( move 4 , ul ; pen ul ; move ul , 2 )  | ( move 4 , ua + ul ; move 3 - 2 , 2 )  | ( move 3 + ul , ul ; move ul , ua + 2 )  | ( move 3 + ul , ul - ua ; move ul , 2 )  | ( move 4 , ul ; v0 = 2 ; move ul , 2 )  | ( move 4 , ul ; v0 = ua ; move ul , 2 )  | ( v0 = ul ; move 4 , v0 ; move ul , 2 )  | ( move 4 , ul ; move ul , ul + ul ; pen ua )  | ( move 4 , ul ; move 0 , ua + 2 ; move ul , 0 )  | ( move 4 , ul ; v0 = 3 - ul ; move ul , 2 )  | ( move 0 , ul ; move 3 + ul , ua ; move ul , 2 )  | ( move 4 , ul ; move ul / ua , 2 ; move ul , 0 )  | ( move 4 , ul ; ( pen 2 ; move ul , ul + ul ) )  | ( move ul , ul ; move 3 , 0 ; move ul , ul + ul )  | ( move 3 + ul , 4 - 3 ; move ul , 2 ; pen ua + ul )  | ( ( move 4 , ul ; move 0 , ul ) ; move ul , ul - ua )  | ( ( move 4 , ul - ua ; move ul , 2 ) ; v0 = 4 + ul )  | ( move 4 , ul ; v0 = ul ; ( pen ul ; move v0 , 2 ) )  | ( move 0 , ua + ua ; ( move 4 , ul ; pen ul ) ; move ul , 2 )  
[609] ( move ul , 4 ; move 3 , ul )  | ( move ul , 3 + ul ; move 3 , ul )  | ( move ul , 4 - ua ; move 3 , ul )  | ( move ul , 4 ; move 4 - ul , ul )  | ( move ul , 4 ; move 3 , ul ; pen 2 )  | ( move ul , 4 ; pen ul ; move 3 , ul )  | ( move ul , 4 ; move 2 + ul , ul - ua )  | ( move ul , 4 ; v0 = 0 ; move 3 , ul )  | ( move 0 , ua ; move ul , 4 ; move 3 , ul )  | ( v0 = 4 ; move ul , v0 ; move 3 , ul )  | ( v0 = ul ; move ul , 4 ; move 3 , v0 )  | ( move ul , 4 ; v0 = 2 - 4 ; move 3 , ul )  | ( move ul , 4 ; ( move 3 , ul ; v0 = ul ) )  | ( move ul , 3 + ul ; move ul , ul ; move 2 , 0 )  | ( move ul , 4 ; move 3 , ul ; move 0 , ul - ua )  | ( move ul , 2 * 2 ; v0 = 3 ; move v0 , ul )  | ( move 0 , ul ; ( move ul , 3 ; move 4 - ul , ul ) )  | ( move ul , 4 ; move ul + ul , ua + ul ; move ul , ua )  | ( ( move ul , 4 ; move 3 , ul ; v0 = ul ) ; pen v0 )  
[610] ( move 4 , ul ; move 3 , ul )  | ( move 4 , ua + ul ; move 3 , ul )  | ( move 4 , ul ; move 2 + ul , ul )  | ( move 3 + ul , ul ; move 3 , ul )  | ( move 4 , ul ; move 3 , ua + ul )  | ( move 4 , ul - ua ; move 3 , ul )  | ( move 4 , ul ; move 4 - ul , ul )  | ( move 4 , ul ; move 3 , ul ; pen 0 )  | ( move 2 + 2 , ul ; move 2 + ul , ul )  | ( move 4 , ul ; move 3 , ul ; move 0 , 2 )  | ( move 4 , ul ; move ul , ul ; move 2 , ua )  | ( move 4 , ul ; pen ul ; move 2 + ul , ul )  | ( move 0 , ul ; move 4 , 0 ; move 2 + ul , ul )  | ( ( move 4 , ul ; move 0 , ua ) ; move 3 , ul )  | ( move 4 , ul ; ( move 2 + ul , ul ; pen 0 ) )  | ( move 4 , ul - ua ; move 3 , ul ; v0 = ua )  | ( ( move 4 , ua + ul ; move 3 , ul ) ; pen ua )  | ( move 4 , ul ; ( v0 = ul ; move 3 , v0 ) )  | ( ( move 4 , ul ; move 3 , ul ) ; v0 = 2 + ul )  | ( move 4 , ul ; ( v0 = 4 - ua ; move 3 , ul ) )  | ( ( move 4 , ul ; move 3 , ul - ua ) ; v0 = ua )  | ( move 3 , ua + ul ; move ul , ua ; move 2 + ul , ul )  | ( move 4 , ul ; v0 = ua * 3 ; move 3 , ul + v0 )  | ( move 4 , ua + ul ; ( move 0 , 4 ; move 3 , 0 - 3 ) )  | ( move 4 , ul ; move 4 - ul , ua + ul ; v0 = ua * ua )  | ( ( move 4 , ul ; pen ul ) ; move 2 , ua + ul ; move ul , ua )  
[611] ( move 4 , ul ; move ua , 4 )  | ( move 4 , ul ; move ua , ua + 4 )  | ( move 4 , ua + ul ; move ua , 4 )  | ( move 4 , ul ; move ua , 3 + ul )  | ( move 4 , ul ; move ua , 4 - ua )  | ( move 4 , ul ; move ua , 4 ; pen 0 )  | ( move 3 + ul , ul ; move ua , 3 + ul )  | ( move 4 , ua + ul ; move ua , ua + 4 )  | ( move 4 , ul - ua ; move ua , ua + 4 )  | ( move 3 + ul , ul ; move ua , 4 - ua )  | ( move 4 , ul ; pen ul ; move ua , 3 + ul )  | ( move 4 , ul ; move ua , 4 ; pen ul - ua )  | ( v0 = 4 ; move v0 , ul ; move ua , 4 )  | ( move 4 , ul ; v0 = ua ; move v0 , 4 )  | ( v0 = 4 ; move v0 , ul ; move ua , v0 )  | ( move 4 , ul ; move ua , 4 ; v0 = 0 - ul )  | ( move 4 , ul ; v0 = ua ; move ua , 3 + ul )  | ( move 2 , ul ; move ul + ul , ua ; move ua , 4 )  | ( move 4 , ul ; v0 = 2 ; move ua , v0 * v0 )  | ( v0 = ul ; move 4 * v0 , v0 ; move ua , 4 )  | ( move 4 , ul ; ( v0 = 4 ; move ua , v0 ) ; pen v0 )  
[612] ( move ul , ul ; move 3 , 4 )  | ( move 4 - 3 , ul ; move 3 , 4 )  | ( move ul , ul ; move 3 , 2 * 2 )  | ( move ul , ul ; move 2 + ul , 4 )  | ( move ul , ul ; move 3 , ua + 4 )  | ( move ul , ul ; move 3 , 4 - ua )  | ( move ul , ul ; move 4 - ul , 4 )  | ( move ul , ul ; move 3 , 4 ; pen ua )  | ( move ul , ua + ul ; move 3 , 3 + ul )  | ( move ul , ul ; move 3 , 4 ; v0 = ul )  | ( move ul , ul ; pen ul ; move 3 , 4 - ua )  | ( move ul , ul ; ( move 3 , 4 ; pen 2 / 3 ) )  | ( move ul , ua + ul ; move 3 , 4 - ua ; pen 2 )  | ( ( move ul , 2 - ul ; move ul , 4 ) ; move 2 , 0 )  | ( ( move ul , ul ; move 3 , 3 + ul ) ; move 0 , ua )  | ( ( move ul , ua + ul ; move 3 , 4 ) ; v0 = ua )  | ( ( move ul , ul ; move 2 + ul , ua + 4 ) ; pen ul )  | ( move ul , ul ; ( pen 3 - ua ; pen ul ) ; move 3 , 4 )  | ( move ul , ua + ul ; move 0 , 2 ; move 4 - ul , ul + ul )  | ( ( move ul , ua + ul ; move 3 , 4 ; pen 0 ) ; v0 = 3 )  | ( move ul , ul ; ( move 0 , 3 ; ( pen ul ; move 3 , ul ) ) )  | ( pen ua ; ( pen ul ; move ul , ul ) ; move 2 + ul , 4 - ua )  
[613] ( move ua , ul ; move 4 , 4 )  | ( move ua , 2 - ul ; move 4 , 4 )  | ( move ua , ul ; move 4 , 3 + ul )  | ( move ua , ul ; move 4 , ua + 4 )  | ( move ua , ul ; move 4 , 4 - ua )  | ( move ua , ul ; move 4 , 4 ; pen 4 )  | ( move ua , ul - ua ; move 3 + ul , 4 )  | ( move ua , ul ; move 3 + ul , 4 - ua )  | ( move ua , ul ; move 2 * 2 , 4 ; pen ua )  | ( v0 = ua ; move v0 , ul ; move 4 , 4 )  | ( move ua , ua + ul ; move 3 + ul , 4 - ua )  | ( move ua , ul ; v0 = 4 ; move v0 , v0 )  | ( move ua , ul ; ( move 4 , 4 ; v0 = ua ) )  | ( move ua , ua + ul ; move 4 , 4 ; pen 4 * 3 )  | ( move ua , ul ; v0 = 2 ; move v0 * v0 , 4 )  | ( v0 = ul ; move ua / v0 , v0 ; move 4 , 4 )  | ( ( move ua , ul ; v0 = 4 ) ; move v0 , v0 )  | ( v0 = 4 ; ( move ua , ul ; move v0 , v0 ) )  | ( move ua , ul ; move 4 , 3 + ul ; v0 = 4 / ua )  
[614] ( move 3 , ul ; move ul , 4 )  | ( move 3 , 3 - 2 ; move ul , 4 )  | ( move 3 , ua + ul ; move ul , 4 )  | ( move 3 , ul ; move ul , 3 + ul )  | ( move 2 + ul , ul ; move ul , 4 )  | ( move 3 , ul ; move ul , 4 - ua )  | ( move 3 , ul ; move ul , 4 ; pen 0 )  | ( move 3 , ul ; move ul , 4 ; pen ul )  | ( move 3 , ul - ua ; move 2 - ul , 4 )  | ( move 2 + ul , ul ; move ul , ua + 4 )  | ( move 3 , ul ; move ul , 4 ; move 0 , ul )  | ( move 3 , ul ; move ul , 4 ; v0 = ul )  | ( move 3 , ua + ul ; move ul , 4 ; pen ua )  | ( move 3 , ul ; v0 = ul ; move v0 , 4 )  | ( ( move 3 , ul ; v0 = ul ) ; move ul , 4 )  | ( move ul , ul ; move 2 , 0 ; move ul , ua + 4 )  | ( move 2 , ul ; move ul , 0 ; move ul , 3 + ul )  | ( move 3 , ul ; v0 = 3 + ul ; move ul , v0 )  | ( move 3 , ua + ul ; v0 = ua + 4 ; move ul , v0 )  | ( move 3 , ul ; v0 = 2 ; move 2 - ul , v0 * v0 )  | ( move 3 , ua + ul ; move ul , 3 + ul ; v0 = ua * ua )  
[615] ( move ul , 3 ; move 4 , ul )  | ( move ul , 3 ; move 4 , 2 - ul )  | ( move ul , ua + 3 ; move 4 , ul )  | ( move ul , 2 + ul ; move 4 , ul )  | ( move ul , 3 ; move 3 + ul , ul )  | ( move ul , 3 ; move 4 , ul - ua )  | ( move ul , 4 - ul ; move 4 , ul )  | ( move ul , 3 ; move 4 , ul ; pen 2 )  | ( move ul , 3 ; pen ul ; move 4 , ul )  | ( pen ul ; move ul , 3 ; move 4 , ul )  | ( move ul , 2 + ul ; move 2 + 2 , ul )  | ( move ul - 2 , ua ; move 4 , 3 + ul )  | ( move ul , 3 - ua ; move 3 + ul , ul )  | ( move ul , 3 ; move 4 , ul ; v0 = ul )  | ( pen ul ; ( move ul , 3 ; move 4 , ul ) )  | ( v0 = ul ; move ul , 3 ; move 4 , v0 )  | ( move ul , 4 - ul ; move 4 , ul ; move 0 , 0 )  | ( move ul , 3 ; move 0 , ua * 4 ; move 4 , ul )  | ( move ul , 3 - ua ; move 4 , ul ; v0 = ul )  | ( move ul , ua + 3 ; ( pen ul ; move 4 , ul ) )  | ( move 0 , ul ; move ul , 2 - ua ; move 2 * 2 , ul )  | ( ( move ul , 3 ; move 4 , ul ) ; pen ul ; v0 = 0 )  | ( ( v0 = 3 ; move ul , v0 ) ; move ul + v0 , ul )  | ( move ul , 3 ; move 3 + ul , ul - ua ; v0 = ua * 4 )  
[616] ( move ua , 4 ; move 4 , ul )  | ( move ua , 2 + 2 ; move 4 , ul )  | ( move ua , 4 - ua ; move 4 , ul )  | ( move ua , 4 ; move 4 , ul - ua )  | ( move ua , ua + 4 ; move 4 , ua + ul )  | ( move ua , 4 ; move ul , ul ; move 3 , 0 )  | ( move 0 , ul ; move ua , 3 ; move 4 , ul )  | ( move ua , 4 ; move 4 , ul ; pen ua + 4 )  | ( move ua , 4 ; move 4 , ul ; pen ua * 3 )  | ( move ua , 4 ; move 3 , ul ; move ul , ua )  | ( move ua , 4 - ua ; pen ul ; move 4 , ul )  | ( v0 = 4 ; move ua , v0 ; move 4 , ul )  | ( v0 = 4 ; move ua , 4 ; move v0 , ul )  | ( v0 = ua ; move v0 , 4 ; move 4 , ul )  | ( move ua , 4 ; ( move 4 , ul ; pen ul - 2 ) )  | ( pen ul ; ( move ua , 4 ; move 4 , ul - ua ) )  | ( move ua , 3 + ul ; move ul , ul ; move 2 + ul , ua )  | ( move ua , 3 + ul ; v0 = ul ; move 3 + ul , v0 )  
[617] ( move ul , 4 ; move ua , 4 )  | ( move ul , 2 * 2 ; move ua , 4 )  | ( move 2 - ul , 4 ; move ua , 4 )  | ( move ul , 4 ; move ua , 3 + ul )  | ( move ul , 4 ; move ua , ua + 4 )  | ( move ul , 4 ; move ua , 4 - ua )  | ( move ul , 4 ; move ua , 4 ; v0 = 0 )  | ( move ul , 4 ; move ua , 4 ; v0 = ul )  | ( move ul , 4 ; move ua , 4 ; pen ua + 2 )  | ( move ul , 4 ; move ua , ua + 4 ; pen ul )  | ( move ul , 4 ; v0 = 4 ; move ua , v0 )  | ( v0 = ul ; move v0 , 4 ; move ua , ua + 4 )  | ( v0 = ua + 4 ; move ul , v0 ; move ua , 4 )  | ( move ul , ua + 4 ; v0 = 4 - ua ; move ua , v0 )  | ( move ul , ua + 4 ; v0 = ua ; move v0 , 4 + v0 )  | ( move ul , 4 - ua ; v0 = ua ; move v0 , v0 + 4 )  | ( move 2 - ul , 3 + ul ; move ua , 4 ; v0 = ua * 2 )  | ( move 0 , 4 ; ( pen ul ; move ul , ua + ua ) ; move ua , 4 )  | ( ( pen ul ; move ul , 4 - ua ) ; pen ul ; move ua , 3 + ul )  
[618] ( move 3 , 4 ; move ul , ul )  | ( move 2 + ul , 4 ; move ul , ul )  | ( move 3 , 4 ; move ul , ua + ul )  | ( move 3 , 3 + ul ; move ul , ul )  | ( move 3 , 4 ; move ul , ul - ua )  | ( move 3 , 4 - ua ; move ul , ul )  | ( move 3 , 4 ; move ul , ul ; pen 0 )  | ( move 3 , 4 - ua ; move 4 - 3 , ul )  | ( move 2 + ul , 4 ; move ul , 2 - ul )  | ( move 3 , 4 ; move 0 , 0 ; move ul , ul )  | ( move 0 , 0 ; move 3 , 4 ; move ul , ul )  | ( move 3 , 4 ; move ul , ul ; v0 = 2 )  | ( move 3 , 4 ; v0 = ul ; move ul , ul )  | ( move 3 , 2 + 2 ; pen ul ; move ul , ul )  | ( move 3 , ua + 4 ; pen ul ; move ul , ul )  | ( move 3 , 4 ; v0 = ul ; move v0 , ul )  | ( move 3 , 4 ; move ul , ul ; v0 = 3 + ul )  | ( move 3 , 4 ; move ul , ua + ul ; v0 = ua )  | ( ( move 3 , 4 ; v0 = ul ) ; move v0 , v0 )  | ( v0 = ul ; ( move 3 , 4 ; move v0 , v0 ) )  | ( move 2 + ul , 4 ; move ul , ul ; v0 = ua + 3 )  | ( ( move 3 , 4 ; move ul , ul ) ; v0 = ul - ua )  | ( ( move 4 - ul , 4 ; move ul , ul ) ; v0 = ua )  | ( ( move 3 , 4 ; move ul , ul - ua ) ; pen ua * 3 )  | ( move 3 , 3 + ul ; move ul , ua + ul ; v0 = ul )  | ( ( v0 = 3 ; move v0 , 4 ; move ul , ul ) ; pen v0 )  | ( ( move 2 + ul , 4 ; v0 = ul ; pen ul ) ; move ul , ul )  
[619] ( move 4 , 3 ; move ul , ul )  | ( move 4 , 3 ; move ul , 2 - ul )  | ( move 4 , 2 + ul ; move ul , ul )  | ( move 4 , 3 ; move ul , ua + ul )  | ( move 4 , 3 - ua ; move ul , ul )  | ( move 4 , 4 - ul ; move ul , ul )  | ( move 4 , 3 ; move ul , ul ; pen ul )  | ( move 3 + ul , 3 - ua ; move ul , ul )  | ( v0 = ul ; move 4 , 3 ; move v0 , ul )  | ( move 4 , 2 + ul ; move ul , ul ; v0 = 3 )  | ( move 4 , 3 ; v0 = 2 + ul ; move ul , ul )  | ( move 0 , ul ; move 4 , ul + ul ; move ul , ul )  | ( ( move 4 , 3 ; v0 = ul ) ; move ul , v0 )  | ( move 4 , ua + 3 ; move ul , ul ; v0 = 4 * 2 )  | ( move 4 , 2 + ul ; move ul , ul - ua ; v0 = 2 )  | ( ( move 4 , 3 - ua ; move ul , ul ) ; v0 = ua )  | ( move 4 , 3 ; v0 = ul ; move v0 * v0 , v0 )  | ( move 4 , 3 ; ( move ul , ul ; pen 4 ; v0 = 2 ) )  | ( move 4 , 3 ; v0 = 2 - ul ; move v0 , v0 - ua )  | ( move 4 , 3 ; ( move ul , ul ; v0 = ul ) ; pen v0 )  | ( move 4 , 3 ; ( v0 = ul ; move v0 , v0 ) ; pen 4 )  | ( move 3 + ul , 4 - ul ; ( move ul , ul ; pen 3 ) ; pen ul )  
[620] ( move 3 , ul ; move 4 , ul )  | ( move 2 + ul , ul ; move 4 , ul )  | ( move 3 , ua + ul ; move 4 , ul )  | ( move 3 , ul ; move 4 , ua + ul )  | ( move 3 , ul ; move 3 + ul , ul )  | ( move 3 , ul ; move 4 , ul ; v0 = 0 )  | ( move 3 , ul ; move 0 , ua ; move 4 , ul )  | ( move 3 , ua + ul ; move 4 , ul ; pen 3 )  | ( move 3 , ul ; move 3 + ul , ul ; pen 4 )  | ( ( move 3 , ul ; move 4 , ul ) ; pen ul )  | ( move 3 , ul ; move 4 , ua + ul ; pen ua )  | ( move 3 , ul ; v0 = 4 ; move v0 , ul )  | ( v0 = ul ; move 3 , ul ; move 4 , v0 )  | ( move 3 , ul ; move 4 , ua + ul ; v0 = 0 )  | ( move 2 + ul , ul ; move 4 , ul ; v0 = 2 )  | ( move 3 , ul ; v0 = ua - ul ; move 4 , ul )  | ( ( v0 = 4 ; move 3 , ul ) ; move v0 , ul )  | ( move 0 , ua - ul ; ( move 3 , 2 ; move 4 , ul ) )  | ( move ul , ul ; ( move 2 , 0 ; move 4 , ul - ua ) )  | ( move 2 + ul , ua + ul ; move 4 , ul ; v0 = ul )  | ( move 3 , ul ; v0 = 3 - 2 ; move 4 , v0 * v0 )  | ( ( move 3 , ul ; pen ul ) ; move 4 , ul ; v0 = ul )  | ( move 3 , ul ; ( move 4 , ul ; pen 4 ; v0 = 0 - ul ) )  
[621] ( move ua , 4 ; move ul , 4 )  | ( move ua , 2 + 2 ; move ul , 4 )  | ( move ua , 4 ; move ul , ua + 4 )  | ( move ua , ua + 4 ; move ul , 4 )  | ( move ua , 4 ; move ul , 4 - ua )  | ( move ua , 4 - ua ; move ul , 2 * 2 )  | ( move ua , 4 ; move 2 - ul , 4 - ua )  | ( move ua , 4 ; move ul , 4 ; move 0 , 2 )  | ( move 0 , 4 ; move ua , ua ; move ul , 4 )  | ( move ua , 4 ; v0 = ul ; move v0 , 4 )  | ( move ua , 4 ; move ul , 3 + ul ; v0 = ua * 4 )  | ( pen 4 ; ( pen ul ; ( move ua , ua + 4 ; move ul , 4 ) ) )  | ( pen 3 + ul ; ( pen ul ; move ua , 4 - ua ) ; move ul , 4 )  
[622] ( move 4 , ul ; move ul , 4 )  | ( move 4 , ul ; move ul , 2 + 2 )  | ( move 2 + 2 , ul ; move ul , 4 )  | ( move 4 , ul ; move ul , ua + 4 )  | ( move 4 , ul ; move ul , 3 + ul )  | ( move 3 + ul , ul ; move ul , 4 )  | ( move 4 , ul ; move ul , 4 - ua )  | ( move 4 , ul - ua ; move ul , 4 )  | ( move 4 , ul ; move ul , 4 ; pen ua )  | ( move 4 , ul ; pen ul ; move ul , 4 )  | ( move 4 , ua + ul ; move ul , 2 + 2 )  | ( move 2 * 2 , ua + ul ; move ul , 4 )  | ( move 4 , ua + ul ; move ul , 3 + ul )  | ( move 4 , ul ; move 0 , ua ; move ul , 4 )  | ( move 4 , ul ; move 0 , ul ; move ul , 3 )  | ( move 4 , ul ; move ul , 4 ; move 0 , ul )  | ( ( pen ul ; move 4 , ul ) ; move ul , 4 )  | ( move 4 , ul - ua ; move ul , 4 ; pen ua )  | ( move 4 , ul ; v0 = 4 ; move ul , v0 )  | ( move 4 , ul ; move 2 - ul , 4 ; v0 = 0 )  | ( v0 = 4 ; move v0 , ul ; move ul , v0 )  | ( v0 = ul - 3 ; move 4 , ul ; move ul , 4 )  | ( move 3 + ul , ul ; ( move ul , 4 ; pen ua ) )  | ( v0 = ul ; move 4 , v0 ; move ul , ua + 4 )  | ( move 3 + ul , ul ; v0 = 4 ; move ul , v0 )  | ( move ul , ua + ul ; move 3 , ua * 2 ; move ul , 4 )  | ( move 4 , ua + ul ; ( pen ul ; move ul , 4 ) ; pen 4 )  | ( ( pen ul ; move 4 , ul ) ; move ul , 4 ; pen ul - ua )  
[623] ( move ul , 4 ; move 4 , ul )  | ( move ul , 2 * 2 ; move 4 , ul )  | ( move ul , 4 ; move 4 , ua + ul )  | ( move ul , 4 ; move 3 + ul , ul )  | ( move ul , 4 ; move 4 , ul - ua )  | ( move ul , 4 ; move 4 , ul ; pen 0 )  | ( move ul , 4 ; move 4 , ul ; pen 3 )  | ( move ul , 4 ; move 4 , ul ; pen ua )  | ( move ul , 3 + ul ; move 4 , ua + ul )  | ( move ul , ua + 4 ; move 3 + ul , ul )  | ( move 0 , ul ; move ul , 3 ; move 4 , ul )  | ( move ul , 4 ; move 4 , ul ; move 0 , ul )  | ( move ul , 4 ; move 4 , ul ; v0 = ul )  | ( move ul , 4 ; move 3 + ul , ul ; pen 0 )  | ( move ul , 4 ; ( move 4 , ul ; pen ul ) )  | ( move ul , ua + 4 ; move 4 , ul ; pen ua )  | ( v0 = 4 ; move ul , 4 ; move v0 , ul )  | ( move ul , 4 ; v0 = ul ; move 4 , v0 )  | ( move ul , 4 ; move 4 , ul ; v0 = ul - 4 )  | ( move ul , 4 ; move 3 + ul , ul ; move 0 , ul )  | ( move ul , 4 ; move 4 , ul ; v0 = ul - ua )  | ( move ul , 4 ; v0 = 2 * 2 ; move v0 , ul )  | ( move ul , 4 ; move 4 , ul - ua ; v0 = 4 - 3 )  | ( move ul , 4 ; move 0 , 0 ; move 3 + ul , ua + ul )  | ( move ul , 4 ; move 4 , ul ; ( move 0 , ul ; pen 4 ) )  | ( v0 = 3 + ul ; ( move ul , v0 ; move v0 , ul ) )  | ( move ul , 3 + ul ; ( move 4 , ua + ul ; v0 = 4 ) )  | ( move ul , 3 + ul ; move 4 , ua + ul ; v0 = ua / 3 )  | ( ( pen ul ; move ul , 4 ) ; move 0 , 0 ; move 4 , ua + ul )  
[624] ( move 4 , 4 ; move ul , ul )  | ( move 4 , 4 ; move ul , 3 - 2 )  | ( move 3 + ul , 4 ; move ul , ul )  | ( move 4 , 3 + ul ; move ul , ul )  | ( move 4 , 4 ; move ul , ua + ul )  | ( move 4 , 4 - ua ; move ul , ul )  | ( move 4 , 4 ; move ul , ul ; pen 0 )  | ( pen ul ; move 4 , 4 ; move ul , ul )  | ( move 4 , 4 ; move 3 - 2 , ua + ul )  | ( move 4 , 3 + ul ; move 2 - ul , ul )  | ( move 4 , ua + 4 ; move ul , ua + ul )  | ( move 4 , 4 ; move ul , 2 - ul ; pen 0 )  | ( move 4 , 4 ; move ul , ul ; v0 = ua )  | ( move 4 , 4 ; move ul , ul ; v0 = ul )  | ( move 4 , 2 + 2 ; move ul , ul ; pen ul )  | ( move 4 , 4 ; move ul , ul ; pen ua + ul )  | ( v0 = ul ; move 4 , 4 ; move v0 , ul )  | ( move 4 , 4 ; v0 = ul ; move ul , v0 )  | ( move 4 , 4 ; move 0 , 0 ; move 2 - ul , ul )  | ( move 4 , 4 ; v0 = ul ; move v0 , v0 )  | ( move 4 , 4 ; ( move ul , ul ; pen 0 - 4 ) )  | ( v0 = 4 ; move v0 , v0 ; move ul , ul )  | ( move 4 , ua + 4 ; move ul , ul ; v0 = 2 )  | ( move 4 , 3 + ul ; move ul , ul ; move 0 , ul )  | ( pen ul ; move 4 , 3 + ul ; move 2 - ul , ul )  | ( move 4 , 3 + ul ; v0 = ul ; move v0 , ul )  | ( ( move 4 , 4 ; v0 = ul ) ; move v0 , v0 )  | ( ( move 3 + ul , 4 ; move ul , ul ) ; move 0 , ul )  | ( ( v0 = ul ; move 4 * v0 , 4 ) ; move v0 , ul )  | ( v0 = 3 + ul ; ( move v0 , v0 ; move ul , ul ) )  | ( ( move 4 , 2 * 2 ; move ul , ul ) ; v0 = ul + ul )  | ( ( v0 = ul ; move 4 , v0 * 4 ) ; move v0 , v0 )  
[625] ( move 4 , ul ; move 4 , ul )  | ( move 2 * 2 , ul ; move 4 , ul )  | ( move 3 + ul , ul ; move 4 , ul )  | ( move 4 , ul ; move 3 + ul , ul )  | ( move 4 , ul ; move 4 , ua + ul )  | ( move 4 , ul ; move 4 , ul ; pen 0 )  | ( move 4 , ul ; move 4 , ul ; pen 2 )  | ( move 4 , ul ; move 4 , ul ; pen 3 )  | ( move 4 , ul ; move 3 , ul ; move ul , 0 )  | ( ( move 4 , ul ; move 4 , ul ) ; pen ul )  | ( pen ul ; move 4 , ua + ul ; move 4 , ul )  | ( move 4 , ul ; v0 = ul ; move 4 , v0 )  | ( move 3 + ul , ul - ua ; move 3 + ul , ul )  | ( ( move 0 , ul ; move 4 , 0 ) ; move 4 , ul )  | ( move 4 , ul ; move 4 , ul ; v0 = 4 / 3 )  | ( v0 = 4 ; move v0 , ul ; move v0 , ul )  | ( move 4 , ul ; move 3 , ul ; move 2 - ul , 0 )  | ( move 4 , ul ; move 3 + ul , ul ; v0 = 2 )  | ( move 4 , ul ; ( move 4 , ua + ul ; pen 0 ) )  | ( move 4 , ul ; move 3 + ul , ul ; move 0 , ul )  | ( move 4 , ul ; move 4 , ul - ua ; v0 = ua )  | ( move 3 + ul , ul ; move 4 , ul ; v0 = ul )  | ( move 3 + ul , ul ; move 4 , ul ; pen ua * 3 )  | ( v0 = 4 ; move 4 , ua + ul ; move v0 , ul )  | ( move 4 , ul ; move ul , 4 - 3 ; move 2 + ul , ua )  | ( move 0 , ul ; move 4 , ua + ua ; move 3 + ul , ul )  | ( v0 = ua + ul ; move 4 , v0 + ua ; move 4 , ul )  | ( ( move 4 , ul ; move 3 + ul , ul ) ; move ul , v0 )  | ( move 3 + ul , ul ; ( move 4 , ul ; v0 = 3 + 2 ) )  | ( v0 = ul ; move v0 * 4 , v0 ; move 4 / v0 , ul )  | ( pen ul ; ( move 4 , ul ; pen 2 - ul ; move 3 + ul , ul ) )  
[626] ( move ul , ul ; move 4 , 4 )  | ( move ul , ul ; move 4 , 2 + 2 )  | ( move ul , ul ; move 4 , ua + 4 )  | ( move ul , ua + ul ; move 4 , 4 )  | ( move ul , ul ; move 3 + ul , 4 )  | ( move ul , ul ; move 4 , 3 + ul )  | ( move ul , ul ; move 4 , 4 ; pen 0 )  | ( pen ul ; move ul , ul ; move 4 , 4 )  | ( move ul , ul ; pen ul ; move 4 , 4 )  | ( move 4 - 3 , ul ; move 3 + ul , 4 )  | ( move ul , ua + ul ; move 2 * 2 , 4 )  | ( move ul , ul - ua ; move 3 + ul , 4 )  | ( move ul , ul - ua ; move 4 , 4 - ua )  | ( move ul , ul ; move 4 , 4 ; v0 = 4 )  | ( pen ul ; ( move ul , ul ; move 4 , 4 ) )  | ( move ul , ul ; v0 = 4 ; move v0 , 4 )  | ( v0 = ul ; move v0 , ul ; move 4 , 4 )  | ( v0 = 4 ; move ul , ul ; move v0 , 4 )  | ( move ul , ua + ul ; move 0 , 0 ; move 4 , 4 )  | ( v0 = 4 ; move ul , ul ; move v0 , v0 )  | ( move ul , ul ; v0 = 4 ; move v0 , v0 )  | ( move ul , ul - ua ; move ul , 4 ; move 3 , ua )  | ( v0 = 0 ; move ul , ul + v0 ; move 4 , 4 )  | ( move ul , ul ; v0 = ua ; move 4 , v0 + 4 )  | ( move ul , ul ; v0 = 2 * 2 ; move v0 , v0 )  | ( pen ul ; ( move ul , ul ; pen ul ) ; move 4 , 4 )  | ( move ul , ul ; ( v0 = 4 ; move v0 , v0 ) )  | ( move ul , ua + ul ; move 2 * 2 , 4 ; pen ul - ua )  | ( ( move ul , ul ; v0 = 0 ) ; move 4 + v0 , 4 )  | ( ( move ul , ul ; v0 = 3 + ul ) ; move v0 , v0 )  | ( move ul , ul - ua ; ( v0 = 4 ; move v0 , v0 ) )  | ( move ul , ul ; v0 = 2 ; move 2 * v0 , v0 + v0 )  
[627] ( pen 2 ; move ua , 0 - ul )  | ( pen 2 ; move ua , ul - 2 )  | ( pen 2 ; move ua , ua - ul )  | ( pen 2 ; move 0 - ua , 0 - ul )  | ( pen 3 - ul ; move ua , 0 - ul )  | ( pen ul + ul ; move ua , 0 - ul )  | ( pen ul + ul ; move ua , ua - ul )  | ( pen 2 ; move ua , ua - ul ; pen 3 )  | ( pen ul ; pen 2 ; move ua , ua - ul )  | ( pen 2 ; move ua , ua - ul ; move 0 , 0 )  | ( pen 3 ; pen ua / 3 ; move ua , ua - ul )  | ( pen ul + ul ; move ua , ua - ul ; v0 = ua )  | ( pen 3 - ul ; v0 = ua - ul ; move ua , v0 )  | ( v0 = ul - 2 ; pen 2 ; move ua / v0 , v0 )  | ( pen 0 ; pen 3 - ul ; ( move ua , 0 - ul ; v0 = ua ) )  
[628] ( pen ua ; move ua , 0 - 3 )  | ( pen 4 ; move ua , ul - 4 )  | ( pen ua ; move ua , ua - 3 )  | ( pen ua ; move ua , ul - 4 )  | ( pen 4 ; move ua , ul / ua )  | ( pen ua ; move ua , ul / ua )  | ( pen ua + 4 ; move ua , 0 - 3 )  | ( pen 3 + 2 ; move ua , ul / ua )  | ( pen 3 * 3 ; move ua , ul / ua )  | ( pen ua + ul ; move ua , ul / ua )  | ( pen ua - ul ; move ua , ul / ua )  | ( pen 0 ; pen ua ; move ua , ul / ua )  | ( pen 4 ; move ua , ua - 3 ; move 0 , ul )  | ( pen ul ; pen 3 + 3 ; move ua , ua - 3 )  | ( pen ua ; move 0 , ua ; move ua , ul / ua )  | ( pen ua ; move ua , ul / ua ; pen 2 - ul )  | ( pen ua ; ( move ua , ul / ua ; pen ul ) )  | ( pen ua ; v0 = ua ; move v0 , ul / ua )  | ( pen ua + 4 ; move ua , ua - 3 ; v0 = ul )  | ( pen ua ; ( move ua , ua - 3 ; v0 = ul ) )  | ( move ul , ul ; pen ua + ul ; move ua , 0 - 4 )  | ( pen ua ; move ua , ul / ua ; v0 = ua * 2 )  | ( pen ua ; move ul / ua , ua ; move ua , ul - 4 )  | ( ( v0 = ua ; pen v0 ) ; move ua , v0 - 3 )  | ( pen ul ; ( pen ua ; move ua , ul - 4 ) ; pen ul )  | ( pen ua * 4 ; move ua , ul - 4 ; v0 = 0 - ua )  | ( v0 = ua ; pen ua * v0 ; move v0 , v0 - 3 )  | ( pen 0 ; ( pen ua ; move ua , ul / ua ; pen ua + ul ) )  | ( move 2 - ul , ua + ua ; pen ua + ul ; move ua , 0 - 3 )  | ( ( pen ua ; move ua , ul / ua ) ; v0 = ul ; v1 = ul )  | ( pen ul ; ( ( pen ua * 4 ; pen ua ) ; move ua , ul / ua ) )  
[629] ( pen 4 ; move ua + ul , 0 )  | ( pen ua ; move 4 + 3 , ua )  | ( pen 4 ; move ua + ul , ua )  | ( pen ua ; move ua + ul , ua )  | ( pen 4 + ul ; move 4 + 4 , 0 )  | ( pen ua - 2 ; move ua + ul , 0 )  | ( pen 3 + ul ; move ua + ul , 0 )  | ( pen 2 * 2 ; move ua + ul , ua )  | ( pen 4 ; move ua + ul , ua * 2 )  | ( pen 2 ; pen 4 ; move ua + ul , 0 )  | ( pen 0 ; pen 4 ; move ua + ul , ua )  | ( pen 4 ; move ua , ua / 2 ; move ul , 0 )  | ( pen 2 + 2 ; move ul , ua ; move ua , ua )  | ( pen 4 ; move ul , ua ; move ua , ua * 3 )  | ( pen 4 ; move ua , ua ; move ul , ua * 3 )  | ( pen 4 ; move ua + ul , ua ; v0 = ua )  | ( pen 4 ; v0 = ua + ul ; move v0 , ua )  | ( ( pen 3 + ul ; move ua , 0 ) ; move ul , 0 )  | ( pen 4 - 2 ; ( pen 4 ; move ua + ul , ua ) )  | ( pen 4 ; move ua + ul , ua + ua ; v0 = 0 )  | ( pen 2 * 2 ; move ua + ul , ua * 4 ; pen ul )  | ( pen 4 ; v0 = ul ; move ua + ul , v0 - ul )  | ( ( pen ua - 2 ; move ua + ul , 0 ) ; pen ua * 2 )  | ( ( v0 = 0 ; pen 3 + ul ) ; move ua + ul , v0 )  | ( pen 2 ; pen 2 - ul ; ( pen 4 ; move ua + ul , 0 ) )  | ( ( pen 2 + 2 ; move ua , ua ; move ul , 0 ) ; v0 = 2 )  | ( ( pen 3 + ul ; move ua + ul , ua ; pen 0 ) ; v0 = ua )  
[630] ( pen 2 ; move ua + 2 , ul )  | ( pen 2 ; move 2 , ul ; move ua , ua )  | ( pen 2 ; move ua , ul ; move 2 , ua )  | ( pen ul ; pen 2 ; move ua + 2 , ul )  | ( pen 2 ; move ua + 2 , ul ; move 0 , ua )  | ( pen ul / ua ; pen 2 ; move 4 * 2 , ul )  | ( pen ua ; pen ua / 3 ; move 4 * 2 , ul )  | ( pen 2 ; v0 = ua + 2 ; move v0 , ul )  | ( pen 2 ; ( move ua , ul ; move 2 , 0 ; pen 2 ) )  | ( ( v0 = 2 ; pen v0 ) ; move ua + v0 , ul )  | ( pen 2 ; ( move 2 , ul ; v0 = ul ) ; move ua , 0 )  | ( ( v0 = 2 ; pen v0 ) ; move ua + v0 , 2 / v0 )  | ( pen 2 ; ( move ua , ua + ul ; move 2 , ua ; move 0 , 3 ) )  
[631] ( pen ua ; move ua + 2 , 3 )  | ( pen ua + 4 ; move ua + 2 , 3 )  | ( pen ua ; move 4 * 2 , 2 + ul )  | ( pen ua ; move ua + ul , 2 + ul )  | ( pen ua ; move 3 + 3 , 3 ; move 2 , ua )  | ( pen ua + 3 ; move ua , 3 ; move 2 , ua )  | ( pen ua ; move 2 , 3 ; move ua , ua * 3 )  | ( pen 0 ; pen ua ; move ua + 2 , 3 - ua )  | ( pen ua ; move ua + ul , ua + 3 ; pen 4 )  | ( v0 = ua + ul ; pen ua ; move v0 , 3 )  | ( pen ua ; move 3 - ul , 3 ; move 4 + 3 , 0 )  | ( pen ua + 4 ; move 4 + 4 , 3 ; v0 = ua )  | ( pen ua * 2 ; move 4 , 3 ; move 3 + ul , ua )  | ( pen 4 + ul ; move ua + 2 , 3 ; v0 = ul )  | ( v0 = 3 ; pen ua ; move v0 * v0 , v0 )  | ( pen ua ; ( v0 = ul / 3 ; move ua + 2 , 3 ) )  | ( pen ua ; move ua + 2 , ua + 3 ; v0 = ua - 2 )  
[632] ( pen 2 ; move ua + ul , 2 )  | ( pen 4 - 2 ; move ua + ul , 2 )  | ( pen 2 ; move ua + ul , 3 - ul )  | ( pen 2 ; move ua + ul , ul + ul )  | ( pen 0 ; pen 2 ; move ua + ul , 2 )  | ( pen 2 ; ( move ua , 2 ; move ul , 0 ) )  | ( pen ul ; pen 2 ; move ua + ul , ul + ul )  | ( pen 2 ; move ua + ul , ua + 2 ; v0 = 4 )  | ( pen 2 ; ( move ua + ul , ul + ul ; pen ua ) )  | ( pen 2 ; v0 = ua + ul ; move v0 , v0 + ul )  | ( ( v0 = ua + ul ; pen 2 ) ; move v0 , v0 * 2 )  | ( ( pen 2 ; v0 = ua + ul ) ; move v0 , v0 + v0 )  
[633] ( pen 3 ; move ua , 0 - ul )  | ( pen 3 ; move ua , ua / 3 )  | ( pen 3 ; move ua , ua - ul )  | ( pen 2 + ul ; move ua , ua / 3 )  | ( pen 3 ; move ua , 0 - ul ; pen 4 )  | ( pen 3 ; move ua , ul - 2 ; v0 = 4 )  | ( move ul - 2 , ul - 2 ; pen 3 ; move ua , 0 )  | ( pen 3 ; v0 = ul / 3 ; move ua , v0 * ua )  | ( ( pen 3 ; move ua , 0 - ul ) ; move 0 , ul - ua )  
[634] ( pen ua ; move ua + 2 , 4 )  | ( pen ua ; move ua + 3 , 4 )  | ( pen ua ; move ua + 4 , 4 )  | ( pen ua ; move ua + 4 , 2 + 2 )  | ( pen ua * 2 ; move ua + 2 , 4 )  | ( pen ua * 3 ; move ua + 2 , 4 )  | ( pen ua ; move ua , 4 ; move 4 , 0 )  | ( pen ua ; move ua + ul , 4 ; move 4 , ua )  | ( pen ua ; ( move ua + 2 , 4 ; pen ul / ua ) )  | ( ( pen ua + 2 ; move ul , ul ) ; move ua + 2 , 3 )  | ( ( pen ua ; move 2 - ua , 4 ) ; move 2 - ua , ua )  | ( pen 4 ; ( pen ua ; move 0 , 4 ) ; move 4 + 4 , ua )  
[635] ( pen 4 ; move ua , 0 - ul )  | ( pen ua ; move ua , 3 - 4 )  | ( pen ua ; move ua , ul - 2 )  | ( pen 4 ; move ua , ua - ul )  | ( pen ua ; move ua , ua - ul )  | ( pen ua * 3 ; move ua , 0 - ul )  | ( pen ua - ul ; move ua , 2 - 3 )  | ( pen 4 + ul ; move ua , ul - 2 )  | ( pen 4 * 3 ; move ua , ua - ul )  | ( pen ua + ul ; move ua , ul - 2 )  | ( pen ua * ua ; move ua , ua - ul )  | ( pen ua ; move ua , 0 - ul ; pen ua )  | ( pen ul ; pen ua ; move ua , ua - ul )  | ( pen ua - ul ; move ua , 2 - 3 ; pen 0 )  | ( pen ua ; move ua , 0 - ul ; move 0 , ua )  | ( pen ua ; move 0 , ul ; move ua , ua - 2 )  | ( pen ua ; move ua , ul - 2 ; move 0 , ul )  | ( pen ua ; move 0 , ul / ua ; move ua , 2 )  | ( pen ua ; move ua , ua - ul ; v0 = ul )  | ( pen ua ; v0 = ua ; move ua , v0 - ul )  | ( move ul , 0 ; pen ua ; move 0 - ua , 0 - ul )  | ( move 0 , ua * 2 ; pen ua ; move ua , ul - 2 )  | ( pen ua * 4 ; move 0 , ul ; move ua , ul - 3 )  | ( pen 4 + 3 ; v0 = ul - 2 ; move ua , v0 )  | ( ( pen ua ; move ua , 0 - ul ) ; pen 0 ; pen ua )  | ( pen 3 ; ( pen ua ; move ua , ua - ul ) ; pen ua )  | ( pen 4 + ul ; move ua , ul - 2 ; move 0 , ul - 4 )  | ( v0 = ua - ul ; ( pen v0 ; move ua , v0 ) )  | ( v0 = ua ; pen v0 + v0 ; move v0 , v0 - ul )  | ( pen 2 ; ( pen ul / ua ; pen 4 ) ; move ua , ua - ul )  | ( ( pen ul ; pen ua - ul ) ; move ua , ul - 2 ; v0 = ul )  | ( pen ua ; move ua , ua - ul ; ( move ul , 3 ; pen ul / ua ) )  | ( pen ua - ul ; ( ( pen ul ; pen ua ) ; move ua , ua - ul ) )  
[636] ( pen ua ; move 4 , 0 - ul )  | ( pen ua ; move 4 , ua - ul )  | ( pen 4 * 2 ; move 4 , ul - 2 )  | ( pen ua + 4 ; move 4 , 0 - ul )  | ( pen ua ; move 2 - ua , 0 - ul )  | ( pen ua ; move 3 + ul , ul - 2 )  | ( pen ua * 4 ; move 4 , ua - ul )  | ( pen ua + ua ; move 4 , ua - ul )  | ( pen ua ; move 3 + ul , ua - ul )  | ( pen ua + ul ; move 4 , ua - ul )  | ( pen 4 + ul ; move 3 + ul , 0 - ul )  | ( pen ul ; pen 3 * 2 ; move 4 , 2 - 3 )  | ( pen ua ; pen ua + ua ; move 4 , ua - ul )  | ( pen ua + 3 ; move ul , ua - ul ; move 3 , 0 )  | ( pen 4 + ul ; move 4 , ua - ul ; v0 = ua )  | ( v0 = 0 ; pen ua ; move 4 + v0 , v0 - ul )  
[637] ( pen ua ; move 3 + 2 , ul )  | ( pen 4 ; move 4 + ul , ul )  | ( pen ua ; move 4 + ul , ul )  | ( pen ua + 2 ; move 4 + ul , ul )  | ( pen ua + ua ; move 4 + ul , ul )  | ( pen ua ; move ul , ul ; move 4 , 0 )  | ( pen ua ; move 3 + 2 , ul ; pen ua )  | ( pen ul ; pen ua ; move 4 + ul , ul )  | ( pen ua * ua ; move 3 + 2 , ul ; pen 2 )  | ( pen ua * 2 ; move 4 , ul ; move ul , ua )  | ( ( pen ua ; move 4 , ul ) ; move ul , ua )  | ( pen ua ; move 4 + ul , ul ; pen 0 - ul )  | ( pen ua - 3 ; pen ua ; move 4 + ul , ul )  | ( pen ua + ul ; move 4 , ul ; move ul , ua )  | ( v0 = 4 + ul ; pen v0 ; move v0 , ul )  | ( pen ua * 3 ; move 4 + ul , ul ; move 0 , 2 )  | ( pen 2 + ul ; pen 2 * 2 ; move 4 + ul , ul )  | ( ( pen ua ; move 3 + ul , ul ) ; move ul , 0 )  | ( pen ua + ul ; move 4 + ul , ul ; v0 = 4 )  | ( pen 2 ; ( pen ua + ul ; move ul - ua , ul ) )  | ( pen ua ; ( v0 = 4 + ul ; move v0 , ul ) )  | ( ( pen ua ; v0 = ul ) ; move 4 + ul , v0 )  | ( pen ua ; move 3 + 2 , ul ; ( pen ul ; pen ul ) )  | ( v0 = 4 + ul ; ( pen v0 ; move v0 , ul ) )  | ( ( pen ul ; pen ul ) ; pen ua ; move 4 + ul , ul )  | ( v0 = 4 + ul ; pen ul + v0 ; move v0 , ul )  | ( ( pen ua ; v0 = ul - ua ) ; move v0 , v0 )  | ( pen ua + ua ; move 4 + ul , ul ; v0 = 3 - 2 )  | ( pen ua ; move 3 , ul ; ( move 2 , 0 ; v0 = ul ) )  | ( pen 0 ; ( pen 4 ; v0 = ul ) ; move ua - v0 , ul )  | ( ( pen 4 + ul ; move 4 + ul , ul ; pen 4 ) ; v0 = 4 )  
[638] ( pen 2 ; move ua + 3 , ul )  | ( pen 2 ; move ua + 3 , ua + ul )  | ( pen ua - 4 ; move ua + 3 , ul )  | ( pen ul + ul ; move ua + 3 , 2 - ul )  | ( pen 2 ; move ua + 4 , ul ; move ul , 3 )  | ( pen 2 ; move ua + 3 , ul ; v0 = ul )  | ( pen 2 - ul ; pen 2 ; move ua + 3 , ul )  | ( ( pen 2 ; move ua + 3 , ul ) ; v0 = 3 )  | ( ( pen 0 - 2 ; pen 2 ; move ua + 3 , ul ) ; pen 3 + ul )  
[639] ( pen 2 ; move ua + 4 , ul )  | ( pen 2 ; move ua + 4 , ua + ul )  | ( pen 2 ; v0 = 4 ; move v0 + ua , ul )  | ( pen ua / 3 ; move ua + 4 , ul ; move ua / 3 , 4 - ul )  | ( pen 2 ; ( ( move 3 , ul ; move ua + ul , 0 ) ; pen ul ) )  | ( pen 2 ; ( ( move ua , ul ; move 4 , ua + ua ) ; pen ua ) )  
[640] ( pen ua ; move ua , 4 + 3 )  | ( pen 4 + ul ; move ua , 4 + 3 )  | ( pen ua ; move ul , 4 ; move ua , 3 )  | ( move 2 / 4 , 3 ; pen 4 ; move ua , 4 )  | ( pen ua ; move 0 , 2 ; move ua , 4 + ul )  | ( pen ua ; move ul , 2 * 2 ; move ua , 3 )  | ( move ul + ul , 4 ; pen ua ; move ua , 3 )  | ( pen 3 * 2 ; ( move ua , 4 + 3 ; pen 4 ) )  | ( pen ua ; move ua , 4 + 3 ; move 0 , 4 + ul )  | ( pen ua * ua ; move 0 , ul ; move ua , 4 + 2 )  | ( v0 = 0 ; ( move v0 , 4 ; pen ua ) ; move ua , 3 )  | ( ( pen 3 + 2 ; pen ua + ul ; move ua , 4 + 3 ) ; pen ul )  
[641] ( pen 2 ; move ua , ua - 4 )  | ( pen ua / 3 ; move ua , ua - 4 )  | ( pen 2 ; move ua , 0 - 4 ; move ul , 3 )  | ( pen ul + ul ; v0 = 0 ; move v0 + ua , ua - 4 )  
[642] ( pen 3 ; move ua + ul , 3 )  | ( pen 4 ; move ua + ul , 3 )  | ( pen 3 ; move ua + ul , 3 - ua )  | ( pen 4 - ul ; move ua + ul , 3 )  | ( pen 3 ; move ua , 3 ; move ul , ua )  | ( pen 3 ; ( move ua , 3 ; move ul , 0 ) )  | ( pen 3 ; move ul , 0 ; move ua + ul , 3 )  | ( pen 3 ; ( move ua + ul , 3 ; pen ul ) )  | ( v0 = 3 ; pen v0 ; move v0 + 4 , v0 )  | ( pen ua / 2 ; v0 = ua ; move v0 + ul , 3 )  | ( pen 3 + ul ; move ua + 2 , 3 - ua ; v0 = 2 )  
[643] ( pen 2 ; move ua , 4 + ul )  | ( pen 3 - ul ; move ua , 4 + ul )  | ( pen 2 ; move 0 , 4 ; move ua , ul )  | ( pen 2 ; ( move 0 , ul ; move ua , 4 ) )  | ( move ul / 3 , 2 + ul ; pen 2 ; move ua , 2 )  | ( move ul , 3 ; pen 4 / 2 ; move ua , 3 - ul )  | ( ( pen 3 - ul ; move ua , 4 + ul ) ; pen 3 )  | ( ( move 2 / ua , 2 ; pen ul + ul ) ; move ua , 3 )  
[644] ( pen 2 ; move ua , 2 / ua )  | ( pen 2 ; move ua , ul / 3 ; v0 = 2 )  | ( pen 2 ; move ua , ul / 3 ; pen 2 + 2 )  | ( pen 2 ; v0 = ua ; move v0 , 2 / v0 )  
[645] ( pen ua ; move 4 , ua - 3 )  | ( pen ua ; move 4 , ul - 4 )  | ( pen ua ; move 2 * 2 , ua - 3 )  | ( pen 4 ; pen 4 ; move 4 , ul / ua )  | ( pen ua + 3 ; move 3 + ul , ul - 4 )  | ( pen 4 * 2 ; move 3 + ul , ul / ua )  | ( pen ua ; pen ua ; move 3 + ul , ul - 4 )  | ( pen ua * ua ; move 4 , ul / ua ; v0 = 3 )  | ( v0 = 2 ; pen v0 * 3 ; move 4 , ul / ua )  | ( v0 = 4 ; pen v0 + v0 ; move v0 , ul - v0 )  | ( v0 = ua + ul ; ( pen v0 ; move 4 , ul / v0 ) )  | ( ( pen 3 - ua ; pen 0 ) ; pen ua * ua ; move 4 , 0 - 3 )  
[646] ( pen 3 ; move ua , 2 / ua )  | ( pen 3 ; v0 = ul / ua ; move ua , v0 + v0 )  
[647] ( pen 3 ; move ua , ua - 4 )  | ( pen ul ; pen 3 ; move 0 - ua , ua - 4 )  
[648] ( pen 2 ; move ua , ul / 2 )  | ( pen 3 - ul ; move ua , 3 / ua )  
[649] ( pen ua ; move ua , 4 + 4 )  | ( pen ua ; move ua , 4 * 2 )  | ( pen ua + 4 ; move ua , 4 + 4 )  | ( pen ua + ul ; move ua , 4 + 4 )  | ( pen ua ; move ua , 4 * 2 ; pen ua )  | ( pen ua - 2 ; move 3 , 4 * 2 ; move 3 , 0 )  | ( move ul , 4 + ul ; pen ua * 4 ; move ua , 3 )  | ( move 3 , 4 + ul ; ( pen 4 + 4 ; move ua , 3 ) )  | ( pen 4 ; v0 = 3 + ul ; move ua , v0 + v0 )  | ( pen 3 * 2 ; move ul / ua , 4 + ul ; move ua , 3 )  
[650] ( pen 2 ; move 4 + ul , ul )  | ( pen 2 ; move ul - ua , ul )  | ( pen 2 ; move 3 + 2 , ua + ul )  | ( pen ul + ul ; move 4 + ul , ul )  | ( pen ul + ul ; move ua - ul , ul )  | ( pen 2 ; move ul , ul ; move 4 , 0 )  | ( pen 2 ; move ul , ul ; move 4 , ua )  | ( pen ul + ul ; move 4 + ul , ua + ul )  | ( pen ul / 2 ; pen 2 ; move 4 + ul , ul )  | ( pen ul + ul ; move 4 + ul , ul ; pen ul )  | ( ( v0 = 3 + 2 ; pen 2 ) ; move v0 , ul )  | ( ( pen ul + ul ; move 4 , ul ) ; move ul , ua )  | ( ( v0 = 3 - ul ; pen v0 ) ; move v0 + 3 , ul )  | ( ( pen ua ; pen 2 ; move ul , ul ) ; move ul - ua , ua )  | ( pen ul - 3 ; ( pen 3 - ul ; move 4 + ul , ul - ua ) )  | ( pen 2 ; ( move 4 + ul , ul ; pen 0 ; v0 = 4 - ul ) )  
[651] ( pen 2 ; move ua , ul - 4 )  | ( pen 2 ; move ua , ul / ua )  | ( pen ul + ul ; move ua , ul - 4 )  | ( pen ul + ul ; move ua , ul / ua )  | ( ( pen 2 ; move ua , ua - 3 ) ; pen ul )  
[652] ( pen ua ; move 4 + 3 , ul )  | ( pen ua ; move ua + ul , ul )  | ( pen ua + ul ; move 4 + 3 , ul )  | ( pen 4 + 3 ; move ua + ul , ul )  | ( pen 4 * 4 ; move ua + ul , ul )  | ( pen ua + 3 ; move ua + ul , ul )  | ( pen ua + ua ; move ua + ul , ul )  | ( pen ua + ul ; move ua + ul , ul )  | ( pen ua ; move 3 , ul ; move 4 , ua )  | ( pen ua ; move ul , ul ; move ua , ua )  | ( pen ua ; move ua + ul , ul ; pen 4 + 2 )  | ( move ul , ul ; pen ua ; move ua + ul , 0 )  | ( pen 4 + ul ; move ul , ul ; move ua , ua )  | ( pen ua + ua ; move ua + ul , ul ; pen 0 )  | ( pen ul - 2 ; pen ua ; move ua + ul , ul )  | ( pen ua + ul ; move ul , ul ; move ua , ua )  | ( v0 = ua ; pen v0 ; move ua + ul , ul )  | ( v0 = ua + ul ; pen v0 ; move v0 , ul )  | ( ( pen ua * 3 ; move ua , ul ) ; move ul , 0 )  | ( pen ua ; move ua + ul , ul - ua ; v0 = 3 )  | ( pen ua ; move 4 / ua , ua + ul ; move ua , ua )  | ( pen 4 + 2 ; v0 = ul ; move v0 + ua , ul )  | ( pen ua + ul ; v0 = ua + ul ; move v0 , ul )  | ( pen ua ; v0 = ua + ul ; move v0 , ua + v0 )  | ( ( pen ua ; move ua + ul , ul ) ; v0 = 3 / ua )  | ( pen ua + ua ; move ua + ul , ul ; v0 = 2 + ul )  | ( pen ua + 3 ; ( move ul , ul - ua ; move ua , ua ) )  | ( v0 = ua + ul ; ( pen v0 ; move v0 , v0 ) )  | ( pen ul ; pen ua ; ( move 3 + ul , ul ; move 3 , ua ) )  | ( pen ul ; ( pen ua ; move ua + ul , ul ) ; move 0 , ul )  | ( pen ua ; ( v0 = ul ; move ua , ul ) ; move v0 , 0 )  | ( v0 = ua + ul ; pen ua ; ( pen ua ; move v0 , v0 ) )  
[653] ( pen 4 ; move ua , 4 + ul )  | ( move 0 , 2 ; pen 4 ; move ua , 3 )  | ( pen 4 ; move 0 , 3 + 2 ; move ua , ua )  | ( ( pen ua ; move 0 , 3 ) ; move ua , 2 )  | ( pen 4 ; move ua , 3 + 2 ; v0 = ul )  | ( pen ua ; move 3 * 2 , 3 + 2 ; pen ul )  | ( ( pen ul ; pen ua ) ; move ua , 4 + ul )  | ( move 3 , 3 + 2 ; pen 4 ; move 0 - ua , ua )  | ( pen 3 + ul ; move ua , 4 + ul ; pen ul / 4 )  | ( pen ua * 4 ; ( move 0 , ul ; move ua , 2 + 2 ) )  | ( ( v0 = 4 ; pen v0 ) ; move 0 , ul ; move ua , v0 )  
[654] ( pen ua ; move 4 * 2 , ul )  | ( pen ua ; move 4 + 4 , ul )  | ( pen ua ; move ua + 2 , ul )  | ( pen 4 + 2 ; move ua + 2 , ul )  | ( pen ua ; move 4 * 2 , 2 - ul )  | ( pen ua - ul ; move 4 * 2 , ul )  | ( pen ua ; move ua + 2 , ua + ul )  | ( pen ua ; move ua + 2 , ul - ua )  | ( pen ua + ul ; move ua + 2 , ul )  | ( pen ua ; move 4 , ul ; move 4 , ua )  | ( pen ua ; move ua + 2 , ul ; pen 0 )  | ( pen ua ; move ua , ul ; move 2 , ua )  | ( pen ua ; v0 = 3 ; move ua + 2 , ul )  | ( pen ua ; move ua - ul , ul ; move 3 , 0 )  | ( pen ua ; move 3 - ul , ul ; move ua , ua )  | ( pen ua ; move ul , ul ; move ua + ul , ua )  | ( pen ua + 3 ; move 4 * 2 , ul ; move 0 , 4 )  | ( v0 = ua + 2 ; pen v0 ; move v0 , ul )  | ( move 0 , 0 ; pen ua + ul ; move ua + 2 , ul )  | ( pen ua ; move ua + 2 , ua + ul ; v0 = 2 )  | ( pen ua * ua ; ( move ua + 2 , ul ; pen 3 ) )  | ( pen ua + 3 ; move 3 , ul ; move ua - ul , ua )  | ( pen ua ; ( move ua , ua + ul ; move 2 , ua ) )  | ( v0 = ua + 2 ; ( pen v0 ; move v0 , ul ) )  | ( pen ua * 3 ; move 4 + 4 , ul ; move ul , ul + ul )  | ( pen ua ; ( move ua - 4 , ul ; move ua , ua * 4 ) )  | ( pen 4 + ul ; move ua - 4 , ua + ul ; move ua , ua )  | ( pen ua + 4 ; ( move 4 * 2 , ul ; pen 3 ; pen 3 ) )  | ( ( pen ua - ul ; v0 = 2 ) ; move v0 + ua , ul )  | ( v0 = 4 * 2 ; pen 4 + v0 ; move v0 , 2 - ul )  | ( ( v0 = 4 ; pen ua ) ; move v0 , ul ; move v0 , ua )  | ( v0 = ua + 2 ; pen v0 ; ( pen ua ; move v0 , ul ) )  
[655] ( pen 3 ; move 4 + ul , ul )  | ( pen 2 + ul ; move 3 + 2 , ul )  | ( pen 3 ; move 3 + 2 , ua + ul )  | ( pen 3 ; move 4 + ul , ul - ua )  | ( pen 3 ; move 2 , ul ; move 3 , 0 )  | ( pen 3 ; move 4 , ul ; move ul , 0 )  | ( pen 4 - ul ; move 4 + ul , ul ; v0 = 4 )  | ( pen 2 + ul ; move 4 + ul , ua + ul ; pen ua )  | ( pen ua / 2 ; move 4 - 2 , ua + ul ; move 3 , 0 )  | ( pen 3 ; move ul / ua , ua + ul ; move 4 + ul , ua )  | ( ( pen ua / 2 ; move 4 + ul , ul ) ; v0 = ua * 2 )  
[656] ( pen ua ; move ua , 4 * 4 )  | ( pen ua ; move ua , 2 / ua )  | ( pen ua ; move ua , ul / 3 )  | ( pen ua ; move ua , 4 * 4 ; v0 = 0 )  | ( pen ua ; v0 = 4 ; move ua , v0 * v0 )  | ( v0 = ua ; pen v0 ; move v0 , 2 / v0 )  
[657] ( pen 4 ; move ua , ul / 2 )  | ( pen ua ; move ua , ul / 2 )  | ( pen 3 + ul ; move ua , ul / 2 )  | ( pen ua + 4 ; move ua , ul / 2 )  | ( pen 4 ; move ua , 2 / 4 ; v0 = 2 )  | ( pen ua + ul ; move ua + ul , ul / 2 )  | ( pen 3 + ul ; move ua , ul / 2 ; v0 = ul )  | ( pen ua ; v0 = ua / 3 ; move ua , ul / v0 )  
[658] ( pen 3 ; move ua , 4 / ua )  | ( pen ua - 3 ; move ua , 4 / ua )  | ( pen ua ; pen ua / 2 ; move ua , 4 / ua )  | ( pen ua ; pen ua - 3 ; move 0 - ua , 4 / ua )  
[659] ( pen 2 ; move ua , ul / 4 )  | ( pen 2 ; ( move 0 , 0 ; move ua , ul / 4 ) )  
[660] ( pen ua ; move ua , 4 / 3 )  | ( pen ua ; v0 = 0 - ua ; move ua , ua * v0 )  | ( ( pen ua - ul ; move 2 - ul , ul ) ; move ua , 4 * 4 )  | ( move ul , ul / 2 ; pen 4 + ul ; ( move ua , 4 ; pen 2 ) )  
[661] ( pen 3 ; move ua , ul / 4 )  | ( pen ua - 3 ; move ua , ul / 4 )  | ( pen 4 - ul ; move ua , ul / 4 )  | ( pen 3 ; move ua , ul / 4 ; v0 = 2 )  | ( v0 = ul / 4 ; pen 3 ; move ua , v0 )  
[662] ( pen 4 ; move ua , ua / 4 )  | ( pen 3 + ul ; move ua , ua / 4 )  | ( pen ua ; ( move ua , ua / 4 ; pen 0 ) )  | ( pen ua ; ( move ua + ul , ua / 4 ; pen 4 ) )  | ( v0 = ua ; pen ul + v0 ; move v0 , v0 / 4 )  
[663] ( pen ua ; move 4 , ul / 3 )  | ( pen ua + ul ; move 4 , 2 / ua )  | ( pen ua - ul ; move 4 , ul / 4 )  | ( pen ua ; move 0 , ul / 3 ; move 4 , ua )  
[664] ( move ua , 0 ; move ul , ul )  | ( move ua , ua ; move ul , ul )  | ( move ua , 0 ; move 4 - 3 , ul )  | ( move ua , 0 ; move ul , ua + ul )  | ( move ua , 0 - ua ; move ul , ul )  | ( move ua , ua * 4 ; move ul , ul )  | ( move ua , ua ; move ul , ua + ul )  | ( ( move ua , 0 ; move ul , ul ) ; pen 2 )  | ( move ua , 0 ; move 0 , ul ; move ul , ua )  | ( move ua , 0 ; move ul , ul ; v0 = ua )  | ( v0 = ua ; move ua , 0 ; move ul , ul )  | ( move ua , 0 ; move ul , ul ; pen ua + 4 )  | ( move ua , ua ; move 0 , ul ; move ul , ua )  | ( move ua , ua ; v0 = ua ; move ul , ul )  | ( move ua , ua ; ( move ul , ul ; pen ua ) )  | ( move ua , ua ; v0 = ul ; move ul , v0 )  | ( move ua , ua ; v0 = ul ; move v0 , ul )  | ( move ua , 0 ; v0 = ul ; move v0 , v0 )  | ( move ua , 0 ; move ul , ul ; v0 = 4 * 2 )  | ( move ua , ua ; v0 = ul ; move v0 , v0 )  | ( v0 = ua ; move v0 , v0 ; move ul , ul )  | ( move ua , 0 ; move ul , ul ; v0 = ua + ul )  | ( move ua , ua * 3 ; v0 = ul ; move ul , ul )  | ( move ua , 0 ; move ul , ua + ul ; pen 3 + ul )  | ( move ua , ua ; pen ul ; move 2 - ul , ua + ul )  | ( move ua , ua ; ( v0 = ul ; move ul , v0 ) )  | ( move ua , 0 ; ( v0 = 0 ; move v0 + ul , ul ) )  | ( ( move ua , ua ; v0 = 2 - ul ) ; move v0 , ul )  | ( move ua , ua ; ( v0 = ua + ul ; move ul , v0 ) )  | ( ( pen ul ; move ua , ua ) ; move ul , ul ; move 0 , ua )  | ( pen ul ; ( move ua , ua ; v0 = ul ; move v0 , v0 ) )  
[665] ( move ul , 0 ; move ua , ul )  | ( move ul , ua ; move ua , ul )  | ( move 4 - 3 , ua ; move ua , ul )  | ( move ul , 0 ; move ua , ua + ul )  | ( move ul , ua * 4 ; move ua , ul )  | ( move ul , ua + ua ; move ua , ul )  | ( move ul , ua ; move ua , ua + ul )  | ( move ul , ua ; move ua , ul - ua )  | ( move ul , ua ; move ua , ul ; pen 4 )  | ( pen ul ; move ul , ua ; move ua , ul )  | ( move ul , ua ; move ua , ul ; pen ul )  | ( move ul , ua * 4 ; move ua , ul - ua )  | ( move ul , 0 ; ( move ua , ul ; pen 4 ) )  | ( move ul , 0 ; move ua , ul ; v0 = ua )  | ( move ul , ua ; move ua , ul ; v0 = 3 )  | ( move ul , ua ; move ua , ul ; v0 = ua )  | ( move ul , ua ; move ua , ua + ul ; pen ul )  | ( v0 = 0 ; move ul , ua ; move ua , ua + ul )  | ( move ul , 0 ; move ua , ul ; v0 = ul + ul )  | ( move ul , 0 ; move ua , ul ; v0 = ul / ua )  | ( v0 = 4 / ua ; move ul , ua ; move ua , ul )  | ( ( move ul , ua ; move ua , ul ) ; v0 = ua )  | ( ( pen ul ; move ul , ua ) ; move ua , ua + ul )  | ( ( move ul , ua ; move ua , ul ) ; pen ua * ua )  | ( move ul , ua ; v0 = ul ; move ua * v0 , v0 )  | ( move ul , 0 ; ( move ua , ul - ua ; v0 = ul ) )  | ( v0 = ul ; move v0 , 0 ; move ua * v0 , v0 )  | ( v0 = ul ; move v0 , ua ; move ua / v0 , v0 )  | ( ( move 2 - ul , ua ; move ua , ul ) ; pen 0 ; pen 4 )  | ( move ul , ua ; ( v0 = ua ; pen ul ) ; move v0 , ul )  | ( move ul , ua ; ( v0 = ul ; v1 = ua ) ; move ua , ul )  | ( ( v0 = ua ; move ul , ua ) ; move ua , ul ; pen 2 - ua )  
[666] ( move ua , 2 ; move ua , ul )  | ( move ua , 4 - 2 ; move ua , ul )  | ( move ua , ua + 2 ; move ua , ul )  | ( move ua , 2 ; move ua , ua + ul )  | ( move ua , 2 - ua ; move ua , ul )  | ( move ua , 2 ; move ua , ul - ua )  | ( move ua , 3 - ul ; move ua , ul )  | ( move ua , ul + ul ; move ua , ul )  | ( move ua , 2 ; move ua , ul ; pen ua )  | ( pen ul ; move ua , 2 ; move ua , ul )  | ( move ua , 2 ; move ua , ul ; pen ul )  | ( move ua , 2 ; move 0 , ul ; move ua , 0 )  | ( move ua , 2 ; move ua , ul ; v0 = 0 )  | ( move ua , 2 ; move ua , ul ; v0 = ul )  | ( move ua , 2 ; move ua , ul ; pen ua + 2 )  | ( move ua , 2 ; move ua , ul ; pen 2 + ul )  | ( pen ul / 2 ; move ua , 2 ; move ua , ul )  | ( move ua , 2 ; move ua , ul ; pen ul + ul )  | ( move 0 , 0 ; ( move ua , 2 ; move ua , ul ) )  | ( move ua , 2 ; move ua , ul ; v0 = 4 + 2 )  | ( ( move ua , 4 / 2 ; move ua , ul ) ; pen 4 )  | ( move ua , 2 ; move ua , ul ; move 3 - 4 , ua )  | ( move ua , ul + ul ; move ua , ul ; v0 = 4 )  | ( move ua , ul + ul ; v0 = ua ; move v0 , ul )  | ( v0 = ul ; move ua , v0 + ul ; move ua , ul )  | ( move ua , ua + 2 ; ( move ua , ul ; v0 = 3 ) )  | ( v0 = ul ; move ua , v0 + ul ; move ua , v0 )  | ( move ua , 2 ; ( move ua , ua + ul ; move 0 , ul ) )  | ( pen ul ; ( move ua , 2 ; v0 = 0 ; move ua , ul ) )  | ( ( move ua , 2 ; move ua , ul ) ; v0 = ul ; v1 = ul )  | ( move ua , 2 ; ( move ua , ul ; pen ua / 4 ) ; pen ul - 4 )  
[667] ( move ua , ul ; move ua , 2 )  | ( move ua , ul ; move ua , ua + 2 )  | ( move ua , ua + ul ; move ua , 2 )  | ( move ua , ul ; move ua , 2 - ua )  | ( move ua , ul - ua ; move ua , 2 )  | ( move ua , ul ; move ua , 3 - ul )  | ( move ua , ul ; move ua , ul + ul )  | ( move ua , ul ; move ua , 2 ; pen 4 )  | ( move ua , ua + ul ; move ua , 3 - ul )  | ( move ua , ul ; move ua , 2 ; v0 = 0 )  | ( move 0 , ua ; move ua , ul ; move ua , 2 )  | ( move ua , ul ; move ua , 2 ; move 0 , ua )  | ( move ua , ul ; move ua , 2 ; move 0 , ul )  | ( move ua , ul ; move ua , 2 - ua ; pen 0 )  | ( move ua , ul ; move ua , 3 - ul ; pen 0 )  | ( move ua , ul ; move 0 , ul ; move ua , ul )  | ( move ua , ul ; move ua , 2 - ua ; pen ua )  | ( move ua , ul ; move ua , 3 - ul ; pen ua )  | ( ( move ua , ul ; move 0 , 0 ) ; move ua , 2 )  | ( move ua , ul ; move ua , 2 ; v0 = ua - 4 )  | ( move ua , ul ; move ua , 2 - ua ; pen ua * 3 )  | ( move ua , ul ; move ua , ul + ul ; move 0 , ua )  | ( move ua , ua + ul ; v0 = ua ; move v0 , 2 )  | ( move ua , 2 - ul ; ( move 0 , 0 ; move ua , 2 ) )  | ( v0 = ua ; move ua , ul ; move v0 , 2 + v0 )  | ( move ua , ul ; ( move ua , 2 ; v0 = ul + ul ) )  | ( v0 = ua ; move v0 , ul ; move v0 , v0 + 2 )  | ( v0 = ul ; move ua , v0 ; move ua , v0 + v0 )  | ( move ua , ua + ul ; v0 = 0 ; move ua + v0 , 2 )  | ( pen ul ; ( move ua , ul ; move 0 , ul ; move ua , ul ) )  | ( ( move ua , ul ; move ua , 2 ) ; v0 = ul ; pen v0 )  | ( move ua , ul ; ( move ua , 2 ; move 0 , ua - 2 ; pen ua ) )  
[668] ( move ua , ul ; move ul , 2 )  | ( move ua , ul ; move 4 - 3 , 2 )  | ( move ua , 2 - ul ; move ul , 2 )  | ( move ua , ul ; move 2 - ul , 2 )  | ( move ua , ul ; move ul , 4 / 2 )  | ( move ua , ua + ul ; move ul , 2 )  | ( move ua , ul ; move ul , ua + 2 )  | ( move ua , ul - ua ; move ul , 2 )  | ( move ua , ul ; move ul , ul + ul )  | ( move ua , ul ; move ul , 2 ; pen 0 )  | ( move ua , ul ; move ul , 2 ; pen 3 )  | ( move ua , ul ; move ul , 2 ; pen 4 )  | ( move ua , ul ; move ul , 2 ; pen ua )  | ( move ua , ul ; move ul , 2 ; pen ul )  | ( pen ul ; move ua , ul ; move ul , 2 )  | ( move ua , ul ; pen ul ; move ul , 2 )  | ( move ua , ul ; v0 = 0 ; move ul , 2 )  | ( move ua , ul ; move 3 - 2 , 2 ; pen ul )  | ( move ua , ul ; move ul , 2 ; move 0 , ua )  | ( move ua , ul ; move ul , 2 ; move 0 , ul )  | ( move ua , ul ; move ul , 2 ; v0 = ul )  | ( ( move ua , ul ; move ul , 2 ) ; pen ua )  | ( move ua , ul - ua ; pen ul ; move ul , 2 )  | ( move ua , ul ; move ul , 3 - ul ; pen ul )  | ( v0 = 2 ; move ua , ul ; move ul , v0 )  | ( move ua , ul ; pen ul ; move ul , ul + ul )  | ( ( move ua , ul ; move ul , 2 ) ; pen v0 )  | ( ( move ua , ul ; move ul , 2 ) ; v0 = 2 )  | ( v0 = ua + 2 ; move ua , ul ; move ul , v0 )  | ( ( move ua , ul ; move 0 , 2 ) ; move ul , 0 - ua )  | ( v0 = ul ; move ua , v0 ; move v0 , v0 + ul )  | ( v0 = ul ; move ua , ul / v0 ; move v0 , 3 - v0 )  
[669] ( move ua , ul ; move ua , 3 )  | ( move ua , 2 - ul ; move ua , 3 )  | ( move ua , ul ; move ua , ua + 3 )  | ( move ua , ul ; move ua , 2 + ul )  | ( move ua , ul ; move ua , 3 - ua )  | ( move ua , ul ; move ua , 4 - ul )  | ( move ua , ul ; move ua , 3 ; pen 0 )  | ( move ua , ua + ul ; move ua , ua + 3 )  | ( move ua , ul ; move ua , 3 ; v0 = 3 )  | ( ( move ua , ul ; move ua , 3 ) ; pen 3 )  | ( move ua , ul ; move ua , 3 ; move 0 , ul )  | ( move ua , ul ; move ua , 3 ; v0 = ua )  | ( v0 = ul ; move ua , v0 ; move ua , 3 )  | ( move ua , ul ; ( move ua , 3 ; v0 = 2 ) )  | ( move ua , ul ; ( move 0 , 2 ; move ua , ul ) )  | ( move ua , ul ; move ua , 2 + ul ; v0 = ul )  | ( ( move ua , ul ; pen ul ) ; move ua , 3 - ua )  | ( v0 = ul ; move ua , v0 ; move ua , 3 / v0 )  | ( move ua , ul ; ( move ua , 3 ; v0 = 3 + ul ) )  | ( move ua , ua + ul ; move ua , 2 + ul ; v0 = ua )  | ( move ua , ul ; move ua , 3 ; ( pen 3 / ua ; pen ua ) )  | ( move ua , ul ; ( move ua , 3 ; move 0 , 2 ; move 0 , ua ) )  
[670] ( move ua , 2 ; move ul , ul )  | ( move ua , 2 ; move ul , ua + ul )  | ( move ua , ua + 2 ; move ul , ul )  | ( move ua , 2 - ua ; move ul , ul )  | ( move ua , 3 - ul ; move ul , ul )  | ( move ua , 2 ; move ul , ul ; pen 0 )  | ( move ua , 2 ; move ul , ul ; pen ul )  | ( move ua , 2 - ua ; move 4 - 3 , ul )  | ( move ua , 2 ; pen ul ; move ul , ua + ul )  | ( move ua , ul + ul ; move ul , ul ; pen ua )  | ( move ua , 2 ; v0 = ul ; move v0 , v0 )  | ( ( move ua , 2 ; move 0 , ul ) ; move ul , ua )  | ( move ua , 2 ; ( move 0 , ul ; move ul , ua ) )  | ( ( move ua , 2 ; move ul , ul ) ; pen 2 - ul )  | ( move ua , 2 ; move ul , ua + ul ; v0 = ul )  | ( move ua , ul + ul ; ( move ul , ul ; pen 0 ) )  | ( move ua , ul + ul ; move ul , ul ; v0 = ul )  | ( ( move ua , ul + ul ; pen ul ) ; move ul , ul )  | ( move ua , 2 ; v0 = ua ; move ul , ul + v0 )  | ( pen ul ; ( move ua , 2 ; move ul , ul ; pen 0 ) )  | ( move ua , ul + ul ; v0 = ul ; move v0 , ul )  | ( ( v0 = ul ; move ua , 2 ) ; move v0 , v0 )  | ( move ua , 2 - ua ; v0 = ul ; move v0 , v0 )  | ( move ua , ua + 2 ; move ul , ul ; move 0 , 4 - ul )  | ( ( move 0 , ua ; move ua , ul + ul ) ; move ul , ul )  | ( ( move ua , 2 ; move ul , ul ) ; pen ua ; v0 = 4 )  | ( v0 = ua ; ( move v0 , 2 ; move ul , ul ; pen 4 ) )  | ( move 0 , ua ; ( move ua , ua + 2 ; move ul , 2 - ul ) )  | ( ( v0 = ul ; move ua , ul + v0 ) ; move v0 , v0 )  | ( ( pen ul ; move ua , 2 ; v0 = ul ) ; move v0 , v0 )  | ( ( pen 3 ; pen ul / 2 ; move ua , 2 ) ; move 2 - ul , ul )  | ( move ua , 2 ; ( move ul , ul ; move 0 , ua ; pen ua + ul ) )  
[671] ( move ua , ul ; move 2 , ul )  | ( move ua , ul ; move 2 , ua + ul )  | ( move ua , ua + ul ; move 2 , ul )  | ( move ua , ul ; move 2 , ul - ua )  | ( move ua , ul ; move ul + ul , ul )  | ( move ua , ul ; move 2 , ul ; pen 0 )  | ( move ua , ua + ul ; move 2 , ua + ul )  | ( move ua , ua + ul ; move 2 , ul - ua )  | ( move ua , ul ; move 3 - ul , ul - ua )  | ( move ua , ua + ul ; move ul + ul , ul )  | ( move ua , ul ; move 2 , ul ; v0 = 0 )  | ( v0 = 2 ; move ua , ul ; move 2 , ul )  | ( ( move ua , ul ; move 2 , ul ) ; pen 0 )  | ( ( pen ul ; move ua , ul ) ; move 2 , ul )  | ( move ua , ul ; move ul , ul ; move ul , ua )  | ( v0 = ua ; move v0 , ul ; move 2 , ul )  | ( v0 = ul ; move ua , v0 ; move 2 , ul )  | ( move ua , ul ; move 2 , ul - ua ; move 0 , 0 )  | ( move ua , ul - ua ; move 2 , ul ; v0 = 0 )  | ( move ua , ua + ul ; v0 = 4 ; move 2 , ul )  | ( move ua , ul ; move 2 , ul ; v0 = ul - 4 )  | ( ( move ua , ul ; pen ul ) ; move 2 , ul - ua )  | ( pen ul / ua ; move ua , ua + ul ; move 2 , ul )  | ( move ua , ul ; move ul + ul , ul ; pen 4 - ul )  | ( move ua , ua + ul ; v0 = ul ; move 2 , v0 )  | ( v0 = ul - ua ; move ua , v0 ; move 2 , v0 )  | ( move ua , ul ; v0 = ul ; move v0 * 2 , v0 )  | ( move ua , ul ; move 3 - ul , ul ; move 0 , 0 - ul )  | ( move ua , ul ; move 3 - ul , ul ; v0 = ua * 4 )  | ( ( move ua , ua + ul ; v0 = 2 ) ; move v0 , ul )  | ( ( pen ul ; move ua , ua + ul ) ; pen ul ; move 2 , ul )  | ( pen ul ; ( move ua , ul ; move ul , ua + ul ; move ul , 0 ) )  
[672] ( move ul , 2 ; move ua , ul )  | ( move ul , 2 ; move ua , 3 - 2 )  | ( move 4 - 3 , 2 ; move ua , ul )  | ( move ul , ua + 2 ; move ua , ul )  | ( move ul , 2 - ua ; move ua , ul )  | ( move ul , ul + ul ; move ua , ul )  | ( pen ul ; move ul , 2 ; move ua , ul )  | ( move ul , 2 ; pen ul ; move ua , ul )  | ( move ul , ua + 2 ; move ua , ua + ul )  | ( move ul , 2 ; move ua , ul ; v0 = 0 )  | ( move ul , 2 ; move ua , ul ; v0 = ua )  | ( move ul , 2 ; v0 = ul ; move ua , ul )  | ( move ul , 2 ; move ua , ul ; v0 = ul )  | ( move ul , 2 ; move ua , ul ; pen ua - 2 )  | ( move ul , 2 ; move ua , ul ; pen 3 + ul )  | ( move ul , 4 - 2 ; move ua , ul ; pen ul )  | ( ( move ul , 2 ; move ua , ul ) ; pen ul )  | ( move ul , ul + ul ; move ua , ul ; pen 0 )  | ( v0 = ul ; move v0 , 2 ; move ua , v0 )  | ( move ul , 2 ; ( move ua , ul ; move 0 , ua ) )  | ( ( pen ul ; move ul , 2 ) ; move ua , 2 - ul )  | ( move ul , 2 - ua ; move ua , ul ; move 0 , ua )  | ( move ul , ua + 2 ; v0 = ua ; move ua , ul )  | ( move ul , 2 ; v0 = ua + ua ; move ua , ul )  | ( move ul , ul + ul ; v0 = 4 ; move ua , ul )  | ( move ul , 2 ; ( move ua , ul ; pen ul - ua ) )  | ( move ul , ul + ul ; move ua , ul ; move 0 , ul )  | ( move ul , ul + ul ; ( move ua , ul ; pen ul ) )  | ( move ul , 2 - ua ; move ua , ul ; move 4 - ua , ua )  | ( ( move ul , ua + 2 ; move ua , ul ) ; v0 = 4 * 3 )  | ( v0 = ul ; pen v0 ; ( move v0 , 2 ; move ua , ul ) )  | ( move ul , 2 ; move 0 , ul ; ( pen ul ; move ua , 0 - ua ) )  
[673] ( move 2 , ul ; move ua , ul )  | ( move 2 , ul ; move ua , 4 - 3 )  | ( move 2 , 2 - ul ; move ua , ul )  | ( move 2 , ul ; move ua , 2 - ul )  | ( move 2 , ul ; move ua , ua + ul )  | ( move 2 , ua + ul ; move ua , ul )  | ( move 2 , ul - ua ; move ua , ul )  | ( move 3 - ul , ul ; move ua , ul )  | ( move ul + ul , ul ; move ua , ul )  | ( move 2 , ul ; move ua , ul ; pen 3 )  | ( move 2 , ul ; move ua , ul ; pen ul )  | ( move 2 , ul ; pen ul ; move ua , ul )  | ( move ul + ul , ua + ul ; move ua , ul )  | ( move 2 , ul ; move ua , ul ; v0 = 0 )  | ( move 0 , ul ; move 2 , ua ; move ua , ul )  | ( move 2 , ul ; move ua , ul ; v0 = ua )  | ( move 2 , ul ; move ua , ul ; pen 3 + ul )  | ( move ul + ul , ul ; move ua , ul ; pen 4 )  | ( v0 = ul ; move 2 , v0 ; move ua , v0 )  | ( ( move 2 , ul ; move ua , ul ) ; v0 = 0 )  | ( move 2 , ul ; move ua , ul ; v0 = ua + 4 )  | ( move ul , ul ; move 2 - ul , 0 ; move ua , ul )  | ( move 2 , ua + ul ; move ua , ul ; v0 = ul )  | ( move 2 , ul ; v0 = 3 ; move ua , 4 - v0 )  | ( move 2 , ul ; v0 = 0 ; move ua , ul / v0 )  | ( v0 = ua ; move 2 , 2 - ul ; move v0 , ul )  | ( move 2 , ul ; ( move ua , ul ; v0 = 4 * 4 ) )  | ( move ul + ul , ul ; move ua , ul ; v0 = 0 - ua )  | ( v0 = ua + ul ; ( move 2 , v0 ; move ua , v0 ) )  | ( move 2 , ul ; v0 = ua ; ( move v0 , ul ; pen ua ) )  | ( ( v0 = ul ; move 2 , ul ) ; move ua , v0 ; pen ua )  | ( ( pen 0 ; pen ul ; move 2 , ua + ul ) ; move ua , ul - ua )  
[674] ( move ul , ul ; move ua , 2 )  | ( move 2 - ul , ul ; move ua , 2 )  | ( move ul , ua + ul ; move ua , 2 )  | ( move ul , ul ; move ua , ua + 2 )  | ( move ul , ul ; move ua , 3 - ul )  | ( move ul , ul ; move ua , ul + ul )  | ( move ul , ul ; move ua , 2 ; pen 0 )  | ( move ul , ul ; move ua , 2 ; pen ul )  | ( pen ul ; move ul , ul ; move ua , 2 )  | ( move ul , ul - ua ; move ua , ua + 2 )  | ( move ul , ua + ul ; move ua , ul + ul )  | ( move ul , ul ; move ua , 2 ; pen 2 - 3 )  | ( move ul , ul ; move ua , 2 ; v0 = ua )  | ( ( move ul , ul ; pen ul ) ; move ua , 2 )  | ( move ul , ul ; move 0 , ul ; move ua , ul )  | ( move ul , ul ; pen ul ; move ua , 3 - ul )  | ( v0 = ul ; move ul , v0 ; move ua , 2 )  | ( v0 = 2 ; move ul , ul ; move ua , v0 )  | ( ( move ul , ul ; move ua , 2 ) ; v0 = 4 )  | ( move ul , ul ; move ua , ua + 2 ; move 0 , 0 )  | ( move ul , ua + ul ; move ua , 2 ; v0 = 0 )  | ( move ul , ul ; ( move ua , 2 ; move 0 , ul ) )  | ( move ul , ul ; move 0 , ul ; move ua , 2 - ul )  | ( move ul , ul ; move ua , ul + ul ; v0 = ul )  | ( move ul , ul ; move ua , 3 - ul ; pen ua + ua )  | ( move ul , ul ; ( v0 = 2 ; move ua , v0 ) )  | ( ( move ul , ul ; move ua , 2 ) ; pen ul ; pen 0 )  | ( move ul , ua + ul ; move 0 , 2 ; move ua , ua * 4 )  | ( ( move ul , ul ; move ua , ua + 2 ) ; v0 = ul )  | ( move ul , ul ; ( v0 = 3 ; move ua , ul + ul ) )  | ( v0 = ul ; move v0 , ul ; move ua , v0 + v0 )  | ( ( move ul , ua + ul ; pen ul ) ; move 3 , 2 ; move 3 , ua )  
[675] ( move ua , ul ; move 3 , ul )  | ( move ua , 2 - ul ; move 3 , ul )  | ( move ua , ul ; move 3 , ua + ul )  | ( move ua , ua + ul ; move 3 , ul )  | ( move ua , ul ; move 2 + ul , ul )  | ( move ua , ul - ua ; move 3 , ul )  | ( move ua , ul ; move 3 , ul - ua )  | ( move ua , ul ; move 4 - ul , ul )  | ( move ua , ul ; move 3 , ul ; pen 4 )  | ( move ua , ul ; move 3 , ul ; pen ul )  | ( move ua , ua + ul ; move 4 - ul , ul )  | ( move ua , ul ; move 3 , ul ; v0 = 0 )  | ( move ua , ul ; move 3 , ul ; v0 = 2 )  | ( move ua , ul ; move 3 , ul ; v0 = 3 )  | ( move ua , ul ; v0 = 3 ; move 3 , ul )  | ( ( move ua , ul ; move 3 , ul ) ; pen 2 )  | ( v0 = ua ; move ua , ul ; move 3 , ul )  | ( move ua , ul ; move 3 , ul ; pen 3 + ul )  | ( move ua , ul ; move 2 , ul ; move ul , ua )  | ( move ua , ul ; v0 = ul ; move 3 , v0 )  | ( v0 = ul ; move ua , v0 ; move 3 , v0 )  | ( ( move ua , ul ; move 3 , ul ) ; v0 = 4 )  | ( v0 = ua ; ( move ua , ul ; move 3 , ul ) )  | ( move 0 , ua ; move ua , ua + ul ; move 3 , ul )  | ( move ua , ul ; move 3 , ua + ul ; v0 = ua )  | ( move ua , ul ; move 4 - ul , ul ; pen ua + 2 )  | ( move ua , ul ; move 3 , ua + ul ; pen 4 - ul )  | ( move ua , ul ; move 2 , ul - ua ; move ul , ua )  | ( move ua , ua + ul ; move 3 , ul ; pen ua + ua )  | ( move ua , ul ; v0 = ua ; move 3 , ul + v0 )  | ( ( move ua , ul ; pen ul ; pen 3 - 2 ) ; move 3 , ul )  | ( move ua , ul - ua ; v0 = ul ; move v0 + 2 , v0 )  
[676] ( move 3 , ul ; move ua , ul )  | ( move 3 , ul ; move ua , 3 - 2 )  | ( move 3 , 3 - 2 ; move ua , ul )  | ( move 3 , 2 - ul ; move ua , ul )  | ( move 3 , ua + ul ; move ua , ul )  | ( move 3 , ul ; move ua , ua + ul )  | ( move 3 , ul - ua ; move ua , ul )  | ( move 3 , ul ; move ua , ul - ua )  | ( move 4 - ul , ul ; move ua , ul )  | ( pen ul ; move 3 , ul ; move ua , ul )  | ( move 2 + ul , ua + ul ; move ua , ul )  | ( move 2 + ul , ul ; move ua , ua + ul )  | ( move 3 , ul ; move ua , ul ; v0 = 0 )  | ( move 3 , ul ; move ua , ul ; v0 = 2 )  | ( move 3 , ul ; move ua , ul ; move 0 , ua )  | ( pen ul ; ( move 3 , ul ; move ua , ul ) )  | ( move 3 , ul ; v0 = ul ; move ua , v0 )  | ( v0 = ul ; move 3 , v0 ; move ua , ul )  | ( v0 = ul ; move 3 , v0 ; move ua , v0 )  | ( ( move 3 , ul ; move ua , ul ) ; pen ua * 2 )  | ( move 3 , ul ; move ua , ua + ul ; move 0 , ua )  | ( ( move 3 , ul ; v0 = ul ) ; move ua , v0 )  | ( move 3 , ul ; ( v0 = ua ; move v0 , ul ) )  | ( move 3 , ul ; move ua , ua + ul ; v0 = 2 - ua )  | ( move 3 , ul ; ( move ua , ua + ul ; v0 = ua ) )  | ( ( move 3 , ul - ua ; move ua , ua + ul ) ; pen 0 )  | ( move 3 , ua + ul ; move ua , ul ; v0 = ua + ul )  | ( ( move 3 , ul ; move ua , ul ; move 0 , ul ) ; pen ul )  | ( pen ul ; ( move 3 , ua + ul ; move ua , ul ) ; pen 4 )  | ( move 3 , ul ; v0 = ua + ul ; move v0 - ul , v0 )  | ( move 3 , ul - ua ; ( move ua , ua + ul ; v0 = ul ) )  | ( ( move 3 , ul ; v0 = 2 - ul ) ; move v0 * ua , ul )  
[677] ( move ua , ul ; move ua , 4 )  | ( move ua , ul ; move ua , 2 + 2 )  | ( move ua , ua + ul ; move ua , 4 )  | ( move ua , ul ; move ua , 3 + ul )  | ( move ua , ul ; move ua , ua + 4 )  | ( move ua , ul ; move ua , 4 - ua )  | ( move ua , ul - ua ; move ua , 4 )  | ( move ua , ul ; move ua , 4 ; pen 2 )  | ( move 0 , ul ; move ua , 0 ; move ua , 4 )  | ( move ua , ul ; move ua , 4 ; v0 = 0 )  | ( ( move ua , ul ; move ua , 4 ) ; pen 4 )  | ( move ua , ul ; move 0 , 3 ; move ua , ul )  | ( move ua , ul ; move ua , 4 ; v0 = ul )  | ( move ua , ul ; move ua , 4 ; pen ua / 3 )  | ( move ua , ul - ua ; pen ul ; move ua , 4 )  | ( v0 = ua ; move v0 , ul ; move v0 , 4 )  | ( move ua , ul ; move ua , 2 * 2 ; v0 = 0 )  | ( ( move ua , ul ; move ua , 3 + ul ) ; pen 0 )  | ( move ua , ul ; move ua , 3 + ul ; v0 = ua )  | ( pen ul / 3 ; move ua , ua + ul ; move ua , 4 )  | ( ( move ua , ul ; move ua , 3 + ul ) ; pen ua )  | ( move ua , ul ; ( v0 = 4 ; move ua , v0 ) )  | ( move ua , ua + ul ; v0 = 4 ; move ua , v0 )  | ( ( move ua , ul ; v0 = ua + ul ) ; move ua , 4 )  | ( move ua , ul - ua ; move ua , 3 + ul ; move 0 , ua )  | ( move ua , ul ; move ua , 4 ; ( v0 = 3 ; pen v0 ) )  | ( ( move ua , ul ; move ua , 3 + ul ) ; v0 = ua / 3 )  | ( move ua , ul ; ( move ua , 3 + ul ; v0 = ua ) ; pen ul )  
[678] ( move ua , 3 ; move ul , ul )  | ( move ua , 3 ; move 2 - ul , ul )  | ( move ua , 3 ; move ul , ua + ul )  | ( move ua , 2 + ul ; move ul , ul )  | ( move ua , 3 ; move ul , ul - ua )  | ( move ua , 4 - ul ; move ul , ul )  | ( move ua , 3 ; pen ul ; move ul , ul )  | ( move ua , 3 ; move ul , ul ; pen ul )  | ( move ua , 3 ; move ul , ul ; v0 = 0 )  | ( move ua , 3 ; move ul , ul ; v0 = 2 )  | ( move 0 , ul ; move ua , 2 ; move ul , ul )  | ( move ua , 3 ; move ul , ul ; pen ua * 2 )  | ( ( move ua , 3 ; pen ul ) ; move ul , ul )  | ( move ua , 2 + ul ; pen ul ; move ul , ul )  | ( move ua , 3 ; v0 = ul ; move ul , v0 )  | ( v0 = ul ; move ua , 3 ; move v0 , ul )  | ( move ua , 3 ; v0 = ul ; move v0 , v0 )  | ( move ua , 3 - ua ; move ul , ul ; v0 = 2 )  | ( move ua , 3 ; move ul , ul ; v0 = 3 + ul )  | ( move ua , 3 ; ( v0 = ua ; move ul , ul ) )  | ( move ua , 3 ; move ul , ul ; v0 = ua + ul )  | ( move ua , ua + 3 ; v0 = ul ; move ul , ul )  | ( v0 = ul ; ( move ua , 3 ; move v0 , ul ) )  | ( move ua , 3 ; v0 = ul - ua ; move ul , v0 )  | ( move ua , 3 ; v0 = 2 - ul ; move v0 , v0 )  | ( v0 = ul ; move ua , 3 ; move v0 * v0 , ul )  | ( move 0 , 4 + 3 ; move ua , ua - 4 ; move ul , ul )  | ( ( move ua , 3 ; v0 = ua ) ; move ul , ul - ua )  | ( move ul , 2 + ul ; move ua - ul , ua ; move ul , ul )  | ( move ua , 3 - ua ; ( move ul , ul ; v0 = ul - 4 ) )  | ( move ua , 3 ; ( v0 = ul ; pen ul ) ; move v0 , v0 )  | ( move ua , 2 + ul ; ( move ul , ul ; pen 2 ) ; v0 = ul )  
[679] ( move ul , 3 ; move ua , ul )  | ( move ul , 3 ; move ua , 2 - ul )  | ( move ul , 2 + ul ; move ua , ul )  | ( move ul , 3 ; move ua , ua + ul )  | ( move ul , 4 - ul ; move ua , ul )  | ( move ul , 3 ; move ua , ul ; pen 0 )  | ( move ul , ua + 3 ; move ua , ul - ua )  | ( move ul , 3 - ua ; move ua , ua + ul )  | ( move ul , 3 ; move 0 , 0 ; move ua , ul )  | ( move ul , 3 ; move ua , ul ; move 0 , ua )  | ( move ul , 3 ; move ua , ul ; v0 = ua )  | ( move ul , 3 ; move ua , ul ; v0 = ul )  | ( move ul , 3 ; ( move ua , ul ; pen ua ) )  | ( ( move ul , 3 ; move ua , ul ) ; pen ua )  | ( move ul , ua ; move ul , 3 ; move ua , ul )  | ( move ul , 2 + ul ; move ua , ul ; pen ul )  | ( move ul , 3 ; v0 = ua ; move v0 , ul )  | ( move ul , 3 ; v0 = ul ; move ua , v0 )  | ( move ul , 3 ; ( move 2 , ul ; move 4 , 0 ) )  | ( ( move ul , 3 ; move ua , ul ) ; pen 0 - 4 )  | ( move ul , 3 ; move ua , ul - ua ; v0 = 0 )  | ( move ul , 3 ; ( move ua , ul ; move 0 , ul ) )  | ( ( move ul , 3 ; move ua , ul ) ; pen 2 / ua )  | ( ( move ul , 3 ; move ua , ul ) ; pen 4 - ul )  | ( move ul , 2 + ul ; v0 = ua ; move ua , ul )  | ( move ul , 3 ; move ua , ul ; v0 = ua - ul )  | ( pen ul ; ( move ul , 3 ; move ua , ua + ul ) )  | ( move ul , 3 ; ( v0 = ul ; move ua , v0 ) )  | ( move ul , ua + 3 ; v0 = ul ; move ua , v0 )  | ( move ul , 2 + ul ; v0 = ua ; move v0 , v0 / ua )  | ( ( move ul , 3 ; move ua , ua + ul ) ; move 0 , ul + ul )  | ( ( move ul , 2 + ul ; move ua , ul ) ; v0 = ul + ul )  
[680] ( move ul , 4 ; move ua , ul )  | ( move ul , 4 ; move ua , 4 - 3 )  | ( move ul , ua + 4 ; move ua , ul )  | ( move ul , 3 + ul ; move ua , ul )  | ( move ul , 4 ; move ua , ua + ul )  | ( move ul , 4 ; move ua , ul - ua )  | ( pen ul ; move ul , 4 ; move ua , ul )  | ( move ul , 3 + ul ; move ua , ua + ul )  | ( move ul , 4 ; move ua , ul ; v0 = 0 )  | ( move ul , 4 ; move ua , ul ; v0 = 2 )  | ( move ul , 4 ; ( move ua , ul ; pen 4 ) )  | ( move 0 , 4 ; move ul , ua ; move ua , ul )  | ( move 0 , ul ; move ul , 3 ; move ua , ul )  | ( pen ul / 2 ; move ul , 4 ; move ua , ul )  | ( move ul , 4 ; move ua , ul ; pen ua + ul )  | ( move ul , 3 + ul ; pen ul ; move ua , ul )  | ( pen ul ; move ul , ua + 4 ; move ua , ul )  | ( move ul , 4 - ua ; move ua , ul ; pen ul )  | ( move 4 - 3 , 4 ; ( move ua , ul ; pen ua ) )  | ( ( move ul , 4 ; move ua , ul ) ; v0 = ua )  | ( move ul , 4 ; ( move ua , ul ; v0 = ua ) )  | ( move 0 , 2 + ul ; move ul , ul ; move ua , ul )  | ( move ul , 3 + ul ; move ua , ul ; v0 = ua )  | ( ( pen ul ; pen ul ; move ul , 4 ) ; move ua , ul )  | ( move ul , 4 ; v0 = ua ; move v0 , ul - v0 )  | ( move ul , 4 - ua ; move ua , ul ; v0 = ua - 3 )  | ( move ul , 3 + ul ; move ua , ul - ua ; move 0 , ul )  | ( ( move ul , 4 ; move 0 , ul ; move ua , ua ) ; pen 0 )  | ( ( pen ul ; move ul , 4 ) ; v0 = ul ; move ua , ul )  | ( ( move ul , 2 + 2 ; move ua , ul ) ; v0 = 2 + ul )  | ( v0 = ul ; move v0 , v0 + 3 ; move ua , ul - ua )  | ( ( move ul , 4 ; move ua , ul ; v0 = ua ) ; v1 = 0 )  
[681] ( move ua , ul ; move 4 , ul )  | ( move ua , ul ; move 2 * 2 , ul )  | ( move ua , ul ; move 4 , ua + ul )  | ( move ua , ul ; move 3 + ul , ul )  | ( move ua , ul ; move 4 , ul ; pen 0 )  | ( move ua , ul ; move 3 + ul , ua + ul )  | ( move ua , ul ; move 4 , ul ; v0 = 0 )  | ( move 0 , ua ; move ua , ul ; move 4 , ul )  | ( move ua , ul ; v0 = ua ; move 4 , ul )  | ( move ua , ul ; move 4 , 2 - ul ; pen ul )  | ( ( pen ul ; move ua , ul ) ; move 4 , ul )  | ( move ua , ul ; move 3 + ul , ul ; pen ul )  | ( move ua , ul ; v0 = ul ; move 4 , v0 )  | ( move ua , ul ; ( move 4 , ul ; v0 = 3 ) )  | ( ( move ua , ul ; move 4 , ul ) ; move 0 , ua )  | ( ( move ua , ul ; move 4 , ul ) ; pen 4 + ul )  | ( move ua , ul ; move ul , ul ; move 3 , ua * 4 )  | ( move ua , ua + ul ; move 4 , ul ; pen ua * 3 )  | ( move ua , ul ; move 3 , ua + ul ; move ul , ua )  | ( move ua , ul ; move ul , ul ; move 4 - ul , ua )  | ( pen ul ; move ua , ua + ul ; move 4 , ua + ul )  | ( move ua , ul ; ( v0 = ul ; move 4 , v0 ) )  | ( v0 = 2 - ul ; move ua , v0 ; move 4 , v0 )  | ( move ua , ul ; v0 = 4 ; move v0 , v0 / 4 )  | ( move ua , ul ; ( move 4 , ul - ua ; move 0 , ua ) )  | ( ( move ua , 2 - ul ; move 4 , ul ) ; pen ua * ua )  | ( move ua , ua + ul ; v0 = ua + ul ; move 4 , ul )  | ( move ua , ul ; ( v0 = ua + ul ; move 4 , v0 ) )  | ( move ua , ua + ul ; move 2 - ul , ul ; move 2 + ul , ua )  | ( move ua , ua + ul ; ( move 4 , ua + ul ; pen ul - ua ) )  | ( ( v0 = ul ; move ua , v0 ) ; move 4 , v0 ; pen ua )  | ( move ua , ul ; pen ul ; ( move 2 + 2 , ul ; pen ua + 4 ) )  
[682] ( move ua , 4 ; move ul , ul )  | ( move ua , 2 + 2 ; move ul , ul )  | ( move ua , ua + 4 ; move ul , ul )  | ( move ua , 4 ; move ul , ua + ul )  | ( move ua , 3 + ul ; move ul , ul )  | ( move ua , 4 - ua ; move ul , ul )  | ( move ua , 4 ; move ul , ul ; pen 2 )  | ( move ua , 4 ; move ul , ul ; pen 3 )  | ( move ua , 4 ; move ul , ul ; pen ul )  | ( pen ul ; move ua , 4 ; move ul , ul )  | ( move ua , 4 ; pen ul ; move ul , ul )  | ( move ua , 4 ; move ul , ul ; v0 = 0 )  | ( move ua , 4 ; v0 = 0 ; move ul , ul )  | ( move ua , 4 ; v0 = 3 ; move ul , ul )  | ( v0 = ul ; move ua , 4 ; move ul , ul )  | ( move ua , ua + 4 ; move ul , ul ; pen 3 )  | ( pen ul ; move ua , 3 + ul ; move ul , ul )  | ( move ua , 4 ; v0 = ul ; move ul , v0 )  | ( move ua , 4 ; v0 = ul ; move v0 , v0 )  | ( move 0 , ul ; move ua , 3 ; move 2 - ul , ul )  | ( move ua , 3 + ul ; v0 = 4 ; move ul , ul )  | ( ( move ua , 4 ; move ul , ul ) ; v0 = ua )  | ( move 0 , 2 + ul ; move ua , ul ; move ul , ul )  | ( move ua , 4 ; v0 = ul - ua ; move ul , v0 )  | ( ( move ua , 4 ; v0 = ul ) ; move v0 , v0 )  | ( move ua , 4 ; ( move ul , ul ; pen ul ; pen ul ) )  | ( ( move ua , 4 ; move ul , ul ) ; v0 = ua + 2 )  | ( ( v0 = 0 ; move ua , 4 ) ; move v0 + ul , ul )  | ( v0 = ua ; ( move v0 , 4 ; move ul , ul ) ; pen 0 )  | ( v0 = ul - 3 ; move ua , v0 * v0 ; move ul , ul )  | ( ( move ua , 4 ; v0 = ul ; move v0 , v0 ) ; pen ul )  | ( move ua , 3 + ul ; ( pen ul ; v0 = ua ; move ul , ul ) )  
[683] ( move 3 , ul ; move ul , ul )  | ( move 3 , ua + ul ; move ul , ul )  | ( move 2 + ul , ul ; move ul , ul )  | ( move 3 , ul ; move ul , ul - ua )  | ( move 3 , ul - ua ; move ul , ul )  | ( move 3 , ul ; pen ul ; move ul , ul )  | ( move 3 , ua + ul ; move ul , ua + ul )  | ( move 3 , ul ; move ul , ul ; v0 = 3 )  | ( move 3 , ul ; move ul , ul ; v0 = ua )  | ( move 3 , ul ; v0 = ul ; move ul , ul )  | ( move 3 , ul ; move ul , ul ; pen ua + ua )  | ( move 3 , ul ; move ul , ua + ul ; pen ul )  | ( v0 = ul ; move 3 , v0 ; move ul , ul )  | ( move 3 , ua + ul ; move 2 - ul , 2 - ul )  | ( v0 = ul ; move 3 , v0 ; move ul , v0 )  | ( move 3 , ul ; v0 = ul ; move v0 , v0 )  | ( v0 = ul ; move 3 , ul ; move v0 , v0 )  | ( ( move 3 , ul ; v0 = 0 ) ; move ul , ul )  | ( move 3 , ul ; move ul , ul ; v0 = ua + ua )  | ( move 3 , ul ; move ul , ul ; v0 = ua - ul )  | ( move 2 + ul , ul ; move ul , ul ; pen 0 - ul )  | ( move 2 , ul ; move ul , ua ; move ul , ua + ul )  | ( move 2 + ul , ul ; v0 = ul ; move ul , v0 )  | ( v0 = ul ; move 3 , ul ; move v0 * v0 , ul )  | ( v0 = 4 - 3 ; move 3 , v0 ; move v0 , v0 )  | ( move 2 + ul , ul ; ( move ul , ul ; v0 = 4 ) )  | ( v0 = ul ; move 4 - ul , v0 ; move v0 , v0 )  | ( ( move 3 , ul ; v0 = 0 ) ; move v0 + ul , ul )  | ( v0 = ul ; move 3 * v0 , v0 ; move v0 , v0 )  | ( ( v0 = ul ; move 4 - v0 , v0 ) ; move ul , ul )  | ( move 2 + ul , ul ; v0 = ul ; move ul / v0 , v0 )  | ( ( move 2 + ul , ul ; move ul , ul - ua ) ; v0 = ul )  
[684] ( move ul , ul ; move ua , 4 )  | ( move ul , ul ; move ua , ua + 4 )  | ( move ul , ul ; move ua , 3 + ul )  | ( move ul , ul - ua ; move ua , 4 )  | ( move ul , ul ; move ua , 4 - ua )  | ( move ul , ul ; pen ul ; move ua , 4 )  | ( move ul , ul ; move ua , 4 ; pen ul )  | ( move ul , ua + ul ; move ua , 3 + ul )  | ( move ul , ua + ul ; move ua , 4 - ua )  | ( move ul , ul ; move 0 , 0 ; move ua , 4 )  | ( move ul , ul ; move ua , 4 ; pen ua * 3 )  | ( move ul , ul ; pen ul ; move ua , ua + 4 )  | ( move ul , ul ; move ua , 4 ; pen ua - ul )  | ( v0 = ua ; move ul , ul ; move v0 , 4 )  | ( move ul , ul ; v0 = ua ; move v0 , 4 )  | ( v0 = ul ; move v0 , v0 ; move ua , 4 )  | ( move ul , 2 - ul ; move ua , 4 ; v0 = 3 )  | ( move 0 , ua - ul ; move ul , 2 ; move ua , 4 )  | ( v0 = ul - 3 ; move ul , ul ; move ua , 4 )  | ( move ul , ul ; move 0 , 3 - ua ; move ua , ul )  | ( move ul , ul ; move ua , 4 ; v0 = ul + ul )  | ( move 3 - 2 , ul ; v0 = ua ; move v0 , 4 )  | ( v0 = 0 ; move ul , ul ; move ua + v0 , 4 )  | ( move ul , ul ; move ua , 3 + ul ; pen ua + ua )  | ( v0 = ul ; move v0 , 2 - ul ; move ua , 4 )  | ( move ul , ul ; ( v0 = ua ; move v0 , 4 ) )  | ( v0 = ua ; ( move ul , ul ; move v0 , 4 ) )  | ( move ul , ul ; v0 = ua ; move v0 , 4 + v0 )  | ( pen ul ; move ul , ul ; ( move ua , 4 ; v0 = 4 ) )  | ( pen 0 ; pen ul ; ( move ul , ul ; move ua , 3 + ul ) )  | ( move 0 , ul ; move 2 - ul , ua * 4 ; move ua , 2 * 2 )  | ( move ul , ul ; ( move ua , 4 ; pen ul + ul ; pen ul ) )  
[685] ( move ua , ul ; move ul , 4 )  | ( move ua , ul ; move ul , 2 + 2 )  | ( move ua , ul ; move ul , 2 * 2 )  | ( move ua , ul ; move 2 - ul , 4 )  | ( move ua , 2 - ul ; move ul , 4 )  | ( move ua , ul ; move ul , ua + 4 )  | ( move ua , ul ; move ul , 3 + ul )  | ( move ua , ua + ul ; move ul , 4 )  | ( move ua , ul ; move ul - 2 , ul )  | ( move ua , ul ; move ul , 4 - ua )  | ( move ua , ul - ua ; move ul , 4 )  | ( pen ul ; move ua , ul ; move ul , 4 )  | ( move ua , ul ; move 2 - ul , 4 - ua )  | ( move ua , ul ; move ul , 4 ; v0 = 2 )  | ( move ua , ul ; move ul , 4 ; v0 = 3 )  | ( move 0 , ul ; move ua , ua ; move ul , 4 )  | ( pen ul ; move ua , ul ; move ul , 2 + 2 )  | ( move ua , ul ; move ul , 4 ; pen ua + 3 )  | ( move ua , ul - ua ; pen ul ; move ul , 4 )  | ( move ua , ul ; pen ul ; move ul , 4 - ua )  | ( move ua , ul ; v0 = ul ; move v0 , 4 )  | ( v0 = 4 ; move ua , ul ; move ul , v0 )  | ( move ua , ul ; v0 = 4 ; move ul , v0 )  | ( ( move ua , ul ; move ul , 4 ) ; v0 = ua )  | ( move ua , ul ; v0 = ul ; move v0 , ua + 4 )  | ( v0 = ul ; move ua / v0 , ul ; move ul , 4 )  | ( move ua , ul ; v0 = ul ; move v0 , v0 + 3 )  | ( move ua , 2 - ul ; v0 = ul - ua ; move ul , 4 )  | ( move ua , ul ; move ul , ua + 4 ; v0 = ul / ua )  | ( ( move ua , ul ; v0 = ua ) ; move ul , 4 ; pen 2 )  | ( move ua , ul ; ( pen ul ; move ul , 4 ) ; v0 = ua )  | ( ( move ua , ul ; move ul , 3 + ul ) ; v0 = ua - ul )  
[686] ( move ul , ul ; move 3 , ul )  | ( move ul , 2 - ul ; move 3 , ul )  | ( move 2 - ul , ul ; move 3 , ul )  | ( move ul , ul ; move 3 , 2 - ul )  | ( move ul , ul ; move 2 + ul , ul )  | ( move ul , ua + ul ; move 3 , ul )  | ( pen ul ; move ul , ul ; move 3 , ul )  | ( move 2 - ul , ul ; move 2 + ul , ul )  | ( move ul , ua + ul ; move 2 + ul , ul )  | ( move ul , ul - ua ; move 3 , ul - ua )  | ( move ul , ul ; move 4 - ul , ul - ua )  | ( move ul , ul ; move 3 , ul ; v0 = 3 )  | ( move ul , ul ; move 2 , ul ; move ul , 0 )  | ( v0 = ul ; move ul , ul ; move 3 , ul )  | ( move ul , ul ; move 3 , ul ; v0 = ul )  | ( move ul , ul ; move 3 , ul ; pen 4 - ua )  | ( move ul , ul ; ( pen ul ; move 3 , ul ) )  | ( move ul , ul ; v0 = 3 ; move v0 , ul )  | ( v0 = 3 ; move ul , ul ; move v0 , ul )  | ( v0 = ul ; move v0 , ul ; move 3 , v0 )  | ( move ul , ul ; move 2 + ul , ul ; move 0 , ul )  | ( ( move ul , ul ; move 4 - ul , ul ) ; pen 4 )  | ( ( move ul , ul ; move 2 + ul , ul ) ; pen ul )  | ( v0 = ua + ul ; move ul , v0 ; move 3 , ul )  | ( ( move ul , ul ; move 3 , ul ) ; move 0 , 2 - ua )  | ( ( move ul , ul ; move 4 - ul , ul ) ; v0 = ua )  | ( ( move ul , ul ; move 3 , ul ; move 0 , ul ) ; pen ul )  | ( move ul , ua + ul ; ( move 3 , ul ; v0 = 2 - 3 ) )  | ( move ul , ua + ul ; ( move 3 , ul ; pen ua ) ; pen ua )  | ( move 2 - ul , ul ; ( move 2 , ul - ua ; move ul , ua ) )  | ( v0 = ul ; ( move ul , v0 ; move 3 , v0 ; pen 3 ) )  | ( move ul , ul - ua ; move ul , ul ; move ul + ul , 0 - ua )  
[687] ( move ul , ul ; move 4 , ul )  | ( move 3 - 2 , ul ; move 4 , ul )  | ( move ul , ul ; move 4 , 2 - ul )  | ( move ul , 2 - ul ; move 4 , ul )  | ( move ul , ul ; move ua - 2 , ul )  | ( move ul , ua + ul ; move 4 , ul )  | ( move ul , ul ; move 4 , ua + ul )  | ( move ul , ul ; move 3 + ul , ul )  | ( move ul , ul - ua ; move 4 , ul )  | ( move ul , ul ; move 4 , ul - ua )  | ( move ul , ul ; move 4 , ul ; pen 0 )  | ( move ul , ul ; move 4 , ul ; v0 = 0 )  | ( move ul , ul ; move 3 , ul ; move ul , 0 )  | ( move ul , ul ; move 4 , ul ; move 0 , ul )  | ( ( move ul , ul ; move 4 , ul ) ; pen ul )  | ( move ul , ul ; v0 = 4 ; move v0 , ul )  | ( v0 = 4 ; move ul , ul ; move v0 , ul )  | ( v0 = ul ; move ul , v0 ; move 4 , v0 )  | ( move ul , ul ; move 4 , ul ; v0 = 3 - ul )  | ( ( move ul , ul ; move 4 , ul ) ; v0 = ua )  | ( move ul , ul ; ( move 3 + ul , ul ; pen 2 ) )  | ( move ul , ul ; move ul , ul ; move 3 , ua * 3 )  | ( move ul , ul ; ( v0 = ul ; move 4 , v0 ) )  | ( move ul , ul ; v0 = ua + ul ; move 4 , v0 )  | ( move ul , ul ; v0 = ul - ua ; move 4 , v0 )  | ( v0 = ua - 4 ; move ul , 2 - ul ; move 4 , ul )  | ( v0 = ul ; ( move v0 , v0 ; move 4 , v0 ) )  | ( v0 = ul ; move v0 , v0 ; move 3 + ul , v0 )  | ( v0 = ul ; move ul , v0 ; move 4 / v0 , v0 )  | ( ( move ul , ul ; move 4 , ul ) ; pen 2 ; v0 = 0 )  | ( ( v0 = ul ; move ul , ul ) ; move v0 * 4 , v0 )  | ( pen ul ; ( v0 = 4 ; move ul , ul ; move v0 , ul ) )  
[688] ( move 4 , ul ; move ul , ul )  | ( move 4 , 2 - ul ; move ul , ul )  | ( move 4 , ul ; move ul , ua + ul )  | ( move 4 , ua + ul ; move ul , ul )  | ( move 4 , ul ; move ul , ul ; pen 2 )  | ( move 4 , ul ; move ul , ul ; pen ua )  | ( move 4 , ul ; move ul , ul ; pen ul )  | ( move 4 , ua + ul ; move ul , 3 - 2 )  | ( move 4 , ul ; move 2 - ul , 2 - ul )  | ( move 4 , ul ; v0 = 2 ; move ul , ul )  | ( move 4 , ul ; move ul , ul ; pen 3 + 2 )  | ( move ul , ul ; move 3 , 0 ; move ul , ul )  | ( move 4 , ua + ul ; move ul , ul ; pen 4 )  | ( move 4 , ul ; ( move ul , ul ; pen ua ) )  | ( pen ul ; move 4 , ul ; move ul , ua + ul )  | ( move 4 , ul ; v0 = ul ; move v0 , ul )  | ( move 4 , ul ; v0 = ul ; move ul , v0 )  | ( v0 = ul ; move 4 , ul ; move v0 , v0 )  | ( move 4 , ul ; v0 = ul ; move v0 , v0 )  | ( ( move 4 , ul ; move 0 , ul ) ; move ul , ua )  | ( move 4 , ul ; v0 = 2 + ul ; move ul , ul )  | ( v0 = ul ; move 4 , v0 ; move v0 , v0 )  | ( move 4 , ul ; move ul , ua + ul ; v0 = ul )  | ( move 4 , ul ; v0 = ua ; move ul , ua / v0 )  | ( move 4 , ul ; v0 = 3 - 2 ; move v0 , v0 )  | ( ( move 4 , ul ; v0 = ul ) ; move v0 , v0 )  | ( v0 = ul ; move 4 , ul ; move v0 * v0 , ul )  | ( ( move 3 + ul , ul ; move ul , ul ) ; v0 = 0 )  | ( v0 = ul ; move 3 + v0 , ul ; move v0 , v0 )  | ( move 3 + ul , ul ; ( v0 = ul ; move v0 , v0 ) )  | ( move 4 , ul ; ( v0 = 2 ; move ul , ul ; move 0 , 2 ) )  | ( ( v0 = ul + ul ; move 2 * v0 , ul ) ; move ul , ul )  
[689] ( pen 2 ; move ua , ua * ua )  | ( pen 0 ; pen 2 ; move ua , ua * ua )  | ( pen 2 ; pen 2 ; move ua , ua * ua )  | ( pen 2 ; move ua , ua * ua ; v0 = ua )  | ( pen 2 ; v0 = ua ; move ua , v0 * v0 )  | ( pen 2 ; v0 = ua ; move v0 , ua * v0 )  | ( pen 2 ; v0 = ua ; move v0 , v0 * v0 )  | ( v0 = ua ; pen 2 ; move v0 , v0 * v0 )  | ( pen 2 ; ( move ua , ua * ua ; move 0 , ua + 2 ; pen ua ) )  
[690] ( pen ua ; move ua + 3 , ul )  | ( pen ua ; move ua + 4 , ul )  | ( pen 3 + 3 ; move ua + 3 , ul )  | ( pen ua ; move ua + 3 , 2 - ul )  | ( pen ua + 3 ; move ua + 3 , ul )  | ( pen ua * 4 ; move ua + 3 , ul )  | ( pen ua ; move ua + 3 , ua + ul )  | ( pen ua ; move ua , ul ; move 3 , ua )  | ( pen ua ; move ua + 3 , ul ; pen ul )  | ( pen ua + 2 ; move ua + 3 , ul ; pen 0 )  | ( pen ua + ul ; move 3 * 3 , ul ; pen 0 )  | ( v0 = ua ; pen v0 ; move ua + 4 , ul )  | ( v0 = 3 * 3 ; pen v0 ; move v0 , ul )  | ( ( pen ua ; move ua + 3 , ul ) ; v0 = ul )  | ( pen ua * 4 ; v0 = ua ; move 3 + v0 , ul )  | ( pen ua + ul ; v0 = 4 + ul ; move ua + 3 , ul )  | ( ( pen ua ; ( move 3 , ul ; move ua , ua ) ) ; v0 = ul )  | ( pen ua ; ( move ua , ul ; move 0 , ua ; move ua - 3 , ua ) )  | ( pen 4 + ul ; ( move ul , ul ; move ua + 2 , ua ; pen ua ) )  | ( pen ua * 3 ; ( move ua , ul ; move 3 , ua ; pen ul + ul ) )  
[691] ( pen ua ; move ua , ul - 2 )  | ( pen ua ; move ua , ua / 3 )  | ( pen ua ; move ua , ua - ul )  | ( pen ua + 2 ; move ua , 0 - ul )  | ( pen 3 + 2 ; move 0 - ua , 0 - ul )  | ( pen 4 + ul ; move ua , ua - ul ; pen ul )  
[692] ( pen ua ; move ua + ul , 3 )  | ( pen ua ; ( move ua , 3 ; move ul , 0 ) )  | ( pen ua ; move ua + ul , 3 ; v0 = 3 )  | ( v0 = ua ; pen v0 ; move ua + ul , 3 )  | ( ( pen ul ; pen ua ; move ul , 3 ) ; move ua , ua )  | ( ( move 0 , 3 ; pen ua + 4 ) ; move ua + ul , ua )  | ( pen ua ; ( move ua + ul , 3 ; move 3 , 3 ) ; pen ua )  
[693] ( pen ua ; move 4 + ul , ua )  | ( pen ua ; move ul - ua , ua )  | ( pen ua + ul ; move 4 + ul , 0 )  | ( pen ua * 3 ; move ul - ua , ua )  | ( pen 4 + ul ; move ua - ul , ua )  | ( move 0 , 0 ; pen ua ; move ua - ul , 0 )  | ( pen ua ; move 0 , 0 ; move 4 + ul , ua )  | ( pen ul ; pen ua + 3 ; move ul - ua , 0 )  | ( pen 2 - ua ; pen ua ; move 4 + ul , ua )  | ( v0 = ua - ul ; pen ua ; move v0 , ua )  | ( v0 = 4 - ul ; pen ua ; move 4 + ul , ua )  | ( v0 = ua ; pen v0 ; move v0 - ul , v0 )  | ( v0 = ua ; pen 4 * v0 ; move ul - v0 , ua )  | ( pen ua ; ( move ul - ua , 0 ; move ul / ua , 2 ) )  | ( ( pen 4 + 3 ; move 3 - 4 , 0 ) ; move 3 + 2 , ua )  | ( ( pen ua ; move 4 + ul , ua ; pen ul / ua ) ; pen ua )  
[694] ( pen ua ; move ua , 4 + ul )  | ( pen 4 * 3 ; move ua , 3 + 2 )  | ( pen 4 * 3 ; move ua , 4 + ul )  | ( pen ua + 2 ; move ua , 4 + ul )  | ( pen ua + ul ; move ua , 4 + ul )  | ( pen ua ; move ul , 2 ; move ua , 3 )  | ( move 0 , ul ; pen 4 * 3 ; move ua , 4 )  | ( pen 4 + ul ; move 0 , ul ; move ua , 4 )  | ( pen ua + ua ; move ul , 2 ; move ua , 3 )  | ( pen ua ; move ua , 4 + ul ; pen 3 + ul )  | ( pen ua ; pen ua - ul ; move ua , 4 + ul )  | ( pen 3 + 3 ; move 4 , 3 + 2 ; move 3 , 0 )  | ( pen 4 ; pen ua * 2 ; move 0 - ua , 4 + ul )  | ( pen ua + 3 ; v0 = 4 + ul ; move ua , v0 )  | ( move 0 , 2 + ul ; pen 3 + 2 ; move ua , 3 - ul )  | ( v0 = 4 + ul ; pen 2 * v0 ; move ua , v0 )  | ( move 3 + ul , 2 ; ( pen ua * 4 ; move ua , 3 ) )  | ( pen ua - ul ; move ua , 3 + 2 ; v0 = ua + ua )  | ( move 0 , 3 ; ( pen ua ; v0 = ua ; move v0 , 2 ) )  | ( ( move 0 , 3 + ul ; pen ul ; pen ua ) ; move ua , ul )  | ( pen ul ; ( pen 4 * 2 ; move ul / ua , 2 ) ; move ua , 3 )  | ( pen ua ; ( move ua , 4 + ul ; pen 3 ; v0 = ul + ul ) )  
[695] ( pen 3 ; move ua , ua * ua )  | ( pen 3 ; move 4 + 2 , ua * ua )  | ( pen 3 ; move ua , ua * ua ; pen ul )  | ( pen 3 ; v0 = ua ; move v0 , ua * v0 )  
[696] ( pen 4 ; move ua , ua * ua )  | ( pen ua ; move ua , ua * ua )  | ( pen ua ; move 3 * 2 , ua * ua )  | ( pen ua + ul ; move ua , ua * ua )  | ( v0 = ua ; pen v0 ; move v0 , v0 * v0 )  | ( pen ua ; v0 = ua * ua ; move v0 / ua , v0 )  | ( move 0 , ua ; ( pen ua * 2 ; move ua , ua * ua ) )  | ( v0 = ua ; pen ul + v0 ; move v0 , v0 * ua )  | ( v0 = ua ; pen 2 + v0 ; move v0 , v0 * v0 )  | ( v0 = ua ; pen v0 + v0 ; move v0 , v0 * v0 )  | ( ( move 0 , ua ; pen 4 ; move ua , ua * ua ) ; v0 = 4 )  
[697] ( pen ua ; move ua , 4 / ua )  | ( pen ua ; move 4 + 2 , 4 / ua )  | ( pen ua + 2 ; move ua , 4 / ua )  | ( pen ua * ua ; move 0 , ul / ua ; move ua , 3 / ua )  
[698] ( pen 3 ; move ua , ul / ua )  | ( pen 2 + ul ; move ua , ul / ua )  | ( pen ua - 3 ; move ua , ul / ua )  | ( pen 0 ; pen 4 - ul ; move ua , ul / ua )  | ( pen 3 ; v0 = ul / ua ; move ua , v0 )  | ( move 0 , ul / ua ; pen 2 + ul ; move ua , ua )  | ( move ul , ua ; ( pen 2 + ul ; move ua , ua - 3 ) )  
[699] ( move ul , ul ; move ua , ul )  | ( move ul , ua + ul ; move ua , ul )  | ( move ul , ul ; move ua , ua + ul )  | ( move ul , ul ; move ua , ul - ua )  | ( move ul , ul - ua ; move ua , ul )  | ( move ul , ul ; pen ul ; move ua , ul )  | ( move 2 - ul , ua + ul ; move ua , ul )  | ( move ul , ul ; move ua , ul ; v0 = 2 )  | ( move ul , ul ; move ua , ul ; v0 = ul )  | ( move ul , ul ; v0 = ul ; move ua , ul )  | ( move ul , ul ; move ua , ul ; pen ua + ul )  | ( move ul , ul ; pen ul ; move ua , ul - ua )  | ( move ul , ul ; v0 = ua ; move v0 , ul )  | ( v0 = ul ; move v0 , v0 ; move ua , ul )  | ( v0 = ul ; move ul , v0 ; move ua , v0 )  | ( move 2 - ul , ul ; move ua , ul ; pen 3 - 2 )  | ( ( move 4 - 3 , ul ; move ua , ul ) ; pen ul )  | ( move ul , ul ; move ua , ul ; move 0 , ul / 2 )  | ( v0 = ul / 3 ; move ul , ul ; move ua , ul )  | ( v0 = 0 ; move ul , ul ; move ua , ul / v0 )  | ( move ul , ul ; ( v0 = ua ; move v0 , ul ) )  | ( move ul , ul ; ( v0 = ul ; move ua , v0 ) )  | ( move ul , ul ; ( move ua , 3 - 2 ; move 0 , 0 ) )  | ( ( v0 = ul ; move ul , v0 ) ; move ua , v0 )  | ( ( v0 = ul ; move v0 , ul ) ; move ua , v0 )  | ( ( v0 = ul ; move v0 , v0 ) ; move ua , ul )  | ( move ul , ul ; v0 = ua ; move v0 , ul - v0 )  | ( ( move ul , ul - ua ; move ua , ul ) ; pen ua * 3 )  | ( v0 = ul ; move v0 , ul ; move v0 * ua , v0 )  | ( move ul , ul ; ( move ua , ul ; v0 = ul ) ; pen 4 )  | ( move ul , ua + ul ; ( pen ul ; move ua , ul ) ; pen 0 )  | ( ( move ul , ul ; move ua , ul ; v0 = ul ) ; pen v0 )  
[700] ( move ua , ul ; move ul , ul )  | ( move ua , ul ; move 3 - 2 , ul )  | ( move ua , ul ; move 2 - ul , ul )  | ( move ua , ua + ul ; move ul , ul )  | ( move ua , ul ; move ul , ua + ul )  | ( move ua , ul ; move ul , ul ; pen ul )  | ( move ua , ua + ul ; move ul , ua + ul )  | ( ( move ua , ul ; move ul , ul ) ; pen 3 )  | ( move ua , ul ; v0 = ua ; move ul , ul )  | ( move ua , ul ; move ul , ul ; v0 = ul )  | ( move ua , ul ; move ul , ul ; pen 2 - ua )  | ( move ua , ul ; v0 = ul ; move ul , v0 )  | ( v0 = ul ; move ua , v0 ; move ul , v0 )  | ( v0 = ul ; move ua , ul ; move v0 , v0 )  | ( move ua , ul ; v0 = ul ; move v0 , v0 )  | ( move ua , ul ; move ul , ul ; v0 = 0 - 3 )  | ( ( move ua , ul ; move ul , ul ) ; v0 = 0 )  | ( move ua , ua + ul ; move ul , ul ; move 0 , 4 )  | ( move ua , ul ; v0 = 2 / ua ; move ul , ul )  | ( ( move ua , ul ; move ul , ul ) ; v0 = ul )  | ( v0 = ul ; move ua , v0 ; move v0 , v0 )  | ( move ua , ul ; move 2 - ul , ul ; pen ua + ul )  | ( v0 = 4 - 3 ; move ua , v0 ; move ul , ul )  | ( v0 = ua ; move v0 , ul ; move ul , 2 - ul )  | ( v0 = ul ; ( move ua , v0 ; move ul , ul ) )  | ( ( v0 = ul ; move ua , v0 ) ; move v0 , ul )  | ( move ua , ul - ua ; move ul , ua + ul ; v0 = 4 )  | ( v0 = ul ; ( move ua , v0 ; move v0 , v0 ) )  | ( pen ul / 3 ; ( move ua , ul - ua ; move ul , ul ) )  | ( move ua , ua + ul ; move ul , ua + ul ; pen ua / 3 )  | ( ( move 0 , 0 ; pen ul ; move ua , ul ) ; move ul , ul )  | ( ( move ua , ul ; move ul , ul ; pen ua + ul ) ; pen ua + 3 )  
[701] ( move 0 - 3 , 0 ; move 3 , 0 )  | ( move 3 , 0 ; move 4 - ua , 0 )  | ( move 3 , 0 ; move 4 - ua , ua )  | ( move ul , 0 ; move ul - 4 , ua )  | ( move 3 , ua ; move ul - 4 , ua )  | ( move 3 , 0 ; move 2 - 4 , 0 ; pen ua )  | ( move 3 , 0 ; move ul , ua / 2 ; move 0 , 0 )  | ( ( move 3 , ua ; move ul - 2 , 0 ) ; pen 4 )  | ( move ul , 0 ; v0 = ul ; move ul - 4 , ua / v0 )  
[702] ( move 0 - 2 , 0 ; move 3 , 2 )  | ( move 2 - 4 , ua ; move 4 - ul , 2 )  | ( move ul - 3 , ua ; move 3 , ua + 2 )  | ( ( move ul - 3 , ua ; v0 = 2 ) ; move 3 , v0 )  
[703] ( move 3 , 0 ; move 2 , 3 + 3 )  | ( move 3 , ua ; move 2 , 3 * 2 )  
[704] ( move 0 - 2 , 0 ; move 4 , 4 )  | ( move ul - 3 , 0 ; move 4 , 3 + ul )  
[705] ( move 2 , 3 ; move 3 , 0 - 3 )  | ( move 3 , ua / 2 ; ( move 2 , 3 ; pen ul ) )  
[706] ( move 3 + 3 , 0 ; move 4 , 2 )  | ( move 4 + 2 , ua ; move 4 , 2 - ua )  
[707] ( move 3 + 2 , 0 ; move 3 , 4 )  | ( move 4 + ul , ua + ua ; move 3 , 4 ; pen 4 )  | ( move 4 + ul , 0 ; move 3 , 4 ; v0 = ul + ul )  
[708] ( move 0 - 4 , 0 ; move 4 , 3 )  | ( move 3 - ua , ua ; move 4 , 3 )  
[709] ( move 3 , 0 ; move 0 - 4 , 4 )  | ( move 2 + ul , ua ; move 0 - 4 , 4 )  
[710] ( move 3 , 4 + 2 ; move 2 , 2 )  | ( move 3 , 3 * 2 ; move 2 , 2 )  | ( move 2 + ul , 3 + 3 ; v0 = 2 ; move v0 , v0 )  | ( move 0 , ua + 2 ; move 3 , 3 + ul ; move ul + ul , 2 )  
[711] ( move 2 , 3 ; move 4 , 0 - 3 )  
[712] ( move 2 , 2 ; move 2 , 4 + 3 )  
[713] ( move 2 , 4 ; move 4 , 0 - 2 )  
[714] ( move 3 + 2 , 4 ; move 2 , 2 )  | ( move 4 + ul , 4 ; move ul + ul , 3 - ul )  
[715] ( move 3 , 0 ; move 4 * 2 , 2 )  | ( move 3 , 0 ; move 4 + 4 , 3 - ul )  
[716] ( move 3 + 2 , 2 ; move 2 , 4 )  | ( move 4 , 2 ; move ul , 0 ; move 2 , 4 )  | ( move 3 + 2 , ul + ul ; move ul + ul , ua + 4 )  
[717] ( move 3 , 0 ; move 2 , 3 - 4 )  | ( move 2 + ul , ua ; move 2 , 3 - 4 )  | ( move 2 + ul , ua ; move 2 , ua - ul )  | ( move 3 , ua ; move 2 , 0 - ul ; v0 = 0 )  | ( move 3 , ua ; move 2 , ua - ul ; move 0 , ul )  
[718] ( move 2 , 0 ; move 4 + 3 , 4 )  
[719] ( move 2 , 0 ; move 3 , 3 / 2 )  
[720] ( move 2 , 3 ; move 4 + 2 , 2 )  | ( move 2 , 3 ; move 4 + 2 , ua + 2 )  | ( move 2 , 3 ; move 3 + ul , 2 ; move 3 - ul , ua + ua )  
[721] ( move 0 , 4 + 4 ; move 4 , 2 )  | ( move 0 , 3 * 2 ; move 4 , 4 )  | ( move 0 , 2 ; move 4 , 4 * 2 ; pen ua )  | ( move ul / ua , 4 * 2 ; v0 = 2 ; move 4 , v0 )  | ( move 0 , 4 - ua ; ( pen 0 ; pen ul ; move 4 , 3 + 3 ) )  
[722] ( move 4 , 0 ; move 3 , 3 * 2 )  
[723] ( move 2 - 4 , 0 ; move 4 , 3 )  | ( move ul - 3 , ua ; move 4 , 3 )  
[724] ( move 4 , 3 + 2 ; move 3 , 2 )  | ( move 4 , 4 + ul ; move 2 + ul , ul + ul )  
[725] ( move 4 , 0 ; move 4 , 2 - 3 )  | ( move 4 , 0 ; move 4 , ua - ul )  | ( move 4 , ua ; move 4 , ua - ul )  | ( move 2 + 2 , 0 ; move 4 , 2 - 3 )  | ( move 3 + ul , ua ; pen ul ; move 4 , ua - ul )  
[726] ( move 4 , 0 ; move 4 , 4 + 2 )  | ( pen ul ; move 4 , 0 ; move 4 , 3 + 3 )  
[727] ( move 4 , 0 ; move 4 * 2 , 2 )  
[728] ( move 2 , 4 ; move 3 , 3 + 2 )  | ( move 3 - ul , 4 ; ( move 0 , 2 ; move 3 , 3 ) )  
[729] ( move 3 * 2 , 2 ; move 3 , 2 )  | ( move 4 / 2 , ua + 2 ; move 4 , 0 ; move 3 , ul + ul )  
[730] ( move 4 , 4 ; move 4 , 0 - 2 )  | ( move 4 , 4 ; ( move 4 , ua - 2 ; move 0 , 3 ) )  
[731] ( move 3 , 2 ; move 3 , 4 + 3 )  
[732] ( move 2 - 3 , 2 ; move 3 , 4 )  | ( move ul , 4 + ul ; move 3 , ul )  | ( move ul , 4 + ul ; move 3 , ua + ul )  | ( move ul , 4 + ul ; move 3 , ul ; pen 3 )  | ( move ul , 4 + ul ; v0 = ul ; move 3 , v0 )  
[733] ( move 4 , 3 ; move 3 , 3 + 2 )  | ( v0 = 4 ; move v0 , 3 ; move 3 , v0 + ul )  
[734] ( move 4 , 2 ; move 2 , 2 - 4 )  
[735] ( move 2 , 4 ; move 0 - 4 , 4 )  
[736] ( move 3 , 4 + 3 ; move 2 , 3 )  | ( move 2 , 3 + ul ; move 3 , 3 )  
[737] ( move 3 , 4 ; move 0 - 4 , 3 )  | ( move 3 , 4 ; move 3 - ua , 3 )  
[738] ( move 3 , 4 ; move 4 + 2 , 2 )  
[739] ( move 2 , 2 ; move 4 , 3 - 4 )  | ( move 2 , 2 ; move 2 * 2 , ul - 2 )  | ( move 2 , ul + ul ; move 4 , ua - ul )  
[740] ( move 2 , 3 ; move 3 , 2 / 3 )  
[741] ( move 4 , 3 ; move 2 - 3 , 3 )  
[742] ( move 4 + 2 , 2 ; move 4 , 4 )  
[743] ( move 2 , 4 * 2 ; move 4 , 2 )  
[744] ( move 4 * 2 , 2 ; move 3 , 3 )  | ( move ua + 2 , 2 ; move 4 , 3 )  
[745] ( move 3 , 4 * 3 ; move 3 , 2 )  
[746] ( move 3 , 3 ; move 3 , 3 * 3 )  
[747] ( move 4 * 2 , 4 ; move 3 , 2 )  
[748] ( move 2 , 4 ; move 3 , 4 * 2 )  
[749] ( move 2 + 4 , 4 ; move 4 , 4 )  | ( move 3 * 2 , 3 + ul ; move 4 , 4 )  | ( move 3 * 2 , 4 ; v0 = 4 ; move v0 , v0 )  | ( ( move 4 + 2 , 4 ; v0 = 3 + ul ) ; move v0 , 4 )  
[750] ( move 3 / 2 , 2 ; move 4 , 4 )  
[751] ( move 3 , 4 * 3 ; move 4 , 2 )  
[752] ( move 3 , 3 ; move 4 , 4 * 2 )  
[753] ( move 4 , 2 ; move 4 * 2 , 4 )  
[754] ( move 4 , 0 ; move 4 , 4 / 3 )  
[755] ( move 4 , 4 ; move 4 + 3 , 3 )  
[756] ( move 2 , 4 ; move 4 , 3 / 2 )  | ( ( move 2 , 4 ; move 0 , ul / 2 ) ; move 4 , ul ; pen ul )  
[757] ( move 3 , 3 ; move 4 , 4 * 3 )  
[758] ( move 3 , 3 / 4 ; move 3 , 4 )  
[759] ( move 4 , 4 * 4 ; move 4 , 3 )  
[760] ( pen 2 ; move 2 * 2 , 4 + 2 )  | ( pen 3 - ul ; move 4 , 3 + 3 ; v0 = 3 )  | ( pen ua ; ( v0 = 4 + 2 ; pen 2 ; move 4 , v0 ) )  
[761] ( pen 3 ; move 4 * 2 , 3 + 2 )  | ( pen 2 + ul ; move 4 * 2 , 4 + ul )  
[762] ( move 2 , 0 ; move 0 - ua , 0 )  | ( move ua , 0 ; move 2 - ua , 0 )  | ( move ua , 0 ; move ul - 4 , 0 )  | ( move 3 , 0 ; move ua , ua / 2 )  | ( move ua , ua ; move 4 - ua , 0 )  | ( move 4 , ua ; move 0 - ua , ua )  | ( move ua , ua ; move 0 - 4 , ua )  | ( move ua , ua ; move 4 , ua / 2 )  | ( move ua , ua ; move 2 - ua , ua )  | ( move ua , ua * 3 ; move 2 - ua , ua )  | ( move ua , 0 ; move ul - 4 , 0 ; pen 2 / 3 )  | ( move ua , 0 ; move 2 - ua , ua ; v0 = 2 )  | ( move ua , ua ; move 3 - ua , 0 ; v0 = ul )  | ( move 3 + 3 , 0 ; move 0 - 3 , 0 ; pen 2 / ua )  | ( move 3 , ua ; v0 = 4 * 3 ; move ua - v0 , 0 )  | ( pen 2 - ul ; move ua , ua ; ( move 2 - ua , 0 ; pen ua ) )  
[763] ( pen 4 ; move 4 + 2 , 4 * 2 )  
[764] ( move 0 - 2 , 0 ; move 2 , ua )  | ( move 2 , 0 ; move ul - 3 , ua )  | ( move ul - 3 , ua ; move 2 , 0 )  | ( move ul - 3 , ua ; move 2 , ua )  | ( move 0 - 2 , ua ; move 2 , ua * 3 )  | ( ( move 2 , ua ; move 4 - ua , ua ) ; move ul , 0 )  
[765] ( move 2 , 0 ; move ua , 0 - 2 )  | ( move 2 , ua ; move ua , 0 - 2 )  | ( move 2 , ua ; move ua , ul - 3 ; v0 = 4 + 3 )  | ( ( move 2 , ua ; move ua , ul - 3 ) ; v0 = ua )  
[766] ( pen 3 ; move 3 + 2 , 4 / 3 )  
[767] ( move 0 - 2 , 0 ; move 2 , ul )  | ( move 0 - 2 , ua ; move 2 , ul )  | ( move ul - 3 , 0 ; move 2 , ua + ul )  | ( move ul - 3 , ua * 2 ; move 2 , ul )  | ( move 2 - 4 , ul ; move 2 , 0 - ul ; pen ua / 4 )  
[768] ( move 2 , ua ; move 2 , 0 - 2 )  | ( move 2 , ua ; move 2 , ua - 2 )  
[769] ( move ua + 2 , 0 ; move 2 , 3 )  | ( move ua + 2 , ua ; move 2 , 3 )  | ( move 2 , 0 ; move ua , 0 ; move 2 , 3 )  | ( move ua , ua ; move 2 , ua ; move 2 , 3 )  | ( ( move ua + 2 , ua ; move 2 , 3 ) ; pen ua + ua )  
[770] ( move 0 - 2 , 0 ; move 3 , ul )  | ( move 2 - 4 , ua ; move 3 , ul )  
[771] ( move 3 , 0 ; move ua , 0 - 3 )  | ( move 3 , 0 ; move ua , ua - 3 )  | ( move ul , 0 ; move 2 , ua ; move ua , ua - 3 )  
[772] ( move 2 , 0 ; move ua , 3 + 2 )  | ( move 2 , 0 ; move ua , 4 + ul )  | ( move 2 , ua ; move ua , 3 + 2 )  | ( move 2 , ua ; move ua , 4 + ul )  | ( move ul + ul , ua ; move ua , 4 + ul )  
[773] ( move ua , 0 ; move 3 , 0 - 4 )  
[774] ( move 3 , 0 ; move ua - 2 , 2 )  
[775] ( move 3 , ua ; move 2 , 0 - 2 )  | ( move 3 , ua ; move 2 , ua - 2 )  | ( pen ul ; move 2 + ul , ua ; move ul + ul , ua - 2 )  
[776] ( move 2 , 0 ; move ua , 4 + 2 )  | ( ( move 2 , ua ; move ua , 3 + 3 ) ; move 0 , ua )  
[777] ( move 2 , ul ; move 0 - 2 , 2 )  | ( move 2 , ul ; move 2 - 4 , ua + 2 )  | ( move 2 , ul ; move 2 - 4 , 2 ; ( pen ua ; pen ul ) )  
[778] ( move 4 + 2 , 0 ; move ua , 2 )  | ( move 4 + 2 , ua ; move ua , 2 )  | ( move 3 * 2 , 0 ; move ua , ul + ul )  
[779] ( move 2 , 0 ; move ua + 2 , 4 )  | ( move 2 , ua ; move ua + 2 , 4 )  | ( move 2 , 0 ; move 4 * 2 , 4 ; pen 3 )  
[780] ( move 2 , 0 - 2 ; move ua , 4 )  | ( move 2 , ua - 2 ; move ua , 4 )  | ( move 2 , ul - 3 ; move ua , 4 ; v0 = ua )  
[781] ( move 0 - 2 , ua ; move 2 , 4 )  | ( move ul - 3 , ua ; move 2 , 3 + ul )  | ( move ul - 3 , 0 ; v0 = 3 ; move 2 , 4 )  | ( move ul - 3 , 0 ; move 2 , 4 ; move 0 , ua )  
[782] ( move 0 - 3 , 0 ; move 4 , ul )  | ( move 0 - 3 , ua ; move 4 , ul )  | ( move 0 , 0 ; move ul - 4 , 0 ; move 4 , ul )  | ( ( move ul , ua ; move ul - 4 , ua ) ; move 4 , ul )  | ( move ul - 4 , 0 ; v0 = 2 + ul ; move ul + v0 , ul )  
[783] ( move ul , 0 ; move 3 , 3 + 2 )  | ( move ul , 0 ; move 3 , 4 + ul )  | ( move ul , 0 - ua ; move 3 , 4 + ul )  | ( move ul , 0 ; move 3 , 4 + ul ; pen ua )  | ( move ul , 0 ; move 2 , 4 + ul ; move ul , 0 )  | ( move ul , ua ; move 0 , ul ; move 2 + ul , 4 )  | ( move ul , ua ; move 2 + ul , 4 + ul ; move 0 , 0 )  
[784] ( move 2 , 3 + 2 ; move ua , 2 )  | ( move 2 , 3 + 2 ; ( move ua , ua + 2 ; move 0 , 0 ) )  
[785] ( move 4 + ul , 0 ; move 2 , 2 )  | ( move 2 , ua ; move 3 , 0 ; move 2 , ul + ul )  
[786] ( move 3 , 0 ; move 2 - ua , 3 )  | ( move 4 , 3 ; move 0 - 3 , ul - 4 )  
[787] ( move ua + 2 , 0 ; move 4 , 3 )  | ( pen ul ; move ua + 2 , ua ; move 4 , 3 )  
[788] ( move 2 , 0 ; move ua + 3 , 4 )  
[789] ( move 2 , ua - 2 ; move 2 , 2 )  | ( move 3 - ul , ul - 3 ; move 2 , 2 )  | ( move 3 - ul , ua - 2 ; move 3 - ul , 2 )  | ( move 2 , ua / 2 ; move ul + ul , ua - 2 )  
[790] ( move 4 , 0 ; move ua - 2 , 2 )  
[791] ( move 0 - 2 , 3 ; move ua , 3 )  
[792] ( move ua , 0 ; move 2 , 4 + 3 )  
[793] ( move 2 , 3 ; move ua + 2 , 2 )  | ( move ul + ul , 2 + ul ; move ua + 2 , 2 )  | ( v0 = 4 / 2 ; move v0 , 3 ; move ua + v0 , v0 )  
[794] ( move 3 , 3 ; move 2 , 0 - ul )  | ( move 3 , 3 ; v0 = 2 ; move v0 , ul - v0 )  | ( move 0 , ul ; ( move 3 , 2 ; move ul + ul , ua - ul ) )  
[795] ( move ua , 0 ; move 2 - 4 , 3 )  | ( move ua , ua ; move ul - 3 , 3 )  | ( move 3 , 3 ; move ul - ua , ul - 4 )  
[796] ( move ua , 3 + 3 ; move 2 , 2 )  | ( move ua , 3 * 2 ; v0 = 2 ; move v0 , v0 )  
[797] ( move 3 , 0 ; move 4 + ul , 2 )  | ( move 2 + ul , 0 ; move 4 + ul , 2 )  
[798] ( move ua , 4 ; move 0 - 3 , 2 )  
[799] ( move 3 , ul ; move 0 - 2 , 3 )  | ( move 3 , ul ; move ul - 3 , 3 )  
[800] ( move 4 , 3 ; move 0 - ua , 2 )  
[801] ( move 3 + 2 , 0 ; move ul , 4 )  | ( move 4 + ul , ua ; move ul , 4 )  | ( move 4 + ul , ua ; move ul , 4 ; pen ul )  | ( move 3 , ua ; move 3 - ul , 0 ; move ul , 4 )  | ( move 3 + ul , 0 ; move 3 - 2 , ua ; move ul , 4 )  | ( move 4 + ul , ua ; ( move ul , 4 ; pen 4 ; pen 4 * 2 ) )  
[802] ( move 4 , 2 ; move 2 , 0 - ul )  | ( move 4 , 2 ; move 2 , ua - ul )  | ( move 4 , ua + 2 ; move 3 - ul , ua - ul )  | ( move 0 , ul ; move 4 , ul ; move 4 - 2 , 3 - 4 )  
[803] ( move ul - 2 , 0 ; move 3 , 3 )  | ( move 0 - ul , ua * 3 ; move 3 , ua + 3 )  | ( pen ul ; move ul - 4 , 3 ; move ul , ul - 4 )  | ( move 0 , 0 ; move 0 - ul , 0 ; move 3 , 4 - ul )  | ( move ul - 2 , ua + ua ; v0 = 3 ; move v0 , v0 )  
[804] ( move 4 + ul , 0 ; move 2 , 3 )  | ( move ua - ul , ua ; move ua / 3 , 3 )  | ( move 4 , ua ; move ul , ua ; move 2 , 3 )  
[805] ( move 2 , ua ; move 3 + 2 , 3 )  | ( move 2 , ua ; move 4 + ul , 3 )  | ( move 2 , 0 ; move 4 + ul , ua + 3 )  | ( move ua - 4 , ua ; move 4 + ul , 2 + ul )  | ( move 2 , 0 ; ( move ul , 3 ; move 4 , 0 ) )  | ( move 2 , 0 ; move ua - ul , 3 ; v0 = ua )  | ( move ul + ul , ua ; move ua - ul , 3 ; v0 = 3 )  | ( ( move ul + ul , 0 ; move ua - ul , 3 ) ; v0 = ul )  
[806] ( move 4 * 2 , 0 ; move ua , 2 )  | ( move 3 + ul , ua ; move 4 , ua ; move ua , 2 )  | ( move 2 , ua * 2 ; move 3 * 2 , ua ; move ua , ua + 2 )  
[807] ( move 2 , ul ; move 0 - 3 , 3 )  | ( move 2 , ul ; move ul - 4 , 3 )  
[808] ( move 3 , ua ; move 0 - 3 , 3 )  | ( move 3 , ua ; move 0 - 3 , 4 - ul )  | ( move 3 , ua + ua ; move ul - 4 , 3 )  | ( ( move 3 , 0 ; move ul - 4 , 3 ) ; pen 3 )  
[809] ( move 2 , 2 ; move ua + 4 , 2 )  
[810] ( move 4 , 0 ; move 3 + 2 , ul )  | ( move 4 , 0 ; move 4 + ul , ul )  | ( move 4 , ua ; move 4 + ul , ul )  | ( move 2 + 2 , ua ; move 4 + ul , ul )  | ( move 4 , 0 ; move 4 + ul , ul ; move 2 , ua + 3 )  
[811] ( move 4 + 3 , 0 ; move ua , 3 )  | ( move ua + ul , 0 ; move ua , 3 )  | ( move ua + ul , ua ; move ua , 3 )  | ( move ua + ul , 0 ; move ua , 2 + ul )  | ( move ua + ul , 0 ; move ua , ua + 3 )  | ( move ua + ul , ua * 3 ; move ua , 3 )  | ( move ua + ul , ua ; move ua , 2 + ul )  | ( move ua + ul , 0 ; ( pen ul ; move ua , 3 ) )  | ( move ua + ul , ua ; v0 = ua ; move v0 , 3 )  | ( v0 = ua ; move ua + ul , v0 ; move v0 , 3 )  | ( move ua , 0 ; move ul , ua ; ( move ua , 3 ; pen ul ) )  
[812] ( move 3 , 0 ; move ua - 4 , 2 )  
[813] ( move 2 , 0 ; move 3 , ul - 3 )  
[814] ( move 4 , 0 ; move 0 - 4 , ul )  
[815] ( move 3 + 2 , 0 ; move 4 , ul )  | ( move 4 + ul , 0 ; move 4 , ul )  | ( move 4 + ul , ua ; move 4 , ul )  | ( move 4 + ul , ua ; move 4 , ua + ul )  | ( move 2 , ua ; move 3 , 0 ; move 4 , ul )  | ( pen ul ; move 3 + 2 , 0 ; move 4 , ul )  | ( move 3 , ua ; move 2 , ua ; move 4 , ua + ul )  
[816] ( move 3 , 2 - ua ; move 2 , 2 )  | ( move 3 , 2 ; move 2 , 2 ; pen 0 )  | ( move 3 , 2 ; v0 = 2 ; move v0 , v0 )  | ( move 3 , 2 ; move 2 , ul + ul ; v0 = ua )  | ( move 3 , ul + ul ; move 0 , ul ; move 2 , 2 - ul )  | ( move 0 , ua ; move 3 , ul + ul ; move ul + ul , 2 )  | ( ( move 3 , 2 ; move ul , 2 ) ; move ul , 0 ; v0 = 4 )  
[817] ( move 3 , 3 ; move 0 - ul , 2 )  | ( move 2 + ul , 3 ; move ul , 4 + ul )  
[818] ( move 4 , 0 ; move 2 , ul - 2 )  | ( move 4 , ua ; move 2 , ua - ul )  | ( move 4 , ua * 2 ; move 2 , ua - ul )  | ( move 4 , 0 ; ( v0 = ua - ul ; move 2 , v0 ) )  
[819] ( move 3 , 3 ; move ua + 3 , 2 )  
[820] ( move ul , 3 ; move 0 - 3 , 3 )  | ( move ul , 3 ; move ul - 4 , 3 )  | ( ( move ul / ua , 4 ; move 0 , ul ) ; move 4 , ul )  
[821] ( move ua , 0 ; move 4 + 3 , 4 )  | ( move ua , ua * 3 ; move 4 + 3 , 4 )  | ( move ua , 0 ; move 4 , 4 ; move 3 , ua )  
[822] ( move ua , 2 ; move 2 - 4 , 2 )  
[823] ( move ul - 3 , 2 ; move 2 , 2 )  
[824] ( move ua , 3 + 2 ; move 4 , 2 )  | ( move ua , 4 + ul ; move 4 , ul + ul )  | ( move ua , 4 + ul ; move 4 , 2 ; v0 = 2 )  
[825] ( move ua , 4 ; move 3 + 2 , 2 )  | ( move ua , ua + 4 ; move 4 , 4 / 2 ; move ul , ua )  
[826] ( move ul , 0 ; move 4 , 3 + 3 )  | ( move ul , 0 ; move 4 , 3 * 2 )  | ( move ul , ua ; move 4 , 3 + 3 )  | ( move ul , 0 ; ( move 0 , 2 ; move 4 , 4 ) )  
[827] ( move 2 , ua - 4 ; move 2 , 2 )  | ( move 2 , 0 - 4 ; move 2 , 2 ; ( pen 0 ; pen ua ) )  | ( v0 = ul - 3 ; move v0 , v0 ; move v0 , v0 )  
[828] ( move 0 , 3 * 2 ; move ua , 4 )  | ( move ul / 4 , 4 + 2 ; move ua , 4 )  | ( move 0 , 4 + ul ; move ua , 4 + ul )  | ( v0 = 3 * 3 ; move ua , ul + v0 )  | ( move 0 , 4 + 3 ; v0 = ua * ua ; move ua , 3 )  
[829] ( move 4 + ul , 0 ; move 4 , 2 )  | ( move 4 + ul , ua ; move 4 , 2 )  | ( move 4 + ul , ua ; move 2 + 2 , 2 )  | ( ( move 4 + ul , ua ; move 4 , 2 ) ; pen 4 )  | ( ( move 4 , ua ; move ul , ua ) ; move 4 , 2 )  | ( move 4 + ul , 0 ; move 4 , ul + ul ; pen ul )  
[830] ( move ua , 2 ; move 3 , 4 + 2 )  | ( move ua , 2 - ua ; move 3 , 3 * 2 )  
[831] ( move 3 , 3 ; move 0 - 3 , ul )  | ( move 2 + ul , 3 ; move ul - 4 , ul )  | ( ( move 3 , 4 ; v0 = ua / 3 ) ; move 3 , v0 )  
[832] ( move ua + 2 , 3 ; move 3 , 3 )  | ( v0 = 3 ; move v0 * 3 , 3 ; move v0 , v0 )  | ( v0 = 3 ; move 3 * v0 , v0 ; move v0 , v0 )  
[833] ( move 2 + ul , 2 ; move 4 , 2 )  | ( move 3 , ua + 2 ; move 4 , 2 )  | ( move 3 , 2 - ua ; move 3 + ul , 2 ; pen 3 )  | ( move 3 , ul + ul ; move 4 , 4 / 2 ; v0 = 2 )  | ( move 3 , 2 - ua ; move 4 - ul , 2 ; move ul , 0 )  
[834] ( move 3 , 0 ; move ua , 3 * 3 )  | ( move 4 , 0 ; move ua , 3 * 3 )  
[835] ( move 3 , 2 ; move 3 + 2 , ul )  | ( move 3 , 2 ; move 4 + ul , ul )  | ( move 3 , 2 ; move 4 + ul , ul ; v0 = ua )  | ( ( move 3 , 2 ; move 4 + ul , ul ) ; pen 2 ; pen 2 )  
[836] ( move 4 + 3 , 0 ; move ul , 3 )  | ( move ua + ul , 0 ; move ul , 3 )  | ( v0 = 2 + ul ; move 4 + v0 , 0 ; move ul , v0 )  | ( move ul , ua ; pen ul ; ( move ua , ua ; move ul / 2 , 3 ) )  
[837] ( move 2 , ua ; move 3 * 2 , 2 )  | ( move 2 , ua ; move 3 + 3 , ul + ul )  | ( move 2 , ua ; move 4 , 2 ; move 2 , 0 )  | ( move ul - 3 , 3 ; move ua , ua - ul )  | ( move 2 , ua ; move 2 + ul , 2 ; move 3 , ua )  | ( ( move 2 , ua ; move 3 * 2 , 2 ) ; v0 = ul )  | ( move ua / 3 , 0 ; move 4 + ul , 2 ; move ul , ua )  
[838] ( move ua , 0 ; move 3 , 4 + 4 )  
[839] ( move 0 - 4 , 2 ; move ul , 3 )  | ( move 4 , 2 ; move ul , ul / ua )  
[840] ( move ua - 2 , 3 ; move 3 , 2 )  
[841] ( move 4 , 0 ; move 4 + ul , 2 )  | ( move 4 , ua ; move 4 + ul , ul + ul )  | ( move 4 , ua ; move 2 , 2 ; move 3 , ua )  | ( move 4 , ua ; move 4 , 2 ; move ul , ua )  | ( move 4 , ua ; move 4 , 2 ; move ul , ul / ua )  | ( move 4 , ua ; move ul , ul + ul ; move 4 , ua )  
[842] ( move 4 , 0 - 3 ; move ul , 2 )  
[843] ( move ul , 0 ; move 3 , 3 * 2 )  | ( move ul , ua ; move 2 + ul , 3 + 3 )  | ( move ul , 0 ; move 3 , 3 * 2 ; pen ua )  | ( move ul , ua * 3 ; move 4 - ul , 4 + 2 )  | ( move ul , ua ; move 3 , 3 * 2 ; pen ul / 3 )  
[844] ( move ua , 4 + 2 ; move 2 , 3 )  
[845] ( move 3 , ua ; move 3 - 4 , 0 )  | ( move ul , 0 ; move 3 - ua , 0 )  | ( move 3 , ua ; move ul - 2 , 0 )  | ( move 3 , ua ; move 0 - ul , ua )  | ( move ul , ua ; move 3 - ua , 0 )  | ( move ul , 0 ; move 3 - ua , ua )  | ( move 3 , ua ; move ul - 2 , ua )  | ( move ul , ua ; move 3 - ua , ua )  | ( move ul , ua * 2 ; move 3 - ua , ua )  | ( move ul , ua ; pen 4 / 3 ; move 3 , ua / 2 )  | ( move 2 - ul , 0 ; move ul - 4 , 0 ; move 0 , 4 )  | ( ( move 3 , ua ; move 3 - 4 , 0 ) ; v0 = ul )  | ( move ua - 3 , 0 ; v0 = ua ; move 3 - 4 , v0 )  | ( ( move ul , ua ; v0 = ua / 2 ) ; move v0 , v0 )  | ( move ul , 0 ; move ul - 4 , ua * 3 ; v0 = ua - 3 )  
[846] ( move 2 , 0 ; move 3 * 3 , ul )  | ( move 3 - ul , ua ; move 4 , ua + ul ; move 3 + 2 , 0 )  
[847] ( move ua - 3 , 0 ; move 3 , 4 )  
[848] ( move 2 , 3 ; move 3 - ua , 2 )  
[849] ( move ul , 0 - 3 ; move 4 , 2 )  | ( move ul , ua - 3 ; move 4 , ul + ul )  
[850] ( move 0 , 2 ; move ua , 2 / 4 )  | ( move 0 , ul / 2 ; move ua , 2 ; pen ul )  | ( move 0 , 2 / 4 ; v0 = 2 ; move ua , v0 )  | ( move 0 , ul / 2 ; move ua , ua + 2 ; pen ul )  
[851] ( move 2 , 2 ; move 3 , 3 + ul )  | ( move ul + ul , 2 ; move 3 , 4 )  | ( move 2 , 4 / 2 ; move 3 , 4 ; pen 2 * 2 )  | ( move 2 , 2 ; ( move 3 , 4 ; v0 = ul ) )  
[852] ( move 0 - 2 , 3 ; move 4 , ul )  | ( move 4 - ua , 3 ; move 4 , ul )  | ( ( move ul - 3 , 3 ; move 4 , ul ) ; v0 = 4 )  
[853] ( move ua + 2 , 2 ; move 3 , 4 )  
[854] ( move 0 - 4 , ul ; move 3 , 2 )  
[855] ( move ua , 4 ; move 0 - 2 , 4 )  
[856] ( move 4 + 3 , 2 ; move 2 , ul )  | ( move 3 + ul , 4 - 2 ; move 3 , 0 ; move ul + ul , ul )  | ( move 2 , 2 ; move 2 , ua ; ( move 3 , ua ; move 2 , ul ) )  
[857] ( move 3 , 4 ; move ua - 2 , 2 )  
[858] ( move 3 , 2 ; move ua - 3 , 3 )  | ( move 3 , ul + ul ; move 3 , 3 )  | ( move 0 , 2 - ul ; move 3 , ul ; move 3 , 3 )  | ( move 3 , 2 ; ( pen ul ; move 3 , 3 ) ; v0 = 3 + 2 )  
[859] ( move ua , 3 ; move 2 - 3 , 3 )  | ( move ul - 2 , ua ; move ua , 3 )  | ( move ul - 2 , ua ; move ua , 3 ; move ul + ul , 3 )  | ( move 0 - ul , ua * 4 ; move ua , 2 + ul ; pen ua )  | ( ( move 3 - 4 , ua ; move ua , 3 ) ; move 0 , ua * ua )  
[860] ( move 3 , 0 ; move ul , 2 / 3 )  | ( move 3 , ua ; move ul , 2 / 3 ; v0 = 2 )  
[861] ( move ua - 2 , 3 ; move 4 , 2 )  
[862] ( move 4 , 0 ; move ua , 4 * 2 )  | ( v0 = 4 ; move v0 , ua ; move ua , v0 + v0 )  
[863] ( move 2 + ul , 4 ; move 2 , 3 )  | ( move ua - 3 , 4 ; move 2 , 3 )  | ( move 3 , 4 ; v0 = ul ; move 2 , 3 )  | ( v0 = 3 ; ( move v0 , ul + v0 ; move 2 , v0 ) )  
[864] ( move 4 , 0 ; move 3 , 2 / ua )  
[865] ( move 3 , 2 ; move 2 , ua - 4 )  | ( move ul , ul + ul ; move 2 , 0 ; move 2 , ua - 4 )  
[866] ( move ua , 4 ; move 4 + 2 , 2 )  
[867] ( move ua , 3 ; move 4 , 0 - 4 )  | ( move ua , 3 ; move 4 , ua - 4 ; v0 = 3 )  
[868] ( move 3 + 3 , 2 ; move ua , 4 )  | ( move 4 , ul + ul ; move 2 , 0 ; move ua , 4 )  | ( move 3 * 2 , ua + 2 ; ( move ua , 4 ; v0 = ul ) )  
[869] ( move 2 , ul ; move 3 , 2 * 2 )  | ( move 3 - ul , ul ; move 3 , 4 )  | ( move ul + ul , ul ; move 3 , 4 )  | ( move 4 / 2 , ul ; move 2 + ul , 4 )  | ( move 2 , ul ; move 3 , 4 ; move 0 , 4 )  | ( move ul , ul ; move ul , ua ; move 3 , 4 )  | ( move 2 , ul ; ( move 3 , 4 ; v0 = ua ) )  | ( ( move 2 , ul ; v0 = 4 ) ; move 3 , v0 )  | ( move 3 - ul , ul ; v0 = 4 ; move 3 , v0 )  | ( v0 = ul ; move 2 , ul / v0 ; move 3 , 4 )  
[870] ( move ul , 2 ; move 0 - 4 , 4 )  
[871] ( move 3 , ul ; move 2 , 3 + 3 )  
[872] ( move 4 , 2 ; move ul , 0 - 4 )  
[873] ( move 3 / 2 , 2 ; move ua , 2 )  | ( move 4 / 3 , 2 ; move ua , 2 )  
[874] ( move ul , 3 ; move 3 , 3 + 2 )  | ( move ul , 3 ; move 4 - ul , 4 + ul )  
[875] ( move 4 + ul , 2 ; move 2 , 3 )  | ( move ua - ul , ul + ul ; move 2 , 3 )  | ( move 4 + ul , ul + ul ; move 2 , 2 + ul )  
[876] ( move 4 , 0 ; move ua , 2 / 3 )  
[877] ( move 2 , 3 ; move 3 + 3 , ul )  | ( move 2 , 3 ; move 3 * 2 , ul )  
[878] ( move 2 , 0 ; move ul - 4 , 4 )  
[879] ( move 2 , ua ; move 2 , 3 - 4 )  | ( move 2 , 0 ; move 3 - ul , ua - ul )  | ( move 2 , ua ; move 3 - ul , ua - ul )  | ( move 2 , 0 ; move 2 , ul - 2 ; pen 2 )  | ( move 2 , ua ; move 2 , ua - ul ; pen 0 )  
[880] ( move 4 + 4 , 0 ; move ua , 4 )  | ( move 4 * 2 , ua ; move ua , 4 )  | ( move 4 + 4 , ua ; move ua , 4 )  | ( v0 = 4 ; move 4 + v0 , ua ; move ua , v0 )  
[881] ( move 2 , 3 ; move ua , 3 * 2 )  
[882] ( move 3 , 0 ; move 2 , 4 / ua )  | ( move 3 , ua ; move 2 , 4 / ua )  
[883] ( move 2 , 3 ; move ua + 3 , 4 )  
[884] ( move ua , 3 ; move 2 , 4 + 3 )  
[885] ( move ul , 0 ; move 4 + 3 , 4 )  | ( move ul , ua ; move ul / 2 , 4 ; move ua , ua )  
[886] ( move 4 , 4 ; move 0 - ul , 2 )  
[887] ( move 4 + 3 , 0 ; move ul , 4 )  | ( move ua + ul , ua ; move ul , 4 )  | ( move ua , 0 ; move ul , ua * 4 ; move ul , 2 * 2 )  | ( move ua , ua * 2 ; ( move ul , ua ; move ul , 4 ) )  | ( ( move ua + ul , ua ; v0 = ul ) ; move v0 , 3 + ul )  
[888] ( move 2 , 3 ; move ul - 3 , 2 )  
[889] ( move 2 , 4 ; move 3 , ua + 3 )  | ( move ul + ul , 4 ; move 3 , 3 )  | ( move 2 , 4 ; move 4 - ul , 3 - ua )  | ( move 3 - ul , 3 + ul ; move ua - 3 , 3 )  
[890] ( move 2 - ua , 4 ; move 3 , 2 )  
[891] ( move 4 , 0 ; move 2 , ul / 2 )  | ( move 4 , ua * 3 ; v0 = 2 / 4 ; move 2 , v0 )  
[892] ( move 0 - 4 , ul ; move 4 , 2 )  
[893] ( move ul , 2 ; move 3 + 2 , 4 )  | ( v0 = ua ; move ul , 2 ; move v0 - ul , 4 )  
[894] ( move 2 , 3 ; move 4 - ua , 2 )  
[895] ( move 2 , 4 ; move 3 + 2 , ul )  | ( move 2 , 4 ; move 4 + ul , ul )  | ( move 2 , 4 ; move 4 + ul , ul - ua )  | ( move ul + ul , 3 + ul ; move 4 + ul , ul )  | ( move 2 , 4 ; v0 = 4 + ul ; move v0 , ul )  
[896] ( move 4 , 4 ; move ua , 0 - 3 )  | ( move 3 + ul , 4 ; move ua , ua - 3 )  | ( move ua - 3 , 4 ; move ua , ul - 4 )  | ( v0 = 4 ; move 4 , v0 ; move ua , ul - v0 )  
[897] ( move 3 * 2 , 0 ; move 4 , ul )  | ( pen ul ; move 3 * 2 , 0 ; move 3 + ul , ul )  | ( move 3 * 2 , ua ; v0 = ul ; move 4 , v0 )  | ( ( move 3 + 3 , 0 ; v0 = ul ) ; move 4 , v0 )  
[898] ( move ua + 2 , 3 ; move 3 , 4 )  | ( move ua + ul , 2 + ul ; move ul , 0 ; move 2 + ul , 4 )  
[899] ( move 4 , 2 ; move ul - 2 , 2 )  | ( move 4 , ul + ul ; move ul , ul - 2 ; v0 = ul )  
[900] ( move ua - 3 , 0 ; move 4 , 4 )  
[901] ( move ua , 0 ; move 3 / 4 , 2 )  
[902] ( move 2 , 3 * 2 ; move 2 , ul )  | ( move 2 , 4 + 2 ; move ul + ul , ul )  
[903] ( move ua , 4 + 3 ; move 3 , 2 )  
[904] ( move 3 , 4 ; move 3 , 0 - ul )  | ( move 0 , 3 ; move 3 , ul ; move 3 , ul - 2 )  
[905] ( move 3 , 0 ; move 4 , 2 / ua )  
[906] ( move ua , 3 ; move 2 - 4 , 2 )  | ( move ua , ua + 3 ; move 0 - 2 , 2 ; v0 = 3 - ua )  
[907] ( move ua , 4 + 2 ; move 4 , 2 )  
[908] ( move 2 , 4 ; move 4 , ul + 2 )  | ( move 2 , 4 - ua ; move 4 , 2 + ul )  | ( move 2 , 4 ; move 4 , 3 ; v0 = 0 )  | ( move ul + ul , 4 ; move 4 , 3 ; pen ul )  
[909] ( move 3 , 3 ; move ul - 2 , 3 )  | ( move 3 , 3 ; move ul - 2 , 2 + ul )  | ( move 4 - ul , 3 ; move 0 - ul , 3 - ua )  
[910] ( move ua , 2 / 4 ; move 2 , 2 )  
[911] ( move 2 , 4 ; move ua - 4 , 2 )  | ( move ul + ul , 3 + ul ; move ua - 4 , 2 )  
[912] ( move 4 , 2 - 3 ; move ua , 3 )  | ( move 4 , ul - 2 ; move ua , 3 )  | ( move 4 , ua - ul ; move ua , 3 ; pen 4 )  | ( move 4 , ua - ul ; move ua , 3 ; v0 = ul )  | ( move 3 , 0 - ul ; ( move ul , ua + ua ; move ua , 3 ) )  
[913] ( move 3 , 3 - 4 ; move ua , 2 )  | ( move 2 + ul , ua - ul ; move ua , ua + 2 )  
[914] ( move 3 , 2 ; move 3 * 2 , ul )  
[915] ( move 4 , 3 ; move 3 - ua , 2 )  
[916] ( move ua , 4 ; move 2 , 3 * 2 )  | ( move ua , 4 ; move 2 , 3 * 2 ; v0 = ul )  
[917] ( move 3 , 3 * 2 ; move ul , 2 )  
[918] ( move ua , 2 ; move 4 + 3 , 4 )  
[919] ( move 2 , 4 ; move 2 , 2 / ua )  
[920] ( move 3 , 3 + ul ; move 2 , 4 )  | ( move 3 , 4 ; move ul + ul , 4 )  | ( move 3 , 3 + ul ; move 4 - 2 , 4 )  | ( move 3 , 4 ; move ua / 3 , 3 + ul )  | ( move 3 , 4 ; move 2 , 4 ; pen 3 / 4 )  | ( move 3 , 4 ; move 2 , 4 ; v0 = ua )  | ( move 0 , ua * 4 ; move 3 , 4 ; move 2 , ua + 4 )  
[921] ( move 3 , 2 ; move ua , 4 * 2 )  
[922] ( move 0 , 4 ; move ua , 2 / 4 )  | ( move 0 , ul / 2 ; move ua , 3 + ul )  | ( v0 = 3 - ua ; move ua , v0 * ua )  | ( v0 = ul - ua ; move ul - v0 , v0 * ua ; pen ua )  
[923] ( move 0 - 4 , 3 ; move 4 , ul )  | ( ( move 0 - 4 , 3 ; move 4 , ul ) ; pen 3 )  
[924] ( move 2 , 4 ; move 3 , 3 + ul )  | ( move ul + ul , 4 ; move 3 , 4 )  | ( move 2 , 4 ; move 4 - ul , ua + 4 )  | ( move 2 , 3 + ul ; move 2 + ul , 4 ; v0 = 2 )  | ( move ul + ul , ua + 4 ; move 2 + ul , 4 ; pen ul / ua )  
[925] ( move ua , 4 ; move 3 + 2 , 4 )  | ( move ua , 4 ; move ul , 4 ; ( v0 = 0 ; move 4 , ua ) )  
[926] ( move 4 + 2 , 2 ; move 4 , ul )  
[927] ( move ua , 2 / 3 ; move 3 , 2 )  
[928] ( move 4 , 3 ; move 3 , ua - 2 )  
[929] ( move 3 , 3 ; move ua + 3 , 4 )  
[930] ( move 4 , 0 ; move 4 + 4 , ul )  | ( move 4 , ua ; move ua + 2 , ul )  | ( move 2 * 2 , ua ; move 4 + 4 , ul )  | ( move 4 , ua ; move 2 , ul ; move ua , ua )  | ( move 4 , ua ; move ua + 2 , ul ; v0 = ua )  | ( move 4 , ua ; move ua + 2 , ul ; pen ua + ul )  | ( move 4 , ua ; move ua , ul - ua ; move ul + ul , 0 )  | ( move 4 , ua ; move ua + ul , ul ; move ul , ua * 4 )  
[931] ( move 2 , ua ; move 4 , 2 - 4 )  | ( move 2 , ua ; move 4 , ua - 2 )  | ( move 0 , ua ; ( move 2 , 0 ; move 4 , ua - 2 ) )  
[932] ( move ua , 4 * 2 ; move 3 , 2 )  
[933] ( move ua , 3 ; move 4 * 2 , 2 )  
[934] ( move 3 , 0 ; move ul , 4 * 3 )  | ( move 3 , ua ; move ul , 4 * 3 )  
[935] ( move 3 , ul ; move 3 + 2 , 4 )  | ( move 3 , ul ; move 4 + ul , 4 )  
[936] ( move 3 * 3 , 2 ; move ul , 2 )  
[937] ( move ua , 2 ; move 2 / 4 , 2 )  | ( move ua , 2 ; move 3 / ua , 2 )  | ( move ua , ul + ul ; move ul / 2 , ua / 3 )  
[938] ( move 2 , 2 ; move 4 + ul , 4 )  | ( move 2 , 2 ; move 4 + ul , 3 + ul )  | ( move 2 , ul + ul ; move ul + ul , 4 ; move 3 , 0 )  
[939] ( move ua / 3 , 2 ; move 3 , 2 )  | ( move ul + ul , 2 ; move 3 , 2 )  | ( v0 = 2 ; move v0 , v0 ; move 3 , v0 )  | ( v0 = ul + ul ; move v0 , ua + v0 ; move 3 , v0 )  
[940] ( move 3 , 3 / ua ; move 2 , 2 )  
[941] ( move 3 , 0 ; move 4 , ul / 2 )  | ( move 2 , ua ; move ul , ua ; move 4 , ul / 2 )  | ( move 3 , ua ; v0 = ul / 2 ; move 4 , ua + v0 )  
[942] ( move 4 , 3 ; move 3 , 2 + ul )  | ( move 4 , 3 ; move 3 , 3 ; pen 0 )  | ( move 4 , 3 ; v0 = 3 ; move v0 , v0 )  | ( v0 = 3 ; move 4 , v0 ; move v0 , v0 )  | ( v0 = 3 ; move 4 , v0 - ua ; move v0 , v0 )  | ( move 4 , 3 - ua ; v0 = 2 ; move ul + v0 , 3 )  | ( v0 = 3 ; move v0 + ul , v0 ; move v0 , v0 )  
[943] ( move 2 , 2 ; move 4 , ua - 4 )  
[944] ( move 3 , 2 ; move 4 + ul , 3 )  | ( ( move 3 , 2 ; move ul , 2 + ul ) ; move 3 + ul , 0 )  
[945] ( move 2 , 4 ; move ua , 3 * 2 )  
[946] ( move 4 , ul ; move 3 + 2 , 3 )  | ( move 4 , ua + ul ; move ua - ul , 3 )  | ( move 3 , ul ; move ul , ua ; move 4 + ul , ua + 3 )  
[947] ( move 4 , 0 ; move ua - 4 , 4 )  | ( move 4 , ua ; move ua - 4 , 4 )  | ( pen ul ; ( move ul , ua ; move 3 , 0 ; move ua - 4 , 4 ) )  
[948] ( move 3 , ua ; move 2 , 4 * 2 )  | ( ( move 4 - ul , 0 ; move 2 , ua * ua ) ; pen ul )  
[949] ( move 4 - ul , 2 ; move 3 , 2 )  | ( move 3 , ul + ul ; move 3 , 3 - ul )  | ( move 3 , 2 ; move 3 , 2 ; v0 = ul )  | ( pen ul ; move 3 , ul + ul ; move 3 , 2 )  | ( ( move 3 , 2 ; move ul , 3 - ul ; move 2 , 0 ) ; pen 2 )  
[950] ( move 0 - 4 , ua ; move 4 , 4 )  
[951] ( move 0 , ua / 4 ; move 4 , 2 )  | ( move 0 , ul / ua ; move 4 , ul / 4 )  
[952] ( move 4 , 2 ; move ua , 2 - 4 )  | ( move ul , 2 ; move 4 - ul , 0 ; move ua , 0 - 2 )  
[953] ( move 3 * 3 , 0 ; move ul , 4 )  | ( move 3 * 3 , ua ; move ul , ua + 4 )  | ( move 3 * 3 , ua ; ( pen 0 ; move ul , ua + 4 ) )  
[954] ( move 3 , 3 ; move ul , 4 + 2 )  
[955] ( move 2 , ul ; move 4 + 3 , 3 )  | ( move ul + ul , ul ; move ul , 3 ; move ua , 0 )  
[956] ( move 2 , 0 ; move 4 , ua / 4 )  
[957] ( move 2 , 2 ; move 2 , ua / 4 )  | ( move 4 - 2 , 2 - ua ; move ul + ul , ua / 4 )  
[958] ( move 4 + ul , 2 ; move 3 , 3 )  | ( move ua - ul , 4 - 2 ; move 4 - ul , 3 )  | ( move 4 + ul , 2 ; ( v0 = 3 ; move 3 , v0 + ua ) )  
[959] ( move 0 , ul / 3 ; move 4 , 2 )  | ( pen ul ; ( move 0 , 2 ; move ul , ul / 3 ; move 3 , ua ) )  
[960] ( move 3 , 4 ; move 4 , 0 - ul )  | ( move ua / 2 , 4 ; move 4 , ul - 2 )  
[961] ( move ul , 4 ; move 3 , 0 - 4 )  | ( move 0 - 3 , ua ; move ul , ul )  | ( move ul - 4 , 0 ; move ul , ul )  | ( move ul - 4 , ua ; move ul , ul )  | ( move 0 - ul , ul ; move 3 , 0 - ul )  | ( move ul - 4 , ua * 4 ; move ul , ul )  | ( move ul - 4 , ua ; move ul , ua + ul )  | ( move 0 - 3 , 0 ; move ul , ul ; v0 = ul )  | ( move ul - 4 , 0 ; move ul , 3 - 2 ; pen ul )  | ( move ul - 4 , 0 ; move ul , ul ; move 0 , ul )  | ( move ul - 4 , 0 ; move ul , ul ; pen ua / 2 )  | ( ( move ul - 4 , 0 ; move ul , ul ) ; v0 = 3 - 2 )  | ( move ul - 4 , 0 ; ( move 0 , ua + ul ; move ul , ua ) )  
[962] ( move 3 , ua ; move 3 , 3 * 2 )  | ( move 3 , 0 ; ( move 0 , 4 ; move 3 , 2 ) )  | ( move 3 , ua ; move ul , 4 + 2 ; move 2 , 0 )  | ( move 3 , ua ; v0 = 3 ; move v0 , 3 + v0 )  | ( v0 = 3 ; ( move v0 , ua ; move v0 , 3 + 3 ) )  
[963] ( move 4 , ul ; move 3 , 3 + 2 )  | ( move 4 , ua + ul ; move 2 + ul , 3 + 2 )  
[964] ( move ul , 3 ; move 3 , 3 * 2 )  | ( move ul , 3 ; move 3 , 4 + 2 ; move 0 , 4 )  
[965] ( move 2 , 4 ; move ua - 3 , 4 )  
[966] ( move 2 , 2 / ua ; move 3 , 4 )  
[967] ( move 4 + 2 , ul ; move 3 , 4 )  | ( move 3 * 2 , ul ; move 3 , 4 )  | ( move 4 + 2 , ul ; move 3 , 4 - ua )  | ( move 3 * 2 , ul ; move 3 , ua + 4 ; pen ua )  
[968] ( move 4 + ul , 3 ; move 2 , 4 )  | ( move ua - ul , 3 ; move ul + ul , 4 ; v0 = ul )  
[969] ( move ul , 0 ; move 3 , 4 / 3 )  | ( move 0 - 3 , 4 / 3 ; move ul , 3 - ul )  | ( v0 = 3 ; move ul , ul / 3 ; move v0 , ul )  | ( ( move ul , 2 / ua ; move 2 + ul , ul ) ; pen 0 )  
[970] ( move ua , 4 ; move 2 , 3 * 3 )  | ( v0 = 3 ; move ua , ul + v0 ; move v0 , v0 * 3 )  
[971] ( move ul , 4 * 2 ; move 3 , 2 )  
[972] ( move 4 , 0 ; move ul - 4 , 4 )  
[973] ( move 3 , ua ; move 4 , 4 + 3 )  | ( move 3 , ua ; move 4 , 3 / 4 )  
[974] ( move 3 , ua ; move 3 * 2 , 4 )  | ( move 2 + ul , 0 ; move 3 * 2 , 4 )  | ( move 3 , ua * 2 ; move 3 + 3 , 4 ; pen 4 )  
[975] ( move 3 , 2 ; move 3 / 2 , ul )  
[976] ( move 4 + 3 , ul ; move 3 , 3 )  | ( move 2 + ul , ul ; move 4 , 0 ; move 3 , 4 - ul )  | ( move 3 , ul ; ( move 3 , ua ; move ul , ua ) ; move 3 , 3 )  
[977] ( move ua , 3 ; move 3 , 3 - 4 )  | ( move ua , 4 - ul ; move 3 , ua - ul )  
[978] ( move 2 , 4 ; move 2 , ul / 2 )  
[979] ( move 4 + ul , 3 ; move 4 , 2 )  | ( move 4 + ul , ua + 3 ; move 4 , 2 )  | ( move 3 + 2 , 2 + ul ; move ul + ul , 2 ; move 2 , 0 )  | ( ( move ul + ul , 3 ; move 2 + ul , ua ) ; move 4 , 2 )  
[980] ( move 4 + 3 , 3 ; move 3 , ul )  
[981] ( move 2 , 3 / ua ; move 4 , 2 )  | ( move 2 , 3 / ua ; move 4 , 3 - ul ; move ul - 4 , 0 )  
[982] ( move 3 , ul / 2 ; move 2 , 3 )  | ( move 3 , ul / 2 ; move 2 , 3 ; v0 = 3 )  
[983] ( move 3 , ul ; move 4 , 4 + 2 )  
[984] ( move 4 , 0 ; move ul , 2 / 4 )  | ( move 4 , ua ; move ul , 3 / ua )  | ( ( move 4 , 0 ; move ul , 3 / ua ) ; pen ul )  
[985] ( move 0 - ul , 4 ; move 4 , 4 )  | ( move 0 - ul , 3 + ul ; move 4 , 4 ; pen ul )  | ( move ul - 2 , 4 ; move 3 + ul , 4 ; pen ul )  
[986] ( move ul , 3 ; move 3 * 3 , 2 )  | ( move ul , 3 ; move ua , 2 ; move 3 , ua )  
[987] ( move 3 , ul - 4 ; move 3 , 2 )  
[988] ( move 0 - 4 , 4 ; move 4 , ul )  
[989] ( move 3 , 4 ; move 2 , 4 + ul )  | ( move 2 + ul , 4 ; move 0 , ul ; move 2 , 4 )  
[990] ( move ul , 0 ; move 4 , 4 * 3 )  
[991] ( move ul - 3 , 3 ; move 2 , 4 )  | ( move ul - 3 , 4 + 3 ; move 2 , 0 - 4 )  | ( move 0 - 2 , 3 ; move 3 - ul , 4 ; pen ua )  
[992] ( move 4 , 2 ; move ul , 3 * 2 )  | ( move ul / 3 , 2 ; ( move 4 , 0 ; move ul , 3 * 2 ) )  
[993] ( move 3 , 4 ; move ul , 4 + 2 )  | ( move 2 + ul , 4 ; pen ul ; move ul , 3 + 3 )  | ( move 3 , 4 - ua ; v0 = 4 ; move ul , 2 + v0 )  | ( move 2 + ul , 4 ; move ul , 4 + 2 ; v0 = ua - 2 )  
[994] ( move 4 * 2 , 2 ; move 3 , ul )  | ( ( move 4 * 2 , 2 - ua ; move 3 , ul ) ; v0 = ul )  
[995] ( move 3 , 4 ; move 3 , 3 + ul )  | ( move 3 , 4 ; move 3 , 4 ; v0 = 2 )  | ( v0 = 3 ; move v0 , 4 ; move 3 , 4 )  | ( move 2 + ul , 4 ; move 2 + ul , 4 ; v0 = ul )  | ( v0 = 4 - ul ; move v0 , 4 ; move v0 , ul + v0 )  
[996] ( move 3 , ul ; move 3 , 2 - 4 )  | ( move 3 , ul ; move 3 , ua - 2 )  | ( move 3 , ul ; move 3 , ul - 3 ; pen 4 )  
[997] ( move 3 , 4 + 2 ; move 4 , ul )  | ( move 4 - 3 , 4 + 2 ; move 2 , ua ; move 4 , ul )  
[998] ( move 4 , 2 ; move 2 , 4 - ul )  | ( move 4 , 2 ; move ul + ul , 2 + ul )  | ( move 4 , 2 ; move ua / 3 , 3 ; pen ul )  | ( move 4 , 2 ; ( move ul , 3 ; move ul , ua * 4 ) )  
[999] ( move 4 - ua , 3 ; move 2 , 4 )  | ( move 4 - ua , ua + 3 ; move ul , 4 ; move ul , 0 )  
[1000] ( move 2 , 3 ; move 3 , ul / 2 )  
[1001] ( move 4 + 4 , ul ; move 3 , 2 )  | ( move 4 * 2 , ul ; move 3 , ua + 2 )  | ( move 4 * 2 , ul ; v0 = 0 ; move 3 , 2 )  
[1002] ( move 3 - ua , 3 ; move 4 , 3 )  
[1003] ( move 3 , 3 * 3 ; move ua , 3 )  
[1004] ( move 4 , 0 ; move 4 , ua / 3 )  | ( move 3 + ul , ua ; move 4 , ua / 3 )  
[1005] ( move ul - 2 , 3 ; move 4 , 3 )  | ( move 0 - ul , 2 + ul ; move ua - 3 , 3 )  
[1006] ( move 4 , 3 + 3 ; move 3 , ul )  | ( move 4 , 4 + 2 ; move 2 , ul ; move ul , ua )  
[1007] ( move 3 , ul - 3 ; move 4 , 2 )  
[1008] ( move 4 , ul ; move 4 , 3 + 2 )  | ( ( v0 = 4 ; move 4 , ul ) ; move v0 , v0 + ul )  
[1009] ( move ul - 4 , 2 ; move 3 , 3 )  | ( move 0 - 3 , 2 ; move 3 , 3 ; move 0 , ul )  
[1010] ( move 4 , ua - 2 ; move 3 , 4 )  
[1011] ( move 2 , ul ; move 4 , 2 - 4 )  | ( move 2 , ua + ul ; move 4 , ua - 2 )  | ( move 2 , ul ; move 0 , ua - 2 ; move 4 , 0 )  
[1012] ( move ua / 4 , 2 ; move 3 , 2 )  
[1013] ( move ul , 4 ; move 4 , 3 + 2 )  | ( move ul , 4 - ua ; move 4 , 4 + ul ; v0 = 0 )  
[1014] ( move 4 , 0 ; move ua , 4 * 4 )  | ( move ua - 2 , ua ; move ua , 4 * 4 )  | ( move 4 , ua ; move ua , 4 * 4 ; v0 = ua + ul )  | ( move 4 , ua ; move ua , 4 * 4 ; ( move 0 , ul ; pen 0 ) )  
[1015] ( move 3 , 3 ; move 3 , 4 + ul )  
[1016] ( move 3 , 2 ; move ul , 4 + 4 )  
[1017] ( move 3 , 3 ; move 3 - ul , 3 )  | ( move 4 - ul , 3 ; move 2 , 4 - ul )  | ( move 4 - ul , 3 ; move ua / 3 , 3 )  | ( ( move 3 , 2 + ul ; move 0 , 2 ) ; move 2 , ul )  | ( move 3 , 3 ; ( move ul , 3 ; move ul , ua + ua ) )  
[1018] ( move 3 / 2 , 2 ; move 4 , ul )  
[1019] ( move ua , 4 + 3 ; move 4 , 4 )  
[1020] ( move 4 + 3 , 4 ; move 3 , ul )  
[1021] ( move 4 , 2 ; move 2 / 3 , ul )  | ( move 4 , 2 ; move 2 / 3 , ul ; v0 = 0 )  
[1022] ( move 4 + 4 , ul ; move 4 , 2 )  | ( move 4 , ul ; move 4 , ua ; move 4 , 2 - ua )  
[1023] ( move 4 , ua / 2 ; move 3 , 3 )  | ( move 4 , ua / 2 ; move 3 , 3 ; move 0 , ua )  
[1024] ( move ul - 4 , 2 ; move 4 , 3 )  
[1025] ( move ua + 3 , 4 ; move 4 , 4 )  
[1026] ( move 4 , 2 ; move 3 / 2 , ul )  
[1027] ( move 4 , 4 ; move ua - 4 , 2 )  
[1028] ( move 2 , 3 / 2 ; move 4 , ul )  
[1029] ( move 3 * 3 , 2 ; move 4 , ul )  
[1030] ( move 2 / 3 , ul ; move 4 , 2 )  
[1031] ( move ua , 3 ; move 4 * 2 , 4 )  | ( move ua , 4 - ul ; move 4 * 2 , 4 )  | ( move ua , 3 ; move 4 + 4 , 4 ; v0 = ua + ul )  | ( move ua , 3 ; v0 = 2 + 2 ; move v0 + v0 , v0 )  
[1032] ( move ul , 3 ; move 3 , 4 + 4 )  | ( move ul , 3 ; move 3 , 4 * 2 )  
[1033] ( move ul - 3 , 4 ; move 3 , 3 )  | ( v0 = 3 ; move ul - v0 , 4 ; move v0 , v0 )  
[1034] ( move 4 , ua ; move 3 , 2 / 3 )  
[1035] ( move 4 - ua , 4 ; move 4 , 2 )  
[1036] ( move 3 / 4 , 0 ; move 4 , ul )  | ( move 3 / 4 , ua ; move 3 + ul , ul )  | ( move 4 / ua , ua ; move 4 , ul - ua )  | ( move 3 / 4 , ua ; move 4 , ul ; pen 4 + 3 )  
[1037] ( move 2 , ua ; move 4 , 4 * 3 )  | ( move 2 , ua ; move 4 , 4 * 3 ; v0 = 4 - ul )  | ( move 2 , ua ; ( move 2 * 2 , 4 * 3 ; pen ua ) )  | ( move 4 - 2 , ua ; ( move 4 , 4 * 3 ; v0 = ua ) )  | ( ( move 2 , ua ; pen ua + ul ; pen ul ) ; move 4 , 4 * 3 )  
[1038] ( move 4 , 4 ; move 2 , ul - 3 )  | ( move 4 , ua + 4 ; pen 4 / ua ; move 2 , 2 - 4 )  
[1039] ( move 3 , 4 ; move 2 , 3 / ua )  | ( move 3 , 3 + ul ; v0 = 2 ; move v0 , 3 / ua )  | ( ( move 3 , 4 ; move 0 , ua * 4 ) ; move 2 , 3 / ua )  
[1040] ( move 2 , 3 / ua ; move 3 , 4 )  
[1041] ( move 3 , 3 ; move 4 , 3 - ul )  | ( move 3 , 3 ; move 4 , ul + ul )  | ( move ul , 3 ; move 2 , ua ; move 4 , 2 )  | ( move 3 , 3 ; v0 = 4 ; move v0 , 2 )  
[1042] ( move ua , 4 ; move 3 * 3 , 3 )  
[1043] ( move 4 , 0 ; move ul , 4 / 3 )  | ( move 4 , ua ; move ul , 3 / 2 ; pen 2 )  | ( move 4 , ua ; ( move ul , 4 + 4 ; pen 4 ) )  | ( move 3 + ul , 0 ; move ul , ua * ua ; pen ua + ul )  
[1044] ( move 4 , 3 + 3 ; move 4 , ul )  | ( move 4 , 3 * 2 ; move 4 , ul )  
[1045] ( move 4 + ul , 4 ; move 4 , 2 )  | ( move 3 + 2 , 4 ; move 4 , ul + ul ; v0 = ua * 3 )  
[1046] ( move 4 * 2 , ua ; move 3 , 4 )  | ( move 4 * 2 , ua ; move 3 , 4 ; v0 = ua + ua )  
[1047] ( move ul , 3 ; move 4 , 3 * 2 )  
[1048] ( move 4 , ua / 4 ; move 2 , 2 )  
[1049] ( move 4 , 2 ; move 3 , 4 - ul )  | ( move 4 , ul + ul ; move 3 , 3 )  | ( move 4 , ul + ul ; move 3 , ua + 3 )  | ( move 4 , 3 - ul ; move 0 , ua ; move 3 , ua + 3 )  | ( move 4 , ul + ul ; move ua - 3 , 3 ; v0 = 3 )  | ( v0 = 3 ; ( move v0 + ul , 2 ; move v0 , v0 ) )  
[1050] ( move 3 , 2 - 4 ; move ul , 4 )  
[1051] ( move ul , 3 ; move 3 , 3 / 2 )  | ( move ul , 3 - ua ; move 3 , 3 / 2 )  
[1052] ( move 3 , 2 / 4 ; move 2 , ul )  
[1053] ( move 4 , ul ; move 3 , 4 + 3 )  
[1054] ( move 4 , 2 ; move ul , 3 / 2 )  | ( move 4 , 2 ; move ul , ua / 4 ; v0 = ul )  
[1055] ( move 4 , 2 ; move 4 , ul - 3 )  
[1056] ( move 4 + 3 , ua ; move 4 , 4 )  
[1057] ( move 4 , 2 ; move ul / 3 , 2 )  | ( move 4 , 2 ; move ul / ua , ul )  | ( move ul / ua , ul ; move 2 - ua , ul )  | ( move ul / ua , ul ; move 3 + ul , ul )  | ( move ul / 4 , ul ; move 4 , ul ; v0 = ul )  | ( ( move ul / ua , ul ; move 2 - ua , ul ) ; pen 0 )  | ( move ul / ua , ul ; move 4 , ul ; move 0 , ua + ul )  
[1058] ( move 2 , ul ; move 3 , 2 / 4 )  | ( move 2 , ul ; move 2 + ul , ul / 2 )  | ( move 2 , ul ; move 4 - ul , ul / 2 )  
[1059] ( move ua / 4 , 2 ; move 4 , 2 )  | ( move 3 / 2 , 2 - ua ; move 4 , 2 )  | ( move ua / 4 , 2 ; move 4 , ua + 2 )  
[1060] ( move 3 , 3 ; move 2 , ua / 4 )  
[1061] ( move ua , 4 ; move 3 * 2 , 4 )  | ( move ua , 4 ; move 4 , 4 ; move 2 , ua )  | ( move ua , 4 ; move 3 + 2 , 4 ; move ul , ua )  | ( move ua , 4 ; ( move 0 , 0 ; move 4 + 2 , 4 ) )  
[1062] ( move ul , 2 ; move 3 * 3 , 4 )  | ( move ul , 2 ; move ua + 3 , 4 )  
[1063] ( move 4 , 3 ; move 2 - 4 , ul )  | ( move 4 , 3 ; move ul - 3 , ul )  | ( v0 = ul ; move 4 , 3 ; move v0 - 3 , v0 )  
[1064] ( move 4 , 2 ; move 4 , 3 / ua )  | ( move 4 , ua + 2 ; move 4 , 3 / ua )  
[1065] ( move 4 , 2 ; move ul , 2 / 4 )  | ( move 4 , 2 ; move ul , ul / 2 )  | ( move 4 , 2 ; move ul , 3 / ua )  | ( v0 = 4 ; move v0 , 2 ; move ul , 3 / ua )  
[1066] ( move 4 , 2 ; move 4 , ua / 3 )  
[1067] ( move 3 / 2 , 4 ; move 3 , ul )  
[1068] ( move 4 , ul ; move 4 , 4 + 3 )  
[1069] ( move 4 , 4 ; move ua , 4 * 2 )  
[1070] ( move ua / 2 , 3 ; move 4 , 4 )  
[1071] ( move 3 , ul ; move 4 , 3 - 4 )  | ( move 3 , ul ; move 2 + 2 , ua - ul )  | ( move 3 , ul ; move 4 , ua - ul ; v0 = 0 )  | ( move ul , ul ; move 2 , ua ; move 4 , ul - 2 )  | ( move 2 + ul , ul ; pen ul ; move 4 , ul - 2 )  | ( v0 = 0 ; move 3 , ul ; move 4 , v0 - ul )  
[1072] ( move 4 , 4 * 3 ; move 2 , ul )  | ( move 3 + ul , 4 * 3 ; v0 = ul + ul ; move v0 , ul )  
[1073] ( move ua , 4 ; move 4 , 4 + 4 )  
[1074] ( move ul , 2 / 4 ; move 3 , 3 )  | ( move 3 , 2 / ua ; move ul , 3 )  | ( move ul , ul / 2 ; ( move 2 , 3 ; move ul , ua ) )  
[1075] ( move 4 , 4 / ua ; move 3 , 2 )  | ( move 4 , 4 / ua ; move 4 - ul , 2 )  | ( move 3 + ul , 4 / ua ; move 3 , ua + 2 )  
[1076] ( move 4 , 3 / 2 ; move 3 , ul )  
[1077] ( move 4 , 4 + 3 ; move 4 , ul )  | ( move 2 * 2 , 4 + 3 ; move 4 , ul )  
[1078] ( move 4 + 3 , ul ; move 4 , 4 )  
[1079] ( move 4 , 4 * 3 ; move ul , 2 )  | ( pen ul ; ( move 4 , 4 * 3 ; move ul , 2 ) ; pen 4 )  
[1080] ( move ul - 3 , 4 ; move 3 , 4 )  
[1081] ( move 2 , ua ; move 4 , 3 / 4 )  
[1082] ( move 3 , 2 ; move ul , 3 / 4 )  | ( move 2 + ul , 2 ; ( move ul , 2 / 3 ; v0 = 2 ) )  
[1083] ( move ul , 2 / 4 ; move 4 , 2 )  | ( move ul , ul / 2 ; move 4 , 2 )  
[1084] ( move 4 , 4 ; move 4 + ul , 3 )  | ( move 4 , 4 - ua ; move 4 + ul , 3 )  
[1085] ( move 2 / 3 , 4 ; move ua , 4 )  
[1086] ( move 4 , ul ; move 2 - 4 , 4 )  | ( move 4 , ul ; move 0 , 4 ; move 0 - 2 , ua )  
[1087] ( move 3 , 4 * 2 ; move ul , 4 )  
[1088] ( move ua , 4 ; move 3 , 2 / 4 )  | ( move ua , 4 ; move 3 , 3 / ua )  
[1089] ( move 3 , ul ; move 4 , 3 * 3 )  | ( ( move 2 + ul , ul ; move 4 , 3 * 3 ) ; move 0 , 0 )  
[1090] ( move 4 , ua ; move 2 , 4 / 3 )  | ( move 4 , ua ; move 0 , ul ; move 3 - ul , ul / 3 )  
[1091] ( move 4 , ul / 2 ; move 3 , 4 )  
[1092] ( move 4 , 4 ; move ul - 4 , 3 )  
[1093] ( move 4 , ua ; move 3 , 4 * 4 )  
[1094] ( move 4 , ul / 4 ; move 2 , 3 )  
[1095] ( move ua , 3 ; move 4 , 4 / 3 )  
[1096] ( move ua , 4 * 4 ; move 4 , 3 )  
[1097] ( move 4 , 2 / 3 ; move ul , 4 )  
[1098] ( move 4 , ua ; move 4 , 4 * 3 )  
[1099] ( move 4 , ul ; move 4 + 4 , 4 )  | ( move 4 , ua + ul ; move 4 + 4 , 4 )  
[1100] ( move 4 / 3 , 4 ; move 3 , ul )  
[1101] ( move ul , 3 / 4 ; move 3 , 4 )  
[1102] ( move ul , 2 / 4 ; move 4 , 4 )  
[1103] ( move 4 , 4 / ua ; move 4 , 3 )  
[1104] ( move 4 , ul ; move 2 / 4 , 4 )  | ( move ul , 4 ; move ul - 4 , 0 - 3 )  | ( move ul , 4 - ua ; move ul - 4 , ua - 3 )  | ( move ul , ua + 4 ; move 2 + ul , ul / ua )  | ( move 3 , ua + ul ; move 3 - 4 , 3 ; pen 2 )  | ( move 3 , 3 - 2 ; ( move 3 - 4 , 3 ; pen 0 - ul ) )  
[1105] ( move 3 , ul ; move 4 , 4 / 3 )  
[1106] ( move 4 , 3 ; move 3 / 4 , ul )  
[1107] ( move 3 , ul ; move 4 , 3 / 4 )  | ( move 3 , ul ; v0 = 4 ; move v0 , 3 / v0 )  
[1108] ( move ul , 4 * 4 ; move 3 , 4 )  
[1109] ( move 4 , ul / 3 ; move 4 , 3 )  
[1110] ( move 4 , 3 ; move ua / 4 , 4 )  
[1111] ( pen 2 + ul ; move 3 + 2 , 2 )  | ( pen 3 ; move 4 + ul , ul + ul )  | ( pen ua - 3 ; move 4 + ul , ua + 2 )  
[1112] ( move ul / 3 , 4 ; move 4 , 4 )  | ( move 2 / ua , 4 ; move 2 * 2 , ua + 4 )  | ( v0 = 4 ; move 2 / ua , v0 ; move v0 , v0 )  
[1113] ( move ul , 4 * 4 ; move 4 , 4 )  | ( move 2 - 3 , ul / ua ; move 4 , ul )  
[1114] ( move 4 , 4 ; move 3 , ul / 4 )  
[1115] ( pen ua ; move 4 * 2 , 0 - 2 )  | ( pen ua ; move ua + ul , ul - 3 )  
[1116] ( pen 3 ; move ua + 2 , 2 / 3 )  
[1117] ( pen ua ; move 4 + 2 , 3 * 3 )  | ( pen ua * 4 ; v0 = 3 ; move v0 + 4 , v0 * v0 )  
[1118] ( pen 2 ; move ua + 3 , 4 * 3 )  
[1119] ( pen 2 ; move 4 + ul , 3 - 4 )  | ( pen 2 ; move ul - ua , ua - ul )  
[1120] ( pen 4 - 2 ; move ua , 4 * 3 )  
[1121] ( move ua , 0 ; move ua , 0 - 2 )  | ( move ua , 0 ; move ua , 2 - 4 )  | ( move ua , ua ; move ua , 0 - 2 )  | ( move ua , 0 ; move ua , ul - 3 )  | ( move ua , 0 ; v0 = ua - 2 ; move ua , v0 )  | ( move ua , ua ; v0 = ul - 3 ; move ua , v0 )  
[1122] ( pen 4 ; move 4 + ul , 4 + 3 )  | ( move 0 , 3 ; pen 4 ; move ua - ul , 4 )  
[1123] ( pen 4 ; move 4 + 3 , ul / 2 )  | ( pen ua - 3 ; move ua + ul , ul / 2 )  
[1124] ( move ul , 0 ; move ua , 0 - 2 )  | ( move ul , ua ; move ua , 0 - 2 )  | ( move ul , 0 ; move ua , ua - 2 )  | ( move ul , 0 ; move ua , ul - 3 )  | ( move ul , ua ; move ua , ua - 2 )  | ( move ul , ua ; move ua , ul - 3 )  | ( move ul , 0 - ua ; move ua , ua - 2 )  | ( move ul - 2 , ua - 3 ; move ua , ul )  | ( move ul , ua ; move ua , 2 - 4 ; pen ul )  | ( move ul , ua ; move ua , ua - 2 ; pen ul )  | ( move 0 , ua ; move ul , ua ; move ua , 2 - 4 )  | ( move ul , 0 ; ( move ua , ua - 2 ; pen ua ) )  | ( move 2 / 3 , 0 ; v0 = ua - 2 ; move ua , v0 )  
[1125] ( move ua , 0 ; move 2 , 0 - ul )  | ( move ua , 0 ; move 2 , ul - 2 )  | ( move ua , 0 ; ( pen ul ; move 2 , ua - ul ) )  | ( move ua , ua ; move 3 - ul , ua - ul ; v0 = 2 )  
[1126] ( move 0 - 2 , 0 ; move ua , ul )  | ( move ul - 3 , 0 ; move ua , ul )  | ( move ul - 3 , ua ; move ua , ul )  | ( move ul - 3 , 0 ; move ua , 2 - ul )  | ( move ul - 3 , ua ; move ua , 2 - ul )  | ( move ul - 3 , ua ; move ua , ua + ul )  | ( move 0 - 2 , 0 ; move ua , ul ; pen 2 )  | ( move ul - 3 , ua ; move ua , ul ; pen 0 )  | ( move 2 , ul - 4 ; v0 = 2 ; move ua , v0 + v0 )  
[1127] ( move ua , 0 ; move 0 - ul , 2 )  | ( move ua , ua ; move 2 - 3 , 2 )  | ( move ua , ua ; move 0 - ul , 2 )  | ( move ua , ua ; move ul , 3 + 2 )  | ( move ua , ua ; move ul , 0 - ul )  | ( move ua , 0 ; move ul , ua - ul )  | ( move ua , ua ; move ul , ul - 2 )  | ( move ua , ua ; move ul , 4 + ul )  | ( move ua , ua ; move ul , ua - ul )  | ( move ua , ua ; move 0 - ul , ua / 3 )  | ( move ua , ua ; move 3 - 4 , ua * ua )  | ( move ua , 0 ; move ul , ua - ul ; pen ua )  | ( move ua , ua ; move ul , ul - 2 ; pen 0 - 2 )  | ( move ua , ua ; pen 3 / 4 ; move ul , 4 + ul )  | ( pen ul ; move ua , ua * 3 ; move ul , ua - ul )  | ( v0 = ul ; move ua , 0 ; move v0 , ua - v0 )  | ( move ua , 0 ; ( move ul , ua - ul ; v0 = 0 ) )  | ( move ua , ua * 3 ; v0 = 4 ; move ul , v0 + ul )  | ( v0 = ua ; ( move v0 , ua ; move ul , ul - 2 ) )  | ( move ua , ua + ua ; v0 = 0 - ul ; move ul , v0 )  
[1128] ( move ua + 2 , 0 ; move ua , 3 )  | ( move ua + 2 , ua ; move ua , 3 )  | ( move ua + 2 , 0 ; move ua , ua + 3 )  | ( ( pen ul ; move ua , ua ; move 2 , ua ) ; move ua , 3 )  
[1129] ( move ua , 0 ; move ul , 0 - 3 )  | ( move ua , 0 ; move ul , ul - 4 )  | ( move ua , ua ; move ul , ua - 3 )  | ( move ua , ua ; move ul , ul - 4 )  | ( move ua , ua ; move ul / ua , ua - ul )  | ( move ua , 0 ; move ul , ul - 4 ; pen ul )  | ( pen ul ; move ua , ua ; move ul , ua - 3 )  | ( move ua , ua ; move ul , ul - 4 ; pen ul )  | ( move ua , ua ; move ul - 2 , ul / ua ; pen 0 )  | ( move ua , ua ; v0 = 4 ; move ul , ul - v0 )  | ( v0 = ul - 4 ; ( move ul , 3 ; move ua , v0 ) )  | ( move ua , 0 ; ( v0 = 4 + 2 ; move ul , 3 - v0 ) )  
[1130] ( move ua + 2 , 0 ; move ul , 2 )  | ( move ua + 2 , ua ; move ul , 2 )  | ( move ua + 2 , ua ; move ul , 2 - ua )  | ( move ua + 2 , ua ; move ul , ul + ul )  | ( move ul , ua ; move ua + ul , 0 ; move ul , 2 )  | ( move ua , 0 ; move ul + ul , ua ; move ul , 2 )  | ( ( v0 = ua + ul ; move ul + v0 , 0 ) ; move ul , 2 )  
[1131] ( move ua + ul , 0 ; move 2 , 2 )  | ( move ua , 0 ; ( move ul , 0 ; move 2 , 2 ) )  | ( ( move ul , 0 ; move ua , ua ) ; move 2 , ua + 2 )  | ( move ul , 0 ; move ua , ua ; ( pen ul ; move 2 , 2 ) )  | ( move ul , ua ; move ua , ua ; ( move 2 , 2 ; v0 = ua ) )  
[1132] ( move 3 - ua , 0 ; move ul , 0 )  | ( move 3 - ua , 0 ; move ul , ua )  | ( move 3 - ua , ua ; move ul , 0 )  | ( move 3 - ua , ua ; move ul , ua )  | ( move ul - 2 , 0 ; move ua / 2 , 0 )  | ( move ul - 2 , 0 ; move ua / 2 , ua )  | ( move 3 - ua , ua ; move 2 - ul , ua )  | ( move 3 - ua , 0 ; move ul , ua ; v0 = ua )  | ( move 3 - ua , ua ; ( move ul , ua ; pen 2 ) )  | ( move 3 - ua , ua ; v0 = ul ; move v0 , ua )  
[1133] ( move 2 , 0 ; move 2 - ua , ua )  | ( move 3 , 0 ; move 2 - ua , ua )  | ( move 4 - ul , ua ; move 2 - ua , ua )  | ( move ua / 4 , ua ; pen 2 ; move 3 , ua )  | ( move ua / 3 , 0 ; move 2 - ua , ua ; v0 = ul )  
[1134] ( move ua , 0 ; move ua + 2 , 3 )  | ( move ua , ua ; move ua + 2 , 4 - ul )  
[1135] ( move ua , 0 ; move ua + 3 , 2 )  | ( move ua , ua ; move ua + 3 , 2 )  | ( move ua , ua * 4 ; move ua + 3 , 2 )  | ( move ua , 0 ; move ua + 3 , ul + ul )  | ( move ua , ua ; move 3 , 2 ; move ua , 0 )  | ( pen ul / 2 ; ( move ua , 0 ; move ua , 2 ; move 3 , 0 ) )  
[1136] ( move ua , 0 ; move 2 , ua - 2 )  | ( move ua , ua ; move 2 , ua - 2 )  | ( move ua , ua + ua ; move 2 , ua - 2 )  | ( move ua , ua ; move ul + ul , ul - 3 )  | ( move ua , ua ; move ul + ul , ul - 3 ; pen ul + ul )  
[1137] ( move ua + 2 , 2 ; move ua , 2 )  | ( move ua + 2 , 2 ; move ua , ul + ul )  | ( move ua + ul , 2 ; ( move ul , ua ; move ua , 2 ) )  
[1138] ( move ua , ul ; move 0 - 2 , 2 )  | ( move ua , ul ; move ul - 3 , 2 )  | ( move 2 , 3 ; move 0 - ua , ul - 3 )  | ( move ua , ul ; move ul - 3 , ul + ul )  | ( move ua , ul ; pen ul ; move 2 , 0 - ul )  
[1139] ( pen 3 ; move 4 + 4 , ul / 4 )  
[1140] ( move ua , 0 ; move ul , 0 - 4 )  | ( move ua , ua ; move ul , ua - 4 )  | ( move ua , ua ; move ul , ua - 4 ; v0 = 4 )  
[1141] ( move ua + ul , 0 ; move 2 , 3 )  | ( move ua + ul , ua ; move 2 , 3 )  | ( move ul , ua ; ( move ua , ua ; move 2 , 3 ) )  | ( v0 = 2 ; move ua + ul , ua ; move v0 , 3 )  
[1142] ( move 0 - ua , 0 ; move ul , 4 )  | ( move 0 - ua , ua ; move ul , 4 )  | ( move ul , ul ; move ua , 3 - 4 )  | ( move ul , ul ; move ua , ul - 2 )  | ( move ul , ul ; move ua , ua - ul )  | ( move 0 - ua , ua + ua ; move ul , 4 )  | ( move ul , 4 - 3 ; move ua , ua - ul )  | ( move 0 - ua , ua ; move 2 - 3 , ua + ul )  | ( move ul , ul ; pen ul ; move ua , ua - ul )  | ( v0 = 0 ; ( move v0 - ua , ua ; move ul , 3 + ul ) )  
[1143] ( move ua , 0 - 3 ; move ua , 2 )  
[1144] ( move 2 , 0 ; move ua + 3 , ul )  | ( move 2 , ua ; move ua + 3 , ul )  | ( move 2 , ua ; move ua + 3 , ua + ul )  | ( move 2 , ua ; move ua + 3 , ul ; v0 = ua )  | ( move 2 , ua ; v0 = 3 ; move v0 + ua , ul )  | ( move 2 , ua ; move ua + 3 , ul ; v0 = ua + ul )  
[1145] ( move 0 - ul , 0 ; move 3 , ul )  | ( move ul , 3 ; move 3 , ua - 2 )  | ( move ul - 2 , ua ; move 3 , ul )  | ( move ul - 2 , ua ; ( move 4 - ul , ul ; pen ua ) )  | ( ( v0 = 0 - ul ; move v0 , ua ) ; move 3 , ul )  | ( move ul - 2 , ua ; move ul + ul , ul ; move ul , ua )  
[1146] ( move ua , 2 ; move 0 - ul , 2 )  | ( move ua , 2 ; move ul - 2 , 2 )  | ( move ua , 2 ; move ul , ua - ul )  | ( ( v0 = ua ; move v0 , 2 ) ; move ul , v0 - ul )  
[1147] ( move 2 , 0 ; move ua - 2 , ul )  | ( move 2 , ua ; move ua - 2 , ul )  | ( move 4 - 2 , ua ; move ua - 2 , ul )  | ( move 2 , ua ; move ua - 3 , ul ; move ul , ua )  | ( move 2 , 0 ; move 2 / ua , ul ; move 4 , ua * 2 )  | ( ( move 2 , 0 ; move ua - 2 , ul ; pen 4 ) ; pen 0 )  
[1148] ( move 3 , 0 ; move ua + ul , 2 )  | ( move 3 , ua ; move ua + ul , 2 )  | ( move 3 , ua * 2 ; move ua + ul , 4 - 2 )  | ( move 4 - ul , 0 ; pen ul ; move ua + ul , ul + ul )  | ( ( move 3 , ua ; move ul , ul + ul ) ; move ua , ua + ua )  
[1149] ( move 0 - 3 , ul ; move ul , 0 )  | ( move 0 - ul , ul ; move 3 , 0 )  | ( move ul - 4 , ul ; move ul , 0 )  | ( move ul - 4 , ul ; move ul , ua )  | ( move 4 / 3 , ul - 3 ; move 3 , 3 )  | ( move 0 - 3 , ul - ua ; move ul , ua )  | ( move 0 - ul , ul ; move ua / 2 , ua )  | ( move 0 , ua ; move 2 , 0 - 2 ; move 3 , 3 )  | ( move ul - 4 , ul ; move ul , 0 ; v0 = 0 )  | ( ( move ul - 4 , ul ; v0 = ua ) ; move ul , v0 )  
[1150] ( move 4 , 0 ; move ua , 0 - ul )  | ( move 4 , 0 ; move ua , ua - ul )  | ( move 4 , ua ; move ua , ua - ul )  | ( move 3 + ul , 0 ; move ua , ul - 2 )  | ( ( move 4 , ua ; move ua , ua - ul ) ; pen 4 )  | ( move 4 , ua ; move ua , 3 - 4 ; v0 = 2 + ul )  | ( ( move 4 , ua ; move 0 , 3 - 4 ) ; move ua , ua * 2 )  
[1151] ( move ua , 0 ; move ua + 2 , 4 )  | ( move ua , ua ; move ua + 2 , 4 )  | ( move ua , ua ; move ua + 2 , 4 ; move 0 , 4 * 3 )  | ( move ua , 0 ; ( move ua , 4 ; move 2 , ua ; v0 = 2 ) )  
[1152] ( move 3 , 0 ; move ua + 2 , ul )  | ( move 3 , ua ; move ua + 2 , ul )  | ( move 3 , ua ; move ua + 2 , ul ; pen ua )  
[1153] ( move ua , 2 ; move ua + 2 , 2 )  | ( move ua , ul + ul ; move ua + 2 , 2 )  | ( v0 = ua + 2 ; ( move ua , v0 ; move v0 , v0 ) )  
[1154] ( move ul , 0 ; move 3 , 0 - ul )  | ( move ul , ua ; move 3 , 0 - ul )  | ( move ul , ua ; move 3 , ul - 2 )  | ( move ul , ua ; move 2 + ul , ua - ul )  | ( move ul , ua ; move 3 , ua - ul ; v0 = 2 )  | ( move ul , ua + ua ; move 3 , 0 - ul ; v0 = ua - 2 )  
[1155] ( move 2 , 0 ; move ua - ul , 2 )  | ( move ul , ua ; move ua - ul , 2 )  | ( move ul , ua * 2 ; move ua - ul , 2 )  | ( move ul , ua * 4 ; move ua - ul , 2 )  | ( move ul / 2 , 0 ; move ua - ul , 2 - ua )  | ( move 0 , 0 ; move ul , ua ; move ua - ul , 2 )  | ( pen ul ; move ul , ua ; move ua - ul , ul + ul )  | ( move 0 , ua ; move ul / 2 , ua ; move ua - ul , 2 )  | ( v0 = ua ; ( move ua / v0 , 0 ; move ua - ul , 2 ) )  
[1156] ( move ua , ua ; move 0 - 3 , 2 )  
[1157] ( move ul , 0 - 2 ; move ua , 2 )  | ( move ul , 0 - 2 ; move ua , ua + 2 )  | ( move ul , ua - 2 ; pen 3 / 4 ; move ua , 2 )  | ( move ul , ua - 2 ; move ua , ua + 2 ; pen ua )  | ( move ul , ua - 2 ; v0 = 3 - ul ; move ua , v0 )  
[1158] ( move 3 , 0 ; move 0 - ul , ul )  | ( move 3 , 0 ; move ul , ua - 2 )  | ( move 3 , 0 ; move ul , ul - 3 )  | ( move 3 , ua ; move ul , 2 - 4 )  | ( move 3 , ua ; move ul , ul - 3 )  | ( move 3 , 0 ; move ul , 2 - 4 ; pen ua )  | ( move ua - 3 , 0 ; move ul , ua + 4 ; pen ul + ul )  | ( move 3 , ua ; ( move 0 , ua + ul ; move ul , ua - 3 ) )  
[1159] ( move ua , 3 ; move ua , 0 - 2 )  | ( move ua , 3 ; move ua , ul - 3 )  
[1160] ( move 3 - ua , 0 ; move ua , 2 )  
[1161] ( move 0 - 4 , 0 ; move ul , ul )  | ( move 2 - ua , 0 ; move ul , ul )  | ( move 2 - ua , ua ; move 2 - ul , ul )  | ( pen ul ; move 2 - ua , ua ; move ul , ul )  | ( move 0 , ua ; move 2 - ua , ua ; move ul , ul )  | ( move 0 - ul , ul ; move 4 , ul - 2 ; move 0 , ul )  
[1162] ( move ua + 2 , 2 ; move ul , 2 )  | ( move ua + 2 , 4 / 2 ; move ul , 2 )  | ( move ua + 2 , 2 ; move ul , 2 ; v0 = ul )  | ( move ua + 2 , 2 ; move ul , 3 - ul ; v0 = 3 )  | ( v0 = ua + 2 ; move v0 , v0 ; move ul , v0 )  
[1163] ( move 4 , 0 ; move ua + ul , 2 )  | ( move 4 , ua ; move ua + ul , 2 )  | ( move 3 + ul , ua ; move ua + ul , 2 )  | ( move 4 , ua + ua ; move ua + ul , 2 )  | ( move 4 , ua ; ( move ul , 2 ; move ua , ua ) )  | ( move 4 , ua ; move ua , ul + ul ; move ul , 0 )  | ( move 4 , ua ; move 2 + 2 , 2 ; move ua - 3 , 0 )  | ( move 2 + 2 , 0 ; ( move ua + ul , 2 ; pen 2 ) )  | ( move 4 , ua * 3 ; move ua + ul , 2 ; move 0 , 2 )  | ( pen ul ; move 4 , 0 ; ( move ua + ul , 2 ; pen ua ) )  | ( ( pen ul - ua ; pen ul ) ; move 4 , ua ; move ua + ul , 2 )  
[1164] ( move ua + 3 , 2 ; move ua , 2 )  | ( move ua + 3 , ul + ul ; v0 = 2 ; move ua , v0 )  
[1165] ( move 3 , 0 ; move 2 - ua , ul )  | ( move 3 , 0 - ua ; move 2 - ua , ul )  | ( move 3 , 0 ; move 2 - ua , ua + ul ; v0 = 3 )  
[1166] ( move ua + ul , 0 ; move 4 , 2 )  | ( move ua + ul , ua ; move 4 , 2 )  | ( move ua + ul , ua ; move 4 , ul + ul )  | ( move ul , ua ; move ua , 0 ; move 4 , ul + ul )  
[1167] ( move ua , 2 ; move ua - 2 , 2 )  
[1168] ( move ua + ul , 0 ; move 3 , 3 )  | ( move ua + ul , ua ; move 3 , 3 )  | ( move ua + ul , 0 ; move 3 , 3 ; v0 = 4 )  
[1169] ( move ul , 0 ; move ua + 2 , 4 )  | ( move ul , ua ; move ua + 2 , 4 )  | ( ( move ul , ua ; move ua + 2 , 4 ) ; move 0 , ul )  | ( move ul , 0 ; ( move ua + 2 , 4 - ua ; pen 2 ; pen ul ) )  
[1170] ( move 2 , ua ; move 2 - ua , 2 )  | ( move 2 , ua ; v0 = 2 - ua ; move v0 , v0 + ua )  
[1171] ( move 3 , 0 - 2 ; move ua , ul )  | ( move 3 , 0 - 2 ; move ua , ul ; v0 = 0 )  
[1172] ( move 0 - ua , ul ; move 3 , 2 )  
[1173] ( move ul , 0 ; move ua , 2 - 3 )  | ( move ul , 0 ; move ua , 0 - ul )  | ( move ul , ua ; move ua , 0 - ul )  | ( move ul , 0 ; move ua , ua - ul )  | ( move ul , ua ; move ua , ul - 2 )  | ( move ul , ua ; move ua , ua - ul )  | ( move ul , ua + ua ; move ua , ua - ul )  | ( move ul , 0 ; pen ul ; move ua , 3 - 4 )  | ( move ul , 0 ; pen ul ; move ua , ua - ul )  | ( move ul , ua ; move ua , ua - ul ; pen ul )  | ( move ul , 0 ; ( move ua , 2 - 3 ; pen 0 ) )  | ( move ul , ua ; move 0 , ul - 3 ; move ua , ul )  | ( move ul , 0 ; move ua , ua - ul ; v0 = ua )  | ( move ul , ua * 3 ; pen ul ; move ua , ul - 2 )  | ( move ul , 0 ; v0 = ua - ul ; move ua , v0 )  | ( ( move ul , ua ; move ua , ul - 2 ) ; v0 = ua )  | ( ( move ul , ua ; v0 = ul ) ; move ua , ua - v0 )  
[1174] ( move ua , 0 ; move 4 + ul , 2 )  | ( move ua , ua ; move 4 + ul , 2 )  | ( move ua , ua * 3 ; move 3 + 2 , 2 )  | ( move ua , 0 ; move 4 + ul , 4 - 2 )  | ( move ua , 0 ; move 4 , 3 - ul ; move ul , ua )  | ( move ua , ua * 4 ; move ul , ul + ul ; move 4 , 0 )  
[1175] ( move ua + 2 , ul ; move 2 , 2 )  | ( move 2 , ul ; move ua , ua ; move 2 , 2 )  | ( move ua + 2 , ul ; ( pen 4 / 2 ; move 2 , 2 ) )  | ( ( move ua + 2 , ul ; move 2 , 2 ) ; pen ua * ua )  
[1176] ( move 0 - 3 , 2 ; move ul , ua )  | ( move 4 - ua , 2 ; move 3 , ua )  | ( move ul , ua - ul ; move 3 , 3 )  | ( move 3 , 2 ; pen 0 ; move 2 , 3 )  | ( move 2 - 3 , 2 ; move 3 , ua ; pen 3 )  | ( move ul , ua - ul ; v0 = 3 ; move v0 , v0 )  | ( move ul - 4 , 2 ; move ul , 0 ; v0 = ul + ul )  | ( move 0 , ul ; ( move ul - 4 , ul ; move ul , 0 ) )  | ( move ul - 4 , ul + ul ; move ul , 0 ; v0 = ul )  
[1177] ( move ua , ul ; move 0 - 2 , 3 )  | ( move ua , ul ; move 2 - 4 , 3 )  | ( move ua , ul - ua ; move 2 - 4 , 3 )  | ( move ua , ul ; pen ul ; move ul - 3 , 4 - ul )  
[1178] ( move ua , 2 ; move 0 - ul , 3 )  | ( move ua , 2 ; move ul - 2 , 2 + ul )  | ( move ua , 2 ; move 0 - ul , 3 ; pen ul )  | ( move ua , ul + ul ; move 2 / 4 , 4 + 2 )  | ( move ua , 2 ; ( move 0 , ua ; move 0 - ul , 3 ) )  
[1179] ( move ua , 2 ; move ua , 0 - 4 )  | ( move ua , ul + ul ; move ua , 0 - 4 ; pen 4 - ua )  
[1180] ( move ua , 0 ; move ua - 4 , 2 )  | ( move ua , ua ; move ua - 4 , 2 )  
[1181] ( move 0 - 3 , ua ; move ul , 2 )  | ( move ul , ua - ul ; move 3 , ul )  | ( move 0 - 3 , ua * 2 ; move ul , 2 )  | ( move 0 - 3 , ua ; pen ul ; move ul , 2 )  | ( move ul , ul - 2 ; move 3 , ul ; move 0 , 0 )  | ( move 0 , ua - ul ; move ul , ua ; move 3 , ul )  | ( v0 = ul - 2 ; move ul , v0 ; move 3 , ul )  | ( move ul , 3 - 4 ; move 4 - ul , 3 - 2 ; pen ua )  | ( move ul , 0 - ul ; move 2 , ul ; move ul , ua + ua )  
[1182] ( move 2 , 0 ; move 3 - ua , ul )  | ( move 2 , 0 ; move 3 - ua , ul ; pen ul )  | ( move 2 , 0 ; ( move 3 - ua , ul ; move ul / ua , 2 ) )  
[1183] ( move 3 + 2 , 0 ; move ul , ul )  | ( move 4 + ul , 0 ; move ul , ul )  | ( move 4 + ul , ua ; move ul , ul )  | ( move 4 + ul , 0 ; move ul , ua + ul )  | ( move 4 + ul , ua * 2 ; move ul , ul )  | ( move 4 , 0 ; move ul , ua ; move ul , ul )  | ( move 3 , ua ; move 2 , ua ; move ul , ul )  | ( move ul , ua ; move 4 , ua ; move ul , ul )  | ( move 3 + 2 , 0 ; move ul , ul ; v0 = 0 )  | ( move 4 + ul , 0 ; move ul , ul ; pen 3 * 2 )  | ( move 4 + ul , 0 ; v0 = ua ; move ul , ul )  | ( move 3 + 2 , ua ; move ul , 2 - ul ; pen ul )  | ( move 4 , 0 ; move ul , ua ; move ul , ua + ul )  | ( move ul , 0 ; move 3 + ul , ua ; move ul , ul )  | ( move 4 + ul , ua ; move ul , ul ; v0 = ua )  | ( move ul , ua ; move 4 , ua * 3 ; move ul , ul )  | ( move ul , ua ; ( move 4 , ua ; move ul , ul ) )  | ( pen ul ; move 4 + ul , 0 - ua ; move ul , ul )  | ( v0 = ul ; move 4 + ul , ua ; move v0 , v0 )  | ( move 4 + ul , ua * 4 ; move ul , ul ; pen 4 + 3 )  | ( ( move 4 + ul , 0 ; v0 = ul ) ; move v0 , ua + ul )  
[1184] ( move ua , 2 ; move 2 - ua , 2 )  
[1185] ( move 2 , 0 ; move 3 , ua * ua )  | ( move 4 - 2 , 0 ; move 3 , ua * ua )  | ( move 2 , 0 ; move 3 , ua * ua ; pen ul )  
[1186] ( move ua , 0 ; move ul - 3 , 2 )  | ( move ua , 0 - ua ; pen 3 / 4 ; move ul - 3 , 2 )  | ( move ua , 0 ; v0 = 2 - 4 ; move v0 , ul + ul )  
[1187] ( move ul , 0 ; move 3 , ua - 2 )  | ( move ul , 0 ; move 3 , ul - 3 )  | ( move ul , ua ; move 3 , 2 - 4 )  | ( move ul , ua ; move 3 , ul - 3 )  | ( move ul , 0 ; move 3 , ul - 3 ; v0 = 0 )  | ( move ul , ua ; move 3 , 2 - 4 ; v0 = 2 - 3 )  
[1188] ( move 0 - ul , 3 ; move ua , 2 )  | ( move ul , 0 ; move ua , 4 + ul )  | ( move ul , ua ; move ua , 4 + ul )  | ( move ul , ua * 4 ; move ua , 4 + ul )  | ( move ul , ua ; move ua , 3 + 2 ; pen ul / 3 )  | ( move ul , ua ; ( move ua , 4 + ul ; pen ul ) )  | ( move ul , ua ; move 0 , ua + ul ; move ua , 3 + ul )  
[1189] ( move ua , 3 ; move 0 - 2 , ul )  | ( ( move ua , 3 ; move ul - 3 , ul ) ; v0 = 0 - 2 )  
[1190] ( move 4 - ua , 0 ; move ua , 2 )  
[1191] ( move 2 , ua ; move ua , 0 - 4 )  
[1192] ( move ua , 0 ; move 2 , 4 + ul )  | ( move ua , 0 ; move ul + ul , 3 + 2 )  | ( move ua , ua * 4 ; move 2 , 4 + ul )  | ( move ua , 0 ; move 0 , 4 ; move ua - 4 , ul )  | ( move ua , 0 ; move 2 , 4 + ul ; v0 = ua )  
[1193] ( move ua , 0 ; move 4 , ua - 2 )  | ( move ua , ua ; move 4 , ua - 2 )  | ( move ua , ua * 2 ; move 4 , ua - 2 )  | ( pen ul ; move ua , ua * 2 ; move 4 , ul - 3 )  
[1194] ( move 0 - ul , 2 ; move ua , 3 )  | ( move ul - 2 , 4 - 2 ; move ua , 3 )  | ( move 0 - ul , 2 ; move 0 , ua ; move ua , 3 )  
[1195] ( move ua , 0 - 3 ; move ua , 3 )  | ( move 4 + 3 , ul - 4 ; move ua , 3 )  
[1196] ( move ul , 0 ; move 3 + 2 , ul )  | ( move ul , 0 ; move 4 + ul , ul )  | ( move ul , ua ; move 3 + 2 , ul )  | ( move ul , ua ; move 4 + ul , ul )  | ( move ul , ua + ua ; move 4 + ul , ul )  | ( move ul , ua ; move 4 + ul , ul - ua )  | ( move ul , 0 ; move 4 , ul ; move ul , ua )  | ( move ul , ua * 3 ; move 4 + ul , ua + ul )  | ( ( move ul , ua ; move 2 , ul ) ; move 3 , 0 )  | ( move ul , 0 ; ( move 4 , ul ; move ul , 0 ) )  | ( ( move ul , 0 ; move 4 , ul ) ; move ul , ua )  | ( move ul , ua ; move ul , ua + ul ; move 4 , 0 )  | ( move ul , ua ; move 4 + ul , ul ; v0 = ul )  | ( ( move ul , ua ; move 4 , ul ) ; move ul , ua )  | ( move ul , ua ; ( move 4 , ul ; move ul , ua ) )  | ( move ul , ua ; pen 2 - ul ; move 4 + ul , ul )  | ( v0 = ul ; move ul , ua ; move 4 + v0 , v0 )  | ( ( move ul , ua ; move 0 , ua ) ; move 4 + ul , ul )  
[1197] ( move 3 , 0 ; move ua , ul - 2 )  | ( move 3 , 0 ; move ua , ua - ul )  | ( move 3 , ua + ua ; move ua , ua - ul )  | ( move 2 + ul , ua ; move ua , ua - ul )  | ( move 3 , ua ; move ua , 3 - 4 ; pen 4 )  | ( move 3 , 0 ; move ua , ua - ul ; v0 = 4 + 2 )  
[1198] ( move 2 - ua , 0 ; move 3 , ul )  | ( move 2 - ua , ua ; move 3 , ul )  
[1199] ( move 3 - ua , 0 ; move ul , 2 )  
[1200] ( move ul , 3 ; move 0 - ua , 2 )  | ( move ua , 3 + 2 ; move ul , ul )  | ( move ua , 4 + ul ; move ul , ul )  | ( move ua , 4 + ul ; move ul , ua + ul )  | ( move ua , 4 + ul ; move ul , ul ; v0 = 2 )  
[1201] ( move ua - ul , 0 ; move 2 , 4 )  | ( move ua - ul , ua ; move 2 , 4 )  | ( move ua - ul , ua ; move 2 , 4 ; v0 = ua )  
[1202] ( move ua , ul ; move 2 , 3 + 2 )  | ( move ua , ul ; move 4 - 2 , 4 + ul )  | ( move ua , ul ; move 0 , ua + ul ; move 2 , 4 )  | ( move ua , ul ; move 2 , 4 + ul ; ( pen 0 ; pen 0 ) )  | ( move ua , ua + ul ; move 0 , 3 + ul ; move ul + ul , ul )  
[1203] ( move ua + ul , 0 ; move 4 , 3 )  | ( move ua + ul , ua * 3 ; move 4 , 3 )  | ( move ul , ua ; move ua , ua ; move 4 , 3 )  | ( move ua + ul , 0 ; move 3 + ul , ua + 3 )  | ( move ua + ul , 0 ; move 0 , 3 ; move 4 , 0 )  | ( pen ul ; move ua + ul , 0 ; move 4 , ua + 3 )  | ( move ua , 0 - ua ; ( move ul , ua ; move 4 , 3 ) )  
[1204] ( move ua , ua - 2 ; move 3 , 2 )  | ( move ua , ul - 3 ; move 3 , 2 )  | ( move ua , ul - 3 ; move 0 , ul ; move 3 , ul )  
[1205] ( move 0 - 3 , ul ; move ua , 3 )  | ( move 3 - ua , ul ; move ua , 4 - ul )  
[1206] ( move 3 - ua , 0 ; move 3 , ul )  
[1207] ( move 4 , 2 ; move 0 - ua , ul )  
[1208] ( move ul - 4 , 0 ; move ua , 2 )  | ( move 0 - 3 , ua ; move ua , ul + ul )  | ( move 0 , 0 ; move ul - 4 , 0 ; move ua , 4 / 2 )  
[1209] ( move ul , 4 ; move ua , 0 - 2 )  | ( move ul , 4 ; move ua , 2 - 4 )  | ( move ul - 2 , ul ; move ua , ul )  | ( move ul , ua + 4 ; move ua , ul - 3 ; v0 = 4 )  | ( move ul , ua + 4 ; move ua , ua - 2 ; v0 = ul )  
[1210] ( move 2 , 2 ; move ua + ul , 3 )  
[1211] ( move 3 , ul ; move 3 - ua , 0 )  | ( move 3 , ul ; move 3 - ua , ua )  | ( move 3 - ua , ul ; move 3 , ua * 3 )  | ( pen ul ; ( move 3 - ua , ul ; move 3 , ua ) )  | ( v0 = 3 ; move ul , ul - v0 ; move 3 , v0 )  
[1212] ( move ua + 3 , 2 ; move ua , 3 )  | ( move ua , 4 / 2 ; move 3 , 0 ; move ua + ul , 3 )  
[1213] ( move 2 , 4 ; move ua , 0 - ul )  
[1214] ( move ul - 2 , 2 ; move ua , 2 )  | ( move ul , 0 - ul ; move ua , 3 + 2 )  | ( move ul - 2 , 4 / 2 ; move ua , 2 - ua )  
[1215] ( move 3 , 0 ; move ul - ua , 3 )  | ( move 3 , ua ; move ul - ua , 3 )  | ( move 3 , 0 ; move ul - ua , 2 + ul )  | ( move 3 , ua ; move ul - ua , 2 + ul )  | ( move 4 - ul , ua ; move ul - ua , 3 - ua )  | ( move 3 , ua ; v0 = ul + ul ; move ul - ua , 3 )  
[1216] ( move ua - 4 , 0 ; move 2 , ul )  | ( move ua - 4 , ua ; move 2 , ul )  
[1217] ( move ua , 3 ; move ua , 3 + 2 )  | ( move ua , 3 ; move ua , 4 + ul ; pen 3 )  | ( move ua , 3 ; ( move ua , 4 + ul ; pen ua ) ; pen 2 )  
[1218] ( move 3 - ua , 0 ; move ul , 3 )  | ( move 3 - ua , ua + ua ; move ul , 3 )  
[1219] ( move ua , 0 ; move ul , 2 - 4 )  | ( move ua , 0 ; move 0 - ul , ul )  | ( move ua , 0 ; move ul - 2 , ul )  | ( move ua , ua ; move ul , 2 - 4 )  | ( move ua , ua ; move 3 - 4 , ul )  | ( move ua , ua ; move 0 - ul , ul )  | ( move ua , ua ; move ul , ul - 3 )  | ( move ua , ua + ua ; move ul , ul - 3 )  | ( move ua , ua ; move 0 - ul , ul ; v0 = ul )  | ( move ua , 0 ; v0 = ul ; move ul , v0 - 3 )  | ( ( v0 = ua ; move ua , v0 ) ; move ul , ua - 2 )  | ( ( pen ul ; pen ul ) ; move ua , ua ; move ul - 2 , ul )  
[1220] ( move 2 , 0 ; move 4 - ua , ul )  | ( move 2 , ua * 3 ; move 4 - ua , ul )  | ( v0 = ua ; ( move 2 , v0 ; move 4 - v0 , ul ) )  
[1221] ( move 3 + 2 , ua ; move ul , 2 )  | ( move 4 + ul , ua ; move ul , 2 )  | ( move ua - ul , ua ; move ul , 2 )  | ( move 4 + ul , 0 ; move ul , ua + 2 )  | ( move ua - ul , 0 ; move ul , ua + 2 )  | ( move 4 + ul , ua + ua ; move ul , 4 * 2 )  | ( move 4 + ul , ua ; move 0 , 0 ; move ul , 4 - 2 )  | ( move 4 + ul , 0 - ua ; move ul , 2 ; pen 2 / ua )  
[1222] ( move 0 - ul , ul ; move 3 , 2 )  | ( move ul , 4 ; move 4 - ul , 2 - 3 )  | ( move ul - 4 , 3 ; move 3 - 4 , ul ; pen 2 )  | ( move 2 - 3 , ul ; move 0 , ul ; move 3 , ul )  | ( move 0 - ul , ul ; move ul + ul , 2 ; move ul , 0 )  
[1223] ( move ua , 0 ; move 4 + ul , 3 )  | ( move ua , ua * 2 ; move 4 + ul , 3 )  | ( move ua , ua ; v0 = 3 + 2 ; move v0 , 3 )  | ( move ua , 0 ; v0 = 3 ; move 4 + ul , v0 )  | ( move ua , ua ; move 4 + ul , 3 ; v0 = 4 - ua )  
[1224] ( move ul , 0 ; move 4 + ul , 2 )  | ( move ul , ua ; move 4 + ul , 2 )  | ( move ul , 0 ; move 3 + 2 , ul + ul )  | ( move ul , 0 ; move ul , 2 ; move 4 , ua )  | ( pen ul ; move ul , 0 ; move 4 + ul , 2 )  
[1225] ( move 2 , 3 ; move ua + ul , 2 )  | ( move ul , 3 ; move ua + ul , ua + 2 )  | ( move ua / 3 , 3 ; move 0 , 4 ; move ua + ul , ul - 3 )  
[1226] ( move 4 , 0 ; move ua - ul , 2 )  | ( move 4 , ua * 2 ; move ua - ul , 2 )  | ( move 0 , 0 ; ( move 4 , ua ; move ua - ul , 2 ) )  | ( ( move 4 , ua ; move ua - ul , 2 ) ; pen 0 ; pen 2 )  
[1227] ( move 3 , ua ; move 0 - 3 , ul )  | ( move 3 , ua ; move ul - 4 , ul )  | ( move 3 , ua * 3 ; move ul - 4 , ul )  | ( move 3 , ua ; pen ul ; move 0 - 3 , ul )  
[1228] ( move 2 , 3 ; move ua , ua - 2 )  
[1229] ( move 2 , 2 ; move ua - 2 , ul )  
[1230] ( move ua , 0 ; move ul , 3 * 2 )  | ( move ua , ua ; move ul , 4 + 2 )  | ( move ua , ua ; move ul , 3 * 2 )  | ( move ua , ua + ua ; move ul , 3 + 3 )  | ( move ua , ua ; ( move ul , 3 + 3 ; pen ul ) )  | ( move ua , ua ; ( v0 = ul + ul ; move ul , 3 * 2 ) )  
[1231] ( move ul , 0 ; move ua , 3 * 2 )  | ( move ul , ua ; move ua , 3 * 2 )  | ( move ul , ua ; move ua , 3 * 2 ; pen 0 )  | ( pen ul ; move ul , ua ; move ua , 4 + 2 )  | ( move ul , 0 ; move ua , 3 * 2 ; move 0 , ua )  | ( move ul , ua ; move ua , 3 * 2 ; pen 0 - ua )  | ( pen ul / ua ; move ul , 0 ; move ua , 4 + 2 )  | ( ( move ul , ua ; move ua , 3 * 2 ) ; v0 = 2 )  
[1232] ( move 0 - 2 , 4 ; move ua , ul )  | ( move ul - 3 , 4 ; move ua , ul ; v0 = 2 )  
[1233] ( move 2 , 0 ; move ua - 4 , ul )  | ( move 2 , ua ; move ua - 4 , ul )  | ( move 2 , ua ; move ua - 4 , ul - ua )  | ( move 2 , ua ; move 2 , ul ; move ul / 3 , 0 )  
[1234] ( move 3 , ua ; move ua , 3 + 2 )  | ( move 3 , 0 ; move ua , 4 + ul )  | ( move 3 , ua ; move ua , 4 + ul )  | ( move 2 + ul , ua ; move ua , 4 + ul )  | ( move 3 , 0 ; move ua , 4 + ul ; move 0 , 2 )  | ( ( move 3 , ua ; v0 = ua ) ; move v0 , 4 + ul )  
[1235] ( move 3 , ul ; move ua + 2 , 2 )  
[1236] ( move 2 , 4 ; move 0 - ua , ul )  
[1237] ( move ul , 3 ; move ua + 2 , 2 )  | ( move ul , 3 ; move ul + ul , ul + ul ; move ua , ua )  | ( move ul , 2 + ul ; v0 = 2 ; move 4 * v0 , v0 )  
[1238] ( move 2 , 0 ; move ua , ul / 2 )  
[1239] ( move 3 , 3 ; move 0 - ua , ul )  
[1240] ( move 3 , ul ; move ul , 0 - 2 )  | ( move 3 , ul ; move 0 - ul , ul )  | ( move 3 , ul ; move 3 - 4 , ua + ul )  | ( move 3 , ul ; ( v0 = ul - 2 ; move v0 , ul ) )  | ( move 3 , ul ; ( v0 = ul - 3 ; move ul , v0 ) )  | ( v0 = ua + ul ; move 3 , v0 ; move ul - 2 , v0 )  
[1241] ( move ul - ua , 0 ; move 3 , 3 )  | ( move ul - ua , ua ; move 3 , 3 )  | ( move ul - ua , 0 ; move ua / 2 , 3 )  | ( move ul - ua , 0 ; move 3 , 2 + ul ; v0 = 3 )  | ( move ul - ua , ua ; v0 = 3 ; move 3 , v0 + ua )  
[1242] ( move ua + ul , 2 ; move 3 , 2 )  | ( move ua + ul , ul + ul ; move 3 , ua + 2 )  
[1243] ( move 2 , ul ; move 3 , 0 - ul )  | ( ( move 4 - 2 , ul ; move 3 , ua - ul ) ; v0 = 0 )  
[1244] ( move ua , 0 ; move 3 , 4 + ul )  | ( ( move ua , 0 ; move 0 , ul ) ; move 0 , ua ; move 3 , 4 )  
[1245] ( move ua , 0 - ul ; move 2 , 4 )  | ( move ua , ua - ul ; move 2 , 4 )  | ( move ua , ua - ul ; move ul , 4 )  | ( move ua , ua - ul ; move ul + ul , 4 )  
[1246] ( move ua + 3 , ul ; move 2 , 2 )  | ( move ua , ul ; move 3 , 0 ; move 2 , 2 )  
[1247] ( move 0 - 4 , ua ; move 2 , ul )  | ( move 2 - 4 , ua + ul ; move 4 , 0 - ul )  
[1248] ( move 0 - 3 , ul ; move 2 , ul )  | ( move ul - 4 , ul ; move 2 , ul )  
[1249] ( move 3 , 0 ; move ul , ul - 2 )  | ( move 3 , ua ; move ul , 3 + 2 )  | ( move 3 , 0 ; move ul , ua - ul )  | ( move 3 , ua ; move ul , ul - 2 )  | ( move 3 , ua ; move ul , ua - ul )  | ( move 3 , 0 ; move 0 - ul , ua / 3 )  | ( move 2 + ul , ua ; move ul , 3 + 2 )  | ( move 3 , ua * 3 ; move ul , ul - 2 )  | ( move ua / 2 , ua ; move ul , 4 + ul )  | ( move 3 , 0 ; move ul , 0 - ul ; pen ul )  | ( pen ul ; move 3 , ua ; move ul , 0 - ul )  | ( move 3 , ua ; move ul , ua - ul ; pen 4 - ul )  | ( move 3 , ua ; v0 = 0 - ul ; move ul , v0 )  | ( move 3 , 0 ; v0 = ua - ul ; move ul , v0 )  | ( move 4 - ul , 0 ; move ul , 0 - ul ; v0 = 2 / ua )  | ( move 3 , ua ; ( v0 = 2 - ul ; move v0 , ua - ul ) )  
[1250] ( move 0 - ul , 2 ; move ua , 4 )  | ( move ul , 3 + 2 ; move ua , ul )  | ( move ul , 4 + ul ; move ua , ul )  | ( move ul , 3 + 2 ; move 0 , ua ; move ua , ul )  
[1251] ( move 3 + 2 , ul ; move ua , 2 )  | ( ( move 4 + ul , ul ; move ua , 3 - ul ) ; move 0 , ul )  
[1252] ( move ua + 2 , ua ; move 4 , 2 )  | ( move ua + 2 , ua ; move 4 , ua + 2 ; v0 = ul )  
[1253] ( move 2 - ua , 0 ; move 4 , ul )  | ( move 2 - ua , ua ; move 4 , ul )  | ( move 0 , ua ; move 2 - ua , 0 - ua ; move 4 , ul )  
[1254] ( move 0 - ua , 3 ; move 3 , ul )  | ( move 0 - 3 , ua + 4 ; move ua , ua - ul )  
[1255] ( move 4 , ua ; move 0 - 2 , ul )  | ( move 4 , ua ; move ul - 3 , ul )  | ( move 4 , ua * 4 ; move 2 - 4 , ul )  | ( ( move 4 , ua ; move ul - 3 , ul ) ; v0 = 4 )  
[1256] ( move 2 , ua - 2 ; move 2 , ul )  | ( move ul + ul , 0 - 2 ; move 2 , ul ; v0 = ul )  | ( v0 = 2 ; move v0 , ua - v0 ; move v0 , ul )  
[1257] ( move 0 , 3 ; move ua , 2 / ua )  | ( move 0 , 3 ; move ua , ul / 3 )  | ( move 0 , 2 / ua ; move ua , 3 ; pen 3 )  | ( v0 = ua * 4 ; move ua , v0 * v0 )  
[1258] ( move ua , 0 ; move 2 , ul - 4 )  | ( move ua , ua ; move 2 , ua - 3 )  | ( move ua , ua ; move 2 , ul - 4 )  | ( move ua , ua ; move 4 / 2 , ul - 4 )  | ( move ua , ua ; move ul + ul , ua - 3 )  | ( move ua , ua ; move 0 , 3 ; move 2 , 2 / ua )  | ( ( v0 = ua ; move v0 , v0 ) ; move 2 , ua - 3 )  | ( move ua , 0 ; v0 = 4 - ul ; move ul + ul , ua - 3 )  
[1259] ( move ua , 0 - 3 ; move 3 , ul )  | ( move ua , ua - 3 ; move 3 , ul )  | ( move ua , ul - 4 ; move 3 , ul )  | ( move ua , ua - 3 ; move 3 , ua + ul )  
[1260] ( move 0 - 4 , ua ; move ul , 3 )  | ( move 0 - 4 , ua ; move ul , 2 + ul )  | ( move 0 - 4 , ua ; ( move ul , 3 ; pen ul ) )  | ( move 0 - 4 , 0 ; move 0 , 4 - 2 ; move ul , ua + ul )  
[1261] ( move 0 , ua / 3 ; move ua , 3 )  | ( v0 = ul - ua ; v1 = ua ; move ua , v1 / v0 )  
[1262] ( move 2 - 3 , ul ; move ua , 2 )  | ( move ul - 2 , ul ; move ua , 2 )  | ( move 0 - ul , ua + ul ; move ua , 2 )  | ( move 2 - 3 , ul ; move ua , ul + ul )  | ( move 2 - 3 , ul ; pen ul ; move ua , 2 )  | ( move ul - 2 , ul ; pen ul ; move ua , ua + 2 )  | ( move 0 - ul , ul ; ( move ua , 2 ; v0 = 4 ) )  | ( ( move ul - 2 , ul ; move ua , ua + 2 ) ; move 0 , ua )  
[1263] ( move 4 , 0 - ul ; move 2 , ul )  | ( move 3 , ua - ul ; move ul , ua ; move 3 - ul , ul )  | ( move 4 , ua - ul ; move ul , ul ; move ul , ua + ua )  | ( ( move 0 , 0 - ul ; pen ul ; move 4 , ua ) ; move 2 , ul )  
[1264] ( move 3 , 0 ; move ua , ua / 3 )  
[1265] ( move 3 , 2 ; move 2 , ua * ua )  | ( move 3 , ul + ul ; move 0 , ua * ua ; move 2 , ua )  
[1266] ( move 2 , 2 ; move ua - ul , 3 )  | ( move 2 , 2 ; move ua - ul , 4 - ul )  
[1267] ( move 2 , ul ; move 4 , 0 - ul )  | ( move 2 , ul ; move 4 , ua - ul )  | ( move 2 , ul - ua ; move 4 , 0 - ul )  | ( move 4 , ua / 2 ; move ul + ul , ul )  | ( move 2 , ul ; move 2 , ul - 2 ; move 2 , 0 )  | ( ( move 4 , ua / 2 ; move 2 , ul ) ; move 0 , ua / 4 )  | ( move 2 , ul ; move 3 + ul , ua - ul ; v0 = 4 / ua )  
[1268] ( move 0 - ul , ul ; move 4 , 2 )  | ( v0 = 4 ; move 3 - v0 , ul ; move v0 , 2 )  | ( move 3 - 4 , ul ; ( move 4 , 2 ; v0 = ul ) )  | ( ( move 0 - ul , ul ; v0 = 4 ) ; move v0 , 2 - ua )  
[1269] ( move ul - ua , 2 ; move 3 , 2 )  
[1270] ( move 3 , 0 ; move 4 , ua * ua )  
[1271] ( move 2 , 2 ; move 3 , ua * ua )  
[1272] ( move 3 , 3 + 2 ; move ua , ul )  | ( move 3 , 4 + ul ; move ua , ul )  | ( move 2 + ul , 4 + ul ; move ua , ul )  | ( move 0 , ul ; move 2 + ul , 4 ; move ua , ul )  
[1273] ( move 3 , 2 ; move ua - ul , 2 )  
[1274] ( move ua , 0 ; move 4 + ul , 4 )  | ( move ua , ua ; move 4 + ul , 4 )  | ( move ua , ua ; move ul , 4 ; move 4 , ua )  | ( ( move ua , 0 ; move ul , 4 ) ; move 4 , ua )  | ( move ua , ua ; v0 = 4 + ul ; move v0 , 4 )  | ( move ua , 0 ; v0 = 2 ; move 3 + v0 , v0 + v0 )  
[1275] ( move ua - 2 , ul ; move 3 , 2 )  
[1276] ( move ua , 0 ; move ua / 4 , 2 )  | ( move ua , ua ; move ua / 4 , 2 )  | ( move ua , 0 ; move ua / 4 , 2 - ua )  | ( move ua , 0 ; ( ( pen ul ; move ua / 4 , 2 ) ; pen ul ) )  
[1277] ( move ua + 2 , 4 ; move ul , 2 )  | ( ( move 4 * 2 , 4 ; v0 = 4 ) ; move ul , 2 )  | ( move ua + 2 , 4 ; pen ul ; move 4 - 3 , ul + ul )  
[1278] ( move ua - 3 , ul ; move 2 , 2 )  | ( move ua - 3 , ul - ua ; move 2 , 2 )  | ( move ua - 3 , ua + ul ; move 2 , 2 ; pen 3 )  
[1279] ( move ul , 0 ; move 3 - ua , 4 )  
[1280] ( move ua + ul , 2 ; move 3 , 3 )  | ( move ua + ul , 2 ; move 3 , 3 ; v0 = 2 )  | ( move ua + ul , 3 - ul ; move 3 , 3 ; pen ua * 4 )  
[1281] ( move ua , 4 + 2 ; move ul , 2 )  | ( move ua , 3 + 3 ; ( move ul , 2 - ua ; v0 = 4 ) )  
[1282] ( move 4 , 0 ; move ua - ul , 3 )  
[1283] ( move ua + 4 , ul ; move 2 , 2 )  | ( move ua + 4 , ul ; v0 = 0 ; move 2 , 2 )  | ( move ua + 4 , ul ; v0 = 2 ; move v0 , v0 )  
[1284] ( move ua , 2 ; move 4 + ul , 2 )  | ( ( move ua , 2 ; move 3 , 3 - ul ) ; move 2 , 0 )  | ( move ua , ul + ul ; move 4 + ul , 3 - ul ; pen 2 )  
[1285] ( move ua , ul ; move 0 - 3 , 4 )  | ( move ua , ul ; move ul - 4 , 3 + ul )  | ( move ua , ul ; v0 = 2 * 2 ; move ul - v0 , v0 )  
[1286] ( move 2 - 4 , ua ; move ua , 2 )  | ( move 0 - 2 , ua ; move ua , ul + ul )  | ( move ul - 3 , ua + ua ; move ua , 2 )  
[1287] ( move 3 , ua - 2 ; move 2 , ul )  | ( move 3 , 2 - 4 ; v0 = 3 - ul ; move v0 , ul )  | ( move ua / 2 , ua - 2 ; v0 = 2 - ua ; move 2 , ul )  
[1288] ( move 2 , 3 ; move ua , ul - 2 )  | ( move 2 , ua + 3 ; move ua , ul - 2 )  | ( move 0 - ua , ul + ul ; move ul - 3 , ul )  | ( move 2 , 3 ; move ua , ul - 2 ; v0 = 2 )  
[1289] ( move 3 , ua ; move 3 - ua , 2 )  
[1290] ( move ua + 3 , ul ; move 3 , 2 )  | ( move 3 , ul ; ( move ua , 0 ; move 3 , 2 ) )  
[1291] ( move 2 , ua ; move ua - 2 , 4 )  | ( move 2 , 0 ; pen ul ; ( move ua - 2 , 4 ; v0 = ul ) )  
[1292] ( move 4 + ul , 0 ; move ua , 4 )  | ( move 4 + ul , ua ; move ua , 4 )  | ( move 4 + ul , ua * 2 ; move ua , 4 )  | ( move 3 , ua ; move 2 , ua ; move ua , 4 )  | ( move 4 , 0 ; ( move ul , 0 ; move ua , 3 + ul ) )  | ( move 4 + ul , ua ; v0 = ua * ua ; move ua , 4 )  
[1293] ( move 3 , ua ; move 3 + 2 , ul )  | ( move 3 , ua ; move 4 + ul , ul )  | ( move 3 , 0 ; move 3 + 2 , ua + ul )  | ( move 3 , ua ; move 2 , ul ; move 3 , ua )  | ( move 2 , 0 ; move ul , 0 ; move 4 + ul , ul )  | ( move 3 , 0 ; move ul , ul ; move 4 , ua * 2 )  | ( v0 = 3 + 2 ; move 3 , ua ; move v0 , ul )  | ( move 3 , ua ; move 4 + ul , ua + ul ; pen ua )  | ( move 3 , 0 ; move 4 + ul , ua + ul ; move 0 , 0 )  | ( move 3 , ua * 4 ; move 4 + ul , ul ; pen ul / ua )  | ( move 3 , ua ; move ul + ul , ul ; move 4 - ul , ua )  
[1294] ( move 3 , 0 ; move 2 , ul / ua )  | ( move 2 , ua - 3 ; move 0 - 3 , 3 )  | ( move 3 , 0 ; move 3 - ul , ul / ua )  | ( move 3 , 0 ; move 2 , ul / ua ; v0 = ul )  | ( move 3 , ua ; move 2 , ul / ua ; v0 = ua )  
[1295] ( move ul , 3 ; move 3 , 0 - ul )  | ( move ul - 2 , 0 ; move 2 + ul , 2 )  | ( move ul , 3 ; pen ul ; move 3 , ua - ul )  | ( move 0 , ul ; move ul , 2 ; move 3 , ul - 2 )  
[1296] ( move ua + 2 , 4 ; move 2 , ul )  | ( move ua + 2 , 2 + 2 ; move 2 , ul )  | ( move 2 , 4 ; move ua , ua ; move 3 - ul , ul )  | ( move ua + 2 , 4 ; move 2 , ul ; v0 = 2 + ul )  
[1297] ( move 2 , 0 ; move ul - 4 , ul )  | ( move 2 , 0 ; move 0 - 3 , ua + ul )  | ( move 2 , ua ; move ul - 4 , 2 - ul )  | ( move 2 , 0 ; move 0 - 3 , ul ; pen 0 )  | ( ( move 2 , 0 ; move 0 - 3 , ul ; pen ul ) ; v0 = ul )  
[1298] ( move 2 , 0 ; move ua , ua / 4 )  
[1299] ( move 2 , 2 ; move ua - 3 , ul )  | ( move ul + ul , 2 ; move ua - 3 , ul )  
[1300] ( move 3 , 0 ; move ua , ul / 2 )  | ( move 3 , ua ; move ua , 3 / ua )  | ( move 3 , ua ; move ua , 2 / 4 ; v0 = 4 )  
[1301] ( move 4 , ua ; move 0 - 3 , ul )  | ( move 2 + 2 , 0 ; move 0 - 3 , ul )  | ( move 4 , 0 ; move 0 - 3 , 2 - ul )  | ( move 4 , 0 ; move ul - 4 , ua + ul )  | ( move 4 , 0 ; move ul - 4 , ul ; pen ua )  
[1302] ( move 4 + 2 , 2 ; move ua , ul )  | ( move 4 + 2 , 2 ; move ua , ul ; move 0 , ul )  
[1303] ( move 2 , ua ; move ul - 3 , 2 )  
[1304] ( move ua , 0 ; move 4 , 4 + ul )  | ( move ua , ua ; move 4 , 4 + ul )  | ( ( move ua , 0 ; move 0 , ul ) ; v0 = 2 ; move 4 , 4 )  
[1305] ( move 3 + 3 , ua ; move 2 , ul )  | ( move 4 + 2 , ua * 3 ; move ul + ul , ul )  | ( move 3 * 2 , 0 ; ( move 0 , ua ; move 2 , ul ) )  | ( ( move ul , ua ; move 4 + ul , 0 ) ; move 2 , ul )  
[1306] ( move ua , 2 ; move 2 , ul - 3 )  | ( move ul , ua + 3 ; move ul , ul / ua ; move ua , 2 )  
[1307] ( move 4 + 2 , ul ; move ua , 2 )  | ( move 3 + 3 , ul ; move ua , 2 )  | ( move 3 * 2 , ul ; move ua , 2 )  | ( move 3 * 2 , ua + ul ; move ua , 2 )  | ( move 4 + 2 , ul ; move ua , 3 - ul )  | ( move 4 , ul ; move 2 , ua ; move ua , 2 )  | ( ( move 2 , ul ; move 4 , ua ) ; move ua , 2 )  | ( move 4 + 2 , ul ; move 0 , ul ; move ua , ul )  
[1308] ( move 2 , ul ; move 0 - 4 , ul )  
[1309] ( move 4 , ul ; move 0 - ul , 2 )  | ( move 4 , ul ; move ul , ul - 2 )  | ( move 4 , ul ; v0 = ul - 2 ; move ul , v0 )  | ( move 4 , ul - ua ; ( move 3 - 4 , 2 ; pen 0 ) )  | ( move 4 , ul ; move ul , 0 - ul ; v0 = 2 - ua )  | ( move 4 , ua + ul ; v0 = ua ; move ul , 0 - ul )  | ( v0 = ul ; move 3 + v0 , ul ; move v0 , v0 - 2 )  
[1310] ( move ua , 0 - 3 ; move ul , 4 )  | ( move ua , ul - 4 ; move ul , 2 * 2 )  | ( move ua , ua - 3 ; move ul , 3 + ul )  | ( move ul , ua ; move ua , 0 - 3 ; move ul , 4 )  | ( move 0 , ul - 4 ; move ua , ua ; move ul , 4 )  
[1311] ( move 4 + ul , 4 ; move ua , 0 )  | ( move ul , 4 ; move ua + 4 , 0 )  | ( move ua - ul , 4 ; move ua , 0 )  | ( move ua + ul , 4 ; move 4 , ua )  | ( move 4 + ul , 4 ; move ua , ua )  | ( move ua , 4 ; move 4 + ul , ua )  | ( move ua , 3 + ul ; move 3 + 2 , ua )  | ( move ua - 3 , 4 ; move ua + 2 , ua )  | ( move ua , 3 + ul ; move ua - ul , 0 )  | ( move 4 , 4 ; move ua , 0 ; move ul , 0 )  | ( move ua + ul , 4 ; move 4 , ua ; pen 4 )  | ( move ua , 4 ; move 4 , ua ; move ul , ua )  | ( move ua , 4 ; move ul , ua ; move 4 , ua )  | ( move 4 , 4 ; move ua , ua ; move ul , ua )  | ( v0 = ua + 4 ; move ul + v0 , v0 )  | ( move ul , 4 ; move ua , 0 ; move 4 , ua * 4 )  | ( move ua , 3 + ul ; move ul , ua ; move 4 , ua )  | ( v0 = ua + 2 ; move 3 + v0 , v0 + v0 )  | ( move ul , 4 ; v0 = ua ; move v0 + 4 , v0 )  | ( move ul , 4 ; move ua + 2 , 0 ; move 3 - ul , ua )  | ( move ua - ul , ua + 4 ; v0 = ua ; move ua , ua )  | ( move 3 + 3 , 4 ; v0 = ua - ul ; move v0 , ua )  | ( ( move 2 , 4 ; move ua + 3 , ua ) ; move 0 , ua + 2 )  | ( ( move ua , 3 + ul ; move 4 + ul , 0 ) ; v0 = 3 )  | ( v0 = ua ; move v0 + 4 , 4 ; move ul , ua + v0 )  | ( move 4 + ul , 4 ; move ua , ua * 3 ; v0 = ua + ua )  | ( move ua + 4 , 4 ; ( move ul , ua ; pen ul ) ; v0 = ua )  
[1312] ( move ua , ul - 3 ; move 2 , 2 )  | ( move ua , ul - 3 ; v0 = 2 ; move v0 , 2 )  | ( move ua , ua - 2 ; v0 = 3 ; move 2 , v0 - ul )  | ( move ua , 2 - 4 ; move 2 - ul , ua + 2 ; move ul , 0 )  
[1313] ( move 4 + ul , 0 ; move ul , 3 )  | ( move 4 + ul , ua ; move ul , 3 )  | ( move 4 + ul , 0 ; move ul , 2 + ul )  | ( move 3 + 2 , ua ; move ul , 4 - ul )  | ( move 4 + ul , ua ; move 2 - ul , 3 )  | ( move ul , ua ; move 2 * 2 , 0 ; move ul , 3 )  | ( move 4 + ul , ua * 2 ; move ul , 3 ; pen ul )  
[1314] ( move ul , 0 ; move 4 + 3 , ul )  | ( move ul , ua ; move 4 + 3 , ul )  | ( move ul , ua ; move 4 , ul ; move 3 , ua )  | ( ( move ul , ua ; move ul , ul ) ; move ua , ua )  | ( ( move ul , ua ; move ua , ul ) ; move ul , ua )  | ( move ul , ua + ua ; v0 = ua + ul ; move v0 , v0 )  
[1315] ( move 3 , 0 ; move ua - 4 , ul )  | ( move 3 , 0 ; move ua - 4 , ua + ul )  | ( move 3 , ua * 3 ; move ua - 4 , ul )  
[1316] ( move 4 , 0 ; move ul , ul - 2 )  | ( move 4 , ua ; move ul , 2 - 3 )  | ( move 4 , ua ; move ul , 3 - 4 )  | ( move 4 , ua ; move ul , ul - 2 )  | ( move 4 , ua ; move ul , ua - ul )  | ( move 3 + ul , ua ; move ul , ul - 2 )  | ( move 4 , ua * 4 ; move ul , ua - ul )  | ( move 4 , ua + ua ; move ul , ua - ul )  | ( move 3 + ul , ua + ua ; move ul , ul - 2 )  | ( move 2 , ua ; move ul + ul , 0 ; move ul , ua - ul )  
[1317] ( move ul , 0 - 3 ; move ua , 4 )  | ( move 0 , ul ; move ul , ua - 4 ; move ua , 4 )  
[1318] ( move ua / 2 , 0 ; move 3 , ul )  | ( move ua / 2 , ua ; move 3 , ul )  | ( pen ul ; move ua / 2 , ua ; move 3 , ul )  
[1319] ( move 0 - 3 , 4 ; move ua , ul )  
[1320] ( move 2 , ua ; move 3 , ul - 2 )  | ( move 2 + ul , ua / 3 ; move 2 , ul )  
[1321] ( move 4 , ul ; move 2 , 0 - ul )  | ( move 4 , ul ; move 2 , ua - ul )  | ( move 4 , ua + ul ; move 2 , ul - 2 )  | ( move 4 , ul ; move 2 , ua - ul ; move 0 , 2 )  | ( move 4 , ul ; move 2 , ua - ul ; move 3 , v0 )  | ( v0 = ul - 3 ; move v0 , 0 ; move v0 + v0 , ul )  
[1322] ( move 4 + ul , 0 ; move 3 , ul )  | ( move 4 + ul , ua ; move 3 , ul )  | ( move 4 + ul , ua ; move ua - 3 , ul )  | ( move 3 , 0 ; ( move 2 , 0 ; move 3 , ul ) )  | ( move ul , ua * 3 ; ( move 4 , 0 ; move 2 + ul , ul ) )  
[1323] ( move 4 , 0 ; move ua + ul , 4 )  | ( move 2 + 2 , ua ; ( move ua , 4 - ua ; move ul , ua ) )  
[1324] ( move ua , 0 ; move ul , 3 * 3 )  | ( move ua , ua ; move ul , 3 * 3 ; pen 2 )  
[1325] ( move 0 - 3 , ul ; move ul , 3 )  | ( move ul - 4 , ul ; move ul , 3 )  | ( move 4 , ul ; move ul / 3 , ul )  | ( move 4 , ul ; move ul / 4 , ul )  | ( move 4 , ul ; move ul , ul / ua )  | ( move 4 , ul ; move ul / 4 , 3 / 4 )  | ( move 4 , ul - ua ; move ul , ul / ua )  | ( move ul - 4 , ul ; move 0 , ua ; move ul , 2 + ul )  
[1326] ( move 2 , 4 + 2 ; move ua , ul )  
[1327] ( move 3 , ul ; move ua + 2 , 3 )  | ( move 4 , ul ; move ua + 2 , 3 )  | ( move 3 + ul , ul ; move ua + 2 , 3 )  
[1328] ( move 2 , 0 ; move ua , 4 / ua )  
[1329] ( move ua , 4 + 3 ; move ua , 2 )  
[1330] ( move ul , ul ; move 0 - 3 , 3 )  | ( move ul , ul ; move ul - 4 , 3 )  | ( move 3 , 4 ; move ul , ul / ua )  | ( move ul , ul ; move ul - 4 , 4 - ul )  | ( move 2 + ul , 3 + ul ; move ul , ul / ua )  | ( ( pen ul ; move 3 , 2 * 2 ) ; move ul , ul / ua )  | ( move ul , ul ; v0 = ua + 3 ; move ua - v0 , v0 )  
[1331] ( move ua , 3 ; move ul , 3 + 2 )  | ( move ua , 3 ; move ul , 4 + ul )  | ( move ua , 3 ; move 0 , 2 ; move ul , 3 )  | ( move ua , 2 + ul ; move 0 , ul ; move ul , 4 )  
[1332] ( move 2 , ua ; move 2 - ua , 4 )  | ( move 2 , ua ; move 2 - ua , 3 + ul )  | ( move ul + ul , 0 ; move 2 - ua , 4 ; v0 = 0 )  
[1333] ( move 0 , ua / 3 ; move ua , 4 )  | ( v0 = ul - ua ; move ua , ul / v0 )  
[1334] ( move ua - 2 , 4 ; move 2 , ul )  | ( move ua - 2 , 4 ; move ul + ul , ul )  
[1335] ( move 3 , 3 + 2 ; move ul , ul )  | ( move 3 , 4 + ul ; move ul , ul )  | ( move 3 , 4 + ul ; move ul , ua + ul )  | ( move ul , 3 ; move ul - 4 , ul + ul )  | ( move 0 , 2 ; move 3 , 3 ; move 4 - 3 , ul )  | ( move 3 , 4 + ul ; move ul , ul ; move 0 , ua )  
[1336] ( move 4 , 0 ; move 2 / ua , ul )  | ( move 4 , 0 ; move ul / 2 , ul )  | ( move 4 , ua ; move ul / 2 , ul )  | ( move 4 , ua ; move ul / 4 , ul )  | ( move 2 * 2 , ua ; move ul / 3 , ul )  | ( move 4 , 0 ; ( move ul / 2 , ul ; pen ul ) )  | ( move 3 + ul , 0 ; move ul / 2 , ul ; v0 = 3 )  | ( ( move 4 , 0 ; pen ul / 2 ) ; move 2 / ua , ul )  | ( move 3 + ul , ua ; move ul / 2 , ul ; v0 = 4 )  | ( move ul , 0 ; move 2 + ul , ua ; move ul / 3 , ul )  
[1337] ( move 3 , ua ; move 3 , ul - 2 )  | ( move 4 - ul , 0 ; move 3 , ua - ul )  | ( move 3 , 0 ; pen ul ; move 3 , ul - 2 )  
[1338] ( move 3 , 0 ; move ul , ul - 4 )  | ( move 3 , ua ; move ul , ua - 3 )  | ( move 2 + ul , 0 ; move ul , ul - 4 )  | ( ( move 3 , ua ; move ul , ua - 3 ) ; pen ul )  | ( pen ul ; move 3 , ua + ua ; move ul , ua - 3 )  
[1339] ( move ua , 2 ; move ul , 3 * 2 )  | ( move ua , ul + ul ; move ul , 4 + 2 )  | ( ( move ua , 2 ; move ul , 3 * 2 ) ; pen ua )  
[1340] ( move ua , 0 - 4 ; move 4 , ul )  | ( move ua , ua - 4 ; move 4 , ul )  
[1341] ( move ul , 4 ; move ua - 2 , 2 )  
[1342] ( move 3 , ua ; move ua , 4 + 3 )  | ( ( move 3 , ua * 2 ; move ua , 4 + 3 ) ; move 0 , ul )  
[1343] ( move ua , 3 ; move ua + 3 , 4 )  | ( move ua , 3 ; move ua + 3 , 4 ; v0 = 4 )  | ( v0 = ua + 3 ; move ua , v0 ; move v0 , 4 )  
[1344] ( move 4 * 2 , 0 ; move ul , ul )  | ( move 4 + 4 , 0 ; move ul , ul )  | ( move 4 + 4 , ua ; move ul , ul )  | ( move 4 + 4 , ua * 2 ; move ul , ul )  | ( move 4 * 2 , ua + ua ; move ul , 2 - ul )  | ( move 4 , ua ; move 3 + ul , ua ; move ul , ul )  | ( ( move 0 , 0 - ul ; move 4 * 2 , ul ) ; move ul , ul )  
[1345] ( move ua , 2 ; move 2 , 3 / ua )  | ( move ua , 3 - ul ; move 2 , ul / 2 )  | ( v0 = 2 ; move ua , 2 ; move v0 , ul / 2 )  
[1346] ( move 3 , ua - ul ; move 2 , 3 )  
[1347] ( move ua , ua ; move 2 , 4 + 4 )  | ( move ua , 0 ; move 2 , ua * ua )  | ( move ua , ua ; move 2 , ua * ua ; move 0 , ua )  | ( v0 = ua ; move v0 , 0 ; move 2 , ua * v0 )  
[1348] ( move 2 , 2 ; move 4 - ua , ul )  | ( move 2 , 3 - ul ; move 4 - ua , ul )  | ( move 2 , 2 ; move 4 - ua , ul - ua ; pen 2 + ul )  
[1349] ( move 4 + 3 , ua ; move 2 , ul )  | ( move 2 / 4 , ua ; ( move ua , ua ; move 2 , ua + ul ) )  
[1350] ( move 3 , 0 ; move ua , 4 / ua )  | ( move 3 , 0 ; move ua , 4 / ua ; v0 = ua )  
[1351] ( move 3 , 0 ; move ul , 3 / ua )  | ( move 3 , ua ; move ul , 3 / ua )  | ( move 4 - ul , ua ; move ul , 2 / 4 )  | ( move 3 , ua * 3 ; move 0 , 3 / ua ; move ul , 0 )  
[1352] ( move 2 , 3 ; move ua - ul , 3 )  
[1353] ( move ua + 2 , 3 ; move ul , 4 )  | ( move ua + 2 , 3 ; move ul , 3 + ul )  | ( move ua + 2 , 4 - ul ; move ul , 4 )  | ( v0 = 4 + 4 ; move v0 , 3 ; move ul , 4 )  
[1354] ( move 4 , 4 ; move ua , 0 - ul )  | ( move 4 , 4 ; move ua , ua - ul )  | ( move 2 * 2 , 4 ; move ua , ua - ul )  | ( move 3 + ul , 4 ; move ua , ua - ul )  | ( move 3 + ul , 4 ; move ua , ul - 2 ; v0 = 4 )  | ( move 3 + ul , 4 ; move ua , ul - 2 ; pen ul / ua )  | ( v0 = 4 ; ( move v0 , v0 ; move ua , ua - ul ) )  
[1355] ( move 4 + ul , 2 ; move 2 , ul )  | ( v0 = 2 ; move 3 + 2 , v0 ; move v0 , ul )  
[1356] ( move 2 , ua ; move 2 - 4 , ul )  | ( move 2 , ul ; move ul - 3 , ua - ul )  | ( move 2 , 0 ; pen ul ; move ul - 3 , ul )  | ( move 2 , ua + ua ; move ul - 3 , 3 - 2 )  | ( move 2 , ua ; move 0 - 2 , ua + ul ; v0 = ul )  | ( move 2 , ua ; move ul - 3 , ul ; ( pen ul ; v0 = 3 ) )  
[1357] ( move 3 , ul ; move 2 + ul , 3 )  | ( move 3 , ul ; move 3 , 2 + ul )  | ( move 2 + ul , ul ; move ua / 2 , 3 )  | ( move 3 , ul ; move 2 + ul , 3 ; pen 4 )  | ( v0 = 3 ; move v0 , ul ; move 3 , v0 )  | ( v0 = 3 ; move v0 , ul ; move v0 , 3 )  | ( move 3 , ul ; v0 = 3 ; move v0 , v0 )  | ( move 3 , ul ; move 2 + ul , 3 ; move 0 , ua )  | ( move 3 , ul ; move 3 , 3 - ua ; move 0 , ul )  | ( v0 = 3 ; move v0 , ul ; move v0 , v0 )  | ( v0 = 4 - ul ; move v0 , ul ; move 3 , v0 )  | ( ( move 3 , ul ; move 2 + ul , 3 ) ; pen 2 + ul )  | ( move 4 - ul , ul ; ( move 2 + ul , 3 ; pen 4 ) )  | ( v0 = 2 + ul ; move v0 , ul ; move v0 , v0 )  | ( v0 = 3 ; move v0 , 4 - v0 ; move v0 , v0 )  | ( ( move 2 + ul , ul ; v0 = 3 ) ; move v0 , v0 )  
[1358] ( move 3 , 4 + 2 ; move ua , ul )  | ( move 3 , 3 * 2 ; move ua , ul )  | ( move 3 , 4 + 2 ; move ua , ul ; v0 = ul )  | ( move 3 , 4 + 2 ; move ua , ul ; v0 = ua + ul )  
[1359] ( move 2 , 4 ; move ul - ua , 2 )  
[1360] ( move 4 , ul ; move 0 - ul , 3 )  | ( move ua - 2 , ul ; move 0 - ul , 3 )  | ( move ua - 2 , ul ; move 0 , 0 ; move 0 - ul , 3 )  | ( move 0 , ul ; ( move ua - 2 , ua ; move ul - 2 , 3 ) )  
[1361] ( move ul , 0 ; move ul - 4 , 3 )  | ( move 3 , 3 ; move ul , ul / 4 )  | ( move ul , ua ; move ul - 4 , 3 )  | ( move 3 , 3 ; move 0 - ul , ul - 4 )  | ( move 2 + ul , 3 ; move ul , ul / 4 )  | ( move ul , 0 ; pen ul ; move ul - 4 , 3 )  | ( move ul , ua * 3 ; move ul - 4 , 3 ; pen 3 )  | ( move 3 , ua + 3 ; move ul , ul / ua ; v0 = ua )  
[1362] ( move ua , 2 - 3 ; move 3 , ul )  | ( move ua , ua - ul ; move 3 , ul )  | ( move ua , ul - 2 ; pen ul ; move 3 , ul )  | ( move ua , 2 - 3 ; move 2 + ul , ua + ul )  | ( move ua , 0 - ul ; v0 = 3 ; move v0 , ul )  | ( move ua , ua - ul ; move 3 , ul ; pen ua + ul )  | ( ( move 2 , ua - ul ; move 4 , 0 ) ; move 3 , ul )  
[1363] ( move ua + 3 , 2 ; move ul , 4 )  | ( move ua + 3 , ua + 2 ; move ul , 4 )  | ( move ua + 3 , 2 ; move ul , 4 ; pen ul )  | ( move ua + 3 , 2 ; move 0 - ul , ul ; pen 3 * 2 )  
[1364] ( move ul , 3 ; move 3 + 2 , ul )  | ( move ul , 3 ; move 4 + ul , ul )  | ( move ul , 4 - ul ; move 4 + ul , ul )  
[1365] ( move ua , ul ; move 4 + 2 , 3 )  | ( move ua , ul ; move 2 , 2 + ul ; move 4 , 0 )  | ( move ua , ul ; move 2 , 3 ; move 4 , ua + ua )  
[1366] ( move 4 , 0 ; move ul , ua - 4 )  | ( move 4 , 0 ; move ul , 0 - 4 ; pen 4 )  | ( move 4 , 0 ; ( move ul , 0 - 4 ; v0 = 0 ) )  | ( move 4 , 0 ; move ul , ua - 4 ; v0 = 3 * 2 )  | ( move 0 , ua * 3 ; move 4 , ua ; move ul , ua - 4 )  
[1367] ( move ul , 4 + 3 ; move ua , 2 )  | ( move ul , 4 + 3 ; v0 = ua ; move v0 , 2 )  
[1368] ( move 3 , 3 ; move ua - 2 , ul )  | ( move 3 , 3 ; v0 = ua ; move v0 - 2 , ul )  
[1369] ( move 3 + 2 , ul ; move 3 , ul )  | ( move 4 + ul , ul ; move 3 , ul )  | ( move 4 + ul , ua + ul ; move 3 , ul )  | ( move 3 + 2 , ul ; move 3 , ul ; v0 = ua )  | ( move 4 + ul , ul ; move ul , ul ; move 2 , 0 )  | ( move 4 + ul , ul - ua ; move 0 , ul ; move 3 , ua )  | ( move 4 + ul , ul ; v0 = ul ; move 2 + v0 , ul )  | ( move 4 + ul , ul ; move 0 , ua + ul ; move 2 + ul , ua )  | ( move 4 + ul , ul ; move 2 + ul , ul ; move ul / 2 , ul )  
[1370] ( move ul , 2 ; move ua , 3 * 2 )  
[1371] ( move ua , 2 - 4 ; move ua , 3 )  | ( move ua , ul - 3 ; move ua , 3 )  
[1372] ( move ua , ul - 3 ; move 2 , 3 )  | ( move ua , ul - 3 ; move 3 , 3 )  | ( move ul - 4 , ul ; ( move ua , ul / ua ; move 0 , ul ) )  | ( pen 0 ; ( ( pen ul ; move ua , ul - 3 ) ; move 3 , 3 ) )  
[1373] ( move ul , 0 ; move 4 , ul - 3 )  | ( move ul , ua ; move 4 , 2 - 4 )  | ( move 3 - 2 , ua ; move 4 , 2 - 4 )  | ( move 0 , ul ; move ul , ua - ul ; move 4 , 2 - 4 )  | ( ( move ul , ua ; move 4 , ul - 3 ) ; v0 = ua + ul )  
[1374] ( move 3 , 2 ; move ua , 4 + ul )  | ( move 3 , 2 ; move ua , 4 + ul ; move ul , 3 )  
[1375] ( move ul , 0 ; move 4 + ul , 4 )  | ( move ul , 0 ; move ua - ul , 4 )  | ( move 2 - 3 , 3 ; move ua - ul , ul )  | ( move ul , 0 ; move 3 + 2 , 4 ; v0 = ua )  
[1376] ( move 4 , 0 ; move 4 - ua , ul )  | ( move 4 , ua ; move 4 - ua , ul - ua )  | ( ( move 4 , ua ; v0 = 4 - ua ) ; move v0 , ul )  
[1377] ( move 2 , 3 ; move 3 - ua , ul )  | ( move 2 , ua + 3 ; move 3 - ua , ul )  
[1378] ( move 3 , 4 ; move ua + ul , 2 )  | ( move 3 , 4 ; move ua + ul , ul + ul )  | ( move 4 - ul , 4 ; move ua + ul , ul + ul )  
[1379] ( move ul , 3 ; move ua , 3 + 3 )  | ( move ul , 3 ; move ua , 3 * 2 )  | ( move ul , 2 + ul ; move ua , 4 + 2 )  | ( move ul , 3 ; move ua , 4 + 2 ; pen ul )  | ( move ul , 4 - ul ; move 0 , 2 ; move ua , 4 )  
[1380] ( move 2 , ua ; move ua , 4 + 4 )  | ( move 2 , 0 - ua ; move ua , 4 + 4 )  
[1381] ( move ua - ul , 4 ; move 2 , 2 )  | ( move ua - ul , 3 + ul ; ( pen ul ; move 2 , 2 ) )  | ( ( move ua - ul , 4 - ua ; v0 = 2 ) ; move v0 , 2 )  
[1382] ( move ua , 3 * 2 ; move 2 , ul )  | ( move ua , 3 * 2 ; move 4 / 2 , ul )  | ( move ua , 4 + 2 ; move ua / 3 , ul )  | ( move ua , 3 * 2 ; move ul , 4 - 3 ; move ul , ua )  
[1383] ( move ua , 0 ; move 4 , ul - 4 )  | ( move ua , ua ; move 4 , ul - 4 )  | ( move 4 , ul / ua ; move ua , 3 ; pen 2 )  | ( move ua , 0 - ua ; move 2 * 2 , ul - 4 )  | ( move ua , 0 ; move 4 , ul - 4 ; v0 = ul )  | ( move 4 , ul / ua ; move ua , 2 + ul ; v0 = 4 )  
[1384] ( move ua , 3 * 2 ; move ua , 3 )  | ( move 0 , ul + ul ; move ua , 4 ; move ua , ua + 3 )  
[1385] ( move 3 , ul ; move 3 + 2 , ul )  | ( move 3 , ul ; move 4 + ul , ul )  | ( move 4 - ul , ul ; move 3 + 2 , ul )  | ( move 3 , ul ; move 4 + ul , ua + ul )  | ( move 3 , ul ; pen ul ; move 4 + ul , ul )  | ( move 3 , ul ; move ul , ul ; move 2 + 2 , 0 )  | ( move 3 , ul ; move 4 + ul , ul ; v0 = 0 )  | ( move 3 , ul ; move 3 + 2 , ul ; pen ul + ul )  
[1386] ( move 3 , 2 ; move ua , ua - 4 )  
[1387] ( move ul , 2 ; move ua , 4 + 3 )  | ( move ul , 3 - ul ; move ua , 4 + 3 )  | ( ( move ul , 3 - ul ; move ua , 4 + 3 ) ; move 0 , ua )  
[1388] ( move ua - 4 , ul ; move 2 , 2 )  
[1389] ( move 4 , ua ; move 2 , ua - 3 )  | ( move 4 , 0 ; move ul + ul , ua - 3 )  | ( move 3 + ul , 0 ; move 2 , ua - 3 ; pen ua )  | ( pen ul ; move 2 , ul / ua ; move 3 + ul , 3 )  | ( move 4 , ua * 4 ; move 0 , ul - 4 ; move 2 , 0 )  
[1390] ( move 2 , 2 ; move ua - ul , 4 )  
[1391] ( move ua , 3 ; move 4 - ua , 2 )  
[1392] ( move 3 , 0 - 4 ; move ul , ul )  | ( move 3 , ua - 4 ; move ul , ul )  | ( move ul , ul / ua ; move 3 , ua - ul )  | ( move 2 + ul , ua - 4 ; move ul , ul - ua )  | ( move ul , ul / ua ; move 2 + ul , ua - ul ; pen ul )  
[1393] ( move ul , ul - 2 ; move 3 , 2 )  | ( move ul , ua - ul ; move 2 + ul , 2 )  | ( move ul - 4 , ua + ul ; move ul , ul )  | ( move ul - 4 , ul ; move ul , ul ; v0 = ua )  | ( move ul , ua - ul ; ( pen ul ; move 3 , 2 ; move 0 , ua ) )  
[1394] ( move ua - ul , 3 ; move 3 , 2 )  
[1395] ( move ua , 2 ; move 3 , 4 + ul )  | ( move ua , 3 - ul ; move 4 - ul , 4 + ul )  
[1396] ( move ua , 2 ; move ul , 4 + 3 )  | ( move ua , 2 - ua ; move ul , 4 / ua )  | ( move ua , ul + ul ; move ul , 4 / ua )  | ( move ua , 2 ; move 0 , 4 ; move ul , ua + 3 )  | ( move 0 , ul ; move ua , ul ; move ul , 2 / 3 )  
[1397] ( move 4 , 0 ; move ua - ul , 4 )  | ( move 3 , ua ; move ul , ua ; move ua - ul , 4 )  
[1398] ( move ua , 4 + 3 ; move 2 , ul )  | ( move ua , 4 + 3 ; move 2 , ul - ua )  
[1399] ( move 3 , 2 ; move ua , ul - 3 )  
[1400] ( move ul , ua ; move 4 , 3 + 2 )  | ( move ul , ua ; pen ul ; move 4 , 4 + ul )  | ( move ul , ua ; ( move 4 , 4 + ul ; v0 = 2 ) )  | ( move ul , ua * 3 ; move 0 , 3 ; move 3 + ul , ua + 2 )  | ( v0 = 3 + ul ; move ul , ua ; move v0 , ul + v0 )  
[1401] ( move 3 , ul ; move ua + 3 , 3 )  | ( move 3 , ul ; move ua , 3 ; move 2 + ul , 0 )  | ( move 2 + ul , ul ; move 3 , 3 ; move ua , ua )  
[1402] ( move 3 , 4 + ul ; move ua , 2 )  | ( ( move 3 , 4 + ul ; move 0 , ul ) ; move ua , ul )  
[1403] ( move 4 - ua , ul ; move 2 , 2 )  | ( move 4 - ua , ul ; v0 = 2 ; move v0 , v0 )  
[1404] ( move 4 , 3 + ul ; move ua , 2 )  | ( move 4 , 4 - ua ; move ua , 2 )  | ( move 3 + ul , 4 ; move ua , ua + 2 )  | ( move 4 , 4 ; move ua , 2 ; move 0 , 3 )  | ( move 4 , 4 ; pen ul ; move ua , ua + 2 )  | ( move 4 , 4 ; v0 = ua ; move v0 , 2 )  | ( v0 = 4 ; move 4 , v0 ; move ua , 2 )  | ( move 4 , 4 ; ( v0 = 2 ; move ua , v0 ) )  | ( ( move 3 + ul , 4 ; move ua , 2 ) ; v0 = ua * 2 )  
[1405] ( move 4 , 2 ; move ua + ul , 3 )  | ( move ua / 2 , 2 ; move ul , ua ; move ua + ul , 3 )  
[1406] ( move 2 , ua / 2 ; move 2 , ul )  | ( move ul + ul , ul ; move 2 , 0 - ul ; v0 = 0 )  | ( move ul + ul , ul ; move ul , ua - ul ; move ul , 0 )  
[1407] ( move ua , ua ; move 4 + 4 , 2 )  | ( move ua , ua ; move 4 + 4 , ua + 2 )  | ( move ua , ua ; move 4 * 2 , 3 - ul )  
[1408] ( move ua - 2 , ul ; move 2 , 4 )  | ( move ua - 2 , ul ; move 2 , 4 - ua )  
[1409] ( move ul - 3 , ua ; move 2 , 3 )  | ( move 0 - 2 , 0 ; move 2 , 2 + ul )  | ( move 4 - ua , 0 ; move 2 , 4 - ul )  | ( ( move ul - 3 , 0 ; move 2 , 3 ) ; pen ul - 4 )  
[1410] ( move 4 , ul ; move 3 , 0 - ul )  | ( move 4 , ul ; move 3 , ua - ul )  | ( move 4 , ul ; move 3 , ua - ul ; move ul / ua , 3 )  | ( move 4 , ua + ul ; v0 = ua - ul ; move 3 , v0 )  
[1411] ( move ul , 0 ; move 4 * 2 , ul )  | ( move ul , 0 ; move ua + 2 , ul )  | ( move ul , ua ; move 4 * 2 , ul )  | ( move ul , ua ; move 4 + 4 , ul )  | ( move ul , ua ; move ua + 2 , ul )  | ( pen ul ; move ul , ua ; move 4 * 2 , ul )  | ( move ul , 0 ; ( move ua , ul ; move 2 , ua ) )  | ( move ul , ua ; move ul + ul , ul ; move ua , 0 )  
[1412] ( move ua , 3 ; move 2 , 4 + ul )  
[1413] ( move ua , ua ; move 3 + 3 , 4 )  | ( move ua , 0 ; move 4 + 2 , ua + 4 )  | ( ( move ua , ua ; move 3 * 2 , 4 ) ; pen 3 + ul )  
[1414] ( move ua , 3 ; move 2 , ul - 3 )  | ( move ua , 3 ; move ul + ul , ua - 2 )  | ( move ua , 4 - ul ; move 4 / 2 , ul - 3 ; pen ua * 2 )  
[1415] ( move ua + ul , 2 ; move 3 , 4 )  
[1416] ( move ul , 0 ; move 4 , ua - 4 )  | ( move ul , ua ; move 4 , ua - 4 )  
[1417] ( move ua , 3 ; move ul , 2 - 3 )  | ( move ua , ua + 3 ; move ul , ul - 2 )  | ( move ua , 3 ; move ul , 0 - ul ; move 0 , ul )  | ( move ua , 3 ; move 0 , ul ; move ul , ul - 3 )  | ( ( move ua , 3 ; pen ul ) ; move ul , ua - ul )  | ( ( move ua , 3 ; move 0 , ua - ul ) ; move ul , ua )  | ( move ua , 3 ; ( move ul , 3 - 4 ; v0 = ul / 2 ) )  
[1418] ( move ul , 0 ; move ua , 4 * 3 )  | ( move ul , ua ; move ua , 4 * 3 )  | ( move ul , ua * 3 ; move ua , 4 * 3 )  | ( move ul , 0 ; v0 = 4 * 3 ; move ua , v0 )  | ( ( move ul , ua * 3 ; move ua , 4 * 3 ) ; pen 4 )  
[1419] ( move 3 , ua - 4 ; move ua , 2 )  
[1420] ( move 2 , ua ; move ua + 4 , 4 )  | ( move 2 , ua ; move ua , 4 ; move 4 , 0 )  
[1421] ( move 2 , ul ; move 2 , 4 + ul )  
[1422] ( move 3 , ul ; move ul , 3 + 2 )  | ( move 2 + ul , ul ; move ul , 4 + ul )  | ( move 3 , ul ; move 0 , ul ; move ul , 4 )  | ( move 3 , ul ; move ul , 4 + ul ; move 0 , 4 )  
[1423] ( move ul - 3 , 3 ; move ua , 2 )  
[1424] ( move ul , ua ; move 0 - 4 , 4 )  
[1425] ( move ua , 2 ; move ua , 3 * 3 )  
[1426] ( move 2 , 2 ; move 4 , ul + ul )  | ( move 2 , ul + ul ; move 4 , ul + ul )  | ( move 2 , 2 ; move 4 , 2 ; pen ua * 3 )  | ( move 2 , 2 ; move 4 , 2 ; v0 = 3 + ul )  | ( move 2 , ul + ul ; move 3 + ul , ul + ul )  | ( v0 = 2 ; move v0 , v0 ; move 4 , v0 )  | ( move ul + ul , 2 ; move 0 , ul ; move 4 , ua + ul )  | ( move ua / 3 , 3 - ul ; v0 = 2 ; move 4 , v0 )  | ( v0 = 2 ; move v0 , v0 ; move 2 * v0 , v0 )  | ( move 2 , 2 ; v0 = 4 / 2 ; move v0 + v0 , v0 )  | ( v0 = 2 ; move v0 , v0 ; move v0 + v0 , v0 )  | ( v0 = 2 ; move v0 , v0 ; move v0 * v0 , v0 )  | ( ( v0 = 2 ; move v0 , v0 ) ; move 3 + ul , v0 )  
[1427] ( move ua , 2 / ua ; move 3 , 2 )  
[1428] ( move 4 , 0 ; move ul - ua , 4 )  | ( move 4 , ua ; move ul - ua , 4 ; v0 = 3 + 3 )  
[1429] ( move ua , ul ; move 2 , 2 - 4 )  | ( pen ul ; move ua , ul ; move 2 , ul - 3 )  
[1430] ( move ua , 2 ; move ua , 4 * 2 )  
[1431] ( move 0 - ua , 4 ; move 4 , ul )  
[1432] ( move 3 , ua ; move 3 , 4 + ul )  | ( move 3 , ua ; move 0 , ul ; move 3 , ua + 4 )  
[1433] ( move ua , ul / 2 ; move 3 , 2 )  | ( move ua , 3 / ua ; ( move 0 , ul ; move 3 , ul ) )  
[1434] ( move 2 , ua ; move 4 + ul , 4 )  | ( move 2 , ua ; move ua - ul , 4 )  | ( move 3 - ul , ua * 4 ; move ua - ul , 3 + ul )  
[1435] ( move 4 , ua ; move 2 , 4 + ul )  | ( move 4 , 0 ; pen ul ; move 2 , 4 + ul )  
[1436] ( move 0 , 3 ; move ua , ul / 4 )  | ( v0 = ua * 3 ; move ua , 2 / v0 )  | ( v0 = ul / 3 ; move ua , v0 * v0 )  | ( move 0 , 3 ; ( move ua , ul / 4 ; pen ul + ul ) )  
[1437] ( move 4 + 3 , 2 ; move ul , ul )  | ( move ua + ul , 2 ; move ul , ul )  | ( move 4 + 3 , ul + ul ; move ul , ul )  | ( move 0 , ul ; move ua + ul , ul ; move ul , ul )  | ( move ua + ul , 2 ; v0 = ul ; move v0 , v0 )  | ( move ua + ul , ul + ul ; move ul , ua + ul ; pen ul )  | ( move ua + ul , 4 / 2 ; v0 = 3 ; move 4 - v0 , ul )  
[1438] ( move ua - 3 , 4 ; move ul , 2 )  | ( move ua - 3 , 4 ; move ul , 2 ; v0 = ua + ul )  | ( move 3 / ua , 4 - ua ; move 3 , ua * 3 ; move ul , 2 )  
[1439] ( move 2 , 3 - 4 ; move ua , ul )  | ( move 2 , 0 - ul ; move ua , ul )  | ( move 2 , ul - 2 ; move ua , ul )  | ( move ul + ul , 0 - ul ; move ua , ul )  | ( move ua / 3 , ua - ul ; move ua , ul )  | ( pen ul ; move ul + ul , ua - ul ; move ua , ul )  
[1440] ( move 2 , ul ; move 4 + 3 , ul )  | ( move 2 , ul ; move 4 , ul ; move 3 , ua )  | ( move 2 , ul ; ( v0 = ul ; move 4 + 3 , v0 ) )  
[1441] ( move 3 , ul ; move ua , 4 + 3 )  | ( pen ul ; move 4 - ul , ua + ul ; move ua , 4 + 3 )  
[1442] ( move 2 , ua ; move 3 , ul - 4 )  | ( move 3 , ul / ua ; move ul , 3 )  
[1443] ( move 3 - ua , 3 ; move 3 , ul )  
[1444] ( move 3 , ua - 4 ; move ua , 3 )  
[1445] ( move 4 , 4 ; move 0 - ul , ul )  | ( move 3 / 4 , ul ; move 3 + ul , 3 ; move 0 - ul , ul )  
[1446] ( move 2 , ul - 4 ; move 2 , ul )  
[1447] ( move 2 , 4 ; move 3 , ua - ul )  
[1448] ( move ul , ul - 2 ; move 4 , 2 )  | ( move ul , ua - ul ; v0 = 4 ; move v0 , 2 )  
[1449] ( move 3 + 3 , ul ; move 3 , ul )  | ( move 4 + 2 , ul ; move 2 + ul , ul )  | ( move 4 + ul , ul ; ( move ul , 0 ; move 3 , ul - ua ) )  
[1450] ( move 4 , ua - ul ; move 3 , 2 )  | ( move 4 , ul - 2 ; move 2 + ul , ua + 2 )  | ( move 4 , 0 - ul ; ( move 2 + ul , ul + ul ; pen 4 ) )  
[1451] ( move 2 , 2 ; move ua , 4 / ua )  
[1452] ( move 3 , 0 ; move 4 , ul / ua )  | ( move 2 + ul , ua ; move 4 , ul / ua )  
[1453] ( move 4 * 2 , ul ; move ua , 2 )  
[1454] ( move 2 , 4 ; move ua , ul - 3 )  
[1455] ( move 2 , 2 / 3 ; move ua , ul )  
[1456] ( move 2 - 3 , ua ; move 4 , ul )  | ( move 0 - ul , ua ; move 4 , ul )  | ( pen ul ; move 3 - 4 , 0 ; move 4 , ul )  | ( move ul , ul - 4 ; move 4 , 4 ; pen 2 )  | ( move 0 - ul , 0 ; ( move 4 , ul ; pen 0 ) ; pen ul - 2 )  
[1457] ( move ul , 3 - 4 ; move ua , 2 )  | ( move ul , ul - 2 ; move ua , 2 )  | ( move 0 - ua , ul ; move ul , ul )  | ( move ul , 0 - ul ; move ua , ua + 2 )  | ( v0 = ul ; move 0 - ua , ul ; move v0 , v0 )  | ( ( move ul , 0 - ul ; move 0 , 2 - ul ) ; move ua , ul )  
[1458] ( move ul , 2 / ua ; move 3 , 2 )  | ( move ul , ul / 3 ; v0 = 2 ; move 3 , v0 )  
[1459] ( move ua + 4 , ul ; move 3 , 3 )  | ( move ua + 4 , ul ; move 3 + ul , 3 )  | ( move 4 , ul ; move ua , ua * 3 ; move 3 + ul , 3 )  
[1460] ( move 2 , ua - ul ; move 3 , 4 )  
[1461] ( move 4 , 4 ; move ua + ul , 2 )  | ( move 4 , 4 ; move ua + ul , ul + ul )  | ( move 3 + ul , 4 ; move ul , 2 ; move ua , ua )  | ( ( move 4 , ua + 4 ; move ua + ul , 2 ) ; pen 4 )  
[1462] ( move 2 , 3 ; move 4 + ul , ul )  | ( move 2 , 2 + ul ; move 4 + ul , ul )  | ( move 2 , 3 ; move ul , ul - ua ; move 4 , 0 )  
[1463] ( move ul - 3 , ul ; move 3 , 2 )  
[1464] ( move 3 , 4 + ul ; move ua , 3 )  | ( move ua / 3 , 4 + ul ; move ua , 3 ; v0 = 0 )  
[1465] ( move ua , 3 * 2 ; move 3 , ul )  | ( move ua , 4 + 2 ; move 3 , ua + ul )  
[1466] ( move 4 , ul ; move ua - 3 , 2 )  | ( move 4 , ul ; move ua - 3 , ua + 2 )  
[1467] ( move 2 , 3 ; move ua , ul / 2 )  | ( move ul + ul , 3 ; v0 = ua ; move ua , 3 / v0 )  
[1468] ( move ul , ul ; move 3 , 2 - 3 )  | ( move ul , ul ; move 3 , 3 - 4 )  | ( move ul , ul ; move 3 , 0 - ul )  | ( move 3 , ua / 2 ; move ul , ul )  | ( move ul , ul ; move 3 , ua - ul )  | ( move ul , ul ; move 2 + ul , 2 - 3 )  | ( move ul , ul ; move 2 + ul , ua - ul )  | ( move 3 , ua / 2 ; move ul , ul ; pen ua )  | ( move ul , ua + ul ; move 4 - ul , ua - ul )  | ( move ul , ul ; move 3 , ua - ul ; pen 4 - 2 )  | ( move ul , ul ; ( move 3 , ua - ul ; v0 = ul ) )  | ( move ul , ul ; move 2 + ul , ua - ul ; v0 = ul )  | ( pen ul ; move ul , ul ; ( move 3 , ua - ul ; pen ua ) )  
[1469] ( move ua , 4 + ul ; move 2 , 4 )  | ( ( pen ul ; pen ul ; move ua , 4 + ul ) ; move 2 , 4 )  
[1470] ( move 4 + 3 , ul ; move ua , 3 )  | ( move 3 , ul ; move 3 + ul , ua ; move ua , 3 )  
[1471] ( move ul , ul ; move 3 , 4 + 2 )  | ( move ul , ul ; move 3 , 3 + 3 )  | ( move ul , ua + ul ; move 3 , 4 + 2 )  | ( move ul , ul ; move 0 , 2 ; move 3 , 4 )  | ( move 2 - ul , ul ; v0 = 3 ; move v0 , v0 + v0 )  | ( move ul , ul ; v0 = 2 + ul ; move v0 , v0 + v0 )  
[1472] ( move ul , ul ; move 3 + 2 , 4 )  | ( move ul , ul ; move 4 + ul , 4 )  | ( move ul , ul ; move 3 + 2 , ua + 4 )  | ( move ul , ua + ul ; move 4 + ul , 3 + ul )  | ( move ul , 4 - 3 ; move 4 + ul , 4 ; pen 0 )  | ( move ul , ul ; move 2 * 2 , 4 ; move ul , ua )  | ( move ul , ul ; ( move 3 + 2 , 4 ; pen ul ; v0 = ul ) )  
[1473] ( move ua , 3 ; move 3 , 4 + ul )  | ( move ua , 3 ; v0 = ua + ul ; move 3 , 4 + v0 )  
[1474] ( move 3 , 4 + ul ; move 2 , ul )  | ( ( move 3 , 4 + ul ; move 2 , ul ) ; v0 = ul )  
[1475] ( move ul , 0 ; move ua , 3 / 4 )  
[1476] ( move ua , 4 ; move ul , 2 - 3 )  | ( move ua , 4 ; move ul , ua - ul )  | ( move 4 + 2 , 4 ; move ul , 2 - 3 )  | ( move ua , 4 ; ( move ul , ul - 2 ; v0 = 0 ) )  | ( v0 = 2 + ul ; move ua , 4 ; move ul , v0 - 4 )  
[1477] ( move 3 , 2 ; move ul , 4 + ul )  | ( move 3 , ua + 2 ; v0 = 0 ; move ul , 4 + ul )  | ( move 3 , ul + ul ; v0 = 2 ; move ul , v0 + 3 )  
[1478] ( move 3 + 3 , ul ; move ua , 4 )  | ( ( move 4 + 2 , ul ; pen ul ) ; move ua , 4 )  
[1479] ( move 4 , ul ; move 3 , ua - 2 )  | ( move 4 , ul ; move 3 , ul - 3 )  
[1480] ( move 4 , ua - 2 ; move ua , 4 )  
[1481] ( move ua , ua ; move 2 , 4 * 3 )  
[1482] ( move ul / 2 , 0 ; move 4 , ul )  | ( move ul / 2 , ua ; move 2 + 2 , ul )  | ( move 3 / ua , ua ; move 3 + ul , ul )  | ( move 3 / ua , ua * 3 ; move 4 , ul ; v0 = ua + 2 )  
[1483] ( move ul , 2 ; move ua , 4 + 4 )  
[1484] ( move 3 , ul ; move ua + 3 , 4 )  | ( move 3 , ul ; move ua + 3 , 4 ; pen ul )  | ( move 3 , ul ; ( pen ul ; move ua + 3 , 4 ) )  
[1485] ( move 3 , ua ; move ul - 3 , 3 )  | ( move 4 , ua ; move ul , 3 * 2 )  | ( move 4 - ul , 0 ; move ul - 3 , 2 + ul )  
[1486] ( move ua / 3 , ul ; move 2 , 2 )  | ( move ua / 3 , ul ; move 2 , ua + 2 )  | ( move ua / 3 , ul ; v0 = 2 ; move v0 , v0 )  
[1487] ( move ua + 2 , ul ; move 4 , 4 )  
[1488] ( move 2 , 3 ; move 4 , ua - ul )  
[1489] ( move 3 , ul ; move 2 , 4 + ul )  | ( move 3 , 2 - ul ; move 2 , 4 + ul ; move 0 , ua )  
[1490] ( move 3 , 3 ; move ul , ul - 2 )  | ( move 2 + ul , 3 ; move ul , ul - 2 )  | ( move 2 + ul , 3 ; move ul , ua - ul )  | ( move 3 , 3 ; move ul , 2 - 3 ; pen 2 )  | ( move 3 , 3 ; move ul , ua - ul ; pen 4 )  
[1491] ( move 2 , 4 + ul ; move ua , 4 )  
[1492] ( move 4 + ul , ul ; move 2 , 3 )  | ( move 3 + 2 , ul ; move 2 , 3 - ua )  | ( move 4 + ul , ul - ua ; move 2 , 3 ; pen 3 )  
[1493] ( move 2 , 2 ; move ul - 4 , ul )  | ( move 2 , 2 ; move 0 , ua + ul ; move ul - 4 , 0 )  
[1494] ( move 3 * 2 , ul ; move 2 , ul )  | ( move 4 + 2 , 2 - ul ; move 2 , 3 - 2 )  
[1495] ( move 3 , ua ; move 4 + 3 , ul )  
[1496] ( move ua , ua ; move 3 , 3 * 3 )  
[1497] ( move ua , ul ; move 3 , 2 - 4 )  | ( move ua , ul ; move 3 , ul - 3 )  | ( move ua , ul ; move 2 + ul , ul - 3 )  | ( move ua , ul ; move 3 , ua - 2 ; pen ua )  | ( move ua , ul ; move 3 , ua - 2 ; v0 = ul )  | ( move ua , ul ; move 2 + ul , ua - 2 ; pen ul )  
[1498] ( move ua , 2 ; move 4 / ua , 2 )  | ( move ua , 2 ; move 2 / 3 , 2 ; pen ul )  
[1499] ( move 4 , ua * ua ; move 3 , 2 )  
[1500] ( move 4 , ua ; move ua + 3 , 4 )  | ( move 4 , ua ; ( move ua + 3 , 4 ; v0 = ua ) )  
[1501] ( move 4 + 3 , ua ; move 3 , ul )  | ( move 4 + 3 , ua ; v0 = 2 + ul ; move v0 , ul )  
[1502] ( move 3 , ul ; move ua + 4 , 3 )  | ( move 4 , ul ; move ua + 4 , 3 )  | ( move 3 , 4 - 3 ; move ua , 2 + ul ; move 4 , 0 )  
[1503] ( move 4 , ua / 2 ; move ua , 2 )  | ( move ua , 3 - ul ; move 0 , 2 - 4 ; move 4 , 0 )  
[1504] ( move ul , 4 ; move 3 , ua + 3 )  | ( move ul , 4 - ua ; move 3 , 3 )  | ( move ul , 4 - ua ; move ul , 3 ; move 2 , ua )  | ( ( move 3 - 2 , ua + 4 ; v0 = 0 ) ; move 3 , 3 )  | ( v0 = 3 - ul ; move ul , 4 - ua ; move 3 , v0 + ul )  
[1505] ( move ua - 4 , ul ; move 3 , 2 )  
[1506] ( move ul , ua - 4 ; move 3 , 2 )  
[1507] ( move ul - 3 , 2 ; move ua , 4 )  | ( move 2 - 4 , 3 - ul ; v0 = ua ; move v0 , 4 )  
[1508] ( move 3 , 2 ; move ul - 3 , ul )  
[1509] ( move 2 , ua ; move 4 , 4 + ul )  | ( move ul + ul , ua ; move 4 , 4 + ul )  | ( move ul + ul , ua ; move 3 + ul , 3 + 2 )  | ( move ul , ua + ua ; move ul , 0 ; move 4 , 4 + ul )  
[1510] ( move 3 , 0 ; move ul , ul / 3 )  | ( move 3 , ua ; move ul , ul / ua )  | ( move 3 , ua * 3 ; move ul , ul / ua )  | ( move ua - 3 , ua ; move ul , ul / ua )  
[1511] ( move ua , 3 / ua ; move 2 , 3 )  
[1512] ( move 3 , ul ; move ua , 2 - 4 )  
[1513] ( move ul , ua ; move 4 , 2 - 3 )  | ( move ul , ua ; move 4 , 3 - 4 )  | ( move ul , ua ; move 4 , 0 - ul )  | ( move ul , ua ; move 4 , ul - 2 )  | ( move ul , ua ; move 4 , ua - ul )  | ( move ul , 0 - ua ; move 4 , ul - 2 )  | ( ( move ul , ua ; move 4 , ua - ul ) ; v0 = ul )  | ( move ul , ua ; v0 = 2 ; move v0 + v0 , ul - v0 )  
[1514] ( move ul - ua , 3 ; move 4 , 2 )  
[1515] ( move 3 , 3 ; move ua , 4 + ul )  | ( move 2 , 4 - ul ; move ul , ua ; move ua , 4 + ul )  
[1516] ( move 2 , 4 ; move ua , ua - 4 )  | ( move ul + ul , 4 ; move ua , ua - 4 )  | ( move ul , 4 ; move ul , 0 ; move ua , ua - 4 )  
[1517] ( move 3 , ul ; move ul , 4 + 2 )  | ( move 3 , ul ; move ul , 3 + 3 )  
[1518] ( move ua , 3 ; move ul , 3 * 2 )  | ( ( move ua , 3 ; v0 = 3 ) ; move ul , 2 * v0 )  
[1519] ( move 4 , ua ; move ua , 4 + 3 )  | ( move 4 , 0 ; move 0 , 3 ; move ua , 4 )  
[1520] ( move 3 / 4 , 0 ; move ua , ul )  | ( move 3 / 4 , ua * 2 ; move ua , ua + ul )  
[1521] ( move 2 , ua ; move 4 + 4 , ul )  | ( move 4 - 2 , ua + ua ; move 4 * 2 , ul )  
[1522] ( move ua , 3 ; move 3 - ua , 4 )  | ( move ua , 3 ; move 3 - ua , 3 + ul )  
[1523] ( move ua , ua - 3 ; move 4 , 3 )  | ( move ua , ul - 4 ; move 4 , 2 + ul )  
[1524] ( move 4 , 3 ; move 2 , ua - ul )  | ( move 4 , 3 ; move 4 / 2 , ua - ul )  
[1525] ( move 3 , 2 - 3 ; move ul , ul )  | ( move 3 , 0 - ul ; move ul , ul )  | ( move 3 , ul - 2 ; move ul , ul )  | ( move 3 , ua - ul ; move ul , ul )  | ( move 2 + ul , 0 - ul ; move ul , ul )  | ( move 2 + ul , ul - 2 ; move ul , ul )  | ( move 3 , ul - 2 ; move ul , ul - ua )  | ( move 4 - ul , ua - ul ; move ul , ul )  | ( move 3 , ua - ul ; move ul , ul ; move 0 , ua )  | ( v0 = ul ; move 3 , ua - v0 ; move ul , v0 )  | ( move 3 , 0 - ul ; move ul , ul ; v0 = ua + 2 )  | ( v0 = ul ; move 3 , ua - v0 ; move v0 , v0 )  | ( ( move 2 - 3 , ua ; move 0 , 2 ) ; move 3 , ul / ua )  
[1526] ( move ul , ul ; move 4 , 0 - 4 )  | ( move ul , ul ; move 4 , ua - 4 )  | ( move ul , ul ; move 2 + 2 , ua - 4 )  | ( v0 = 4 ; move ul , ul ; move v0 , ua - v0 )  
[1527] ( move ua , 2 ; move ul , 4 * 2 )  
[1528] ( move 0 , ul ; move 4 , ua / 3 )  | ( move 0 , 3 + 3 ; move 4 , ul / 4 )  
[1529] ( move ul , 3 / 2 ; move ua , 2 )  
[1530] ( move ul , 2 ; move 3 , 4 + ul )  
[1531] ( move ua , 0 ; move ul , 4 / 3 )  | ( move ua , ua ; ( move ul , ua / 4 ; v0 = ua * 3 ) )  
[1532] ( move ua , 2 ; move 4 , 4 + ul )  | ( move ua , 2 ; v0 = ul ; move 4 , 4 + ul )  
[1533] ( move ua , ul ; move 3 , 3 * 2 )  | ( move ua , ul ; move 4 - ul , 3 + 3 ; v0 = ul )  
[1534] ( move 4 , 0 - ul ; move ul , 4 )  | ( move 4 , ul - 2 ; move ul , 4 )  | ( move 4 , ua - ul ; move ul , 4 )  | ( move 0 - 4 , ua / 3 ; move ul , 2 - ul )  | ( move 4 , 0 - ul ; v0 = ul ; move v0 , 4 )  | ( v0 = 4 ; move v0 , 0 - ul ; move ul , v0 )  
[1535] ( move ul - 3 , ua ; move 3 , 3 )  | ( move ul - 4 , ua ; pen ul ; move 2 , 3 )  | ( move ul - 3 , ua ; move 4 - ul , 3 ; v0 = 0 )  
[1536] ( move ua , 3 ; move 4 + ul , 3 )  | ( move ua , 3 ; move 2 , 3 ; move 4 - ul , ua )  | ( move ua , 3 ; ( move ul , 4 - ul ; move 4 , ua ) )  
[1537] ( move ua , 4 ; move 2 - ua , 4 )  
[1538] ( move ua , 3 - 4 ; move ul , 2 )  | ( move ua , 0 - ul ; move ul , 2 )  | ( move ua , 0 - ul ; move ul , ul + ul )  | ( move ua , ua - ul ; move ul , 3 - ul )  | ( move ua , ua - ul ; move ul , 2 ; v0 = ua )  | ( pen ul / ua ; move ua , ul - 2 ; move ul , 2 )  
[1539] ( move ua , 0 ; move ua / 4 , 4 )  
[1540] ( move 4 + ul , 2 ; move 3 , ul )  
[1541] ( move 3 , ul ; move 2 - ua , 4 )  
[1542] ( move 2 , ul ; move ua , 4 * 2 )  | ( move 3 - ul , ul ; move ua , 4 + 4 )  | ( move ul + ul , ul ; move ua , 4 * 2 )  
[1543] ( move 4 , 2 ; move ua + ul , 4 )  | ( move 4 , ua + 2 ; move ua + ul , 4 )  
[1544] ( move 4 , ua - 2 ; move 3 , ul )  
[1545] ( move 2 - ua , 3 ; move ul , 4 )  | ( move 0 - 4 , 3 ; v0 = 4 ; move ul , 3 + ul )  
[1546] ( move ua , ul ; move 2 , 2 / 3 )  | ( move ua , ul ; move 2 , 4 / ua )  
[1547] ( move 3 , ul ; move 4 , ua - 2 )  | ( move 3 , 2 - ul ; move 4 , ul - 3 )  
[1548] ( move 4 , 3 + 2 ; move ul , ul )  | ( move 4 , 4 + ul ; move ul , ul ; pen ul )  | ( move 4 , 4 + ul ; move ul , ul ; v0 = 2 )  | ( ( move 4 , 3 + 2 ; move ul , ul ) ; pen ua + 2 )  
[1549] ( move ua , 4 * 3 ; move ua , 2 )  | ( move ua , 4 * 3 ; move 0 , ul ; move ua , ul )  
[1550] ( move 4 , ua ; move 4 - ua , 2 )  | ( move 4 , 0 ; move 4 - ua , 2 ; v0 = ul )  
[1551] ( move 2 , ul - 3 ; move 3 , ul )  
[1552] ( move 4 + 3 , ul ; move 2 , ul )  | ( move 4 + 3 , ul ; move 4 / 2 , ul )  | ( move 4 , ul ; move 2 + ul , ua ; move 2 , ul )  | ( move 4 + ul , ul ; move ul + ul , 0 ; move 2 , ul )  | ( ( move 4 , ul ; move 3 , ua ) ; move ul + ul , ul ; pen ua )  
[1553] ( move ua , ua / 2 ; move 3 , 4 )  | ( move ua , ua / 2 ; move 3 , 4 ; v0 = 2 + ul )  | ( move 3 , 4 ; ( v0 = ua ; move v0 , v0 - 4 ) )  
[1554] ( move 2 , ul ; move 4 , 4 + ul )  | ( move 2 , ul ; move 4 , 4 + ul ; pen ul )  | ( ( move 2 , ul ; move 4 , 4 + ul ) ; pen ua )  
[1555] ( move ul - 3 , 3 ; move ua , 4 )  
[1556] ( move ua , 2 - 4 ; move ul , 4 )  | ( move ua , ul - 3 ; move 3 / 4 , 4 )  | ( move ua , 0 - 2 ; move ul , 3 + ul )  | ( move ua , ul - 3 ; move 2 / 3 , 4 ; pen ua + ul )  
[1557] ( move 3 , ul ; move ul , 4 + 3 )  | ( move 3 , ul ; v0 = 4 / ua ; move ul , v0 )  | ( v0 = 3 ; move v0 , ul ; move ul , v0 + 4 )  | ( v0 = ul ; move 3 , v0 ; move ul , v0 / 2 )  | ( move 3 , ul ; ( move ul , 4 / ua ; v0 = 2 ) )  | ( move 2 + ul , ul ; move ul , 4 / ua ; v0 = ul )  
[1558] ( move ul , 4 + ul ; move 3 , 3 )  | ( move ul , 4 + ul ; move 3 , 3 ; v0 = ul )  | ( move ul , 4 + ul ; move 3 , 3 - ua ; v0 = ul )  
[1559] ( move 3 , ul ; move 3 , 2 / ua )  | ( move ua / 2 , ul ; move 3 , ul / 3 )  
[1560] ( move 4 + ul , ua ; move 4 , 3 )  | ( move ua - ul , ua ; move 4 , 3 )  | ( pen ul ; move 4 + ul , ua ; move 4 , 3 )  | ( ( move 4 + ul , ua ; move 4 , 3 ) ; pen 3 )  
[1561] ( move 4 , 0 ; move ul / ua , 4 )  | ( move 4 , ua ; move ul / ua , 4 )  | ( move 3 , ua * 4 ; move 0 - ul , 3 )  | ( move 4 , ua ; move ul / ua , 3 + ul )  | ( move 3 , ua ; v0 = 0 ; move v0 - ul , 3 )  | ( v0 = 3 ; move v0 , ua ; move ul , v0 + v0 )  
[1562] ( move 3 , 2 ; move ua , ul / 3 )  
[1563] ( move 3 , ul - 3 ; move 3 , ul )  | ( move 3 , ua - 2 ; move 3 , ua + ul )  | ( move ul , ul - 3 ; move 2 , ua ; move 3 , ul )  
[1564] ( move 2 - ua , 4 ; move ul , 4 )  | ( move 2 - ua , 4 ; move 4 - 3 , 4 )  | ( move 2 - ua , 4 ; move ul , 3 + ul )  
[1565] ( move 4 , 2 / ua ; move ua , 3 )  | ( move 4 , ul / 3 ; move ua , 3 )  
[1566] ( move 4 , 4 + ul ; move ua , 3 )  | ( move 2 * 2 , 4 + ul ; pen ul ; move ua , 3 )  | ( move ua - 2 , 4 + ul ; move ua , 3 ; pen 4 )  
[1567] ( move ul , 4 ; move 3 - ua , 3 )  | ( move ul , 4 ; move ul - 4 , 3 ; v0 = ua )  
[1568] ( move 2 , 4 ; move 4 , ua - ul )  | ( move 2 , ua + 4 ; move 4 , 3 - 4 )  
[1569] ( move ul , 4 * 3 ; move ua , 2 )  
[1570] ( move 3 , 2 ; move ul , ul / 2 )  
[1571] ( move ul - 2 , ul ; move 4 , 3 )  | ( move 3 + 2 , 4 ; move 0 , 0 ; move 3 / ua , 4 + 2 )  
[1572] ( move 4 , ul - 3 ; move ul , 2 )  | ( move 4 , 0 - 2 ; move 0 , ul ; move ul , ul - ua )  
[1573] ( move ul , 3 ; move ua , 3 - 4 )  | ( move 0 - ul , ua ; move ua , 2 )  | ( move ul , 3 ; move ua , 0 - ul )  | ( move ul , 3 ; move ua , ua - ul )  | ( move 3 - 4 , ua ; move ua , ua + 2 )  | ( move ul - 2 , ua ; move ua , 4 / 2 )  | ( move 0 - ul , 0 ; move ua , 2 ; pen ul )  | ( move ul , ua + 3 ; move ua , 2 - 3 ; move 0 , 2 / ua )  
[1574] ( move 4 * 2 , ul ; move ua , 3 )  | ( move ua + 2 , ua + ul ; move ua , 3 )  | ( move ul , ul ; move ua + ul , ua ; move ua , 3 )  | ( move 2 , ul ; ( move 4 + 2 , ua ; move ua , 3 ) )  | ( ( move 4 * 2 , ul ; move ua , 3 ) ; v0 = ul )  
[1575] ( move ua , ua ; move 2 / 3 , 4 )  | ( move ua , 0 ; v0 = ua ; move 2 / 3 , 4 )  
[1576] ( move ua + 4 , ul ; move 3 , 4 )  | ( ( move ua + 4 , ul ; pen ul ) ; move 3 , 4 )  
[1577] ( move ul , 2 ; move 3 , ul / 2 )  | ( move ul , 2 ; move 2 + ul , 2 / 4 )  
[1578] ( move 3 , 4 + ul ; move ua , 4 )  
[1579] ( move 4 + 4 , ua ; move ul , 3 )  | ( move ua + 2 , ua ; move ul , ua + 3 )  | ( move ua + 2 , ua ; move ul / 2 , ul / ua )  | ( move 4 + 4 , ua ; ( pen ul ; move ul , 3 ) )  
[1580] ( move 4 * 2 , ul ; move 2 , ul )  | ( move 4 * 2 , ul ; move 3 - ul , ul )  | ( move 4 * 2 , ul - ua ; move 2 , ul ; pen ul / 2 )  | ( move 2 , ul ; move 3 * 2 , ua ; move ul + ul , ul )  | ( move ua , ul ; move ul + ul , ua ; move ul + ul , ul )  
[1581] ( move 2 - ua , ul ; move 4 , 4 )  
[1582] ( move ua , ul ; move 2 , 4 * 3 )  
[1583] ( move ua , ul - 4 ; move 4 , 2 )  
[1584] ( move 0 , 4 / ua ; move 4 , ul )  | ( move ul , ua * ua ; move 3 + ul , 3 )  | ( move ul / ua , ul ; move 4 , 4 / ua )  | ( pen ul ; move 0 , 2 / 3 ; move 4 , ul )  | ( move 0 , 4 / ua ; ( move 3 , ul ; move ul , 0 ) )  | ( move 0 , ua * ua ; move 0 , ul ; move 3 + ul , 2 )  
[1585] ( move 3 / 2 , ua ; move 3 , ul )  | ( move ua / 4 , ua ; move 2 + ul , ul )  | ( move ua / 4 , ua ; move 4 - ul , ul )  
[1586] ( move 4 , 3 ; move ua , 4 + ul )  | ( move 4 , 3 ; move ua , 4 + ul ; v0 = ul )  | ( move 4 , 2 + ul ; pen ul ; move ua , 4 + ul )  
[1587] ( move 3 , ul / 2 ; move ul , 2 )  
[1588] ( move 4 + ul , 3 ; move ua , 4 )  
[1589] ( move 3 , 2 - 4 ; move ul , ul )  | ( move 3 , ul - 3 ; move ul , ul ; pen ua * ua )  
[1590] ( move 4 , 4 + 3 ; move ua , ul )  | ( move 2 , 4 - ua ; move 2 * 2 , 3 ; move ua , ul )  
[1591] ( move 2 , ul ; move 4 + ul , 4 )  | ( move 2 , ul ; move 3 + 2 , ua + 4 )  | ( ( move 2 , ua + ul ; move 4 + ul , 4 ) ; pen 0 )  
[1592] ( move 4 , ua ; move ua - 3 , 4 )  
[1593] ( move ua , 2 ; move 3 / ua , 4 )  | ( move ua , 2 ; move 4 / ua , 4 )  | ( move ua , ua + 2 ; move 3 - 4 , ul )  | ( move ua , ul + ul ; move ul , ul - 3 )  | ( move ua , ul + ul ; move ul , ul - 3 ; v0 = ul )  
[1594] ( move ua , 3 / ua ; move 4 , 2 )  
[1595] ( move 4 , 4 + ul ; move ul , 2 )  | ( move ul , 4 ; pen 3 - 2 ; move 0 - 4 , ul )  
[1596] ( move 3 , ua ; move ul , 3 / 2 )  
[1597] ( move ua - 4 , 2 ; move 4 , ul )  
[1598] ( move ua , 4 ; move 4 + ul , 3 )  | ( move ua , 4 ; move ua - ul , 3 )  | ( move ua , 4 ; move ua - 2 , 3 ; v0 = 3 + ul )  | ( move ua , 4 ; move 3 + ul , 2 + ul ; move 0 , ua - ul )  
[1599] ( move 2 , 3 ; move ua , ua / 4 )  
[1600] ( move 3 , ul / 2 ; move ua , 3 )  | ( move 3 , 2 / 4 ; move ua , 4 - ul )  
[1601] ( move ua , ul - 4 ; move 2 , 4 )  | ( move ua , ua - 3 ; move 2 , 4 ; v0 = ul )  
[1602] ( move 3 - ua , 3 ; move ul , 4 )  
[1603] ( move ua - 2 , 4 ; move 4 , ul )  
[1604] ( move ua , ul ; move 4 , 3 * 2 )  | ( move ua , ul ; move ua - 2 , 3 + 3 ; v0 = 0 )  
[1605] ( move ua , ul - 3 ; move 4 , 3 )  
[1606] ( move 4 , ua - ul ; move 4 , 2 )  | ( move 4 , ua - ul ; move 3 + ul , 3 - ul )  | ( move 4 , ua - ul ; move 4 , 2 ; v0 = ua )  
[1607] ( move ua - 2 , ul ; move 4 , 4 )  | ( move ua - 2 , ul ; move 3 + ul , ua + 4 ; pen ua )  
[1608] ( move 3 + 3 , ul ; move 4 , ul )  | ( move 0 , 0 ; ( move 4 + 2 , ul ; move 4 , ul ) )  | ( v0 = 4 ; move 2 + v0 , ul ; move v0 , ul )  
[1609] ( move 4 , ul ; move 4 , ua - 2 )  | ( move 4 , ul ; move 4 , ul - 3 )  | ( move 4 , ul - ua ; move 4 , ul - 3 )  
[1610] ( move ua , ua ; move 4 , 4 * 2 )  
[1611] ( move ul - 4 , ua ; move 3 , 3 )  | ( move 3 - ua , ua ; v0 = 4 - ul ; move v0 , v0 )  
[1612] ( move 3 , ua ; move 4 - ua , 4 )  
[1613] ( move 4 , ul / 2 ; move ua , 2 )  
[1614] ( move ua , ul ; move 3 , 4 + 4 )  | ( move ua , ul ; move 3 , 4 * 2 )  | ( move ua , ul ; move ua - 3 , 4 * 2 )  | ( move ua , ul ; move 3 , 4 * 2 ; pen 2 - 4 )  | ( move ua , ul ; move 3 , 4 * 2 ; v0 = ul + ul )  
[1615] ( move 4 , 2 ; move 4 + ul , ul )  | ( move 4 , ul + ul ; move 3 + 2 , ul )  | ( move 4 , 2 ; move 4 , ul ; move ul , ua )  
[1616] ( move 4 , 3 * 2 ; move ua , ul )  | ( move 4 , 3 * 2 ; move ua , ul ; pen ua )  | ( move 4 , 3 + 3 ; v0 = 3 ; move ua , ul )  
[1617] ( move 4 , 3 ; move ua , ul - 3 )  | ( move 4 , 3 ; move ua , ul - 3 ; v0 = 3 )  | ( move 4 , 3 ; move ua , ul - 3 ; v0 = ua )  
[1618] ( move 4 + 3 , ul ; move 3 , ul )  
[1619] ( move 0 , ul / 4 ; move ua , 4 )  | ( move 0 , 4 ; move ua , ul / 4 )  
[1620] ( move 4 , ul ; move 2 , ua - 4 )  | ( move 4 , ul ; move ul + ul , ua - 4 ; v0 = 4 + ul )  
[1621] ( move 4 , ua ; move ua + 4 , 4 )  | ( move 3 + ul , 0 ; move ua + 4 , 4 ; v0 = ul )  
[1622] ( move 3 , 3 ; move ul , ul - 3 )  
[1623] ( move 4 , ul ; move ua + 3 , 4 )  
[1624] ( move 4 + 3 , ul ; move ua , 4 )  
[1625] ( move ua , 3 ; move 2 , 4 / ua )  
[1626] ( move ul , 4 + 3 ; move 3 , ul )  | ( move ul , 4 ; move ul , 3 ; move 3 , ul )  
[1627] ( move ul , ul ; move 3 , 4 + 3 )  
[1628] ( move 3 , 4 ; move ua , ul - 3 )  | ( move ul - 2 , ul ; move ul + ul , 3 ; move ua , ua - 2 )  
[1629] ( move 4 * 2 , 2 ; move ul , ul )  | ( v0 = ua + ul ; move v0 + ul , 2 ; move ul , v0 )  
[1630] ( move 2 , ul ; move 4 - ua , 4 )  | ( move 3 - ul , 2 - ul ; move 4 - ua , 4 )  
[1631] ( move 3 , ul - 4 ; move 2 , ul )  | ( move 3 , 0 - 3 ; move ul + ul , ul )  | ( move ul , 0 ; move 3 , ul - 4 ; move 2 , ul )  | ( ( move 3 , ul - 4 ; move 2 , ul ) ; pen ua )  
[1632] ( move 4 , ua ; move 4 , ua - 3 )  | ( move ua - 2 , ul / ua ; move 4 , ua + 3 )  
[1633] ( move ua , 4 * 3 ; move ua , 3 )  
[1634] ( move ua - 4 , ul ; move 4 , 2 )  
[1635] ( move 3 , 3 ; move 4 , ua * ua )  
[1636] ( move ul , 3 ; move 4 + 3 , ul )  | ( move ul , 3 ; move ua + ul , ul )  | ( move ul , ua + 3 ; move ua + ul , ul )  | ( move ul , 4 - ul ; pen ul ; move ua + ul , ul )  | ( v0 = ul ; move v0 , 3 ; move v0 + ua , ul )  
[1637] ( move 2 , 4 ; move 4 - ua , ul )  | ( move ul , 3 + ul ; move ul , ua ; move 4 - ua , ul )  
[1638] ( move ua - ul , 4 ; move 3 , 3 )  
[1639] ( move 2 , ul ; move 4 * 2 , ul )  | ( move 2 , ua + ul ; move 4 , ul ; move 4 , ua )  | ( move 0 , ua ; ( move 2 , ul ; move 4 + 4 , ul ) )  | ( move 2 , ul ; ( move 4 + 4 , 3 - 2 ; pen ul ) ; pen ul )  
[1640] ( move 2 - ua , 4 ; move 4 , ul )  
[1641] ( move ua , ul / 3 ; move 2 , 3 )  | ( move ua , ul / 3 ; ( v0 = 3 ; move 2 , v0 ) )  
[1642] ( move 4 , ua ; move 4 + 3 , ul )  | ( move 4 , ua * 4 ; move 4 + 3 , ul )  
[1643] ( move ua , ul / 2 ; move 3 , 3 )  | ( move ua , ul / 2 ; move 4 , 2 + ul )  
[1644] ( move 4 , 4 + 2 ; move ul , ul )  | ( move 4 , 3 * 2 ; v0 = 3 ; move ul , ul )  | ( move 0 , 2 ; move 4 , 4 - ua ; move ul , ul )  | ( move 4 , 3 * 2 ; move 0 , ul - ua ; move ul , 0 )  | ( ( move 3 , 4 + 2 ; move ul , ua ) ; move ul , ua + ul )  
[1645] ( move 3 , 3 ; move ua , ul - 4 )  
[1646] ( move ul - ua , 4 ; move 4 , 2 )  
[1647] ( move 3 , ua ; move 3 , ul / 2 )  
[1648] ( move 2 / ua , ul ; move 4 , 2 )  | ( move ul / 4 , ul ; move 4 , 2 )  | ( move ul / 3 , ul - ua ; move 4 , 2 )  
[1649] ( move 4 , 0 ; move 4 / ua , ul )  | ( move 4 , ua ; move 4 / ua , ul - ua )  
[1650] ( move 3 , ua / 2 ; move ul , 3 )  | ( move ul , 3 ; move 3 , ul - 4 )  | ( move 0 - 3 , 0 ; move ul - 2 , 3 )  | ( move ul , 3 ; move 4 - ul , ua - 3 )  | ( move ul , 3 ; move 3 , ua - 3 ; pen ul )  | ( move ul , 3 ; move ul + ul , ul - 4 ; move ul , ua )  
[1651] ( move 4 , ua ; move ul , 2 - 4 )  
[1652] ( move ua , ua / 4 ; move 3 , 2 )  
[1653] ( move ua , 4 ; move ul / 2 , 2 )  | ( move ua , 4 ; move 3 / ua , 2 )  | ( move ua , 4 ; move 2 / ua , ua * ua )  | ( move ul , ua + ul ; move ul - ua , 3 )  | ( move ua , ua + 4 ; move 2 / 4 , 3 - ul )  | ( move ul - ua , 4 ; v0 = 0 ; move ul , 3 )  | ( move ua , 4 ; v0 = 2 ; move ul / v0 , 2 )  
[1654] ( move ua , 3 ; move ul , 4 + 4 )  | ( move ua , 3 ; move ul , 4 * 2 )  | ( move ua , 2 + ul ; move ul , 4 * 2 )  | ( move ua , 3 ; move 0 , ul ; move ul , ul / 2 )  | ( move ua , 3 ; v0 = ua + 4 ; move ul , ua * v0 )  | ( move ua , ua + 3 ; ( move ul , 4 * 2 ; pen 0 - ua ) )  | ( ( move ua , 4 - ul ; v0 = 4 ) ; move ul , v0 + 4 )  
[1655] ( move 4 , ua ; move 2 , ua / 3 )  
[1656] ( move 4 , ua - ul ; move 3 , 3 )  
[1657] ( move 2 , ul ; move 3 , ua / 3 )  | ( move 3 , ua ; move ul - 3 , ul )  | ( move 3 , ua + ua ; move ul - 3 , ul )  | ( move 3 , 0 ; move ul - 3 , ul ; move 0 , ul )  
[1658] ( move ul , 3 + 3 ; move 4 , ul )  | ( move ul , 3 + 3 ; move 3 + ul , ul )  | ( move 4 - 3 , 3 * 2 ; move 4 , ul ; v0 = ul )  | ( move 0 , 3 * 2 ; move ul , ua ; move 2 * 2 , ul )  | ( ( move 0 - ul , 3 ; v0 = 4 ) ; move 4 , v0 )  | ( move ul , 3 * 2 ; ( move 3 + ul , ul ; v0 = 0 ) )  
[1659] ( move 4 + ul , 4 ; move ul , 2 )  | ( move 3 + 2 , 4 ; move ul , 4 - 2 )  | ( move 3 + 2 , 4 ; ( move ul , 2 ; pen ul ) )  | ( pen ul ; move 4 + ul , 2 + 2 ; move ul , 2 )  
[1660] ( move ua , 3 ; move 4 - ua , 4 )  
[1661] ( move 3 , ul ; move 3 , 4 + ul )  | ( move 3 , ul - ua ; move 3 , 4 + ul )  
[1662] ( move ua - ul , 3 ; move 4 , 4 )  | ( move ua - ul , 3 ; ( move 4 , 4 ; move 0 , ul ) )  
[1663] ( move 3 , 2 / 3 ; move ul , ul )  | ( move 3 , 4 / ua ; move ul , ul )  
[1664] ( move ua , 4 ; move ul - 4 , 3 )  | ( move ua , 3 + ul ; pen ul ; ( move 3 - ua , 3 ; pen ul ) )  
[1665] ( move 4 , ul ; move 3 , ua - 4 )  
[1666] ( move 3 , 4 / ua ; move ul , 2 )  | ( move 3 , 2 / 3 ; move 0 , ul ; move ul , ul )  | ( ( pen ul ; move 3 , 2 / 3 ; move ul , 2 ) ; v0 = ul )  
[1667] ( move 4 + 4 , ul ; move ua , 4 )  | ( move 4 * 2 , ul ; move ua , 3 + ul )  
[1668] ( move ul , 4 / 3 ; move ua , 2 )  | ( move ul , 4 / 3 ; move ua , 2 ; pen 0 )  | ( move 0 , 2 / ua ; move ul , 3 - 2 ; move ua , 2 )  
[1669] ( move ul , 2 ; move ua , 3 / 4 )  
[1670] ( move ua , 3 ; move ua , 4 / 3 )  
[1671] ( move ul , 4 * 4 ; move ua , 2 )  | ( move ul , 4 * 4 ; move ua , ul + ul )  
[1672] ( move 4 , 4 ; move 3 , ua - ul )  | ( move ul , 4 ; move 3 , ua ; move 3 , ua - ul )  
[1673] ( move ua , 3 ; move ul - 4 , 4 )  
[1674] ( move ua , 4 ; move 4 - ua , 4 )  | ( ( v0 = 4 - ua ; move ua , 4 ) ; move v0 , v0 )  
[1675] ( move ul - 4 , 4 ; move ua , 3 )  
[1676] ( move ua , ua - 4 ; move 4 , 4 )  
[1677] ( move 4 , 3 ; move ul , ua - 4 )  
[1678] ( move 4 , 3 ; move 4 + ul , ul )  | ( move 4 , ua + 3 ; move 4 + ul , ul )  
[1679] ( move 4 , ul ; move 3 , 2 / ua )  | ( move 4 , ul ; move 3 , ul / 3 )  | ( move 4 , ul ; move 3 , 2 / ua ; pen ul + ul )  | ( move ua - 2 , ul ; ( pen ul ; move 3 , 2 / ua ) )  
[1680] ( move 4 , 4 + ul ; move 3 , ul )  | ( move 0 , ua + 4 ; move 4 , ul ; move 3 , ul )  | ( move 4 , 4 + ul ; v0 = 3 ; move v0 , ul )  
[1681] ( move 4 , ua - 3 ; move 4 , ul )  | ( move ul , 0 ; move 4 , ul - 4 ; move 4 , ul )  
[1682] ( move 2 , ua / 4 ; move 3 , ul )  
[1683] ( move 4 , ul ; move 3 - ua , 4 )  
[1684] ( move ul , ul ; move 4 + 3 , 4 )  | ( pen ul / 2 ; move ul , ul ; move 4 + 3 , 4 )  | ( move ul , ul ; v0 = 4 + 3 ; move v0 , 4 )  
[1685] ( move 3 , ul ; move 4 - ua , 4 )  | ( ( move 2 , ul ; move ul , 0 ) ; move 4 - ua , 4 )  
[1686] ( move 3 , 4 + 4 ; move ul , ul )  | ( move 3 , 4 * 2 ; move ul , ua + ul )  | ( ( move 3 , 4 * 2 ; move ul , ul ) ; pen ul )  
[1687] ( move ul , ul ; move 3 , 4 + 4 )  | ( move ul , ul ; move 3 , ua * ua )  
[1688] ( move ua , ul / 2 ; move 3 , 4 )  
[1689] ( move 3 , ua ; move 2 , ul / 4 )  
[1690] ( move 4 , ul / ua ; move 3 , 2 )  
[1691] ( move 4 , ua ; move 4 + ul , 4 )  | ( move 4 , ua ; move 2 , 4 ; move 3 , ua )  
[1692] ( move 4 , 4 + ul ; move ua , 4 )  
[1693] ( move 2 , 3 / ua ; move 4 , ul )  | ( move ul + ul , 3 / ua ; move 4 , ul )  
[1694] ( move 4 + ul , ul ; move 3 , 4 )  | ( move 4 + ul , ua + ul ; move 3 , 4 )  | ( move 3 + 2 , ul ; v0 = 3 ; move v0 , 4 )  | ( move 4 + ul , ul - ua ; v0 = ul ; move v0 + 2 , 4 )  
[1695] ( move ul , 4 ; move 3 , 2 / ua )  | ( move ul , 4 ; move 3 , ul / 3 ; pen ua )  
[1696] ( move ul , ul - 3 ; move 3 , 4 )  
[1697] ( move 3 , 4 ; move 4 + ul , ul )  | ( v0 = ul ; move 3 , 4 ; move v0 + 4 , v0 )  
[1698] ( move 3 , ua - 4 ; move ul , 4 )  | ( v0 = 4 ; move 3 , ua - v0 ; move ul , v0 )  
[1699] ( move 2 , 4 / 3 ; move ua , ul )  
[1700] ( move 4 + ul , 3 ; move 4 , ul )  | ( move 3 , 3 ; ( move 2 , 0 ; move 4 , ul ) )  | ( v0 = 3 ; move 4 + ul , v0 ; move ul + v0 , ul )  
[1701] ( move ua , ua ; move 3 , 3 / 4 )  
[1702] ( move 4 + ul , ul ; move 4 , 3 )  | ( move 3 + 2 , ul ; move 4 , ua + 3 )  | ( move 4 + ul , ul ; move 3 + ul , ua + 3 )  | ( move 4 , 2 - ul ; move ul , 0 ; move 4 , 3 )  | ( move 3 , ul ; move ul + ul , ua ; move 4 , 3 )  | ( move 4 + ul , ul ; move 4 , 3 ; v0 = 3 + 2 )  | ( move 4 + ul , 2 - ul ; v0 = 3 ; move 4 , v0 + ua )  
[1703] ( move ul , ua ; move 4 , 4 + 4 )  | ( move ul , ua ; move 0 , 4 + ul ; move 4 , 3 )  | ( move ul , 0 ; v0 = 4 ; move v0 , v0 + 4 )  
[1704] ( move ua , ul ; move 3 , 4 * 3 )  
[1705] ( move ua , ul ; move 2 / 3 , 4 )  | ( move ua , ul ; move 3 / ua , 4 )  | ( move ua , ul ; move ul / 2 , 4 )  | ( move ua , ul ; move 4 / ua , 4 )  | ( move ua , ul ; move ul - 2 , 4 + 3 ; v0 = ua )  
[1706] ( move 4 , 2 ; move ul - 4 , ul )  
[1707] ( move ua , 4 ; move ul , 4 * 2 )  | ( move ua , ua + 4 ; move ul , ua * ua )  | ( move ua , 4 ; move ul , ua / 4 ; pen 4 )  | ( move ua , 4 ; v0 = ua * ua ; move ul , v0 )  | ( ( move ua , 4 ; v0 = ul ) ; move v0 , ua * ua )  
[1708] ( move 4 , ul ; move 4 - ua , 3 )  
[1709] ( move 4 , 4 ; move ua , 2 / ua )  
[1710] ( move 3 , ul ; move ul , 4 + 4 )  | ( move 3 , ul ; move ul , 4 * 2 )  | ( move 3 , ul ; move ul , ua * ua )  | ( move 2 + ul , ul ; move ul , ua * ua )  | ( ( move 3 , ul ; pen ul ) ; move ul , 4 + 4 ; pen ul )  
[1711] ( move 4 + 3 , ul ; move ul , 4 )  | ( move ua + ul , ul ; move ul , 4 )  | ( move ua + ul , ul ; move ul , 3 + ul )  | ( move ul , ul ; move ua , 0 ; move ul , 4 - ua )  | ( move ua + ul , ul ; v0 = ul ; move v0 , 4 )  | ( ( move 3 , ul ; move 4 , 0 ; move ul , 4 ) ; pen 2 )  | ( move ua + ul , ul ; ( move ul , 4 ; pen ul ; pen ul ) )  
[1712] ( move 3 , ul - 4 ; move ua , 4 )  | ( move 3 , ul - 4 ; move ua , 4 ; pen 4 )  
[1713] ( move 4 , 4 ; move ua , 4 + ul )  | ( move 3 + ul , ua + 4 ; move ua , 4 + ul )  
[1714] ( move ua , 4 + ul ; move 4 , 4 )  | ( move ua , 3 + 2 ; v0 = 4 ; move v0 , 4 )  | ( move ua , 3 + 2 ; move 4 , 4 ; move ul / ua , ua - 2 )  
[1715] ( move 4 , ua / 2 ; move ul , 3 )  | ( move ul / ua , ul ; move 4 , ul - 2 )  | ( move 0 - 4 , ua * 2 ; move ul - 2 , 3 )  
[1716] ( move 4 , ul ; move 4 , ua - 3 )  | ( v0 = ul ; move 4 , v0 ; move 4 , ua - 3 )  
[1717] ( move 3 , ul / 3 ; move 2 , ul )  | ( move 3 , 2 / ua ; move ul + ul , ul )  | ( move 2 , 2 / ua ; move 2 - ul , 0 ; move 2 , ul )  
[1718] ( move 4 , 3 ; move ul , 4 + ul )  
[1719] ( move 4 , ul ; move 3 * 2 , ul )  | ( move 2 + 2 , ul ; move 3 + 3 , ul )  | ( move 4 , ul ; pen ul ; move 3 * 2 , ul )  | ( move 4 , ul ; move 3 + 3 , ul ; v0 = ua )  | ( ( move 4 , ul ; move 3 * 2 , ul ) ; v0 = 3 )  | ( move 4 , ul ; move 3 * 2 , ul ; move 0 , ua + 2 )  | ( move 2 , ul - ua ; move 2 , ua ; move 3 * 2 , ul )  
[1720] ( move 4 + ul , 4 ; move 3 , ul )  | ( move 4 + ul , 4 ; move 4 - ul , ul )  
[1721] ( move 4 , ul / 2 ; move 2 , ul )  
[1722] ( move ua , 4 * 2 ; move 4 , ul )  
[1723] ( move 4 + 3 , 4 ; move ul , ul )  | ( v0 = 4 + 3 ; ( move v0 , 4 ; move ul , ul ) )  
[1724] ( move 4 , ua ; move 4 , ua - 4 )  
[1725] ( move 2 , ul / 3 ; move ua , 4 )  | ( move 2 , ul / 3 ; move ua , ua + 4 ; pen 0 )  
[1726] ( move 2 , ul / 3 ; move 3 , ul )  
[1727] ( move 4 / 3 , 2 ; move ua , ul )  
[1728] ( move 4 , ua ; move 4 - ua , 4 )  | ( move 4 , ua * 2 ; v0 = 4 - ua ; move v0 , v0 )  
[1729] ( move 4 , 4 ; move 3 - ua , ul )  
[1730] ( move 3 / 4 , 2 ; move ua , ul )  | ( ( move 4 / ua , 2 ; pen ul ) ; move ua , ul )  
[1731] ( move ua , 4 ; move 2 , ua / 4 )  
[1732] ( move ua , 4 ; move 3 - 4 , ul )  | ( move ua , 4 ; move 0 - ul , ul )  | ( move ua , 4 ; move ul , ua - 2 )  | ( move ua , 4 ; move ul , ul - 3 )  | ( move ua , 4 ; move 0 - ul , ua + ul )  
[1733] ( move 4 + ul , ua ; move 4 , 4 )  | ( move 3 + 2 , 0 ; move 0 , 3 ; move 4 , ul )  | ( v0 = 4 ; move 4 + ul , 0 ; move v0 , v0 )  
[1734] ( move 3 , 4 ; move ua , 3 / ua )  
[1735] ( move 4 , 4 / ua ; move ua , 2 )  
[1736] ( move 3 , ul ; move ul - 4 , 3 )  
[1737] ( move 4 / 3 , ul ; move ua , 2 )  | ( move 4 / 3 , ul ; move ua , 2 ; pen ul )  
[1738] ( move 3 , 3 / ua ; move ul , 3 )  
[1739] ( move ul , 2 ; move ua , 4 / 3 )  
[1740] ( move ul - 4 , 4 ; move 2 , ul )  
[1741] ( move 2 , ul / 4 ; move ua , 3 )  
[1742] ( move 3 , ul / 2 ; move 3 , ul )  | ( move 3 , ul / 2 ; move 3 , ul - ua )  | ( move 3 , 3 / ua ; move 3 , 2 - ul ; v0 = ul )  
[1743] ( move 3 / 2 , ul ; move ua , 4 )  
[1744] ( move 2 , ul ; move 2 , ul / 4 )  | ( move ul + ul , ul ; move 2 , ul / 4 )  
[1745] ( move ul , 4 ; move 3 , 4 + ul )  | ( move 2 - ul , 4 ; move 4 - ul , 3 + 2 )  
[1746] ( move ua , ul / 4 ; move 3 , 3 )  
[1747] ( move 3 , ul / ua ; move 3 , 4 )  
[1748] ( move 4 , 4 ; move 2 , ul / ua )  | ( move ul + ul , ul ; move 2 - ua , 2 + ul )  
[1749] ( move 3 , ul ; move 2 , ul / 4 )  | ( move ua - 3 , ul ; move 2 , ul / 4 )  
[1750] ( move ul - 4 , 4 ; move 3 , ul )  
[1751] ( move 4 , ul ; move 3 - 4 , ul )  | ( move 4 , ul ; move ul - 2 , ul )  | ( move 4 , ul ; move ul , ua - 2 ; v0 = 3 )  | ( move 4 , ul ; pen ul / 4 ; move ul , 2 - 4 )  
[1752] ( move ul , ul ; move 4 , 3 - 4 )  | ( move ul , ul ; move 4 , 0 - ul )  | ( move ul , ul ; move 4 , ua - ul )  | ( move ul , ul ; move 4 , ua - ul ; pen 0 )  | ( move 4 , ua / 2 ; pen ul ; move ul , ul )  | ( pen ul ; move ul , ul ; move 4 , ua - ul )  | ( move ul , ul ; move 0 , ua ; move 4 , ul - 2 )  | ( move ul , ul ; move 3 + ul , 0 - ul ; pen ua )  | ( v0 = ul ; move v0 , v0 ; move 4 , ua - v0 )  | ( v0 = 2 ; ( move ul , ul ; move 4 , ul - v0 ) )  
[1753] ( move 4 / 3 , ua ; move 3 , ul )  | ( v0 = 3 ; move 4 / v0 , 0 ; move v0 , ul )  
[1754] ( move 4 * 2 , ul ; move ul , 4 )  | ( move 4 , ul ; move 4 , ua ; move ul , 4 )  
[1755] ( move 4 + ul , 4 ; move 4 , ul )  | ( move 4 + ul , 4 ; move 0 , ua ; move 4 , ul )  
[1756] ( move ua , 4 ; move 2 , ul / 4 )  | ( move ua , 3 + ul ; move 2 , ul / 4 ; move 0 , ul )  
[1757] ( move ul , ul ; move 4 , 4 + 4 )  
[1758] ( move 2 , ul ; move 4 , ua / 4 )  
[1759] ( move 3 , 2 / 4 ; move ul , ul )  | ( move 3 , 2 / 4 ; move 2 - ul , ul )  | ( move 2 + ul , ul / 2 ; move ul , ul )  | ( move 0 , ua ; move 3 , 2 / 4 ; move ul , ul )  | ( move 3 , 2 / 4 ; v0 = 3 ; move 4 - v0 , ul )  | ( move 2 + ul , ul / 2 ; move 0 , 0 - ua ; move ul , ul )  
[1760] ( move 4 , 4 + ul ; move 4 , ul )  
[1761] ( move ul , 3 ; move ua , 4 / 3 )  
[1762] ( move ul , ua ; move 3 , 3 / 4 )  
[1763] ( move 4 , ul ; move 3 , ua / 3 )  | ( move 4 , ul ; move ul - 4 , 2 - 3 )  | ( move 3 , 0 ; move 0 - 4 , ul ; pen ua + ul )  
[1764] ( move ul , ul ; move 4 * 2 , 4 )  | ( ( move ul , ul ; move 4 * 2 , 4 ) ; pen 3 )  | ( move ul , ul ; move 4 * 2 , ua + 4 ; pen ua )  | ( move ul , ul ; ( move 4 * 2 , 3 + ul ; v0 = ua ) )  
[1765] ( move ua , 4 ; move 4 , ul - 4 )  | ( v0 = 4 ; move ua , 4 ; move v0 , ua - 3 )  
[1766] ( move 3 , ul ; move ul , 4 * 3 )  | ( move 3 , ul ; ( move 2 - ul , 4 * 3 ; v0 = ua ) )  
[1767] ( move ul , ul ; move 4 , 3 / 2 )  | ( move ul , ul ; move 0 , ul ; move 4 , 2 / 4 )  
[1768] ( move 3 , ul ; move ua , 3 / 4 )  
[1769] ( move ua , 3 ; move 4 / 3 , ul )  
[1770] ( move 4 , 3 * 3 ; move ul , ul )  | ( v0 = 3 ; move 4 , v0 * v0 ; move ul , ul )  
[1771] ( move 4 , ul ; move ua , 4 * 3 )  
[1772] ( move ul , 2 / 4 ; move 3 , ul )  | ( move ul , ul / 2 ; move 3 , ul )  | ( move ul , ul / 2 ; move ul + ul , ul ; move ul , ua )  
[1773] ( move 4 , ua / 4 ; move ua , 3 )  | ( move ua / 2 , ua / 4 ; move ua , 3 )  | ( move ul , ua / 4 ; ( move 3 - ul , 0 ; move ua , 3 ) )  
[1774] ( move 4 , ua ; move 4 , ul / 2 )  | ( ( move 4 , ua ; move 4 , ul / 2 ) ; v0 = 0 )  
[1775] ( move 2 / ua , ul ; move 4 , 4 )  | ( move ul / 3 , ul ; move 4 , 4 )  | ( move 3 / ua , ul ; move 4 , 3 + ul )  | ( move ul / 3 , ul ; pen ul ; move 4 , 4 )  
[1776] ( move 4 , 4 + ul ; move ul , 4 )  | ( move 0 , ul ; move 2 + 2 , 4 ; move 2 - ul , 4 )  | ( v0 = 4 ; move 3 + ul , v0 + ul ; move ul , 4 )  
[1777] ( move ul , 3 ; move ul - 4 , 4 )  | ( move ul , 4 - ul ; move 0 - 3 , 4 )  | ( move 0 , 4 ; move ua / 2 , 3 ; move ul , ua - ul )  
[1778] ( move ua , 3 / ua ; move 4 , 4 )  
[1779] ( move 4 , ua ; move ua , 4 / 3 )  
[1780] ( move ua , 4 ; move ul - 4 , 4 )  
[1781] ( move ul , 3 / ua ; move 3 , 4 )  | ( move ul , 3 / ua ; move 3 , 3 + ul )  
[1782] ( move 4 , 4 ; move ul , 2 / ua )  
[1783] ( move ul , 3 ; move 3 , ul / 3 )  
[1784] ( move ul , 4 * 3 ; move 3 , ul )  
[1785] ( move 4 , ul / 3 ; move 2 , ul )  | ( move 3 , 2 / ua ; move ul , ua ; move ua / 3 , ul )  
[1786] ( move 4 , 2 ; move ul / 3 , ul )  | ( move 4 , ua + 2 ; move 2 / ua , ul )  | ( move 4 , 2 ; move 3 / ua , ua * ua ; pen 3 )  
[1787] ( move ua , 3 ; move ul / 3 , 4 )  
[1788] ( move 4 , ua / 2 ; move 4 , ul )  | ( ( pen ua ; pen ul ; move 4 , ul ) ; move 4 , ul - 2 )  
[1789] ( move ul , 4 ; move 3 , 3 / ua )  | ( move ul , 4 ; v0 = 2 ; move 3 , ul / v0 )  
[1790] ( move 4 , ul ; move 4 , ua - 4 )  
[1791] ( move ul , 4 ; move ua , 4 * 3 )  | ( move ul , 4 ; move ua , 4 * 3 ; pen ul )  
[1792] ( move 4 , ul ; move ua / 4 , 2 )  | ( move 3 + ul , ul ; move 4 - 2 , 2 )  | ( move 4 , ul ; move 3 - ul , 4 - 2 )  | ( move 3 + ul , ul ; move ua / 4 , 2 )  | ( move 4 , ul ; v0 = 2 ; move v0 , v0 )  
[1793] ( move ul , 4 ; move 4 , ul - 3 )  | ( move 0 - ul , ul ; move 4 , ul )  | ( move ul - 2 , ul ; move 4 , ul )  | ( move ul , 4 ; move 4 , 0 - 2 ; pen ua )  | ( move 0 - ul , ul ; ( move 4 , ul ; pen ul ) )  
[1794] ( move ul , 4 + ul ; move 4 , 4 )  | ( move ul , 4 + ul ; move 4 , 3 + ul )  | ( move ul , 4 + ul ; move 3 + ul , 4 ; v0 = 2 )  | ( move ul , 4 + ul ; v0 = 2 ; move 4 , 4 - ua )  | ( move 2 - ul , 3 + 2 ; move 4 , 4 ; v0 = ul + ul )  
[1795] ( move 4 , 3 / 2 ; move ul , ul )  | ( ( move 0 , ul ; move 4 , ul / 2 ) ; move ul , ul )  
[1796] ( move ua , 4 * 3 ; move ul , 4 )  
[1797] ( move 2 / 4 , ul ; move 4 , ul )  | ( move 3 / ua , ul ; move 4 , ul )  | ( move 2 / 4 , ul ; move 3 + ul , ul )  
[1798] ( move 4 , ul ; move 3 , 4 / ua )  
[1799] ( move ul , ua ; move 4 , 4 / 3 )  | ( move ul , 0 ; move 3 + ul , 4 / 3 )  | ( move ul , ua ; move 3 + ul , 4 / 3 ; pen ul )  
[1800] ( move 4 / 3 , ul ; move 3 , ul )  | ( move ul / 3 , ua + ul ; move ul , 0 ; move 3 , ul )  | ( ( v0 = 4 - ul ; move 4 / 3 , ul ) ; move v0 , ul )  
[1801] ( move ul , ul / 4 ; move 3 , 3 )  | ( move ul , ul / 4 ; move ul , 3 ; move 2 , 0 )  
[1802] ( move 4 , ul ; move ua , 4 * 4 )  | ( move 3 + ul , ul ; move ua , 4 * 4 ; move 0 , 0 )  
[1803] ( move 4 , ua ; move 4 , ul / 3 )  
[1804] ( move ua , 4 / 3 ; move ul , 4 )  
[1805] ( move 4 , ul / 4 ; move 2 , ul )  | ( move 4 , ul / 4 ; move ul + ul , ul )  
[1806] ( move 4 , ul / 4 ; move ul , 2 )  
[1807] ( move ua , 4 / 3 ; move 4 , ul )  
[1808] ( move 4 , ua ; move 4 / 3 , ul )  | ( ( move 4 , 0 ; move 4 / 3 , ul ) ; pen 0 )  | ( move 4 , ua ; move ul , ul ; move ul / 4 , ul )  
[1809] ( move 4 , ua / 3 ; move 4 , ul )  
[1810] ( move 3 / ua , 4 ; move 4 , ul )  | ( move 3 / ua , 4 ; move 4 , ua + ul )  
[1811] ( move 3 , 4 ; move ul , ul / 3 )  
[1812] ( move 3 , 4 / ua ; move 4 , ul )  
[1813] ( move ul , 4 / 3 ; move ua , 4 )  
[1814] ( pen ua ; move ua + 2 , 3 + 2 )  | ( pen ua ; move ua + 3 , 3 + 2 )  | ( pen ua ; move ua + 2 , 4 + ul )  | ( pen ua ; move ua , 4 + ul ; move 2 , ua )  | ( pen ua ; move ul , 3 + 2 ; move ua , ua * 4 )  | ( pen ua ; move ua , 4 + ul ; move ul + ul , ua )  | ( pen 4 + 2 ; move ua + ul , 4 + ul ; move ul , ua )  | ( move ul / 2 , 4 ; ( pen ua ; move ua + ul , ul ) )  
[1815] ( move ul , 4 * 4 ; move 4 , ul )  
[1816] ( move 4 , 3 ; move ul , ul / 4 )  | ( move 4 , 4 - ul ; move ul , 2 / ua )  
[1817] ( move 4 , 3 / 4 ; move ul , ul )  | ( ( move 4 , 4 + 3 ; move ul , ul ; pen 4 ) ; v0 = ul )  
[1818] ( move 4 , ul / 4 ; move 3 , ul )  
[1819] ( move 4 , ul ; move 4 , ua / 4 )  | ( move 3 + ul , ul ; move 3 + ul , ua / 4 ; pen ua )  
[1820] ( move ul / 4 , 3 ; move 4 , ul )  | ( move ul / 4 , 3 ; move 4 , ua + ul )  
[1821] ( move 4 , ua / 4 ; move 4 , ul )  | ( move 4 , ua / 4 ; move 3 + ul , ul )  | ( move 4 , ua / 4 ; move 4 , ul - ua )  
[1822] ( move 3 , ul / 4 ; move ul , 4 )  
[1823] ( move ua / 4 , ul ; move 4 , 4 )  | ( move ua / 4 , ua + ul ; move 4 , 4 )  
[1824] ( move 4 , ul ; move 4 / 3 , ul )  | ( move 4 , 3 - 2 ; move 4 / 3 , ul ; pen ul )  | ( move 4 , ul ; move ul , ul ; move 2 / ua , ua )  
[1825] ( move 4 , ua ; move 4 , ul / 4 )  
[1826] ( move 4 , ul ; move ua / 4 , 4 )  | ( move 4 , ul ; move 3 / 2 , ua + 4 )  | ( move 4 , ua + ul ; move ua / 4 , 4 )  
[1827] ( move 4 , ul / 4 ; move ul , 4 )  | ( move 3 + ul , ul / 4 ; move ul , 4 ; pen ua )  
[1828] ( pen 3 ; move ua - ul , 0 - 2 )  
[1829] ( pen 2 ; move ua + 4 , 0 - ul )  
[1830] ( move 4 , ul ; move 4 , ua - 7 )  
[1831] ( pen ua ; move 4 + ul , 0 - 3 )  | ( pen ua ; move ul - ua , 0 - 3 )  | ( pen ua + ul ; move ul - ua , ul - 4 )  | ( pen ua ; move ul , ul / ua ; move 4 , ua )  | ( pen 4 ; move 3 + 2 , ul / ua ; move 0 , ul )  | ( ( pen ul ; pen ua ) ; move ul - ua , ul / ua )  | ( pen ul / ua ; pen ua ; move ul - ua , ul / ua )  | ( pen ua + ua ; v0 = 4 ; move ul + v0 , 0 - 3 )  
[1832] ( pen ua ; move ua + 3 , 4 + 2 )  | ( move 3 , 3 ; pen ua + ul ; move ua + 2 , 3 )  | ( v0 = ua + 3 ; pen v0 ; move v0 , v0 + v0 )  
[1833] ( pen 4 ; move ua + 3 , ua - 2 )  
[1834] ( pen ua ; move ua + 2 , 3 / 2 )  
[1835] ( pen 2 ; move 3 + ul , ua - 4 )  
[1836] ( pen ua ; move 4 + ul , 2 - 3 )  | ( pen ua ; move ua - ul , ua / 3 )  | ( pen ua ; move ua - ul , ua - ul )  | ( pen 4 + 4 ; move 4 + ul , ua - ul )  | ( pen 3 + ul ; move ul - ua , 0 - ul )  | ( pen 4 + 3 ; move 4 , ul - 2 ; move ul , 0 )  | ( pen ua ; move 4 + ul , ua / 3 ; v0 = 2 )  | ( pen ua ; v0 = ua - ul ; move v0 , v0 )  | ( pen 4 ; move ul , ul - 2 ; move ua - 2 , ua )  | ( pen ua ; ( move 4 , ua - ul ; move ul , ua ; move 0 , ul ) )  
[1837] ( pen 3 ; move ua + ul , 4 + 4 )  
[1838] ( pen ua * ua ; move 4 , 4 + 2 )  | ( move ul , 2 ; pen ua ; move 4 , 4 )  | ( pen 3 ; pen ua ; move 3 + ul , 3 * 2 )  | ( move ul , ul ; pen 4 + ul ; move 4 , 4 + ul )  | ( pen ua + ul ; v0 = 3 * 2 ; move 4 , v0 )  | ( pen ua - ul ; move 0 , 2 ; ( move 3 , 4 ; move ul , ua ) )  
[1839] ( pen ua + ua ; move 4 , 3 * 3 )  | ( move 0 , 3 ; ( pen ua + ul ; move 4 , 4 + 2 ) )  
[1840] ( pen 3 ; move ul - ua , 3 / 2 )  
[1841] ( pen 2 ; move ua - ul , 4 * 4 )  | ( pen 2 ; move ul - ua , ul / 4 )  
[1842] ( move ua , 0 ; move 0 - ua , ul )  | ( move ua , ua ; move 0 - ua , ul )  | ( move ua , 0 ; move 0 - ua , ul ; move 2 / 4 , 4 + 2 )  
[1843] ( move 0 - ua , 0 ; move ua , ul )  | ( move 0 - ua , ua ; move ua , ul )  | ( move 0 - ua , ua ; move ua , ua + ul )  | ( move 0 - ua , ua + ua ; move ua , ul )  | ( move 0 - ua , 0 ; pen ul ; move ua , ul )  | ( move 0 , ua ; move 0 - ua , 0 ; move ua , ul )  | ( move 0 - ua , ua ; move ua , ul ; move 0 , 0 )  
[1844] ( pen 4 ; move 4 + ul , ul - 4 )  | ( pen 4 ; move 4 + ul , ua - 3 ; v0 = ua - ul )  
[1845] ( pen ua ; move 4 + 4 , 4 / ua )  | ( move 3 / ua , ua * ua ; pen ua + 4 ; move ua + 2 , 2 )  
[1846] ( move ul , 0 ; move ul - ua , 0 )  | ( move ul , 0 ; move ul - ua , ua )  | ( move ul , ua ; move ul - ua , 0 )  | ( move ul , ua ; move ul - ua , ua )  | ( move 2 , ua + ua ; move ul - ua , 0 )  | ( move 2 , ua ; move ul - ua , ua * 2 )  | ( move 2 - ul , ua ; move ul - ua , ua )  | ( move 3 , ua ; pen ul + ul ; move 2 , 0 )  | ( pen ul ; move ul , 0 ; move ul - ua , 0 )  | ( move ul , ua ; move ul - ua , 0 ; pen ua )  | ( move ul , 0 ; move ul - ua , ua ; pen ua )  | ( move ua - ul , 0 ; move ul - 2 , 0 - ua )  | ( move ul , 0 ; move ul - ua , 0 ; v0 = ua )  | ( move 4 / ua , 0 ; move ul - ua , ua ; pen 2 )  | ( move ul , 0 ; v0 = ul - ua ; move v0 , ua )  | ( move ul , 0 - ua ; move ul - ua , ua ; pen ua / 3 )  | ( ( move ul , ua ; move ul - ua , ua * 2 ) ; pen ua )  | ( v0 = ul ; ( move v0 , ua ; move ul - ua , 0 ) )  
[1847] ( move ua + ul , 0 ; move ua , 2 )  | ( move ua + ul , ua ; move ua , 2 )  | ( move ua + ul , ua * 3 ; move ua , 2 )  | ( move ua + ul , 0 ; move ua , 2 ; pen ua )  | ( move ua + ul , ua ; v0 = 2 ; move ua , v0 )  | ( move ua + ul , 0 ; move ua , 4 - 2 ; pen ul / 3 )  | ( move ua + ul , ua ; move ua , 3 - ul ; v0 = ul )  | ( pen ul ; ( move ua + ul , ua ; move ua , ua + 2 ) )  | ( move ua + ul , ua ; move ua , ul + ul ; v0 = ua )  | ( ( move ul , ua ; move ua , ua ) ; move ua , 2 ; pen ul )  
[1848] ( move ul , 0 ; move 0 - ua , ul )  | ( move ul , ua ; move 0 - ua , ul )  | ( move ul , ul / ua ; move ua , 4 )  | ( move ul , 0 ; move 0 - ua , ul ; pen ul )  | ( move ul , ul / ua ; move ua , 4 ; pen 3 + 2 )  | ( move ua , ul ; v0 = 3 - 4 ; move v0 , v0 )  | ( move ua , 2 - ul ; move ul , ua / 3 ; move 0 , 0 )  
[1849] ( move ul , 0 ; move ua + ul , 2 )  | ( move ul , 0 ; move ua + ul , ua + 2 )  | ( move ul , 0 ; move ua + ul , ul + ul )  | ( move ul , 0 ; move ul , 2 ; move ua , ua )  | ( move ul , ua ; move ul , 2 ; move ua , 0 )  | ( move ul , ua ; move ul , 2 ; move ua , ua )  | ( move ul , ua ; move ua + ul , 2 ; pen ul )  | ( pen ul ; move ul , ua ; move ua + ul , 2 )  | ( move ul , 0 ; move ua + ul , 2 ; v0 = 0 )  | ( move ul , ua ; move 3 , 2 ; move ua - 2 , 0 )  | ( move ul , ua ; move ua + ul , 2 ; move 0 , ul )  
[1850] ( move 0 - ua , ua ; move 2 , ul )  | ( move 0 - ua , ua ; v0 = 2 ; move v0 , ul )  | ( v0 = 0 ; move v0 - ua , v0 ; move 2 , ul )  
[1851] ( move ua , 0 ; move ua + ul , 3 )  | ( move ua , 0 ; move ua + ul , ua + 3 )  | ( move ua , 0 ; move ua + ul , 3 - ua )  | ( move ua , ua ; move ua + ul , ua + 3 )  | ( move ua , 0 ; move ua + ul , 3 ; pen ul )  | ( move ua - ul , ua ; move 4 + 3 , 3 - ua )  | ( move ua , 0 ; ( move ul , 3 ; move ua , ua ) )  | ( move ua , ua ; move ua + ul , ua + 3 ; pen ua )  | ( move 2 , 0 ; ( move 3 , ua * 3 ; move ua , 3 ) )  | ( ( move ua , 0 ; move ua + ul , 3 ) ; v0 = 2 )  | ( move ua , ua ; ( v0 = ua + ul ; move v0 , 3 ) )  | ( move ua , ua ; move ul , 3 ; ( move ua , 0 ; pen 3 ) )  | ( ( move ua , 0 ; move ua + ul , 3 ) ; v0 = 4 * 3 )  | ( ( move ua - ul , ua * 2 ; move ua , 3 ) ; move ul , 2 )  
[1852] ( move ua + ul , 0 ; move ul , 2 )  | ( move ua + ul , 0 ; move 3 - 2 , 2 )  | ( move ua + ul , 0 ; move ul , ul + ul )  | ( move ua + ul , ua ; move ul , ul + ul )  | ( move ua , ua ; move ul , ua ; move ul , 2 )  | ( move ua + ul , ua * 3 ; move ul , ul + ul )  | ( move ua + ul , ua * 4 ; move ul , ul + ul )  | ( move ul , ua ; ( move ua , 0 ; move ul , 2 ) )  | ( move ua + ul , 0 ; move ul , 2 ; pen ua + ul )  | ( move ua + ul , 0 ; move ul , ua + 2 ; v0 = ua )  | ( ( move 2 , ua ; move ua - ul , ua ) ; move ul , 2 )  | ( move ua + ul , ua + ua ; v0 = ul ; move v0 , 2 )  | ( move ua + ul , ua ; v0 = ua + 2 ; move ul , v0 )  
[1853] ( move 2 , ua ; move 0 - ua , ul )  | ( move ua , ul ; move ul - 3 , 0 - ul )  | ( move 2 , 0 ; move 0 - ua , ul ; v0 = ul / 4 )  
[1854] ( move ua , 2 ; move 0 - ua , ul )  | ( move ua , 4 / 2 ; move 0 - ua , ul ; v0 = ul )  
[1855] ( move 2 , 0 ; move ua , ua - ul )  | ( move ul + ul , 0 ; move ua , 2 - 3 )  | ( move ul + ul , 0 ; move ua , ua - ul )  | ( move ul + ul , ua ; move ua , ul - 2 )  | ( move 2 , ua ; move ua , ua - ul ; v0 = 0 )  | ( move 2 , 0 ; move ua , ua - ul ; v0 = ul )  | ( move 2 , 0 ; v0 = ul ; move ua , ua - v0 )  | ( v0 = ua ; move 2 , 0 ; move ua , v0 - ul )  | ( v0 = ua ; move 2 , v0 ; move ua , v0 - ul )  | ( v0 = 0 - ul ; move 2 , v0 * ua ; move ua , v0 )  
[1856] ( move ua , ua ; move ua , 0 - 3 )  | ( move ua , 0 ; move ua , ua - 3 )  | ( move ua , ua ; move ua , ua - 3 ; v0 = 2 - ul )  
[1857] ( move ua , 0 - ul ; move ua , 2 )  | ( move ua , ul - 2 ; move ua , 2 )  | ( move ua , ua - ul ; move ua , 2 )  | ( move ua , 0 - ul ; move ua , ul + ul )  | ( move ua , ul - 2 ; move ua , ul + ul )  
[1858] ( move 3 - ua , 0 ; move ua , ul )  | ( move 3 - ua , ua ; move ua , ul )  | ( move 3 - ua , 0 ; move ua , ul - ua )  | ( move 3 - ua , ua ; move ua , ul ; v0 = 4 )  | ( pen ul ; move 4 - ua , ua ; move ua , ua + ul )  | ( move 3 - ua , 0 ; ( move ua , ua + ul ; pen 3 ) )  
[1859] ( move ua , ua ; move ua , 0 - 4 )  | ( move ua , ua ; move ua , ua - 4 )  | ( move ua , ua * 4 ; move ua , ua - 4 )  | ( v0 = 0 ; move ua , ua ; move ua , ua - 4 )  | ( ( pen 2 ; move ua , ua ) ; move ua , ua - 4 )  | ( move ua , ua ; v0 = ua ; move v0 , 0 - 4 )  | ( move ua , ua ; v0 = ua ; move v0 , v0 - 4 )  
[1860] ( move ul , 0 ; move ua - 2 , ul )  | ( move ul , ua ; move ua - 2 , ul )  | ( move ul , ua * 4 ; move ua - 2 , ul )  
[1861] ( move ua , 0 ; move 3 , ua - ul )  | ( pen ul ; move ua , 0 ; move 3 , 0 - ul )  | ( move ua , 0 ; move 3 , 2 - 3 ; v0 = 4 )  
[1862] ( move ul , 0 ; move 2 - ua , ul )  | ( move ul , ua ; move 2 - ua , ul )  | ( move ul , ua ; move 2 - ua , 2 - ul )  | ( move ul , ua ; move 2 - ua , ul ; pen 2 )  
[1863] ( move 2 , 0 ; move ua - ul , ul )  | ( move 2 , ua ; move ua - ul , ul )  | ( move 4 / 2 , ua ; move ua - ul , ul ; pen ul )  | ( move 3 - ul , 0 ; move ua - ul , ul - ua ; pen ul - ua )  
[1864] ( move 0 , 3 ; move ua , ua * ua )  | ( move 0 , ua * ua ; move ua , 3 )  | ( move 0 , 4 / ua ; move ua , ul )  | ( move 0 , ul ; move ua , 4 / ua )  | ( move ul , ua * ua ; move ua , 3 )  | ( move 0 , ua * ua ; move ua , 2 + ul )  | ( move ul / 4 , ul ; move ua , 4 / ua )  
[1865] ( move ua + ul , 0 ; move 3 , ul )  | ( move ua + ul , 0 ; move 4 - ul , ul )  | ( move ua + ul , ua ; move 4 - ul , ul )  | ( move ua + ul , 0 ; v0 = ul ; move 3 , v0 )  | ( move ua + ul , ua ; v0 = 3 ; move v0 , ul )  | ( ( move ua + ul , 0 ; move 3 , ul ) ; v0 = 4 )  | ( ( move ua + ul , 0 ; move 3 , ul ) ; pen 4 + 2 )  | ( move ua + ul , ua * 4 ; move 3 , ul ; v0 = 3 )  | ( move ua + ul , ua ; move 3 , ul ; v0 = 0 - ul )  | ( move ua + ul , ua ; move 3 , ul - ua ; pen 3 - ul )  | ( move ua + ul , ua ; v0 = ua + ul ; move 3 , v0 )  | ( move ua + ul , 0 ; move 2 + ul , ul ; move 0 , ua + ul )  
[1866] ( move ul , 0 ; move ua + 3 , ul )  | ( move ul , ua ; move ua + 3 , ul )  | ( move ul , ua * 2 ; move ua + 3 , ul )  | ( move ul , ua ; move ua + 3 , ul ; pen ua )  | ( ( move ul , ua ; move 3 , ul ) ; move ua , ua )  | ( move ul , ua ; move ua , ul - ua ; move 3 , ua )  | ( move ul , ua ; v0 = ua + 3 ; move v0 , ul )  
[1867] ( move 2 - ua , ua ; move ua , 2 )  | ( move 2 - ua , ua * 2 ; move ua , 2 )  | ( move 2 - ua , ua ; move 0 , ul ; move ua , ul )  
[1868] ( move 0 - ua , 3 ; move ua , ul )  
[1869] ( move 0 - ua , ua ; move 3 , ul )  | ( move 0 - ua , ua * 3 ; move 3 , ul )  
[1870] ( move ua - ul , 0 ; move 2 , ul )  | ( move ua - ul , ua ; move 2 , ul )  | ( move ua - ul , 0 ; move 3 - ul , ul )  | ( move ua - ul , ua ; move 4 - 2 , ul )  | ( move ua - ul , ua ; move 3 - ul , ul )  | ( move ua - ul , ua ; move 2 , ul ; v0 = ua )  | ( move ua - ul , 0 ; v0 = 2 ; move v0 , ul )  | ( pen ul ; move ua - ul , ua + ua ; move 2 , ua + ul )  | ( move ua - ul , 0 - ua ; move ul , 2 - ul ; move ul , ua )  
[1871] ( move ul , 2 ; move ua , 0 - ul )  | ( move ul , 2 ; move ua , ul - 2 )  | ( move ul , 2 ; move ua , ua - ul )  | ( move 0 - ua , ul ; move 3 - 4 , ul )  | ( move ul , 4 - 2 ; move ua , ua - ul )  | ( pen ul ; move ul , 2 ; move ua , ua - ul )  | ( move 0 , 2 ; move ul , ua ; move ua , 3 - 4 )  | ( move ul , ua + 2 ; move ua , ua - ul ; pen 2 )  | ( move ul , ul + ul ; v0 = ua ; move v0 , v0 - ul )  | ( move ul , 2 ; ( move ua , 3 - 4 ; pen 0 ; v0 = ua ) )  | ( move ul , ul + ul ; ( move ua , 2 - 3 ; pen ul ) ; pen 0 )  
[1872] ( move 3 , 0 ; move ua + ul , ul )  | ( move 3 , ua ; move ua + ul , ul )  | ( move 3 , 0 ; move ua + ul , ua + ul )  | ( move 4 - ul , ua ; move ua + ul , ul )  | ( move 3 , 0 ; move ul , ul ; move ua , ua )  | ( move 3 , ua ; move ua + ul , ul ; pen 3 )  | ( move 3 , ua ; pen ul ; move ua + ul , ul )  | ( move 3 , 0 ; move ua + ul , ua + ul ; v0 = 0 )  | ( ( move 3 , 0 ; move 2 , ul ) ; move ua - ul , ua )  
[1873] ( move ua , 0 ; move ua , 4 + ul )  | ( move ua , ua ; move ua , 3 + 2 )  | ( move ua , ua * 2 ; move ua , 4 + ul )  | ( move ua , 0 ; move ua , 4 + ul ; v0 = ul )  | ( v0 = 4 + ul ; move ua , 0 ; move ua , v0 )  | ( v0 = ua ; move ua , v0 ; move v0 , 4 + ul )  | ( pen 2 / ua ; move ua , 0 ; ( move 0 , ul ; move ua , 4 ) )  
[1874] ( move ua , 2 ; move ua , ua - 2 )  | ( move ua , 2 ; move ua , ul - 3 )  | ( move ua , 4 - 2 ; move 0 , ul - 4 ; move ua , ul )  | ( ( move 0 , ul ; move ua , ul ) ; move ua , 0 - 2 ; pen ul )  
[1875] ( move 0 - 2 , ul ; move ua , ul )  | ( move 2 - 4 , ul ; move ua , ul )  | ( move ul - 3 , ul ; move ua , ul )  | ( move 2 - 4 , ul ; move ua , ul ; pen ua )  | ( move 0 - ua , 2 ; move ul + ul , ul - 2 )  | ( ( move ul - 3 , ul ; move ua , ul ) ; pen ul )  
[1876] ( move ul - ua , 0 ; move ul , 2 )  | ( move ul - ua , ua ; move ul , 2 )  | ( move ul , 0 - ul ; move ua - ul , ul )  | ( move ul - ua , ua ; move ul , ua / 3 )  | ( move ul - ua , ua ; ( move ul , 2 ; pen ul ) ; pen ul )  | ( ( move ul - ua , ua ; move ul , 2 ) ; v0 = ul / 2 )  
[1877] ( move ua , ua ; move ua - 2 , 2 )  | ( move ua , ua * 2 ; move ua - 2 , 2 )  | ( move ua , 0 ; move ua - 2 , 2 ; pen ua )  
[1878] ( move 2 , 0 ; move ul - ua , ul )  | ( move 2 , 0 ; move ul - ua , ul - ua )  | ( pen ul ; move 2 , 0 ; move ul - ua , ul )  | ( move 2 , ua * 2 ; move ul - ua , ua + ul )  | ( v0 = ua ; move v0 / 3 , 0 ; move ul - ua , ul )  
[1879] ( move ul , ul ; move ua , 0 - 2 )  | ( move ul , ul ; move ua , 2 - 4 )  | ( move ul , ul ; move ua , ul - 3 )  | ( move 3 - 2 , ul ; move ua , ua - 2 )  | ( move ul , ul ; move ua , 2 - 4 ; move 0 , ul )  | ( move ul , ul ; move ua , 2 - 4 ; v0 = ul )  | ( pen ul ; ( move ul , ul ; move ua , ul - 3 ) )  | ( move ul , ul ; move ua - ul , ul - 3 ; move ul , 0 )  | ( move ul , ul - ua ; v0 = 2 - 4 ; move ua , v0 )  | ( ( move ul , ul ; move ua , ul - 3 ; pen 3 ) ; v0 = ul )  
[1880] ( move ua + ul , 0 ; move ua , 4 )  | ( move ua + ul , ua + ua ; move ua , 4 )  | ( move ua + ul , ua ; move ua , 4 - ua )  | ( move ua , ua ; move ul , ua ; move ua , 4 )  | ( move ua + ul , ua ; move ua , 4 ; pen ua )  | ( move 2 , ua ; ( move ua - ul , 0 ; move ua , 4 ) )  | ( move ua + ul , ua ; v0 = 2 + ul ; move ua , 4 )  
[1881] ( move ua - 3 , 0 ; move ua , ul )  | ( move ua - 3 , ua ; move ua , ul )  
[1882] ( move ua , 0 ; move ua - 4 , ul )  | ( move ua , ua ; move ul / 2 , ul ; move 2 , ua )  
[1883] ( move ua , 3 + 2 ; move ua , ul )  | ( move ua , 4 + ul ; move ua , ul )  | ( move 0 , ua + 4 ; move ua , ul ; move ua , ul )  | ( ( move ua , 4 + ul ; move ua , ul ) ; move ul - 2 , ua )  
[1884] ( move ua , 0 ; move ua - ul , 4 )  | ( move ua , 0 ; move ua - ul , 3 + ul )  | ( move ua , ua * 2 ; move ua - ul , 4 ; move ul , 4 + ul )  
[1885] ( move ua , ua - 2 ; move 2 , ul )  | ( move ua , ua - 2 ; move 2 , ul ; v0 = 4 )  | ( move ua , 2 - 4 ; move 2 , ul ; v0 = ua )  | ( move ua , 0 - 2 ; move 4 - 2 , ul ; pen 4 + ul )  
[1886] ( move 2 , ua ; move ul - ua , 2 )  | ( move 2 , ua ; move ul - ua , 3 - ul ; move ul / ua , ua )  
[1887] ( move ua + ul , 0 ; move ul , 4 )  | ( move ua + ul , ua ; move ul , 4 )  | ( move ua + ul , ua ; move ul , 3 + ul )  | ( move ua , 0 ; move ul , ua ; move ul , 4 )  | ( move ua + ul , 0 ; move 0 - ul , 3 - 2 )  | ( move ua , ua * 2 ; move ul , ua ; move ul , 4 )  | ( move ua + ul , ua ; move ul , 4 ; v0 = ul )  | ( move ua + ul , 0 ; v0 = 4 ; move ul , v0 )  | ( move ua + ul , 0 ; move ul , ua + 4 ; move 0 , 4 )  | ( move ua , ua * 3 ; move ul , ua * 3 ; move ul , 3 + ul )  
[1888] ( move 3 , ua ; move ua , ua - 2 )  | ( move 3 , ua ; move ua , ul - 3 )  | ( move 3 , ua * 4 ; move ua , ul - 3 )  
[1889] ( move ua , 0 - ul ; move ua , 4 )  | ( move ua , ul - 2 ; move ua , 4 )  | ( move 0 , ua - ul ; ( move ua , 0 ; move ua , 4 ) )  | ( v0 = ua ; move v0 , v0 - ul ; move v0 , 4 )  
[1890] ( move ua , 2 ; move 2 , ua * ua )  
[1891] ( move ul , 0 ; move ul - ua , 3 )  | ( move ul - ua , 3 ; move ul , 3 )  | ( move ul , ua ; move ul - ua , 3 )  | ( move ul - ua , ua + 3 ; move ul , 3 )  | ( move ul , ua ; move ul - ua , 3 ; pen 3 )  | ( move ul - ua , 3 ; move ul , 2 + ul ; v0 = ua + ul )  
[1892] ( move ua , 0 ; move ul , 2 / ua )  | ( move ua , 0 ; move ul , ul / 4 )  | ( move ua , ua ; move ul , ul / 3 )  | ( move ua , ua ; move ul , ul / 4 )  | ( move ua , ua ; move ul , ul / 4 ; pen ul )  | ( move ua , ua ; move ul , ul / 3 ; v0 = 2 )  | ( move ua , ua ; ( move ul , 2 / ua ; pen 0 ) )  | ( move ua , 0 ; move ul , ul / 3 ; move 0 , 2 + ul )  | ( ( pen ul ; move ua , ua * 3 ) ; move ul , ul / 4 )  
[1893] ( move ua + ul , ul ; move 2 , 2 )  | ( ( move ua + ul , ul ; v0 = ua + 2 ) ; move 2 , v0 )  
[1894] ( move ua , ua ; move 3 , ua - 2 )  
[1895] ( move ua , ul ; move 0 - ul , 3 )  | ( move ua , ul ; move ul - 2 , 3 )  | ( move ua , ul ; move 0 - ul , 3 ; pen 0 )  | ( move ua , ul ; move 2 - 3 , 3 ; v0 = 3 )  | ( move ua , ul ; v0 = 3 ; move 0 - ul , v0 )  
[1896] ( move ua , 0 ; move 2 , ul / ua )  | ( move ua , ua * 4 ; move 2 , ul / ua )  | ( move ua + ul , ua ; move ul , ul / 4 )  | ( move ua , ua ; move ul + ul , ul / ua )  | ( move ua , ua ; move 2 , ul / ua ; move 0 , ua + ua )  
[1897] ( move 2 - ua , ua ; move 2 , ul )  | ( move 2 - ua , ua + ua ; move 2 , ul - ua )  | ( move 2 - ua , ua ; move ul + ul , ul ; v0 = 2 / 3 )  
[1898] ( move ul , 0 ; move ua + 4 , ul )  | ( move ul , ua ; move ua + 4 , ul )  | ( move ul , 0 ; move ua + 4 , ul - ua )  | ( move ul , ua ; move ua + 4 , ua + ul )  | ( move ul , 0 ; move ua , ul ; move 4 , ua )  | ( move ul , 0 ; move 4 , ua + ul ; move ua , 0 )  | ( ( move ul , ua ; move ua , ul ) ; move 4 , 0 )  | ( move ul , ua ; move ua + 4 , ul ; v0 = 3 )  | ( move 2 - ul , 0 ; move 3 , ul ; move ua + ul , ua )  | ( move ul , 0 - ua ; move ua , ul ; move 4 , ua * 2 )  | ( move ul , 0 ; pen ua + ua ; ( pen ul ; move ua + 4 , ul ) )  
[1899] ( move ua , ul ; move ua + 2 , 3 )  | ( move ua , ul ; move ua , 3 ; move 2 , 0 )  | ( move ua , ul ; move ua + 2 , 3 ; move 0 , ua )  
[1900] ( move ul , 0 ; move ua , 2 / ua )  | ( move ul , ua ; move ua , 2 / ua )  | ( move ul , ua ; move ua , 2 / ua ; pen 4 )  | ( move ul , ua ; v0 = ua ; move v0 , 2 / ua )  | ( move ul , ua ; move ua , 2 / ua ; move 0 , 2 * 2 )  
[1901] ( move ul , 2 ; move ua , ua - 2 )  | ( move ul , ua + 2 ; move ua , ul - 3 )  | ( move ul , 2 ; ( move ua , ul - 3 ; pen ua ) )  | ( move ul , 2 - ua ; move ua , ua - 2 ; pen 4 - ua )  | ( move ul , ul + ul ; ( move ua , 2 - 4 ; v0 = ua ) )  
[1902] ( move ul , 0 ; move ua + ul , 4 )  | ( move ul , ua ; move ua + ul , 4 )  | ( move ul , ua ; move ua + ul , ua + 4 )  | ( move ul , 0 ; move ul , 4 ; move ua , ua )  | ( ( move ul , 0 ; move ul , 4 ) ; move ua , 0 )  | ( move ul , 0 ; move ua , 3 + ul ; move ul , 0 )  | ( move ul , ua ; move ua + ul , 4 ; v0 = 0 )  | ( move ul , 0 ; move ua + ul , 4 ; v0 = ul )  | ( move ul , ua ; ( move ua + ul , 4 ; pen 4 ) )  | ( move ul , 0 ; ( move ul , 4 ; pen ul ; move ua , ua ) )  | ( move ul , ua ; ( move ua , 4 ; pen ul ; move ul , 0 ) )  | ( ( move ul , ua ; ( move ul , 4 ; move ua , 0 ) ) ; pen 3 )  
[1903] ( move 2 , ul ; move ua + ul , 2 )  | ( move 2 , ua + ul ; move ua + ul , 2 )  | ( pen ul ; move 2 , ul ; move ua + ul , 2 )  | ( move 4 / 2 , ua + ul ; move ua + ul , 2 )  
[1904] ( move 2 , 0 ; move ua , ul / ua )  | ( move 2 , ua ; move ua , ul / ua )  | ( move 3 - ul , ua ; move ua , ul / ua )  | ( move 2 , 0 ; move 0 , ua ; move ua , ul / ua )  | ( ( move 2 , 0 ; v0 = ua ) ; move v0 , ul / v0 )  
[1905] ( move ua + 2 , ul ; move ul , 2 )  | ( move ua + 2 , ul ; move ul , ul + ul )  | ( move ua + 2 , ul ; move ul , 2 ; pen ua )  | ( move ua + 2 , ul ; move ul , 2 ; pen ul )  | ( move 3 , ul ; move ua - ul , 0 ; move ul , 3 - ul )  | ( move ua + 2 , ul - ua ; ( move ul , ul + ul ; pen ua ) )  
[1906] ( move 2 - ua , ua ; move ul , 2 )  | ( move ul , ul - 2 ; move 4 , ul )  | ( move ul , ua - ul ; move 4 , ul )  | ( move ul , ul - 2 ; move 3 + ul , ul )  | ( move ul , ua - ul ; move 4 , 2 - ul ; v0 = 4 )  | ( ( v0 = ua ; move ul , v0 - ul ) ; move 4 , ul )  
[1907] ( move 0 , ua * ua ; move ua , 4 )  | ( move 0 , ul / 2 ; move ua , 0 - ul )  | ( move 0 , 2 ; move ua , 4 / ua ; pen 0 )  | ( move 0 , ua * ua ; move ua , 4 ; v0 = 2 )  | ( move 0 , 4 ; v0 = ua ; move v0 , v0 * v0 )  | ( move 0 , 4 ; move ua , ua * ua ; v0 = ua - ul )  | ( v0 = ua + 2 ; move ua , v0 * v0 ; pen ua * 2 )  
[1908] ( move 0 - 4 , ua ; move ua , ul )  | ( move 0 - 4 , ua ; move ua , ul ; v0 = 2 )  
[1909] ( move ua - 3 , 0 ; move ul , ul )  | ( move ua - 3 , ua ; move ul , ul )  | ( move ua - 3 , ua * 4 ; ( move ul , ul ; move 0 , ua ) )  | ( move ua - 3 , ua * 4 ; move ul , ul ; v0 = ul / ua )  
[1910] ( move ul , 2 ; move ua + ul , 2 )  | ( move ul , ul + ul ; move ul , 2 ; move ua , 0 - ua )  | ( move ul , 2 ; move ua + ul , ul + ul ; v0 = ua * ua )  
[1911] ( move ua , ua * ua ; move 2 , 2 )  | ( move ua , ua * ua ; move 2 , 3 - ul )  
[1912] ( move ua - ul , 0 ; move ua , 4 )  | ( move ua - ul , ua ; move ua , 4 )  | ( move ua - ul , ua * 3 ; move ua , 3 + ul )  | ( move ua - ul , ua ; move ua , 4 ; pen 2 / ua )  | ( v0 = ua ; move v0 - ul , v0 ; move v0 , 4 )  
[1913] ( move ua , ua ; move 4 , 0 - ul )  | ( move ua , ua ; ( move 4 , ul - 2 ; pen ul ) )  | ( move ua , 0 ; v0 = 0 - ul ; move 3 - v0 , v0 )  
[1914] ( move ua , 0 ; move 4 , ua * ua )  | ( move 3 * 2 , ua ; move 4 , 4 + 4 )  | ( pen ul ; move ua , ua ; move 4 , ua * ua )  | ( move ua , 0 ; move 4 , ua * ua ; pen ua / 3 )  
[1915] ( move 4 , 0 ; move ua , ua * ua )  | ( move 4 , 0 ; pen ul ; move ua , ua * ua )  
[1916] ( move ul , 0 - 3 ; move ua , ul )  | ( move ul , ua - 3 ; move ua , ul )  | ( move ul , ul - 4 ; move ua , ul )  | ( move ul , ul - 4 ; move ua , ul ; pen ul )  | ( move 0 , ul ; move ul , 0 - 4 ; move ua , ul )  | ( move 0 , ua ; move ul , ua - 3 ; move ua , ul )  | ( move ul , ua - 3 ; move ua , ul - ua ; v0 = ua )  | ( ( move ul , 0 - 3 ; move ua , ul ) ; pen ua + ua ; pen ul )  
[1917] ( move 4 , 0 ; move ua + ul , ul )  | ( move 4 , ua ; move ua + ul , ul )  | ( move 4 , ua ; move ua + ul , ul ; pen 2 )  | ( move 4 , ua ; move ua , ul ; move ul , ua )  | ( move 2 + 2 , 0 ; move ul , ul ; move ua , ua )  | ( move 4 , 0 ; move ua - ul , ul ; move 2 , ua )  | ( move 3 + ul , ua ; move ua + ul , ul ; pen ua )  | ( v0 = ua + ul ; move 4 , ua ; move v0 , v0 )  | ( move 4 , ua ; pen 3 - 2 ; move ua + ul , ua + ul )  | ( move 3 + ul , ua ; move ua + ul , ul ; move 0 , ul )  
[1918] ( move ua + ul , 2 ; move 2 , ul )  | ( move ua + ul , 3 - ul ; move 2 , ul )  | ( move ua + ul , 2 ; move 3 - ul , ul )  
[1919] ( move ua , ua - ul ; move 2 , 2 )  | ( move ua , ua - ul ; move 4 - 2 , 2 )  | ( move ua , 3 - 4 ; move 2 , ul + ul )  | ( move ua , 0 - ul ; move 2 , ul + ul )  | ( move ua , ua - ul ; move 2 , ua + 2 )  | ( move ua , ua - ul ; move 4 - 2 , 3 - ul )  | ( move 0 , ua - ul ; move ua , 0 ; move 3 - ul , 2 )  | ( v0 = 2 ; move ua , ul - v0 ; move v0 , v0 )  
[1920] ( move 3 , 0 ; move ua - ul , ul )  | ( move 3 , ua ; move ua - ul , ul )  | ( move 2 + ul , ua ; move ua - ul , ul )  | ( move ua / 2 , ua ; move ua - ul , ul - ua )  | ( move 3 , 0 ; move ua - ul , ul ; v0 = 4 )  | ( move 3 , ua ; move ua - ul , ul ; move 0 , ul / ua )  | ( v0 = ua * ua ; move 3 , ua ; move ua - ul , ul )  
[1921] ( move 2 , ua ; move 2 , ua * ua )  | ( v0 = ua ; move 2 , v0 ; move 2 , v0 * v0 )  
[1922] ( move ua , 0 ; move 4 - ua , ul )  | ( move ua , ua ; move 4 - ua , ul )  | ( move ua , ua ; move 4 - ua , ua + ul )  | ( ( move ua , ua ; v0 = ul ) ; move 4 - ua , v0 )  
[1923] ( move ul , ul ; move ua + 2 , 2 )  | ( move ul , ul ; move ua , 2 ; move 2 , ua )  | ( move ul , ul ; move ua + 2 , 2 ; v0 = 0 )  | ( move ul , ul ; move ua + 2 , ua + 2 ; pen 4 + ul )  | ( move ul , ul ; ( move ua , 2 ; move ul + ul , ua ) )  
[1924] ( move 3 , ul ; move 0 - ua , ul )  | ( move 3 , ul ; ( move 0 - ua , ul - ua ; pen ul ) )  
[1925] ( move ua , 0 ; move 4 + ul , ul )  | ( move ua , ua ; move 3 + 2 , ul )  | ( move ua , ua ; move 4 + ul , ul )  | ( move ua , ua * 2 ; move 4 + ul , ul )  | ( move ua , ua ; move 2 , ul ; move 3 , 0 )  | ( move ua , ua ; move 4 + ul , ul ; pen ua )  | ( move 0 , ua ; move ua , 0 ; move 4 + ul , ul )  | ( move 0 , ua ; move ua , ua ; move 4 + ul , ul )  | ( move ua , 0 ; v0 = 4 + ul ; move v0 , ul )  | ( ( move ua , 0 ; move 3 , ul ) ; move 2 , 0 - ua )  | ( move ua , ua ; move 3 + 2 , ul ; v0 = ua - 2 )  | ( ( move ua , ua * 4 ; move 4 , ul ; pen ul ) ; move ul , ua )  
[1926] ( move ul - ua , 0 ; move 3 , ul )  | ( move ul - ua , ua ; move 3 , ul )  | ( move ul - ua , 0 ; move 3 , ul ; v0 = ul )  | ( move ul - ua , 0 ; ( move 3 , ul ; pen ul ) )  | ( move ul - ua , ua ; move 4 - ul , ul ; pen ul )  
[1927] ( move 4 + ul , 0 ; move ua , ul )  | ( move 4 + ul , ua ; move ua , ul )  | ( move 4 , ua ; move ul , ua ; move ua , ul )  | ( move ul , ua ; move 4 , ua ; move ua , ul )  | ( move 3 , 0 ; move ul + ul , ua ; move ua , ul )  | ( move ul , 0 ; ( move 3 + ul , ua ; move ua , ul ) )  | ( move 4 + ul , ua * 4 ; v0 = ul ; move ua , v0 )  | ( ( move 4 + ul , ua ; move ua , ul ) ; move 0 , ul - 2 )  | ( ( move 3 + 2 , ua ; move ua , ul ) ; pen ul ; pen ua * 4 )  
[1928] ( move 3 , 0 ; move ul - ua , ul )  | ( move 3 , ua ; move ul - ua , ul )  | ( move 2 + ul , ua ; move ul - ua , ul )  | ( move 3 , 0 ; move ul - ua , ul ; pen 2 )  | ( move 3 , ua ; move ul - ua , ul ; v0 = ua )  | ( move 3 , ua ; move ul - ua , 3 - 2 ; v0 = 3 )  | ( move 3 , 0 ; move 0 , ul ; move ul - ua , ua + ua )  
[1929] ( move 0 - ua , ul ; move ul , 3 )  | ( move 0 - ua , ul ; move ua / 4 , 3 )  
[1930] ( move ua , 0 ; move ua / 2 , ul )  | ( move ua , ua ; move ua / 2 , ul )  | ( move ua , ua ; move 3 , ul ; move ul , 2 )  
[1931] ( move ua - ul , 2 ; move ua , 2 )  | ( move ua - ul , ul + ul ; move ua , 2 )  
[1932] ( move 2 - ua , ul ; move ua , 2 )  | ( move 2 - ua , ul ; move ua , ul + ul )  | ( move 2 - ua , ul ; move ua , 2 - ua ; pen ua )  | ( move 2 - ua , ul ; move ua , 2 ; v0 = ul - 3 )  | ( move 2 - ua , ul ; move ua , 2 ; v0 = ul - ua )  
[1933] ( move ua + 2 , ua ; move ul , 4 )  | ( move ua + 2 , 0 ; move ul , ua - 2 )  | ( ( move 2 , 0 ; move ua , 0 ) ; move ul , 4 )  | ( move ua + 2 , ua ; move ul , 4 ; v0 = 2 + ul )  
[1934] ( move ul , 3 ; move ua + 2 , ul )  | ( move ul , 3 ; move ua , ul ; move 2 , ua )  | ( move ul , 3 ; move ua + 2 , ul ; move ul + ul , 3 )  | ( move ul , 2 + ul ; move ua - 2 , ua + ul ; move 4 , ua )  
[1935] ( move ul , ua - 3 ; move ua , 2 )  | ( move ul , ul - 4 ; move ua , 2 )  | ( move ul , ul - 4 ; move ua , 2 - ua )  | ( move 2 - ul , ua - 3 ; move ua , 2 ; v0 = ul )  | ( move ul , 0 - 3 ; v0 = ul + ul ; move ua , v0 - ua )  
[1936] ( move ua - ul , 2 ; move ua , 3 )  | ( move ua - ul , 3 - ul ; move ua , 3 )  | ( move ua - ul , ul + ul ; move ua , 3 )  
[1937] ( move 2 , ua - ul ; move 2 , ul )  | ( move 3 - ul , ua - ul ; move 2 , ua + ul )  | ( move ul + ul , ua - ul ; move 3 - ul , ul )  | ( move 2 , ul - 2 ; move 2 , ua + ul ; v0 = 2 )  
[1938] ( move ua , ua - 3 ; move ul , 2 )  | ( move ua , ul - 4 ; move ul , 2 )  | ( move ua , 0 - 3 ; move ul , 3 - ul )  
[1939] ( move 3 - ua , ua ; move 2 , ul )  | ( move 3 - ua , ua * 2 ; move ul + ul , ul )  
[1940] ( move ua , ua ; move 2 , ua - 4 )  | ( ( move ua , ua ; v0 = 0 ) ; move 2 , v0 - 4 )  | ( move ua , ua ; v0 = ua + ua ; move 2 , v0 - 4 )  
[1941] ( move 4 , ua ; move ua , ua - 2 )  | ( move 3 + ul , 0 ; move ua , ul - 3 )  | ( move 4 , ua ; move ua , 0 - 2 ; pen 3 )  | ( move 4 , ua ; ( move ua , ul - 3 ; v0 = 3 ; pen 3 ) )  
[1942] ( move ul , ul ; move 2 - ua , 2 )  | ( move ua - 2 , 3 ; move ul , ul )  | ( move ul , ua + ul ; move 2 - ua , 2 )  | ( move ul , ul ; ( v0 = 0 ; move 2 - ua , 2 ) )  | ( move ul , ul ; v0 = 2 - ua ; move v0 , v0 )  | ( v0 = 4 - 2 ; move ul , ul ; move v0 - ua , v0 )  
[1943] ( move ul , 2 ; move ua - 2 , ul )  | ( move 2 - ua , 3 ; move ul , ul + ul )  | ( move ul , 3 - ul ; move ua - 2 , ul )  | ( move 2 - ua , ua + 3 ; move ul , ua + 2 )  
[1944] ( move ul , 0 - ul ; move ua , 4 )  | ( move ul , ua - ul ; move ua , 4 )  | ( move ul , 3 - 4 ; move ua , ua + 4 )  | ( move ul , ua - ul ; move ua , 4 - ua )  | ( move ul , ua - ul ; move ua , 4 ; v0 = 4 - ul )  
[1945] ( move ul - ua , 0 ; move ul , 4 )  | ( move ul - ua , ua ; move ul , 4 )  | ( move ul - ua , ua ; move ul , ua + 4 )  | ( move ul - ua , 0 ; v0 = 3 + ul ; move ul , 4 )  | ( move ul - ua , ua ; ( v0 = 4 ; move ul , v0 ) )  | ( ( v0 = ul ; move v0 - ua , 0 ) ; move v0 , 4 )  | ( move ul - ua , ua + ua ; move 4 - 3 , 4 ; v0 = ua )  | ( move ul - ua , ua ; ( move ul , 4 ; v0 = ul - 3 ) )  
[1946] ( move ul , 0 ; move ua , 3 / ua )  | ( move ul , ua ; move ua , 2 / 4 )  | ( move ul , ua * 2 ; move ua , ul / 2 )  
[1947] ( move ua , ul ; move ua + 3 , 3 )  | ( move ua - ul , ul ; move ua + 3 , 3 )  
[1948] ( move ua , 3 ; move ua , ua - 3 )  | ( move ua , ua / 2 ; pen ul ; move ua , 3 )  | ( move ua , 3 - ua ; move ua , ul - 4 ; v0 = ua + ua )  | ( ( move ua , 3 ; move ua , ua - 3 ) ; move 0 , 4 ; pen ul )  
[1949] ( move ua , 0 - ul ; move 4 , ul )  | ( move ua , ul - 2 ; move 4 , ul )  | ( move ua , ua - ul ; move 4 , ul )  | ( move ua , ul - 2 ; move 4 , ul - ua )  | ( move ua , ul - 2 ; move 4 , ul ; pen 3 )  
[1950] ( move ua , 0 ; move ul / 2 , ul )  | ( move ua , ua ; move 3 / ua , ul )  | ( move ua , ua ; move ul / 3 , ul )  | ( move ua , ua ; move 2 / ua , ul + ul )  | ( move ua , 0 ; pen ul ; move ul / 2 , ul )  | ( move ua , ua * 4 ; pen ul ; move 3 / ua , ul )  | ( v0 = ul ; move ua , ua ; move v0 / 2 , ul )  
[1951] ( move ul , 0 ; move 4 , ua * ua )  | ( move ul , ua ; move 4 , ua * ua )  | ( move ul , ua * 3 ; move 4 , ua * ua ; v0 = 3 )  
[1952] ( move ua + ul , ul ; move 2 , 3 )  | ( move ua + ul , ul ; move 4 / 2 , 3 )  | ( move ua + ul , ua + ul ; move 2 , 3 )  | ( move ua + ul , ul ; move ul + ul , 3 )  | ( move ua + ul , ul - ua ; move 2 , ua + 3 )  | ( move ua + ul , ul ; move ul + ul , 4 - ul )  | ( move ua + ul , ul ; move 2 , 3 ; v0 = ua )  | ( move ua , ul ; move ul , ua ; move 4 - 2 , 4 - ul )  | ( move ua , ul ; move ul , 0 ; move ul + ul , 2 + ul )  | ( move ua + ul , ul ; v0 = 3 ; move v0 - ul , v0 )  
[1953] ( move 3 , ua ; move ua + 3 , ul )  | ( move 4 - ul , 0 ; move ua + 3 , ul )  | ( move 3 , 0 ; move ua , ul ; move 3 , ua )  | ( move 3 , 0 ; move ua , ul ; move 3 , ua * 4 )  | ( move 2 + ul , 0 ; move 3 , ul ; move ua , ua )  | ( move 3 , ua ; move ua + 3 , 2 - ul ; pen ua )  | ( v0 = ua ; move 3 , v0 ; move 3 + v0 , v0 + ul )  
[1954] ( move ua , 2 ; move 3 , ua - ul )  | ( move ua , 2 ; move 3 , ua - ul ; v0 = 2 )  
[1955] ( move 2 - ua , ul ; move ua , 3 )  | ( move 2 - ua , ul ; move ua , 3 ; pen ua )  | ( move 2 - ua , ul ; move 0 , 2 ; move ua , ul )  
[1956] ( move ua - ul , 0 ; move ul , 4 )  | ( move 4 + ul , 0 ; move ul , ua - 2 )  | ( move 4 + ul , ua ; move ul , ul - 3 )  
[1957] ( move ua + 3 , 2 ; move ul , ul )  | ( move ua + 3 , 3 - ul ; move ul , ul )  | ( pen ul ; move ua + 3 , 2 ; move ul , ul )  | ( move ua + 3 , 2 ; move ul , ul ; v0 = ua + ul )  
[1958] ( move ua + 2 , 3 ; move ul , ul )  | ( move ua , 3 ; move 2 , 0 ; move ul , ul )  | ( move ul + ul , 3 ; move ua , 0 ; move ul , ul )  | ( move 2 + ul , 3 ; move 4 + ul , ua ; move ul , ul )  
[1959] ( move ua , ua ; move ul - 2 , 3 )  | ( move ua + ul , ua ; move ul , ul - 4 )  | ( move 3 * 2 , ua ; move ul - 2 , 3 ; move ul , ua )  
[1960] ( move ua , ua * ua ; move 3 , 2 )  | ( move ua , ua * ua ; move 3 , ua + 2 )  
[1961] ( move ua + 2 , ul ; move ua , 4 )  | ( move ua + 2 , ul ; move ua , 3 + ul )  | ( move 2 , ul ; move ua , ua ; move ua , 4 )  | ( move 0 , ul ; move ua + 2 , 0 ; move ua , 4 )  | ( move ua + 2 , ul ; move ua , 3 + ul ; v0 = ul )  
[1962] ( move 4 , 0 ; move ul - ua , ul )  | ( move 4 , ua ; move ul - ua , ul ; pen ul )  
[1963] ( move ua - ul , 2 ; move ul , 2 )  | ( move ul , ul ; move ul - ua , ul )  | ( move ua - ul , ul + ul ; move ul , 2 )  | ( move ul , ul ; move ul - ua , ul ; pen 4 )  
[1964] ( move ul , ul ; move ua , 3 + 2 )  | ( move ul , ul ; move ua , 4 + ul )  | ( move 2 - ul , ul ; move ua , 4 + ul )  | ( move ul , ul ; move 0 , ul + ul ; move ua , 3 )  | ( move ul , ul ; move ul / ua , 2 ; move ua , 3 )  | ( move ul , ul ; move ua , 4 + ul ; v0 = ua )  | ( move ul , ul ; move ua , 4 + ul ; v0 = ul )  | ( move ul , ul ; v0 = ul ; move ua , 4 + v0 )  | ( ( v0 = ul ; move ul , v0 ) ; move ua , 4 + v0 )  | ( ( move ul , ul ; move ua , 4 + ul ) ; move 0 , 2 * 2 )  
[1965] ( move ul - ua , 0 ; move 4 , ul )  | ( move ul - ua , 0 ; move 4 , ul - ua )  | ( move ul - ua , ua * 4 ; move 4 , ul )  | ( ( move ul - ua , 0 ; move 0 , ul ) ; move 4 , 0 )  
[1966] ( move ua , 3 ; move ua + ul , 3 )  
[1967] ( move ua , 0 ; move ul - 4 , ul )  | ( move ua , ua ; move ul - 4 , ul )  | ( move ua , 0 ; move 0 - 3 , ul - ua )  | ( move ua , ua * 3 ; move ul - 4 , ua + ul )  | ( move ua , ua ; v0 = 0 - 3 ; move v0 , ul )  | ( v0 = ul ; ( move ua , ua ; move v0 - 4 , ul ) )  
[1968] ( move ua , 4 + ul ; move ua , 2 )  | ( move ua , 3 + 2 ; move ua , ul + ul )  | ( move ua , 4 + ul ; move ua , 3 - ul )  | ( move ul / ua , 3 + ul ; move ua , ul ; move ua , 2 )  
[1969] ( move 2 , ua ; move ua , 2 / ua )  | ( move 2 , 0 ; v0 = ua ; move ua , 2 / v0 )  
[1970] ( move ua , 3 ; move 2 , ua - ul )  
[1971] ( move ul , 2 ; move ua - ul , 2 )  | ( move ul , 3 - ul ; move ua - ul , 2 )  | ( move ul , ul + ul ; move ua - ul , 2 )  | ( move ul , 2 ; ( move ua - ul , 2 ; move ul / 4 , ua ) )  
[1972] ( move ua , 2 ; move ua + ul , 4 )  | ( move ua , 4 / 2 ; move ua + ul , 4 )  | ( move ua , 2 ; move ua , ua + 4 ; move ul , 0 )  
[1973] ( move 2 , ul ; move 2 - ua , ul )  | ( move 2 , ul - ua ; move 2 - ua , ul )  | ( move ua / 3 , ul ; move 2 - ua , ul )  | ( move ul + ul , ul ; move 2 - ua , ul - ua )  
[1974] ( move ua , ua - 4 ; move ua , 2 )  
[1975] ( move ua , ul ; move ul , 3 + 2 )  | ( move ua , ul ; move ul , 3 - 4 )  | ( move ua , ul ; move ul , 0 - ul )  | ( move ua , ul ; move ul , ul - 2 )  | ( move ua , ul ; move ul , 4 + ul )  | ( move ua , ul ; move ul , ua - ul )  | ( move ua , ul ; move 4 - 3 , ua - ul )  | ( move ua , ua + ul ; move ul , 4 + ul )  | ( move ua , ul ; pen ul ; move ul , 3 + 2 )  | ( move ul , ua / 2 ; move ua , ul ; pen 3 * 2 )  | ( move ua , ul ; move ul , 2 - 3 ; pen ua + ul )  | ( move ua , ul ; v0 = ua - ul ; move ul , v0 )  | ( move 0 , ua ; move ua , ua + ul ; move ul , ua - ul )  | ( move ua , 2 - ul ; v0 = ua - ul ; move ul , v0 )  | ( move ua , ua + ul ; move ul , ua - ul ; v0 = 2 - ua )  
[1976] ( move ua , 3 ; move ul , ua - 2 )  | ( move ua , 3 ; move ul , 2 - 4 ; v0 = ul - ua )  
[1977] ( move ua , ul ; move 3 - ua , 2 )  
[1978] ( move ul / 2 , 0 ; move ua , ul )  | ( move 3 / ua , 0 ; move ua , ul )  | ( move 2 / 4 , ua ; move ua , ul )  | ( move ul / 2 , ua ; move ua , ul )  | ( move ul / 2 , 0 - ua ; move ua , ul )  | ( move ul / 2 , ua ; move ua , ul - ua ; pen 2 )  | ( move 3 / ua , ua ; v0 = ua ; move v0 , ul )  | ( move ul / 2 , 0 ; move ua , ul - ua ; v0 = ul )  | ( move ul / 2 , ua ; v0 = ul ; move ua * v0 , v0 )  
[1979] ( move 4 , 0 - ul ; move ua , ul )  | ( move 4 , ul - 2 ; move ua , ul )  | ( move 4 , ua - ul ; move ua , ul )  | ( move 4 , ul - 2 ; move ua , ua + ul )  | ( move 4 , 3 - 4 ; move ua , 4 - 3 ; pen 4 + ul )  
[1980] ( move ua + ul , 3 ; move 2 , ul )  | ( move ul , 3 ; move ua , ua ; move 2 , ua + ul )  
[1981] ( move 2 , ua ; move ua + 4 , ul )  | ( move ul , 0 ; move ul , 0 ; move ua + 4 , ul )  
[1982] ( move ua + 3 , ul ; move ul , 2 )  | ( move ua + 3 , ul ; move ul , 4 / 2 )  | ( move ua + 3 , ua + ul ; move ul , 2 )  | ( move ua + 3 , ul ; move ul , ul + ul )  | ( move ua + 3 , ul ; move ul , 2 ; pen ua )  
[1983] ( move ua + ul , ua ; move 2 , 4 )  | ( move ua + ul , ua ; move ul + ul , 4 )  | ( ( move ua , 0 ; move ul , ua ) ; move 2 , 4 )  | ( move ua + ul , ua ; move 2 , 3 + ul ; v0 = 4 )  
[1984] ( move 3 , 2 ; move ua , ua * ua )  | ( move 3 , ul + ul ; move ua , ua * ua ; pen 2 / 4 )  
[1985] ( move 4 , ul ; move 0 - ua , ul )  | ( move 3 + ul , ua + ul ; move 0 - ua , ul )  
[1986] ( move ua + ul , ul ; move 3 , 2 )  | ( move ua + ul , ul - ua ; move 3 , 2 )  | ( move ua + ul , ul - ua ; move 3 , 2 - ua )  | ( move ua + ul , ul - ua ; move 3 , ul + ul )  | ( move ul , ul ; move ua , ua ; move 3 , ua + 2 )  | ( move ua + ul , ul ; move 3 , 2 ; v0 = ua + 4 )  | ( move ua , ul ; ( move ul , ua ; move 3 , ul + ul ) )  | ( move ua + ul , ul ; move 3 , 3 - ul ; pen ul + ul )  | ( pen ul ; ( move ul , ul ; move ua , 0 ) ; move 3 , 3 - ul )  
[1987] ( move ul , ul ; move ua , 0 - 4 )  | ( move ul , ul ; move ua , ua - 4 )  | ( move 2 - ul , ul ; move ua , ua - 4 )  | ( move ul , ul ; move ua , 0 - 4 ; v0 = 4 + 3 )  
[1988] ( move ua , ua ; move 2 / ua , 2 )  | ( move ua , 0 ; move ul / 4 , ul )  | ( move ua , ua ; move 2 / ua , ul )  | ( move ua , ua ; move ul / 4 , ul )  | ( move ua , ua * 3 ; move ul / 3 , ul )  | ( move ua , 0 ; move 2 / ua , 2 ; move 0 , 0 )  | ( move ua , 0 ; move 0 , ul ; move 2 / ua , ua )  | ( move ua , 0 ; move 0 , ul ; move ul / 4 , ul )  | ( move ua , ua ; move 0 , ua ; move ul / 3 , ul )  | ( move ul / 4 , ua - 2 ; move ua , ua + 2 ; pen 3 )  
[1989] ( move ul - ua , ua ; move 2 , 3 )  | ( move ul - ua , 0 ; move ul + ul , 2 + ul )  | ( v0 = 2 ; move v0 - ua , ua ; move 3 , 3 )  | ( ( move ul - ua , 0 ; move 2 , 3 ) ; v0 = ua )  | ( move ua - 3 , ua * 2 ; move ul - ua , 0 ; move 2 , 3 )  
[1990] ( move ul - ua , 2 ; move 2 , ul )  | ( move ul - ua , 2 - ua ; move 2 , ul )  | ( move ul - ua , ul + ul ; move ua / 4 , ul ; pen 3 )  
[1991] ( move 2 , ua ; move ua + ul , 4 )  | ( move 3 , ua ; move ua + ul , 4 )  | ( move 4 / 2 , ua ; move ua + ul , 4 )  | ( move 4 , ua ; move ua + ul , 4 ; pen 3 )  | ( move 3 + ul , 0 ; move ua + ul , 2 * 2 )  | ( move ul + ul , 0 ; move ua + ul , ua + 4 )  | ( move 2 , ua * 3 ; move ua + ul , 4 ; pen 2 )  | ( move ul + ul , ua ; move ul , 4 ; move ua , ua )  | ( move 2 , ua ; v0 = ua ; move v0 + ul , 4 )  | ( move ul , 0 ; move ua / 2 , ua ; move ua + ul , 4 )  
[1992] ( move ua + 3 , ul ; move ua , 3 )  | ( move ua + 3 , ul ; move ua , 2 + ul )  | ( move ua + 3 , ul ; pen ul ; move ua , 3 )  | ( move ua + 3 , ul ; move ua , 3 ; pen ua + ul )  | ( move ua + 3 , ua + ul ; move ua , 2 + ul ; move ul , 0 )  
[1993] ( move ua , 2 ; move 3 , ua * ua )  
[1994] ( move ua , ul ; move ua + 2 , 4 )  | ( move ua , ul ; move ua + 2 , ua + 4 )  | ( move ua , ul ; move ua + 2 , 4 ; v0 = 4 )  | ( move ua , ul ; move ul , 4 ; move ua + ul , 0 )  | ( move ua , ul ; ( move ua , 4 ; move ul + ul , 0 ) ; pen ul )  
[1995] ( move 2 , ul ; move 2 , ua * ua )  | ( move 2 , ul ; move ul , 4 + 4 ; move ul , ua * 3 )  
[1996] ( move 3 , 2 ; move ua + ul , ul )  | ( move 3 , 3 - ul ; move ua + ul , ul )  | ( move 3 , 2 ; move ul , ul ; move ua , 0 )  | ( move 2 + ul , 2 - ua ; move ua + ul , ul )  | ( ( move 3 , 2 ; move ua , ul ) ; move ul , 0 )  | ( move 3 , 2 ; move ul , 2 - ul ; move ua , ua )  
[1997] ( move 4 + ul , ua ; move ua , 2 )  | ( move 4 + ul , ua ; move ua , 3 - ul )  | ( move 4 , ua ; move ul , 0 ; move ua , 2 )  | ( move 4 + ul , ua * 3 ; move ua , ua + 2 )  
[1998] ( move 0 , ua * ua ; move 4 , ul )  | ( v0 = ua * ua ; move 4 , ul + v0 )  | ( v0 = ul - ua ; move 4 , v0 * v0 )  | ( move 0 , ua + ul ; move 3 + ul , ua * ua ; pen 0 )  
[1999] ( move 2 , ul ; move ua - 2 , ul )  
[2000] ( move ua + ul , 2 ; move 3 , ul )  | ( move ua + ul , 3 - ul ; move 3 , ul )  | ( move ua + ul , 3 - ul ; pen ul ; move 3 , ul )  | ( ( move ua , 2 ; move ul , ua ) ; move 2 + ul , ul )  | ( move ul , 2 ; move ua , ua + ua ; move 2 + ul , ul )  | ( move ua + ul , 2 ; move 0 , 0 ; ( move 3 , ul ; pen ul ) )  
[2001] ( move 2 , 3 ; move ua , ua * ua )  | ( move 2 , 3 - ua ; move ua , ua * ua )  
[2002] ( move ua , 0 - 4 ; move ul , ul )  | ( move ua , 0 - 4 ; move ul , ul ; pen ul )  | ( move ua , ua - 4 ; v0 = ul ; move v0 , ul )  | ( move ua , ua - 4 ; v0 = ul ; move ul , v0 )  | ( ( move ul , 0 ; move ua , ua - 4 ) ; move ul , ul )  
[2003] ( move 2 - ua , 3 ; move ul , ul )  | ( move 2 - ua , ua + 3 ; move ul , ul )  | ( move 2 - ua , 3 - ua ; move ul , ul )  | ( move 2 - ua , 3 ; v0 = ul ; move ul , v0 )  | ( move 2 - ua , 3 ; ( move ul , ul ; v0 = ul + ul ) )  
[2004] ( move ul , 0 ; move 3 , ul / ua )  | ( move ul , ua ; move 3 , ul / ua )  | ( move ul , 0 ; move 3 , ul / ua ; pen 3 / 4 )  
[2005] ( move 4 , ua - ul ; move ua , 2 )  | ( move 4 , ua - ul ; move ua , ul + ul )  
[2006] ( move ua - 4 , 2 ; move ua , ul )  | ( move ua - 4 , 2 - ua ; move ua , ul ; move 0 , ul )  | ( ( move ul + ul , 2 ; move ul / 4 , ua ) ; move ua , ul )  
[2007] ( move ua , ul ; move 3 , ul - 2 )  | ( move ua , ul ; move 3 , ua - ul )  | ( move 3 , ua / 2 ; move ua , ua + ul )  | ( move ua , ul - ua ; move 3 , ua - ul )  | ( move 3 * 2 , ua + ul ; move 3 , ul - 2 )  | ( move 3 , ua / 2 ; move ua , ul ; v0 = ul )  | ( ( move ua , ul ; v0 = ul - 2 ) ; move 3 , v0 )  | ( move ul - 4 , 0 ; v0 = ul ; move 0 - ua , v0 + ua )  | ( move ua , ua + ul ; move 3 , ua - ul ; move ul / ua , ul )  
[2008] ( move ua + ul , 2 ; move 4 , ul )  | ( move ua + ul , 2 ; pen ul ; move 4 , ul )  | ( move ua + ul , 2 ; move 4 , ul ; v0 = 4 + 2 )  | ( move ua + ul , ul + ul ; move 4 , ul ; pen 4 - ul )  
[2009] ( move 2 , 4 + ul ; move ua , ul )  | ( move 0 , 2 ; move 2 , 3 ; move ua , ul )  | ( move ul + ul , 4 + ul ; move ua , ul )  | ( ( move 2 , 4 + ul ; move ua , ul ) ; v0 = 3 )  
[2010] ( move 4 + ul , ua ; move 2 , ul )  | ( move 3 + 2 , 0 ; move 4 / 2 , ul )  | ( move 4 + ul , ua ; move 3 - ul , ul )  | ( move 4 + ul , ua ; pen ul ; move 2 , ul )  | ( move 4 + ul , ua * 4 ; move ul + ul , ul )  | ( move 4 + ul , 0 ; move 2 , ul ; v0 = ua )  | ( move 4 + ul , ua ; move 2 , ul ; move 0 , ul )  | ( move 4 + ul , 0 ; move 0 , ul ; move ul + ul , 0 )  | ( move 3 + 2 , ua ; ( move ul , ul ; move ul , 0 ) )  | ( move 4 + ul , 0 ; v0 = ul + ul ; move v0 , ul )  
[2011] ( move ua + ul , 4 ; move 2 , ul )  | ( move ua + ul , 4 ; move ul + ul , ul )  
[2012] ( move ua + 4 , ul ; move ua , 3 )  | ( ( move ua + 4 , ul ; v0 = 3 ) ; move ua , v0 )  | ( v0 = 4 ; move v0 + ua , v0 / 4 ; move ua , 3 )  | ( move ua + 4 , ua + ul ; v0 = ua * ua ; move ua , 3 )  
[2013] ( move ua , ul / ua ; move 2 , 2 )  | ( move ul + ul , 0 - ul ; move ua , ul - 3 ; pen ua )  | ( move 2 , ua - ul ; ( v0 = ua - 2 ; move ua , v0 ) )  
[2014] ( move ul , ul ; move ua - 3 , 2 )  
[2015] ( move 4 , ua ; move ua + ul , 3 )  | ( move 4 , ua ; move ua + ul , 4 - ul )  
[2016] ( move ua , 2 / ua ; move ul , 2 )  | ( move ua , 2 / ua ; move ul , 2 - ua )  | ( move ua , 2 / ua ; pen ul ; move ul , 2 )  
[2017] ( move ua - ul , 3 ; move ul , 2 )  | ( move ul , 2 ; move ul - ua , ul )  | ( move ul , 2 ; v0 = ul ; move v0 - ua , ua + ul )  
[2018] ( move 3 , ua - ul ; move ul , 2 )  
[2019] ( move 2 , ul ; move ua + ul , 4 )  | ( move 2 , ul ; move ua , ua + 4 ; move ul , 0 )  | ( move ul , ul ; move ul , 0 ; move ua + ul , 4 )  | ( move ul + ul , ul ; move ua + ul , 4 ; move 0 , ua )  | ( move ul , ua + ul ; move ul , ua ; move ua + ul , 4 )  | ( move 2 , ul ; ( move ul , ua + 4 ; move ua , 0 ; pen 0 ) )  
[2020] ( move ul , 2 ; move 3 , ua - ul )  | ( move ul , ul + ul ; move 3 , ua - ul )  | ( ( move ul , 2 ; v0 = ua - ul ) ; move 3 , v0 )  
[2021] ( move 4 , 2 ; move ua , ua - ul )  | ( move 4 , ul + ul ; move ua , 3 - 4 )  
[2022] ( move 3 , ul ; move ua - ul , 2 )  | ( move 3 , ul ; move ua - ul , ul + ul )  | ( ( move 3 , ul ; v0 = ua ) ; move v0 - ul , ul + ul )  
[2023] ( move ul , ua ; move ua - 2 , 4 )  | ( move ul , ua + ua ; move ua - 3 , 4 ; move ul , ua )  
[2024] ( move ul , 3 ; move ua + 3 , ul )  | ( move ul , 3 ; ( move ua + ul , ul ; move 2 , ua ) )  
[2025] ( move ua , 3 ; move ua + ul , 4 )  | ( move ua , 3 ; move ua + ul , 3 + ul ; v0 = ua + ua )  
[2026] ( move 2 , ua - ul ; move ua , 4 )  | ( move ul , ua - ul ; move ul , 0 ; move ua , 4 )  
[2027] ( move ua + ul , 4 ; move ul , 2 )  | ( move ua + ul , 4 ; move ul , 4 - 2 )  | ( move ua + ul , 4 ; move ul , 3 - ul )  | ( ( move ua + ul , 4 ; pen ul ) ; move ul , 2 )  | ( move ua + ul , 4 ; pen ul ; move ul , ul + ul )  
[2028] ( move 4 , ua ; move ul - ua , 2 )  | ( ( move 4 , 0 ; move ul - ua , 2 ; pen ua * 4 ) ; pen ul )  
[2029] ( move ua - ul , 3 ; move 2 , ul )  | ( move ua - ul , 3 ; move 2 , ua + ul )  
[2030] ( move 3 , ul ; move ua , ul - 2 )  | ( move ua , ua / 2 ; move 3 , ul )  | ( move 3 , ul ; move ua , ua - ul )  | ( pen ul ; move ua , ua / 2 ; move 3 , ul )  | ( move 3 , ul ; move ua , ua - ul ; pen 4 )  | ( move 3 , ul ; ( move ua , 0 - ul ; pen 4 - 2 ) )  | ( move 2 + ul , ul ; move ua , ua - ul ; v0 = ul )  
[2031] ( move 2 , ul ; move ua , 4 + ul )  | ( move 2 , ul ; move 0 , 4 ; move ua , ua + ul )  | ( move 4 / 2 , ul ; move 0 , 3 ; move ua , ul + ul )  | ( ( move 2 , ul ; move ua , 4 + ul ) ; v0 = ua )  
[2032] ( move ul , ua * ua ; move 3 , 2 )  | ( move ul , ua * ua ; move 2 + ul , ul + ul )  
[2033] ( move ua , 2 ; move ul - 3 , ul )  | ( move ua , 2 ; v0 = ul ; move v0 - 3 , ul )  | ( ( move ua , 2 ; v0 = ul - 3 ) ; move v0 , ul )  
[2034] ( move ul , ua ; move ua , 4 + 3 )  | ( move ul , 3 * 2 ; move ua , ul )  | ( move ul , 3 + 3 ; move ua , ua + ul )  
[2035] ( move ua - 3 , ul ; move ul , 2 )  | ( move 3 / 4 , 0 ; move 3 - ua , ul )  
[2036] ( move ua , ua - 3 ; move ua , 4 )  | ( move ua , ul - 4 ; move ua , 3 + ul )  
[2037] ( move ua - 3 , ul ; move 2 , ul )  | ( move 3 , ua + ul ; move ul - 3 , 4 )  | ( move ua - 3 , ua + ul ; move 2 , ul )  | ( move ua - 3 , ul ; v0 = ua + ul ; move 2 , ul )  
[2038] ( move ua - 3 , 2 ; move ul , ul )  | ( move ul , ua + ua ; move 3 - ua , 2 )  | ( move 0 , ua ; move ul , ua ; move 3 - ua , 2 )  | ( move ul , 0 ; move 3 - ua , 2 ; move ul , ua )  
[2039] ( move 4 , ua ; move 2 - ua , ul )  
[2040] ( move 3 , ul ; move ua - 2 , ul )  | ( move ua / 2 , ul ; move ua - 2 , ul ; pen 2 )  
[2041] ( move ua / 2 , ul ; move ua , 2 )  | ( move ua - 3 , ul ; move ua , 2 ; v0 = 3 )  | ( move ua / 3 , ua + ul ; move ul , 0 ; move ua , 2 )  
[2042] ( move 3 , 2 ; move ul - ua , ul )  | ( move 4 - ul , 2 ; move ul - ua , ul )  
[2043] ( move 4 + ul , 2 ; move ua , ul )  | ( move 4 + ul , 2 ; move ua , ua + ul )  | ( move 2 , 2 ; ( move 3 , 0 ; move ua , ul ) )  | ( ( move 2 , 2 ; move 3 , 0 ) ; move ua , ul )  | ( move 4 + ul , 2 ; v0 = ul ; move ua , ul )  | ( move 4 + ul , ua + 2 ; move ua , ul ; pen ul / ua )  
[2044] ( move ul , ua ; move 2 - ua , 4 )  | ( move ul , ua * 2 ; move 2 - ua , 4 )  
[2045] ( move 3 , 2 ; move ul , ua - ul )  | ( move 0 - ul , ul ; move 0 - 3 , ul )  | ( move 2 + ul , 2 ; move ul , ua - ul ; pen 0 )  | ( ( v0 = 2 ; move 3 , v0 ) ; move ul , 0 - ul )  | ( move 3 , ul + ul ; ( pen ul ; move ul , ua - ul ) )  | ( move 2 + ul , 2 ; v0 = ul ; move v0 , ua - ul )  
[2046] ( move 2 , ua ; move ua , ul - 4 )  | ( move ua , ul / ua ; move 2 , 3 )  | ( move ul + ul , ua ; move ua , ua - 3 )  | ( move ua - 4 , 0 ; move ua , 0 - 3 ; pen 3 )  | ( v0 = 4 ; move v0 / 2 , 0 ; move ua , ul - v0 )  
[2047] ( move ul , ua - 4 ; move ua , 2 )  | ( move ul , ua - 4 ; move ua , 4 - 2 ; pen ul )  | ( ( v0 = 3 - 4 ; move v0 , v0 ) ; move ua , v0 )  
[2048] ( move ua + ul , ul ; move 2 , 4 )  | ( move ua + ul , ul ; move 2 , 2 + 2 )  | ( move ua + ul , ul ; move ul , 4 ; move ul , ua )  
[2049] ( move ua - ul , 4 ; move ua , 2 )  | ( move ua - ul , 2 + 2 ; move ua , 2 )  | ( move ua - ul , 4 ; move ua , 2 - ua )  | ( ( move ua - ul , 4 ; move 0 , 2 ) ; move ua , ua )  
[2050] ( move 3 , 3 ; move ua , ua * ua )  | ( move 3 , 3 - ua ; move ua , ua * ua )  | ( ( move 3 , 3 ; pen ul ; move ua , ua * ua ) ; v0 = ul )  
[2051] ( move 3 , 3 ; move ua + ul , ul )  | ( move 3 , ua + 3 ; move ua + ul , ul )  | ( move 3 , 3 ; move ua + ul , ul ; move 0 , ua )  | ( move 3 , 2 + ul ; move ua + ul , ul ; v0 = 0 )  | ( move ul , 3 ; move 3 - ul , 0 ; move ua + ul , ul )  
[2052] ( move 2 , ua - 4 ; move ua , ul )  | ( move ua / 3 , ua - 4 ; ( move ua , ul ; pen ua ) )  
[2053] ( move 3 , ua - 3 ; move ua , ul )  | ( move ul , 0 - 3 ; move 2 , 0 ; move ua , ul )  
[2054] ( move ul , ul ; move ua , 4 + 2 )  | ( move ul , ul ; move ua , 3 * 2 )  | ( move ul , ul - ua ; move ua , 3 + 3 )  | ( move ul , ul - ua ; move ua , 4 + 2 )  | ( move ul , ul ; move ua , 4 + 2 ; pen ua )  | ( move 2 - ul , ul ; move 0 , 4 + ul ; move ua , ul )  
[2055] ( move ul - ua , ul ; move 3 , 2 )  | ( move ul - ua , ul ; move 2 + ul , 2 )  
[2056] ( move 2 - ua , ua ; move ul , 4 )  
[2057] ( move ul , 2 ; move 3 - ua , ul )  | ( move ul , 4 - 2 ; move 3 - ua , ul )  | ( move ul , 2 ; v0 = 3 - ua ; move v0 , ul )  
[2058] ( move ua , 4 ; move ua - ul , 2 )  
[2059] ( move 2 , ua * ua ; move 3 , ul )  
[2060] ( move ua - 4 , ul ; move ua , 2 )  
[2061] ( move ua , 2 ; move ul , 2 / ua )  | ( move ua , 2 ; move ul , ul / 3 )  | ( move ua , 2 ; move ul , ul / 4 )  | ( v0 = 2 / ua ; move ua , 2 ; move ul , v0 )  
[2062] ( move ul , 4 ; move ua + 2 , ul )  | ( move ul , 4 ; move ua + 2 , ua + ul )  | ( move ul , 4 ; move ua + 2 , ul ; pen ul )  | ( move ul , 3 + ul ; move ua + 2 , ul - ua )  | ( move 2 - ul , 4 ; move ua + 2 , ul ; pen ua )  | ( move ul , 4 ; move ua / 3 , ul ; move ua , ua )  | ( move ul , 3 + ul ; move 0 , ul ; move ua + 2 , ua )  | ( move ul , 4 ; ( pen ul ; pen ul ) ; move 4 * 2 , ul )  
[2063] ( move 3 , ua ; move ua , 2 / ua )  | ( move 3 , ua ; move ua , ul / 3 )  | ( v0 = ua ; move 3 , 0 ; move v0 , 2 / ua )  | ( ( move 3 , 0 ; v0 = ua ) ; move ua , 2 / v0 )  
[2064] ( move ua , ul ; move ua , 2 - 4 )  | ( move ua , ul ; move ua , ul - 3 )  | ( move ua , ul ; ( pen ul ; move ua , 0 - 2 ) )  | ( ( move ua , ul ; move ua , ul - 3 ) ; pen ul )  | ( move ua , ul ; v0 = ul ; move v0 * ua , ua - 2 )  
[2065] ( move ua + ul , 2 ; move ul , 4 )  | ( move ua + ul , 2 - ua ; move 2 , 4 )  | ( move ua + ul , 2 ; move ul , 4 ; pen 3 )  | ( move ua + ul , 2 ; move ul , 4 ; pen ul )  | ( move ua + ul , ul + ul ; move ul , ua + 4 )  | ( move ua + ul , 2 ; pen ul ; move ul + ul , 4 )  | ( move ua + ul , 2 ; move 2 , 3 + ul ; v0 = 0 )  | ( move ua + ul , 2 ; move ul , 3 + ul ; move 0 , 2 )  | ( move ua + ul , 2 ; ( move ul , 4 ; v0 = ul ) )  
[2066] ( move 4 - ua , 2 ; move ua , ul )  | ( move 4 - ua , 2 ; move 0 , ua ; move ua , ul )  
[2067] ( move ul , 3 ; move ua - 2 , ul )  | ( move ul , 3 ; ( v0 = ul ; move ua - 2 , v0 ) )  
[2068] ( move ua , ua - ul ; move 4 , 2 )  | ( move ua , ua - ul ; move 3 , 2 ; move ul , ua * 3 )  
[2069] ( move ua , ul - 3 ; move ul , 2 )  | ( move ua , 0 - 2 ; move ul , 2 - ua )  | ( move 4 + 2 , ua - 2 ; v0 = ul ; move ul , 2 )  | ( move ua , ua - 2 ; v0 = ul ; move v0 , v0 + v0 )  
[2070] ( move 2 , ul ; move ua , ul - 3 )  | ( move ul + ul , ua + ul ; move ua , ua - 2 )  | ( move 2 , ul ; ( move ua , ua - 2 ; pen 0 ) )  
[2071] ( move ul - ua , ua ; move 4 , 2 )  | ( move ul - ua , 0 ; v0 = ua + ul ; move 4 , 2 )  
[2072] ( move ul , 2 ; move ua , 4 + ul )  | ( move ul , ua + 2 ; move ua , 4 + ul )  
[2073] ( move ua , 0 ; move 4 / ua , ul )  | ( move ua , ua ; move 4 / ua , ul )  | ( move ua , ua * 4 ; move 2 / 3 , ul )  | ( move ua , ua ; move 2 / 3 , ul ; v0 = 2 - ua )  | ( ( move ua , ua ; v0 = 4 / ua ) ; move v0 , ul )  
[2074] ( move ua , 2 ; move 4 , ua * ua )  | ( move ua , ul + ul ; move 4 , ua * ua )  
[2075] ( move 3 , ua - ul ; move 2 , ul )  | ( ( move ul + ul , ua - ul ; move ul , 0 ) ; move 2 , ul )  | ( move ul + ul , ua - ul ; move ul , 0 ; move ul + ul , ul )  
[2076] ( move ua - ul , ua ; move 3 , 3 )  | ( move ua - ul , 0 ; v0 = 3 ; move v0 , v0 - ua )  
[2077] ( move ul , 2 ; move ua + ul , 4 )  | ( move ul , ul + ul ; move ua + ul , 4 )  | ( move ul , 2 ; move ua + ul , 4 ; pen 2 )  | ( move ul , 2 ; move ua + ul , 4 ; pen ul )  | ( move ul , 2 ; move ul , 2 * 2 ; move ua , ua )  | ( move ul , 2 ; move ul , 4 ; move ua , ua * 3 )  | ( move ul , ua + 2 ; move ul , 4 ; move ua , ua * 3 )  
[2078] ( move 4 , 2 ; move ua + ul , ul )  | ( move 3 + ul , 3 - ul ; move ua + ul , ul )  | ( move 4 , 4 - 2 ; move ua + ul , ul ; v0 = 4 )  | ( ( move 4 , 2 ; v0 = ua + ul ) ; move v0 , ul )  | ( move 4 , 2 ; ( move ua + ul , ul ; move 0 , 0 - ul ) )  
[2079] ( move ul , 2 / ua ; move ua , 2 )  
[2080] ( move 2 , ua ; move 4 + ul , ul )  | ( move 2 , ua ; move 4 + ul , ua + ul )  | ( move 2 , ua ; pen ul ; move 4 + ul , ul )  | ( move 2 , 0 ; move 3 + 2 , ua + ul ; move 0 , ul )  | ( move ul , ua ; move ul , ua ; move 3 + 2 , 2 - ul )  | ( move 2 , ua ; move ul , ul ; ( move 4 , ua ; v0 = ua ) )  
[2081] ( move ua , ua ; move ua , 4 * 2 )  
[2082] ( move ua , ul ; move 3 , ua - 3 )  | ( move ua , ul ; move 4 , ul - 4 )  | ( move ua , ua + ul ; move 4 , ul - 4 )  | ( move ua , ua + ul ; move 3 + ul , ul - 4 )  
[2083] ( move 2 , ua ; move ul - ua , 4 )  | ( move 2 , ua ; move ul - ua , 4 - ua )  | ( move ul , 0 ; move ul , ua * 3 ; move ul - ua , 2 + 2 )  
[2084] ( move 3 , ul - 2 ; move ua , ul )  | ( move 3 , ua - ul ; move ua , ul )  | ( move 4 - ul , 3 - 4 ; move ua , ul )  | ( move 2 + ul , ul - 2 ; move ua , ul )  | ( move ua , ua / 2 ; move 3 , ua - ul )  | ( move 4 - ul , ua - ul ; move ua , ul )  | ( move 3 , 3 - 4 ; pen ul ; move ua , ul )  | ( move 3 , ua - ul ; move ua , ul ; pen ul )  | ( move 3 , ua - ul ; move ua , ul ; v0 = ul )  | ( move 3 , ua - ul ; move ua , ul ; v0 = ul / ua )  
[2085] ( move ua , ua / 2 ; move 2 , ul )  | ( v0 = ua - ul ; move 2 , ul ; move ua , v0 )  | ( move ul + ul , ua + ul ; move ua , ul - 2 ; v0 = 0 )  
[2086] ( move 3 , ua ; move ua + 4 , ul )  | ( move 3 , ua ; move 0 , 0 ; move ua + 4 , ul )  | ( move 3 , ua ; move ua + 3 , ul ; move ul , 0 )  | ( move 3 , ua ; v0 = ua + 4 ; move v0 , ul )  | ( move 3 , 0 ; move ua + 4 , ul ; v0 = 2 + ul )  | ( move 3 , ua ; move ua + 4 , ul ; v0 = 3 / 4 )  
[2087] ( move ua , 2 ; move ua - 4 , ul )  | ( move ul , 0 ; move ua , 2 ; move ua - 4 , ul )  | ( pen ul ; ( move ua , 2 ; move ua - 4 , ul ) )  
[2088] ( move ua , 3 / ua ; move ua , 2 )  | ( move ua , ul / 2 ; move ua , 2 ; pen 0 )  
[2089] ( move ul - ua , 2 ; move 3 , ul )  | ( move ul - ua , 2 ; move 4 - ul , ua + ul )  
[2090] ( move 4 - ua , ul ; move ua , 2 )  | ( move ul , ua ; move 4 - ua , ul ; move ua , ua + 2 )  
[2091] ( move 4 , ul ; move ua + ul , 2 )  | ( pen ul ; move 4 , ul ; move ua + ul , 2 )  | ( move 4 , ul ; v0 = ua + ul ; move v0 , 2 )  
[2092] ( move ul , ul ; move 3 + 2 , ul )  | ( move ul , ul ; move 4 + ul , ul )  | ( move ul , ul ; move 3 + 2 , 2 - ul )  | ( move ul , ul ; move 3 + 2 , ul - ua )  | ( move ul , ul ; move 4 + ul , ua + ul )  | ( move ul , ul - ua ; move 4 + ul , ul )  | ( move ul , ul ; move 4 + ul , ul ; pen 0 )  | ( move ul , ul ; ( move 2 , ul ; move 3 , ua ) )  | ( move ul , ul ; move 2 + 2 , ul ; move ul , ua )  | ( move ul , ul ; move 4 , ua + ul ; move ul , 0 )  | ( move ul , ul ; v0 = 4 + ul ; move v0 , ul )  | ( v0 = ul ; move v0 , ul ; move 4 + v0 , v0 )  | ( ( move ul , ua + ul ; move 4 + ul , ul ) ; pen ua )  | ( move ul , ua + ul ; v0 = 3 ; move 2 + v0 , ul )  | ( move ul , ul ; move 3 + 2 , ul ; ( pen ul ; pen ua ) )  | ( move ul , ul ; ( move 4 + ul , ul ; v0 = ua * ua ) )  | ( move ul , ua + ul ; ( move 4 + ul , ul ; pen 4 - ua ) )  
[2093] ( move ul - 2 , ul ; move ua , 3 )  | ( move ul - 2 , ul ; move 0 , ul ; move ua , 2 )  | ( move 0 - ul , ul ; move ua - ul , 3 ; move 2 - ul , ua )  
[2094] ( move ua + ul , ul ; move 4 , 2 )  | ( move ua + ul , ua + ul ; move 4 , 3 - ul )  | ( move ua , ul ; ( move ul , 0 ; move 4 , 2 ) )  | ( move ul , ul ; move ua , ua ; move 4 , ul + ul )  | ( v0 = 2 ; move ua + ul , ul ; move 4 , v0 )  | ( move ul , ul - ua ; ( move ua , 0 ; move 2 * 2 , 2 ) )  | ( ( move ua + ul , ul ; move 4 , ul + ul ) ; v0 = 0 )  | ( ( move ua , ul ; move ul , ua ) ; move 4 , 3 - ul ; pen ua )  
[2095] ( move ua - ul , ul ; move 3 , 2 )  
[2096] ( move ul , 4 + ul ; move ua , 2 )  | ( move ul , 4 + ul ; v0 = ua + 2 ; move ua , 2 )  | ( ( move ul , 3 + 2 ; pen ul ) ; move ua , ua + 2 )  | ( move ul , 3 + 2 ; ( v0 = ua ; move v0 , 2 ) )  | ( ( move ul , 4 + ul ; v0 = 2 ) ; move ua , v0 )  
[2097] ( move ua , ua ; move 2 , 3 / ua )  | ( move ua , ua + ua ; move 2 , 3 / ua )  | ( move 0 , ua ; move ua , ua ; move 2 , ul / 2 )  
[2098] ( move ua , ul ; move 4 + ul , 2 )  | ( move ua , ul ; move 4 + ul , ul + ul )  | ( move ua , ul ; move 3 + 2 , 2 ; pen ua - ul )  | ( move ua , ul ; move ul , ul + ul ; move 4 , 0 )  | ( move ua , ul ; move 0 , ua * 2 ; move 3 + 2 , 2 )  | ( ( move ua , ul ; move ul + ul , 2 ) ; move 3 , ua )  
[2099] ( move 2 , ul ; move ul - ua , 3 )  | ( move ua , 4 ; move ul , ul / 4 )  | ( move 0 , ua ; move 2 , ul ; move ul - ua , ua + 3 )  
[2100] ( move 4 , ua ; move 2 , ua * ua )  
[2101] ( move ua , ul ; move ul , 4 + 2 )  | ( move ua , ul ; move ul , 3 + 3 )  | ( move ua , ul - ua ; move ul , 4 + 2 )  | ( move ua + ul , ul ; pen 0 ; move ul , 4 )  | ( pen ul ; move ua , ul ; move ul , 3 * 2 )  
[2102] ( move ua , 2 ; move 4 + ul , ul )  | ( move ua , 2 ; move 4 - ul , ul ; move 2 , 0 )  
[2103] ( move 2 , 4 ; move ua + ul , ul )  | ( move ul + ul , 4 ; move ua + ul , ul )  | ( move 2 , 4 ; move ul , ul ; move ua , ua * 2 )  | ( ( pen ul ; move 2 , 4 ) ; move ua + ul , ul )  | ( move 2 , 2 + 2 ; v0 = ua + ul ; move v0 , v0 )  | ( move 2 , 4 ; move ul , ul ; ( move ua , ua ; pen ul ) )  
[2104] ( move ua , ua ; move ul , 4 + 3 )  | ( move ua , ua ; move ul , 4 / ua )  | ( move ua , ua ; pen ul ; move ul , 4 + 3 )  
[2105] ( move ua , 4 + 2 ; move ul , ul )  | ( move ua , 3 * 2 ; move ul , ul )  | ( move ua , 3 * 2 ; pen ul ; move ul , ul )  | ( move 0 , 3 + 2 ; move ua , ul ; move ul , ul )  | ( move ua , 3 * 2 ; pen 2 - ul ; move ul , ul )  | ( move ua , 3 + 3 ; v0 = ul ; move v0 , v0 )  | ( ( move ua , 3 + 3 ; move ul , 4 - 3 ) ; pen ua )  
[2106] ( move 2 - ua , ul ; move 3 , ul )  
[2107] ( move 4 , ul ; move 2 - ua , ul )  | ( move 4 , ul - ua ; move 2 - ua , ul ; pen 4 )  
[2108] ( move ua , 3 ; move 4 - ua , ul )  
[2109] ( move 2 , ul - 4 ; move ua , ul )  
[2110] ( move 3 / ua , ul ; move ua , 2 )  | ( move ul / 2 , ul ; move ua , 2 )  | ( move 3 / ua , ua + 2 ; move ua , ul )  | ( v0 = 2 ; move ul / v0 , ul ; move ua , v0 )  | ( move ul / 2 , ul + ul ; v0 = ua ; move v0 , ul )  
[2111] ( move ua , 3 ; move ul , 2 / ua )  | ( move ua , 3 ; move ul , 3 / ua )  | ( move ua , 3 ; move ul , ul / 4 )  | ( move ua , ua + 3 ; move ul , ul / 4 ; v0 = 4 )  | ( v0 = 0 ; move ul , v0 ; move v0 - ua , v0 + 3 )  
[2112] ( move ul , ul ; move ua + 3 , 4 )  | ( move ul , ul ; move 3 * 3 , 4 ; move 0 , ul )  | ( move ul , ul - ua ; move ul , 4 ; move ua + 2 , 0 )  
[2113] ( move ua + ul , ul ; move 4 , 3 )  | ( move 4 + 3 , ua + ul ; move 2 * 2 , 3 )  | ( move ua + ul , 2 - ul ; move 3 + ul , 3 )  | ( move 4 + 3 , ul ; move ua - 2 , 3 ; v0 = ua )  
[2114] ( move ul - 4 , ua ; move 2 , ul )  | ( move ul - 4 , ua ; move 2 , ul ; pen ua )  | ( move ul - 4 , ua ; move ul + ul , ul ; pen 3 )  | ( move ul - 4 , 0 ; move 2 , ua + ul ; v0 = 2 + ul )  
[2115] ( move 4 , ul ; move ul - ua , 2 )  
[2116] ( move ul , ua ; move ua - 3 , 4 )  
[2117] ( move 3 - ua , ul ; move 3 , ul )  
[2118] ( move ua - 3 , ul ; move ua , 4 )  | ( move ua - 3 , ul ; move ua , 4 ; pen 4 * 4 )  
[2119] ( move ua , ul ; move 3 , ua - 4 )  | ( move 3 , ul / ua ; move ua , 4 )  
[2120] ( move 2 , ua - ul ; move 4 , ul )  | ( move 2 , ua - ul ; move 4 , ul ; v0 = ul )  | ( v0 = ul ; move 2 , ua - v0 ; move 4 , v0 )  
[2121] ( move 4 + 2 , ul ; move ul , ul )  | ( move 4 + 2 , ul ; move 2 - ul , ul )  | ( move 3 * 2 , ul ; move ul , ua + ul )  | ( move 4 , ul ; move 2 , ua ; move ul , ul )  | ( move 4 + 2 , ul ; move ul , ul ; v0 = ua )  | ( move ul , ul ; move 4 + ul , ua ; move 0 - ul , ul - 3 )  
[2122] ( move ua , ua - ul ; move 4 , 3 )  | ( move ua , ua - ul ; move ua - 2 , 3 )  | ( move ua , ua - ul ; move 3 + ul , 3 )  
[2123] ( move ua + ul , ul ; move 3 , 4 )  | ( move ua + ul , ul ; move 4 - ul , 4 )  | ( move ua + ul , ua + ul ; move 2 + ul , 4 )  | ( move ua + ul , ul - ua ; move ua - 3 , 4 )  | ( move ul , ul ; move ua , ua ; move 3 , 3 + ul )  
[2124] ( move ul , 4 ; move ua - 2 , ul )  
[2125] ( move 2 , ul ; move 4 , ua * ua )  | ( ( move ul , ul ; move ul , ua ) ; move 4 , ua * ua )  
[2126] ( move ul - ua , ul ; move 4 , 2 )  
[2127] ( move ua , ul / 2 ; move 2 , ul )  | ( move ua , 3 / ua ; move 3 - ul , ul )  | ( ( move ua , 2 / 4 ; move 2 , ul ) ; v0 = 4 + ul )  
[2128] ( move ua - 4 , ul ; move 2 , ul )  
[2129] ( move ua , 3 ; move ua , ua / 3 )  | ( move ua , 3 ; move ua , ua / 3 ; move ul , 2 + ul )  
[2130] ( move 3 - ua , ul ; move ua , 4 )  
[2131] ( move 2 , ul ; move 4 - ua , ul )  | ( move 2 , ua + ul ; move 4 - ua , ul )  
[2132] ( move ua + ul , ua ; move 4 , 4 )  | ( move ua + ul , 0 ; move 2 + 2 , 4 )  | ( move ua + ul , 0 ; move 4 , 3 + ul )  | ( move ua + ul , ua ; move 4 , ua + 4 )  | ( move ua + ul , ua ; move 2 + 2 , 4 - ua )  | ( ( move 0 , 0 ; move ua + ul , ua ) ; move 4 , 4 )  | ( pen 2 / ua ; move ua + ul , ua ; move 4 , 4 - ua )  | ( move ua + ul , ua * 3 ; v0 = 4 ; move v0 , v0 )  
[2133] ( move 4 , 0 ; move ul / ua , ul )  | ( move 2 - ua , ua ; move ul / ua , ul )  | ( move 2 - ua , ua ; move 2 , 0 ; move ul , ul / ua )  
[2134] ( move 3 , ua ; move 4 , ua - ul )  | ( move 3 , ua ; move 4 , 0 - ul ; v0 = 4 )  | ( move 3 , ua ; move ul , 0 - ul ; move 3 , ua )  
[2135] ( move ua , ul / ua ; move 3 , 2 )  | ( move ua , ul / ua ; move 3 , ul + ul )  | ( ( pen ul ; move ua , ul / ua ) ; move 2 + ul , 2 )  
[2136] ( move 4 , 2 ; move ul , ua * ua )  | ( move 4 , 2 ; move ul , ua * ua ; v0 = ua )  
[2137] ( move 2 , ul ; move ul - ua , 4 )  | ( v0 = ul - ua ; move 2 , ul ; move v0 , 4 )  
[2138] ( move 3 , ul ; move ua + ul , 4 )  | ( move 3 , ul ; move ua , 4 ; move ul , 0 )  | ( move 3 , ul ; move ua + ul , 4 ; pen ua )  | ( move 3 , ul ; move ua + ul , ua + 4 ; pen 2 )  | ( move 2 + ul , ul ; move ua + ul , 3 + ul ; pen ul )  | ( move 3 , ul ; ( move ul , 4 ; move ua , ua ) ; pen 4 )  
[2139] ( move 4 , ua - ul ; move ul , 2 )  | ( move 3 + ul , 0 - ul ; move ul , 2 )  | ( move 4 , ua - ul ; move 3 - 4 , 0 - ul )  
[2140] ( move ua , 3 / ua ; move ua , 3 )  | ( move ua , 3 / ua ; move ua , 2 + ul )  | ( move ua , ul / 2 ; move ua , ua + 3 )  | ( ( move ua , 2 / 4 ; move 0 , 0 ) ; move ua , 3 )  | ( move 0 , ua ; ( move ua , ul / 3 ; move ua , ul - 4 ) )  
[2141] ( move ua , 4 + 3 ; move ul , ul )  | ( move ua , 4 + 3 ; ( pen ul ; move ul , ul ) )  | ( v0 = 4 + 3 ; move ua , v0 ; move ul , ul )  | ( move 0 , 3 ; move ua , 4 ; ( move ul , ul ; pen 4 ) )  | ( move ua , 4 + 3 ; v0 = ua + ul ; move ul , v0 )  
[2142] ( move ua , 2 ; move ul / 2 , ul )  | ( pen ul ; move ua , ua + 2 ; move ul / 2 , ua + ul )  
[2143] ( move 4 , ul ; move ua - 2 , ul )  | ( v0 = ua ; move 4 , ul ; move v0 - 2 , ul )  | ( move 3 + ul , ul ; move ua - 2 , ul ; pen ua + 4 )  
[2144] ( move ua , 4 + ul ; move 3 , ul )  | ( move ua , 4 + ul ; ( move 3 , ul ; v0 = ua ) )  | ( move ua , 4 + ul ; move 2 + ul , ul ; v0 = ul )  | ( move ua , 3 + 2 ; move ul , ul ; move ul + ul , ua )  
[2145] ( move ua , ul - 3 ; move 3 , ul )  | ( move ua , 0 - 2 ; move ua / 2 , ul )  | ( move ua , ul - 3 ; move 3 , ul ; v0 = ua )  
[2146] ( move ua - ul , ul ; move 4 , 2 )  | ( move ua - ul , ul ; move 4 , 4 - 2 ; pen ua + ua )  
[2147] ( move 4 + ul , ul ; move 2 , ul )  | ( move 4 + ul , ul ; move 2 , ul ; pen ua + 2 )  | ( move ul , ul ; move 4 , ua ; move 2 , ua + ul )  | ( move 4 + ul , ul ; move ul + ul , ul ; pen ua )  | ( pen ul ; move 4 + ul , ul ; move ul + ul , ul )  | ( move 4 + ul , ul ; v0 = 2 ; move v0 , ua + ul )  | ( v0 = ul ; move 4 + ul , ul ; move ul + v0 , v0 )  
[2148] ( move ul , 4 ; move ul - ua , 2 )  | ( move 4 / 3 , 4 ; move ul - ua , 2 )  
[2149] ( move 4 , ul ; move ua + ul , 3 )  | ( move 4 , 4 - 3 ; move ua + ul , 3 )  | ( move 3 + ul , ul ; move ua + ul , 3 )  | ( move 3 + ul , ul ; move ua + ul , ua + 3 )  | ( ( move 4 , ul ; move ua + ul , 3 ) ; pen ul )  
[2150] ( move 3 , ul ; move 3 , ua * ua )  | ( move 2 + ul , ul ; move 4 - ul , ua * ua )  
[2151] ( move ul , ua ; move ua , 2 / 3 )  
[2152] ( move 3 , ua - ul ; move ul , 3 )  | ( move ul - 4 , ua - ul ; move 2 , ua )  | ( move 2 - 3 , ua - ul ; move ua - 3 , 0 ; pen ua )  
[2153] ( move ua - ul , 4 ; move ul , 2 )  | ( move ul , 3 ; move ul - ua , ul )  | ( move ul , ua + 3 ; move ul - ua , ul )  | ( pen ul ; move ul , 3 ; move ul - ua , ul )  
[2154] ( move ua - 3 , 4 ; move ua , ul )  | ( move ua - 3 , ua + 4 ; move ua , ul )  | ( move ua - 3 , 4 ; move ua , ua + ul )  
[2155] ( move ul , 3 ; move 3 , ua * ua )  | ( move ul , 4 - ul ; move 3 , ua * ua )  
[2156] ( move ul - 3 , ul ; move ua , 3 )  | ( move 0 - 2 , ul ; move ua , 2 + ul )  | ( ( move ul - 3 , ul ; move ua , 3 ) ; v0 = ua )  
[2157] ( move ul , 3 ; move ua + 4 , ul )  | ( move ul , 3 ; move ua + 4 , ua + ul )  | ( move ul , 3 ; pen ul ; move ua + 4 , ul )  | ( move ul , 3 ; move ua + 4 , ul ; move 0 , ul )  
[2158] ( move ul , 0 ; move 4 , ul / ua )  | ( move ul , ua ; move 4 , ul / ua )  | ( move ul , ua ; move 0 , ul / ua ; move 4 , ua )  | ( move ul , ua ; move 4 , ul / ua ; v0 = ua )  | ( move ul , ua * 3 ; move 0 , 0 ; move 4 , ul / ua )  | ( move ul , 0 ; move 4 , ul / ua ; v0 = ul - ua )  | ( move 3 - 2 , ua ; move 3 + ul , ul / ua ; v0 = ul )  
[2159] ( move 2 , 3 ; move ua , ul / ua )  | ( move 2 , 4 - ul ; move ua , ul / ua )  | ( move 2 , 3 ; v0 = ul / ua ; move ua , v0 )  
[2160] ( move ua , ua ; move 3 / 2 , ul )  | ( move ua , ua ; v0 = 3 ; move v0 / 2 , ul )  
[2161] ( move ul , 3 ; move ua + ul , 4 )  | ( move ul , 3 ; move ua + ul , 4 ; v0 = 0 )  
[2162] ( move 4 , 3 ; move ua , ua - ul )  | ( move 3 + ul , 2 + ul ; move ua , ua - ul )  
[2163] ( move ul - 4 , ul ; move ua , 2 )  
[2164] ( move 4 , ul ; move 2 , ua * ua )  | ( v0 = ua * ua ; move 4 , ul ; move 2 , v0 )  
[2165] ( move ua , ua - ul ; move 3 , 4 )  | ( move ua , ua - ul ; move 2 + ul , 4 )  | ( move ua , ul - 2 ; move 3 , 4 ; pen 4 * 3 )  
[2166] ( move ul , 4 ; move ua - ul , 2 )  | ( move ul , 4 ; pen ul ; move ua - ul , 2 )  
[2167] ( move 3 , ua * ua ; move 3 , ul )  
[2168] ( move ua , 4 ; move ua , ua - 4 )  | ( move 0 , 0 ; move ua , ua / 2 ; move ua , 4 )  | ( move ua , 4 ; move 0 , ua - 2 ; move ua , ua - 2 )  
[2169] ( move ua - 3 , 3 ; move ul , ul )  
[2170] ( move ua , ua * ua ; move 4 , 3 )  
[2171] ( move 4 + ul , ul ; move ul , 2 )  | ( move 4 + ul , ul ; move ul , ua + 2 )  | ( move 4 + ul , ul ; move ul , ul + ul )  | ( ( move 4 + ul , ul ; v0 = ua ) ; move ul , 2 )  | ( move 4 + ul , ul ; ( move 0 , ul ; move ul , ul ) )  | ( move 3 + 2 , ul ; ( move ul , ul + ul ; v0 = 4 ) )  
[2172] ( move 3 , ul ; move ua - ul , 3 )  | ( move 3 , ul ; move 4 + ul , 2 + ul )  | ( move 3 , ua + ul ; move ua - ul , 3 )  | ( move 3 , ul ; move ua - ul , 3 ; pen ua )  | ( move 3 , ul ; move ua - ul , 3 ; pen ul )  
[2173] ( move ul , ua ; move ua , 3 * 3 )  
[2174] ( move 4 + ul , 2 ; move ul , ul )  | ( move 3 , 2 ; move 2 , ua ; move ul , ul )  | ( move 4 + ul , 2 ; pen ul ; move ul , ul )  | ( move 4 + ul , ul + ul ; move ul , 2 - ul )  
[2175] ( move 2 , ul ; move ua , 3 / ua )  | ( ( move 2 , ul ; v0 = ua ) ; move v0 , 3 / v0 )  
[2176] ( move ua , 2 ; move 3 , ul / ua )  | ( ( move ua , 2 ; v0 = ul ) ; move 3 , v0 / ua )  | ( ( move ua , 2 ; move 3 , ul / ua ) ; v0 = 4 + 2 )  
[2177] ( move ul , 3 ; move ua , 2 / ua )  | ( move ul - 2 , ua ; ( move ua , ul - 4 ; v0 = ua ) )  
[2178] ( move ua , 4 ; move ua + ul , 4 )  | ( move ua , 4 ; v0 = ua + ul ; move v0 , 4 * v0 )  
[2179] ( move 4 , ua * ua ; move ul , 2 )  
[2180] ( move ua , ua ; move ul - 3 , 4 )  | ( move ua , 0 ; move ua / 3 , 4 + 3 )  
[2181] ( move ul , ul ; move ua , 4 + 3 )  | ( move 0 - ul , 4 - ua ; move ua , 4 )  | ( move ul , ul ; move ua , 4 + 3 ; v0 = 0 )  | ( move ul - 2 , 4 ; move 0 , ua + 2 ; move ua , 2 )  
[2182] ( move ua , 4 ; move ua , ul - 3 )  
[2183] ( move ua , 2 ; move ul - 4 , ul )  | ( move ua , 2 ; move ul - 4 , ul - ua )  | ( move ua , 2 ; move 0 - 3 , ul ; v0 = 2 - ul )  
[2184] ( move 2 , 4 ; move ul - ua , ul )  | ( move ul + ul , 4 ; move ul - ua , ul )  
[2185] ( move 0 , ul ; move ua , ul / 4 )  | ( move 0 , ul / 4 ; move ua , ul )  | ( v0 = ua / 3 ; move ua , v0 * v0 )  | ( v0 = 3 / 4 ; move 0 , 0 ; move ua , 2 - v0 )  | ( move 0 , ul / 4 ; v0 = ua + ul ; move ua , ul )  
[2186] ( move ua , ul ; move 2 , ul / 2 )  | ( move ua , ul ; move 4 - 2 , 2 / 4 )  | ( move ua , ul ; pen ul ; move ul + ul , ul / 2 )  
[2187] ( move ul , ua - 2 ; move 4 , ul )  | ( move ul , 2 - 4 ; move 4 , ul ; v0 = ua )  | ( move ul , ul - 3 ; move ul , ul ; move 3 , 0 )  
[2188] ( move ua , ua ; move ua / 2 , 4 )  
[2189] ( move ua , ul ; move ua , 4 * 2 )  | ( move 0 , 3 - 4 ; move ua , ua + 2 ; move ua , 4 + 4 )  
[2190] ( move 3 , 3 ; move ua - ul , ul )  | ( pen ul / 4 ; move 3 , 3 ; move ua - ul , ua + ul )  | ( move 3 , ua + 3 ; v0 = 2 - ua ; move ua - ul , ul )  
[2191] ( move ua , 2 ; move ul , ul / 2 )  
[2192] ( move 2 , ua * ua ; move 4 , ul )  
[2193] ( move ua + ul , 4 ; move 3 , ul )  | ( move ua + ul , 4 ; move 3 , ua + ul )  | ( move ua + ul , ua + 4 ; move 3 , ul )  | ( move ua + ul , 4 ; move 3 , ul ; v0 = 2 )  | ( move ul , 4 ; ( move ua , ua * 4 ; move 2 + ul , ul ) )  
[2194] ( move 4 , ul ; move ua , ul - 2 )  | ( move 4 , ul ; move ua , ua - ul )  | ( move 3 + ul , ul ; move ua , ul - 2 )  | ( move 4 , ul ; move ua , ua - ul ; move 0 , ua )  | ( move 0 , ua ; move 4 , ul ; move ua , ua - ul )  | ( move 4 , ul ; v0 = ua - ul ; move ua , v0 )  | ( ( move 4 , ul ; move 0 , 0 - ul ) ; move ua , ua )  
[2195] ( move 2 - ua , 4 ; move ul , ul )  
[2196] ( move ua , ua - 4 ; move 3 , ul )  | ( move 0 , 0 - 4 ; move ua , ua ; move 3 , ul )  | ( move ua , 0 - 4 ; v0 = 2 ; move 2 + ul , ul )  
[2197] ( move ua , ul ; move ul , 2 - 4 )  | ( move ua , ul ; move 0 - ul , ul )  | ( move ua , ul ; move ul , ua - 2 )  | ( move ua , ul - ua ; move ul , ul - 3 )  | ( move 0 , 0 ; move ua , ul ; move ul , ul - 3 )  
[2198] ( move 2 , ul ; move 4 + ul , ul )  | ( move ul + ul , ul ; move 4 + ul , ul )  | ( v0 = 2 ; move v0 , ul ; move 3 + v0 , ul )  | ( move 2 , ul ; ( move 0 , 0 ; move 4 + ul , ul ) )  | ( move 2 , ua + ul ; move ul , ul - ua ; move 4 , 0 )  | ( move ul + ul , ul ; v0 = 4 + ul ; move v0 , ul )  | ( ( move 2 , ul ; move 4 + ul , ul ) ; v0 = 2 ; pen ul )  | ( move 2 , ul ; pen ul ; ( move ua / 3 , ul ; move 3 , ua ) )  
[2199] ( move ul , 2 ; move ua , ua / 3 )  | ( move ul , ua + 2 ; move ua , ua / 3 )  
[2200] ( move 3 , ua ; move ul - ua , 4 )  | ( move 4 - ul , ua ; move ul - ua , 3 + ul )  | ( move 3 , ua ; move ul - ua , 4 ; move ul , 0 )  
[2201] ( move 2 , ul ; move 2 , ul / ua )  | ( move 2 , ul ; move 4 - ua , ua - 3 )  | ( move ua / 3 , ul ; move 2 , ul / ua )  
[2202] ( move ul , ul ; move 4 + 2 , ul )  | ( move ul , ul ; move 3 + 3 , ul )  | ( move ul , ul ; move 3 * 2 , ul )  | ( move ul , ua + ul ; move 3 * 2 , ul )  | ( move ul , ul ; move 4 , ul ; move ul + ul , 0 )  | ( move ul , ul ; ( move 3 , ul ; move 3 , 0 ; move ul , 3 ) )  
[2203] ( move ul , ua ; move 3 , ua - 4 )  | ( ( move ul , 0 ; move ua / 2 , ua - 4 ) ; v0 = 3 )  
[2204] ( move ua , ul ; move 3 , 4 + ul )  | ( move ua , ul ; move 2 + ul , 4 + ul )  | ( move ua , ul - ua ; move 3 , 4 + ul )  | ( move ua , ul ; ( pen ul ; move 3 , 4 + ul ) ; pen ul )  
[2205] ( move ua , ua / 3 ; move ua , 3 )  
[2206] ( move 3 , ul ; move ua , 2 / ua )  
[2207] ( move ua , 2 - 4 ; move ul , ul )  | ( move ua , ul - 3 ; move ul , ul )  | ( pen ul ; move ua , ul - 3 ; move ul , ul )  | ( move ua , 0 - 2 ; move ul , ul ; move 0 , 2 )  | ( ( move ua , 2 - 4 ; v0 = 0 ) ; move ul , ul )  
[2208] ( move ul , 0 ; move ua , ul / 4 )  | ( move ul , ua ; move ua , ul / 4 )  | ( move ul , 0 ; move ua , ul / 4 ; pen ua )  | ( move ul , ua ; move ua , ul / 4 ; pen 3 )  | ( move ul , ua ; pen ul ; move ua , ul / 4 )  | ( move ul , ua ; move ua , ul / 4 ; v0 = 3 )  
[2209] ( move ul , ua ; move ua , 4 * 2 )  | ( move ul , ua ; move ua , 4 + 4 )  | ( ( pen ul ; move ul , 0 ) ; pen ul ; move ua , 4 * 2 )  
[2210] ( move 3 , ul ; move 3 - ua , ul )  | ( move 3 , ul ; move 3 - ua , ul ; v0 = 2 )  | ( move ul , ul ; move 2 , ua ; move 3 - ua , ul )  
[2211] ( move ua , 3 ; move 4 , ua - ul )  
[2212] ( move 3 , 4 ; move ua , ua * ua )  
[2213] ( move ul , 3 ; move ua , 4 + ul )  | ( move 4 - 3 , 3 ; move ua , 4 + ul ; pen 4 )  
[2214] ( move ul , ul ; move 4 + ul , 2 )  | ( move ul - ua , 3 ; move ul , ul )  | ( move ul , ul ; move 3 + 2 , 4 - 2 )  | ( move ul , ul - ua ; move 3 + 2 , 2 )  | ( move ul , ul ; move 4 + ul , ua + 2 )  | ( move ul , ul ; move ul , 2 ; move 4 , 0 )  | ( move ul - ua , 3 ; move 0 , ul ; move ul , 0 )  | ( move ul , ul ; ( move 3 + 2 , 2 ; move 0 , 3 ) )  | ( move ul , ul - ua ; move 2 , ul + ul ; move 3 , ua )  
[2215] ( move ua , ul ; move ul , 4 + 3 )  | ( move ua , ul ; move ul , 2 / 3 )  | ( move ua , ul ; move ul , 3 / ua )  | ( move ua , ul ; move 2 - ul , 3 / 4 )  | ( move ua , ul ; move 2 - ul , 4 / ua )  | ( pen ul ; move ua , ul ; move ul , 4 / ua )  | ( move ua , ul ; move ul , 4 / ua ; pen ul )  | ( v0 = 3 - ul ; move ua , ul ; move ul , v0 / 3 )  | ( ( move ua , ul - ua ; move ul , 4 + 3 ) ; v0 = 2 )  
[2216] ( move 3 , ul ; move ua - 3 , ul )  | ( v0 = 3 ; move v0 , ul ; move ua - v0 , ua + ul )  
[2217] ( move ua , ul ; move 4 + ul , 3 )  | ( move 3 + 3 , ua + ul ; move 4 + ul , 3 )  
[2218] ( move 3 , ul ; move ua , 4 + ul )  | ( move 3 , ua + ul ; move ua , 3 + 2 )  | ( move 3 , ua + ul ; move ua , 4 + ul )  | ( move 4 - ul , ul ; move ua , 4 + ul )  | ( move 3 , ul ; move ua , 4 + ul ; pen 4 )  | ( move 3 , ul ; move 0 , 4 ; move ua , ua + ul )  | ( move 3 , ul ; move ua , 4 + ul ; pen 0 - ua )  | ( move 3 , ul ; move ua , 3 + 2 ; pen ul - ua )  | ( move 3 , ul ; ( move 0 , 0 ; move ua , 4 + ul ) )  | ( move 4 - ul , ul ; ( move ua , 4 + ul ; v0 = ua ) )  
[2219] ( move 4 + 3 , ua ; move ul , ul )  | ( move ua + ul , 0 ; move ul , ul )  | ( move ua + ul , ua ; move ul , ul )  | ( move ua + ul , ua ; move ul , ua + ul )  | ( move ua , 0 ; move ul , 0 ; move ul , ul )  | ( move 3 , ua ; move 4 , ua ; move ul , ul )  | ( move ua , 0 ; move ul , ua ; move ul , ul )  | ( move ul , ua ; move ua , 0 ; move ul , ul )  | ( move ua + ul , ua ; move ul , ul ; pen 2 )  | ( move ua , 0 ; move 3 - 2 , ua ; move ul , ul )  | ( move ua , 0 ; move 4 - 3 , ua ; move ul , ul )  | ( move ua + ul , 0 ; ( move ul , ul ; pen ul ) )  | ( move ua + ul , ua ; v0 = ua ; move ul , ul )  | ( move ua + ul , ua ; move ul , ul ; v0 = ul )  | ( move ua , ua ; ( move ul , ua ; move ul , ul ) )  | ( ( move ua + ul , ua ; pen ul ) ; move ul , ul )  | ( move ul , ua ; move ua , ua ; move ul , ua + ul )  | ( move ua + ul , ua ; v0 = ul ; move v0 , v0 )  | ( ( move 0 , 0 ; move ua + ul , ua ) ; move ul , ul )  | ( move ua + ul , 0 ; move ul , ul ; v0 = 2 - ul )  | ( move ua + ul , ua ; move ul , 3 - 2 ; v0 = ul )  | ( move 4 + 3 , ua ; v0 = ul - ua ; move ul , ul )  | ( v0 = ul ; move v0 + ua , ua ; move v0 , v0 )  | ( ( move ul , ua ; move ua , ua ; move ul , ul ) ; pen 0 )  | ( ( move ul , ua ; move ua , ua ; move ul , ul ) ; pen ua )  
[2220] ( move ua - ul , 3 ; move 3 , ul )  | ( move ua - ul , 3 ; move ua / 2 , ul - ua )  
[2221] ( move ul , 2 / ua ; move ua , 4 )  | ( move ul , ul / 3 ; move ua , 4 ; pen 0 )  | ( ( move ul , ul / 3 ; v0 = 3 ) ; move 4 + 2 , 4 )  
[2222] ( move 4 , ul ; move 3 - ua , ul )  | ( move 4 , ul ; move 3 - ua , ua + ul )  | ( move 2 * 2 , ua + ul ; move 3 - ua , ua + ul )  
[2223] ( move ua , 2 / ua ; move 4 , ul )  | ( move ua , ul / 3 ; move 4 , ul )  
[2224] ( move ua , 3 * 3 ; move ul , ul )  | ( move 4 + 2 , 3 * 3 ; move ul , 3 / 4 )  
[2225] ( move ul , ul / 2 ; move ua , 3 )  | ( move ul , 2 / 4 ; move ua , 2 + ul )  | ( move ul / ua , ul / 2 ; move ul , ua ; move ua , 3 )  
[2226] ( move 2 , ul ; move ul - 4 , ul )  | ( move ul , ul - ua ; move ul , ua ; move ul - 4 , ul )  | ( v0 = ul ; move 2 , 2 - v0 ; move v0 - 4 , ul )  
[2227] ( move ua - 4 , ua ; move 4 , ul )  | ( move ua - 4 , ua * 2 ; move 4 , ul )  | ( v0 = 4 ; move ua - v0 , 0 ; move v0 , ul )  
[2228] ( move ul , 3 ; move 4 , ua * ua )  
[2229] ( move ua , ul ; move 4 , 4 + ul )  | ( move ua , ul ; move 3 + ul , 4 + ul )  
[2230] ( move ua , ul ; move ul , 4 + 4 )  | ( move ua , ul ; move ul , 4 * 2 )  | ( move ua , ul ; move ul , ua * ua )  | ( move ua , ul ; move ul , ua * ua ; pen ul )  | ( move ua , ul ; v0 = ul ; move v0 , ua * ua )  | ( move ua , ul ; move ul , ua * ua ; v0 = ua - ul )  | ( ( move ua , ul ; v0 = ua ) ; move ul , v0 * ua )  
[2231] ( move 2 , ul / 3 ; move ua , ul )  | ( move ul + ul , ul / 3 ; ( move ua , ul ; v0 = ul ) )  
[2232] ( move ua , ua ; move ul , 4 * 3 )  | ( move ua , 0 ; move 2 / 3 , ua - ul )  
[2233] ( move 2 / ua , ua ; move 4 , ul )  | ( move ul / 3 , ua ; move 4 , ul )  | ( move ul / 4 , ua ; move 4 , ul )  | ( move ul / 4 , 0 ; move 4 , ua + ul ; v0 = ul )  | ( ( move 2 / ua , ua ; v0 = 4 ) ; move v0 , ul )  
[2234] ( move ul - ua , ul ; move 4 , 3 )  | ( move ul - ua , ua + ul ; move 4 , ua + 3 )  
[2235] ( move ul , ul ; move 3 , 4 + ul )  | ( ( move ul , ul ; v0 = 4 + ul ) ; move 3 , v0 )  
[2236] ( move 3 , ul / ua ; move 2 , ul )  | ( move 3 , ul / ua ; ( pen 2 ; pen ul ; move ul + ul , ul ) )  
[2237] ( move 4 , ul ; move ua , ua - 4 )  | ( move ua , ul / ua ; move 4 , 4 )  
[2238] ( move 4 , ul - 2 ; move ul , ul )  | ( move 4 , ua - ul ; move ul , ul )  | ( move ul , ua / 2 ; move 4 , 2 - 3 )  | ( move 3 + ul , 0 - ul ; move ul , ul )  | ( move 3 + ul , ul - 2 ; move ul , ul )  | ( pen ul ; ( move 4 , 2 - 3 ; move ul , ul ) )  | ( move 4 , ua - ul ; v0 = ul ; move ul , v0 )  | ( move 3 + ul , 0 - ul ; move ul , ul ; move 0 , ua )  
[2239] ( move 3 , 4 ; move ul , ua * ua )  | ( move 3 , 4 - ua ; move ul , ua * ua )  | ( v0 = 4 ; move 3 , v0 ; move ul , 2 * v0 )  
[2240] ( move ul - ua , ul ; move 3 , 4 )  | ( pen ul ; move ul - ua , ul ; move 3 , 4 )  
[2241] ( move ul , ua ; move 3 , ua / 3 )  | ( v0 = ul - 4 ; move ul , ua ; move v0 , 3 / v0 )  
[2242] ( move ua + ul , ul ; move 4 , 4 )  | ( move ua + ul , ul - ua ; move 4 , 4 )  | ( move 2 , ul ; move ua - ul , 0 ; move 4 , 4 )  | ( move ul , ul ; move ua , ua ; move 4 , 2 * 2 )  | ( v0 = ua + ul ; move v0 , v0 ; move 4 , 4 )  | ( move ua , ua + ul ; ( move ul , 0 ; move 4 , 4 ) )  | ( v0 = ua + ul ; ( move v0 , v0 ; move 4 , 4 ) )  
[2243] ( move 4 + ul , 3 ; move ul , ul )  | ( move ua - ul , 3 ; move ul , ul )  | ( move 4 + ul , ua + 3 ; move ul , ul )  | ( move 4 + ul , 3 ; move ul , ul ; pen 2 - 4 )  
[2244] ( move 3 , ua ; move ua , ua / 4 )  | ( pen ul ; move 3 , 0 ; move ua , ua / 4 )  | ( v0 = 3 ; move v0 , ua ; move ua , ua / 4 )  
[2245] ( move ua + ul , 4 ; move ul , 4 )  | ( move ua + ul , 4 ; move ul , ua + 4 )  
[2246] ( move ua + 4 , ul ; move ul , 4 )  | ( move ua + 4 , ul ; move ul , 3 + ul )  
[2247] ( move ua , ul / 3 ; move ua , 3 )  
[2248] ( move 4 , ul ; move ua + ul , 4 )  | ( move 4 , ul ; move ua + ul , 3 + ul )  | ( move 4 , ul ; move ua , 4 ; move ul , ua )  
[2249] ( move ua , ua ; move 3 / ua , 4 )  | ( move ua , ua ; pen ul ; move 3 / ua , 4 )  
[2250] ( move ul - 3 , ul ; move 3 , ul )  | ( move ul - 3 , ul ; move 4 - ul , ul )  | ( move ul - 3 , ua + ul ; ( pen ul ; move 3 , ul ) )  
[2251] ( move 4 , ua ; move ua , ul - 4 )  | ( move ua - 2 , ua ; move ua , ua - 3 )  | ( move 4 , ua ; move ua , ul - 4 ; pen ua )  | ( move 4 , ua ; move ua , ul - 4 ; pen 4 * 3 )  
[2252] ( move 2 , ua / 4 ; move ua , ul )  | ( move 2 , ua / 4 ; v0 = ua + ua ; move v0 - ua , ul )  
[2253] ( move ua - 3 , ul ; move 4 , ul )  
[2254] ( move ul , ul ; move 3 , ul - 3 )  | ( move ul , ua + ul ; move 3 , ua - 2 )  | ( move ul , ul ; move ul , ul - 3 ; move 2 , ua )  | ( move ul , ul ; pen ul ; move 2 + ul , ul - 3 )  | ( move 3 - 2 , ul ; move 3 , ul - 3 ; v0 = ul )  
[2255] ( move ua , ul / 4 ; move ua , 2 )  | ( move ua , ul / 4 ; move ua , 2 - ua )  | ( move ua , ul / 4 ; pen ul ; move ua , ul + ul )  
[2256] ( move ua , ul ; move 4 , ua - 4 )  | ( move 4 , ul / ua ; move ua , 4 ; pen ua )  
[2257] ( move ua , ua / 4 ; move 2 , ul )  
[2258] ( move ul - ua , 3 ; move 4 , ul )  | ( move ul , 3 ; move ul - ua , ua * 2 ; move 3 + ul , ul )  
[2259] ( move 4 + 3 , ul ; move ul , ul )  | ( move ua + ul , ul ; move ul , ul )  | ( move ua + ul , ul ; move ul , ua + ul )  | ( move ua + ul , ua + ul ; move ul , ul )  | ( move 3 , ul ; move 4 , 0 ; move ul , ul )  | ( move ua , ul ; move ul , 0 ; move ul , ul )  | ( move ua + ul , ul ; move 0 , ul ; move ul , ua )  | ( move ua + ul , ul ; v0 = ul ; move v0 , ul )  | ( ( move 4 + 3 , ua + ul ; move ul , ul ) ; pen 0 )  | ( ( pen ul ; move 4 + 3 , ua + ul ) ; move ul , ul )  
[2260] ( move 3 , ul / ua ; move ua , 3 )  
[2261] ( move 4 - ua , ul ; move 3 , ul )  | ( move 4 - ua , ul ; move 2 + ul , ul )  | ( move 4 - ua , ul ; move 3 , ua + ul )  
[2262] ( move ua , 3 ; move ul - 4 , ul )  | ( move ua , 3 ; move 0 - 3 , ul ; v0 = ua )  
[2263] ( move ul , 3 ; move ua , 3 / ua )  | ( move ul , 4 - ul ; move ua , 3 / ua )  | ( move ul , 3 ; v0 = ul ; move ua , 3 / ua )  
[2264] ( move 2 , ul ; move ua , 4 / ua )  
[2265] ( move ul - ua , ua ; move 4 , 4 )  | ( move ul - ua , ua ; pen ul ; move 4 , 4 )  | ( move ul , ua * 4 ; move ul - ua , 0 ; move 4 , 4 )  
[2266] ( move 4 , 3 ; move ua - ul , ul )  
[2267] ( move ul , 4 ; move ua , 2 / ua )  | ( move ul , 4 - ua ; move ua , 2 / ua )  | ( move ul , 4 ; v0 = ua ; move v0 , 2 / v0 )  
[2268] ( move ua , ul ; move 3 , 3 / ua )  
[2269] ( move ua - ul , 3 ; move ul , 4 )  
[2270] ( move ua , 4 ; move ua , ua / 3 )  | ( move ua , 4 ; v0 = ua ; move v0 , v0 / 3 )  
[2271] ( move ua / 4 , ul ; move ua , 2 )  
[2272] ( move 4 , ua - 4 ; move ua , ul )  
[2273] ( move ua , 4 ; move ua - ul , 4 )  
[2274] ( move ul , ul ; move 3 , 2 / ua )  | ( move ul , ul ; move 3 , ul / 3 )  | ( move ul , ul ; move ua / 2 , ul / 3 ; v0 = ua )  
[2275] ( move ul , ul ; move ua , 3 / 2 )  | ( move 4 - 3 , ul ; move ua , 3 / 2 )  | ( move ul , ul ; pen ul ; ( pen 3 / 4 ; move ua , 3 / 2 ) )  
[2276] ( move ul / 3 , 2 ; move ua , ul )  | ( move ul / 4 , ul ; move ua , 2 )  | ( move ul / 4 , ul ; move ua , 4 - 2 )  | ( move ul / 4 , ul ; move ua , ul + ul )  | ( move ul / 3 , 2 ; move ua , ul ; v0 = ul )  
[2277] ( move ua , ua / 3 ; move ua , 4 )  
[2278] ( move ua , ul ; move 2 , ua / 4 )  
[2279] ( move 3 - ua , ul ; move ul , 4 )  | ( move 3 - ua , ul ; move ul , 4 ; pen ua )  | ( move 3 - ua , ul ; v0 = ul ; move ul , 4 )  
[2280] ( move ua , 4 * 2 ; move ul , ul )  | ( move ua , 4 + 4 ; move ul , ul )  | ( move 0 , 4 ; ( move ua , 4 ; move ul , ul ) )  | ( move ua , 4 * 2 ; move ul , ul ; v0 = ua )  | ( move ua , 4 * 2 ; move 2 - ul , ul ; pen ua )  | ( move ua , 4 * 2 ; ( pen ul ; move ul , ul ) )  | ( move 0 - ua , 4 * 2 ; move ua , ua ; move ul , ul )  
[2281] ( move ua , 3 / ua ; move 3 , ul )  
[2282] ( move 3 , ul / ua ; move ul , 2 )  | ( move 4 - ul , ul / ua ; move ul , 2 )  | ( move 3 , ul / ua ; move ul , ul + ul )  | ( pen ul ; move 3 , ul / ua ; move ul , 2 )  | ( move 3 , ul / ua ; v0 = ul ; move v0 , 2 / v0 )  | ( pen ul ; ( move 2 , ul / ua ; move ul , 0 ; move ul , 2 ) )  | ( move 3 , ul / ua ; ( move 0 , ul ; pen ul ) ; move ul , ul )  
[2283] ( move ua , 2 / 3 ; move ul , ul )  
[2284] ( move ul - 4 , 3 ; move ua , ul )  | ( pen ul ; move 0 - 3 , 3 ; move ua , ul )  | ( move ul - 4 , 3 ; move ua , ul ; pen 0 )  | ( move ul - 4 , 4 - ul ; move ua , ul ; pen 3 )  
[2285] ( move 3 , ul ; move ua , ul - 4 )  | ( move 4 , ul ; move ua , ul - 4 )  | ( move 4 , ul ; move ua , ul - 4 ; pen ul + ul )  | ( ( move 3 , ul ; move ua , ul - 4 ) ; v0 = ua )  
[2286] ( move ua + 4 , 4 ; move ul , ul )  
[2287] ( move ua , 4 / ua ; move ul , 2 )  | ( move ua , 4 / ua ; move 2 - ul , 2 )  
[2288] ( move 4 , ul - 3 ; move ua , ul )  | ( ( move 4 , ul - 3 ; move ua , ul ) ; v0 = ul )  
[2289] ( move ua - 3 , ul ; move ul , 4 )  | ( move ua - 3 , ul ; v0 = ul - ua ; move ul , 4 * v0 )  
[2290] ( move ua - ul , ul ; move 3 , 4 )  | ( move ua - ul , ul ; move 3 , 2 + 2 ; pen 4 )  | ( move ua - ul , ul ; ( move 3 , 4 ; pen 4 / 2 ) )  | ( move ua - ul , ul ; move 3 , 3 + ul ; v0 = 2 )  
[2291] ( move ul , ua / 4 ; move ua , 2 )  | ( move ul , ua / 4 ; move ua - ul , 2 ; move ul , 0 )  | ( ( move ul , ua / 4 ; move ua , ul + ul ) ; pen ua ; pen 0 )  
[2292] ( move 3 - ua , 4 ; move ul , ul )  | ( move 3 - ua , 3 + ul ; move ul , ul )  | ( move 3 - ua , 4 ; move ul , ul ; pen ul )  
[2293] ( move ul , 2 ; move ua , 4 / ua )  
[2294] ( move 4 , 4 + ul ; move ua , ul )  | ( move 4 , 4 + ul ; move ua , ul ; move 0 , 4 - ul )  | ( move 3 + ul , 4 + ul ; pen ul ; move ua , ua + ul )  
[2295] ( move ul , 4 ; move ua , 4 + ul )  
[2296] ( move ul - ua , 4 ; move 3 , ul )  
[2297] ( move ul , 4 * 2 ; move ua , ul )  | ( move ul , 4 + 4 ; move ua , ul - ua )  | ( move ul , 4 * 2 ; move ua , ul ; pen ul )  | ( pen ul ; move ul , 4 + 4 ; move ua , ul )  | ( move ul , 4 * 2 ; v0 = ua ; move v0 , ul )  | ( ( pen ua * 4 ; pen ul ) ; move ul , 4 * 2 ; move ua , ul )  
[2298] ( move 3 , ul ; move ua , ul / 2 )  | ( move 3 , ul ; move ua , ul / 2 ; move 0 , ul )  | ( move 3 , 2 - ul ; move ua , 3 / ua ; pen 4 + 2 )  
[2299] ( move 3 , ul ; move ua - ul , 4 )  
[2300] ( move 4 , 2 / ua ; move ua , ul )  | ( move 4 , 2 / ua ; move ua , ul ; pen 0 )  
[2301] ( move ua , ul ; move 4 + ul , 4 )  | ( move ua , ul ; move 4 + ul , 4 - ua )  | ( ( move ua , ul ; pen ul ; move ua - ul , 4 ) ; pen 0 )  
[2302] ( move ul , 3 ; move ul - ua , 4 )  | ( move ul , 3 ; move ul - ua , 3 + ul )  | ( move ul , 3 ; move ul - ua , ua + 4 )  | ( ( move 0 , ua ; move ul , 3 ) ; move ul - ua , 4 )  
[2303] ( move 2 , ul ; move ua , ua / 4 )  
[2304] ( move ua - ul , 4 ; move 3 , ul )  | ( move ua - ul , 4 ; move 3 , ul ; v0 = 0 )  
[2305] ( move ul , ul ; move 4 + 3 , ul )  | ( move ul , ul ; move ua + ul , ul )  | ( move 2 - ul , ul ; move ua + ul , ul )  | ( move ul , ul ; move ua + ul , ua + ul )  | ( move ul , ul - ua ; move ua + ul , ul )  | ( move ul , ul ; move ua , ul ; move ul , 0 )  | ( move ul , ul ; move ul , ul ; move ua , ua )  | ( move ul , ul ; move ua , ul ; move ul , ua )  | ( move ul , ul ; pen ul ; move ua + ul , ul )  | ( move ul , ul ; move ul , ul - ua ; move ua , 0 )  | ( move ul , ul ; move ua + ul , ul ; v0 = ul )  | ( move ul , ul ; ( move ul , ul ; move ua , ua ) )  | ( move ul , ul ; v0 = ua + ul ; move v0 , ul )  | ( move ul , ua + ul ; move ua + ul , ul ; v0 = 3 )  | ( v0 = ua + ul ; move ul , v0 ; move v0 , v0 )  | ( v0 = ul ; move v0 , v0 ; move v0 + ua , ul )  | ( move ul , ul ; move ua + ul , ul ; v0 = ua + ul )  | ( ( pen 0 ; pen ul ; move ul , ul ) ; move ua + ul , ul )  | ( move ul , ul ; ( v0 = ua + ul ; move v0 , v0 ) )  | ( ( v0 = ua + ul ; move ul , ul ) ; move v0 , v0 )  | ( ( move ul , ul ; v0 = ua + ul ) ; move v0 , v0 )  | ( move ul , ul ; move 3 + 3 , ul ; move 2 - ul , ua * 3 )  | ( v0 = ul ; move ul / v0 , ul ; move ua + ul , v0 )  | ( v0 = ul ; move v0 , ul ; move ua + v0 , ul / v0 )  | ( ( move ul , ul ; v0 = ua + ul ) ; move v0 , ul - ua )  | ( ( move ul , ul ; move 2 , ul ; pen ul ) ; move ua - ul , ua )  | ( ( move ul , ul - ua ; move ul , ul ) ; move ua , ua ; pen ua )  
[2306] ( move ul , ul - 3 ; move 3 , ul )  | ( move 2 - ul , ua - 2 ; move 3 , ul )  | ( v0 = ul ; move ul , v0 - 3 ; move 2 + ul , v0 )  
[2307] ( move ua , 4 ; move 4 , ua - ul )  
[2308] ( move ua , 4 + ul ; move 4 , ul )  | ( move ua , 4 + ul ; move 4 , 2 - ul )  | ( move 0 , ua ; move ua , 3 + 2 ; move 3 + ul , ul )  
[2309] ( move ua , ul ; move 2 / 3 , ul )  | ( move ua , ul ; move 4 / ua , ul )  | ( move ua , ul ; move 4 / ua , 2 - ul )  | ( v0 = ul ; move ua , ul ; move 4 / ua , v0 )  
[2310] ( move ul - ua , 4 ; move ul , 3 )  | ( move 3 / ua , 3 - ul ; move ua , 2 )  | ( move ua , 4 ; pen 0 ; move ul , 3 - ul )  | ( move ul - ua , 4 ; move ul , 3 ; v0 = ul / 3 )  | ( v0 = ul - ua ; move v0 , 3 + v0 ; move ul , 3 )  
[2311] ( move ul , 4 + ul ; move ua , 4 )  
[2312] ( move ul , ua ; move 3 , ul / 2 )  | ( move 2 - ul , 0 ; move 3 , ul / 2 )  | ( move ul , ua ; move 3 , 3 / ua ; v0 = 4 )  | ( move 0 , ua - ul ; move ul , ul ; move 3 , 2 / 4 )  | ( pen ua - ul ; ( pen ul ; move ul , 0 ; move 3 , ul / 2 ) )  
[2313] ( move ua , ua ; move ul - 4 , 4 )  
[2314] ( move ul , 4 ; move ua - ul , 3 )  | ( move ul , ul ; move ul , 4 - ul ; move ua - ul , 3 )  
[2315] ( move 4 , ul ; move ua , 4 + ul )  | ( v0 = 3 ; move 4 , ul ; move ua , v0 + 2 )  
[2316] ( move 2 / 4 , ul ; move ua , ul )  | ( move ul / 2 , ul ; move ua , ul )  | ( move 4 / ua , ul ; move ua , ul )  | ( ( move 4 / ua , ul ; v0 = ul ) ; move ua , v0 )  
[2317] ( move 4 , ua - ul ; move 4 , ul )  | ( move 4 , 0 - ul ; move 2 + 2 , ul )  
[2318] ( move ul , ua - ul ; move 4 , 4 )  | ( pen ul / 4 ; move 2 - 3 , ua + 2 ; move 4 , ul )  
[2319] ( move ul , ul ; move ua , 4 * 3 )  
[2320] ( move ua , ul / 4 ; move ua , 3 )  | ( move ua , ul / 4 ; move ua , ua + 3 )  
[2321] ( move ua , ul ; move 4 , ua / 3 )  
[2322] ( move ul , ua ; move ua , 4 / 3 )  
[2323] ( move ul , 2 ; move ua , ul / 4 )  
[2324] ( move ul , ua ; move 3 , 4 / ua )  | ( pen ul ; ( move ul , ua ; move 3 , 4 / ua ) )  | ( move ul , ua ; v0 = ua ; move 3 , 4 / v0 )  
[2325] ( move ul , ul ; move ua , 2 / 4 )  | ( move ul , ul ; move ua , ul / 2 )  | ( move ul , ul ; move ua , ul / 2 ; pen 3 )  | ( move ul , ul ; v0 = ul / 2 ; move ua , v0 )  
[2326] ( move 4 , 4 ; move ul , ua * ua )  | ( move 4 , 2 + 2 ; move ul , ua * ua )  
[2327] ( move ul , 4 ; move ua - ul , 4 )  | ( move ul , 4 ; move 0 , 4 ; move ua - ul , 0 )  
[2328] ( move ul , 4 * 3 ; move ua , ul )  
[2329] ( move 3 , 4 ; move ua , ul / ua )  | ( ( move 2 , 4 ; move ul , 0 ) ; move ua , ul / ua )  
[2330] ( move ua , 4 / ua ; move 3 , ul )  
[2331] ( move ul , ul ; move 3 , 3 / ua )  
[2332] ( move 4 * 2 , ul ; move ul , ul )  | ( move 4 + 4 , ul ; move ul , ul )  | ( move ua + 2 , ul ; move ul , ul )  | ( move ua + 2 , ul ; move ul , ua + ul )  | ( move ua , ul ; move 2 , ua ; move ul , ul )  | ( move 2 , ul ; move ua , ua ; move ul , ul )  | ( move ua + 2 , ul ; v0 = ul ; move ul , v0 )  | ( move ua + 2 , ul ; v0 = ul ; move v0 , v0 )  | ( move ua + 2 , ul ; v0 = 3 ; move v0 / 3 , ul )  
[2333] ( move ua , ul ; move 3 , ua / 4 )  
[2334] ( move 4 , ul ; move 4 + ul , ul )  | ( move 4 , 3 - 2 ; move ul , ul ; move 4 , ua )  | ( move 3 + ul , ul ; move 4 , ul ; move ul , ua )  | ( move 4 , ul ; move ul + ul , ul ; move 3 , ua )  
[2335] ( move ua - ul , 4 ; move 4 , ul )  | ( move ua - ul , 3 + ul ; move 4 , ul ; move 0 , 3 * 3 )  
[2336] ( move ul , ul ; move 4 * 2 , ul )  | ( move ul , ul ; move 4 + 4 , ul )  | ( move ul , ul ; move ua + 2 , ul )  | ( move ul , ul ; move 4 * 2 , ul ; pen 3 )  | ( move ul , ul ; move ua , ul ; move 2 , 0 )  | ( move ul , ul ; move ua , ul ; move 2 , ua )  | ( move ul , ul ; move 4 * 2 , ul ; v0 = 2 )  | ( move ul , ua + ul ; pen ul ; move 4 * 2 , ul )  | ( v0 = ul ; move ul , v0 ; move 4 * 2 , v0 )  | ( move ul , 2 - ul ; move 4 , ul ; move ua - 2 , 0 )  | ( move ul , ul ; move 4 + 4 , ul ; v0 = ul - ua )  
[2337] ( move ua , 4 ; move ul - 4 , ul )  | ( move ua , 4 ; move ul - 4 , ua + ul )  | ( ( move ua , 4 ; move ul - 4 , ul ) ; v0 = ua )  
[2338] ( move ua , ul ; move 2 , ul / 4 )  
[2339] ( move 4 , ua ; move 3 , ul / ua )  | ( move 4 , ua * 4 ; move 3 , ul / ua ; v0 = 3 )  | ( move 2 + ul , ua ; move ul , ua ; move 3 , ul / ua )  
[2340] ( move 4 , ul ; move ul - 3 , ul )  | ( pen ul ; ( move 4 , ul ; move ul - 3 , ul ) )  
[2341] ( move 2 , ul / 4 ; move ua , ul )  
[2342] ( move 4 + ul , ul ; move 4 , ul )  | ( move 4 , ua + ul ; move ul , ua ; move 4 , ul )  | ( ( move 4 + ul , ul ; move 4 , ul ) ; pen 4 + ul )  
[2343] ( move ul , 3 ; move 3 , ul / ua )  
[2344] ( move ul - 4 , ul ; move 3 , ul )  | ( move ul - 4 , ul ; v0 = 3 ; move v0 , ul )  
[2345] ( move 4 , ua * ua ; move 4 , ul )  
[2346] ( move ul / 2 , 4 ; move ua , ul )  | ( move 4 / ua , 4 ; move ua , ul )  | ( move ul - ua , 4 + ul ; move 0 , 0 - ul ; move ul , 4 )  
[2347] ( move ua , ul ; move ul , 4 * 3 )  | ( move ua , ul ; v0 = 4 ; move ul , 3 * v0 )  
[2348] ( move 4 , ul - 3 ; move ul , ul )  | ( move 4 , 2 - 4 ; v0 = ul ; move v0 , ua + ul )  | ( ( v0 = ul ; move 4 , v0 - 3 ) ; move v0 , v0 )  | ( ( move 4 , ua - 2 ; pen 2 ) ; ( pen ul ; move ul , ul ) )  
[2349] ( move ua , 2 ; move ul / 4 , ul )  | ( move ua , 2 ; move ul / ua , ul )  | ( move 2 / ua , ua + ul ; move ua , 3 - 2 )  | ( move ua , 2 ; move ul / ua , ul ; v0 = 3 )  | ( move ua , ua + 2 ; move ul / 4 , ul + ul ; v0 = 2 )  
[2350] ( move 4 , ul / 2 ; move ua , ul )  | ( move 4 , 3 / ua ; move ua , ul ; pen ul )  
[2351] ( move 4 , 2 / ua ; move ul , ul )  | ( move 4 , 2 / ua ; move ul , ua + ul )  | ( move 4 , ul / 3 ; move 0 , ul ; move ul , ua )  | ( move 0 , 0 ; move 4 , ul / 3 ; move ul , ul - ua )  | ( move 4 , ul / 3 ; v0 = 0 ; move v0 + ul , ul )  
[2352] ( move ul , 4 ; move ua , ul / 2 )  | ( move ul , 3 + ul ; move ua , ul / 2 )  
[2353] ( move 4 + ul , 4 ; move ul , ul )  | ( move 3 + 2 , 3 + ul ; move ul , ul )  | ( move ul , 3 - ul ; move ul - ua , 2 )  | ( move 3 , 4 ; move 2 , 0 ; move ul , ul )  | ( move ul , 4 ; move 4 , ua ; move ul , ul )  
[2354] ( move ul - ua , 4 ; move 4 , ul )  | ( move ul - ua , 4 ; move 2 * 2 , ul )  | ( move ul - ua , 4 ; pen ul ; move 4 , ul )  
[2355] ( move 4 , ul - 4 ; move ua , ul )  | ( move 4 , ul - 4 ; move ua , ul - ua )  
[2356] ( move ul , 4 ; move 4 + ul , ul )  | ( move ul , 4 ; move 3 + 2 , 4 - 3 )  | ( move ul , 4 ; move 3 + 2 , ua + ul )  | ( move ul , 4 ; move 4 + ul , ua + ul )  | ( move ul , 3 + ul ; move 4 + ul , ul )  | ( move ul , 4 ; move 3 , ul ; move 2 , ua )  | ( move ul , 4 ; move ul , ul ; move 2 * 2 , 0 )  | ( move ul , 3 + ul ; move ul , ul ; move 4 , ua )  | ( move ul , 3 + ul ; move 4 + ul , ul ; v0 = ua )  | ( move ul , 3 + ul ; ( pen ul ; move 4 + ul , ul ) )  | ( move ul , ua + 4 ; move ul + ul , ul ; move 3 , ua )  | ( move ul , 4 ; ( move 4 + ul , ul ; pen 3 ; v0 = 3 ) )  
[2357] ( move ul , ul ; move 4 , 4 + ul )  | ( move ul , ul ; move 3 + ul , 4 + ul )  | ( ( move ul , ul ; move 0 , ul - ua ) ; move 4 , 4 )  
[2358] ( move ua , ua / 3 ; move ul , 4 )  
[2359] ( move ul , 2 / ua ; move 4 , ul )  
[2360] ( move ul , ul ; move ua / 2 , 4 )  | ( move ul , ul ; move ua - 3 , 3 + ul )  | ( move ul , ul ; v0 = ua + ul ; move v0 - 4 , 4 )  
[2361] ( move ul / 2 , ul ; move ua , 4 )  | ( move 3 / ua , ul ; move ua , 4 )  | ( move 4 / ua , ul ; move ua , 4 )  | ( move 2 / 4 , ul ; v0 = 0 ; move ua , 4 )  
[2362] ( move ul , ua - 4 ; move 4 , ul )  | ( move ul , 0 - 4 ; move 3 + ul , ul )  | ( pen ul ; ( move ul , ua - 4 ; move 4 , ul ) )  | ( move ul , ua - 4 ; move 4 , ul ; pen ua - ul )  | ( v0 = 4 ; ( move ul , ua - v0 ; move v0 , ul ) )  
[2363] ( move ul , ul ; move 4 , 2 / ua )  | ( move ul , ul ; ( v0 = 4 ; move v0 , 2 / ua ) )  
[2364] ( move 4 , ul ; move ua - 4 , ul )  | ( move 4 , ua + ul ; move ua - 4 , ul ; pen 0 )  
[2365] ( move ul , 3 / ua ; move ua , 4 )  | ( move ul , 3 / ua ; move ua , ua + 4 )  | ( move ul , 3 / ua ; v0 = 3 + ul ; move ua , v0 )  
[2366] ( move ua , 4 ; move ul , ul / 2 )  | ( move ua , 4 ; move ul , ul / 2 ; v0 = 0 )  
[2367] ( move 4 , ul ; move ua / 2 , ul )  | ( move 3 + ul , ul ; move ua - 3 , ua + ul )  
[2368] ( move 4 , ua - 4 ; move ul , ul )  
[2369] ( move ua , ul / 2 ; move ul , 4 )  
[2370] ( move 4 , ul ; move ua - ul , 4 )  | ( move 4 , ua + ul ; move ua - ul , 4 )  
[2371] ( move ua , ul - 4 ; move 4 , ul )  | ( move ua , ul - 4 ; move 4 , ua + ul )  | ( move ua , ul - 4 ; move 4 , ul ; pen ua - 3 )  | ( move ua , ul - 4 ; move 2 + ul , ul ; move ul , 0 )  
[2372] ( move ua , 4 ; move ul / 2 , ul )  
[2373] ( move ua , ul / 2 ; move 4 , ul )  | ( move ua , 3 / ua ; move 0 , ua ; move 4 , ul )  | ( ( move ua , ul / 2 ; move 4 , 4 - 3 ) ; v0 = 2 )  
[2374] ( move 3 , ua ; move ua / 4 , ul )  
[2375] ( move 4 , ul ; move ul , 2 / ua )  | ( move 4 , ul ; move ul , ul / 3 )  | ( move 4 , ua + ul ; move ul , 2 / ua )  | ( move 3 + ul , ul ; move ul , 2 / ua )  | ( v0 = 3 / 4 ; ( move 4 , ul ; move v0 , v0 ) )  
[2376] ( move ua , ul ; move ua , 4 * 4 )  | ( move ua , ul ; v0 = 4 * 4 ; move ua , v0 )  
[2377] ( move 3 , ul ; move ua , 4 / ua )  
[2378] ( move ul , 2 ; move 4 , ul / ua )  | ( move ul , 2 ; move 3 + ul , ul / ua )  | ( move ul , 2 ; move ul , ul / ua ; move 3 , ua )  | ( move ul , 2 - ua ; move 4 , ul / ua ; v0 = ul - 2 )  
[2379] ( move ua , 2 / 4 ; move ul , ul )  | ( move ua , 3 / ua ; move ul , ul )  | ( move ua , ul / 2 ; move 3 - 2 , ul )  | ( ( move ua , ul / 2 ; move ul , ul ) ; v0 = 2 )  | ( move ua , ul / 2 ; v0 = ul ; move ul , ul - ua )  | ( ( move ua , ul / 2 ; pen ul ; move ul , ul ) ; pen 0 )  | ( move ua , ul / 2 ; ( move ul , ul ; v0 = 3 / ua ) )  
[2380] ( move 4 + ul , ul ; move ul , 4 )  | ( move ua - ul , ul ; move ul , 4 )  | ( move 3 + 2 , ul ; move ul , ua + 4 )  | ( move 4 + ul , ul ; move ul , 3 + ul )  | ( move 4 + ul , ul ; move ul , 4 ; pen 2 )  | ( move 4 + ul , ua + ul ; move ul , 3 + ul )  | ( move ul + ul , ul ; move 3 , 0 ; move ul , 4 )  | ( move 0 , ua + ul ; move 4 + ul , ua ; move ul , 4 )  | ( move 4 + ul , ul ; move ul , 4 ; v0 = ua + ul )  
[2381] ( move ul , ua * ua ; move 4 , 4 )  | ( move ul , ua * ua ; move 4 , 3 + ul )  
[2382] ( move 4 , ul ; move ua , ua / 4 )  
[2383] ( move 4 , 4 ; move ua , ul / ua )  
[2384] ( move 3 , ul ; move ua , ul / 4 )  
[2385] ( move 4 , ul - 4 ; move ul , ul )  | ( move 3 + ul , ul - 4 ; move ul , ul )  | ( pen ul ; move 4 , ul - 4 ; move ul , ul )  | ( v0 = 4 ; move v0 , ul - v0 ; move ul , ul )  
[2386] ( move ul , ul ; move 4 , ul / 2 )  
[2387] ( move ua , ul ; move 4 / 3 , ul )  | ( move ua , ua + ul ; move 4 / 3 , ul )  | ( ( move ua , ul ; move 4 / 3 , ul ) ; v0 = 4 )  
[2388] ( move ul , ua ; move 4 , 4 / ua )  
[2389] ( move 3 , ul ; move ul , ul / 3 )  
[2390] ( move ua , 4 * 4 ; move ul , ul )  | ( move ua , 4 * 4 ; v0 = ul ; move v0 , v0 )  
[2391] ( move 4 , ua ; move ul , 4 / ua )  | ( move 4 , ua ; ( move ul , 2 / 3 ; pen 3 ) )  | ( move 2 + ul , ua ; move ul , 0 ; move ul , 4 / ua )  
[2392] ( move 4 , ul ; move ul , ul / 2 )  | ( move 4 , ul - ua ; move ul , 4 / ua )  
[2393] ( move 4 , 3 / ua ; move ul , ul )  | ( move 4 , ul / 2 ; pen ul ; move ul , ul )  | ( move 4 , 2 / 4 ; ( v1 = ul ; move ul , ul ) )  | ( move 4 , ul / 2 ; v0 = ul - ua ; move ul , v0 )  
[2394] ( move 4 , ul ; move 3 , ul / ua )  | ( move 2 * 2 , ul ; move 3 , ul / ua )  | ( move 4 , ul ; move 3 , ul / ua ; pen 2 - ul )  
[2395] ( move ul , ul / ua ; move 3 , 4 )  | ( move 2 + ul , ul ; move ul , ua - 4 )  | ( move 0 , ul ; move 3 , 0 ; move ul , ua - 4 )  | ( move ul , ul / ua ; move 0 , ul ; move 3 , 3 )  | ( move 3 , ul ; move ul , 0 - 4 ; move 0 , ua * 4 )  | ( move 3 , ua + ul ; move ul , 0 - 4 ; v0 = 3 )  
[2396] ( move ul , 4 / 3 ; move ua , ul )  | ( move ul , 4 / 3 ; move ua , ul ; v0 = ua )  
[2397] ( move ua , ul / 3 ; move ul , 4 )  | ( move ua , ul / 3 ; v0 = ul ; move v0 , 4 )  
[2398] ( move 3 , ul / ua ; move ul , 4 )  | ( move 3 , ul / ua ; move 0 - ul , ul )  | ( move 2 + ul , ul / ua ; move ul , 4 )  
[2399] ( move ua , 4 / ua ; move ul , 4 )  | ( move ua , 4 / ua ; move ul , ua + 4 )  
[2400] ( move 4 , 4 / ua ; move ua , ul )  
[2401] ( move ua , 4 ; move ua / 4 , ul )  
[2402] ( move ul , ul / ua ; move 4 , 3 )  
[2403] ( move ua / 4 , 4 ; move ua , ul )  
[2404] ( move 3 , ul / 3 ; move ul , ul )  | ( move 2 + ul , 2 / ua ; move ul , ul )  | ( move 2 + ul , 2 / ua ; move ul , ua + ul )  | ( move 3 , ul / 3 ; v0 = ua + 4 ; move ul , ul )  | ( move 2 + ul , ul / 3 ; move ul , ul ; move 0 , ul )  
[2405] ( move ul , 4 ; move ua , 4 / ua )  
[2406] ( move 4 , ua / 3 ; move ul , ul )  | ( move 3 + ul , ua / 3 ; v0 = ul ; move v0 , ul )  | ( move 4 , ua / 3 ; ( move ul , ua + ul ; move 0 , ul ) )  | ( move 4 , ua / 3 ; v0 = ul ; move v0 , v0 * v0 )  
[2407] ( move ul , ua ; move 4 , ul / 3 )  | ( ( v0 = 4 ; move ul , ua ) ; move v0 , ul / 3 )  
[2408] ( move ua , ul ; move ua / 4 , 4 )  | ( move ul / ua , 0 ; ( move ua , ua + ul ; move 2 , 4 ) )  
[2409] ( move 4 / 3 , ul ; move ua , ul )  | ( move ua / 4 , ul ; move ua , ul )  | ( move ua / 4 , ul ; move ua , ul ; move ul + ul , ua + 3 )  
[2410] ( move ul , ul ; move ua , 3 / 4 )  | ( move ul , 3 / 4 ; move ua , ul - ua )  | ( move ul - 2 , 4 ; ( move ua , 4 ; v0 = ul ) )  
[2411] ( move ul , ul ; move 3 , 4 / ua )  
[2412] ( move 4 , ul / ua ; move 3 , ul )  
[2413] ( move ul , ul ; move ul - 4 , 4 )  | ( move 3 , 4 + ul ; move ul , ua - ul )  
[2414] ( move ul , 3 ; move ua , ul / 4 )  
[2415] ( move 3 , ul / 4 ; move ul , ul )  | ( move 2 + ul , ul / 4 ; move ul , ul )  
[2416] ( move ul / 4 , ul ; move ua , 4 )  
[2417] ( move 4 , ul ; move 4 / ua , ul )  | ( move 4 , ul - ua ; move 3 / 4 , ul )  
[2418] ( move 4 , ul ; move 4 , ul / ua )  | ( move 4 , ua + ul ; v0 = ul ; move 4 , v0 / ua )  | ( move 4 , ul ; move 2 + 2 , ul / ua ; v0 = 4 + 2 )  | ( move 4 , ul ; ( move 3 + ul , ul / ua ; v0 = 0 ) )  
[2419] ( move 4 , ul ; move ua / 4 , ul )  | ( move 4 , ua + ul ; move ua / 4 , ul )  | ( move 3 + ul , ul ; move ua / 4 , ul )  | ( move ul + ul , ul ; move 2 , ua ; move ua / 4 , ul )  
[2420] ( move ua , ul / 4 ; move 4 , ul )  | ( move ua , ul / 4 ; move 4 , ua + ul )  
[2421] ( move 4 , ul / 4 ; move ua , ul )  
[2422] ( move ua , ul / 4 ; move ul , 4 )  
[2423] ( move ul , ul ; move 4 , ua / 4 )  
[2424] ( move 4 , ul / 4 ; move ul , ul )  | ( move 4 , ul / 4 ; move ul , ul ; pen ua - ul )  
[2425] ( move 2 , 0 ; pen 0 ; move 3 , 0 )  
[2426] ( pen ul + ul ; move ua + 3 , 2 )  | ( pen ul ; pen 2 ; move ua + 3 , 2 )  | ( pen 2 ; move ua + 3 , 2 ; v0 = 0 )  | ( pen 2 ; move ua + 3 , 2 ; v0 = 4 - ul )  | ( pen 2 ; v0 = ua - 3 ; move v0 * 3 , 2 )  | ( ( pen ul ; pen 2 ; move ua + 3 , 2 ) ; pen ul )  
[2427] ( pen ua ; move ul - ua , 3 + 2 )  | ( pen ua ; move 4 + ul , 4 + ul )  | ( pen 4 ; move ul - ua , 4 + ul )  | ( pen ua * 2 ; move 4 + ul , 3 + 2 )  | ( pen 4 + ul ; move ua - ul , 4 + ul )  | ( v0 = 4 + ul ; pen v0 ; move v0 , v0 )  | ( ( pen ua * 3 ; move ul - ua , 3 + 2 ) ; pen ul )  | ( ( v0 = 4 + ul ; pen v0 ) ; move v0 , v0 )  | ( pen ua * 3 ; ( v0 = 4 + ul ; move v0 , v0 ) )  | ( ( pen ua ; move 4 + ul , 4 + ul ) ; move 0 - ul , ua )  | ( pen ua ; ( move 4 + ul , 4 + ul ; pen 0 ) ; v0 = 4 )  
[2428] ( pen ua ; move ua + 3 , ul - 3 )  | ( ( pen ua + ul ; move 2 , ua - 2 ) ; move ua , ua )  | ( pen 4 + 3 ; move 3 , ul - 3 ; ( move ua , 0 ; pen ul ) )  
[2429] ( pen 3 ; move ua + ul , ul - 3 )  | ( pen 3 ; move ua + ul , 0 - 2 ; pen 0 )  | ( pen 3 ; v0 = ua ; move v0 + 2 , v0 - 2 )  | ( pen 3 ; ( move ua + ul , ul - 3 ; move 0 , 2 / ua ) )  
[2430] ( pen 3 ; move ua + ul , 2 / ua )  | ( pen 3 ; move ua + ul , ul / 3 )  | ( v0 = ul ; pen 3 ; move v0 + ua , v0 / 3 )  
[2431] ( pen ua + ul ; move ua + 4 , 4 )  | ( pen ua + 2 ; pen ua ; move ua + 4 , 4 )  | ( pen ua ; move ul - ua , 4 ; move ul - ua , ua )  | ( pen 4 * 4 ; v0 = ua + 4 ; move v0 , v0 )  | ( v0 = ua + 4 ; pen v0 * v0 ; move v0 , 4 )  
[2432] ( pen ua ; move ua + 2 , ul / 3 )  | ( pen ua ; move ua + ul , 2 / ua )  | ( v0 = 3 ; pen ua ; move ua , ul / v0 )  
[2433] ( pen 2 ; move ua + ul , ua / 3 )  
[2434] ( pen 3 ; move ua + ul , ua - 4 )  | ( v0 = ul ; pen 3 ; move ua + v0 , ua - 4 )  
[2435] ( pen 4 ; move ua + 2 , ul / ua )  
[2436] ( pen ua ; move ua - ul , 4 + 4 )  | ( pen ua ; move ul - ua , ua * ua )  | ( pen ua + 4 ; move ul , ul + ul ; move 3 + ul , 4 + 2 )  
[2437] ( pen 3 ; move ua + ul , ul - 4 )  
[2438] ( pen 3 ; move ua - ul , ua - 4 )  | ( ( pen 3 ; move ul - ua , 0 - 4 ) ; pen 0 )  
[2439] ( pen 2 ; move ua - ul , ul / 2 )  
[2440] ( pen ua ; move ua + ul , 4 * 4 )  | ( move 2 , ua ; pen ua ; move ua + ul , 4 * 4 )  | ( move 0 , 0 ; pen ua + 3 ; move ua + ul , ul / 4 )  | ( move ul - ua , ul / 4 ; pen ua ; move ua + ul , ua * 2 )  
[2441] ( pen 2 ; move ul - ua , 4 / ua )  
[2442] ( pen ua ; move ua - ul , 4 * 3 )  | ( move ul , ua / 4 ; pen ua ; move ul - ua , 2 - ul )  
[2443] ( move 0 , 4 ; pen 0 ; move 4 , 4 )  | ( move 0 , 4 ; pen ul - ua ; move 3 + ul , 4 )  
[2444] ( pen ul + ul ; move ua , 4 / 3 )  
[2445] ( pen 3 ; move 3 , 0 ; move 4 , 2 )  
[2446] ( pen 2 ; move 3 , 0 ; move 4 , 3 )  
[2447] ( pen 3 ; move ul - ua , ua / 4 )  
[2448] ( pen 4 ; move 2 , 0 ; move 4 , 2 )  | ( pen 3 + ul ; ( move 2 , 0 ; pen 4 ) ; move 4 , 2 - ua )  
[2449] ( move 4 , 4 ; pen 0 ; move 2 , 2 )  
[2450] ( pen 4 ; move ua - ul , ul / 3 )  | ( pen 3 + ul ; move ua - ul , 2 / ua )  | ( ( pen ua + ua ; pen ua ) ; move 3 + 2 , ul / 3 ; pen ul )  
[2451] ( move 2 , 3 ; pen 4 ; move 4 , 0 )  
[2452] ( pen 4 ; move ul - ua , ul / 4 )  | ( pen ua ; move ul - ua , ul / 4 )  | ( pen ua + 4 ; move ua - ul , ul / 4 )  | ( pen ua + ul ; move ua - ul , ul / 4 )  | ( v0 = ua * 4 ; pen ua ; move ul - ua , ua / v0 )  
[2453] ( move ua , ul ; move 0 - ua , ul )  | ( move ua , ul ; move 0 - ua , ul ; move 0 , 4 - ua )  
[2454] ( move 0 , ul ; move ua , ua * ua )  | ( move 0 , ua - 4 ; move ua , ul / 2 )  | ( move 0 , ua * ua ; move 0 - ua , ul )  | ( move 0 , ua * ua ; move ua , ul - ua )  | ( v0 = ul - ua ; move ua , v0 * v0 )  | ( v0 = ua + ul ; move v0 , v0 * v0 )  | ( pen ul / 2 ; move 0 , ul ; move ua , ua * ua )  | ( v0 = ua + ul ; move ul - v0 , v0 * v0 )  
[2455] ( move ua , 0 ; move ul - ua , ul )  | ( move ua , ua ; move ul - ua , ul )  | ( move ua , ua ; move ul - ua , ua + ul )  | ( move ua , ua + ua ; move ul - ua , ul )  | ( pen ul ; move ua , 0 ; move ul - ua , ul )  | ( move ua , 0 ; v0 = ul - ua ; move v0 , v0 )  | ( move ua , 0 ; move ul - ua , ul ; v0 = ua - ul )  | ( move ua , 0 ; move ul - ua , ul ; v0 = ul + ul )  | ( v0 = ul ; move v0 * ua , 0 ; move v0 - ua , ul )  | ( ( move ua , 0 ; move ul - ua , ul - ua ) ; v0 = 2 )  
[2456] ( move ua - ul , 0 ; move ua , ul )  | ( move ua - ul , ua ; move ua , ul )  | ( move ua - ul , ua ; move ua , 2 - ul )  | ( move ua - ul , 0 ; move ua , ul ; v0 = ua )  | ( move ua - ul , ua ; move ua , ul ; pen 4 / 3 )  | ( move ua - ul , ua ; v0 = ua + 4 ; move ua , ul )  | ( move ua - ul , 0 - ua ; ( move ua , ul ; move 0 , 4 ) )  | ( ( move ua - ul , 0 ; v0 = ua * 4 ) ; move ua , ul )  | ( move ua - ul , ua ; v0 = ua ; move v0 , v0 / ua )  
[2457] ( move ua , ua ; move ua + ul , 2 )  | ( move ua , ua * 2 ; move ua + ul , 2 )  | ( move ua , ua ; move ua + ul , ua + 2 )  | ( move ua , ua ; move ua + ul , 2 - ua )  | ( move ua , ua ; move ua + ul , ul + ul )  | ( move ua , ua ; move ul , 2 ; move ua , ua )  | ( move ua , ua ; move ua + ul , 2 ; v0 = ua )  | ( move ua , ua ; move ua , ul + ul ; move ul , 0 )  
[2458] ( move ul , 0 ; move ua , ua * ua )  | ( move ul , ua ; move ua , ua * ua )  | ( move ul , 0 ; pen ul ; move ua , ua * ua )  | ( move ul , ua ; move ua , ua * ua ; pen ul )  | ( move ul , 0 ; move ua , ua * ua ; v0 = ua )  | ( move ul , ua ; v0 = ua ; move ua , v0 * ua )  | ( move ul , 0 ; v0 = ua ; move v0 , ua * v0 )  | ( move ul , 0 ; v0 = ua * ua ; move ua , v0 - ua )  | ( v0 = ua ; ( move ul , 0 ; move v0 , v0 * v0 ) )  | ( pen ul ; ( move ul , 0 ; move ua , ua * ua ) ; v0 = ul )  | ( move ul , ua ; ( pen ul ; move 0 , ua ; move ua , ua * ua ) )  
[2459] ( move ul - ua , 0 ; move ua , ul )  | ( move ul - ua , ua + ua ; move ua , ul )  | ( move ul - ua , ua ; move ua , ul - ua )  | ( move ul - ua , ua ; ( move ua , ul ; pen 0 ) )  | ( v0 = ua ; move ul - v0 , v0 ; move v0 , ua + ul )  
[2460] ( move ul , 0 ; move ua + ul , ul )  | ( move ul , ua ; move ua + ul , ul )  | ( move ul , 0 ; move ua + ul , 2 - ul )  | ( move ul , ua * 2 ; move ua + ul , ul )  | ( move ul , ua ; move ua + ul , ua + ul )  | ( move ul , 0 ; move ul , ul ; move ua , 0 )  | ( move ul , 0 ; move ua + ul , ul ; pen 4 )  | ( move ul , ua ; move ua , ul ; move ul , 0 )  | ( move ul , ua ; move ua + ul , ul ; pen 0 )  | ( move ul , ua ; move ul , ul ; move ua , ua )  | ( pen ul ; move ul , ua ; move ua + ul , ul )  | ( move ul , 0 ; move ua + ul , ul ; v0 = ul )  | ( move ul , ua ; move ua + ul , ul ; pen ua - 2 )  | ( move ul , 0 ; v0 = ua + ul ; move v0 , ul )  | ( move ul , 0 ; move ua + ul , ul ; move ul , ua + 3 )  | ( ( move ul , ua ; move 0 , ul ) ; move ua + ul , ua )  | ( move ul , ua ; move ua + ul , ul ; move 0 , ua + ul )  
[2461] ( move 2 , ua ; move ua , ua * ua )  | ( move 3 - ul , 0 ; move ua , ua * ua ; pen ua )  | ( pen ul ; move ul + ul , ua ; move ua , ua * ua )  | ( move ul + ul , 0 ; move ua , ua * ua ; move 0 , ul )  | ( move ul , ua ; ( move ul , ua ; move ua , ua * ua ) )  | ( v0 = ua ; move 2 , v0 ; move v0 , v0 * v0 )  
[2462] ( move ua , ua ; move ua - ul , 2 )  | ( move ua , 0 ; move ua - 4 , 2 ; move 3 , 0 )  | ( move ua , ua ; move ua - ul , 2 ; v0 = ul / ua )  
[2463] ( move ul - ua , 0 ; move ul , ul )  | ( move ul - ua , ua ; move ul , ul )  | ( move ul - ua , ua ; move 2 - ul , ua + ul )  | ( move ul - ua , ua ; move ul , ul ; move 0 , 0 )  | ( move ul - ua , 0 ; move ul , ul ; v0 = ul )  | ( ( move ul - ua , ua ; pen ul ) ; move ul , ul )  | ( v0 = ua ; move ul - v0 , v0 ; move ul , ul )  | ( move ul - ua , 0 ; move ul , ul ; move 0 , ua + ul )  | ( move ul - ua , ua ; move ul , 2 - ul ; v0 = 2 - ul )  
[2464] ( move ua - ul , ua ; move ua , 2 )  | ( move ua - ul , 0 ; v0 = ua ; move v0 , 2 )  | ( ( move ua - ul , ua ; move ua , 2 ) ; v0 = 0 )  
[2465] ( move ua , ul ; move ua + ul , 2 )  | ( move ua , ul ; move ua + ul , 4 / 2 )  | ( move ua , ul ; move ua + ul , 3 - ul )  | ( pen ul ; move ua , ul ; move ua + ul , 4 / 2 )  
[2466] ( move ua , ua ; move ua - 2 , ul )  | ( move ua , ua ; move ua - 2 , ul ; v0 = ua + 4 )  
[2467] ( move ua + ul , ul ; move ua , 2 )  | ( move ua + ul , ul ; move ua , ul + ul )  | ( move ua , ul ; move ul , ua * 3 ; move ua , 2 )  | ( move ua + ul , ul ; move ua , ul + ul ; move 0 , ua - ul )  
[2468] ( move ua , ua ; move ul - ua , 2 )  | ( move ua , ua ; move ul - ua , ul + ul )  | ( move ua , ua ; move ul - ua , 2 ; pen 0 )  | ( move ua - ul , 2 ; move 0 - ua , ul - 3 )  | ( move ua , ua + ua ; ( move ul - ua , 3 - ul ; pen ul ) )  
[2469] ( move ua + ul , ua ; move 2 , ul )  | ( move ua + ul , 0 - ua ; move 2 , ul )  | ( move ua + ul , 0 ; move 3 - ul , ul )  | ( move ua + ul , ua * 3 ; move 2 , ul )  | ( move ua + ul , ua * 4 ; move 2 , ul )  | ( move ua + ul , ua + ua ; move 2 , ul )  | ( move ua + ul , ua ; move 2 , ul - ua )  | ( move ua + ul , ua ; move ul + ul , ul )  | ( move ua + ul , 0 ; pen ul ; move 2 , ul )  | ( move ua + ul , ua ; move 2 , ul ; pen ua )  | ( move ua + ul , ua ; move 4 - 2 , ua + ul )  | ( move ua + ul , 0 ; move ul , ul ; move ul , 0 )  | ( ( move ua , ua ; move ul , ua ) ; move 2 , ul )  | ( move ul , ua ; move ua , ua ; move 3 - ul , ul )  | ( move ua + ul , 0 ; v0 = ul ; move 2 , v0 )  | ( move ua + ul , ua ; v0 = ul ; move 2 , v0 )  | ( move ua + ul , ua ; v0 = ua ; move 4 / 2 , ul )  | ( ( move ua + ul , 0 ; pen ul ; move 2 , ul ) ; pen 3 / ua )  
[2470] ( move ul , 0 ; move ul - ua , ul )  | ( move ul , ua ; move ul - ua , ul )  | ( move ul , ua ; move ul - ua , ul - ua )  | ( move ul , 0 ; v0 = ul ; move ul - ua , ul )  | ( move ul , ua ; move ul - ua , ul ; v0 = 3 )  | ( move 0 - ul , 0 ; move ul , 0 ; move ul - ua , ul )  | ( move ul , ua + ua ; move ul - ua , ul ; v0 = 3 )  | ( move ul , 0 ; ( v0 = ul - ua ; move v0 , v0 ) )  
[2471] ( move 2 , ua ; move ua + ul , ul )  | ( move 2 , 0 ; move ua + ul , 3 - 2 )  | ( move 3 - ul , 0 ; move ua + ul , ul )  | ( move 2 , ua * 3 ; move ua + ul , ul )  | ( move ul + ul , ua ; move ua + ul , ul )  | ( move 2 , ua ; move ua , ul ; move ul , ua )  | ( move ul + ul , 0 ; move ua + ul , ul - ua )  | ( move ul + ul , ua * 3 ; move ua + ul , ul )  | ( move 2 , 0 ; move ul , ua + ul ; move ua , 0 )  | ( ( move 2 , ua ; move ua , ul ) ; move ul , 0 )  | ( move 3 - ul , ua ; move ua , ul ; move ul , ua )  | ( move ul , ua ; move ul , ua ; move ua + ul , ul )  | ( move 2 , ua ; v0 = ua + ul ; move v0 , ul )  | ( move 2 , ua ; v0 = ua + ul ; move v0 , v0 )  | ( move ul + ul , 0 ; move ul , ul - ua ; move ua , ua )  | ( v0 = 0 ; move 2 / v0 , v0 ; move ua + ul , ul )  | ( move ul + ul , ua ; ( move ua + ul , ul ; v0 = 4 ) )  | ( move 4 / 2 , 0 ; ( move ua , ul ; pen ul ; move ul , ua ) )  | ( ( pen ua ; pen 2 / 3 ) ; move 2 , ua ; move ua + ul , ul )  
[2472] ( move ul , 0 ; move ua - ul , ul )  | ( move ul , ua ; move ua - ul , ul )  | ( move ul , ua + ua ; move ua - ul , ul )  | ( move ul , ua ; move ua - ul , ul - ua )  | ( move ul - ua , ul ; move ul , ul + ul )  | ( move ul , 0 ; v0 = 4 ; move 4 + ul , ul )  | ( move ul , ua ; move ua - ul , ul ; move 0 , 0 )  | ( ( move 2 - ul , 0 ; move ua - ul , ul ) ; v0 = 3 )  
[2473] ( move ul , 0 - ul ; move ua , ul )  | ( move ul , ul - 2 ; move ua , ul )  | ( move ul , ua - ul ; move ua , ul )  | ( move 0 - ua , 0 ; move ul , ua + 2 )  | ( move 0 - ua , ua ; move ul , ua + 2 )  | ( move ul , ua - ul ; move ua , ua + ul )  | ( pen ul ; move ul , ul - 2 ; move ua , ul )  | ( move ul , ul - 2 ; ( move ua , ul ; pen ua ) )  | ( pen ul ; ( move ul , ua - ul ; move ua , ul ) )  | ( v0 = ua ; move ul , v0 - ul ; move ua , ul )  | ( move ul , 2 - 3 ; move ua , ua + ul ; v0 = 0 )  | ( move ul , 3 - 4 ; move 0 , ua - ul ; move ua , 2 )  | ( move ul , 3 - 4 ; ( v0 = ua ; move ua , ul ) )  | ( move ul , ua - ul ; v0 = ua ; move v0 , ul + v0 )  
[2474] ( move ua , ua * ua ; move ua , 2 )  | ( move ua , 4 / ua ; move ua , ua - 2 )  | ( move ua , 4 / ua ; move ua , ul - 3 )  | ( move ua , ua * ua ; move ua , ua + 2 )  
[2475] ( move ua , ua * ua ; move 2 , ul )  | ( move ua , ua * ua ; move 3 - ul , ul )  | ( move ua , ua * ua ; move 2 , ul ; pen 3 + 3 )  
[2476] ( move ua , ua - ul ; move 2 , ul )  | ( move ua , 0 - ul ; move 2 , ua + ul )  | ( move ua , ua - ul ; ( move 0 , ul ; move 3 - ul , ua ) )  
[2477] ( move ua , ul ; move 2 - ua , ul )  
[2478] ( move ua , ua * ua ; move ua , 3 )  | ( move ua , ua * ua ; pen ul ; move ua , 2 + ul )  | ( ( move ua , ua * ua ; move ua , 3 ) ; v0 = ua )  
[2479] ( move ua , 3 ; move ua , ua * ua )  | ( move ua , 3 ; v0 = ua ; move v0 , v0 * v0 )  
[2480] ( move ua - ul , 2 ; move ua , ul )  | ( move 0 , 0 ; move ua - ul , 2 ; move ua , ul )  | ( move ua - ul , 2 ; move ua , ul ; v0 = ua )  | ( move ua - ul , ul + ul ; pen ul ; move ua , ua + ul )  | ( move ua - ul , ua + 2 ; ( v0 = ua ; move v0 , ul ) )  
[2481] ( move ua , ul ; move 2 , ua * ua )  | ( move ua , ua + ul ; move 2 , ua * ua )  | ( move ua , ua + ul ; move 0 , 2 ; move 4 - ua , 3 )  | ( ( move ua , ul ; move ul + ul , ua * ua ) ; v0 = 3 )  
[2482] ( move ul , ua ; move ul - ua , 2 )  | ( move ul , 0 ; move ul - ua , ul + ul )  | ( move ua - ul , 3 - ul ; move ul , ul )  | ( move ul , ua ; move ul - ua , ul + ul )  | ( move ul , ua ; move ul - ua , 2 ; pen ul )  
[2483] ( move ua , 2 ; move ul - ua , ul )  | ( move ua , ua + 2 ; move ul - ua , ul )  | ( move ua , 2 ; move ul - ua , ul ; move 0 , 2 )  
[2484] ( move ul , ul ; move ua + ul , 2 )  | ( move ul , ul ; move ua + ul , 3 - ul )  | ( move ul , ul ; move ua + ul , ul + ul )  | ( move ul , ul ; move ua + ul , 2 ; v0 = 3 )  | ( move ul , ul ; move ua + ul , 2 ; v0 = 4 )  | ( move ul , ul - ua ; move ua + ul , 2 ; v0 = 3 )  | ( move ul , ul ; move ua + ul , 4 / 2 ; v0 = ua )  | ( v0 = ua ; ( move ul , ul ; move ua , 2 ; move ul , ua ) )  | ( ( move ul , ul ; v0 = ul ) ; move ul , 2 ; move ua , ua )  
[2485] ( move ul / ua , 0 ; move ua , ul )  | ( move ul - ua , ul ; move ul , 3 )  | ( move ua , ul ; move ul / 3 , ul )  | ( move ul / ua , ua ; move ua , ul )  | ( move ul / 3 , ua - ul ; move ua , 2 )  | ( move ua , ua + ul ; move 2 / ua , ul )  | ( move ul / ua , ua ; move ua , ua + ul )  | ( move ua , ua + ul ; move ul / 3 , ua + ul )  | ( move ul / ua , 0 ; v0 = ul ; move ua , v0 )  | ( move ul / ua , 0 ; move ua , ul ; v0 = ua - ul )  | ( ( move ul / ua , ua * 2 ; move ua , ul ) ; pen ua )  
[2486] ( move ua , ua - 3 ; move ua , ul )  | ( move ua , ua - 3 ; move ua , 2 - ul )  | ( ( move ua , ul - 4 ; move 0 , ul ) ; move ua , ua + ua )  
[2487] ( move ul , 2 ; move ua , ua * ua )  | ( ( move ul , 2 ; v0 = ua + 2 ) ; move ua , v0 * ua )  
[2488] ( move ua , ua ; move ua + ul , 4 )  | ( move ua , 0 ; move ul , 4 ; move ua , ua )  | ( move ua , 0 ; move ua - ul , 4 ; move 2 , ua )  | ( move ua , ua ; move ua + ul , 4 ; v0 = 2 )  | ( move ua , ua ; move ua , 3 + ul ; move ul , 0 )  | ( pen ul / ua ; move ua , 0 ; move ua + ul , 4 )  | ( move ua , ua ; move ua + ul , 4 ; v0 = 3 + 3 )  
[2489] ( move ua - ul , ul ; move ua , 2 )  | ( move ua - ul , ul ; move ua , ul + ul )  | ( ( move ua - ul , ul ; move ua , 2 ) ; v0 = ul ; pen ul )  
[2490] ( move ua , 3 ; move ua , ua - ul )  | ( move ua , 3 ; v0 = 0 ; move ua , v0 - ul )  
[2491] ( move ul - ua , 2 ; move ua , ul )  | ( move ul - ua , 2 ; move ua , 2 - ul )  | ( move ul - ua , ul + ul ; move ua , ul )  | ( move 0 , 0 ; move ul - ua , 2 ; move ua , ul )  
[2492] ( move ua + ul , ul ; move 2 , ul )  | ( move ua + ul , ul ; move ul + ul , ul )  | ( move ua , ul ; move ul , ua ; move 2 , 3 - 2 )  | ( move ua + ul , ul ; v0 = 2 ; move 2 , ul )  | ( move ua + ul , ul ; v0 = ul ; move 2 , ul )  | ( move ua + ul , ul ; move 2 , ul ; move v0 , 4 )  | ( move ua + ul , ul ; move 2 , ul ; v0 = 2 + ul )  | ( ( move ul , ul ; move ua , ua ) ; move 4 / 2 , ul )  | ( v0 = ua + ul ; move v0 , v0 ; move 2 , v0 )  | ( move ua + ul , ua + ul ; move 2 , ul ; v0 = ul )  | ( pen 2 - ul ; ( move ul , ul ; move ua , 0 ; move 2 , ul ) )  
[2493] ( move 2 , ul ; move ua + ul , ul )  | ( move 2 , ul ; move ua + ul , ul - ua )  | ( move 3 - ul , ul ; move ua + ul , ul )  | ( move ul + ul , ul ; move ua + ul , ul )  | ( move 2 , ul ; move ua + ul , ul ; pen 0 )  | ( move 2 , ul ; move ua + ul , ul ; pen ua )  | ( move 2 , ul ; move ua + ul , ul ; pen ul )  | ( pen ul ; move 2 , ul ; move ua + ul , ul )  | ( move 3 - ul , ul ; move ua + ul , ul - ua )  | ( move 2 , ul ; move ua + ul , ul ; v0 = ua )  | ( move 2 , ul ; ( move ua + ul , ul ; pen ul ) )  | ( move 3 - ul , ul ; move ua , ul ; move ul , ua )  | ( move ul , ul ; move ul , ua ; move ua + ul , ul )  | ( move ul + ul , ul ; move ua , ul ; move ul , ua )  | ( pen ul ; move ul + ul , ul ; move ua + ul , ul )  | ( ( move 2 , ul ; move ua + ul , ul ) ; v0 = 3 )  | ( move 2 , ul ; move ua , ua + ul ; move ul , ua * 3 )  | ( move 2 , ul ; ( move ua + ul , ul ; pen ul + ul ) )  | ( move ul + ul , ul ; v0 = ul ; move v0 + ua , v0 )  | ( move ul + ul , ul ; v0 = ua + ul ; move v0 , v0 )  | ( move ul , ua + ul ; move ul , ua + ua ; move ua + ul , ul )  | ( move ul + ul , ua + ul ; pen ul ; move ua + ul , ua + ul )  
[2494] ( move ul , ua - 2 ; move ua , ul )  | ( move ul , ul - 3 ; move ua , ul )  | ( move ul , ul - 3 ; move ua , ul - ua )  | ( move 0 , 0 ; move ul , ul - 3 ; move ua , ul )  | ( move ul , ua - 2 ; v0 = 4 ; move ua , ul )  | ( move ul , ua - 2 ; v0 = ua ; move v0 , ul )  | ( v0 = ul ; move v0 , ua - 2 ; move ua / v0 , v0 )  
[2495] ( move 3 , ua ; move ua , ua * ua )  | ( move 2 + ul , 0 ; move ua , ua * ua )  | ( move 3 , ua ; move ua , ua * ua ; pen ul - ua )  | ( move ul + ul , 0 ; move 2 - ul , 0 ; move ua , ua * ua )  
[2496] ( move ua + ul , ul ; move ua , 3 )  | ( move ua + ul , ua + ul ; move ua , 3 )  | ( move ua + ul , ul ; move ua , ua + 3 )  | ( move ul , ul ; move ua , ua * 4 ; move ua , 3 )  | ( move ua + ul , ul ; move ua , 3 ; v0 = ul )  | ( pen ua / 4 ; move ua + ul , ul ; move ua , 3 )  | ( pen ul / ua ; ( move ul , ul ; move ua , 0 ) ; move ua , 3 )  
[2497] ( move ua + ul , ul ; move ul , 2 )  | ( move ua + ul , 4 - 3 ; move ul , 2 )  | ( move ua + ul , ul ; move ul , 2 - ua )  | ( move ua + ul , ul ; move ul , 3 - ul )  | ( move ua + ul , ul ; move ul , ul + ul )  | ( move ua + ul , ul ; pen ul ; move ul , 2 )  | ( move ua + ul , 2 - ul ; move 2 - ul , 2 )  | ( move ua , ul ; move 4 - 3 , 0 ; move ul , 2 )  | ( move ua + ul , ul ; move ul , 2 ; v0 = 0 )  | ( move ua , ul - ua ; move ul , 0 ; move ul , 2 )  | ( ( move ua + ul , ul ; move ul , 2 ) ; move ul , ul )  
[2498] ( move ua , ul ; move ua - ul , 2 )  | ( move ua , ul ; pen ul ; move ua - ul , 2 )  
[2499] ( move 2 - ua , ul ; move ua , ul )  | ( move 2 - ua , ul ; move ua , ul ; pen 0 )  | ( move 2 - ua , ul ; ( move ua , ul ; pen 0 ) )  
[2500] ( move ul , 2 ; move ua + ul , ul )  | ( move ul , 2 ; move ua + ul , 3 - 2 )  | ( move ul , 2 ; move ua + ul , ua + ul )  | ( move ul , 2 ; move ua + ul , ul - ua )  | ( move ul , 3 - ul ; move ua + ul , ul )  | ( move ul , ul + ul ; move ua + ul , ul )  | ( move ul , 2 ; move ul , ul ; move ua , 0 )  | ( move ul , 2 ; move ul , ul ; move ua , ua )  | ( move ul , ua + 2 ; move ua + ul , ul - ua )  | ( move ul , 2 ; move ul , ul - ua ; move ua , 0 )  | ( move ul , ul + ul ; move ul , ul ; move ua , 0 )  | ( move ul , 2 ; v0 = ul ; move v0 + ua , ul )  | ( move ul , 2 ; v0 = ua + ul ; move v0 , v0 )  | ( move ul , ul + ul ; move ua + ul , ul ; v0 = 0 )  | ( v0 = ul ; move v0 , 2 ; move ua + v0 , v0 )  | ( move ul , 3 - ul ; move ua , ul ; move ul , ua * 3 )  | ( move ul , ul + ul ; move ul , ua + ul ; move ua , 0 )  | ( move ul , ul + ul ; ( move ua + ul , ul ; pen ua ) )  | ( ( move ul , 2 ; move ua + ul , ul ) ; pen ul ; pen 3 )  | ( move ul , 2 ; ( v0 = ul ; move v0 + ua , v0 ) )  | ( move ul , ua + 2 ; move ua + ul , ua + ul ; v0 = 0 )  | ( move ul , ul + ul ; ( pen ul ; move ua + ul , ul ) ; pen 0 )  
[2501] ( move ua , 2 ; move ua - ul , ul )  | ( pen ul ; move ua , 2 ; move ua - ul , ul )  | ( move ua , 2 ; move 0 , ul ; move ua - ul , ua )  
[2502] ( move ua , ul ; move ua + ul , 3 )  | ( move ua , ul ; move ua + ul , 2 + ul )  | ( move ua , ul ; move ul , 3 ; move ua , 0 )  | ( move ua , ul ; v0 = ua ; move ul + v0 , 3 )  | ( move ua , ul ; move ua + ul , 4 - ul ; v0 = 0 )  | ( move ua , ul ; move ua + ul , 3 ; v0 = 3 - ul )  | ( ( move ua , ul ; pen ul ) ; move ua + ul , 4 - ul )  | ( ( move ua , ul ; move ul , 3 ) ; v0 = ul ; move ua , ua )  | ( ( pen ul ; move ua , ul ; move ul , ua + 3 ) ; move ua , ua )  
[2503] ( move ul - ua , ul ; move 2 , ul )  | ( move ul - ua , ul ; move 4 - 2 , ul )  | ( move ul - ua , ul ; v0 = ul ; move 2 , ul )  | ( move ul - ua , ul ; ( move ua / 3 , ul ; v0 = 3 ) )  | ( v0 = ul ; move ul - ua , v0 ; move v0 * 2 , v0 )  
[2504] ( move ua , ul ; move ua , ua - 4 )  | ( v0 = 0 ; move ua , ul ; move ua , v0 - 4 )  | ( ( v0 = ul ; move ua , ul ) ; move ua , ua - 4 )  
[2505] ( move ua + ul , 3 ; move ul , ul )  | ( move ua + ul , ua + 3 ; move ul , ul )  | ( move ua + ul , 3 ; move ul , ua + ul )  | ( move ua + ul , 2 + ul ; move ul , ul )  | ( move ua , 3 ; move ul , ua ; move ul , ul )  | ( move ua + ul , 3 - ua ; move ul , ua + ul )  | ( move ua + ul , 3 ; move ul , ul ; v0 = ul )  | ( move ul , ua ; move ua + ul , 3 ; move ul , ul )  | ( pen ul / ua ; move ua + ul , 2 + ul ; move ul , ul )  | ( ( move ua , ua + 3 ; move ul , ua * 3 ) ; move ul , ul )  
[2506] ( move ul - ua , ua ; move ul , 3 )  | ( move ul - ua , ua ; move ul , 3 ; v0 = 0 )  | ( move ua , ua ; move ul / ua , ul ; v0 = ul )  
[2507] ( move ua - ul , ul ; move 2 , ul )  | ( move ua - ul , ul ; move ul + ul , 2 - ul )  | ( v0 = ul ; move ua - v0 , v0 ; move 2 , v0 )  
[2508] ( move ua + 3 , ul ; move ul , ul )  | ( move ua + 3 , ul ; move ul , 2 - ul )  | ( move ua + 3 , ul ; move ul , ua + ul )  | ( move 3 , ul ; move ua , ua ; move ul , ul )  | ( move ua + 3 , ul - ua ; move ul , ua + ul )  | ( move 3 , ul ; move ua , 0 - ua ; move ul , ul )  | ( pen ul ; move ua + 3 , ul - ua ; move ul , ul )  | ( pen ul / ua ; move ua + 3 , ul ; move ul , ul )  | ( move 3 , ul ; ( move ua , ua ; move ul , ul ) ; pen 4 + 3 )  
[2509] ( move 3 , ua ; move ul , ua * ua )  | ( move 2 + ul , 0 ; move ul , ua * ua )  | ( move 3 , ua ; move ul , ua * ua ; pen 0 )  | ( move 3 , 0 ; move ul , ua * ua ; pen ul )  | ( move 3 , 0 ; move ul , ua * ua ; v0 = ul )  | ( move 3 , ua ; move ul , ua * ua ; v0 = 4 )  | ( move 3 , 0 ; v0 = 2 ; move ul , v0 * 4 )  
[2510] ( move 2 - ua , ul ; move ul , ul )  | ( move 2 - ua , ul ; move ul , ua + ul )  | ( move 2 - ua , ul ; move ul , ul ; move 0 , ua )  
[2511] ( move ua , ul - 2 ; move ul , ul )  | ( move ua , ua - ul ; move ul , ul )  | ( move ua , ul - 2 ; move ul , ua + ul )  | ( move ua , ua - ul ; move ul , ua + ul )  | ( move ua , 0 - ul ; pen ul ; move ul , ul )  | ( move ua , 0 - ul ; ( move ul , ul ; pen 0 ) )  | ( move ua , ua - ul ; move ul , ul ; move 0 , ua )  | ( move ua , ul - 2 ; move ul , ul ; pen ul + ul )  | ( move ua , ul - 2 ; v0 = ul ; move v0 , v0 )  | ( move ua , ua - ul ; v0 = ul ; move v0 , v0 )  | ( move ua , 2 - 3 ; move ul , ul ; v0 = ua * ua )  | ( ( move ua , ua - ul ; v0 = ua + ul ) ; move ul , ul )  | ( pen 0 - ua ; pen ul ; ( move ua , 0 - ul ; move ul , ul ) )  | ( ( move 0 , ua ; move ua , ua - ul ; pen ul ) ; move ul , ul )  
[2512] ( move 3 - ua , ul ; move ua , ul )  | ( move 3 - ua , ul - ua ; move ua , ul )  | ( pen ul / ua ; move 3 - ua , ul ; move ua , ul )  | ( move 3 - ua , ul ; move ua , ul ; ( pen ua ; v0 = 0 ) )  
[2513] ( move ua + ul , ul ; move ua , 4 )  | ( move ua + ul , ul ; move ua , 2 + 2 )  | ( pen ul ; move ua + ul , ul ; move ua , 4 )  | ( move ua + ul , ul ; move ua , 3 + ul ; v0 = 2 - ua )  
[2514] ( move ul , ul ; move 2 - ua , ul )  | ( move 2 - ul , ul ; move 2 - ua , ul )  | ( move ul , ua + ul ; move 2 - ua , ul )  | ( move ul , ul ; move 2 - ua , ul ; pen 0 )  | ( move ul , ul ; move 2 - ua , ul ; pen 3 - ul )  
[2515] ( move ua , ul ; move 3 - ua , ul )  | ( move ua , ul ; move ul - 4 , ul )  | ( move ua , ul ; move 0 - 3 , ul ; v0 = 0 )  | ( move ua , ul ; v0 = ua ; move ul - 4 , ul )  
[2516] ( move 2 , ul ; move ul - ua , ul )  | ( move 2 , ul ; move ul - ua , ul ; pen ua )  
[2517] ( move ul , 3 ; move ua , ua * ua )  | ( v0 = ua ; move ul , 3 ; move v0 , v0 * v0 )  | ( move ul , 4 - ul ; v0 = ua ; move v0 , v0 * v0 )  
[2518] ( move ua , ua * ua ; move ua , 4 )  | ( v0 = ua ; move v0 , ua * ua ; move v0 , 3 + ul )  
[2519] ( move 3 , ul ; move ua , ua * ua )  | ( move 2 + ul , ul ; move ua , ua * ua )  | ( move ul , ul ; move ul + ul , ua ; move ua , ua * ua )  
[2520] ( move ua , ul ; move ua + ul , 4 )  | ( move ua , ul ; pen ul ; move ua + ul , 4 )  | ( move ua , ul ; ( move ua , 4 ; move ul , 0 ) )  | ( move ua , ul ; move ul , ua + 4 ; move ua , 0 )  | ( ( move ua , ul ; move ua , 4 ) ; move ul , ua )  | ( v0 = ua + ul ; move ua , v0 ; move v0 , 4 )  | ( move ua , ul ; move 0 , 3 ; move ua + ul , ua + ul )  | ( move ua , ul ; ( v0 = ul ; move ua + v0 , 4 ) )  | ( move ua , ul ; ( move ua , 4 ; pen ul ; move ul , ua * 3 ) )  
[2521] ( move ua , ul ; move ua - 3 , ul )  | ( move ua , ul ; move ua - 3 , ua + ul )  | ( pen ul ; move ua , ul ; move ua - 3 , ul )  | ( ( move ua , ul ; move ua - 3 , ul ) ; pen ul )  | ( move ua , ul ; ( move ua - 3 , ul ; move 0 , ul ; pen ul ) )  
[2522] ( move ua , ua * ua ; move 3 , ul )  
[2523] ( move ua + ul , ul ; move 3 , ul )  | ( move ua + ul , ul ; move 2 + ul , ul )  | ( move ua , ul ; move ul , ua ; move 3 , ul )  | ( v0 = ua + ul ; move v0 , v0 ; move 3 , ul )  | ( move 0 - ul , ul ; move ua + ul , 0 ; move 3 , ul )  | ( ( move ua + ul , ul ; v0 = ul ) ; move 3 , ul )  | ( move ua + ul , ul ; ( move ul , ul ; move 2 , ua ) )  | ( move ua + ul , 2 - ul ; move 3 , ul ; v0 = 4 + 3 )  | ( move ua + ul , ul - ua ; move 3 , ul ; v0 = ul / ua )  
[2524] ( move ul , ul ; move ul - ua , 2 )  | ( move ua - ul , 3 ; move ul , ul )  | ( move ul , ul ; move ul - ua , ul + ul )  | ( move ul , ul ; move ul - ua , 2 ; pen 0 )  | ( move ul , ul ; move 0 , ul ; move ul - ua , ul )  
[2525] ( move ua , 3 ; move ul - ua , ul )  
[2526] ( move 3 , ua * ua ; move ua , ul )  | ( move 3 , ua * ua ; move ua , ua + ul )  | ( move 2 + ul , ua * ua ; move ua , ua + ul )  | ( move 3 , ua * ua ; ( move ua , ul ; v0 = 2 ) )  | ( ( move 3 , ua * ua ; move ua , ul - ua ) ; v0 = 2 )  
[2527] ( move ua , ua - 3 ; move ul , ul )  | ( move ua , ul - 4 ; move ul , ul )  | ( move ua , ua - 3 ; move ul , ua + ul )  | ( v0 = ul ; move ua , ul - 4 ; move ul , v0 )  | ( move 0 , ua - 3 ; ( move ua , ua ; move ul , ul ) )  | ( move ua , ua - 3 ; v0 = 2 - ul ; move v0 , v0 )  
[2528] ( move ua - 4 , ua ; move ua , ul )  | ( move ua - 4 , ua ; move 4 + 2 , ul )  | ( pen ul ; ( move ua - 4 , ua ; move ua , ul ) )  
[2529] ( move 3 - ua , ua ; move ul , ul )  | ( move 3 - ua , 0 ; move ul , ul ; v0 = ul )  | ( pen ul ; ( move 3 - ua , 0 ; move ul , ul ) )  | ( move 3 - ua , ua ; v0 = ul ; move v0 , v0 )  | ( move 3 - ua , 0 ; ( move ul , ul ; move 0 , 4 + ul ) )  
[2530] ( move 2 / ua , ua ; move ua , ul )  | ( move ul / 3 , ua ; move ua , ul )  | ( move ul / 4 , ua ; move ua , ul )  | ( move ul / 3 , ua ; move ua , ua + ul )  | ( move 2 / ua , ua ; pen ul ; move ua , ua + ul )  | ( move ul / 3 , ua ; v0 = 4 + 4 ; move ua , ul )  | ( move ul / 3 , 0 ; move ua , ua + ul ; pen 2 / 4 )  
[2531] ( move ua , ul / ua ; move ua , 2 )  | ( move ua , ul / ua ; move ua , ul + ul )  | ( move ua , ul / ua ; move 0 , ua + ua ; move ua , 2 )  
[2532] ( move ul , ua ; move 3 , ua * ua )  | ( move ul , ua + ua ; move 2 + ul , ua * ua )  | ( move ul , ua ; move 3 , ua * ua ; pen 3 * 2 )  | ( move ul , ua ; move 3 , ua * ua ; v0 = ul )  | ( move ul , ua ; ( pen ul ; move 2 + ul , ua * ua ) )  | ( v0 = ua * ua ; move ul , ua * 4 ; move 3 , v0 )  
[2533] ( move ua , ua ; move ul - 3 , ul )  | ( ( pen ul ; move ua , 0 ) ; move ul - 3 , ul )  | ( move ua , ua ; ( move 2 - 4 , ul ; v0 = ua ) )  | ( move ua , 0 ; ( v0 = ul - ua ; move ul - 3 , v0 ) )  
[2534] ( move ua - 3 , ul ; move ua , ul )  | ( move ua - 3 , ua + ul ; move ua , ul )  | ( move ua - 3 , ul - ua ; move ua , ul )  | ( move ua - 3 , ul ; move ua , ul ; pen ua )  | ( move ua - 4 , ul ; ( move ul , ua * 2 ; move ua , ul ) )  
[2535] ( move 2 , ul ; move ua - ul , ul )  | ( move 2 , ul ; move ua - ul , ul - ua )  | ( move 3 - ul , ul ; move ua - ul , ul )  | ( move ul + ul , ul ; move ua - ul , ul )  | ( move ul + ul , ul ; pen ul ; move ua - ul , ul )  | ( move 2 , ul ; move ua - ul , ua + ul ; move 0 , 0 )  
[2536] ( move ul , 2 / ua ; move ua , ul )  | ( move ul , 2 / ua ; move ua , ua + ul )  | ( v0 = ua ; move v0 / ua , 2 / ua ; move v0 , ul )  
[2537] ( move ua + ul , 4 ; move ul , ul )  | ( move ua + ul , 4 ; move ul , ua + ul )  | ( move ul , 4 ; move ua , ua ; move ul - 2 , 4 )  | ( move ua + ul , 4 ; move ul , ul ; pen 3 - ua )  | ( move ua + ul , 4 - ua ; v0 = ul ; move v0 , ul )  | ( move ua + ul , 4 ; v0 = ul ; move ul , v0 * v0 )  
[2538] ( move ua - ul , ul ; move 3 , ul )  | ( move ua - ul , ul ; move 3 , 4 - 3 )  | ( move ua - ul , ul ; move 2 + ul , ul )  | ( move 3 , ul ; move ua - 4 , 0 ; move 3 , ul )  | ( move ua - 2 , ul ; move ul , ua ; move 3 , ul )  | ( move ua - 2 , ul ; move ul , ua ; move 3 , 4 - 3 )  | ( pen ul ; move ua - ul , ul - ua ; move 3 , ua + ul )  
[2539] ( move ua , ul ; move ua , ul - 4 )  | ( move ua , ul ; move ua , ul - 4 ; move 0 , ua )  | ( pen ul ; ( move ua , ul ; move ua , ul - 4 ) )  | ( move ua , ul ; v0 = ul ; move ua , v0 - 4 )  | ( move 0 , ua ; ( move ua , ul ; move ua , ul - 4 ) )  | ( ( pen ul ; move ua , ul ) ; move ua , ul - 4 ; pen 0 - 3 )  
[2540] ( move ua , ua ; move ua , ua / 4 )  | ( pen ul ; move ua , ua ; move ua , ua / 4 )  
[2541] ( move ua , ua * ua ; move 4 , ul )  | ( move ua , ua * ua ; move 4 , ul ; v0 = ul )  | ( move ua , ua * ua ; v0 = ua + ul ; move 4 , ul )  
[2542] ( move 3 , ul ; move ul , ua - ul )  | ( move 3 , ua + ul ; move ul , ul - 2 )  | ( move ul , ua / 2 ; ( move 4 - ul , ul ; pen 0 ) )  | ( move 3 , ua + ul ; v0 = 3 - ul ; move ul , ul - v0 )  
[2543] ( move 4 - ua , ul ; move ua , ul )  | ( move 4 - ua , ul ; move ua , ul ; pen ul )  | ( move 4 - ua , ul ; v0 = ul ; move ua , v0 )  
[2544] ( move ua , ul ; move 2 , ul / ua )  | ( move ua + ul , ul ; move ul , ul / 4 )  | ( pen ul ; ( move ua , ul ; move 2 , ul / ua ; pen ua + 2 ) )  
[2545] ( move 4 , ua * ua ; move ua , ul )  
[2546] ( move 3 - ua , ul ; move ul , ul )  | ( move 3 - ua , ul ; move ul , ul ; pen ul )  | ( move 3 - ua , ul ; v0 = ul ; move v0 , ul )  | ( move 3 - ua , ul ; move ul , ua + ul ; v0 = ul )  
[2547] ( move ua - 3 , ul ; move ul , ul )  | ( move ua - 3 , ul ; move ul , 2 - ul )  | ( move ua - 3 , ua + ul ; move ul , ul )  
[2548] ( move 2 , ul / ua ; move ua , ul )  | ( move 3 - ul , ul / ua ; move ua , ul )  | ( move 2 , ul / ua ; move ua , ua + ul ; pen ul )  | ( move 2 , ul / ua ; v0 = ul ; move ua / v0 , v0 )  
[2549] ( move ul , ul / ua ; move ua , 2 )  | ( move ul , ul / ua ; move ua , 2 ; pen ul )  | ( move ul , ul / ua ; move ua , 2 ; move ul - ua , ua )  
[2550] ( move ul - ua , 3 ; move ul , ul )  | ( move ul , ul ; move ua - ul , 2 ; move ul , ua - 3 )  
[2551] ( move 4 , ua ; move ua - ul , ul )  
[2552] ( move ul , ul ; move ua - 3 , ul )  | ( move ul , 2 - ul ; move ua - 3 , ul )  | ( move ul , ua + ul ; move ua - 3 , ul )  | ( move ul , ul ; move ua - 3 , ul ; v0 = ua )  | ( v0 = ul ; ( move v0 , ul ; move ua - 3 , v0 ) )  
[2553] ( move ua , ul / ua ; move ul , 2 )  
[2554] ( move ul , 4 ; move ua + ul , ul )  | ( move ul , 4 ; move ua + ul , 2 - ul )  | ( move ul , 4 ; pen ul ; move ua + ul , ul )  | ( move ul , 4 ; ( move ua + ul , ul ; pen ul ) )  | ( move ul , 4 ; v0 = ua + ul ; move v0 , v0 )  | ( move ul , 3 + ul ; ( move ul , ul ; move ua , 0 ) )  | ( v0 = ua + ul ; move ul , 2 * 2 ; move v0 , ul )  | ( ( move ul , 3 + ul ; move ua + ul , ul ; pen ul ) ; pen ua )  
[2555] ( move 3 , ua * ua ; move ul , ul )  | ( v0 = ua ; move 3 , v0 * v0 ; move ul , ul )  
[2556] ( move ua , ul ; move 4 - ua , ul )  | ( move ua , ua + ul ; move 4 - ua , ul )  
[2557] ( move ua , ul ; move 4 , ua - ul )  | ( move 4 , ua / 2 ; move ua , ua + ul )  | ( move ua , ul ; move 3 , ul - 2 ; move ul , 0 )  | ( move 3 + ul , ua / 2 ; move ua , ua + ul ; pen 0 )  | ( ( move ua , ua + ul ; move 4 , ua - ul ) ; pen ul )  
[2558] ( move ua , ua ; move ua / 3 , ul )  | ( pen 2 ; move ua , ua ; move 2 , ul )  | ( pen ua - 4 ; move ua , 0 ; move ua / 3 , ul - ua )  
[2559] ( move ua - 4 , ul ; move ua , ul )  | ( move ua - 4 , ul ; move ua , ul ; pen 3 )  | ( move ua - 4 , ul ; move ua , ul ; v0 = 4 )  | ( move 2 / ua , ua + ul ; move 2 , 0 ; move ua , ul )  
[2560] ( move ua , ul ; move ua , ua / 3 )  | ( move ua , ul ; move ua , ua / 3 ; v0 = ul )  
[2561] ( move ul , 3 ; move ua - ul , ul )  | ( move 0 - ul , ua ; move ua - ul , 4 )  | ( ( move 0 , 3 ; move ul , 0 ) ; move ua - ul , ul )  
[2562] ( move ua - ul , ul ; move ua , 4 )  | ( pen ul ; move ua - ul , ul ; move ua , 4 )  | ( move ua - ul , ua + ul ; move ua , 4 ; v0 = 2 )  | ( move ua - ul , ul ; v0 = ua + ul ; move ua , 4 )  | ( ( move ua - ul , ul ; move ua , 3 + ul ; pen ua ) ; pen ul )  
[2563] ( move ul - ua , ul ; move 3 , ul )  | ( move ul - ua , ua + ul ; move 3 , ul )  | ( move ul - ua , ua + ul ; move 3 , ul ; pen 4 )  | ( move ul - ua , ul ; pen 4 / ua ; move 2 + ul , ul )  | ( ( v0 = ul - ua ; move v0 , v0 ) ; move 3 , v0 )  
[2564] ( move ua , ul ; move ua - 4 , ul )  | ( move ua , ul ; move ua - 4 , 2 - ul )  | ( move ua , ul ; v0 = ul ; move ua - 4 , v0 )  
[2565] ( move ul , ul ; move 3 - ua , ul )  | ( move ul , ul ; move 3 - ua , ul - ua )  | ( pen ul ; move ul , ul ; move 3 - ua , ul )  | ( move 0 , ul ; move ul , ua ; move 3 - ua , ul )  | ( move ul , ul ; ( v0 = 2 ; move 3 - ua , ul ) )  
[2566] ( move ua , ul ; move 4 , ua * ua )  
[2567] ( move 4 , ul ; move ua , ua * ua )  
[2568] ( move 3 , ul ; move ul - ua , ul )  | ( move 3 , ua + ul ; move ul - ua , ul )  | ( move 3 , ul ; move ul - ua , ua + ul )  | ( move 3 , ul ; move ul - ua , ul - ua )  
[2569] ( move ul , ua * ua ; move ua , 4 )  | ( move ul , ua * ua ; move ua , 3 + ul )  | ( move ul , ua * ua ; move ua , 3 + ul ; v0 = 3 * 2 )  
[2570] ( move ua , ul ; move ua , ua / 4 )  | ( move ua , ul ; move ua , ua / 4 ; v0 = ua )  
[2571] ( move ul - ua , ul ; move ul , 4 )  | ( move ul , 2 ; move ua - ul , 0 - ul )  | ( move ul - ua , 2 - ul ; move ul , 4 )  | ( move ul - ua , ul ; move ul , 4 ; pen ul )  | ( v0 = 4 ; move ul - ua , ul ; move ul , v0 )  
[2572] ( move ul , ua / 3 ; move ua , ul )  
[2573] ( move ul - ua , ul ; move 4 , ul )  | ( move ul - ua , ul ; move 2 * 2 , ul )  | ( move ul - ua , ul ; move 4 , 2 - ul )  | ( move ul - ua , ul ; move 3 + ul , ul )  | ( move ul - ua , ul ; move 4 , ul - ua )  | ( move ul - ua , ul ; pen ul ; move 4 , ul )  | ( move ul - ua , ul ; move 3 , ul ; move ul , 0 )  | ( move ul - ua , ul ; v0 = ul ; move 4 , ul )  | ( move ul - ua , ul ; v0 = ul ; move 4 , v0 )  | ( move ul - ua , ul ; ( move 3 + ul , ul ; pen 0 ) )  
[2574] ( move 4 , ul ; move ul - ua , ul )  | ( move 4 , ul ; v0 = ul - ua ; move v0 , ul )  | ( move 3 + ul , ul ; move ul - ua , ua + ul ; pen ua )  | ( ( move 4 , ul ; v0 = ul ) ; move v0 - ua , ul )  
[2575] ( move 4 , ul ; move ua - ul , ul )  | ( move 3 + ul , ul ; move ua - ul , ul )  | ( move 4 , ul - ua ; move ua - ul , 2 - ul )  | ( pen ul / 2 ; move 4 , ul ; move ua - ul , ul )  | ( move 3 , ul ; move ul , ua ; move ua - ul , ul )  
[2576] ( move 4 + ul , ul ; move ul , ul )  | ( move 3 + 2 , 2 - ul ; move ul , ul )  | ( move 4 + ul , ul ; move ul , ua + ul )  | ( move 4 , ul ; move ul , ua ; move ul , ul )  | ( move 3 - ul , ul ; move 3 , 0 ; move ul , ul )  | ( move 3 + 2 , ul ; move ul , ul ; v0 = ul )  | ( move 3 + 2 , ul ; ( pen ul ; move ul , ul ) )  | ( move 4 , ul ; ( move ul , ua ; move ul , ul ) )  | ( move 3 , ul ; move ul + ul , ua ; move ul , ul )  | ( ( move 3 , ul ; move 2 , ua * 4 ) ; move ul , ul )  | ( pen ul ; ( move 3 + 2 , ul ; move 2 - ul , ul ) )  | ( move 0 , ua ; ( move 4 + ul , ul ; move ul , ul ) )  | ( move 3 , ua + ul ; move 2 , ua ; move ul , ua + ul )  | ( v0 = ul ; move v0 + 4 , v0 ; move v0 , v0 )  | ( move 4 + ul , ul ; move 2 - ul , 2 - ul ; v0 = 4 )  | ( move 4 + ul , 4 - 3 ; move ul , ul ; move ul / 4 , 3 )  
[2577] ( move ul , ua * ua ; move 4 , ul )  | ( move ul , ua * ua ; move 2 + 2 , ul )  | ( move ul , ua * ua ; move 4 , ul ; v0 = 0 )  | ( move ul , ua * ua ; move 2 , ul ; move ul + ul , ua + ua )  | ( move ul , ua * ua ; move ul + ul , ua + ul ; move 2 , ua )  
[2578] ( move ul - 4 , ul ; move ua , ul )  | ( move ul - 4 , ul ; move ua , ul ; v0 = 0 )  | ( move ul - 4 , ul - ua ; move ua , ul ; pen 0 )  
[2579] ( move ul - ua , 4 ; move ul , ul )  | ( move ul - ua , ua + 4 ; move ul , 2 - ul )  | ( move ul - ua , 4 ; v0 = ul ; move v0 , v0 )  | ( move ul - ua , 4 ; move ul , ul ; move 0 , 3 * 2 )  | ( move ul - ua , 4 ; move ul , ul ; move 0 , 2 - ul )  | ( v0 = ul - ua ; move v0 , v0 + 3 ; move ul , v0 )  
[2580] ( move ua , ul ; move 3 , ul / ua )  | ( move ua , ua + ul ; move 2 + ul , ul / ua )  
[2581] ( move ua / 4 , ua ; move ua , ul )  | ( move ua / 4 , ua ; move ua , ul ; pen 0 )  | ( move ua / 4 , ua ; move ua , ul ; pen 2 + ul )  | ( v0 = ua ; move v0 / 4 , 0 ; move v0 , ul )  
[2582] ( move 3 , ul / ua ; move ua , ul )  | ( move 3 , ul / ua ; move ua , ul ; v0 = ua )  
[2583] ( move 3 , ul ; move ua , ul / ua )  | ( move 2 + ul , ul ; move ua , ul / ua )  | ( v0 = ul / ua ; move 3 , ul ; move ua , v0 )  
[2584] ( move ul , ul ; move ul - ua , 4 )  | ( move ul , ul ; move ul - ua , 4 ; pen ul )  | ( pen ul ; move ul , ul ; move ul - ua , 4 )  
[2585] ( move ul , 4 ; move ua - ul , ul )  | ( move ul , ua + 4 ; move ua - ul , ul )  | ( move ul , 3 + ul ; move ua - ul , ul )  | ( move ul , 4 ; move ua - ul , ul ; pen ul )  | ( ( move ul , 4 ; move ua - ul , ul ) ; move ul , 3 )  
[2586] ( move ul , ua ; move ua , ua / 4 )  
[2587] ( move ul , ul / 2 ; move ua , ul )  | ( move 2 - ul , ul / 2 ; move ua , ul )  | ( move ul , 2 / 4 ; move ua , ul ; pen 4 - ua )  | ( move ul , ul / 2 ; v0 = ua ; move v0 , ul )  | ( move ul , ul / 2 ; move ua , ul ; v0 = 4 - ul )  
[2588] ( move ul , ua / 4 ; move ua , ul )  
[2589] ( move ul , ul ; move 3 , ul / ua )  | ( move ul , ua + ul ; move 3 , ul / ua )  | ( move 0 , ua + ul ; move ul , 0 ; move 3 , ul / ua )  | ( move ul , ul ; move 3 , ul / ua ; v0 = ua - 2 )  
[2590] ( move ua , ul / ua ; move 4 , ul )  | ( move ua , ul / ua ; move 3 + ul , ul ; v0 = 0 )  
[2591] ( move ua , ua / 4 ; move ul , ul )  | ( move ua , ua / 4 ; v0 = ul ; move v0 , ul )  | ( move 0 , 4 * 3 ; move ul , 0 ; move ua , 0 - ul )  
[2592] ( move ul , 4 / ua ; move ua , ul )  | ( move ul , 4 / ua ; move ua , 2 - ul )  | ( move ul , 4 / ua ; move ua , ul ; pen ul )  
[2593] ( move ul , ul ; move ul - 4 , ul )  | ( move ul , ul ; move ul - 4 , ul ; move ul , ua )  
[2594] ( move ua , ul / 4 ; move ua , ul )  | ( move 0 , ua ; move ua , ul / 4 ; move ua , ul )  | ( move ua , ul / 4 ; move ua , ul ; move 0 , ua )  | ( move ua , ul / 4 ; move 0 , ua ; move ua , ul )  
[2595] ( move 3 , ul / ua ; move ul , ul )  | ( move 3 , ul / ua ; move ul , ul ; pen 2 )  | ( move 0 , 0 ; move 3 , ul / ua ; move ul , ul )  | ( move 3 , ul / ua ; move ul , ua + ul ; move 0 , ua )  
[2596] ( move ul , ul / ua ; move 3 , ul )  | ( move 2 + ul , ul - 3 ; move ul , ul - 2 )  
[2597] ( move ua , ul ; move ua / 4 , ul )  | ( move ua , ul ; move ua / 4 , 2 - ul )  | ( move ua , ua + ul ; move ua / 4 , ul )  | ( move ua , ul ; v0 = ua / 4 ; move v0 , ul )  | ( ( move ua , ul ; move ua / 4 , ul ; pen ul ) ; v0 = ul )  
[2598] ( move ua , ul / 3 ; move ul , ul )  | ( move ua , 2 / ua ; v0 = 4 ; move ul , ul )  | ( move ua , 2 / ua ; move ul , ul ; v0 = ul )  | ( move ua , 2 / ua ; move ul , ua + ul ; pen ua )  
[2599] ( move 4 , ul / ua ; move ua , ul )  | ( move 3 + ul , ul / ua ; move ua , ul )  | ( move 4 , ul / ua ; move ua , ul - ua )  | ( move 4 , ul / ua ; v0 = ua ; move ua , ul )  | ( ( v0 = ua ; move 4 , ul / v0 ) ; move v0 , ul )  
[2600] ( move ua , 4 / ua ; move ul , ul )  | ( move ua , 4 / ua ; move ul , 3 - 2 )  | ( v0 = 4 / ua ; ( move ua , v0 ; move ul , ul ) )  
[2601] ( move ua , ul ; move ul , ul / 4 )  | ( ( move ua , 2 - ul ; move ul , ul / 4 ) ; v0 = ua )  
[2602] ( move ul , ul ; move 4 , ul / ua )  | ( move ul , ul ; move 2 + 2 , ul / ua )  | ( move ul , ul ; move 3 , ul / ua ; move ul , 0 )  | ( move 4 - 3 , ul ; move 2 , ul / ua ; move ul + ul , ua )  
[2603] ( move ul , ul / 4 ; move ua , ul )  | ( move ul , ul / 4 ; move ua , ul ; pen ul )  
[2604] ( move ul , ul / ua ; move 4 , ul )  | ( move ul , ul / ua ; move 4 , 2 - ul )  | ( move ul , ul / ua ; v0 = ul ; move 4 , ul )  
[2605] ( move ul , ul ; move ua , ul / 4 )  
[2606] ( move ua , 0 ; pen 2 ; move 0 , 0 )  | ( move ua , 0 ; pen 3 ; move 0 , 0 )  | ( move ua , 0 ; pen 3 ; move 0 , 4 )  | ( move ua , 0 ; pen 3 ; move 0 , ul )  | ( move ua , ua ; ( pen 3 ; move 0 , 4 ) )  | ( move ua , ua + ua ; pen 4 - ul ; move 0 , 4 )  
[2607] ( move 2 , 0 ; pen 0 ; move ua , 0 )  | ( move 2 , 0 ; pen 0 - ul ; move ua , ua )  
[2608] ( pen ua ; move ua + ul , 0 - ul )  | ( pen ua ; move ua + ul , ua - ul )  | ( pen ul ; pen ua ; move 4 * 2 , ua - ul )  | ( pen ua * ua ; move ua , ua - ul ; move ul , ua * 4 )  
[2609] ( move ua , 0 ; pen 2 ; move 2 , 0 )  | ( ( move ua , ua ; pen 4 / 2 ) ; move 2 , ua )  
[2610] ( move 0 , 4 ; pen 0 ; move ua , 0 )  | ( move 0 , ua ; pen 0 ; move ua , 4 )  | ( move 0 , 4 ; pen 2 - 3 ; move ua , 0 )  | ( ( move 0 , 0 ; pen 0 ) ; move ua , 4 )  | ( move 0 , ua + ul ; pen 0 ; move ua , 3 )  | ( move 0 , 2 ; pen ul - ua ; move ua , 2 )  | ( move 0 , ua ; ( pen ul - ua ; move ua , 4 ) )  | ( ( move 0 , ua + ua ; pen 0 ) ; move ua , 3 + ul ; pen 2 )  
[2611] ( pen ua ; move ua - ul , ua - 2 )  | ( pen ua + ua ; move 3 + 2 , ua - 2 )  | ( pen 3 + 2 ; move ua - ul , ua - 2 )  
[2612] ( move 2 , 0 ; pen ua ; move 3 , 0 )  | ( move 2 , ua ; pen ua ; move 3 , ua )  
[2613] ( pen ua ; move ua + ul , ua - 3 )  | ( pen ua ; move ua + ul , ul / ua )  | ( pen ua ; move 4 , ul / ua ; move 4 , 0 )  | ( pen ua + ul ; move ua + ul , ul / ua ; pen 4 )  | ( pen ua + ul ; v0 = ul ; move v0 + ua , ul / ua )  
[2614] ( move 3 , 2 ; pen 0 ; move ua , 0 )  | ( move 3 , 2 ; pen ul / ua ; move ua , 0 )  
[2615] ( pen ul + ul ; move ua + ul , 3 )  | ( pen 2 ; move ua + ul , 3 ; pen ul )  | ( pen 2 ; ( move ul , 3 ; move ua , ua + ua ) )  | ( pen ul + ul ; move ua + ul , 3 ; v0 = ua )  | ( ( pen ua ; pen 2 ; move ua + ul , 3 ) ; pen 2 )  | ( ( pen 2 ; move ua + ul , 3 ) ; v0 = 4 + ul )  | ( ( pen ul + ul ; move ua , 3 ) ; move ul , 0 ; v0 = ul )  
[2616] ( move 3 , ul ; pen 0 ; move 2 , 0 )  | ( move 3 , ul ; ( pen 0 ; move 2 , 0 ) )  | ( ( move 3 , ul ; pen 3 + 2 ) ; pen 0 ; move 2 , 0 )  
[2617] ( pen 2 ; move ul - ua , ua * ua )  | ( ( pen 3 ; pen 2 ) ; move ua - ul , ua * ua )  
[2618] ( move 4 , 0 ; pen 3 ; move 0 , ua )  | ( move 4 , ua ; pen 3 ; move 0 , 2 )  
[2619] ( move 0 , 3 ; pen 0 ; move ua , 4 )  | ( move 0 , 0 ; pen 0 ; move ua , 4 + 3 )  | ( move 0 , ul ; pen 0 ; move ua , 3 * 2 )  
[2620] ( move 3 , 2 ; pen 0 ; move 2 , ua )  
[2621] ( pen 3 ; move ul - ua , ua * ua )  | ( pen ua / 2 ; move ua - ul , ua * ua )  
[2622] ( pen ua ; move ua - ul , ua - 4 )  
[2623] ( pen 2 ; move ua - ul , ul / ua )  | ( pen 2 ; move ul - ua , ul / ua )  | ( pen ul ; pen ul + ul ; move ua - ul , ul - 4 )  
[2624] ( pen 2 ; move ua , 0 ; move 3 , 3 )  
[2625] ( pen 2 ; move 2 , 0 ; move 3 , ul )  | ( pen 2 ; move 2 , ua ; move 2 + ul , ul )  | ( ( pen 2 ; move 3 - ul , 0 ) ; move 3 , ul )  
[2626] ( pen ua ; move ua - ul , ul / 2 )  | ( pen ua ; move ua - ul , ul / 2 ; pen 0 )  | ( pen ua ; pen ua ; move ul - ua , ul / 2 )  | ( pen ua ; ( move ua - ul , 3 / ua ; v0 = 2 ) )  
[2627] ( move 2 , ul ; pen 3 ; move 2 , 0 )  
[2628] ( move 2 , ul ; pen 0 ; move 3 , 2 )  
[2629] ( move 2 , 2 ; pen 0 ; move 3 , ul )  
[2630] ( pen ua ; move 4 , 0 ; move 3 , 2 )  | ( pen ua ; move 4 , ua ; move 3 , 2 )  | ( ( pen ua ; move 4 , ua ; move 3 , ul + ul ) ; v0 = 0 )  
[2631] ( move 0 , ul ; pen 0 ; move 4 , 4 )  
[2632] ( move 4 , 2 ; pen 0 ; move 2 , ul )  
[2633] ( pen ua ; move ul - ua , ua / 4 )  
[2634] ( move 3 , ul ; pen 0 ; move 3 , 2 )  
[2635] ( move ua , 0 ; pen 4 ; move 3 , 2 )  | ( move ua , ua ; pen ua ; move 3 , 2 - ua )  | ( move ua , ua ; pen ua ; move 3 , ul + ul )  | ( move ua , ua ; pen ua ; move 4 - ul , ul + ul )  
[2636] ( move ul , 2 ; pen 3 ; move 3 , 0 )  | ( move ul , 2 - ua ; pen 4 ; move 3 , 0 )  
[2637] ( pen ul + ul ; move ua , 4 / ua )  | ( v0 = ul ; pen 2 ; move ua / v0 , 4 / ua )  
[2638] ( move 4 , ul ; pen 4 ; move 0 , 0 )  | ( ( move 4 , ul ; pen 4 ) ; move 0 , ua )  | ( move 4 , ul ; ( pen ua ; move 0 , ua ) )  | ( move 4 , ul ; ( pen 4 ; move 0 , 2 + ul ) )  | ( move 4 , ul ; ( pen 0 ; pen 4 ) ; move 0 , ua )  | ( move 4 , ua + ul ; pen ua + ul ; ( move 0 , 3 ; pen 0 ) )  
[2639] ( pen 4 ; move 2 , 0 ; move 2 , ul )  | ( pen 4 ; move 2 , 0 ; ( pen 4 ; move 2 , ul ) )  
[2640] ( move ua , 4 ; pen 3 ; move 0 , 2 )  | ( move ua , 4 ; pen ua - 4 ; move 0 , ua )  | ( ( move ua , 4 ; move ul / 4 , ua ; pen 3 ) ; move 0 , 3 )  
[2641] ( move 2 , ul ; pen 3 ; move 3 , 0 )  | ( move 2 , ul ; pen 4 ; move 4 - ul , 0 )  | ( move 4 - 2 , ul ; pen ua + ua ; move 3 , ua )  
[2642] ( move 3 , ua ; pen 4 ; move 3 , 0 )  | ( move 3 , 0 ; pen ua ; move ua / 2 , ua )  
[2643] ( move 3 , 3 ; pen 0 ; move 3 , ul )  | ( move 4 - ul , 3 ; pen ul - ua ; move 3 , ul )  
[2644] ( move 2 , ul ; pen 0 ; move 4 , 3 )  
[2645] ( move 3 , 4 ; pen 0 ; move 3 , ua )  
[2646] ( pen 4 ; move ua , 0 ; move 3 , 3 )  
[2647] ( pen ua ; move 2 , 4 ; move 2 , 2 )  
[2648] ( pen 2 ; move 2 , 2 ; move ua , 4 )  | ( pen 2 ; ( move 2 , ul + ul ; move 4 + 2 , ua + 4 ) )  
[2649] ( pen 2 ; move ul , 0 ; move 3 , 4 )  
[2650] ( pen 2 ; move 4 , ul ; move 2 , 2 )  
[2651] ( move ul , 2 ; pen 2 ; move 3 , 3 )  
[2652] ( move 4 , ua ; pen 3 ; move 4 , 0 )  
[2653] ( move 4 , 4 ; pen ua ; move 3 , 0 )  | ( move 4 , 4 - ua ; pen ua ; move 3 , ua )  
[2654] ( pen 2 ; move 2 , ul ; move 3 , 3 )  | ( move 2 , ul ; ( v0 = 3 ; pen 2 ; move 3 , v0 ) )  
[2655] ( pen 2 ; move 2 , 3 ; move 3 , ul )  | ( pen 4 - 2 ; move 3 - ul , 2 + ul ; move 3 , ul )  
[2656] ( move 4 , ua ; pen 3 ; move 3 , 2 )  
[2657] ( move 4 , ua ; pen 4 ; move 2 , 2 )  
[2658] ( move ua , 4 ; pen 4 ; move 4 , 0 )  
[2659] ( pen 3 ; move 3 , 2 ; move 3 , ul )  
[2660] ( pen 4 ; move 3 , 0 ; move 4 , ul )  | ( pen ua + 4 ; move 3 , 0 ; move 4 , ul )  | ( pen ua + 2 ; ( move 3 , 0 ; move 4 , ul ) )  
[2661] ( pen 3 ; move 4 , 0 ; move ul , 4 )  
[2662] ( move ua , 3 ; pen 2 ; move 4 , 4 )  
[2663] ( pen 4 ; move 3 , 3 ; move ul , 2 )  
[2664] ( pen 3 ; move ul , 3 ; move 4 , 2 )  
[2665] ( pen 4 ; move ul , 2 ; move 3 , 3 )  | ( pen ua ; move ul , 2 ; move 3 , 3 )  | ( pen ua + ul ; move ul , 2 ; move 3 , 2 + ul )  | ( ( pen 0 ; pen ua ) ; move ul , 2 ; move 3 , 3 )  | ( pen ua - ul ; ( move ul - 4 , 4 + ul ; move ul , ua ) )  
[2666] ( pen 2 ; move ua , 4 ; move 4 , 4 )  
[2667] ( pen 3 ; move 4 , ul ; move 4 , 2 )  
[2668] ( pen 2 ; move 3 , 4 ; move ul , 4 )  
[2669] ( move 4 , 3 ; pen 4 ; move ul , 3 )  
[2670] ( move ua , ua ; move ua , ua * ua )  | ( move ua , 0 ; v0 = ua * ua ; move ua , v0 )  | ( v0 = ua ; move ua , v0 ; move ua , v0 * ua )  | ( v0 = ua ; move v0 , ua ; move v0 , v0 * ua )  | ( v0 = ua ; move ua , v0 ; move v0 , v0 * v0 )  | ( v0 = ua ; move v0 , v0 ; move v0 , v0 * v0 )  
[2671] ( move 3 , 4 ; pen 4 ; move 4 , ul )  | ( pen ul ; ( move 4 - ul , 4 ; pen ua ) ; move 4 , ua + ul )  
[2672] ( move ua + ul , ua ; move ul , ul )  | ( move ua + ul , ua ; move ul , ul ; pen 3 )  | ( move ua + ul , 0 ; v0 = ul ; move v0 , ul )  | ( move ua , ua ; move 2 - ul , 0 ; move 4 - 3 , ul )  | ( move 2 - ul , 0 ; move ua , ua ; move 2 - ul , ul )  | ( move ua + ul , ua ; move 0 - ul , ua + 4 ; pen 2 )  | ( move ua + ul , ua ; ( v0 = ul ; move v0 , ul ) )  | ( ( move ua + ul , ua ; move ul , ul ) ; pen ul ; v0 = 2 )  
[2673] ( move ua , ua * ua ; move ua , ul )  | ( move ua , ua * ua ; v0 = ul ; move ua , v0 )  | ( v0 = ua ; move v0 , ua * ua ; move v0 , ul )  
[2674] ( move ua , ul ; move ua , ua * ua )  | ( move ua , ul - ua ; move ua , ua * ua )  | ( move ua , ul ; v0 = 0 ; move ua , ua * ua )  | ( move ua , ul ; ( move ua , ua * ua ; pen 2 ) )  | ( v0 = ul ; move ua , v0 ; move ua , ua * ua )  | ( v0 = ua ; move ua , ul ; move v0 , v0 * ua )  | ( move ua , ul ; move ua , ua * ua ; v0 = 2 + ul )  | ( v0 = ua ; move v0 , ul ; move ua , v0 * v0 )  | ( v0 = ua ; move v0 , ul ; move v0 , v0 * v0 )  
[2675] ( move ua , ua * ua ; move ul , ul )  | ( move ua , ua * ua ; move ul , ua + ul )  | ( move ua , ua * ua ; move ul , ul ; pen 3 )  | ( move 0 , ua ; move ua , ua * ua ; move ul , ul )  | ( ( move ua , ua * ua ; move ul , ul ) ; pen ul )  | ( ( move ua , ua * ua ; pen 2 - ul ) ; move ul , ul )  
[2676] ( move ul , ua * ua ; move ua , ul )  | ( move ul , ua * ua ; move ua , ua + ul )  | ( ( v0 = ul ; move ul , ua * ua ) ; move ua , ul )  | ( pen ul ; ( move ul , ua * ua ; move ua , ul ; pen ul ) )  | ( v0 = ua ; ( move ul , v0 * v0 ; move v0 , ul ) )  
[2677] ( move ua + ul , ul ; move ul , ul )  | ( move ua + ul , ua + ul ; move ul , ul )  | ( move ua + ul , ul ; move ul , ua + ul )  | ( move ul , ul ; move ua , ua ; move ul , ul )  | ( move ua , ua + ul ; move ul , 0 ; move ul , ul )  | ( move ua , ul ; move ul , 0 ; move ul , ua + ul )  | ( move ua , ul ; move ul , ua * 2 ; move ul , ul )  | ( ( move ul , ul ; move ua , ua ) ; move ul , ul )  | ( move ua + ul , ua + ul ; move ul , ul ; pen 3 )  | ( move ua , ua + ul ; move ul , ua ; move ul , ul )  | ( move ul , ua + ul ; move ua , ua ; move ul , ul )  | ( move ua + ul , ul ; move ul , ul ; pen ul / ua )  | ( move ua + ul , ul ; v0 = ul ; move v0 , ul )  | ( move ua + ul , ul - ua ; move 0 - ul , 3 + ul )  | ( v0 = ua + ul ; move v0 , v0 ; move ul , v0 )  | ( move ua + ul , ul ; move ul , ul - ua ; pen 0 - ua )  | ( pen ul ; move ua + ul , ua + ul ; move 2 - ul , ul )  | ( pen ul / 4 ; move ua + ul , ul ; move ul , ua + ul )  | ( ( v0 = ua + ul ; move v0 , v0 ) ; move ul , v0 )  
[2678] ( move ul , ul ; move ua , ua * ua )  | ( move ul , ul ; v0 = ua ; move v0 , v0 * v0 )  | ( move ul , ul ; ( v0 = ua ; move v0 , v0 * ua ) )  | ( ( move ul , ul ; v0 = ua ) ; move v0 , v0 * v0 )  
[2679] ( move ua , ul ; move ul - ua , ul )  | ( move ua , 4 - 3 ; move ul - ua , ul )  | ( move ua , ul ; move ul - ua , ua + ul )  | ( move ua , ul - ua ; move ul - ua , ul )  | ( move ua , ul ; pen ul ; move ul - ua , ul )  | ( move ua , ul ; move ul - ua , ul ; v0 = 3 )  | ( v0 = ul - ua ; move ua , ul ; move v0 , ul )  | ( v0 = ul - ua ; move ua , v0 ; move v0 , v0 )  | ( ( v0 = ul ; move ua , v0 ) ; move v0 - ua , ul )  
[2680] ( move ul - ua , ul ; move ua , ul )  | ( move ul - ua , ul ; move ua , ua + ul )  | ( move ul - ua , ua + ul ; move ua , ul )  | ( move ul - ua , ul ; v0 = ul ; move ua , ul )  | ( ( move ul - ua , ul ; move ua , ul ) ; pen ua )  | ( move ul - ua , ul ; pen ul ; move ua , ua + ul )  | ( v0 = ul - ua ; move v0 , ul ; move ua , v0 )  | ( v0 = ul - ua ; move v0 , v0 ; move ua , v0 )  | ( v0 = ua ; ( move ul - v0 , ul ; move ua , ul ) )  
[2681] ( move ul - ua , ul ; move ul , ul )  | ( move ul - ua , ul ; move ul , ua + ul )  | ( move ul - ua , ul - ua ; move ul , ul )  | ( move ul - ua , ul ; move ul , ul - ua )  | ( move 0 , ul ; move ul - ua , ua ; move ul , ul )  | ( move ul - ua , ul ; v0 = ul ; move ul , ul )  | ( move ul - ua , ul ; move ul , ul ; v0 = ul )  | ( move ul - ua , ul ; ( move ul , ul ; move 0 , 4 ) )  | ( move ul - ua , ul ; move 2 - ul , ul ; v0 = ua )  | ( move ul - ua , ul ; move 2 - ul , ul ; pen 2 / ua )  | ( v0 = ul ; move ul - ua , v0 ; move v0 , v0 )  
[2682] ( move ua , ul / ua ; move ua , ul )  | ( v0 = ua ; move ua , ul / v0 ; move v0 , ul )  
[2683] ( move ul , ua ; move ua , ul / ua )  | ( move ul , ua ; move 4 + 2 , ul / ua )  | ( move ul , ua * 2 ; move ua , ul / ua )  | ( move ul , 0 ; move ua , ul / ua ; v0 = ua / 3 )  | ( move ul , ua ; ( move ua , ul / ua ; pen 4 - ul ) )  | ( v0 = ua ; move ul , v0 ; move v0 , ul / v0 )  
[2684] ( move ul , ul ; move ua - ul , ul )  | ( move ul - ua , 2 ; move ul , ua - 4 ; pen 2 )  
[2685] ( move ul , ul ; move ua , ul / ua )  | ( move 2 / 3 , ul ; move ua , ul / ua )  | ( move ul , 2 - ul ; move ua , ul / ua )  | ( move ul / 2 , ul ; move ua , ul / ua )  | ( move ul , ul ; pen ul ; move ua , ul / ua )  | ( move ul , ul ; move ua , ul / ua ; pen ul )  | ( move 3 - 2 , ul ; move ua , ul / ua ; pen ua )  | ( ( move ul , ul ; move ua , ul / ua ) ; pen 2 ; pen ua )  
[2686] ( move ul , ul / ua ; move ua , ul )  | ( move 2 - ul , ul / ua ; move ua , ul )  | ( move ul , ul / ua ; move ua , ul ; pen 4 - ul )  | ( move ul , ul / ua ; move ua , ul ; pen ua + ul )  | ( move ul , ul / ua ; move 0 , 3 - 2 ; move ua , 0 )  | ( move ul , ul / ua ; move 3 * 2 , ul ; move 0 , ua * 2 )  | ( ( move ul , ul / ua ; move ua , 2 - ul ) ; pen ul + ul )  
[2687] ( move ua , ul / ua ; move ul , ul )  | ( pen ul ; move ua , ul / ua ; move ul , ul )  | ( move ua , ul / ua ; move ul , ul ; pen ul )  | ( move ua , ul / ua ; v0 = 3 ; move ul , ul )  | ( pen ul ; move ua , ul / ua ; move ul , ua + ul )  | ( move ua , ul / ua ; v0 = ul ; move v0 , ul )  | ( ( move ua , ul / ua ; move 0 , ul ) ; move ul , ua )  | ( ( move ua , ul / ua ; move ul , ul ) ; v0 = ua )  
[2688] ( move 0 , 0 ; pen 0 ; move ua , ua )  | ( move 0 , ua ; pen 0 ; move ua , ua )  | ( move 0 , ua ; pen ul - 3 ; move ua , 0 )  | ( ( move 0 , ua ; pen 0 ) ; move ua , ua )  | ( move 0 , ul - 4 ; pen 0 - ul ; move ua , 3 )  | ( move 0 , 0 ; pen 0 ; ( v0 = ua ; move v0 , v0 ) )  
[2689] ( move 2 , 0 ; pen 0 ; move ua , ul )  | ( move 2 , ua ; pen 0 ; move ua , ul )  | ( move ul + ul , ua ; pen 0 ; move ua , ul )  | ( ( move 2 , ua ; pen 0 ) ; v0 = ua ; move v0 , ul )  
[2690] ( pen ua ; move ua + ul , ua * ua )  | ( pen ua + ua ; move ua + ul , 4 + 4 )  | ( pen ua ; move 0 , ua * ua ; move ua + ul , ua )  | ( ( v0 = 4 * 2 ; pen v0 ) ; move v0 , v0 )  | ( pen 2 - ua ; pen ua + 3 ; move ua + ul , ua * ua )  
[2691] ( move ua , 0 ; pen ua ; move 0 , 3 )  | ( move ua , ua ; pen ua ; move 0 , ua )  | ( move ua , ua ; pen ua ; move 0 , ul )  | ( move ua , 0 ; pen ua * 2 ; move 0 , 0 )  | ( move ua , ua ; pen 4 + ul ; move 0 , 2 )  | ( move ua , 0 ; ( pen ua ; move 0 , ul ) )  | ( move ua , 0 - ua ; pen ua ; move 0 , ul )  | ( move ua , ua ; pen ua ; move 0 , ua * 4 )  | ( move ua , ua ; pen ua ; move 0 , ua - ul )  | ( move ua , ua ; pen ua ; ( v0 = 0 ; move v0 , 0 ) )  | ( ( move ua , ua + ua ; pen ua ; move 0 , 2 / 4 ) ; pen 0 )  
[2692] ( move 0 , ul ; pen 0 ; move ua , 2 )  | ( move 0 , 2 ; pen 0 ; move ua , ul )  | ( move 0 , ua ; pen 0 ; move ua , 3 )  | ( ( move 0 , ua ; pen ul - ua ) ; move ua , 3 )  | ( pen ul ; move 0 , 0 ; ( pen 3 - 4 ; move ua , 3 ) )  
[2693] ( move ul , 0 ; pen 0 ; move ua , 3 )  | ( move ul , 0 ; ( pen 0 ; move ua , 3 ) )  | ( ( move ul , 0 ; pen 0 ) ; move ua , 3 )  
[2694] ( move 0 - 4 , 0 ; move 2 , 3 + 2 )  
[2695] ( move 2 , 0 ; pen ua ; move 2 , ua )  | ( move 2 , ua ; pen ua ; move 2 , ua )  | ( move 3 - ul , 0 ; pen 4 * 3 ; move 2 , 0 )  | ( move 2 , 0 ; pen ua + ul ; move ul + ul , ua )  | ( ( move 2 , 0 ; pen ua ) ; v0 = 2 ; move v0 , ua )  
[2696] ( move 3 , ul ; pen 0 ; move ul , 0 )  | ( move 3 , ul ; pen 0 ; move ul , ua )  | ( move 3 , ul ; pen 0 - ul ; move ul , ua )  | ( move 3 , ul ; pen ul - 2 ; move ul , ua )  | ( ( move 3 , ul ; v0 = 0 ; pen 0 ) ; move ul , 0 )  | ( ( move 3 , ul ; pen ul - ua ; move ul , ua ) ; pen 0 )  | ( ( move 3 , ul ; ( pen 0 ; v0 = 4 ) ) ; move ul , ua )  | ( move ua / 2 , 4 - 3 ; ( pen ul ; pen 0 ; move ul , 0 ) )  
[2697] ( move 4 , 0 ; pen 0 ; move ua , ul )  | ( move 4 , ua * 2 ; pen ul - 2 ; move ua , ul )  | ( move 3 + ul , 0 ; pen ul - 3 ; move ua , ua + ul )  
[2698] ( move 3 , ua ; pen ua ; move 2 , 0 )  | ( ( move 3 , ua ; pen ua * 2 ) ; move 2 , ua )  | ( move ua / 2 , ua * 4 ; pen ua * 2 ; move 2 , ua )  
[2699] ( move ul , 0 ; pen 0 ; move ua , 4 )  | ( ( move ul , ua ; pen 0 ) ; move ua , 4 )  
[2700] ( move ul , 0 ; pen ua ; move 4 , 0 )  | ( move ul , 0 ; pen 4 ; move ua - 2 , 0 )  | ( move ul , ua ; pen 4 ; move 3 + ul , ua )  | ( move ul , ua ; ( pen ua * 4 ; move 4 , ua ) )  
[2701] ( move 0 , ul ; pen 0 ; move ua , 4 )  | ( move 0 , 3 ; pen ul - ua ; move ua , 2 )  | ( move 0 , ul + ul ; pen 3 - ua ; move ua , 2 + ul )  
[2702] ( move ul , ul ; pen 0 ; move 3 , 0 )  | ( move ul , ul - ua ; pen ul - 4 ; move 3 , ua )  
[2703] ( move ul , 4 ; pen 0 ; move ua , 0 )  
[2704] ( move ua , ul ; pen 2 ; move 2 , 0 )  | ( move ul , 3 + ul ; move ua + 2 , ul - 4 ; move 2 , 3 )  
[2705] ( move 3 , 0 ; pen 0 ; move ul , ul )  | ( move 3 , ua ; pen 0 ; ( move ul , ul ; pen ua ) )  
[2706] ( move 0 - 4 , 0 - 2 ; move 2 , 3 )  | ( move 0 - 4 , ul - 3 ; move 3 - ul , 3 )  
[2707] ( move 2 , ua ; pen 0 ; move ua , 4 )  | ( move 2 , ua ; pen 0 - ua ; move ua , ua + 4 )  
[2708] ( move ua , 2 ; pen 3 ; move 0 , ul )  
[2709] ( move 2 , ul ; pen 3 ; move ua , 0 )  | ( move 3 , ul ; ( pen 3 ; move ua , ua ) )  | ( move 2 , 2 - ul ; pen 3 ; move 4 * 2 , 0 )  
[2710] ( move 3 , ua ; pen 0 ; move 2 , ul )  
[2711] ( move 2 , ul ; pen ua ; move 3 , 0 )  | ( move ul + ul , ul ; ( pen ua ; move 3 , ua ) )  
[2712] ( move ua , 2 ; pen 0 ; move 3 , ul )  | ( move ua , 2 ; pen 2 - 3 ; move 3 , ul )  
[2713] ( move 2 , ul ; pen 0 ; move 2 , ul )  | ( ( move 2 , ul ; pen 0 ) ; move 2 , ul ; pen ua )  
[2714] ( move ua , 0 ; pen 3 ; move ul , 2 )  | ( move ua , ua ; pen 3 ; move ul , 2 )  
[2715] ( move ul , ua ; pen 0 ; move 3 , 3 )  
[2716] ( pen 2 ; move ul , 2 ; move ua , 2 )  | ( ( pen 2 ; move ul , ul + ul ) ; move ua , 2 ; v0 = 0 )  
[2717] ( move 3 , ua ; pen 2 ; move ua , 2 )  
[2718] ( pen ua ; move 3 , ua ; move 2 , 2 )  
[2719] ( move ua , 0 ; pen ua ; move 4 , 3 )  
[2720] ( move ua , 3 ; pen 4 ; move 0 , ua )  | ( move ua , 3 ; pen ua ; move 0 , ua )  | ( move ua , 3 ; pen ua ; move 0 , ul )  | ( move ua , ua + 3 ; pen ua ; move 0 , ul )  | ( move ua , 3 ; ( pen ua + 2 ; move 0 , ul ) )  | ( move ua , 2 + ul ; pen ua ; move 0 , ul + ul )  | ( ( move ua , 2 + ul ; pen ua ) ; pen ua ; move 0 , ua )  | ( move ua , 3 ; ( pen 4 ; v0 = ul ; move 0 , v0 ) )  
[2721] ( move 3 , ul ; pen 0 ; move ua , 3 )  
[2722] ( move 3 , ul ; pen ua ; move 3 , 0 )  | ( move ua , ul ; pen 4 ; move 4 - ul , ua / 2 )  
[2723] ( pen ua ; move ul , 0 ; move 4 , 2 )  | ( pen 4 + ul ; move ul , 0 ; move 4 , 2 )  | ( pen ua ; ( move ul , ua ; move 4 , 2 ) )  | ( pen ua + ul ; ( move ul , ua ; move 4 , 2 ) )  | ( ( pen ua + ul ; move ul , ua ; move 4 , 2 ) ; v0 = 2 )  
[2724] ( pen ua ; move 3 , 0 ; move 3 , ul )  | ( pen ua - ul ; move 3 , ua ; move 3 , ul )  | ( pen ua + 3 ; move 3 , ua + ua ; move 3 , ul )  
[2725] ( move ul , 0 ; pen 2 ; move 3 , ul )  | ( move ul , ua ; pen 2 ; move 3 , ul )  | ( move ul , ua + ua ; pen 2 ; move 2 + ul , ul )  | ( move ul , ua * 3 ; pen ul + ul ; move 3 , ul - ua )  | ( ( pen ul ; move ul , ua ) ; pen 2 ; move 3 , ua + ul )  
[2726] ( move 2 , ul ; pen 0 ; move 4 , ua )  | ( move 2 , 3 - 2 ; pen 0 ; move 4 , ua + ua )  | ( ( pen 2 / ua ; move 2 , 3 - 2 ; pen 0 ) ; move 4 , 0 )  
[2727] ( move 3 , 0 ; pen 3 ; move ul , ua )  | ( move 3 , ua ; pen 3 ; move ul , ua )  | ( ( move 3 , 0 ; pen 3 ) ; move ul , 0 )  | ( ( move ua / 2 , 0 ; pen 3 ) ; move ul , ua )  | ( move 3 , ua * 3 ; pen ua - 3 ; move ul , ua )  
[2728] ( move ua , 2 ; pen 0 ; move 4 , ul )  | ( ( move ua , 2 ; pen 0 ) ; move 4 , ul )  | ( move ua , 3 - ul ; pen 0 ; move 4 , ul )  | ( move ua , ul + ul ; pen ua ; ( pen 2 - 4 ; move 4 , ul ) )  
[2729] ( move 2 , ul ; pen 0 ; move 3 , ul )  
[2730] ( pen 2 ; move 2 , ul ; move ua , 2 )  
[2731] ( pen 4 ; move 2 , 0 ; move ua , ul )  | ( ( pen ua ; move 2 , ua ) ; move ua , ul )  | ( pen ua + ul ; move 2 , ua * 4 ; move ua , ul )  | ( pen ua - ul ; ( move 2 , ua ; move ua , ul ) ; v0 = 0 )  
[2732] ( move 4 , ua ; pen 0 ; move 2 , ul )  | ( move 4 , 0 ; ( pen 0 ; move 2 , ul ) )  | ( move 3 + ul , ua ; pen 0 ; move 2 , ul )  
[2733] ( move ua , 4 ; pen 2 ; move ul , 0 )  | ( move ua , 4 ; pen 2 ; move ul , ua )  
[2734] ( move 4 , 2 ; pen ua ; move 0 , ul )  | ( move 4 , 4 / 2 ; pen 4 ; move 0 , 0 )  
[2735] ( move 2 , 0 ; move 2 - 4 , 3 * 2 )  
[2736] ( move 4 , ul ; pen 0 ; move ua , 3 )  
[2737] ( move 3 , 0 ; pen ua ; move 4 , ul )  | ( move 3 , 0 ; pen ua * 2 ; move 2 * 2 , ul )  
[2738] ( move ul , 0 ; pen 3 ; move 3 , ul )  | ( move ul , ua ; pen 3 ; move 3 , ul )  | ( move ul , ua ; pen 2 + ul ; move 2 + ul , ul )  
[2739] ( pen 4 ; move 3 , 0 ; move ua , ul )  | ( pen ua ; move 2 + ul , ua ; move ua , ul )  | ( pen ua + 4 ; move 3 , ua * 4 ; move ua , ul )  | ( ( pen ua ; move 3 , 0 ; move ua , ul ) ; pen ul )  | ( pen ua - 2 ; ( move 3 , ua ; move ua , ul - ua ) )  
[2740] ( move ua , 4 ; pen ua ; move 0 , 4 )  | ( move ua , 4 ; pen ua * 3 ; move 0 , ua )  | ( move ua , ua + 4 ; pen ua ; move 0 , ua + 4 )  | ( ( move ua , 4 ; ( pen ul ; pen ua + 3 ) ) ; move 0 , ul )  | ( move ua , 4 ; pen ua + ul ; ( move 0 , ua ; pen ua * 4 ) )  
[2741] ( move 3 + 2 , 3 ; move 0 - 4 , 3 )  
[2742] ( move ua , 0 ; pen 4 ; move ul , 3 )  | ( move ua , ua ; pen 4 ; move ul , 3 )  
[2743] ( pen 2 ; move ul , ua ; move 3 , 2 )  
[2744] ( pen ua ; move 3 , 3 ; move ua , 2 )  
[2745] ( pen ua ; move 4 , 0 ; move 3 , ul )  | ( pen ua ; move 4 , ua ; move 3 , ul )  
[2746] ( move 2 + 2 , 0 - 4 ; move 3 , 4 )  
[2747] ( pen ua ; move ua , 4 ; move 2 , 2 )  | ( pen ua ; move ua , 4 - ua ; move 2 , 2 )  
[2748] ( pen 4 ; move 3 , 0 ; move ul , ul )  | ( pen 3 ; move 3 , ua ; move ul , ul )  | ( pen 4 ; move 4 - ul , 0 ; move ul , ul )  | ( pen 3 ; ( move 3 , ua ; move 0 , ua ; move ul , ul ) )  | ( pen 3 ; ( move 0 , ua ; move 3 , ua + ua ; move ul , ul ) )  
[2749] ( move ua , ul ; pen 0 ; move 4 , 4 )  | ( ( move ua , ul ; pen 0 ) ; move 4 , 3 + ul )  
[2750] ( move ua , 4 ; pen 0 ; move ul , 4 )  | ( move ua , 3 + ul ; move ul / 4 , 2 - 3 )  
[2751] ( move ul , 0 ; pen 4 ; move 3 , ul )  | ( move ul , 0 ; pen ua ; move 3 , ul )  | ( move ul , ua ; pen ua ; move 3 , ul )  | ( move ul , 0 ; pen 3 + ul ; move 4 - ul , ul )  | ( move ul , ua * 4 ; pen 3 + ul ; move 2 + ul , ul - ua )  | ( move 2 - ul , ua ; pen ua * 4 ; move 4 - ul , ua + ul )  | ( ( move ul , ua ; pen 4 ; move 3 , ul ) ; v0 = 4 + 2 )  
[2752] ( pen ua ; move ul , 2 ; move 4 , 2 )  
[2753] ( move ua , 3 ; pen 2 ; move ua , 4 )  
[2754] ( move 3 , ul ; pen 4 ; move ul , 0 )  | ( move 4 - ul , ul ; pen 4 ; move ul , 0 )  
[2755] ( pen 3 ; move 2 , ua ; move 3 , ul )  | ( ( pen ua - 3 ; move 2 , ua ) ; move 2 + ul , ul - ua )  
[2756] ( move ua , 2 ; pen 2 ; move 4 , ul )  | ( move ua , 2 ; pen 4 / 2 ; move 4 , 2 - ul )  | ( ( ( move ua , 2 ; pen 2 ) ; move 4 , ul ) ; pen v0 )  
[2757] ( move ul , 4 ; pen 2 ; move ua , 2 )  
[2758] ( move 4 , ua ; pen ua ; move 3 , 2 )  
[2759] ( move 2 , ul ; pen 2 ; move ua , 4 )  | ( move ul + ul , ul ; pen 2 ; move ua , 4 )  
[2760] ( pen 2 ; move 4 , 2 ; move ua , ul )  | ( pen 2 ; ( move 4 , 2 ; move ua , ua + ul ) )  
[2761] ( pen 4 ; move 3 , 2 ; move ua , ua )  | ( pen 4 ; move 4 * 2 , 2 ; move ul , ua )  | ( pen 2 + 2 ; move 3 * 3 , 2 ; v0 = 3 - ul )  | ( pen 0 ; ( pen 4 ; move 3 , ul + ul ; move ua , 0 - ua ) )  
[2762] ( move 4 , ua ; pen 2 ; move 3 , ua )  
[2763] ( move 2 , 3 ; pen ua ; move 3 , ul )  | ( move 2 , 2 + ul ; ( pen 4 ; move 3 , ul ) )  | ( move 2 , 3 ; ( pen ua + ua ; move 3 , ul ; move 0 , ul ) )  
[2764] ( move 4 / 2 , 2 ; move 0 - 2 , 3 )  | ( move 4 - ul , 3 - ul ; v0 = 3 ; move ul , v0 * 2 )  
[2765] ( pen 4 ; move ua , 2 ; move ua , 3 )  
[2766] ( move ul , 4 ; pen 0 ; move 4 , ua )  | ( move ul , 4 ; pen 3 - 4 ; move 4 , ua )  
[2767] ( move ua , ua ; pen 3 ; move 4 , 2 )  
[2768] ( move 4 , 0 ; pen 4 ; move ul , ua )  | ( move 4 , ua ; pen ua ; move ul , 0 )  | ( move 4 , ua ; pen 4 ; move ul , ua )  | ( move 4 , ua + ua ; pen ua + ul ; move ul , ua )  
[2769] ( move ua , 4 ; pen 2 ; move ua , 4 )  
[2770] ( move 2 , 2 / 3 ; move 2 , 4 + 2 )  
[2771] ( pen 3 ; move ua , ua ; move 4 , 3 )  
[2772] ( pen 3 ; move 3 , 2 ; move ul , ul )  | ( pen 3 ; move 3 , 2 - ua ; move ul , ul )  
[2773] ( pen ua ; move 2 , 4 ; move ua , 4 )  
[2774] ( move ua , 3 ; pen 4 ; move 2 , ul )  | ( move ua , 3 ; ( pen ua ; move 2 , ul ) )  | ( move ua , ua + 3 ; pen ua ; move 2 , ul )  
[2775] ( pen 3 ; move 3 , ul ; move ul , 2 )  
[2776] ( pen 2 ; move ul , 2 ; move 4 , ul )  | ( ( move ul , 2 ; pen 2 ) ; move 4 , ul )  
[2777] ( move 4 , ua ; pen 2 ; move ua , 4 )  
[2778] ( move 4 , 0 ; pen 4 ; move ul , ul )  | ( move 4 , ua ; pen 4 ; ( v0 = ul ; move v0 , v0 ) )  
[2779] ( pen ua ; move ua , 2 ; move 4 , 4 )  
[2780] ( move 4 - 3 , 3 ; move 3 + 2 , 2 )  | ( move ul , 3 ; move ul , ua + 2 ; move 4 , 0 )  | ( move ul , 3 ; v0 = 4 + ul ; move v0 , 2 )  
[2781] ( pen ua ; move 2 , ua ; move 4 , 4 )  
[2782] ( pen 3 ; move ua , 3 ; move ul , 4 )  
[2783] ( move 2 , ul ; pen 4 ; move ua , 4 )  
[2784] ( move 4 , 2 ; pen 3 ; move ul , ul )  
[2785] ( move 2 , 3 - 2 ; move 4 , 3 * 2 )  | ( move ul + ul , ul ; move 4 , 3 * 2 )  
[2786] ( pen 4 ; move 2 , ua ; move 4 , ul )  | ( pen 3 ; move ul + ul , ua ; move 4 , ul )  
[2787] ( pen 3 ; move ul , 3 ; move ua , 4 )  | ( pen 2 + ul ; move ul , 3 ; move ua , 4 - ua )  
[2788] ( pen 3 ; move 3 , 3 ; move ul , ul )  | ( move ul , 3 ; ( pen 3 ; move 2 , ua ; move ul , ul ) )  
[2789] ( pen 3 ; move 4 , 3 ; move ua , ul )  | ( ( pen 4 ; move 4 , 3 ) ; move ua , ul )  
[2790] ( move 3 , 2 ; pen 4 ; move ul , ul )  | ( ( move 2 + ul , 2 ; pen ua * 3 ) ; move ul , ul )  | ( move 3 , 2 ; ( pen 4 ; v0 = ul ) ; move v0 , v0 )  
[2791] ( move 3 , ul ; pen ua ; move 3 , 4 )  
[2792] ( pen 4 ; move ul , 2 ; move ua , 4 )  | ( pen ua + 4 ; move ul , 2 ; move 3 * 2 , 4 )  
[2793] ( pen ua ; move 3 , ul ; move 3 , 4 )  
[2794] ( pen 4 ; move 3 , ul ; move ul , 2 )  
[2795] ( pen ua ; move 4 , 4 ; move 3 , ul )  | ( pen ua ; move 3 + ul , 4 ; move 3 , ul )  
[2796] ( pen ua ; move 3 , 4 ; move 4 , ul )  | ( pen ua * 2 ; move 3 , 3 + ul ; move 4 , ua + ul )  
[2797] ( move 4 / 2 , 3 + 2 ; move 4 , 2 )  | ( move 2 , 4 + ul ; move 4 , ul + ul )  | ( move ul , 4 + ul ; move ul , ua ; move 3 + ul , 2 )  
[2798] ( move 3 - 4 , 0 ; move 3 , 4 * 3 )  | ( move ul , 3 ; v0 = 4 - ul ; move v0 , v0 * v0 )  
[2799] ( pen ua ; move ua , 4 ; move 4 , 4 )  
[2800] ( move 4 , ul ; pen 3 ; move 3 , ul )  
[2801] ( pen 4 ; move ul , ul ; move 3 , 3 )  | ( pen 4 ; move ul , ul ; move 3 , 4 - ul )  
[2802] ( move ua , ul ; pen 4 ; move 3 , 4 )  
[2803] ( move 4 , ul ; pen 4 ; move ua , 4 )  | ( move 4 , ul ; pen 4 ; move 3 + 3 , ua + 4 )  
[2804] ( move ul , ul ; pen 3 ; move 4 , 4 )  | ( pen 3 ; ( move ul , ul ; move 4 , 4 ) ; v0 = 3 )  
[2805] ( move 4 , 2 / 4 ; move 2 * 2 , 2 )  
[2806] ( move 2 , 4 * 2 ; move 4 + 3 , 4 )  
[2807] ( move 4 + 2 , 3 ; move 2 , 4 / 3 )  
[2808] ( move 4 , 4 - 3 ; move 3 , 3 * 2 )  | ( move 4 , ul - ua ; move 0 , 4 ; move 3 , 2 )  | ( move 4 , ul ; v0 = 2 + ul ; move v0 , v0 + v0 )  
[2809] ( move 3 , 3 * 2 ; move 4 , 4 * 4 )  
[2810] ( pen 3 ; pen 2 ; move ua , ua / 3 )  
[2811] ( move 0 , ul ; pen 0 ; move ua , ua )  | ( move 0 , ua ; pen 0 ; move 4 + 2 , ul )  | ( move 0 , ua ; pen 0 ; move ua , 2 - ul )  | ( move 0 , 0 ; pen 4 - ua ; move ua , ul )  | ( move 0 , 4 - 3 ; pen 0 - 4 ; move ua , ua )  | ( move 0 , ua + ul ; pen 0 ; move ua , ua * 4 )  | ( ( move 0 , ul ; pen 0 ) ; v0 = 0 ; move ua , v0 )  | ( move 0 , ul ; ( v0 = ua + ul ; pen 0 ; move ua , 0 ) )  
[2812] ( move ua , ua ; pen 0 ; move ul , 0 )  | ( move ua , 0 ; pen 0 ; move ul , ua )  | ( move ua , ua ; pen 0 ; move ul , ua )  | ( ( move ua , 0 ; pen 0 ) ; move ul , ua )  | ( move ua , ua ; pen ul - 4 ; move ul , ua )  | ( ( move ua , 0 ; pen 2 - ua ) ; move ul , 0 )  | ( ( move ua , ua ; pen 2 - ua ) ; move ul , 0 )  | ( move ua , ua ; ( pen ul / ua ; move ul , 0 ) )  | ( move ua , ua ; pen 0 ; ( move ul , ua * 2 ; v0 = 2 ) )  
[2813] ( move ua , 0 ; move 3 + 3 , 0 - 2 )  | ( ( pen 2 ; move ua , ua ) ; move 4 + 2 , 0 - 2 )  | ( move ua , 0 ; ( move 3 * 2 , ul - 3 ; pen ul ) )  
[2814] ( move ul , 0 ; pen ua ; move ua , 0 )  | ( move ul , ua ; pen 4 * 3 ; move ua , 0 )  | ( move ul , ua * 3 ; pen ua ; move ua , 0 )  | ( move ul , ua ; pen ua + ul ; move ua , 0 )  | ( move ul , ua ; pen ua ; move ua , ua * 3 )  | ( move ul , 0 ; ( pen 2 ; pen ua ) ; move ua , 0 )  | ( move ul , 0 ; ( pen ua ; move ua , 0 ) ; pen 3 )  | ( pen 2 ; ( move ul , ua ; pen ua + ul ; move ua , 0 ) )  | ( move ul , ua ; ( pen ua ; move ua , 0 ; v0 = 4 / ua ) )  
[2815] ( move ul , ul ; pen 0 ; move ua , 0 )  | ( move ul , ul ; pen 0 ; move ua , ua )  | ( move ul , ua + ul ; pen 0 ; move ua , 0 )  | ( move ul , ul ; pen 0 - 2 ; move ua , ua )  | ( move ul , 2 - ul ; ( pen 0 ; move ua , ua ) )  
[2816] ( move ua , 0 ; pen 0 ; move ul , ul )  | ( move ua , ua ; pen 0 ; move ul , ul )  | ( move ua , ua ; pen 0 ; move ul , 4 * 2 )  | ( move ua , ua ; ( pen 0 ; move ul , ul ) )  | ( move ua , ua ; pen ul - ua ; move ul , ul )  | ( move 0 - ua , 0 ; pen ul / ua ; move ul , ul )  | ( move ua , ua ; move ul - ua , 0 ; move ul , ul )  | ( ( move ua , ua ; pen ul - 4 ; move ua , 3 ) ; pen ua )  | ( ( move ua , 0 ; pen 0 ; v0 = ul ) ; move v0 , ul )  | ( move ua , ua ; pen ul ; ( pen ul - ua ; move ul , ul ) )  
[2817] ( move 3 , 0 ; move 0 - 4 , 2 - ua )  
[2818] ( pen ua ; move ua , 0 ; move ua , 3 )  | ( pen ua ; move 4 + 2 , 0 ; move ua , 3 )  | ( ( pen ul ; pen ua ; move ua , ua ) ; move ua , 3 )  
[2819] ( pen 4 ; move 4 , ul / 4 ; pen ua )  
[2820] ( move ua , 0 ; pen ua ; move ul , 2 )  | ( move ua , ua ; pen 4 ; move ul , 2 )  | ( move ua , ua * 2 ; pen ua ; move ul , 2 )  | ( move ua , ua ; pen ua ; move ul , ua + 2 )  | ( move ua , 0 ; ( pen 4 + 4 ; move ul , ua / 3 ) )  
[2821] ( move ua , ul ; pen ua ; move 0 , 2 )  | ( move ua , ul ; pen 4 ; move 0 , ua )  | ( move ua , ul ; pen ua ; move 0 , ul )  | ( move ua , ul ; pen 4 ; move 0 , ul - 2 )  | ( move ua , ul ; pen 3 + ul ; move 0 , ul )  | ( move ua , ul ; ( pen 0 ; pen ua ; move 0 , ua + ul ) )  | ( pen ul ; ( move ua , ul ; pen 2 * 2 ) ; move 0 , 4 - ul )  | ( move ua , ul ; ( pen 4 ; move 0 , ul + ul ) ; v0 = ua )  
[2822] ( move 0 - 4 , 0 ; move 3 , ua - 2 )  
[2823] ( move ua , ua ; pen 0 ; move 2 , ul )  | ( move ua , 0 ; pen ul / ua ; move 2 , ul )  | ( ( move ua , ua ; pen 0 ) ; move ul + ul , ul )  
[2824] ( move 2 , 0 - 2 ; move ua , 4 - 2 )  | ( v0 = ul - 3 ; move 2 , v0 ; move ua , 2 )  | ( ( move 2 , ul - 3 ; move ua , 2 - ua ) ; v0 = ua )  
[2825] ( move 3 , ua ; pen 0 ; move ua , ul )  | ( move 3 , ua ; pen 0 - ul ; move ua , ul )  
[2826] ( move ul , ul ; pen 0 ; move ua , 2 )  
[2827] ( move ul , 0 - 2 ; move 2 + 2 , 4 )  | ( pen ul ; move ul , ul - 3 ; move 4 , 4 )  | ( pen ul ; move ul , ul - 3 ; move 3 + ul , 4 )  
[2828] ( move ua , ua ; pen 2 ; move ua , 2 )  | ( pen ul + ul ; move ua , ua ; move ua , 2 )  
[2829] ( move 3 - ua , 0 ; move 4 , 0 - 3 )  
[2830] ( move 2 , 0 - 2 ; move 4 , 2 + ul )  
[2831] ( move 3 , ua ; pen ua ; move ul , 0 )  | ( move 3 , 0 - ua ; pen ua ; move ul , 0 )  | ( move 3 , 0 ; pen ua ; move ul , ua * 3 )  | ( move 4 - ul , 0 ; pen ua ; move ul , ua )  | ( move 3 , ua ; ( pen ua ; move ul , ua ) )  | ( move 3 , ua ; pen ua ; move ul , ua + ua )  | ( move 3 , ua ; pen ua + ul ; move ul , ua )  | ( ( pen ul ; move 3 , 0 ) ; pen 4 + 2 ; move ul , ua )  | ( move 3 , 0 ; pen 3 * 3 ; ( pen ua ; move ul , ua ) )  | ( move ul , ua ; move 2 , 0 ; ( pen ua * 2 ; move ul , 0 ) )  
[2832] ( move ul , 0 ; pen ua ; move 3 , ua )  | ( move ul , ua ; pen ua ; move 3 , ua )  | ( move ul , 0 ; pen ua ; move 2 + ul , ua )  | ( move ul , ua ; pen ua - 2 ; move 3 , ua )  | ( move ul , 0 ; pen ua + 3 ; move ua / 2 , ua )  | ( move ul , ua * 2 ; pen ua ; move 4 - ul , ua )  | ( move 4 , ua * 2 ; pen ua + 3 ; move ul - 4 , ua )  | ( move 0 , ua ; ( move ul , 0 ; pen 4 + 3 ; move 3 , 0 ) )  
[2833] ( move ul , ua ; pen 3 ; move ua , 0 )  | ( move 2 , 0 ; pen 3 ; move 4 + ul , ua )  
[2834] ( move ul , 3 ; pen 0 ; move ua , ua )  | ( move ul - 2 , 0 ; pen 4 - ua ; move ua , ua + 3 )  | ( move ul , 3 ; pen 0 ; ( v0 = 0 ; move ua , v0 ) )  
[2835] ( move 3 - ul , 0 ; move 2 , 3 + 2 )  | ( move 2 , ua ; move 3 - ul , 4 + ul )  | ( move 2 , ua ; move ul + ul , 4 + ul )  | ( move 2 , ua ; move 0 , ua + 4 ; move 2 , ul )  | ( move ul + ul , 0 ; move 4 - 2 , 4 + ul ; pen 3 )  | ( v0 = 2 ; move v0 , 0 ; move v0 , v0 + 3 )  | ( ( move ul + ul , 0 ; move 2 , 4 + ul ) ; v0 = ul )  | ( v0 = 3 - ul ; move v0 , ua ; move v0 , v0 + 3 )  
[2836] ( move 4 , ua ; pen ua ; move 0 , ua )  | ( move 4 , 0 ; pen ua ; move 2 / ua , 0 )  | ( move 4 , 0 ; pen ua - ul ; move 0 , ul )  
[2837] ( pen 2 ; move ul , 0 ; move ua , ul )  | ( ( pen ul + ul ; move ul , ua ) ; move ua , ul )  | ( pen ul + ul ; ( move ul , ua * 2 ; move ua , ul ) )  | ( pen 2 ; move ul , ua * 3 ; ( move ua , 2 - ul ; pen ul ) )  
[2838] ( move 3 , ul ; pen 0 ; move ua , ua )  | ( ( move 3 , ul ; pen 0 ) ; move ua , 0 )  
[2839] ( pen 2 ; move ua , 0 ; move ul , ul )  | ( pen 2 ; move ua , ua ; move ul , ul )  | ( pen 2 ; move 4 + 2 , ua ; move ul , ul )  | ( pen ul + ul ; ( move ua , 0 ; move ul , ua + ul ) )  
[2840] ( move ul , ua ; pen 0 ; move 3 , ul )  
[2841] ( move 3 , 0 - ul ; move 0 - 3 , 4 )  
[2842] ( pen 2 ; move ul , ua ; move ua , 2 )  | ( ( pen ul + ul ; move ul , 0 ; pen 2 ) ; move ua , 2 )  
[2843] ( move ua , 2 ; pen ua ; move 2 , ul )  
[2844] ( pen 3 ; move ul , 0 ; move ua , ul )  | ( ( pen 3 ; move ul , 0 ) ; move ua , ul )  
[2845] ( move ul , ul ; pen ua ; move 3 , 0 )  | ( move ul , ul ; ( pen ua ; move 3 , ua ) ; v0 = ua )  | ( pen ul ; move ul , ua + ul ; ( pen ua ; move 3 , ua ) )  
[2846] ( move 3 + ul , 2 + 2 ; move 3 , 2 )  | ( pen ul ; move 4 , 4 ; move 3 , ul + ul )  | ( move 4 , 4 ; move 3 , 2 ; v0 = 2 + ul )  | ( move 4 , 4 ; move ul , 3 - ul ; move 2 , ua )  
[2847] ( move 0 - 3 , 0 - ul ; move 3 , 4 )  
[2848] ( move ua , 0 ; pen ua ; move ul , 4 )  | ( ( move ua , ua ; pen ua ) ; move ul , 4 )  | ( move ua , ua + ua ; pen ua + ul ; move 3 - 2 , 4 )  
[2849] ( move ua , ua ; pen 2 ; move ua , 3 )  | ( ( pen 2 ; move ua , 0 ) ; move ua , 3 ; move 0 , ul )  
[2850] ( move ul , 3 ; pen 0 ; move ua , ul )  
[2851] ( move ua , 0 ; pen 3 ; move ul , ul )  | ( move ua , 0 ; pen 4 ; move ul , ul )  | ( move ua , ua ; pen ua ; move 4 - 3 , ul )  | ( move ua , ua * 3 ; pen 3 ; move ul , ul )  | ( ( move ua , 0 ; pen ua ) ; move ul , ul )  
[2852] ( move 3 , ul ; move 0 - 3 , 0 - 4 )  
[2853] ( move 0 - 2 , 3 ; move 4 + ul , 2 )  
[2854] ( move 2 , ua ; pen 3 ; move ua , ua )  
[2855] ( move 0 - 3 , 0 - ul ; move 4 , 3 )  
[2856] ( move ua , 2 ; pen ua ; move ul , 2 )  | ( ( move ua , 2 ; pen ua + ul ) ; move 0 , ul ; move ul , ul )  
[2857] ( pen ua ; move ua , ua ; move 2 , 3 )  
[2858] ( move ua , ua ; pen 4 ; move ul , 0 )  | ( move ua , ua ; pen 4 ; move ul , ua )  | ( move ua , ua ; pen ua ; move ul , ua )  | ( move ua , 0 ; ( pen 4 ; move ul , 0 ) )  | ( move ua , 0 ; pen 3 + 3 ; move 2 - ul , 0 )  
[2859] ( move ul , ua ; pen 0 ; move 4 , ua )  | ( move ul , 0 ; ( pen ua ; pen 0 ) ; move 4 , ua )  
[2860] ( move ua , 0 ; pen ua ; move 4 , ul )  | ( ( move ua , 0 ; pen ua ) ; move 3 + ul , ul )  | ( move ua , ua ; pen ua ; move 3 + ul , ua + ul )  
[2861] ( pen ua ; move 3 , 0 ; move ul , ul )  | ( pen ua ; move 3 , ua ; move ul , ul )  | ( pen ua - ul ; move 3 , 0 ; move ul , ul )  | ( pen ua ; ( move ua / 2 , ua ; move ul , ul ) )  
[2862] ( move 0 - 3 , 4 - ua ; move 2 , 2 )  
[2863] ( move 3 , ul ; pen 0 ; move ua , ul )  | ( move 3 , ul ; ( pen 0 ; v0 = 0 ; move ua , ul ) )  
[2864] ( pen ua ; move 4 , 0 ; move ua , ul )  | ( pen ua - ul ; move 4 , 0 ; move ua , 4 - 3 )  | ( pen ua ; move 4 , 0 ; ( move ua , ul ; v0 = 0 ) )  | ( pen ua / 4 ; pen ua ; ( move 4 , ua ; move ua , ul ) )  | ( ( pen ua * 2 ; pen 4 ) ; move 4 , ua + ua ; move ua , ul )  
[2865] ( move ua , ul ; pen 0 ; move ua , 4 )  | ( ( move ua , ul ; pen ul - ua ) ; move ua , 3 + ul )  
[2866] ( move ua , ul ; pen 4 ; move ul , 0 )  | ( move ua , ul ; pen ua ; move ul , 0 )  | ( move ua , ul ; pen 4 ; move ul , ua )  | ( move ua , ul ; pen 4 + 4 ; move 3 / ua , ua )  | ( move ua + ul , ul ; pen 4 ; move ul - 2 , ua )  | ( move ua , ul ; ( pen ua - 2 ; move ul , 0 - ua ) )  
[2867] ( move 0 , 2 ; move 3 + ul , 2 / 3 )  
[2868] ( pen ua ; move ua , 3 ; move ua , 3 )  
[2869] ( move ua , ul ; pen 0 ; move ul , 4 )  
[2870] ( move 3 , 2 ; move 0 - 2 , ua / 3 )  
[2871] ( move ul , ul ; pen 0 ; move ua , 4 )  | ( move ul , ua + ul ; ( pen 0 ; move ua , 4 ; v0 = ul ) )  
[2872] ( move 4 , ua ; pen 0 ; move ul , ul )  | ( move 4 , 0 ; pen ul - 4 ; move ul , ul )  | ( ( move 4 , 0 ; v0 = 0 ; pen v0 ) ; move ul , ul )  
[2873] ( move 4 - ua , 0 ; move 4 , 0 - 4 )  
[2874] ( move ua , ua ; pen ua ; move 2 , 4 )  | ( move ua , ua * 3 ; pen 4 + 2 ; move 2 , 3 + ul )  | ( move ua , ua ; ( pen ua ; v0 = 4 ; move 2 , v0 ) )  
[2875] ( move ul , 2 ; pen 2 ; move ua , ul )  | ( move ul , 2 ; ( pen 2 ; move ua , ul ) )  
[2876] ( move ul , ua ; pen 0 ; move 4 , ul )  | ( move ul , ua + ua ; pen 0 ; move 4 , ul )  
[2877] ( move 3 * 2 , 0 ; move 4 + ul , 2 )  
[2878] ( move 4 , ul ; pen ua ; move 0 , ul )  | ( move 4 , ul ; pen ua * 4 ; move 0 , 2 )  | ( move 4 , ul ; ( pen ua ; move 0 , 2 ) )  | ( move 4 , ul ; ( pen ua ; move 0 , 4 ) )  | ( move 4 , ul ; ( pen ua ; move 0 , 2 - 4 ) )  | ( move 3 + ul , ul ; pen ua * 4 ; move 0 , 4 )  | ( move ua - 2 , ul ; pen ua + ul ; move 0 , ua )  
[2879] ( move 2 - 3 , 0 - 4 ; move 3 , ua )  | ( move 0 - 3 , ua - 4 ; move ul , ua )  | ( move 2 - 3 , ua - 4 ; move 2 , 0 ; move ul , 0 )  | ( ( move ul - 2 , ua - 4 ; pen ul ) ; move 2 + ul , 0 )  
[2880] ( pen ua ; move 4 , 0 ; move ul , ul )  | ( pen ua ; move 4 , ua ; move ul , ul )  | ( pen ua ; pen ua ; ( move 4 , 0 - ua ; move ul , ul ) )  | ( ( pen ua ; move 4 , ua * 2 ; move ul , ua + ul ) ; pen ul )  
[2881] ( pen 4 ; move ua , 0 ; move ul , ul )  | ( pen 4 ; move ua , ua ; move ul , ul )  | ( pen 3 + ul ; move ua , ua ; move ul , ul )  
[2882] ( move ua , ua ; pen 2 ; move 3 , ul )  | ( move ua , ua ; pen ul + ul ; move 3 , ul )  
[2883] ( pen ua ; move ul , 0 ; move 4 , ul )  | ( pen ua ; ( move ul , ua ; move 4 , ul ) )  | ( ( pen ua ; move ul , 0 ; v0 = 0 ) ; move 4 , ul )  | ( pen ua ; move ul , ua ; ( move 3 , ul ; move ul - 2 , 3 ) )  | ( ( ( pen ul ; pen ua * 2 ) ; move ul , ua ) ; move 4 , ul )  
[2884] ( move 0 - 3 , ul - 4 ; move 2 , 2 )  | ( move ua / 2 , ul / ua ; move ul - 3 , 2 )  
[2885] ( move ua , 0 ; pen 4 ; move ul , ul )  | ( move ua , ua ; pen ua ; move ul , ul )  | ( move ua , 0 ; pen 4 ; move 2 - ul , ul )  | ( move ua , 0 ; ( pen 4 ; move ul , ul ) )  | ( move ua , ua ; pen ua * ua ; move ul , ul )  | ( move ua , 0 ; ( v0 = ul ; pen 4 ) ; move v0 , ul )  | ( move ua , 0 ; pen 4 ; ( v0 = ul ; move v0 , v0 ) )  | ( ( move ua , ua ; pen 4 ) ; move ul , ul ; v0 = ul / 3 )  
[2886] ( move 3 , 2 ; pen ua ; move ul , ua )  | ( move 4 , 3 - ul ; pen ua ; move ul , ua / 2 )  | ( ( pen ul / 2 ; move 4 , 2 ; pen ua ) ; move ul , 4 - ul )  
[2887] ( move ul , ul ; pen 2 ; move ua , 2 )  | ( pen 2 ; move 0 , ua ; ( move ul , ul ; move ua , 2 ) )  | ( ( move ul , ul ; v0 = 2 ) ; pen v0 ; move ua , v0 )  
[2888] ( move 2 , ul ; pen 2 ; move ua , ul )  | ( move 3 - ul , ul ; pen 2 ; move ua , ul )  
[2889] ( move 3 , ua ; pen ua ; move 2 , ul )  | ( ( move 3 , 0 ; ( pen ua ; move 2 , ul ) ) ; v0 = ul )  
[2890] ( move 2 , 3 ; move 3 + 2 , 3 + ul )  | ( move 2 , 2 + ul ; move 4 + ul , 4 )  
[2891] ( move 4 , ul ; pen 0 ; move ul , ua )  | ( move 4 , ul ; pen ul - ua ; move ul , ua * 4 )  | ( ( move 4 , ul ; pen 0 ) ; move ul , ua ; pen 3 )  | ( ( move 2 * 2 , ul ; pen ul - 4 ) ; move 2 - ul , ua )  
[2892] ( move 2 , 4 + 3 ; move ua + 3 , 2 )  
[2893] ( pen ua ; move ul , 3 ; move ua , 2 )  | ( ( pen 4 ; move ul , 3 ) ; move ua , 2 )  | ( pen ua ; move ul , 4 - ul ; move ua , ul + ul )  
[2894] ( move ua , ul ; pen ua ; move 3 , 2 )  | ( move ua , ul ; ( pen ua ; move 2 , 2 ) ; move ul , 0 )  | ( move ua , ul ; ( pen ua ; move 3 , 2 ; v0 = ul ) )  
[2895] ( move ua , ul ; pen 0 ; move 4 , ul )  
[2896] ( move 3 , ul ; pen ua ; move 2 , ua )  | ( move ua - ul , ul ; pen ua ; move 2 , ua / 2 )  
[2897] ( move ua , ul ; pen 2 ; move 3 , ua )  
[2898] ( move ua , 3 ; pen 2 ; move ul , ua )  | ( move ua + ul , 3 ; move ua / 3 , 3 )  | ( move ua + ul , 3 ; move 0 , 3 ; move 3 , ua )  
[2899] ( move 2 , ua ; pen ua ; move 3 , ul )  
[2900] ( pen ua ; move ua , 2 ; move ua , 4 )  
[2901] ( move ua , 4 ; pen 0 ; move ul , ul )  | ( move ua , 4 - ua ; pen 0 ; move ul , ul )  
[2902] ( move 0 - 4 , 0 ; move ul , 3 - 4 )  | ( pen ul / 4 ; move 4 , ua / 2 ; move ul , ua / 3 )  
[2903] ( move ua + 3 , 3 + 2 ; move 4 , 2 )  
[2904] ( pen 3 ; move ua , ua ; move 3 , ul )  | ( ( pen 3 ; move ua , ua ; move 0 , ul ) ; move 3 , ua )  | ( ( pen 3 ; move ua , ua ) ; v0 = ul ; move 3 , v0 )  
[2905] ( move 2 , 4 + 2 ; move ua - 3 , 3 )  
[2906] ( pen 2 ; move ua , ul ; move 3 , ul )  
[2907] ( move 0 - 2 , 3 / 2 ; move 3 , ul )  
[2908] ( pen ua ; move 2 , ul ; move ua , 4 )  | ( pen 4 ; move 2 , ua + ul ; move ua , 4 )  | ( pen ua ; ( move 2 , ul ; pen ua ) ; move ua , 4 )  
[2909] ( move 3 + 2 , 2 ; move 4 - ua , 3 )  
[2910] ( pen 3 ; move 2 , ul ; move ua , ul )  
[2911] ( move ua , 2 ; pen ua ; move ul , 4 )  | ( move ua , 2 ; ( pen 4 ; move ul , 3 + ul ; pen 0 ) )  
[2912] ( move 4 , ul ; pen ua ; move ua , 2 )  
[2913] ( pen ua ; move ua , 3 ; move 3 , ul )  
[2914] ( move ua + 2 , 0 ; move 4 / 2 , 4 )  | ( move ua + 2 , ua ; move 3 - ul , 3 + ul )  | ( move ua + 2 , ua ; v0 = ul ; move v0 + v0 , 4 )  
[2915] ( move 0 , 3 * 3 ; move ua , 3 * 2 )  | ( move ul / ua , ua / 4 ; move ua , 4 )  | ( v0 = 4 * 2 ; move ua , ul - v0 )  | ( move 0 , 3 ; ( pen ul ; move ua , 4 * 3 ) )  | ( move ul , 0 - 4 ; ( move ua , ul - 4 ; v0 = ul ) )  
[2916] ( move 3 , ul ; pen 2 ; move ul , ua )  | ( move 3 , ul ; pen 2 ; move ul , ua * 4 )  
[2917] ( move ua , ul ; pen ua ; move 3 , 3 )  
[2918] ( move 4 , ul ; pen 0 ; move ul , ul )  | ( ( move 4 , ul ; pen ul ) ; pen ul / ua ; move ul , ul )  | ( move 4 , ul ; ( pen 2 / ua ; pen 0 ) ; move ul , ua + ul )  
[2919] ( pen 2 ; move ul , ua ; move ua , 4 )  
[2920] ( move 4 + 3 , 3 ; move ua + 3 , 2 )  
[2921] ( move 2 , 4 + 2 ; move 2 + ul , 4 )  
[2922] ( move 3 , 2 + 2 ; move 3 , ul - 3 )  
[2923] ( move 3 * 2 , ul ; move 3 + 2 , 2 )  
[2924] ( move 3 , 3 * 2 ; move 0 - 3 , ul )  | ( move 3 , 3 * 2 ; ( move 0 - 3 , ul ; pen 3 ) )  
[2925] ( move ua , ul ; pen 3 ; move ul , 2 )  | ( move ua , ul ; pen 4 - ul ; move ul , ul + ul )  
[2926] ( pen 3 ; move ul , ul ; move ua , 2 )  
[2927] ( move 4 + 3 , 2 * 2 ; move ua , 2 )  
[2928] ( move 3 , 3 + 2 ; move ua , 4 + 3 )  
[2929] ( move 2 , ua ; pen 4 ; move ua , ul )  | ( move ul + ul , ua ; ( pen 4 ; move ua , ul ) ; pen ul )  | ( ( move ul , 0 ; ( move ul , 0 ; pen 3 ) ) ; move ua , ul )  
[2930] ( move 2 - ua , 2 * 2 ; move 4 , 2 )  
[2931] ( move ua , 2 ; pen 3 ; move ul , ul )  | ( move ua , ul + ul ; pen 3 ; move ul , ul )  
[2932] ( move 2 - 3 , 2 ; move 4 + ul , 2 )  | ( move ul , ul - 2 ; move ua - ul , 4 + ul )  
[2933] ( move 3 + ul , 2 ; move 2 , 4 + 3 )  | ( move 4 , 2 ; move ul + ul , 4 + 3 )  
[2934] ( pen 2 ; move 3 , ua ; move ul , ul )  
[2935] ( move ua , ul ; pen 2 ; move 3 , ul )  | ( move ua , ul ; pen 3 ; move 3 , ul )  | ( move ua , ul ; pen ua / 3 ; move 3 , ul )  
[2936] ( move 4 , 2 ; pen ua ; move ua , ul )  | ( move 4 , 4 - 2 ; pen ua ; move ua , ul )  | ( ( move 4 , 2 ; pen ua * 3 ) ; ( move ua , ul ; pen ul ) )  
[2937] ( move 4 , ul ; pen 2 ; move ua , ua )  
[2938] ( move 3 * 3 , ua ; move 2 , 2 * 2 )  
[2939] ( move ua , 4 ; pen ua ; move 3 , ul )  | ( move ua , 4 ; ( pen ua ; move 3 , ul ) )  | ( move ua , ua + 4 ; ( pen ua ; move 3 , 4 - 3 ) )  | ( ( move ua , 3 + ul ; pen ua ) ; move 3 , ul - ua )  
[2940] ( move 0 , 4 * 3 ; move 3 + ul , 3 )  | ( move ul , 4 * 3 ; move 4 , ua + 3 )  | ( move 0 , 2 + ul ; move 4 , 4 * 3 ; pen 2 )  | ( move ul , 4 * 3 ; move 4 , 3 ; v0 = ua )  
[2941] ( move 4 + 4 , 2 + ul ; move 3 , 2 )  
[2942] ( pen ua ; move ul , ul ; move 4 , 2 )  | ( pen ua ; move ul , ul - ua ; move 4 , 2 )  | ( pen ua * 4 ; move ul , ul ; move 4 , 3 - ul )  
[2943] ( move 3 / 2 , 0 - 3 ; move 3 , ul )  
[2944] ( pen 3 ; move ul , ua ; move 3 , ul )  | ( pen 4 - ul ; ( move ul , ua ; move 3 , ul ) )  
[2945] ( move ul , ul ; pen 4 ; move ua , 2 )  | ( pen 3 + ul ; move 3 - 2 , ul ; move ua , 2 )  | ( move ul , ul ; ( pen 4 ; move ua , 2 ) ; v0 = ul )  
[2946] ( move 4 , 4 + ul ; move 3 , 2 + 2 )  | ( move 3 + ul , 3 + 2 ; move 3 , 4 ; pen ua * 2 )  
[2947] ( move 4 , 3 ; pen ua ; move ua , ul )  
[2948] ( move ua / 2 , 3 ; move 0 - 3 , 4 )  
[2949] ( move ua - 3 , 0 ; move 4 , 3 - 4 )  
[2950] ( move 2 , 4 - 2 ; move 4 + ul , 2 )  | ( v0 = ul + ul ; move v0 , v0 ; move 3 + 2 , v0 )  
[2951] ( pen 2 ; move ul , 4 ; move ua , ul )  
[2952] ( pen 4 ; move ua , ua ; move ua , 4 )  
[2953] ( pen 2 ; move 3 , ul ; move ul , ul )  | ( pen ua - 4 ; move ua - 3 , ul ; move ul , ul )  | ( pen 2 ; move 2 + ul , ua + ul ; move ul , 2 - ul )  
[2954] ( pen ua ; move ul , ua ; move 3 , 4 )  | ( pen ua ; move 3 , ul ; move ul , 0 - 4 )  | ( pen ua ; move 3 , ul ; move ul , ul + ul )  
[2955] ( move ua , ua ; pen 3 ; move ul , 4 )  
[2956] ( pen 3 ; move ul , 3 ; move ua , ul )  
[2957] ( move ul , 4 ; pen ua ; move 3 , ua )  | ( move ul , 4 ; ( pen ua ; move ua - 3 , ua ) )  
[2958] ( move ul , ul ; pen 3 ; move 3 , ua )  
[2959] ( pen 2 ; move ua , ul ; move 4 , ul )  
[2960] ( move ua , ul ; pen 4 ; move ua , 3 )  
[2961] ( move 4 , ua * 3 ; move 0 - 3 , 3 )  
[2962] ( move ua - 4 , 3 ; move 2 , 3 - 2 )  | ( move ua - 4 , 3 ; move 2 , ua + ul )  
[2963] ( pen ua ; move 3 , ua ; move ul , 4 )  
[2964] ( move 4 , 2 ; move 3 * 2 , ua - 2 )  
[2965] ( move 4 , 0 ; move 2 + ul , 2 / 4 )  
[2966] ( pen 2 ; move ul , ul ; move 3 , ul )  
[2967] ( pen 4 ; move ul , 2 ; move ua , ul )  | ( pen 4 ; ( move ul , 2 ; move ua , ul ) )  | ( ( pen ua ; pen ua ; move ul , ul + ul ) ; move ua , ul )  
[2968] ( move ul , 3 ; pen ua ; move 3 , ul )  | ( move ul , 3 ; pen 4 + ul ; move 3 , ul )  | ( move ul , 2 + ul ; pen ua ; move 3 , ul )  | ( move ul - 2 , ua ; ( pen ua ; move 3 , 4 ) )  | ( ( move ul , 3 ; pen ua - ul ) ; move 3 , ul ; v0 = ua )  
[2969] ( move ul - 4 , 0 ; move 3 * 2 , 3 )  
[2970] ( move 2 , 3 - 2 ; move 4 + ul , 3 )  | ( move 2 , ul ; move 4 + ul , ua + 3 )  | ( move 2 , ul ; move 4 + ul , 2 + ul )  | ( move 2 , ul - ua ; move 4 + ul , 3 )  | ( move ul + ul , ul ; move ua - ul , 3 )  
[2971] ( move ul , 3 + 3 ; move 4 , 3 + 2 )  | ( move ul , 0 ; move 0 - 4 , ua / 4 )  
[2972] ( pen ua ; move 3 , ul ; move ua , 4 )  | ( pen ua ; ( move 3 , ul ; move ua , ua + 4 ) )  
[2973] ( move 2 , 3 * 2 ; move 4 , 2 + ul )  
[2974] ( move ua , 3 + 3 ; move 4 + 3 , 3 )  
[2975] ( pen 2 ; move ul , ua ; move 4 , ul )  | ( move ul , ua + ua ; pen ul + ul ; move 4 , ul )  | ( ( pen ul ; pen 2 ) ; move ul , 0 ; move 2 * 2 , ul )  
[2976] ( move 2 * 2 , ul ; move 2 , 3 * 2 )  
[2977] ( move 3 - 4 , 3 ; move 0 - 3 , ul )  | ( move 3 , 4 ; move 0 , 0 - 2 ; move ul , ul )  | ( move 4 - ul , ua + 4 ; move ul , ua - ul )  
[2978] ( move 3 , ua ; pen 4 ; move ua , ul )  | ( move 3 , ua ; pen ua ; move ua , ul - ua )  
[2979] ( move 4 , ua ; pen 4 ; move ua , ul )  | ( move 4 , ua + ua ; pen 4 ; move ua , ul )  | ( move 4 , ua ; ( pen 2 + ul ; move ua , ul ) )  
[2980] ( move ua , 4 ; pen 3 ; move ul , ul )  
[2981] ( move 3 , ul ; pen 3 ; move ul , ul )  
[2982] ( move 4 , ua - 4 ; move 3 + 2 , 3 )  
[2983] ( move ul , 3 * 2 ; move 3 , 4 + 2 )  
[2984] ( move 4 , ul ; pen ua ; move 3 , ul )  
[2985] ( move ua , 4 ; pen 4 ; move ul , ua )  | ( move ua , 3 + ul ; ( pen ua ; move ul , ua ) )  | ( ( move 3 , 4 ; move 3 , ua ) ; pen 4 + ul ; move ul , ua )  
[2986] ( move 3 , 3 + 2 ; move 4 , ua - 4 )  
[2987] ( move 4 , ua ; pen ua ; move ul , 4 )  | ( move 4 , ua + ua ; pen ua ; move ul , 4 )  | ( ( pen ul ; move ua - 2 , ua ) ; pen ua + 2 ; move ul , 4 )  
[2988] ( move ua + 2 , 3 ; move 2 / 3 , 4 )  
[2989] ( move 3 , 3 + 2 ; move 4 * 2 , ul )  
[2990] ( move 2 , 3 - 4 ; move 2 , 4 + ul )  
[2991] ( move ua + 2 , 3 / 4 ; move 2 , 3 )  
[2992] ( move ua - 4 , 3 ; move 4 + 3 , 2 )  
[2993] ( pen 3 ; move ul , ul ; move 3 , ul )  
[2994] ( move 3 , 0 - ul ; move 2 , 4 * 4 )  
[2995] ( pen 3 ; move ul , ul ; move ua , 4 )  
[2996] ( pen 3 ; move 4 , ua ; move ul , ul )  
[2997] ( move 4 , ua + 3 ; move 4 * 2 , 2 )  
[2998] ( move 2 , ul - 3 ; move 3 * 2 , 3 )  | ( ( move 0 , ua - 2 ; move 2 , ua ) ; move ua , 2 + ul )  
[2999] ( pen ua ; move ua , ul ; move 4 , 4 )  
[3000] ( move 2 - 4 , 2 ; move 3 - ua , 4 )  
[3001] ( pen ua ; move ul , ul ; move 3 , 4 )  
[3002] ( move ua , 3 ; pen 4 ; move ul , ul )  | ( move ua , 3 ; pen ua ; move ul , ul )  | ( move ua , 3 ; pen 4 ; move ul , 3 - 2 )  
[3003] ( move 4 + 3 , 3 ; move 2 + ul , 4 )  | ( move 4 + 3 , 2 + ul ; v0 = ul ; move 3 , 4 )  
[3004] ( pen ua ; move 4 , ul ; move 3 , ul )  
[3005] ( move 2 , 2 - 3 ; move 3 , ul / 2 )  
[3006] ( pen 3 ; move 3 , ul ; move ul , ul )  | ( pen 3 ; ( move 3 , ul ; move ul , ul ) )  | ( pen 3 ; move 3 , ua + ul ; move ul , ul )  
[3007] ( move 3 , 3 + 2 ; move 3 , ua / 3 )  
[3008] ( move ul , 3 ; pen ua ; move 4 , ul )  | ( move ul , 3 ; ( pen ua + ua ; move 4 , ul ) )  
[3009] ( move 3 * 2 , 3 ; move 2 , 4 + ul )  
[3010] ( move ul , 4 ; pen 3 ; move ua , ul )  | ( ( ( pen ua + ul ; pen 3 ) ; move ul , 4 ) ; move ua , ul )  
[3011] ( move 2 , ua - 4 ; move 2 , 2 / 3 )  
[3012] ( move ua / 4 , 0 ; move 3 , 4 + 3 )  
[3013] ( move ua , ul ; pen 4 ; move 3 , ul )  | ( move ua , ul ; pen ua ; move 3 , ul )  | ( move ua , ul ; pen ua + 2 ; move 3 , ul )  | ( move ua , ul ; pen ua ; move 2 + ul , ul )  | ( ( move ua , ul ; pen ua ) ; v0 = 3 ; move 3 , ul )  
[3014] ( move 2 , ua + 3 ; move 3 , 4 * 3 )  
[3015] ( move 3 , 2 - 3 ; move 3 * 2 , ul )  
[3016] ( move 2 - 3 , 4 ; move 4 , 2 + ul )  
[3017] ( move 4 , 0 ; move 3 * 3 , 4 + ul )  | ( v0 = 3 ; move 4 , 0 ; move ua + 3 , 2 + v0 )  
[3018] ( move ul - 3 , 3 ; move 3 , 4 + 2 )  
[3019] ( move 4 + ul , 4 * 3 ; move 2 , 2 )  
[3020] ( move 3 , 0 - 3 ; move ua / 4 , 4 )  
[3021] ( move 4 , ul ; move 4 + 3 , 2 * 2 )  
[3022] ( move 2 / 3 , 2 ; move 4 + 3 , ul )  | ( move 4 / ua , ul + ul ; move ua + ul , ul )  
[3023] ( move 4 , 3 + 2 ; move ul , 4 * 2 )  
[3024] ( move 2 , 2 ; move 3 * 3 , ua / 3 )  
[3025] ( move 4 , 2 - ua ; move 3 , 4 + 4 )  
[3026] ( move ul , 4 ; pen ua ; move 4 , ul )  | ( move ul , ua + 4 ; pen 3 + 3 ; move 4 , ul - ua )  | ( move ua / 4 , 4 ; ( pen ul ; pen ua ; move 4 , ul ) )  
[3027] ( move ua - 4 , 2 ; move 3 , 3 / 2 )  
[3028] ( move 2 , ua / 3 ; move 4 + 2 , 4 )  
[3029] ( move 3 , 2 / 3 ; move 4 , 2 + ul )  
[3030] ( pen 3 ; move ul , ul ; move 4 , ul )  
[3031] ( move 3 / 2 , 4 * 2 ; move ua , 2 )  
[3032] ( move ua , ul ; pen 4 ; move 4 , ul )  | ( move ua , ul ; pen ua ; move 4 , ul )  
[3033] ( move 4 , 4 ; pen ua ; move ul , ul )  | ( move 4 , 4 ; ( pen ua ; move ul , ul ) )  | ( move 4 , ua + 4 ; ( pen ua * 2 ; move ul , ul ) )  | ( move 3 + ul , 3 + ul ; pen ua ; move ul , ua + ul )  | ( move 4 , ua + 4 ; pen ua + ul ; move ul , ul - ua )  | ( move 4 , 4 ; ( v0 = ul ; pen ua ; move v0 , v0 ) )  
[3034] ( move 3 + 3 , 3 ; move 4 , ul - 3 )  
[3035] ( move 3 , 3 - 4 ; move ul - 3 , 2 )  
[3036] ( move ul , 3 ; move 4 + 4 , 4 + 2 )  
[3037] ( move 3 , 4 * 4 ; move 2 + ul , 2 )  
[3038] ( move 4 , 3 ; move 4 * 2 , 2 + ul )  | ( move 3 , ua + 3 ; move 4 * 2 , 3 ; v0 = 0 - ul )  
[3039] ( move 3 , 4 * 3 ; move ua + 3 , 3 )  
[3040] ( move ul , ul ; pen 4 ; move 4 , ua )  | ( move ul , ul ; ( pen ua ; move 4 , 0 ) )  | ( move ul , ul ; pen ua * 3 ; move 4 , ua )  | ( move ul , ul ; ( pen 4 ; move 4 , ua ; v0 = 4 ) )  
[3041] ( move 3 + 3 , 4 ; move ua , 4 + 4 )  
[3042] ( move ul , ul ; pen 4 ; move ua , 4 )  | ( move ul , ul ; pen 4 ; move ua , ua + 4 )  
[3043] ( move 4 + 3 , 2 ; move ul , 2 / 3 )  
[3044] ( pen 4 ; move ua , ul ; move 4 , ul )  | ( ( move 0 , ua ; pen 3 ; move ua , ul ) ; move 4 , ul )  
[3045] ( move 2 , 3 ; move ul - 4 , 2 / 3 )  | ( move 2 , 0 ; move 2 , 2 + ul ; move 0 - 3 , 2 / 3 )  
[3046] ( move 3 * 2 , ul - 3 ; move 3 , 4 )  
[3047] ( move ul , 4 + 2 ; move 4 , 2 / 3 )  
[3048] ( move 0 , 3 / 4 ; move 4 + ul , 4 )  | ( move 0 , 4 / ua ; move ua - ul , ul )  | ( move 0 , 4 - ul ; move ua - ul , ua * ua )  | ( move 0 , ul ; move ul - 2 , 2 / 3 ; move 4 , ua / 2 )  
[3049] ( move ul - 4 , 3 * 2 ; move 2 , 4 )  
[3050] ( move ul - 4 , 3 ; move 4 + 4 , 2 )  
[3051] ( move 3 * 2 , 3 * 2 ; move ul , 4 )  
[3052] ( move 4 + ul , 4 ; move 4 , 2 * 2 )  
[3053] ( move 3 * 3 , ua - 4 ; move 3 , 3 )  
[3054] ( move 3 , ua ; move 4 + 3 , 4 * 3 )  
[3055] ( move ua - 2 , 4 ; move 4 , 4 + 4 )  
[3056] ( move 3 , 3 / 2 ; move ua , 4 * 2 )  
[3057] ( move 3 , ul / 2 ; move 3 - 2 , 4 )  
[3058] ( move 4 , ul ; pen 4 ; move ul , ul )  | ( ( pen ul ; move 4 , ul ; pen ua ) ; move ul , ul )  | ( move 4 , ul ; ( pen ua ; v0 = ul ; move v0 , v0 ) )  
[3059] ( move ul , ul ; pen 4 ; move 4 , ul )  | ( move ul , ul ; ( pen 4 ; move 4 , 3 - 2 ) )  | ( move ul , ul ; ( pen 3 + ul ; move 4 , ul ) )  | ( ( move ul , ul ; pen 4 ) ; move 3 + ul , ul ; v0 = 0 )  
[3060] ( move ua - 3 , 4 * 3 ; move 3 , 3 )  
[3061] ( move 3 * 2 , 4 ; move 3 , 4 + ul )  
[3062] ( move 2 , 4 * 3 ; move 4 + 3 , ul )  
[3063] ( move 3 * 2 , 2 ; move 4 , 4 / ua )  
[3064] ( move 4 , 4 * 2 ; move ua , 2 / 3 )  
[3065] ( move 4 , ua ; move 2 / 3 , 4 * 2 )  
[3066] ( move 4 + 2 , ul ; move 4 , 4 * 3 )  
[3067] ( move 4 * 2 , 4 ; move 3 , ul - 3 )  
[3068] ( move ua / 3 , 4 * 2 ; move 3 , 3 )  
[3069] ( move ua + 3 , 4 * 3 ; move 4 , 4 )  
[3070] ( move ua / 4 , 2 ; move 4 , 4 * 2 )  
[3071] ( move 4 , 4 * 4 ; move 3 , ul - 2 )  
[3072] ( move 3 , 2 / 4 ; move ua / 4 , 2 )  
[3073] ( move 3 * 3 , 4 + ul ; move 4 , 4 )  
[3074] ( move 4 , 4 / 2 ; move 4 , ul - 2 )  | ( move 4 , ul + ul ; move 4 , 0 - ul )  | ( move 4 , 2 ; move 3 + ul , ua - ul )  | ( v0 = 0 - 4 ; move v0 , ul ; move v0 , ul )  | ( move 4 , 4 / 2 ; ( move 3 , ua - ul ; move ul , 0 ) )  
[3075] ( move 4 - ua , 3 ; move 4 , 4 * 3 )  
[3076] ( move 4 + 3 , 3 / 4 ; move 4 , ul )  
[3077] ( move ul / 3 , 4 ; move 4 , 3 * 2 )  | ( move 0 , 4 + ul ; move 3 / ua , ul ; move 4 , 3 + ul )  
[3078] ( move 3 / 2 , 3 ; move 3 , ul / 4 )  
[3079] ( pen 4 + 4 ; move ua + 2 , 4 * 2 )  | ( v0 = 4 + 4 ; pen v0 ; move v0 , v0 )  | ( pen ua ; ( v0 = 4 + 4 ; move v0 , v0 ) )  | ( pen ua ; v0 = 4 ; move v0 + v0 , v0 + v0 )  
[3080] ( pen ua * 3 ; move 4 + 3 , 4 * 2 )  | ( move ul , 0 ; pen ua - 2 ; move ua + ul , 4 + 4 )  
[3081] ( move 3 , 0 ; move ua + 2 , 0 - ul )  
[3082] ( move 2 , 0 ; move ua + 2 , ua - 2 )  
[3083] ( move ua + 2 , 0 ; move ua + 3 , 2 )  
[3084] ( move 2 - ua , 0 ; move 3 , ua + 2 )  | ( move 2 - ua , ua ; move 4 - ul , ua + 2 )  
[3085] ( move 0 - ua , 2 ; move ua , 3 + 2 )  
[3086] ( move ua , 0 ; move 3 + ul , 0 - 4 )  
[3087] ( move ul + ul , 0 ; move 0 - 4 , 2 )  
[3088] ( move 4 + 2 , ua ; move ua , 0 - 2 )  
[3089] ( move 4 , 0 ; move 0 - ua , 3 + ul )  
[3090] ( pen 4 / 2 ; move 4 * 2 , 2 / ua )  
[3091] ( move 0 - ua , 3 ; move 4 , 0 - ul )  
[3092] ( move 3 + 2 , 2 + ul ; move ua , 2 )  
[3093] ( pen ua ; move ul , 0 ; move ua , ul )  | ( pen ua ; move ul , ua ; move ua , ul )  | ( pen 3 + 2 ; move ul , 0 ; move ua , ul )  | ( pen ua * 4 ; move ul , ua ; move ua , ul )  | ( pen ua ; move ul , ua ; move ua , ua + ul )  | ( pen 3 + 2 ; move ul , ua * 3 ; move ua , ul )  | ( pen ua - ul ; move 2 - ul , ua ; move ua , ul )  | ( v0 = ua ; pen ua ; ( move ul , v0 ; move v0 , ul ) )  
[3094] ( move 0 - ul , ua ; move 3 + 2 , 3 )  
[3095] ( move 0 - 2 , 3 + 3 ; move ua , ul )  
[3096] ( move ua + 2 , 0 ; move 3 / ua , 2 )  
[3097] ( move ua , 0 ; move 4 + ul , 3 + 2 )  | ( move ua , 0 ; move 4 + ul , 4 + ul )  | ( move ua , ua ; v0 = 4 + ul ; move v0 , v0 )  
[3098] ( move 0 - 2 , ul ; move 2 , 3 - ua )  | ( move ul - 3 , ul ; move ul + ul , 3 )  | ( move 4 - ua , ul ; move 2 , 3 ; v0 = 3 + ul )  
[3099] ( move 2 , ua + ua ; move 2 , 4 + 2 )  
[3100] ( move 2 , 0 - 2 ; move ua , 4 + ul )  
[3101] ( move ul + ul , 0 ; move 3 , 0 - 4 )  | ( move ua / 4 , ua ; move 3 , ua - 4 )  
[3102] ( move 3 , 0 ; move 2 - ua , ua + 4 )  
[3103] ( move ul , 0 ; pen ua ; move ua , ul )  | ( move ul , ua ; pen 4 ; move ua , ul )  | ( move ul , ua ; pen ua ; move ua , ul )  | ( pen ua * 2 ; move ul , 0 ; move ua , ul )  | ( move ul , ua ; pen 4 + 4 ; move ua , ul )  | ( move ul , 0 ; pen ua + ua ; move ua , ul )  | ( move ul , ua ; pen ua ; move ua , ul - ua )  | ( pen ua + ul ; move ul , ua * 2 ; move ua , ul )  | ( move ul , ua ; pen ua + ul ; ( move ua , ul ; v0 = ul ) )  
[3104] ( move 0 - 3 , 0 - ul ; move 3 , ul )  
[3105] ( move 0 - ul , ul ; move 3 + 2 , 2 )  | ( move ul , 4 ; move 4 + ul , ul - 2 )  
[3106] ( move ua , 0 ; move 3 + 2 , ul - 3 )  | ( move ua , ua ; move 4 + ul , 0 - 2 )  
[3107] ( move 3 + ul , ul ; move 0 - 2 , 2 )  | ( move 4 , ul ; move ul - 3 , 4 / 2 ; v0 = ua + 2 )  
[3108] ( move ua , ul ; pen 0 ; move ul , ua )  | ( move ua , ul ; ( pen 0 ; move ul , ua ) )  | ( move ua , ul ; pen 0 - ul ; move ul , ua )  | ( move ua , ul ; pen 2 - ua ; move ul , ua )  | ( move ua , ul ; pen ul - 4 ; move ul , ua )  | ( ( move ua , ul ; v0 = ul ) ; pen 0 ; move v0 , 0 )  | ( ( ( move ua , ul ; pen 0 ) ; move ul , 0 ) ; v0 = ul )  
[3109] ( pen ua ; move ua , 0 ; move ul , ul )  | ( pen ua ; move ua , ua * 4 ; move ul , ul )  | ( pen ua + ul ; ( move ua , 0 ; move ul , ul ) )  | ( pen ua + ul ; ( move ua , ua ; move ul , ul ) )  | ( ( pen ua ; move ua + ul , ua ) ; move ul , 2 ; pen ul )  | ( ( pen 4 * 3 ; move ua , 0 ) ; move ul , ul ; v0 = ul )  
[3110] ( move 0 , ul / 3 ; move 0 - ua , 2 )  | ( v0 = ul / 3 ; move ua , v0 + 2 )  | ( v0 = ua * ua ; move ua , ul - v0 )  | ( move 0 , 2 ; move ua , ul / 3 ; v0 = ul )  
[3111] ( pen ua ; move ua , ua ; move ua , 2 )  | ( pen ua ; ( move ua , ua ; move ua , 3 - ul ) )  
[3112] ( move ua , 4 ; move 3 + ul , 0 - 2 )  
[3113] ( move 3 + 2 , 0 ; move 4 + ul , ul )  | ( v0 = 4 + ul ; move v0 , v0 * ua ; move v0 , ul )  
[3114] ( move 2 + 2 , ul ; move 2 - ua , 3 )  
[3115] ( move ua , 3 + 2 ; move 3 , 2 - ua )  
[3116] ( move ua , 2 ; pen ua ; move ul , ua )  | ( move ua , 2 ; pen ua ; move 2 - ul , 0 )  | ( move ua , 2 ; ( pen ua * ua ; move ul , ua ) )  | ( ( move 0 , ul ; move ua , ul ) ; pen ua ; move ul , ua )  | ( move ua , 2 ; pen ua + ua ; ( v0 = ua ; move ul , ua ) )  
[3117] ( move 2 - ua , 0 ; move ul , 3 * 2 )  | ( move 2 - ua , ua ; move ul , 4 + 2 )  
[3118] ( move 2 , 3 * 2 ; move ua , ua + 2 )  
[3119] ( move ua , 0 ; move 3 + 3 , 3 - ul )  
[3120] ( move ua , ul ; pen 0 ; move ul , ul )  | ( ( move ua , ul ; pen 0 ) ; move ul , ul )  | ( move ua , ul ; pen 3 - ua ; move ul , ua + ul )  | ( move ua , ul ; ( pen 0 ; ( move ul , ul ; pen 3 + ul ) ) )  | ( move ua , ul ; ( pen 0 ; move ul , ul ; move ul / 3 , ul ) )  
[3121] ( pen ua ; move ua , ua ; move ul , 2 )  | ( pen ua ; move ua , 0 ; move ul , 4 - 2 )  | ( pen ua ; move ua , 0 - ua ; move ul , 2 )  | ( pen ua + ul ; ( move ua , ua ; move ul , 2 ) )  
[3122] ( pen ua ; move ua , ua ; move 2 , ul )  | ( ( pen ua - ul ; move ua , ua ) ; move 4 - 2 , ul )  
[3123] ( move 2 , ua ; move 2 - ua , 3 + 3 )  | ( v0 = 3 ; move 3 , 0 ; move 2 - ua , v0 + v0 )  
[3124] ( move 2 - 3 , 0 ; move 3 , ua * ua )  
[3125] ( move 0 - 3 , 4 + 2 ; move ua , ul )  | ( move ul - 4 , 3 * 2 ; move ua , ul )  
[3126] ( move 3 , 0 ; move 4 + 2 , ua * ua )  
[3127] ( move 3 - 4 , 0 ; move ua + 2 , ul )  
[3128] ( move 4 - ul , 0 - 2 ; move ua , 2 )  
[3129] ( move 2 , 0 - ul ; move ua , 4 - 2 )  | ( move 2 , 2 - 3 ; move ua , ul + ul )  | ( move 2 , 0 - ul ; move ua , 3 - ul ; pen 3 )  | ( v0 = 3 - 4 ; move 2 , v0 ; move ua , 2 )  | ( move ul + ul , ua - ul ; move 0 , ul ; move ua , ul )  
[3130] ( move ua , ul ; pen ua ; move 2 , ua )  | ( ( move ua , ul ; pen ua + 4 ) ; move 2 , ua )  
[3131] ( move ua + 2 , ua - 4 ; move 2 , 2 )  
[3132] ( pen ua ; move ua , 2 ; move ua , ul )  
[3133] ( move 4 + 3 , ua ; move ua + 2 , 2 )  
[3134] ( move 4 + 2 , 2 ; move ua , 2 - ua )  
[3135] ( move ul , ul ; pen 0 ; move ua , ul )  | ( move ul , ul ; pen 3 - 4 ; move ua , ul )  | ( move ul , ua + ul ; pen 0 ; move ua , ul )  | ( move ul , ul ; pen 0 ; move ua , ua + ul )  | ( move ul , ua + ul ; pen 0 ; move ua , 3 - 2 )  | ( pen ul ; ( ( move ul , ul ; pen 0 ) ; move ua , ul ) )  | ( move ul , ua + ul ; ( pen ul ; pen 0 ) ; move ua , ul )  
[3136] ( move ua , 2 ; move 3 + 2 , 3 + ul )  | ( ( move ua , 2 ; move 2 , 4 - ua ) ; move 3 , ua )  | ( move ua , 2 ; move 4 + ul , 4 ; move ul / 4 , 2 )  
[3137] ( move ua , 2 + 2 ; move 2 , ua - 4 )  
[3138] ( move 3 , 2 ; move 0 - 3 , ul + ul )  
[3139] ( move 0 - 2 , ul ; move 3 , 3 + ul )  | ( move ul - 3 , ul - ua ; move 3 , ua + 4 )  
[3140] ( move 4 + ul , 3 + 0 ; move 2 , ul )  | ( move 4 + ul , 2 + ul ; move 2 , ul )  | ( move 4 + ul , 3 ; move 2 , ul ; v0 = 4 * 2 )  | ( ( pen ul ; move 4 + ul , 3 ; move 2 , ul ) ; pen 0 )  | ( v0 = ul ; move 4 + v0 , v0 + 2 ; move 2 , v0 )  
[3141] ( pen ua ; move ua , ua ; move 3 , ul )  | ( pen 4 ; ( move ua , 0 ; move 3 , ul ) )  | ( pen ua ; move ua , ua ; move 3 , ua + ul )  
[3142] ( move 4 * 2 , 0 ; move ua + ul , 3 )  | ( move 4 * 2 , 0 ; move 0 , ul ; move ua + ul , 2 )  
[3143] ( move 2 + ul , 4 + 2 ; move ua , 3 )  
[3144] ( move 2 , 0 ; move ua - 4 , ul - 3 )  | ( move ul + ul , ua * 2 ; move ua - 4 , ua - 2 )  
[3145] ( move 3 + 2 , ul - 2 ; move ul , 2 )  
[3146] ( move ua - 2 , 2 - 4 ; move ua , 2 )  | ( ( v0 = ua - 2 ; move v0 , v0 ) ; move ua , 2 )  
[3147] ( move 3 / 2 , ua ; move ua + 2 , 2 )  
[3148] ( move 2 - ua , 2 ; move 3 + ul , 3 )  
[3149] ( move ua , ua ; pen ua ; move 3 , ul )  | ( move ua , 0 ; pen ua - ul ; move 3 , ul )  | ( move ua , 0 - ua ; ( pen ua ; move 3 , ul ) )  | ( ( move ua , 0 ; pen ua ; move 3 , ul ) ; v0 = 4 )  
[3150] ( pen ua ; move ua , ul ; move ua , 3 )  
[3151] ( move ul - ua , 0 ; move 4 , 2 - 3 )  
[3152] ( move 0 - 2 , ua ; move 4 , 3 - ul )  | ( move ul - 3 , 0 ; move 3 + ul , ul + ul ; move 0 , ul )  
[3153] ( move 4 - ua , 0 ; move 4 + 2 , ul )  
[3154] ( move 3 - ua , ua / 3 ; move 2 , 0 )  
[3155] ( move ua , ul ; pen ua ; move 2 , ul )  | ( move ua , ul ; pen 4 + ul ; move 2 , ua + ul )  | ( move ua , ul ; ( pen ua + ul ; move 2 , ul ) )  | ( ( move ua , ul ; pen ua + 2 ) ; move ua / 3 , ul )  
[3156] ( move 3 + 2 , ul ; move 2 + ul , 3 )  | ( move ua - ul , ua + ul ; move 3 , 3 )  | ( move 3 + 2 , ul - ua ; move 2 + ul , 3 )  
[3157] ( move 4 , ua - 2 ; move ua - 2 , 2 )  
[3158] ( move 2 - ua , ua ; move 2 , 3 * 2 )  
[3159] ( move 0 , 3 * 3 ; move ua + 3 , ul )  | ( move ul , ul ; v0 = 3 * 3 ; move v0 , v0 )  
[3160] ( move 4 + ul , 0 - 3 ; move ua , 3 )  
[3161] ( pen ua ; move 2 , ul ; move ua , ul )  | ( pen ua * 3 ; ( move 2 , ul ; move ua , ul ) )  | ( pen ua ; ( move 2 , ul - ua ; move ua , ua + ul ) )  | ( v0 = ul ; ( pen ua ; move 2 , v0 ) ; move ua , v0 )  | ( pen ua ; v0 = ul ; ( move 2 , v0 ; move ua , v0 ) )  
[3162] ( move ua + 2 , ua * 2 ; move 3 , 3 )  | ( move ua + 2 , ua + ua ; move 3 , 3 )  | ( move 4 * 2 , 0 ; move 3 , 3 ; pen ul )  | ( ( move ua , 0 ; move 2 , 0 ) ; move 2 + ul , 3 )  
[3163] ( move ua / 3 , 0 ; move 4 , 0 - ul )  | ( move ul + ul , ua ; move 4 , ua - ul ; pen ua )  | ( ( move 2 , ua ; move 4 , ua - ul ) ; v0 = ul )  
[3164] ( move ul , 2 ; move ua + 2 , 4 + 3 )  
[3165] ( move 3 + 2 , 4 ; move ua + ul , 2 )  
[3166] ( move ul + ul , 0 ; move 3 * 3 , 2 )  | ( move 2 , 0 - ua ; move 4 + ul , 2 ; move 2 + 2 , 0 )  
[3167] ( move ua - 3 , ua + 2 ; move 4 , 2 )  
[3168] ( move ua , ua ; pen ua ; move ua , 4 )  | ( move ua , ua ; pen ua + ul ; move ua , 4 )  
[3169] ( move 4 , 0 ; move ua - 2 , 4 - ua )  | ( move 4 , ua + ua ; move ua - 2 , 2 * 2 )  | ( move 2 + 2 , ua ; move ul / 4 , 3 + ul ; move 4 , 0 )  
[3170] ( move ul , 0 - ul ; move 3 , 4 + 2 )  
[3171] ( move 2 * 2 , 0 - ul ; move 3 , ul )  | ( move 4 , ua - ul ; move 3 , ul ; pen ua )  | ( move 4 , ua - ul ; v0 = 3 ; move 3 , ul )  | ( move 4 , ua - ul ; move 4 - ul , ul ; pen 0 )  
[3172] ( move 0 - 4 , ul ; move 2 , ua + 4 )  
[3173] ( move 2 , ul ; pen ua ; move ua , ul )  | ( move ul + ul , ul ; pen 4 ; move ua , ul )  | ( ( move 2 , ul ; pen ua * 4 ) ; move ua , ul )  | ( ( move ul + ul , 3 - 2 ; pen ua + 3 ) ; move ua , ul )  | ( ( move 2 , ul ; pen ua + ua ; v0 = ua ) ; move ua , ul )  
[3174] ( move ua , 3 / ua ; move 2 , 2 + 2 )  | ( move ua , 3 / ua ; move ul , 4 ; move ul , 0 )  
[3175] ( move ua / 3 , 0 ; move 3 - ua , 2 )  
[3176] ( move 3 - 2 , 2 ; move 2 - ua , ul )  | ( move ul , ul + ul ; move 2 - ua , ul )  | ( move ul , 2 ; ( move 2 - ua , ul ; pen ua ) )  | ( v0 = 2 ; move ul , v0 ; move v0 - ua , ul )  | ( v0 = ul ; move ul , v0 + v0 ; move 2 - ua , v0 )  
[3177] ( move 2 , 0 ; move ul - 4 , ul - 3 )  
[3178] ( move 4 - ua , 0 ; move ul - 3 , 3 )  | ( move 2 , ua / 2 ; move ul + ul , 3 )  
[3179] ( move ua , 4 * 2 ; move 3 , 0 - ul )  
[3180] ( move ua , 2 - 4 ; move 4 , ua + 2 )  
[3181] ( move 0 - 4 , ua - 2 ; move ul , 4 )  | ( move ul , ul - 2 ; move 4 , ul - 2 )  | ( v0 = ul ; move ul , 2 - 3 ; move 4 , ua - v0 )  
[3182] ( move 2 + ul , 3 ; move 2 , ua - 4 )  | ( move ua / 3 , ua / 3 ; move 3 , 4 )  
[3183] ( move 3 - ul , 0 ; move 2 , ul - 4 )  | ( move 2 , 0 ; move 2 , ul - 4 ; v0 = ul )  | ( v0 = 4 / 3 ; move 2 , 0 ; move 2 , ua - 3 )  
[3184] ( move ua , 3 ; move ua - 3 , 2 * 2 )  
[3185] ( move ul , 2 ; move 0 - 4 , 2 / ua )  
[3186] ( move ua , 3 - ua ; move 4 + 2 , 3 )  | ( move ua , 3 ; move 0 , 2 ; move 4 + 2 , ul )  | ( v0 = 3 ; move ua , v0 ; move 3 + v0 , v0 )  
[3187] ( move 2 , ua ; move 4 + ul , 2 - 3 )  | ( move 2 , 0 ; move 4 + ul , ua - ul )  | ( move 2 , ua ; move ul , ua - ul ; move 4 , ua )  | ( move ul , ua ; move ul , 0 ; move 4 + ul , ul - 2 )  | ( move 4 - 2 , 0 ; move 3 + ul , ul - 2 ; move ul , ua )  
[3188] ( move 3 + ul , ul - 3 ; move 2 , 2 )  | ( move 4 , ua - 2 ; move 2 , 3 - ul )  
[3189] ( move 3 , ul + ul ; move 4 + 2 , 2 )  
[3190] ( move 4 , 2 + ul ; move 2 , 3 - ua )  | ( move 4 , 2 + ul ; move 3 - ul , 3 )  | ( move 4 , 3 ; pen ul ; move 2 , 3 - ua )  | ( move 4 , 3 ; move ul , 4 - ul ; move ul , ua )  | ( ( move 4 , ua + 3 ; move ul , 3 ) ; move ul , 0 )  
[3191] ( move 3 - 4 , 2 ; move ua + ul , 2 )  
[3192] ( move 4 + ul , 2 + ul ; move 2 , 3 )  | ( move 4 , 3 ; move ul , 0 ; move 2 , 3 )  | ( move 4 + ul , 3 ; move ul + ul , ua + 3 ; v0 = ul )  
[3193] ( move ul , 2 ; move ua + 2 , 3 / 2 )  
[3194] ( move 3 , 3 + 2 ; move ul , ua + 4 )  | ( move 3 , 4 + ul ; move ul , 3 + ul ; move 0 , ul )  
[3195] ( move 4 , 0 ; move ua / 4 , ua + 2 )  | ( move 4 , ua ; move ua / 4 , 2 ; v0 = ul )  
[3196] ( move ua , 2 ; move ul / 2 , 3 + 2 )  | ( move ua , 2 ; move ul / 3 , 4 + ul )  | ( move ul / ua , 3 ; move ua , ua - ul )  | ( pen ul ; move ua , 2 ; move 3 / ua , 4 + ul )  
[3197] ( move 4 , 3 - ua ; move ua , 0 - 4 )  | ( pen ul ; ( move 4 , 3 ; move ua , ua - 4 ) ; pen 4 - 3 )  
[3198] ( move 2 + ul , 2 ; move 4 , ua - 3 )  | ( pen ul ; move 3 , ul + ul ; move 0 - 4 , ul / ua )  
[3199] ( move 4 + 3 , 2 ; move ua - ul , 2 )  
[3200] ( move 3 , 0 ; move 3 + 3 , ul / ua )  
[3201] ( pen ua ; move ua , ul ; move 3 , ul )  
[3202] ( move 4 + ul , 2 ; move ua + 4 , 2 )  
[3203] ( move 2 + ul , 2 ; move 4 - ua , 3 )  | ( move ua / 2 , 2 ; move 4 - ua , 3 ; pen ul )  
[3204] ( move 2 , ua - 2 ; move ua , 2 / 3 )  
[3205] ( move 4 , ua + 4 ; move ua - 2 , 2 )  
[3206] ( move 3 * 2 , ul ; move 3 , ua + 2 )  | ( move 4 + 2 , ul ; move ul , 2 ; move 2 , ua )  
[3207] ( move ua , ul ; pen 3 ; move ul , ua )  | ( move ua , ul ; pen 4 ; move ul , ua )  | ( move ua , ul ; pen 3 ; move ul , ua * 3 )  | ( move ua , ul ; pen 2 + ul ; move ul , ua )  | ( move ua , ul ; ( pen 3 ; v0 = 0 ) ; move ul , v0 )  
[3208] ( move 3 , ul ; pen ua ; move ua , ul )  | ( move 3 , ul ; pen ua * 3 ; move ua , ul )  | ( move 3 , ul ; pen ua + ul ; move ua , ul )  | ( move 3 , ul ; pen ul ; ( pen ua ; move ua , ul ) )  | ( ( move 3 , ul ; pen ua ; move ua , ul ) ; v0 = ul )  
[3209] ( move 0 - 3 , 2 / 3 ; move ua , ul )  
[3210] ( move 2 - ul , 2 ; move 3 , ua - 3 )  
[3211] ( move 3 * 2 , 3 ; move 2 , ua + ul )  
[3212] ( move 4 + 2 , 4 + ul ; move ua , 2 )  
[3213] ( move 0 - ul , ua ; move 4 * 2 , 3 )  
[3214] ( move 4 , ua * 2 ; move ua + 2 , 3 )  | ( move 3 + ul , ua ; move 4 * 2 , 3 ; v0 = ul - 2 )  | ( ( move 4 , 0 ; move 2 , 3 ; v0 = ua ) ; move ua , ua )  
[3215] ( move 3 + 2 , 3 ; move ua , ua - 4 )  
[3216] ( move ua , 3 + 2 ; move ua , 4 * 2 )  
[3217] ( move 3 , ua ; pen ua ; move ul , ul )  | ( move 3 , 0 ; pen ua ; move ul , ua + ul )  | ( move 3 , ua ; pen ua + ul ; move ul , ul )  | ( move 3 , 0 ; ( pen ul ; ( pen ua ; move ul , ul ) ) )  
[3218] ( move ul , ul ; pen 2 ; move ua , ul )  | ( ( move ul , ul ; pen 2 ) ; move ua , ul )  | ( move 4 / ua , ul ; pen ul + ul ; move ua , ul )  
[3219] ( pen ua ; move ua , 3 ; move ul , ul )  | ( ( pen ul ; pen ua ) ; move ua , 3 ; move ul , ul )  
[3220] ( move 2 , ua * ua ; move 2 , 4 * 2 )  
[3221] ( move 3 , ul ; move 0 - 4 , 4 + ul )  
[3222] ( move 4 , 2 / ua ; move ua + 2 , 3 )  
[3223] ( move 3 - ua , 2 ; move 2 , ul - 4 )  
[3224] ( move ul , ua ; pen ua ; move 4 , ul )  | ( move ul , 0 ; pen ua ; move 4 , ua + ul )  | ( ( move ul , ua ; pen ua * ua ) ; move 4 , ul - ua )  
[3225] ( move ul , 2 ; move 4 + ul , 3 + 3 )  
[3226] ( pen ua ; move ua , ul ; move ul , 4 )  | ( pen ua ; move ua , ul ; move 4 / 3 , 4 )  
[3227] ( move 3 + 3 , 4 ; move 3 , ua + ul )  
[3228] ( move ul , ua ; move 3 + 2 , 2 / 3 )  
[3229] ( move 4 + 3 , ul ; move 4 , ua + 2 )  | ( ( move 4 + 3 , ul ; v0 = 3 ) ; move 4 , ul + ul )  | ( ( pen ul ; move 4 + 3 , ul ; move 4 , 2 ) ; v0 = ul )  
[3230] ( move 4 + 3 , 3 ; move ua , 3 + ul )  
[3231] ( move ul , 4 + 3 ; move 3 , 2 - ua )  
[3232] ( move 4 / 3 , 0 ; move ul - ua , 2 )  
[3233] ( move ul , 0 - ul ; move 3 , 2 / 3 )  
[3234] ( move 2 , 3 ; move 4 + 3 , ua - ul )  
[3235] ( move ul , 2 - ua ; move 4 , 3 + 3 )  
[3236] ( move ul + ul , 0 ; move 4 * 2 , 4 )  | ( move ua - 3 , ua * 3 ; move 4 * 2 , 4 )  
[3237] ( pen ua ; move ul , ul ; move 3 , ul )  | ( ( pen ua ; move ul , ul ) ; move 3 , ul )  | ( pen ua ; move ul , ua + ul ; move 3 , ul )  | ( pen ua ; ( pen ua ; ( move ul , 2 - ul ; move 3 , ul ) ) )  
[3238] ( move ul , 2 ; move 2 - ua , 3 * 3 )  
[3239] ( move 4 + 4 , 3 - ua ; move ua , 2 )  
[3240] ( move ul , 4 * 3 ; move 3 - ua , 0 )  
[3241] ( move ul - 3 , 0 ; move 4 , 2 / ua )  
[3242] ( move 3 + 2 , 0 ; move ul / 4 , ul )  | ( move ua - ul , ua * 2 ; move ul / 4 , 2 )  
[3243] ( move ua , 4 + 3 ; move 3 , ul - 2 )  
[3244] ( pen 3 ; move ul , ul ; move ua , ul )  | ( pen 3 ; move ul , ul ; move ua , ua + ul )  
[3245] ( move 4 + 3 , 3 ; move ua - ul , 2 )  
[3246] ( move 3 , ul ; pen ua ; move ul , ul )  | ( move 3 , ul ; ( pen ua ; move ul , ul ) )  | ( move 3 , ua + ul ; pen ua ; move ul , ul )  | ( move 2 + ul , ul ; pen 4 + 4 ; move ul , ul )  | ( move 3 , ul ; ( pen ua ; move ul , ua + ul ) )  
[3247] ( move 4 + ul , ua + 3 ; move 3 , 3 )  
[3248] ( pen ua ; move 3 , ul ; move ul , ul )  | ( pen ua * 2 ; move 3 , ul ; move ul , ul )  | ( pen ua ; ( move 3 , ul ; move 2 - ul , ul ) )  
[3249] ( move ul - 2 , 2 ; move 4 - ul , 2 )  | ( move ul , 4 + ul ; move 2 + ul , ul - 2 )  
[3250] ( move ua , 3 * 3 ; move 2 + ul , 3 )  
[3251] ( move 3 , 2 ; move ua + ul , 4 * 2 )  
[3252] ( move 3 , ua - 4 ; move 4 , 0 - ul )  
[3253] ( move ul - 3 , ul ; move 0 - 4 , 3 )  | ( move 4 , 3 + ul ; move 2 , ul - 4 )  
[3254] ( move 4 , ul ; pen ua ; move ul , ua )  | ( move ua - 2 , ul ; pen ua + ua ; move ul , ua )  | ( move 4 , ul ; ( pen ua + 4 ; move ul , 0 ) ; pen ua )  
[3255] ( move 0 - ua , 3 ; move 3 , 4 / ua )  
[3256] ( move 2 - ua , ul ; move 4 , 3 + 3 )  
[3257] ( move 3 , 4 * 2 ; move ua , 2 + ul )  
[3258] ( move ua + 4 , 4 ; move 3 , 2 + ul )  | ( move ua + 4 , 4 ; v0 = 3 ; move v0 , v0 )  
[3259] ( pen ua ; move ul , 4 ; move ua , ul )  | ( pen 4 + ul ; move ul , 4 ; move ua , ul )  | ( move ul , 4 ; pen ua ; ( v0 = ul ; move ua , v0 ) )  
[3260] ( move 2 , 4 + ul ; move 3 + ul , 3 )  
[3261] ( move ua + 2 , ua ; move 4 * 2 , 4 )  | ( move ua + 2 , ua ; v0 = 4 ; move v0 + v0 , v0 )  
[3262] ( move 2 , 2 ; move ua + 3 , ul / 3 )  
[3263] ( move 4 + ul , 0 ; move 4 , ul - 3 )  | ( move 3 + 2 , ua ; move 3 + ul , 2 - 4 )  
[3264] ( move ul , ul - 4 ; move 3 , 2 + 2 )  | ( move ul , ul - 4 ; move 0 , 4 ; move 3 , 0 )  | ( move ul , 0 - 3 ; move 2 + ul , 4 ; pen ua )  | ( pen ul ; move ul , ua - 3 ; move 2 + ul , 4 )  
[3265] ( move ua - 3 , 3 + ul ; move 4 , 2 )  | ( move ua - 3 , ua + 4 ; pen ul ; move 4 , 2 )  
[3266] ( move ua , 3 + 2 ; move ul , 3 - 4 )  | ( move ul - 2 , 4 ; move 0 - ua , ul )  | ( move ua , 4 + ul ; move ul , ua - ul )  
[3267] ( move 3 , ua ; move 4 + 2 , 3 - ul )  
[3268] ( move 4 , 2 + ul ; move 4 + ul , 2 )  
[3269] ( move ul - ua , 4 ; move 3 + 2 , 3 )  
[3270] ( pen 3 ; move ua , ul ; move ul , ul )  
[3271] ( move 4 , ua / 2 ; move ua + 3 , 2 )  
[3272] ( move ua , 4 ; pen ua ; move ul , ul )  | ( move ua , 3 + ul ; pen ua - 2 ; move ul , ul )  | ( move ua , 4 ; ( pen ua + ul ; move ul , ul ) )  
[3273] ( move ua , ua ; move 2 - 4 , 2 - 4 )  | ( ( move ua , ua ; v0 = ul - 3 ) ; move v0 , v0 )  
[3274] ( move 4 + ul , ul ; move 0 - 3 , 4 )  | ( move 4 + ul , ua + ul ; pen ul ; move ul - 4 , 4 )  
[3275] ( move 2 , ul ; move 2 + ul , 4 + 4 )  | ( move 2 , ul ; ( move 2 + ul , ua * ua ; pen ul ) )  
[3276] ( move 3 / ua , 2 + 2 ; move ua , 4 )  
[3277] ( move ua , 2 ; move 2 + ul , 4 * 3 )  
[3278] ( move ul , 0 ; move 3 * 3 , 4 + ul )  | ( move ul , ua ; move ua + 3 , 4 + ul ; v0 = ua )  
[3279] ( move 4 , 0 - ul ; move 3 * 2 , ul )  
[3280] ( move 4 , 2 ; move ua + 3 , 4 - ua )  | ( move 4 , 2 ; move ua + 3 , 4 ; pen 0 )  | ( v0 = ul / ua ; ( move 4 , 2 ; move ua + 3 , 4 ) )  
[3281] ( move 4 + 3 , ul - 2 ; move 2 , ul )  
[3282] ( pen ua ; move ua , 4 ; move ul , ul )  | ( pen 4 + 2 ; move ua , 4 ; move ul , ul )  | ( ( pen 3 + 2 ; move ua , 2 + 2 ) ; move ul , ul - ua )  
[3283] ( move 3 , 4 + 2 ; move 3 , ul + ul )  | ( v0 = 3 ; move v0 , v0 + v0 ; move v0 , 2 )  
[3284] ( move ua + ul , 2 ; move 3 , 4 * 2 )  
[3285] ( move 2 * 2 , ul ; move 2 , ul / 2 )  | ( move 4 , ul ; move 3 - ul , ul / 2 )  | ( move ua - 2 , 2 - ul ; move 2 , 2 / 4 )  | ( move 4 , ul ; move 3 - ul , 3 / ua ; pen ul )  | ( move 4 , ul ; move 4 - 2 , 3 / ua ; v0 = ua )  
[3286] ( move 3 + 2 , ul ; move 3 , ul - 4 )  
[3287] ( move 3 , 4 + ul ; move 3 - ul , 2 )  
[3288] ( move 2 / ua , 2 ; move ua , 4 * 2 )  
[3289] ( move 3 / ua , 0 ; move ua , 4 * 3 )  | ( v0 = 3 * 2 ; ( move ul , v0 ; move v0 , v0 ) )  
[3290] ( move ul - ua , 2 / 3 ; move 3 , 2 )  
[3291] ( move 3 + 3 , 4 ; move ua + ul , 4 )  
[3292] ( move ul - 4 , 4 ; move 2 , 2 + ul )  | ( ( move ul - 4 , 4 ; move 2 , 3 ) ; pen ua )  | ( v0 = ua + 3 ; move ua - v0 , 4 ; move 2 , v0 )  
[3293] ( move 4 , ul ; pen ua ; move ul , ul )  | ( ( move 4 , ul ; pen ua ) ; move ul , ul )  | ( ( move 4 , ul ; pen ua ) ; move 2 / ua , 0 ; move ul , ul )  
[3294] ( move ul - 2 , 3 ; move ul - 4 , 2 )  | ( move 3 , 4 + ul ; move ul , 0 - 2 ; pen ua + ua )  
[3295] ( move ul - 3 , 0 ; move ua , 4 / 3 )  
[3296] ( move 3 , ua + 3 ; move ul , 2 / 3 )  | ( move 3 , 3 ; move ul , ul / 2 ; pen 3 + 3 )  | ( v0 = 3 ; move v0 , v0 ; move ul , ul / 3 )  
[3297] ( move ua , 2 + ul ; move 4 , 4 + 4 )  
[3298] ( move 2 , 4 ; move 4 + 3 , ua * ua )  
[3299] ( move 2 - ua , ua ; move 4 , 4 * 2 )  
[3300] ( move 3 , ua - 2 ; move 3 , 4 - ul )  
[3301] ( move ul , ua + 2 ; move 4 , 4 + 4 )  
[3302] ( move ul , ua ; move 3 + 3 , 3 / 2 )  
[3303] ( move 3 , 3 / 2 ; move ua , 3 + ul )  | ( move 3 , 3 / 2 ; move ua , 4 ; pen 2 * 2 )  
[3304] ( move 4 , 4 + ul ; move ul , 3 + 2 )  
[3305] ( move ua , 0 ; move 4 + ul , 4 * 4 )  
[3306] ( move 4 , 2 - ul ; move 3 - ua , 3 )  
[3307] ( move 3 * 2 , 3 ; move 3 , ul + ul )  
[3308] ( move 4 , ul - 3 ; move 4 , ua + 2 )  
[3309] ( move ul - 4 , ul - 2 ; move 3 , 2 )  | ( ( move ul - 4 , ua - ul ; move 3 , 2 ) ; v0 = 4 )  
[3310] ( move 0 , 3 ; move ul - ua , 4 / 3 )  | ( v0 = ua - ul ; move v0 , ua / v0 ; v1 = ul )  
[3311] ( move 4 * 2 , ua - 3 ; move 2 , ul )  
[3312] ( move 3 + ul , ua - 4 ; move 3 , 3 )  
[3313] ( move ua , 2 ; move ua / 2 , 4 - 3 )  | ( move ua , 2 ; v0 = 3 ; move ua - v0 , ul )  
[3314] ( move 3 + 2 , ul ; move ul , 2 / 3 )  | ( move ua - ul , ua + ul ; move ul , ul )  
[3315] ( move 3 , ua + 4 ; move ul - 3 , 3 )  
[3316] ( move ul + ul , 3 ; move 4 + 3 , 3 )  | ( move 2 , 3 ; pen ul ; move ua + ul , 3 )  | ( pen ul ; move 2 , 3 ; move ua + ul , 3 )  
[3317] ( move ul , 0 - 4 ; move 4 + ul , 4 )  
[3318] ( move 3 - ua , 2 ; move 4 , 4 + ul )  
[3319] ( move 3 , 4 + 3 ; move 4 , ua + ul )  
[3320] ( move ua , ul - 3 ; move 3 , 4 + 3 )  
[3321] ( move 3 , ua ; move 3 - ul , 4 + 3 )  
[3322] ( move 4 , ul ; move 3 + 3 , ul - 2 )  
[3323] ( move 2 - 4 , ua ; move 4 + 3 , ul )  | ( move 2 , 0 - 3 ; move ua + ul , 3 + ul )  
[3324] ( move 4 + ul , 2 - ul ; move 2 , 4 )  | ( ( move 2 , ua + ul ; move 3 , 0 ) ; move 2 , 4 )  | ( ( move 4 + ul , ul ; move ul , 4 - ua ) ; move ul , ua )  
[3325] ( move 3 , 2 / ua ; move ua + 3 , 4 )  
[3326] ( move 4 * 2 , 3 ; move ua , ua - 3 )  
[3327] ( move ul - 3 , 2 + ul ; move 3 , 4 )  | ( move 0 - 2 , 3 ; move 2 , 4 ; move ul , 0 )  
[3328] ( move 3 + ul , 4 + ul ; move 4 , 2 )  
[3329] ( move 4 , ua - 2 ; move 4 , ua + 4 )  | ( move 3 + ul , ua - 2 ; pen ul ; move 4 , 4 )  
[3330] ( move ul , 3 * 2 ; move 4 + ul , 2 )  
[3331] ( pen 4 ; move ul , ul ; move ua , ul )  | ( pen ua ; move ul , ul ; move ua , ul )  | ( pen 4 ; ( move ul , ul ; move ua , ul ) )  | ( pen ua * 2 ; move ul , ul ; move ua , ul )  | ( pen ua ; move ul , ul - ua ; move ua , ul )  | ( ( pen ua + 3 ; move ul , ul ) ; move ua , ul )  | ( ( pen 4 + ul ; move ul , ul ) ; move ua , ul )  | ( pen ua ; move ul , ua + ul ; move ua , ua + ul )  | ( ( pen ua ; move 0 , ua ) ; move ul , ul ; move ua , ul )  | ( ( ( pen 4 ; pen ua + 4 ) ; move ul , ul ) ; move ua , ul )  
[3332] ( move 3 * 3 , ul ; move ul , 3 + 2 )  
[3333] ( move ul , 4 ; move 3 + 2 , 4 + ul )  | ( move ul , 4 ; v0 = 4 + ul ; move v0 , v0 )  
[3334] ( move ul - 3 , 4 ; move 3 + ul , 2 )  
[3335] ( move ul , 2 + 2 ; move ua , 3 / 4 )  
[3336] ( move 2 , 3 ; move ua - 4 , ul - 3 )  
[3337] ( move ua , 4 + 4 ; move 4 , 2 + ul )  
[3338] ( move 4 , ul ; move ua + 2 , 4 + 4 )  
[3339] ( move 2 , ul - 2 ; move 3 , ul - 4 )  
[3340] ( move 3 * 3 , ul ; move ua + 2 , 4 )  
[3341] ( pen ua ; move 4 , ul ; move ul , ul )  | ( pen 4 ; move 3 + ul , ul ; move ul , ul )  | ( ( pen ua ; move 4 , ul ; v0 = 3 ) ; move ul , ul )  | ( ( pen ua + 4 ; move 4 , ul ; move ul , ul ) ; v0 = ul )  
[3342] ( move ua , ul ; move 4 + 2 , 4 / 2 )  | ( move ua , ul ; v0 = 2 ; move 3 * 2 , v0 )  
[3343] ( move ul , 4 * 4 ; move 2 + ul , 2 )  | ( move 3 , 0 - 4 ; ( move ul , ua - 2 ; v0 = ua ) )  
[3344] ( move 4 + ul , 2 ; move ul , 2 / 3 )  
[3345] ( move ua + 4 , 4 ; move ul , 3 * 2 )  
[3346] ( move 4 , 0 - 3 ; move ul , ua / 4 )  
[3347] ( move ul , 2 / 3 ; move 2 + ul , 4 )  
[3348] ( move 3 , 3 - 4 ; move ua , 4 + ul )  
[3349] ( move 3 , ul / 3 ; move 2 - ul , 2 )  | ( move 3 , ul / 3 ; pen ul ; move ul , 2 )  
[3350] ( move ul , 2 / 3 ; move 2 * 2 , ul )  
[3351] ( move ua - 3 , ua ; move 4 , 2 / 3 )  
[3352] ( move 2 , ua / 2 ; move 3 - ul , 4 )  
[3353] ( move 3 , 3 + ul ; move 4 - ua , 4 )  
[3354] ( move ua , 4 * 2 ; move ua , 4 - 3 )  
[3355] ( move 2 * 2 , ua ; move ul , 4 * 3 )  
[3356] ( move 4 + ul , 3 ; move 4 + ul , 3 )  | ( move 3 + 2 , 3 ; move 4 , 4 - ul ; move ul , ua * 4 )  
[3357] ( move 4 , 3 ; move 4 + ul , ua - 3 )  
[3358] ( move 3 , 4 + ul ; move 3 + ul , 4 )  
[3359] ( move ul , 4 + 2 ; move ua / 2 , 4 )  
[3360] ( move 4 + 2 , 2 ; move 4 / ua , ul )  
[3361] ( move 4 - ua , 4 ; move 3 , 3 + ul )  | ( move 4 - ua , 4 - ua ; move 3 , ua + 4 ; pen ua )  
[3362] ( move ul - ua , 2 ; move 3 , 4 * 3 )  
[3363] ( move 2 , 2 / ua ; move 4 + 4 , ul )  
[3364] ( move 4 - ul , 2 ; move ua , 3 - 4 )  | ( move 3 , 3 - ul ; move ua , 0 - ul )  | ( move 4 - ul , 2 ; move ua , ua - ul ; pen 2 * 2 )  
[3365] ( move ua , 2 ; move 4 / 2 , 4 + ul )  
[3366] ( move 4 + ul , ul ; move 3 - 4 , 2 )  | ( move 4 + ul , ul ; move ul , ua - ul )  
[3367] ( move 4 , 4 ; move ua + ul , 3 * 2 )  | ( move 3 + ul , 4 ; move 0 , 2 ; move ua + ul , 4 )  
[3368] ( move ul , 3 * 2 ; move 3 , 4 + ul )  | ( move 3 , ua / 4 ; move ul , ul ; pen ua + ul )  
[3369] ( move 3 , ua ; move 4 - ul , 4 + 3 )  
[3370] ( move 4 + ul , 0 ; move ul , 3 / 4 )  
[3371] ( move 3 , 4 - ua ; move 3 , 4 + ul )  
[3372] ( move ul / 2 , 3 ; move 2 * 2 , ul )  | ( move 2 / 4 , 3 ; v0 = ul ; move 4 , v0 )  
[3373] ( move 3 - ua , 3 * 2 ; move ul , 4 )  
[3374] ( move ua , 4 * 2 ; move ul - 3 , 3 )  
[3375] ( move 4 + 3 , ul ; move 2 - 4 , ul )  | ( move 4 + 3 , ul ; pen ul ; move 0 - 2 , ul )  
[3376] ( move ua , ul ; move 3 + 3 , 4 * 3 )  
[3377] ( move 4 * 2 , 2 / ua ; move ul , 2 )  
[3378] ( move ul - 4 , 0 ; move 4 , ul / 2 )  
[3379] ( move 3 , ua - 4 ; move 3 + ul , 4 )  
[3380] ( move 2 * 2 , ul ; move ul , 3 / 2 )  
[3381] ( move 2 - ul , ul ; move 3 , 3 * 3 )  | ( ( move ul , 4 + 3 ; move 4 - ul , 3 ) ; move 0 , 0 )  
[3382] ( move ua , ua / 3 ; move 2 , 4 * 2 )  
[3383] ( move 3 * 3 , 3 ; move ua , 3 - ul )  
[3384] ( move ul - 3 , 2 * 2 ; move 4 , ul )  
[3385] ( move ul , 4 ; move 3 - ua , 3 * 2 )  
[3386] ( move ul - 3 , ul ; move 4 , 4 + 2 )  
[3387] ( move 2 , ul ; move 2 + ul , 4 / 3 )  
[3388] ( move 4 , 2 / ua ; move 3 , ua - 3 )  
[3389] ( move ul , ul - 4 ; move 4 + 3 , 2 )  
[3390] ( move 3 , ul / 2 ; move 2 - ua , 4 )  
[3391] ( move ul - 4 , 3 ; move 4 - ua , 2 )  
[3392] ( move 4 * 2 , 4 ; move 2 - ua , ul )  
[3393] ( move ua , 3 ; move ua - 3 , 4 / 2 )  
[3394] ( move ua , 3 / ua ; move 4 * 2 , 2 )  
[3395] ( move 3 * 3 , 3 ; move ua , 4 - ua )  
[3396] ( move 0 , ul / 4 ; move ua , 2 / 3 )  
[3397] ( move 4 , 3 ; move ul - 4 , ua - 2 )  | ( move 3 , ul ; move 0 - 4 , 2 ; v0 = 4 )  
[3398] ( move 4 + ul , 4 ; move ul , 4 + 2 )  
[3399] ( move 3 * 3 , ul ; move ua - 4 , 2 )  
[3400] ( move 3 , 4 * 2 ; move ua + ul , 4 )  
[3401] ( move ul - 4 , 0 ; move ul , 2 / 4 )  
[3402] ( move 4 - ua , 3 ; move 4 + 4 , ul )  
[3403] ( move 3 , ul + ul ; move 2 , 4 * 4 )  
[3404] ( move 4 , 4 + 4 ; move ul , 2 - ul )  | ( ( pen ul ; move 4 , 4 * 2 ) ; move ul , ul )  
[3405] ( move 4 + ul , 2 ; move ul , 4 * 3 )  
[3406] ( move 3 - 2 , 4 * 4 ; move ua , ul )  
[3407] ( move 3 , ul ; move 3 + ul , 4 * 3 )  
[3408] ( move ul , 2 / 4 ; move 2 * 2 , ul )  
[3409] ( move 2 + ul , ua ; move 4 / 3 , 4 )  
[3410] ( move ul - 4 , 4 ; move 3 - ua , 3 )  
[3411] ( move 3 - 4 , 3 ; move ul - ua , 4 )  | ( move ul - 2 , 3 ; move ul - ua , 4 ; pen ul + ul )  
[3412] ( move 4 , 4 ; move 0 - 4 , ul / ua )  
[3413] ( move ua - 2 , ul ; move 4 , 4 / 2 )  
[3414] ( move 4 / 3 , ua ; move 2 - ua , 4 )  
[3415] ( move ua , 4 * 3 ; move 4 + ul , 3 )  
[3416] ( move 3 - ua , 4 / ua ; move 4 , 2 )  
[3417] ( move 4 , 4 * 4 ; move ua , 2 + ul )  
[3418] ( move 2 - ua , 4 * 3 ; move 4 , ul )  
[3419] ( move 3 , 4 * 2 ; move ua - 4 , ul )  
[3420] ( move 3 , ul ; move 2 + ul , 4 * 4 )  
[3421] ( move 4 , 2 / 4 ; move 2 , ul + ul )  
[3422] ( move 4 - ul , 3 * 2 ; move 3 , ul )  
[3423] ( move ua , 3 ; move 3 * 2 , ua / 4 )  
[3424] ( move 3 , 4 ; move 0 - ul , ul / 4 )  
[3425] ( move 3 , ua / 4 ; move 3 + 3 , ul )  
[3426] ( move 3 , 3 * 2 ; move ul , ul - 4 )  
[3427] ( move 3 , ul - 2 ; move ul , 2 / 4 )  
[3428] ( move 3 , ul ; move 4 - ua , 4 - 3 )  
[3429] ( move ul , ua - 4 ; move 3 , 4 * 2 )  
[3430] ( move ua - ul , 3 * 2 ; move 4 , 4 )  
[3431] ( move 4 , ua ; move 3 - ul , 3 * 3 )  
[3432] ( move 4 , 3 + ul ; move ul , 2 / 3 )  | ( move 3 + ul , 2 + 2 ; move ul , 4 / ua )  
[3433] ( move ua / 2 , ul ; move 4 + 3 , 4 )  
[3434] ( move ua / 3 , 4 * 2 ; move 2 , ul )  | ( move ua / 3 , 4 + 4 ; move 2 , ul ; v0 = 0 )  
[3435] ( move ul , 4 ; move 4 + ul , 3 * 2 )  
[3436] ( move 4 , 2 - ul ; move ul , 4 + 4 )  | ( move 2 + 2 , ul - ua ; move ul , 4 * 2 )  | ( move 4 , ua + ul ; move ul , ua * ua ; pen 4 )  | ( move 4 , ua + ul ; pen ul ; move ul , ua * ua )  
[3437] ( move 2 , ul / ua ; move 4 , 4 - 2 )  
[3438] ( move 3 / 2 , 3 - ul ; move 3 , ul )  
[3439] ( move 4 , ua / 3 ; move 3 , 3 - ua )  
[3440] ( move ul , 4 + 3 ; move 4 , 2 / ua )  
[3441] ( move 4 , 3 ; move 4 * 2 , ua - ul )  
[3442] ( move 3 , 4 / ua ; move 3 , 2 - ul )  | ( move 4 - ul , 4 / ua ; move 3 , ua + ul )  
[3443] ( move ul - 2 , 3 * 3 ; move 4 , ul )  | ( move ul , 3 * 2 ; v0 = 3 + ul ; move v0 , v0 )  
[3444] ( move 2 , 4 * 3 ; move 2 , ul / ua )  
[3445] ( move ua , 4 + 3 ; move 2 , ul / 4 )  
[3446] ( move 2 , 3 ; move 4 - ua , ul / 3 )  
[3447] ( move 4 , ul - 4 ; move ua , 4 + 3 )  
[3448] ( move ul , 4 ; move 2 * 2 , ua / 4 )  
[3449] ( move ul - 4 , 0 ; move 4 , ul / 4 )  
[3450] ( move 4 , ul / 2 ; move 3 , 3 - ul )  
[3451] ( move 4 , ul - 4 ; move 3 , 4 + ul )  
[3452] ( move 4 , ul / 4 ; move 2 , ua + 4 )  
[3453] ( move ua / 4 , ua ; move 3 * 2 , 4 )  
[3454] ( move 3 / 2 , ul - 3 ; move 4 , ul )  
[3455] ( move 4 , ua / 4 ; move ua - 4 , 2 )  
[3456] ( move 4 , ul / 4 ; move 3 , 2 + ul )  
[3457] ( move ul / 2 , 3 ; move ua , 4 * 3 )  | ( move 3 / ua , 4 - ul ; move ua , 4 * 3 )  
[3458] ( move ua , ul / 3 ; move 3 - 4 , 3 )  
[3459] ( move 3 , 4 * 3 ; move ua , ua / 3 )  
[3460] ( move 3 / 2 , ua ; move 3 , ul / 3 )  
[3461] ( move 4 , 4 * 2 ; move ua , ua / 3 )  
[3462] ( move 3 , ul - 3 ; move 2 , ul / 4 )  
[3463] ( move 4 , ua - 2 ; move ul , 4 * 4 )  
[3464] ( move 3 / 2 , 2 ; move ua , ul / 4 )  
[3465] ( move 4 , ua ; move 2 - 3 , ul / 4 )  | ( move 4 , 0 ; move ul - 2 , ul / ua )  
[3466] ( move 4 , 3 / ua ; move ul - 3 , 3 )  | ( move 3 + 2 , 3 / ua ; move ul , 3 * 2 )  
[3467] ( move 2 , ul / ua ; move 2 , 4 / 3 )  
[3468] ( move ul + ul , 4 * 3 ; move 3 , 4 )  
[3469] ( move 2 , 2 / 4 ; move ua , ua / 4 )  
[3470] ( move ua , ul ; move 4 + 4 , 4 / 2 )  
[3471] ( move 4 , 4 ; move ul + ul , 4 + 4 )  
[3472] ( move ul - 3 , 4 ; move 3 , ua / 3 )  
[3473] ( move 4 , ua ; move 4 + 4 , ul - 4 )  
[3474] ( move 3 , 2 / ua ; move 3 , 4 / ua )  
[3475] ( move ua / 3 , ul ; move 4 , 2 / 3 )  
[3476] ( move ua / 2 , 4 ; move 4 , ul / 2 )  
[3477] ( move ua , ua / 4 ; move 4 , 3 - 4 )  
[3478] ( move ua , ua / 2 ; move 3 / 4 , 4 )  
[3479] ( move ua , ul ; move 4 / 3 , 3 - 4 )  
[3480] ( move 4 + 3 , 4 / ua ; move ul , 4 )  
[3481] ( move 3 , ua - ul ; move 4 , 4 * 4 )  
[3482] ( move ua / 4 , 3 + ul ; move 4 , 4 )  
[3483] ( move ul / 3 , 2 ; move ua , 3 / 4 )  
[3484] ( move ua , 4 * 2 ; move 3 , ul / 4 )  
[3485] ( move ul , 4 / 3 ; move 4 + 3 , ul )  
[3486] ( move 4 + ul , 4 ; move 4 , 4 - ul )  | ( move 4 + ul , 4 ; move 4 , ua + 3 ; v0 = ua )  
[3487] ( move 4 , 2 / 4 ; move 4 - ua , ul )  
[3488] ( move 3 , ua * 4 ; move 4 , ua / 3 )  | ( ( move 3 , 0 ; move 4 , ua / 3 ) ; pen ul )  
[3489] ( move ua , 4 * 4 ; move 3 - 4 , ul )  
[3490] ( move 4 , 3 - ul ; move 2 / 4 , ul )  | ( move 4 , ul + ul ; move ul / 2 , ul )  | ( ( pen ul ; move 4 , 2 ) ; move ul / 2 , ul )  | ( move 4 / 3 , 2 ; move 3 , ua ; move 3 / ua , ul )  
[3491] ( move 4 , 3 * 3 ; move ul / 2 , ul )  
[3492] ( move 4 / 2 , ul ; move 4 , 2 / ua )  | ( move 2 , ul ; ( move 0 , ua ; move 4 , 2 / ua ) )  
[3493] ( move 3 * 3 , 4 ; move ul , 4 / ua )  
[3494] ( move ua / 3 , ul / 4 ; move 2 , 4 )  
[3495] ( move 4 , ul / 3 ; move ul , 3 * 3 )  
[3496] ( move ul , 4 * 3 ; move 4 , ua / 3 )  
[3497] ( move 4 , 4 / ua ; move 2 , ua / 4 )  
[3498] ( move ul / 4 , 4 ; move ua , 4 * 2 )  
[3499] ( move 2 / 3 , 4 ; move ua , ul / 4 )  
[3500] ( move ul - 4 , 3 / 4 ; move 4 , ul )  
[3501] ( move 4 , ua / 4 ; move ul / 4 , 4 )  
[3502] ( pen 4 * 3 ; move ua + ul , 3 * 2 )  | ( pen ua ; move ul , 3 * 2 ; move ua , ua )  | ( ( pen ua ; move ul , 3 + 3 ) ; move ua , ua )  | ( pen ua ; v0 = ua + ul ; move v0 , 3 * 2 )  
[3503] ( move 0 - ua , 0 - ua ; move ua , 2 )  | ( move 0 - ua , 0 ; move ua , 2 ; v0 = ua * ua )  
[3504] ( move ua + 2 , 0 ; move ua , ua - 2 )  | ( v0 = ua ; move 2 + v0 , ua ; move v0 , ua - 2 )  
[3505] ( move 3 - ua , 0 ; move ua + ul , 0 )  | ( ( move 4 , ua ; pen 3 / ua ; move ua / 2 , 0 ) ; pen ua )  
[3506] ( move ua + 2 , 0 ; move ua + ul , 2 )  
[3507] ( pen ua * 2 ; move 4 + 4 , ul / 2 )  | ( pen ua * 4 ; move ua + ul , ul / 2 )  | ( pen ua ; move ua + ul , 3 / ua ; ( pen ul ; pen 2 ) )  
[3508] ( move ua , 0 - ul ; move 2 , 0 - ul )  
[3509] ( move 0 - ua , 0 ; move 4 , ua + ul )  | ( move 0 - ua , ua ; move 3 , ul ; move ul , 0 )  | ( move 3 , ua ; move 0 - ua , ua * 3 ; move 3 + ul , ul )  
[3510] ( move ua , 0 ; move ua + ul , 0 - 4 )  
[3511] ( move 2 - ua , 0 ; move ua , ua + 4 )  
[3512] ( move ua - 2 , 0 ; move 2 - ua , ul )  
[3513] ( move ua - 2 , 0 ; move 3 , ua + ul )  
[3514] ( move ua + ul , 2 ; move ua , 0 - 3 )  
[3515] ( move 3 + 2 , 0 ; move ua , ua - ul )  | ( move ul , ua ; ( move 4 , 0 ; move ua , ul - 2 ) )  
[3516] ( move ua , 3 ; move ua + ul , 0 - 2 )  | ( ( move ua , 3 ; move ua + ul , ua - 2 ) ; v0 = 0 )  
[3517] ( move ua + ul , 0 ; move 2 , 4 + ul )  
[3518] ( move 2 , ua ; move ua + 3 , ua - 2 )  | ( move 2 , 0 ; move ua , ul - 3 ; move 3 , ua )  
[3519] ( move 3 + ul , 0 ; move ua - 2 , ul )  | ( move 4 , ua ; move ua - 2 , ul ; v0 = ul )  
[3520] ( move ul - ua , 3 ; move 0 - ua , 2 )  
[3521] ( move ul , 0 ; move ua + ul , 2 - 3 )  | ( move ul , ua ; move ua + ul , 0 - ul )  | ( ( move ul , ua ; move ua , 3 - 4 ) ; move ul , 0 )  | ( move ul , ua ; move ul , 0 - ul ; ( move ua , ua ; pen 4 ) )  
[3522] ( move 0 - ua , ua - 2 ; move ul , 3 )  
[3523] ( move ua , ua + ua ; move 2 , 3 + 3 )  | ( move ua , ua ; move ul + ul , 4 + 2 )  | ( move ua , 0 ; move 0 , 4 ; move 2 , 2 )  | ( pen ul / ua ; move ua , 0 ; move 2 , 3 + 3 )  | ( move ua , ua ; move ul , 4 + 2 ; move ul , 0 )  | ( move ua , ua ; ( move ul , 3 + 3 ; move ul , ua + ua ) )  
[3524] ( move ul , 0 - 2 ; move ua + 3 , ul )  
[3525] ( move 3 + 2 , ua ; move ul , 0 - ul )  | ( move 4 , ua ; move ul , ua ; move 0 - ul , 2 )  | ( move 3 + ul , ua ; move ul , ua ; move ul - 2 , 2 )  | ( move 3 + ul , 0 ; move ul , ua ; move ul , ua - ul )  
[3526] ( move ua - 3 , 0 ; move 2 , ul - ua )  | ( ( move ul / 4 , ua ; move ua / 2 , ua ) ; move 2 , ul )  
[3527] ( move ua , 0 ; move 3 - ua , ul - 2 )  
[3528] ( move ua + ul , 0 ; move 3 , ua - 3 )  
[3529] ( move ul , ua - 2 ; move 3 - ua , 0 )  | ( move ua / 2 , 0 - 2 ; move ul , 3 ; pen 2 )  | ( move ul , ua - 2 ; pen 2 - ul ; move 3 - ua , 0 )  
[3530] ( move ua - 3 , 0 ; move ua + 3 , ul )  | ( move 0 , 0 ; move ua - 3 , 0 ; move ua + 3 , ul )  
[3531] ( move 0 - 2 , ua + ul ; move ua , 4 )  | ( move 2 - 4 , ul - ua ; move ua , 4 )  | ( move ul - 3 , ua + ul ; move 0 , 0 ; move ua , 4 )  
[3532] ( move ua + ul , 2 + ul ; move 2 , 2 )  | ( move ua + ul , 2 + ul ; move ua / 3 , 4 - 2 )  | ( v0 = 2 ; ( move ua + ul , 3 ; move v0 , v0 ) )  
[3533] ( move ul - ua , ul ; move 2 , 0 - 2 )  
[3534] ( move 3 , ua ; move ua + 2 , 2 - ua )  | ( move 2 + ul , 0 ; move 2 , 2 ; move ua , ua )  | ( move 2 + ul , ua ; ( move ua , 2 ; move 2 , 0 ; pen ua ) )  
[3535] ( move 2 , ul ; move ua - 3 , ua + 2 )  
[3536] ( move 3 + 3 , ul ; move 0 - ua , ul )  
[3537] ( move ul , 0 ; move 4 + ul , ua + 3 )  | ( pen 2 ; ( move ul , 3 ; pen ul ; move 4 , ua * 3 ) )  
[3538] ( move ua - ul , 2 ; move ua + 2 , 3 )  | ( move 3 , 2 ; move 2 , ua ; move 4 * 2 , 3 )  
[3539] ( move ua , 2 + ul ; move ua + 2 , 4 )  | ( move ua , 2 + ul ; v0 = ua + 2 ; move v0 , 4 )  
[3540] ( move 3 , ul ; move ul + ul , 0 - 2 )  
[3541] ( move 3 - ua , 0 ; move ul , 3 + ul )  | ( move 3 - ua , ua ; move ul , 4 ; pen 0 )  | ( pen ul ; move 3 - ua , ua ; move ul , 4 )  
[3542] ( move 0 - 3 , ua ; move ua , 4 + ul )  
[3543] ( move ua , ua - ul ; move 2 , 0 - 4 )  
[3544] ( move ul , ua + ul ; move 4 , 0 - 2 )  
[3545] ( move ua + 2 , ua - 3 ; move ul , 2 )  
[3546] ( move ua , ua - ul ; move 0 - 3 , 3 )  | ( move 2 + ul , 2 ; move ua , ul / ua )  
[3547] ( move 3 - ua , ua + ul ; move 2 , 2 )  
[3548] ( move 2 , ul + ul ; move ua , 3 + 2 )  | ( move 2 , ul + ul ; pen ul ; move ua , 4 + ul )  
[3549] ( move ua - ul , 0 ; move 2 , 2 / ua )  
[3550] ( move 2 , 0 - ul ; move ua , 4 + ul )  
[3551] ( move ua + 3 , 4 ; move 0 - ua , ul )  | ( move ua + 3 , ua + 4 ; move 0 - ua , ul )  
[3552] ( move 2 , ua + ul ; move ua , 4 + 2 )  | ( ( move 2 , ul ; pen ul ) ; move ua , 3 + 3 )  | ( ( move 2 , ua + ul ; move 0 , ul ) ; move ua , 4 + ul )  
[3553] ( move 2 , ul ; move ua + ul , 3 + 2 )  
[3554] ( move 0 - 4 , ua + ul ; move 2 , ul )  
[3555] ( move ua - ul , ua - 2 ; move 2 , 2 )  
[3556] ( move 3 , 0 - ul ; move ul - ua , 2 )  | ( move 3 , 0 - ul ; move ul - ua , 4 / 2 ; pen ua )  
[3557] ( move ua + 3 , ua + 2 ; move 3 , ul )  | ( move ul , ua ; move ua + 3 , 2 ; move 4 - ul , ul )  
[3558] ( move ua + 4 , 0 - ul ; move ul , 2 )  
[3559] ( move 2 , ua - ul ; move 3 , ua + 2 )  
[3560] ( move 2 , 2 + ul ; move ua - 2 , ul )  | ( move ul + ul , 3 - ua ; move ua - 2 , ul )  
[3561] ( move ul , ul ; move ua + 2 , 0 - 4 )  
[3562] ( move ua , 3 * 2 ; move ua , ua + 2 )  
[3563] ( move 2 , 0 ; move 2 + ul , ul / ua )  | ( move 2 , 0 ; move 2 + ul , ul / ua ; v0 = 4 )  
[3564] ( move 3 - ua , 0 ; move 4 , ua + ul )  | ( move 3 - ua , ua ; move 4 , ul ; pen 0 )  | ( move 3 - ua , ua ; move 4 , ul ; v0 = ul )  | ( move 3 - ua , ua ; move 4 , ul ; pen ul - 3 )  
[3565] ( move ul - 4 , ua ; move 0 - ua , 2 )  | ( ( move ua , 2 ; move 3 , ul - 3 ) ; v0 = ul )  | ( move ua , ul + ul ; move 3 , 0 - 2 ; v0 = 4 - 3 )  
[3566] ( move ul , 2 ; move 3 + 2 , ua + ul )  | ( move ul , ul + ul ; move 4 + ul , ul )  | ( move ul , 2 ; move 4 , ul ; move ul , ua )  | ( move ul , 2 ; move 0 , ua ; move 3 + 2 , ul )  | ( move 0 , ul ; move ul , ul ; move 4 + ul , ul )  | ( move ul , 2 ; v0 = ul ; move 4 + v0 , v0 )  | ( move ul , 2 ; move 2 - ul , ul ; move 3 + ul , ua )  | ( move ul , ua + 2 ; move ul , ul ; move 4 , ua + ua )  | ( move ul , 2 ; ( move 4 + ul , ul ; v0 = ua + 3 ) )  
[3567] ( move ua - ul , 0 ; move 2 - ua , 4 )  | ( ( move ul , 0 ; move ua - 2 , 0 ) ; move 2 - ua , 4 )  
[3568] ( move 0 - 4 , ua + ua ; move 3 , ul )  
[3569] ( move ua + 2 , ul ; move 2 , ul - 2 )  
[3570] ( move ul , 2 - ua ; move ua + 3 , 2 )  
[3571] ( move ua + 2 , ul + ul ; move 3 , 2 )  
[3572] ( move ul , 4 ; move ua + 2 , ua - 2 )  
[3573] ( move ua - 3 , 0 ; move ua - ul , 4 )  
[3574] ( move 4 + 3 , ul ; move ua , ua + 2 )  | ( move 4 + 3 , ul ; move ua , 3 - ul )  | ( move 4 + 3 , ul ; move ua , 2 ; move 0 , ua + 3 )  
[3575] ( move 3 + 2 , ul ; move ua , 3 + ul )  | ( move 4 + ul , ul ; move 0 , 4 ; move ua , 0 )  
[3576] ( move ua + 3 , ul ; move ua + 2 , 4 )  
[3577] ( move 0 - ua , ul ; move 2 , ul - 4 )  
[3578] ( move ul , ua ; move 3 - ua , 3 + 2 )  
[3579] ( move 2 + ul , 3 ; move ul - ua , 2 )  | ( move 4 - ul , 3 ; move ul - ua , 2 )  | ( move 0 , ul ; move 3 , 2 ; move ul - ua , ul + ul )  
[3580] ( move ul , ua - ul ; move 3 , 2 + 2 )  | ( move ul , 0 - ul ; move 2 + ul , 4 )  | ( move ul , ua - ul ; move 3 , 4 ; move 0 , ul )  | ( move ul - 4 , 3 ; pen 2 ; move 3 - 4 , ua - 4 )  
[3581] ( move ul + ul , ua ; move 0 - 4 , 3 )  | ( move 4 , 3 ; ( move 2 , ul / ua ; v0 = 0 ) )  
[3582] ( move ul , 0 ; move ul - ua , 3 * 2 )  
[3583] ( move ua + ul , 3 + ul ; move 3 , 2 )  | ( move ua + ul , 4 ; move 3 , ul + ul )  | ( move ua + ul , ua + 4 ; move 3 , ul + ul )  | ( move ua , ua + 4 ; move ul , ua ; move 3 , 4 / 2 )  
[3584] ( move 3 , ua - 2 ; move 2 , ul + ul )  
[3585] ( move ua , 3 - ua ; move 3 , ua - 2 )  
[3586] ( move 2 , ua - ul ; move 3 , 2 + ul )  | ( move 2 , 2 - 3 ; move 3 , 3 ; v0 = ua )  | ( move ul + ul , 0 - ul ; move 3 , ua + 3 ; pen ua )  
[3587] ( move 3 , 0 ; move 4 - ua , ul + ul )  | ( move 4 - ul , ua ; move 4 - ua , 2 )  
[3588] ( move ul , 0 ; move ua - ul , 4 + 3 )  
[3589] ( move 4 - ua , 0 ; move 3 + ul , ul )  | ( move 0 - 2 , 0 ; move 4 , ul ; move 0 , ul )  | ( move ul - 3 , 0 ; move 4 , ul ; pen ul / 3 )  
[3590] ( move 0 - ua , ul ; move 4 - 2 , ul )  | ( move 0 - ua , ul ; move ul + ul , ul )  
[3591] ( move ua + 2 , ua - ul ; move 3 , 3 )  | ( move ua , ua - ul ; move 2 , ua ; move 4 , 3 )  
[3592] ( move ua + 2 , ua * 2 ; move ua , 4 )  | ( move ua + ul , ua ; ( pen ul ; move ul , 0 ) ; move ua , 4 )  
[3593] ( move ul - 3 , 0 ; move ul - ua , 3 )  
[3594] ( move 3 , 2 ; move 2 + ul , ua * ua )  
[3595] ( move 0 , 3 * 3 ; move ua + ul , ul )  | ( move 0 , 4 ; ( move ul , 3 ; move ua , 3 ) ; move ul , ua )  
[3596] ( move ua + ul , 0 ; move ul / 2 , 3 )  | ( pen 2 ; move ua + ul , 0 ; move ul , 3 )  | ( move ul , 0 ; move ua , 0 ; move ul / ua , 3 / ua )  | ( move ua , ua ; ( move ul , ua ; move ul / ua , ul ) )  | ( move 0 - ua , ua ; v0 = ul ; move v0 , 3 / v0 )  | ( move ul , ua - 3 ; ( move ua + ul , 3 ; v0 = ua ) )  | ( move ul , ua - 3 ; ( move ul , ua + 3 ; move ua , ua ) )  
[3597] ( move ua + 2 , ua + ua ; move 4 , 4 )  
[3598] ( move ua + ul , 2 ; move ua - 4 , 2 )  
[3599] ( move ua + ul , ua ; move 2 , 2 - 4 )  
[3600] ( move 4 + 3 , ua ; move ua , 2 - ua )  | ( move 3 , 0 - ua ; move 4 , ua ; move ua , 2 )  
[3601] ( move 4 - ua , 0 ; move 3 - ua , ul )  
[3602] ( move ua , 0 - ul ; move 3 , ul - 3 )  | ( move ua , ua - ul ; move ua - 3 , ul - 3 )  
[3603] ( move ua + ul , 0 ; move 4 , 4 + ul )  | ( move ua + ul , 0 ; move ul , 4 + ul ; move 3 , ua )  | ( move ua + ul , ua * 4 ; move 4 , 4 + ul ; v0 = 0 )  
[3604] ( move ua + 2 , 4 ; move ua , ua + 4 )  | ( move ua + 2 , 3 + ul ; v0 = ua ; move v0 , 4 )  
[3605] ( move ul - ua , ua ; move 4 + 2 , 2 )  
[3606] ( move ua , 0 - ul ; move 3 - ua , 4 )  
[3607] ( move ua - 4 , ua ; move 2 , ua - 2 )  
[3608] ( move ul / ua , 0 ; move 3 + 2 , ul )  | ( move ul - ua , ul ; move 2 / ua , ul )  | ( move ul - ua , ul ; move ul / 4 , ul )  | ( move ul / ua , ua ; move 4 + ul , 2 - ul )  | ( move ul / ua , ua ; ( move ul , ul ; move 2 * 2 , 0 ) )  
[3609] ( move 2 + ul , 3 ; move ua , ul - 2 )  | ( move 3 , 3 ; pen ul ; move ua , ua - ul )  | ( ( v0 = 3 ; move 3 , v0 ) ; move ua , ua - ul )  
[3610] ( move ul , ua - 3 ; move 3 , 0 - ul )  | ( move ul , ua - 3 ; move 3 , ua - ul )  
[3611] ( move ua - ul , 0 ; move ua , 3 * 3 )  
[3612] ( move 2 , 2 - 4 ; move ua , ua + ul )  
[3613] ( move ua + 3 , 2 ; move 3 - ua , ul )  
[3614] ( move ua - 2 , 3 ; move 2 + ul , ul )  
[3615] ( move 0 , 2 / ua ; move ua + ul , 4 )  | ( move 0 , ul / ua ; move ua + ul , ul )  | ( v0 = 4 * 2 ; move v0 , v0 * v0 )  | ( move 0 , ul / ua ; move ua + ul , ul - ua )  
[3616] ( move ua + ul , 2 ; move 4 , ua - 2 )  
[3617] ( move 0 - ua , ua ; move 2 , 4 / ua )  
[3618] ( move ul , 3 ; move ua + 2 , ul - 2 )  | ( move ul , 2 + ul ; move ua + 2 , ul - 2 )  | ( ( move ul , 3 ; move ua , ua - ul ) ; move 2 , 0 ; pen 4 )  
[3619] ( move 2 , ua + 2 ; move ua , ul / 2 )  
[3620] ( move 3 , ua * ua ; move ua , 0 - 4 )  
[3621] ( move 3 , 3 ; move ua + 2 , ua - ul )  
[3622] ( move ua + ul , 0 - 4 ; move 4 , ul )  
[3623] ( move 0 - 4 , ua ; move ul - ua , 4 )  
[3624] ( move 2 - ua , 2 ; move ul , 4 + ul )  
[3625] ( move ua + 3 , ul - 3 ; move ua , 3 )  
[3626] ( move ul / 2 , 0 ; move ua , 4 + ul )  | ( move 3 / ua , 0 ; move ua , 4 + ul ; v0 = ul )  
[3627] ( move 4 , 2 - ua ; move ua - ul , 2 )  | ( move ul , 2 ; move 3 , ua ; move ua - ul , ul + ul )  
[3628] ( move 3 + ul , ua ; move 2 - ua , 4 )  
[3629] ( move ul + ul , ua ; move 3 , 4 + 2 )  | ( v0 = 3 ; move 2 , 0 ; move v0 , v0 + 3 )  | ( move ul , ua ; ( move ul , 0 ; pen ul ) ; move 3 , 3 * 2 )  
[3630] ( move ul + ul , 0 ; move 3 , ua / 3 )  
[3631] ( move 3 , ua ; move 0 - ua , ua / 4 )  
[3632] ( move 3 - ua , 0 ; move ua , 4 / ua )  
[3633] ( move ul , 4 + ul ; move ua - 2 , 2 )  
[3634] ( move 4 + 2 , 3 ; move ua , ua * ua )  
[3635] ( move ua , 2 - 4 ; move ua , ua + 4 )  | ( move ua , ua - 2 ; move ua , 4 ; v0 = ul - 3 )  
[3636] ( move 4 - ua , 2 ; move 3 , ua + ul )  
[3637] ( move ua - 3 , ul ; move 2 + ul , 3 )  | ( v0 = 3 ; move ua - v0 , ul ; move v0 , v0 )  
[3638] ( move 4 + ul , ua * ua ; move 2 , 2 )  
[3639] ( move 0 , ul ; move ua + 2 , ul / 4 )  | ( move ul / ua , ua + ul ; move 4 * 2 , ul / 4 )  
[3640] ( move 2 - ua , ua ; move ul / 2 , 2 )  | ( move 2 - ua , ua ; move ul / 4 , ul + ul ; pen 2 )  | ( move ul / 4 , 2 - 3 ; move 4 , ul ; v0 = ua - 2 )  
[3641] ( move 4 , ul + ul ; move ua , 3 + 2 )  
[3642] ( move ul - 3 , 0 ; move 4 + ul , ul )  
[3643] ( move ua - 3 , ul ; move 3 + 2 , ul )  
[3644] ( move 2 , ua + ul ; move ul - 4 , 2 )  | ( pen ul ; ( move 2 , ul ; move ul - 4 , 2 ) )  | ( ( move 3 - ul , ul ; move 0 - 3 , 2 ) ; pen ua )  
[3645] ( move ul , ul ; move 4 + 3 , 0 - ul )  | ( move 4 + 3 , ua / 2 ; move ul , ul )  | ( move ul , ua + ul ; move ua + ul , ua - ul )  | ( move ul , ul ; move ua + ul , 2 - 3 ; v0 = 3 * 3 )  
[3646] ( move 0 - 4 , ua + ul ; move ul , 4 )  | ( move ul , ul + ul ; move 4 , ul - 2 )  
[3647] ( move ua , 2 ; move ua + ul , 4 * 2 )  
[3648] ( move ua , 2 - 4 ; move ul - ua , 2 )  | ( move ul - ua , ua / 2 ; move ua , 2 - 4 )  
[3649] ( move ua + 2 , ua / 2 ; move ul , 3 )  | ( move ua + 2 , ua ; move ul , ul - 4 )  
[3650] ( move 3 , ua ; move ua - 2 , 4 + ul )  | ( move 3 , 0 ; move 4 , 4 + ul ; pen ul )  
[3651] ( move 4 + 3 , ua ; move ua , ua - 3 )  | ( move ua , ul / ua ; move 4 , 3 ; move 2 + ul , 0 )  | ( move 2 , 0 ; move ua - ul , ua ; move ua , ua - 3 )  
[3652] ( pen ua ; move ua , ul ; move ul , ul )  | ( pen ua + 4 ; move ua , ul ; move ul , ul )  | ( pen 4 ; move ua , ul - ua ; move ul , ul )  | ( pen ua + ul ; move ua , ul ; move ul , ul )  | ( pen ua + 3 ; move ua , ul ; move 3 - 2 , ul )  | ( pen ua + ua ; move ua , ua + ul ; move ul , ul )  | ( pen 4 * 2 ; ( move ua , ul ; move ul , ul ) ; v0 = 0 )  | ( ( pen ua ; move ua , ul ) ; v0 = ul ; move v0 , v0 )  
[3653] ( move ua - ul , 0 ; move 4 , ua - 4 )  
[3654] ( move ul , 4 + ul ; move 0 - ua , 4 )  
[3655] ( move 4 - ua , 2 ; move ua , ua + 4 )  | ( move 4 - ua , 4 / 2 ; move ua , 4 ; v0 = ua )  | ( pen 2 / 3 ; move 4 - ua , ua + 2 ; move ua , ua + 4 )  
[3656] ( move 3 * 3 , 0 ; move ul - ua , ul )  
[3657] ( move 4 , ua + 3 ; move ua - 2 , ul )  
[3658] ( move ul - 2 , ul ; move ua - 3 , 2 )  | ( move ul - 2 , ul ; move ua - 3 , 2 ; move 0 , ul )  
[3659] ( move 4 , 0 - ul ; move 3 - ua , ul )  
[3660] ( move 2 , ua ; move ua + ul , 3 * 3 )  
[3661] ( move ua + ul , ua ; move 3 - 4 , 2 )  | ( move ua + ul , 0 ; move ul , 0 - ul )  | ( move ua + ul , ua ; move ul , 3 + 2 )  | ( move ua + ul , 0 ; move ul , ua - ul )  | ( move ua + ul , ua ; move ul , ul - 2 )  | ( move ua , 0 ; move ul , ua ; move ul , 2 - 3 )  | ( move ua + ul , 0 ; move ul , ul - 2 ; pen 2 )  | ( move ua + ul , 0 ; move ul , ua - ul ; pen 2 )  | ( move ua , 0 ; move ul , ua ; move ul , ua - ul )  | ( move ua + ul , 0 ; ( move ul , ul - 2 ; pen 0 ) )  | ( move ul , ua * 2 ; move ua , 0 ; move ul , 0 - ul )  
[3662] ( move ul , ul ; pen ua ; move ua , ul )  | ( move ul , ul ; pen 4 + 3 ; move ua , ul - ua )  
[3663] ( move ul - ua , 3 ; move 3 + 2 , ul )  
[3664] ( move 4 + 2 , 2 ; move ul - ua , ul )  
[3665] ( move ua + ul , 3 ; move ua , 2 - 4 )  
[3666] ( move ul , 3 * 3 ; move ua , 0 - ul )  
[3667] ( move ua - 3 , ua ; move 2 , ul - 3 )  
[3668] ( move ua , 3 + 2 ; move ul , ul - 3 )  | ( move ua , 4 + ul ; move ul , 4 ; pen ul )  | ( move ua , 4 + ul ; move ul , 4 ; v0 = 3 )  | ( move ua , 4 + ul ; v0 = 4 ; move ul , v0 )  
[3669] ( move 2 , 0 - ua ; move 4 , ul / ua )  | ( move 2 , ua + ua ; move 4 , ul / ua )  | ( move 2 , ua ; move 3 + ul , ul / ua )  | ( move 2 , ua + ua ; move 3 + ul , ul / ua )  | ( move 2 , ua ; move 4 , ul / ua ; v0 = ua + ua )  | ( move ul , 0 ; move ul , ua ; move 3 + ul , ul / ua )  
[3670] ( move 3 + ul , 3 ; move ua + ul , 3 )  | ( move 4 , 3 - ua ; move ua + ul , 3 ; v0 = ul )  | ( v0 = ua + 3 ; move 4 , v0 ; move ua + ul , v0 )  
[3671] ( move 4 - ua , ua ; move 2 , 3 + ul )  | ( move 4 - ua , ua * 3 ; move 2 , 4 - ua ; pen 0 )  
[3672] ( move ua - 2 , ua ; move ua , 3 - 4 )  
[3673] ( move 3 , 2 ; move ua + ul , 4 + ul )  | ( move 3 , 4 - 2 ; move ua , 3 + 2 ; move ul , ua )  
[3674] ( move 4 , 4 + ul ; move ua , ua + 2 )  | ( move 3 + ul , 4 + ul ; move ua , 2 )  
[3675] ( move 3 , 3 ; move ul + ul , ua - 2 )  | ( move 3 , 3 ; move 2 , ua - 2 ; v0 = ua / 2 )  
[3676] ( move ua + ul , ul ; move 2 , 3 * 2 )  
[3677] ( move ul , 4 ; move 2 + ul , ua - 2 )  | ( move ul , 4 ; move 4 - ul , ul - 3 )  | ( move 0 , ul ; move ul , 3 ; move 3 , ul - 3 )  
[3678] ( move ua , 2 ; move 3 / 2 , ua + ul )  | ( move ua , 2 ; move 3 / 2 , ul ; move 0 , ua + ul )  | ( ( move ua , 2 ; move 3 / ua , ul ) ; move ul , ua )  
[3679] ( move ul , ua ; move 4 + ul , 3 + 2 )  | ( move ul , 0 ; v0 = 4 + ul ; move v0 , v0 )  
[3680] ( move ul , 2 ; move 3 - ua , 3 + ul )  | ( move ul , 2 ; move ul - 4 , 3 + ul )  | ( ( move ul , 2 ; move ul - 4 , 4 ) ; pen 0 )  | ( move ul , ua + 2 ; pen ul ; move ul - 4 , 4 )  | ( move ul , 2 ; move 0 - 3 , 2 + 2 ; pen ua * 4 )  
[3681] ( move 4 , ua ; move ul - 2 , ua + 3 )  
[3682] ( move ua - ul , 2 / ua ; move 2 , 2 )  
[3683] ( move ua , 4 + 3 ; move 2 + ul , ul )  
[3684] ( move 3 , ua + ul ; move 2 , 2 / ua )  
[3685] ( move 4 , 0 - 3 ; move ua - ul , ul )  
[3686] ( move 3 , 0 ; move ul - 4 , ul + ul )  | ( move 4 - ul , ua ; move ul - 4 , ua + 2 )  
[3687] ( move 3 , ul - 3 ; move ul , ua + 2 )  | ( pen ul ; move 3 , 0 - 2 ; move ul , 2 )  
[3688] ( move 4 , ul ; move ua + ul , 4 + 2 )  
[3689] ( move 2 , 4 + ul ; move 3 , ul + ul )  | ( move 3 - ul , 4 + ul ; move 3 , 2 ; v0 = 4 )  
[3690] ( move 3 , 0 ; move ua - ul , 4 / ua )  
[3691] ( move 3 + ul , ul ; move 2 - ua , 4 )  
[3692] ( move 4 + 3 , ul ; move ua - ul , 2 )  
[3693] ( move ua - 3 , ul ; move 4 + 2 , ul )  
[3694] ( move 0 , ua / 4 ; move ua , 3 - ul )  | ( move ul , ul - 4 ; move ua , 4 * 4 )  | ( v0 = 3 * 3 ; move ua , v0 + 4 )  | ( pen ul ; move 0 , 4 * 3 ; move ua , ul )  | ( v0 = ua / 2 ; move ua , v0 * v0 )  | ( ( move ul , ul / ua ; move ua , 4 * 4 ) ; pen ua )  
[3695] ( move ua - ul , 4 + ul ; move 3 , 2 )  
[3696] ( move 3 - ua , ua ; move 4 - ul , 2 )  | ( v0 = 3 - ua ; move v0 , 0 ; move 3 , 2 )  
[3697] ( move ua - ul , 3 ; move ua , 2 - 4 )  
[3698] ( move ua + ul , 2 - 4 ; move ua , 4 )  | ( move ul , ua - 2 ; ( move ua , ua ; move ua , 4 ) )  
[3699] ( move 3 , 2 * 2 ; move ua - ul , ul )  
[3700] ( move 4 - ua , 3 + ul ; move ua , 3 )  
[3701] ( move 2 - ua , 3 - 4 ; move ua , ul )  
[3702] ( move 4 - ua , ul ; move ua + 3 , 3 )  | ( move 4 - ua , ul ; move ul + ul , 3 ; move ua , 0 )  
[3703] ( move ul + ul , 3 / ua ; move 2 , 2 )  | ( pen ul ; move 2 , 3 / ua ; move 2 , 2 )  
[3704] ( move ua , ua / 3 ; move 0 - 4 , ul )  
[3705] ( move ua + 2 , ul ; move 3 , 4 - ul )  | ( move ua + 2 , ul ; move 3 , 3 ; move ul , ul )  | ( move ua + 2 , ul ; move 3 , 2 + ul ; pen ua )  
[3706] ( move 4 + ul , ua ; move 2 , 4 + ul )  
[3707] ( move ul - 4 , ua ; move 3 - ua , 2 )  
[3708] ( move 3 , ul ; move 4 + ul , ua - 2 )  
[3709] ( move 4 - ua , ul + ul ; move 3 , 2 )  
[3710] ( move 3 / 4 , 0 ; move ua + ul , ul )  | ( move 3 / 4 , ua ; move ua + ul , ul ; move 0 , 3 - ul )  
[3711] ( move ul , 3 + ul ; move ua , 3 * 2 )  | ( move ul , ua + 4 ; move ua , 3 * 2 ; pen ul )  
[3712] ( move 3 , 3 - ul ; move ua - 2 , ul )  
[3713] ( move 2 , ua ; move 4 + ul , 3 - ul )  | ( move 2 , ua ; move 4 + ul , ul + ul )  | ( move 4 - 2 , ua ; move 4 + ul , ul + ul )  
[3714] ( move ul , 4 + 2 ; move ua + 4 , ul )  | ( move ul , 3 * 2 ; move ua + 4 , ua + ul )  
[3715] ( move ul , ul ; move 3 + 2 , 4 + ul )  
[3716] ( move ul , ua ; move 2 + ul , 4 * 2 )  
[3717] ( move 3 , 2 ; move ul - ua , 2 / ua )  
[3718] ( move ul , ua / 3 ; move 2 - ua , 2 )  
[3719] ( move 3 , 2 ; move 4 + ul , ul + ul )  
[3720] ( move ul , ul - 4 ; move ua + 3 , 2 )  
[3721] ( move ul - ua , 0 ; move 3 , ua / 4 )  
[3722] ( move ua , 3 ; move ul + ul , 3 * 2 )  | ( move ul , 3 ; move 4 + ul , ua ; move 2 , 4 + 2 )  
[3723] ( move 3 + 3 , ul / ua ; move ua , 2 )  
[3724] ( move 4 , ul / ua ; move ua + 2 , 2 )  
[3725] ( move ul , ul ; move ua + 2 , 3 * 3 )  
[3726] ( move 0 , ul ; move ua + ul , 4 * 4 )  | ( move ul , ul ; move 4 + 3 , 4 * 4 ; move 0 , ua )  
[3727] ( move ua - 3 , ul ; move ua + 3 , 4 )  
[3728] ( move ua , ua / 2 ; move 4 - ua , 2 )  
[3729] ( move ul , 3 ; move ua + 3 , ul - 3 )  
[3730] ( move 3 , 2 + ul ; move ul , ua - 4 )  
[3731] ( move ua , ul + ul ; move 3 , 4 + 3 )  | ( move ua , 2 ; move 2 + ul , 4 + 3 ; v0 = ul + ul )  
[3732] ( move 2 , ul ; move ul - 3 , ua + 4 )  
[3733] ( move 3 , 4 + ul ; move 2 , ua * ua )  
[3734] ( move ua + 3 , 4 ; move ul - 2 , ul )  
[3735] ( move 2 - 3 , 4 ; move ua + ul , ul )  
[3736] ( move ua , 2 - 3 ; move ul , 2 / ua )  
[3737] ( move ua + 2 , ua ; move ua , 4 * 4 )  
[3738] ( move ua , 3 - ul ; move 3 - ua , 3 )  | ( move 3 , 4 + ul ; move ua , ul / ua )  
[3739] ( move 3 , 3 ; move 4 - ua , ua + ul )  
[3740] ( move ua , 4 + 3 ; move ua , ul - 3 )  
[3741] ( move ua , 4 ; move ua - 2 , 2 / ua )  
[3742] ( move 3 , ul ; move 2 - ua , 4 + ul )  
[3743] ( move 3 - ua , ul - 3 ; move ul , 2 )  
[3744] ( move ul , 4 + 2 ; move 3 , ul - ua )  | ( move 0 , 3 ; move ul , 3 ; move 3 , ul - ua )  
[3745] ( move ua / 4 , 0 ; move 4 , ua + ul )  | ( move ua / 4 , 0 ; v0 = 4 ; move v0 , ul )  
[3746] ( move 3 , 2 ; move ua + ul , ul - 4 )  
[3747] ( move ua - ul , ul ; move 4 + 3 , 2 )  
[3748] ( move 3 , ua * ua ; move 4 + ul , 2 )  
[3749] ( move 3 + 3 , 4 + ul ; move ua , ul )  | ( move 3 * 2 , 4 + ul ; move ua , ul )  
[3750] ( move ua + ul , ul - 2 ; move 3 , 4 )  | ( move ua + ul , ua - ul ; move 2 , 4 )  | ( move ua + ul , ua - ul ; move 3 , ua + 4 ; pen ul )  
[3751] ( move ul , ua / 3 ; move 0 - ua , 4 )  
[3752] ( move ul - 3 , ua ; move 2 , ul - 3 )  
[3753] ( move ul - 3 , 0 ; move ua , ul / 3 )  
[3754] ( move 3 , 3 ; move ua + ul , 3 - ul )  | ( move 3 , 2 + ul ; move ua + ul , ul + ul )  
[3755] ( move ul - 3 , 4 - ua ; move ua , 2 )  | ( move 0 , 3 + ul ; move 2 - 4 , 0 ; move ua , 2 )  
[3756] ( move ua , 3 - ua ; move ul - 4 , 2 )  | ( move ua , 2 + ul ; move ul - 4 , ul + ul ; pen ua )  
[3757] ( move 0 , 4 ; move ua + 4 , ul / ua )  | ( move ul , ul / ua ; move ua + 4 , 4 )  
[3758] ( move ua - 4 , 4 ; move 2 , ua + ul )  | ( move ua - 4 , 4 ; move ul + ul , ul )  
[3759] ( move 3 - ul , 2 ; move 3 , ua - ul )  | ( move ul + ul , ua + 2 ; move 3 , ua - ul )  | ( move 2 + ul , ul ; move ul - 4 , ua ; move ul - 3 , ul )  
[3760] ( move 4 / ua , 0 ; move ua + 4 , ul )  
[3761] ( move 2 , 4 + ul ; move ua , 4 + ul )  
[3762] ( move ul , 2 ; move 4 * 2 , ua + ul )  | ( move ul , 3 - ul ; move ua + 2 , ul )  | ( move ul , 2 ; move ua + 2 , ul ; pen ua )  | ( move ul , ul + ul ; move ua + 2 , ua + ul )  | ( move ul , ul + ul ; move ua , ul ; move 2 , 0 )  | ( move ul , 2 ; move 2 , ua + ul ; move ua , ua )  | ( move ul , ul + ul ; move 2 , ul ; move ua , 0 )  | ( v0 = ua + 2 ; move ul , v0 ; move v0 , ul )  
[3763] ( move 2 - ua , 3 ; move 3 - ul , ul )  
[3764] ( move 3 , 3 ; move ua + ul , 4 + ul )  | ( move 3 , 3 ; move ul , 4 + ul ; move ua , ua )  
[3765] ( move ua + ul , ul ; move 2 , 3 * 3 )  
[3766] ( move ul - 2 , 4 ; move ua - 2 , ul )  
[3767] ( move 3 + 2 , ul + ul ; move ul , 4 )  | ( move 3 + ul , 2 ; move ul , 0 ; move ul , ua + 4 )  
[3768] ( move ua - ul , ua ; move 3 , 3 * 2 )  
[3769] ( move 4 + ul , ua + 2 ; move 4 , ul )  | ( move 4 + ul , ul + ul ; move 4 , ua + ul ; pen ul )  
[3770] ( move 3 , ua / 2 ; move ua , 3 - ua )  
[3771] ( move ul , 4 + ul ; move ua , 4 + 2 )  | ( move ul , 4 + ul ; move ua , 3 * 2 )  
[3772] ( move ua , 0 - 4 ; move ul , ul / 2 )  
[3773] ( move ul , 3 ; move 4 + ul , ua - 2 )  | ( move ul - ua , ul ; move 0 - ul , 2 )  | ( pen ul ; move ul - ua , ul ; move ul , 4 + ul )  | ( move ul - ua , ul ; move 0 , ua + ul ; move 0 - ul , ul )  
[3774] ( move 3 , ul - 3 ; move ua , ua - 3 )  
[3775] ( move 4 , 3 ; move 0 - ua , ul / ua )  
[3776] ( move ul , 3 ; move ua + ul , 3 * 2 )  
[3777] ( move ul , 3 ; move 2 - ua , 4 + ul )  
[3778] ( move ua , ua + 3 ; move 4 + ul , 4 )  | ( move ua , 3 ; ( pen ul ; move 4 + ul , 4 ) )  
[3779] ( move 2 + ul , 4 + ul ; move 3 , ul )  | ( move 0 , 4 ; move 3 , ul ; move 3 , ul )  | ( move 3 , 4 + ul ; move 3 , ul ; pen 4 + ul )  | ( v0 = 3 ; move 3 , v0 + 2 ; move v0 , ul )  | ( v0 = 3 ; move v0 , 3 + 2 ; move v0 , ul )  
[3780] ( move ua - 2 , 4 + 3 ; move ul , ul )  
[3781] ( move 0 - 4 , ul ; move ua , 3 / ua )  
[3782] ( move ul , 0 ; move ua - ul , 4 * 3 )  
[3783] ( move 4 + ul , ul ; move 4 , ua + 2 )  
[3784] ( move 4 , ua + ul ; move 2 , ul - 3 )  
[3785] ( move ul , ua ; move 4 + 2 , 4 + ul )  
[3786] ( move 2 , ul + ul ; move ua , 3 / 2 )  
[3787] ( move 3 - ua , ua ; move 4 + ul , 3 )  
[3788] ( move ul , 4 * 2 ; move ua , ua + 3 )  
[3789] ( move ua + 2 , ul ; move 3 / 2 , ul )  
[3790] ( move ua - ul , 4 ; move ua - 3 , 2 )  
[3791] ( move 4 , ua ; ul ; move 2 , 4 / ua )  | ( move 4 , ua ; move 2 , 4 / ua ; pen ul )  | ( ( move 2 , 0 ; move 2 , 0 ) ; move 2 , 4 / ua )  
[3792] ( move 4 , 2 / ua ; move ua , ua + 4 )  
[3793] ( move ul , ua + 3 ; move 4 , 4 + ul )  | ( move ul , 4 - ul ; move 0 , 2 ; move 4 , 3 )  
[3794] ( move ua + 3 , 4 ; move ul , 4 - ua )  | ( move 3 * 3 , 4 ; move ul , 4 ; move ul , 3 )  
[3795] ( move ua - 2 , ua * 3 ; move 4 , ul )  | ( move ua - 2 , ua ; move 3 + ul , ul )  
[3796] ( move ul , 3 / 2 ; move 2 - ua , ul )  | ( pen ul ; move ul , ua * ua ; move 2 - ua , 4 + 3 )  
[3797] ( move 3 + ul , 4 ; move ua - 3 , ul )  
[3798] ( move ua + ul , 4 ; move ua , 4 * 2 )  
[3799] ( move ul - 3 , ul - 2 ; move 3 , ul )  | ( v0 = 2 - 4 ; move v0 , ul + v0 ; move 3 , ul )  
[3800] ( move ua , ul - 3 ; move 3 , ul - 3 )  
[3801] ( move 4 , ua ; move 3 * 2 , ul + ul )  | ( move 4 , ua ; v0 = 3 ; move v0 + v0 , ua + 2 )  
[3802] ( move ul - 4 , 2 + ul ; move ul , 3 )  
[3803] ( move 3 + ul , ua ; move 3 , ul - 4 )  | ( move 4 , ua * 4 ; move ul - 4 , ul / ua )  
[3804] ( move 2 , 3 - ua ; move ua , ul / 3 )  
[3805] ( move ua - ul , 4 - ua ; move 2 , 4 )  
[3806] ( move ul , ua - ul ; move 4 * 2 , 2 )  
[3807] ( move 3 + ul , ul / 3 ; move ua , 2 )  
[3808] ( move ua , 4 + ul ; move 4 - 2 , ul )  | ( move ua , 4 + ul ; move ul + ul , ul )  | ( move ua , 4 + ul ; move ul , ul ; move ul , 0 )  
[3809] ( move ua - ul , ul ; move 4 + 4 , 2 )  
[3810] ( move 2 , ul - 2 ; move 3 , ul / ua )  
[3811] ( move ua , 4 * 3 ; move 2 , ul + ul )  
[3812] ( move 2 , ua ; move 4 + ul , 3 / ua )  
[3813] ( move ua + ul , ul ; move 4 + 3 , 4 )  
[3814] ( move 3 - ua , ua ; move 3 / 2 , ul )  
[3815] ( move ua + ul , 3 ; move 4 , 4 + ul )  | ( move ua + ul , 2 + ul ; move 0 , 4 + ul ; move 4 , 0 )  | ( move ua + ul , 4 - ul ; move 0 , ua + ul ; move 4 , 4 )  
[3816] ( move 2 , ul - 3 ; move 4 , ul - ua )  
[3817] ( move ua - 3 , 4 ; move ua + ul , 4 )  
[3818] ( move ul - 3 , 4 ; move 2 - ua , ul )  
[3819] ( move ua + ul , 4 * 3 ; move ul , 2 )  
[3820] ( move ua , ul / ua ; move 2 , 4 + 3 )  
[3821] ( move ua , 4 + 2 ; move ul , 3 / ua )  
[3822] ( move ua , 3 * 2 ; move 4 , ua - ul )  
[3823] ( move 2 + ul , 4 ; move 4 , ua * ua )  
[3824] ( move 3 - ul , ua ; move ua / 3 , 2 )  | ( move 2 , 0 ; ( move ul / ua , 2 ; move 2 , 0 ) )  
[3825] ( move 3 * 2 , ul ; move ua , ua - 4 )  
[3826] ( move ua - 3 , 3 - ul ; move ua , 4 )  | ( move ua - 3 , ul + ul ; v0 = 4 ; move ua , v0 )  
[3827] ( move 4 + 3 , ul ; move 3 - ua , ul )  
[3828] ( move 2 , 4 ; move ua - ul , ul - 3 )  | ( move 0 , ul + ul ; move ul - ua , ua ; move ul - 3 , 2 )  
[3829] ( move ul / 3 , 0 - 4 ; move ua , ul )  | ( move 2 / 3 , ua - 4 ; move ua , ul )  
[3830] ( move ul , ul - 3 ; move ua + 3 , 4 )  
[3831] ( move 3 , ua - ul ; move ua , 4 + 4 )  
[3832] ( move ua - ul , ua * 2 ; move 3 , 4 )  
[3833] ( move ua - ul , 4 + ul ; move 4 , 2 )  
[3834] ( move 4 + ul , ul - 3 ; move ua , 3 )  
[3835] ( move 2 / ua , 3 * 2 ; move ua , ul )  
[3836] ( move 4 * 2 , ua * ua ; move ul , 2 )  
[3837] ( move 2 , ul ; move 4 * 2 , ul + ul )  | ( ( move 2 , ul ; move 4 + 4 , 2 ) ; v0 = ua / 2 )  
[3838] ( move 2 , 2 / 4 ; move ua , ua - ul )  
[3839] ( move ul , ul ; move ua - 3 , 2 - 4 )  
[3840] ( move 3 , ua ; move ul - 3 , ua - 4 )  
[3841] ( move 2 , 4 + ul ; move ul - 4 , ua )  
[3842] ( move 4 + ul , ua ; move 4 + 3 , ul )  
[3843] ( move ua , ua + 4 ; move 4 , ua - 4 )  | ( v0 = 4 ; move ua , v0 ; move v0 , ua - v0 )  
[3844] ( move 3 + ul , ua * ua ; move 4 , 3 )  
[3845] ( move 3 * 2 , ul ; move 3 - ua , ul )  
[3846] ( move ul + ul , 3 ; move 3 - ua , 4 )  
[3847] ( move ua , 4 ; move 2 - 4 , ua * ua )  | ( move ua , 3 + ul ; move 2 , 4 + ul ; v0 = 3 + ul )  
[3848] ( move 4 , 2 ; move ul - ua , 2 / ua )  
[3849] ( move 2 , ul / ua ; move 3 + 3 , ul )  | ( move 2 , ul / ua ; move 3 * 2 , ul ; v0 = ul )  
[3850] ( move ua - 3 , ul ; move ul , 2 - 4 )  
[3851] ( move ul - ua , 4 ; move 3 , 3 + ul )  | ( move ul - ua , ua + 4 ; move ul + ul , 4 ; move ul , ua )  
[3852] ( move ul - 4 , ul / 2 ; move ul , 0 )  
[3853] ( move 4 - ua , 2 ; move ul + ul , 4 )  
[3854] ( move ua + ul , 3 ; move 4 , ua - 4 )  
[3855] ( move 4 , 4 + ul ; move ua - ul , 2 )  
[3856] ( move 0 - ua , 4 ; move ul , 4 / ua )  
[3857] ( move 2 - 4 , 4 ; move ua + ul , ul )  | ( move ul - 3 , 4 - ua ; move ua + ul , ul )  
[3858] ( move 4 , 4 ; move ua + 3 , ua * ua )  
[3859] ( move 4 / ua , 3 + ul ; move ua , 2 )  
[3860] ( move 4 - ul , 0 - ul ; move ul , 4 )  | ( move 3 , ua - ul ; move ul , 3 + ul )  
[3861] ( move 4 , ua * ua ; move ua , 4 + 3 )  
[3862] ( move 3 , ul / ua ; move ua - 3 , 2 )  
[3863] ( move 2 / 3 , 3 ; move ua + ul , ul )  
[3864] ( move ua , 3 ; move 4 + ul , 4 + ul )  | ( move ua , 3 ; move 0 , ul ; move 4 + ul , 4 )  | ( move ua , 2 + ul ; v0 = 4 + ul ; move v0 , v0 )  | ( move ua , 3 ; ( move 4 + ul , 4 + ul ; pen 3 + ul ) )  
[3865] ( move ua , 4 ; move 3 - ua , ua - 4 )  
[3866] ( move 3 , 0 - 4 ; move ul , ul / ua )  | ( move 4 , ua - 4 ; move ul / ua , ul ; v0 = ua + 4 )  
[3867] ( move 4 , 4 + ul ; move 2 , ul + ul )  
[3868] ( move ua , ua / 3 ; move 3 , 2 - ul )  | ( move ua , ua / 3 ; move 2 + ul , ul )  
[3869] ( move ua , ua - ul ; move 4 * 2 , 3 )  | ( move ua , ul - 2 ; move ua + 2 , 3 ; v0 = 0 )  
[3870] ( move 4 - ua , 3 ; move 3 - ua , ul )  
[3871] ( move ua - ul , 2 ; move 4 , ua - 4 )  
[3872] ( move 2 , 3 / 2 ; move ul - ua , ul )  
[3873] ( move ul - 4 , 3 ; move ua - ul , 2 )  | ( move ul - ua , 4 + ul ; move 3 , ul - 3 ; move 0 , 3 )  
[3874] ( move 4 , ua ; move 3 + ul , 4 + ul )  | ( move 4 , ua ; move 4 , 4 + ul ; pen ua * ua )  
[3875] ( move ul , 2 ; move 4 + ul , 4 + ul )  
[3876] ( move ua , 4 ; move ua - 2 , 3 / ua )  
[3877] ( move 4 - ul , ua ; move ul - 3 , 2 )  | ( v0 = 0 - 2 ; move 3 , ua ; move v0 , 2 )  
[3878] ( move 2 / ua , ua ; move ua , 3 - 4 )  
[3879] ( move ul / ua , 4 ; move ua + 3 , 2 )  
[3880] ( move ul , 4 + 4 ; move 3 , ua + ul )  
[3881] ( move ua , ua + 4 ; move ul , 3 / 2 )  | ( move ua , 4 ; move 0 , 2 ; move ul , 4 * 3 )  | ( move ua , 4 - ua ; move ul , 3 / 2 ; v0 = ua + 4 )  
[3882] ( move ul , ua ; move ua + 2 , 3 / 4 )  
[3883] ( move 4 , 2 ; move ua - 4 , ul + ul )  
[3884] ( move 4 + ul , 3 ; move ul , ul - 2 )  | ( move 0 - ul , ua + 2 ; move ul - ua , ul )  
[3885] ( move ul , ua ; move 4 + 3 , 2 / ua )  
[3886] ( move ul , 0 ; move ul - 4 , ul / 2 )  
[3887] ( move 4 , ul + ul ; move 2 , ul - 4 )  | ( move 4 , ua + 2 ; move 0 - 2 , ul / ua )  
[3888] ( move ua + ul , ul - 4 ; move 3 , 4 )  
[3889] ( move 4 + ul , 4 + ul ; move ua , 4 )  
[3890] ( move ua - 3 , ul ; move ul - 3 , 4 )  | ( move 4 - ul , ul ; move ul + ul , 3 / 4 )  
[3891] ( move 3 , ul / 4 ; move 2 , ua + ul )  | ( move 3 , ul / 4 ; move 2 , ul ; v0 = 3 / 2 )  | ( move 3 , ul / 4 ; move ul + ul , ul ; pen 2 + ul )  
[3892] ( move 4 , ul - 4 ; move ua , 3 + ul )  | ( ( move 4 , ul - 4 ; move ua , 4 ) ; move ul , ua / 2 )  
[3893] ( move 2 , ul - 4 ; move ua , ul / 2 )  
[3894] ( move 3 , ua - ul ; move 3 - ul , 4 )  | ( move 3 , ua - ul ; move ul + ul , 4 )  | ( move 3 , ua - ul ; move ul + ul , 4 ; pen 0 - 4 )  
[3895] ( move 3 , 4 * 2 ; move ul , ul + ul )  
[3896] ( move ul + ul , 4 ; move ul - 3 , 3 )  
[3897] ( move 3 - 4 , ua - ul ; move 3 , ul )  | ( move ul - 4 , ua ; move 2 - ul , ua - ul )  
[3898] ( move ul , 2 / ua ; move 4 + 3 , ul )  
[3899] ( move 4 - ua , ul ; move 4 , 2 - ul )  | ( move 4 - ua , ul - ua ; move 3 , ul ; move ul , 0 )  | ( v0 = ua ; move 4 - v0 , v0 + ul ; move 4 , ul )  
[3900] ( move ul + ul , 4 ; move ul - 4 , 2 )  
[3901] ( move ua , ul - 4 ; move 4 , 3 + ul )  
[3902] ( move 4 / 3 , ua + 3 ; move ua , ul )  | ( move 4 / 3 , 3 ; v0 = 0 ; move ua , ul )  
[3903] ( move ua - 3 , ua ; move ul - 4 , 4 )  | ( pen ul ; ( move ua - 3 , ua ; move ul - 4 , 4 ) )  
[3904] ( move 4 , ua + 4 ; move ul - ua , 4 )  | ( move 4 , 4 - ua ; move ul - ua , 4 )  
[3905] ( move ul + ul , 2 / ua ; move 4 , 3 )  
[3906] ( move ua / 3 , ul ; move 3 , ua - 3 )  | ( move 2 , ul ; move 3 - ua , ul / ua )  | ( move ul , ul ; move ul , 0 ; move ul - 4 , ul / ua )  
[3907] ( move 3 , 2 / ua ; move ul , 2 / ua )  
[3908] ( move 4 , ul ; move ua + ul , 3 / 2 )  
[3909] ( move 2 , ua * 4 ; move 4 , ua * ua )  | ( move 2 , ua * 3 ; move 3 + ul , ua * ua )  | ( move ul , ua ; move ul , ua * 2 ; move 4 , ua * ua )  | ( move 3 - ul , ua ; v0 = ua * ua ; move 4 , v0 )  
[3910] ( move 3 , ua - ul ; move ua , 2 / 4 )  
[3911] ( move 4 , 3 + 2 ; move ul , ul / ua )  
[3912] ( move 4 * 2 , ul - 2 ; move ul , ul )  
[3913] ( move 3 , 3 + ul ; move ul , ul / 2 )  
[3914] ( move ul - 4 , ul - 2 ; move ua , 4 )  
[3915] ( move ua / 4 , ua ; move ua / 2 , 2 )  | ( ( move 3 / 2 , ua ; move 3 , 2 ) ; pen ul )  
[3916] ( move ul - 4 , ul ; move 2 , ua - 4 )  
[3917] ( move 4 + 3 , ua - ul ; move ul , 4 )  | ( move ua + ul , ua - ul ; move ul , 4 )  | ( move ua + ul , 2 - 3 ; move ul , 4 - ua ; pen 0 )  
[3918] ( move ul , 4 + 4 ; move ua , 4 - ua )  
[3919] ( move 4 - ul , ul - 2 ; move 3 , ul )  | ( move 2 + ul , ua - ul ; move 3 , ul )  | ( ( move 3 , 2 - 3 ; move 3 , ul ) ; pen ua - ul )  | ( move 4 - ul , ua - ul ; move 2 + ul , ul ; pen 4 )  
[3920] ( move ul , ul / ua ; move 4 + 3 , 2 )  | ( move ul , ul / ua ; move 4 + 3 , 2 - ua )  
[3921] ( move ul + ul , 4 * 3 ; move 2 , ul )  | ( move 2 - 4 , 3 / ua ; move 2 , 2 - ua )  
[3922] ( move 3 , 3 - ul ; move ul - ua , 4 )  | ( move 3 , 2 ; move ul - ua , 2 * 2 ; v0 = 2 / ua )  
[3923] ( move ua / 2 , 3 ; move 4 + ul , ul )  
[3924] ( move ul , ul / 2 ; move ua , 3 * 2 )  
[3925] ( move ul - 3 , 4 + ul ; move 3 , ul )  
[3926] ( move 3 - ul , 4 ; move ua + ul , 4 )  | ( move ul + ul , 4 ; move ul , 3 + ul ; move ua , ua * 3 )  
[3927] ( move ul - 4 , ul ; move 2 + ul , 4 )  
[3928] ( move ul , 3 ; move ua - 2 , ua / 4 )  
[3929] ( move ul + ul , 4 ; move ua , 4 + 4 )  
[3930] ( move 4 + ul , 3 ; move 4 + ul , ul )  
[3931] ( move 3 , ua - 4 ; move 4 + ul , ul )  
[3932] ( move 3 / 2 , 4 ; move ua , ul + ul )  
[3933] ( move ul , 2 / 3 ; move 3 , ua * ua )  
[3934] ( move ul , ua ; move ua / 2 , 3 / 2 )  
[3935] ( move 4 + ul , 4 * 2 ; move ua , ul )  
[3936] ( move 3 , ul ; move ul - ua , 4 + 4 )  
[3937] ( move 2 - ul , 3 ; move ua , ua / 4 )  
[3938] ( move 4 / ua , 4 ; move ua + ul , 2 )  
[3939] ( move 3 , 3 / ua ; move 3 , ua * ua )  
[3940] ( move ul + ul , 0 ; move 4 , ul / 4 )  
[3941] ( move ua - 3 , ul ; move 3 , ua / 3 )  | ( ( move 3 , 0 ; v0 = 3 - ua ) ; move v0 , ua + ul )  
[3942] ( move ua - 4 , ul / 2 ; move 2 , ul )  
[3943] ( move ua , 4 / ua ; move 4 , 2 - ua )  
[3944] ( move 4 , ul - 2 ; move ua , ul - 4 )  | ( move 3 , ua - ul ; move ua , ua - 3 )  
[3945] ( move 4 / ua , 0 - ul ; move 4 , ul )  
[3946] ( move ul - 4 , 3 ; move 4 , ua + ul )  | ( move ul - 4 , 3 ; move 4 , ul - ua )  
[3947] ( move 3 , 2 / ua ; move 4 , ul + ul )  | ( move 3 , ul / 3 ; move 4 , 2 ; move ul / ua , ua )  
[3948] ( move 4 / 3 , ul ; move ua + 2 , ul )  
[3949] ( move ul - ua , 3 ; move 4 , ul - 3 )  
[3950] ( move ul - 3 , ul ; move 3 , 4 + ul )  
[3951] ( move 3 , ua - 3 ; move ul , ul - 4 )  | ( move 3 - ua , ul / ua ; move ul , 0 )  
[3952] ( move 4 / ua , ua + 2 ; move 4 , ul )  | ( move 3 / 4 , 3 - ul ; move 3 + ul , ua + ul )  | ( move 3 / 4 , 3 - ul ; move 4 , ul - ua ; move 0 , ul )  
[3953] ( move 2 - ul , ul ; move 3 , ul - 4 )  | ( move ul , ul ; move 0 - 3 , ul / ua )  | ( move ul , ua + ul ; move 3 , ul - 4 )  | ( move ul , ul ; move 2 + ul , ul - 4 )  | ( move ul , ul ; move ua / 2 , ul - 4 )  
[3954] ( move 4 , 4 ; move ul - ua , ul - 2 )  
[3955] ( move 2 , ul ; move ua - ul , 2 / 4 )  
[3956] ( move ua , ua / 4 ; move 3 + ul , 3 )  
[3957] ( move 3 , ul / 2 ; move ua - 3 , ul )  | ( move 3 , ul / 2 ; move ua - 3 , ul ; pen ua )  
[3958] ( move 0 - ul , ul / 4 ; move 3 , ul )  
[3959] ( move 3 , ua + 3 ; move ua / 4 , ul )  
[3960] ( move ua , 4 ; move 4 + ul , 4 + ul )  
[3961] ( move 4 + ul , 4 ; move ua , 4 + ul )  
[3962] ( move ua - 4 , ul ; move 4 , ua - 3 )  | ( move 2 , ul ; move 4 , ua - 3 ; v0 = 4 )  
[3963] ( move 4 , 0 ; move ul + ul , ul / 4 )  
[3964] ( move ua , ul ; move 2 - 4 , ul / 2 )  | ( move ua , ul ; move ul - 3 , 3 / ua )  
[3965] ( move 3 , 2 / ua ; move ua , 4 - ul )  
[3966] ( move 4 * 2 , ul ; move 3 - ua , ul )  
[3967] ( move ua - 3 , 4 + 4 ; move ul , ul )  
[3968] ( move ua - 3 , 4 ; move 4 - ua , ul )  
[3969] ( move ua , ua - 4 ; move ua / 3 , 4 )  | ( move ua , ua - 4 ; move 2 , 4 ; pen ul )  | ( move ua , ua - 4 ; move ul - 3 , 3 / 4 )  
[3970] ( move 2 , ul / 4 ; move ua - 3 , ul )  
[3971] ( move ul + ul , 2 ; move 4 , ua / 4 )  
[3972] ( move 2 , ua ; move 4 + ul , ul / 4 )  
[3973] ( move ua / 4 , ul - 2 ; move 3 , ul )  
[3974] ( move 4 + 2 , ul / ua ; move ul , 4 )  
[3975] ( move ul , ul ; move 3 * 3 , ua - 4 )  
[3976] ( move ul , ul / 3 ; move 2 + ul , 4 )  | ( move 0 , ul / 3 ; move ul , 0 ; move 3 , 4 )  | ( move ul , ul / 3 ; move 3 , 4 ; move 0 , ua )  | ( move ul , 2 / ua ; pen ul ; move 2 + ul , 4 )  
[3977] ( move 3 , ul ; move 4 / 3 , ua + ul )  | ( move 3 , ul ; ( move 3 / 2 , ul ; v0 = ua ) )  
[3978] ( move ul + ul , 4 * 2 ; move 4 , ul )  
[3979] ( move ul , ul / ua ; move 3 * 2 , 3 )  | ( move ul / 2 , 3 ; move ua - ul , ul / ua )  
[3980] ( move 3 , ul / ua ; move 2 , ul - 4 )  
[3981] ( move ul - 4 , ul ; move 4 , 3 + ul )  | ( move ul - 4 , ul ; v0 = 4 ; move v0 , v0 )  
[3982] ( move ua , ul / 3 ; move 4 - ua , 3 )  
[3983] ( move 4 , ul ; move ua - 4 , 4 + ul )  
[3984] ( move ua , 3 / ua ; move 3 - 4 , ul )  | ( move 0 , 0 ; move ua , 3 / ua ; move 0 - ul , ul )  | ( move ua , 3 / ua ; ( move ul / 4 , ua ; move ul , 4 ) )  
[3985] ( move ua - 4 , ua * 4 ; move 3 , ul )  | ( move ua - 4 , 0 ; ( pen ul ; move 3 , ul ) )  
[3986] ( move ua , ul / 2 ; move 3 / 2 , ul )  | ( move ua , ul / 2 ; ( pen ul ; move 3 / 2 , ua + ul ) )  
[3987] ( move 4 - ul , ul - 4 ; move ul , 2 )  | ( move ul , ul / 4 ; move 3 , 3 ; move ul , ul + ul )  
[3988] ( move 2 , ua * 3 ; move ua , ul / 4 )  | ( move 2 , ua * 3 ; move ua , ul / 4 ; v0 = 2 + ul )  
[3989] ( move 4 - ua , ua * 4 ; move 3 , ul )  
[3990] ( move 3 , ul - 3 ; move ul , 3 / ua )  | ( move 2 + ul , ul - 3 ; move ul , ul / 2 ; pen 4 )  
[3991] ( move 4 + ul , 3 / 2 ; move ul , ul )  
[3992] ( move 4 , ul ; move 3 * 3 , ua * ua )  
[3993] ( move ua , 3 ; move ua / 4 , ua - 4 )  
[3994] ( move ul / 3 , ua ; move 4 + 3 , ul )  | ( move 2 / ua , ua ; move ua + ul , ul )  
[3995] ( move 2 , ua / 4 ; move 4 , ul + ul )  
[3996] ( move ua , ua / 4 ; move 3 / ua , 2 )  
[3997] ( move ul , 4 + ul ; move 4 + 4 , ul )  
[3998] ( move ua - 4 , 4 ; move ua / 2 , ul )  
[3999] ( move 4 + ul , 4 ; move ul , 4 + ul )  | ( move 4 + ul , 3 + ul ; move ul , 4 + ul )  | ( move 4 , 3 + ul ; move ul , ua ; move ul , 4 + ul )  
[4000] ( move 3 - ua , 4 ; move ul , 3 / ua )  
[4001] ( move ul , ul ; move 4 + 3 , ua / 3 )  
[4002] ( move 3 , ul ; move ul - ua , 4 * 3 )  
[4003] ( move 4 , ua ; move 4 + ul , ua / 3 )  
[4004] ( move 4 + ul , ul ; move 4 + ul , 4 )  | ( move 2 , ul ; move 3 , ua ; move 4 + ul , ua + 4 )  
[4005] ( move ul , 4 ; move ua + ul , 2 / 4 )  
[4006] ( move ul - 4 , ua - 4 ; move 3 , ul )  
[4007] ( move 2 , ul ; move 4 + ul , ul / 3 )  
[4008] ( move ul , 4 * 3 ; move 3 + ul , ul )  
[4009] ( move 4 * 2 , ul ; move ul , 4 + ul )  | ( move ua + ul , ul ; move ul , 0 - ul )  | ( move ua + ul , ul ; v0 = ul ; move ul , ua - v0 )  
[4010] ( move ul - 4 , ul / 4 ; move ul , 0 )  | ( move ul , ul / 4 ; move 3 , ua / 2 )  
[4011] ( move ua - 3 , 4 ; move ua / 3 , ul )  
[4012] ( move 4 , ul ; move 4 * 2 , ul + ul )  
[4013] ( move 2 , ul / ua ; move 3 , ul / 2 )  
[4014] ( move ua / 4 , ul ; move ua , 3 * 2 )  
[4015] ( move ul - 4 , ul ; move 4 + 3 , ul )  
[4016] ( move ul , ua - ul ; move 4 , 4 * 2 )  
[4017] ( move ua - 2 , ua / 4 ; move ul , 4 )  
[4018] ( move ul - 3 , ul ; move 4 , 3 - ul )  | ( move 2 - 4 , ul ; v0 = 4 ; move v0 , 2 )  
[4019] ( move 4 + ul , 3 ; move ul , ul / 2 )  
[4020] ( move ul , 4 / ua ; move ua , 4 - 2 )  | ( move ul , 2 / 3 ; move ua , ul + ul )  
[4021] ( move ua - 4 , 3 ; move 4 - ul , ul )  
[4022] ( move ua , ul ; move 4 * 2 , ua / 3 )  
[4023] ( move 4 , 3 + ul ; move 3 / ua , ul )  | ( move 4 , 4 ; move 3 / ua , 4 / ua ; v0 = ul / ua )  
[4024] ( move 3 , ul / 2 ; move ul , 4 + ul )  
[4025] ( move ul , 4 * 3 ; move ua , ul - 3 )  
[4026] ( move ua , 4 / 2 ; move ua - ul , 4 )  | ( move ua , 2 ; move ua - ul , ua + 4 ; v0 = ua * ua )  
[4027] ( move 3 , ua / 2 ; move ua , ul / 3 )  
[4028] ( move ua , ul / 2 ; move 4 + ul , 4 )  
[4029] ( move ul / 2 , ul ; move 4 + 3 , ul )  
[4030] ( move ul , ua / 4 ; move 4 , ua - 2 )  | ( move ul , 4 * 2 ; move 2 - ua , 2 - ul )  
[4031] ( move 4 * 2 , ua - ul ; move 4 , ul )  
[4032] ( move 2 + ul , ul / 4 ; move ul , 3 )  
[4033] ( move ul , 3 + ul ; move 3 , ul / 4 )  | ( move ul , 4 ; v0 = ul / 4 ; move 3 , v0 )  
[4034] ( move 3 , ul / ua ; move ua - 4 , 4 )  
[4035] ( move ul , 4 / 3 ; move ul - ua , 3 )  
[4036] ( move ul , 4 + ul ; move 4 , 3 / ua )  
[4037] ( move 4 , ua ; move 3 - ul , ul / 3 )  
[4038] ( move 4 , ul ; move ul - 3 , ul / 2 )  | ( move 4 , ul ; move 0 , 4 ; move ul + ul , 4 + 2 )  
[4039] ( move ul - 4 , 4 ; move ul , 4 + ul )  
[4040] ( move 3 , 4 + ul ; move ul , ua / 4 )  
[4041] ( move 4 , 3 / ua ; move ul + ul , 4 )  
[4042] ( move ua , 4 ; move ua / 3 , ul - 4 )  
[4043] ( move 4 , ul - 4 ; move ua / 2 , ul )  | ( v0 = ul - 4 ; ( move 4 , v0 ; move 3 , ul ) )  
[4044] ( move ul - 4 , 2 ; move ul , 4 / ua )  
[4045] ( move 4 , ua / 3 ; move ul , 4 - ua )  
[4046] ( move 2 + ul , ul ; move 4 , ul / 4 )  
[4047] ( move 3 , ul / ua ; move 3 , ul / 2 )  
[4048] ( move 4 , ul / ua ; move ul , 3 * 2 )  | ( pen ul ; move ul , 3 ; move 4 , ul / 3 )  
[4049] ( move 4 , 4 / ua ; move 3 + ul , ul )  
[4050] ( move ul , 4 * 4 ; move ul - ua , 3 )  | ( move 0 - ul , 2 + ul ; move ua , 2 / ua )  
[4051] ( move ul , ul / 3 ; move ua , 3 - 4 )  
[4052] ( move ul , ul / 4 ; move 4 + ul , 2 )  
[4053] ( move 4 + ul , ul / 4 ; move ul , 2 )  
[4054] ( move 3 , 4 / ua ; move ul + ul , 4 )  
[4055] ( move ua - ul , 2 / 4 ; move ul , 4 )  
[4056] ( move 4 , 4 - ua ; move ul , ul / 2 )  
[4057] ( move 4 , ua ; move ul / 2 , ua / 3 )  | ( move 4 , 0 ; move 0 , 4 ; move 3 / ua , 4 )  | ( pen ul ; move 4 , ua * 4 ; move ul / 2 , 2 )  
[4058] ( move ua , 4 * 3 ; move ul - 4 , ul )  
[4059] ( move ul , 3 / ua ; move 4 , ul - 3 )  
[4060] ( move 0 , 3 ; move 4 , 2 ; move 4 , 3 )  
[4061] ( move 4 , ul + ul ; move 3 , ua / 4 )  
[4062] ( move 4 + ul , ul ; move 4 , ul / 3 )  
[4063] ( move 4 + ul , 4 ; move 4 , ul / ua )  | ( move 4 , ua + ul ; move ul - ua , 3 )  
[4064] ( move ul / 3 , ul ; move 4 * 2 , ul )  
[4065] ( move ul - 4 , ul / 4 ; move ul , 2 )  
[4066] ( move 3 , ua / 3 ; move ua , ul / 4 )  
[4067] ( move ul / 4 , ul ; move ua , 4 * 2 )  
[4068] ( move 3 / 4 , ul ; move ua , ua / 3 )  
[4069] ( move 3 , 4 ; move 2 , 2 ; move 3 , 3 )  
[4070] ( move ul , ul / ua ; move 3 * 3 , 4 )  
[4071] ( move ul , 4 / ua ; move ua , 4 * 3 )  
[4072] ( move 3 , ul ; move 4 + ul , ul / 4 )  
[4073] ( move ul + ul , 4 ; move 4 , ua / 4 )  
[4074] ( move 3 , ul / 3 ; move ul - 4 , ul )  
[4075] ( move ua , 4 * 4 ; move ul , 4 / ua )  
[4076] ( move ul / 4 , 4 * 3 ; move ua , ul )  | ( move ul , 4 * 4 ; move 0 , 0 - 4 ; move ua , ul )  
[4077] ( move 3 , ul / 3 ; move ua / 4 , ul )  
[4078] ( move ul , ua / 4 ; move 3 , 4 / ua )  
[4079] ( move 4 , ul / 4 ; move 2 / ua , ul )  
[4080] ( move 4 , 4 ; move ul - ua , ul / 4 )  
[4081] ( move ul , ul / 3 ; move 4 , 4 - ul )  
[4082] ( move 4 / ua , ul ; move ua , 4 / 3 )  
[4083] ( move ul / 4 , ul ; move ua , 4 * 4 )  | ( move 3 / 4 , ul / ua ; move ua , ul - 3 )  
[4084] ( move 4 , ua / 4 ; move 4 / ua , ul )  
[4085] ( move ul , ul / 4 ; move 3 , ua / 4 )  
[4086] ( move 4 / ua , ul / 4 ; move 4 , ul )  
[4087] ( pen ul + ul ; move 4 + ul , 4 + 2 )  
[4088] ( pen ul + ul ; move ua + 3 , 2 / 3 )  
[4089] ( pen ua * 3 ; move ua - ul , 4 + 3 )  | ( pen ua + 2 ; move ul , 4 ; move ua - ul , 3 )  | ( move ul , 4 ; pen 4 + 2 ; move ua - ul , ua + 3 )  
[4090] ( pen ul + ul ; move 3 * 3 , ua - 3 )  
[4091] ( pen ul + ul ; move ua + 3 , 4 * 4 )  
[4092] ( move 3 * 2 , 4 ; pen 4 ; move 0 , 0 )  
[4093] ( move 4 , 0 - 4 ; pen 4 ; move 0 , 2 )  
[4094] ( pen ua * 3 ; move ua + 4 , 4 / ua )  | ( v0 = 4 / ua ; pen ua ; move ua / v0 , v0 )  | ( pen ua ; move 4 + ul , 4 / ua ; move ua - ul , ua )  
[4095] ( pen ua / 3 ; move ua - ul , 3 * 3 )  | ( move 0 , 2 + ul ; pen 2 ; move ua - ul , 3 * 2 )  | ( pen ul + ul ; move ul - ua , 3 * 3 ; v0 = 3 - ua )  
[4096] ( move ua , 0 ; move 2 - ua , ua + ul )  | ( move ua , ua ; move 2 - ua , ul ; pen ua )  | ( ( move ua , ua ; v0 = ul ) ; move 2 - ua , v0 )  | ( move ua , ua ; ( move 2 - ua , ul ; v0 = ua ; pen ua ) )  
[4097] ( move ul - ua , 0 ; move ua , 0 - ul )  | ( move ul - ua , ua ; move ua , 0 - ul )  
[4098] ( move 3 , 4 / 2 ; pen 2 ; move 3 , 0 )  
[4099] ( move 0 - ul , 0 ; move ua + ul , ul )  | ( move ul - 2 , ua ; move ua + ul , ul )  | ( move ul , 2 + ul ; move ua + ul , ul - 3 )  
[4100] ( move ua - 2 , 0 ; move ua , ul + ul )  
[4101] ( move ul - ua , 0 ; move ua + ul , 2 )  
[4102] ( move 0 , ua * ua ; move ua + 2 , ul )  | ( move 0 , ul ; ( move 4 * 2 , ua * ua ; v0 = 0 ) )  
[4103] ( move ua - 2 , 0 ; move ua , ul - ua )  | ( move ua - 2 , ua * 3 ; move ua , ul )  | ( move ua - 2 , ua * 2 ; move ua , ul ; v0 = 2 )  
[4104] ( move ua - ul , 0 ; move ul - ua , 2 )  | ( move ua - ul , ua ; move ul - ua , ul + ul )  
[4105] ( move 2 , 4 ; ( pen 0 ; move 3 , 2 ) )  | ( move 2 , 4 ; pen ul - 2 ; move 4 - ul , ua + 2 )  
[4106] ( move 0 - ua , ul ; move ua - ul , 2 )  
[4107] ( move 2 - ua , 0 ; move ua - ul , ul )  
[4108] ( move ua , ua + ul ; move 2 - ua , 2 )  
[4109] ( move ul , 0 - 2 ; move ua , ua * ua )  | ( move ul , 2 - 4 ; move ua , ua * ua )  | ( move ul , 2 - 4 ; ( move ua , ua * ua ; move 0 , 2 ) )  
[4110] ( move ua + 2 , ua ; move 2 , ua * ua )  
[4111] ( move 2 , ua ; move ua + 2 , ua - ul )  
[4112] ( move ua - ul , 0 ; move 3 , ua + ul )  
[4113] ( move ul , ul ; move ua + 2 , 0 - ul )  | ( move ul , ul ; move ua + 2 , ua - ul )  | ( move ul , ua + ul ; move ua + 2 , ua - ul )  
[4114] ( move 3 , 0 ; move ua + ul , ua - ul )  | ( move 3 , ua ; move ul , ua - ul ; move ua , 0 )  
[4115] ( move 2 - ua , 2 ; move ua , ua + ul )  | ( move 2 - ua , 2 ; move ua , ul - ua ; pen ul )  
[4116] ( move ua , ul ; move ua + 2 , 2 - ua )  | ( move ua , ul ; move ua + 2 , ul + ul )  | ( ( move ua , ul ; move ua , 2 ) ; move 2 , ua )  | ( ( move ua , ul ; v0 = ua + 2 ) ; move v0 , v0 )  
[4117] ( move ua + ul , 0 ; move ua + ul , 4 )  | ( move ua , ua ; move ul , 0 ; move ua + ul , 4 )  | ( move ua , ua ; move ul , ua ; move ua + ul , 4 )  
[4118] ( move ua , 0 ; move ua + ul , 4 + ul )  
[4119] ( move ua + ul , 2 + ul ; move ua , 2 )  | ( move ua , 2 + ul ; move ul , ua ; move ua , 2 )  | ( move ul , 3 ; move ua , ua ; move ua , 3 - ul )  | ( move ul / ua , 0 ; move ua + ul , 3 ; move ua , 2 )  
[4120] ( move ua + ul , 0 ; move 3 - ua , ul )  
[4121] ( move ua + ul , ul ; move ua - 2 , 2 )  
[4122] ( move ul - ua , 2 + ul ; move ua , 2 )  
[4123] ( move 3 - ua , ua + ul ; move ua , 2 )  | ( move 3 - ua , ul ; move ua , ul + ul ; v0 = ua )  
[4124] ( move ua , 4 ; move 0 - ua , ul - ua )  
[4125] ( move ua + ul , 0 ; move 2 / ua , ul )  | ( move ua + ul , 0 ; move ul / 2 , ul )  | ( move ua + ul , ua ; move 2 / 4 , ul )  | ( move ua + ul , ua ; move 3 / ua , ul )  | ( move ua + ul , ua ; v0 = ul / 2 ; move v0 , v0 )  | ( move ua + ul , 0 ; move ul / ua , ul ; move ul / ua , 0 )  
[4126] ( move ua + 2 , ua ; move ua , 3 - ul )  | ( move ua , ua ; ( move 2 , 0 ; move ua , 2 ) )  | ( move ua + 2 , ua ; move ua , ul + ul ; pen ua )  | ( move ua + 2 , 0 ; ( move ua , ul + ul ; v0 = ul ) )  
[4127] ( move ua , ul + ul ; move 0 - ua , 4 )  
[4128] ( move 0 - ul , ua * ua ; move ua , 3 )  
[4129] ( move ul , ua ; move ua + ul , 3 + 2 )  
[4130] ( move ua , ua - ul ; move 2 - ua , 2 )  
[4131] ( move ua + ul , 0 ; move ul , ua - 4 )  | ( move 4 + 3 , 0 ; move ul , ua - 4 ; v0 = 0 )  
[4132] ( move ua + ul , 2 ; move ua , 3 - ua )  | ( move ua + ul , 3 - ul ; move ua , 3 ; pen ul )  | ( move 4 - 2 , 2 ; move ua - ul , ua ; move ua , 3 )  | ( move ua , 2 ; ( move ul , ua ; move ua , 3 ; pen 3 ) )  
[4133] ( move 2 , 2 ; move ua + ul , ua * ua )  
[4134] ( move ua - ul , ua + ua ; move 3 , 2 )  | ( move ua - ul , ua * 4 ; v0 = 3 - ul ; move 3 , v0 )  
[4135] ( move ua + 2 , ua - 2 ; move ul , ul )  
[4136] ( move ul , 0 - 3 ; move ua + ul , ul )  | ( move ul , ua - 3 ; move ua + ul , ul )  
[4137] ( move 0 - ul , ua ; move ua + 4 , ul )  
[4138] ( move ul , ul ; move ua - ul , 0 - 2 )  
[4139] ( move 2 , ul ; move ua - ul , ua + 2 )  
[4140] ( move ua + 3 , ua - ul ; move ua , 2 )  
[4141] ( move ua - ul , ul ; move ua + 2 , 2 )  
[4142] ( move ul , ul ; move ua + 2 , ua - 2 )  
[4143] ( move ua + ul , 2 + ul ; move ul , 2 )  | ( move ua + ul , 3 ; move ul , ua + 2 )  | ( move ua + ul , 3 ; move ul , 2 ; pen ua )  | ( pen ul ; move ua + ul , 3 ; move ul , 2 )  | ( move ua + ul , 3 ; pen ul ; move 2 - ul , 2 )  | ( move ua , 2 + ul ; ( move ul , ua ; move ul , 2 ) )  
[4144] ( move 0 - 3 , ua ; move ul - ua , ul )  | ( move ua - ul , 2 - ul ; move 3 , ua - ul )  
[4145] ( move ul , ua * ua ; move 0 - 3 , ua )  | ( move ul , ua * ua ; move 3 , ua / 2 )  
[4146] ( move 3 , 4 ; ( pen 2 ; move 3 , 0 ) )  
[4147] ( move ua + ul , 3 + ul ; move ua , 2 )  | ( move ul , ua * 3 ; move ua + ul , 4 ; move ua , 2 )  | ( move ua + ul , ua + 4 ; move ua , 2 ; v0 = 3 / 4 )  
[4148] ( move ua + ul , 4 ; move ua , ua + 3 )  | ( move ua + ul , 4 ; move ua , 3 ; v0 = 2 )  | ( move ua + ul , 4 ; move ua , 3 ; v0 = ua - ul )  | ( move ua + ul , 4 ; ( move ua - ul , 3 ; v0 = 0 ) )  
[4149] ( move 2 , ua + 2 ; move ua , ul / ua )  
[4150] ( ( pen 3 ; move 3 , 2 ) ; move 2 , 3 )  
[4151] ( move ul , ul ; move 2 - ua , ua + 3 )  | ( move 4 , 4 ; move ul , ul / ua ; pen 3 - 2 )  
[4152] ( move 3 , ul ; move ua - ul , 0 - ul )  
[4153] ( move 3 , ul ; move ul - ua , ua + 2 )  
[4154] ( move 0 - ua , ul ; move ua , ul / 2 )  
[4155] ( move 4 , ua ; move ua + ul , ua - 2 )  
[4156] ( move ua , 4 + ul ; move ua + ul , 2 )  
[4157] ( move ua + ul , 2 ; move ul , ul - 2 )  | ( move ua + ul , 2 - ua ; move ul , ul - 2 )  | ( move ua + ul , ul + ul ; move ul , 4 + ul )  | ( move ua + ul , ul + ul ; move 0 , ul ; move ul , 4 )  
[4158] ( move 2 - ua , ua * ua ; move ul , 2 )  
[4159] ( move ua + 2 , ul ; move ul - 2 , ul )  
[4160] ( move ua + ul , ua ; move 3 , ua + 4 )  | ( move ua + ul , ua ; move 4 - ul , 4 )  | ( move ua + ul , 0 ; pen ul ; move 3 , 4 )  | ( move ua + ul , 0 ; move 3 , 4 ; v0 = 4 * 4 )  | ( move ua + ul , ua ; move 3 , 2 * 2 ; v0 = ul )  | ( pen ul ; move ul , ua ; ( move ua , ua ; move 3 , 4 ) )  | ( move ua + ul , ua ; move 2 + ul , 4 ; move 0 , ua * ua )  
[4161] ( move ua + 3 , ul ; move ua , ua + 4 )  | ( move ua + 3 , ul ; move ua , 4 - ua )  | ( move 4 + ul , ul ; move ua - 2 , 0 ; move ua , 4 )  
[4162] ( move 2 , ua ; move ua + ul , ul - 3 )  
[4163] ( move ua + ul , ul ; move 4 , 0 - ul )  
[4164] ( ( move 2 , 3 ; pen 0 ) ; move 4 , 4 )  
[4165] ( move ul , 2 + 2 ; move ul - ua , ul )  | ( move ul , 3 + ul ; move ul - ua , ul )  | ( move ul , ua + 4 ; move ul - ua , ul )  | ( move 0 , ua ; move ul , 4 ; move ul - ua , ul )  | ( v0 = 4 ; move ul , v0 ; move ul - ua , ul )  | ( move ul , 3 + ul ; v0 = ul ; move v0 - ua , ul )  
[4166] ( move ua + 3 , 2 ; move ul - ua , ul )  
[4167] ( move ul + ul , ul ; move ua , 0 - 4 )  | ( move 2 , ul ; move ua , ua - 4 ; pen ul )  | ( move 2 , ul ; move ua , 0 - 4 ; v0 = ul )  | ( move ua , ul / ua ; v0 = 3 ; move 2 , 4 )  
[4168] ( move ua - ul , 0 ; move 4 + ul , ul )  | ( move ua - ul , ua ; ( move 3 + 2 , ul ; pen 3 ) )  | ( move ua - ul , ua ; ( move ul , ul ; move 4 , ua ) )  
[4169] ( move 4 + ul , ua ; move ua + ul , 2 )  | ( move 4 + ul , ua ; move ua , ul + ul ; move ul , ua * 3 )  
[4170] ( move ua + ul , 3 ; move ua , ua + 4 )  | ( move ua - ul , 3 ; move 2 , 0 ; move ua , 4 )  | ( move ua + ul , 3 - ua ; move ua , 4 - ua ; pen 0 )  
[4171] ( move ul , 3 + 2 ; move ua + ul , ul )  
[4172] ( move 3 + 2 , ua ; move ul - ua , ul )  | ( move 4 + ul , ua ; move ul - ua , ul )  | ( move 4 + ul , 0 ; v0 = ul ; move ul - ua , v0 )  
[4173] ( move ul - 2 , 2 ; move ua + ul , ul )  | ( move ul , ua - ul ; move ua + ul , 4 )  | ( move ul , ua - ul ; move ua + ul , 4 ; pen ul )  | ( move ul - 2 , 3 - ul ; move ua + ul , ua + ul )  
[4174] ( move ua + ul , ul ; move ua + 3 , 3 )  
[4175] ( move 2 - ua , 3 ; move ua + ul , ul )  | ( move 2 - ua , 3 - ua ; move ua + ul , ul )  
[4176] ( move ua + 2 , 3 ; move ul - ua , ul )  
[4177] ( move ul , ua + 2 ; move 3 , ua * ua )  | ( move ul , 2 - ua ; move 3 , ua * ua )  
[4178] ( move 3 - ua , ul ; move ua + 2 , ul )  | ( move 3 - ua , ul ; move ua + ul , ul ; move ul , ua )  
[4179] ( move ua - ul , ua - 2 ; move 2 , ul )  
[4180] ( move ua , ua - ul ; move ul - 2 , 2 )  | ( v0 = 3 - 4 ; move ua , v0 ; move ul , v0 )  
[4181] ( move 3 , ua ; move 2 - ua , ul + ul )  | ( move 3 , 0 ; move 2 - ua , ul + ul ; pen 0 )  
[4182] ( move ul , ua ; move ua + 2 , ul - 3 )  | ( move 3 / 4 , 0 ; move ua + 2 , ul - 3 )  
[4183] ( move 2 , 2 + ul ; move ua - ul , ul )  | ( move 2 , 3 ; move 3 , ul ; move ua - 4 , 0 )  | ( move 4 / 2 , 3 ; move ua - ul , ul ; v0 = 2 )  
[4184] ( move 3 , ua * ua ; move ua + ul , 2 )  
[4185] ( move 2 , ua ; move ua + ul , 2 / ua )  | ( move ul + ul , ua ; pen ul ; move ua + ul , ul / 3 )  
[4186] ( move ua - ul , 2 ; move ua + ul , 3 )  | ( move ua - ul , ul + ul ; move ua + ul , 3 )  
[4187] ( move 0 , ul ; move ua + ul , 3 / ua )  | ( move 0 , 3 / ua ; move ua + ul , ul )  | ( move 0 , ul ; move ul , 3 / ua ; move ua , ua )  | ( move 0 , ul ; ( move ua , 3 / ua ; move ul , ua ) )  
[4188] ( move ul - 3 , ua + ul ; move ua , 2 )  | ( move ul - 3 , ul ; move ua , ul + ul )  
[4189] ( move ul - ua , ul ; move 0 - 3 , ul )  | ( move ul - ua , ul ; move ul - 4 , ul )  | ( move 3 , 3 - ul ; move 0 , 0 ; move ua - ul , 0 - ul )  
[4190] ( move ua + 2 , ua ; move ul - 3 , ul )  
[4191] ( move 4 , ua + 2 ; move ul - ua , ul )  | ( move 4 , 2 ; move ul - ua , ul ; pen ul )  
[4192] ( move ua + 3 , ul ; move ua + ul , 4 )  | ( move ua + 3 , ul ; ( move ul , 4 ; move ua , 0 ) )  
[4193] ( move ua - ul , 2 ; move 3 , ua * ua )  | ( ( move ua - ul , 2 ; v0 = ua ) ; move 3 , ua * v0 )  
[4194] ( move ul - ua , ua ; move 3 - ul , 2 )  | ( move ul - ua , 0 ; pen ul ; move 2 , 2 )  
[4195] ( move 3 + ul , ua ; move ua , ua - 4 )  | ( move 3 , ua ; v0 = 0 - 4 ; move ua , v0 )  | ( v0 = ua - 2 ; move 3 , ua ; move ua , v0 + v0 )  
[4196] ( move 2 , 3 - ul ; move ua + ul , ul )  | ( move ul + ul , 2 ; move ua + ul , ul )  | ( move 2 , ul + ul ; move ua + ul , ul )  | ( move 2 , 2 ; ( move ua , ul ; move ul , ua ) )  | ( ( move 2 , 2 ; v0 = 0 ) ; move ua + ul , ul )  | ( move 2 , ul + ul ; move ua + ul , ul ; pen 4 - ul )  
[4197] ( move ua - ul , 0 ; move ul , ul - 4 )  | ( move ua - ul , ua ; move ul / ua , 4 )  
[4198] ( move ua , ua ; move ul - ua , 2 - 4 )  
[4199] ( move ua , 4 + ul ; move ua - 2 , ul )  
[4200] ( move ua , ua - ul ; move 2 / ua , 2 )  | ( move ua , ua - ul ; move ul / ua , ul )  | ( move ul / 3 , ul - 3 ; v0 = ua ; move v0 , ul )  | ( ( move 2 / ua , 0 - 2 ; move ua , ul ) ; pen ul ; pen 3 )  
[4201] ( move 4 + ul , ul ; move ua , 2 + ul )  | ( move 3 + 2 , ul ; move ua , 3 ; v0 = ul )  | ( ( move ul , 0 ; move 4 + ul , ul ; pen ul ) ; move ua , 3 )  
[4202] ( move 4 , 2 ; move ua + ul , ul + ul )  | ( ( move 4 , 2 ; move ul , 3 - ul ) ; move ua , ua ; pen ua )  
[4203] ( move 2 - ua , 4 ; move ua + ul , ul )  
[4204] ( move 4 , 0 - ul ; move ul , ua * ua )  
[4205] ( move 4 , ua - ul ; move ua , ua - 2 )  
[4206] ( move ua + ul , 2 - 3 ; move ul , ul )  | ( move ua + ul , ua - ul ; move ul , ua + ul )  | ( move ua + ul , ua - ul ; move ul , ul ; pen 3 )  | ( move ua + ul , ua - ul ; move 0 , 0 ; move ul , ul )  | ( move ua + ul , ul - 2 ; v0 = 3 - 2 ; move ul , v0 )  
[4207] ( move ua , 4 ; move ua - 2 , ul - ua )  
[4208] ( move ua + ul , 2 ; move ua - 4 , ul )  
[4209] ( move ul - ua , 4 + 2 ; move ua , ul )  
[4210] ( move ul , 2 ; move ua + ul , 4 + ul )  
[4211] ( move ul - ua , 2 + ul ; move 3 , ul )  | ( move ul - ua , 3 ; move 3 , ul - ua )  | ( move ul - ua , 3 - ua ; move 3 , ul )  | ( move ul - ua , 3 ; move 3 , ul ; move 0 , ua + ua )  | ( ( move ul / ua , 2 ; move ul - ua , ul ) ; move 3 , ul )  
[4212] ( move 3 , ul ; move 2 - ua , ua - ul )  
[4213] ( move 2 , ul ; move ua + ul , ul - 3 )  
[4214] ( move ul - ua , ul ; move 0 - ul , 4 )  | ( move ul - ua , ul ; move 4 / ua , ul )  | ( move 0 , 0 ; move ul - ua , ul ; move 0 - ul , 3 + ul )  
[4215] ( move ua + 2 , 4 - ua ; move ul , ul )  | ( move 4 , 3 + ul ; move 4 , 0 ; move ul , ul )  | ( move 4 * 2 , 4 ; v0 = ul ; move v0 , v0 )  | ( move 4 + 4 , 2 + 2 ; move ul , ul ; v0 = ul )  
[4216] ( move ua , 3 / ua ; move ul , ua + 2 )  | ( move ua , 3 / ua ; v0 = ul ; move ul , v0 + v0 )  
[4217] ( move ua - 2 , ul - ua ; move 3 , ul )  
[4218] ( move ul - 2 , ua ; move ua , ua - 4 )  
[4219] ( move 3 , ua - ul ; move ua - 2 , ul )  
[4220] ( move ua , ua - ul ; move ul , 4 + 2 )  
[4221] ( move ua , ul / ua ; move ua , 3 + 2 )  | ( move ua , ul / ua ; move ua , 3 + 2 ; pen ul - 4 )  
[4222] ( move ua , 2 / ua ; move ua + ul , 3 )  
[4223] ( move 3 , ua - 4 ; move ua , ua + ul )  
[4224] ( move ul , 2 - 3 ; move ua , ua - ul )  | ( move ul , ua - ul ; move ua , ua - ul ; pen 4 )  
[4225] ( move ua + ul , 2 / ua ; move ua , 3 )  
[4226] ( move ul , 3 ; move ua + 3 , ua - ul )  
[4227] ( move ua + 2 , 2 ; move ul , ul / ua )  
[4228] ( ( pen 4 ; move 4 , 0 ) ; move 3 , 3 )  
[4229] ( move ua - ul , ul ; move ua , 3 + 3 )  | ( move ua - ul , ul ; move ua , 3 * 2 )  
[4230] ( move ua - ul , 0 ; move ul , ul / 2 )  
[4231] ( move 0 - ua , ul ; move 3 , ul / ua )  | ( move 0 - ua , ul ; move 4 , ul / ua )  
[4232] ( move ul , 3 - ua ; move ul - ua , 2 )  | ( v0 = ul - ua ; move ul , 3 * v0 ; move v0 , 2 )  
[4233] ( move ua , 4 + ul ; move 2 , ua - ul )  
[4234] ( move ua + ul , 3 ; move ul , ua + 4 )  | ( move ua + ul , 3 ; move ul , 4 ; v0 = 0 )  
[4235] ( move ua + 2 , ul ; move ul + ul , 4 )  | ( move ua + 2 , ul ; move ua / 3 , ua + 4 )  | ( move ua + 2 , ul ; move 2 - ul , 4 ; move ul , 0 - ua )  
[4236] ( move ul - ua , ua ; move ua / 2 , 2 )  | ( move ul - ua , ua ; v0 = 2 ; move v0 + ul , v0 )  
[4237] ( move ua , ul + ul ; move ua - 4 , 2 )  
[4238] ( move ua - ul , ua ; move ua - 2 , 4 )  
[4239] ( move ul , 4 + ul ; move ua + ul , 2 )  | ( move ul , 4 + ul ; move 4 + 3 , ul + ul ; v0 = 4 )  
[4240] ( move 3 , ul + ul ; move ul , ua - 2 )  | ( move ul , 3 ; move 3 , ua / 3 ; v0 = ul )  | ( move 3 , 2 ; move ul - 2 , ul ; pen 2 - ul )  | ( move 3 , 2 ; v0 = 2 - 4 ; move ul , v0 )  
[4241] ( move ua + ul , ul - 4 ; move ua , 2 )  
[4242] ( move 3 - ua , ua ; move ua , ul - 3 )  
[4243] ( move ua , ul / 2 ; move ua , 3 + ul )  
[4244] ( move 2 , 3 / ua ; move ua + ul , ul )  
[4245] ( move ul - ua , ul ; move 3 , ul - 2 )  
[4246] ( move 2 + ul , ul ; move ua , ua / 3 )  | ( move 3 , ul ; ( move ua , ua / 3 ; pen 4 ) )  | ( move 2 + ul , ul ; move ua , ua / 3 ; v0 = ul )  
[4247] ( move ua , 3 ; move 4 + ul , ua - ul )  
[4248] ( move ua , ua + 4 ; move ua , ul - 4 )  
[4249] ( move 4 - ua , ua ; move ua + ul , 4 )  
[4250] ( move ua , 2 ; move 3 , 3 ; move 2 , 0 )  | ( pen ul ; ( move ua , 2 ; move 3 + 2 , 3 ) )  | ( move ua , 2 ; move ua - ul , 3 ; v0 = ua + ul )  
[4251] ( move ua , 3 ; move ua - ul , 3 - ul )  | ( move ua , 3 ; move ua - ul , 2 ; pen ul )  
[4252] ( move ul - ua , 0 ; move ul , 4 / ua )  
[4253] ( move ua - ul , 3 - ua ; move ua , 4 )  
[4254] ( move ua , ua / 2 ; move ul , 3 + ul )  | ( move ul , 4 ; v0 = 4 ; move ua , ua - v0 )  | ( v0 = 2 ; move ua , ua / v0 ; move ul , v0 + v0 )  
[4255] ( move ul - ua , 4 ; move 2 , ua * ua )  
[4256] ( move 3 - ua , ua - 4 ; move ua , ul )  
[4257] ( move 4 , 2 ; move ua - ul , ua - ul )  
[4258] ( move ua , ua ; move 3 - ua , ul / 2 )  | ( move ua , ua ; move ul - 4 , 3 / ua )  
[4259] ( move ul - 4 , ua ; move ua , 3 + ul )  | ( v0 = 4 ; move ul - v0 , 0 ; move ua , v0 )  
[4260] ( move ul + ul , ua / 3 ; move ua , 2 )  
[4261] ( move 4 , ua + 3 ; move ul , ua * ua )  | ( move 4 , 3 ; move 0 , 4 + 3 ; move ul , ul )  | ( v0 = 4 ; move v0 , 3 ; move ul , v0 + v0 )  
[4262] ( move ua - 4 , ua ; move ua + 4 , ul )  | ( move ua - 4 , ua ; ( move 4 , ul ; move ua , ua ) )  
[4263] ( move 3 , ua ; move ul - ua , 4 + ul )  | ( move 3 , ua ; move 0 , 4 ; move ul - ua , ul )  
[4264] ( move 4 , 3 ; move ul - ua , ua + ul )  
[4265] ( move ua - 3 , ua ; move ul - 3 , ul )  
[4266] ( move ua , 3 ; move ul + ul , 2 / ua )  
[4267] ( move 3 - ul , ua * ua ; move 2 , ul )  
[4268] ( move ul - ua , ul ; move 2 , 4 + ul )  | ( move ul - ua , ul ; move ua - 4 , 4 + ul )  
[4269] ( move ua + ul , ul ; move 2 , ul / 2 )  
[4270] ( move ua , ua + ul ; move 4 - ua , 4 )  | ( move ua , ul ; v0 = 4 - ua ; move v0 , v0 )  
[4271] ( move ua , ul - ua ; move 3 , 2 / ua )  
[4272] ( move ua , 3 + ul ; move 4 , ua * ua )  
[4273] ( move ul , 4 ; move ul - ua , ua - 2 )  | ( move ul - 2 , ul ; move ul - ua , ul )  | ( ( move ul - 2 , ul ; move ul - ua , ul ) ; pen ul )  
[4274] ( move 2 + ul , ul ; move ul - ua , 4 )  
[4275] ( move ua , 3 ; move ul - ua , 2 / ua )  
[4276] ( move ua , 2 ; move ua - ul , ua / 3 )  
[4277] ( move ua , 3 / ua ; move ua - 2 , ul )  
[4278] ( move 2 + ul , ua ; move 3 , ul / ua )  
[4279] ( move ua , ua * ua ; move ul - 3 , 3 )  
[4280] ( move 2 , 2 / ua ; move ua - ul , ul )  
[4281] ( move 4 , ua * ua ; move 2 , ul - ua )  | ( move ul , ua * ua ; move 2 + ul , ua ; move 2 , ul )  
[4282] ( move ua , ua * ua ; move ua , 4 + 4 )  
[4283] ( move ul - ua , ul ; move 2 , 3 - ul )  | ( move ul - ua , ul ; move 2 , 2 ; move ul , ua - 3 )  
[4284] ( move 4 + ul , ua ; move 3 , ua - ul )  | ( move ul , 0 ; ( move 4 , 0 ; move 3 , 0 - ul ) )  
[4285] ( move ul - ua , 2 ; move 4 , ua * ua )  
[4286] ( move ua , 4 + ul ; move ua + ul , 4 )  
[4287] ( move ul , 2 ; move 2 + ul , ul / ua )  | ( move ul , ul + ul ; move 3 , ul / ua )  | ( move 0 , 2 ; move ul , 0 ; move 3 , ul / ua )  | ( move ul / ua , ua ; move 4 , ul - 2 ; v0 = 3 )  
[4288] ( move ul , ua - 4 ; move 2 + ul , ul )  | ( move ul , ua - 4 ; move 3 , ul ; pen ul )  | ( move ul , ua - 4 ; move 3 , ul ; v0 = ul - 2 )  
[4289] ( move 0 , ul / 4 ; move ua + ul , ul )  
[4290] ( move ul + ul , ul ; move 4 + 2 , ul )  | ( ( move 2 , ul ; move 3 , ul ) ; move 3 , 0 )  | ( move ul + ul , ul ; move 4 , ul ; move 2 , 0 )  | ( ( move ul + ul , ul ; move 4 , ul ) ; move 2 , ua )  
[4291] ( move ul - ua , 3 ; move ul , ul - 2 )  | ( move ul - ua , 3 ; move ul , ua - ul )  | ( move 3 - 4 , 4 / 2 ; move ua - ul , ul )  
[4292] ( move ua , ua / 4 ; move ua , 2 - ua )  
[4293] ( move ua , ul / ua ; move 3 + 2 , ul )  
[4294] ( move ua + ul , ua / 3 ; move 2 , ul )  
[4295] ( move ul , ua - 3 ; move 3 , ul + ul )  | ( move ul - 4 , ua - ul ; move ul , ul )  
[4296] ( move 4 - ua , ul + ul ; move ua , 3 )  | ( pen ul ; move 0 - 2 , ua + 2 ; move ua , 3 )  
[4297] ( move ua , 4 + ul ; move ua - 3 , ul )  | ( move ua , 4 + ul ; move ua - 3 , ul ; pen ua )  
[4298] ( move ua , 3 + ul ; move ul - 3 , ul )  
[4299] ( move 4 , ua - ul ; move 2 , ua - ul )  
[4300] ( move 4 , ul ; move ua - ul , ua - 2 )  
[4301] ( move ul - ua , ul ; move 4 + ul , 2 )  | ( move ul - ua , ua + ul ; move 4 + ul , 2 )  | ( move ul - ua , ul ; move 4 + ul , 2 ; pen ul )  | ( move ul - ua , ul ; move ul , ul + ul ; move 4 , 0 )  
[4302] ( move ua + ul , 3 / ua ; move 2 , ul )  
[4303] ( move ua , 2 / 3 ; move ua , ul + ul )  
[4304] ( move 4 + ul , ul ; move ul + ul , 2 )  | ( move 4 + ul , ul ; move 2 , 2 - ua ; v0 = 4 + ul )  | ( move 4 + ul , ul ; v0 = ul + ul ; move v0 , v0 )  
[4305] ( move ul , ua + ul ; move ua , 4 * 2 )  | ( move ul , ul ; move ua , 4 * 2 ; v0 = ua )  | ( move 3 - 2 , ul - ua ; move ua , 4 * 2 ; v0 = 2 )  
[4306] ( move ul , ul + ul ; move 4 + ul , 2 )  | ( move ul , 2 ; move 4 + ul , 2 ; v0 = 3 )  | ( move ul , ua + 2 ; move ul , ul + ul ; move 4 , 0 )  | ( move ul , 3 - ul ; move 4 + ul , ul + ul ; v0 = ua )  
[4307] ( move ul + ul , 3 ; move 4 - ua , ua )  | ( move 4 - ua , 3 ; move ul , ua ; move ul , ua )  
[4308] ( move ua , ul - 3 ; move ua , 4 + ul )  
[4309] ( move ua , 3 ; move ul + ul , ua - 4 )  
[4310] ( move ul , ua / 2 ; move ul - ua , 2 )  | ( move ul - ua , ua + 2 ; move ul - 2 , ul )  | ( move ul - 2 , ua ; ( move ua - ul , 2 ; v0 = 0 ) )  | ( move 0 - ul , ua ; move ua - ul , 2 ; move 0 , ul + ul )  
[4311] ( move 4 + ul , 3 ; move ua , ua - ul )  
[4312] ( move ul - ua , 3 ; move ua , 2 / ua )  
[4313] ( move 2 , ul + ul ; move ua , ua / 4 )  
[4314] ( move 2 , 4 ; move 3 , 0 ; move ua , 2 )  | ( move 4 , 4 ; move ul , ua ; move ua , 2 )  
[4315] ( move 4 - ua , ul ; move ua , ul - 3 )  
[4316] ( move ua - ul , ul ; move 4 , ul - 2 )  
[4317] ( move ul - ua , ul + ul ; move 4 , 3 )  
[4318] ( move ul , ua - 4 ; move 3 , ua - ul )  
[4319] ( move ua , ua / 4 ; move 2 + ul , ul )  | ( move ua , ua / 4 ; move 4 - ul , ul ; v0 = ua )  
[4320] ( move ua , ua / 3 ; move 4 , ua + ul )  
[4321] ( move ua , ua - 4 ; move ua - 4 , ul )  
[4322] ( move ul + ul , 4 + ul ; move 3 , ul )  | ( move 2 , 4 + ul ; move 3 , ul - ua ; pen 0 )  | ( move 2 , 4 + ul ; move 4 - ul , ul ; v0 = 3 )  
[4323] ( move ul , ua ; move 4 + ul , ul - 3 )  | ( move ul , ua ; move 4 + ul , 0 - 2 ; pen ua + 4 )  
[4324] ( move ua + 2 , ul ; move ul / 3 , ul )  | ( move ua + 2 , ul ; move 3 - 2 , ul / ua )  | ( pen ul ; move ul / ua , 0 ; move ua + 2 , ul - ua )  
[4325] ( move ul - 4 , ua - ul ; move 2 , ul )  
[4326] ( move 4 / ua , ua ; move ua + 3 , ul )  
[4327] ( move ul - 2 , ul ; move ua , ul / 2 )  | ( move 0 , ul ; ( move 0 - ul , ua ; move ua , ul / 2 ) )  
[4328] ( move ul - ua , ua ; move 4 + ul , 4 )  
[4329] ( move ua , ua / 3 ; move ua + ul , 4 )  
[4330] ( move 4 , ua * ua ; move ua , 4 + ul )  
[4331] ( move 3 , ul ; move ua - ul , 4 + ul )  | ( move 3 , ul ; ( move 0 , 3 ; move ua - ul , 2 ) )  | ( move 3 , ul ; move ua - ul , 4 + ul ; pen ua + ul )  
[4332] ( move ua - ul , 4 + ul ; move 3 , ul )  
[4333] ( move ul , 3 / ua ; move ul - ua , 2 )  
[4334] ( move ul / 2 , ul ; move ua - ul , 2 )  
[4335] ( move ua , ul / ua ; move 3 , ul - 2 )  
[4336] ( move 2 , 0 ; move 4 , 2 ; move 3 , ua )  | ( move 2 , ua ; ( move 3 , 2 ; move 4 , ua ) )  
[4337] ( move ua - ul , 4 ; move ul - ua , 3 )  
[4338] ( move ua , ul / 4 ; move ua + ul , 2 )  
[4339] ( move ua - ul , 3 ; move ul , ul - 3 )  | ( ( move 0 - ul , ul ; pen ul ) ; move ul - ua , 2 )  | ( ( move 0 - ul , ul ; move ul - ua , 2 ) ; pen ua + ul )  
[4340] ( move ul , ul - 4 ; move 3 , ua + ul )  | ( ( move ul , ua - 3 ; move 3 , ul ) ; pen 2 + ul )  
[4341] ( move 4 + ul , ul ; move ul - ua , 3 )  
[4342] ( pen 4 ; move 4 , 3 / 4 ; move 3 , 3 )  
[4343] ( move 3 , 4 ; move ul + ul , ua * ua )  
[4344] ( move ua - ul , 3 ; move ua - 4 , ul )  
[4345] ( move ul - ua , 2 ; move ul , ul / 2 )  
[4346] ( move ua - ul , ul ; move 2 , 3 / ua )  
[4347] ( move ua + 3 , ul ; move ul , ul / 2 )  
[4348] ( move ul , 4 + ul ; move ua , ua - 4 )  
[4349] ( move ul - 4 , ul ; move 2 , ua * ua )  
[4350] ( move 4 - ua , 4 ; move ua + ul , ul )  
[4351] ( move ul - 4 , ua ; move 3 - ua , ul )  | ( move 3 , ul ; move 2 + ul , 2 - 3 ; pen ul - 4 )  | ( move 3 , ul ; move 3 - ul , ua - ul ; move ul , ua )  | ( move 2 + ul , ul ; v0 = 0 - ul ; move 3 , v0 )  
[4352] ( move ua , ua * ua ; move ul , 4 * 2 )  
[4353] ( move 3 , ul ; move ua + ul , ul - 4 )  
[4354] ( move ul , ul ; move ul - ua , 4 + 3 )  
[4355] ( move ua , ua - ul ; move 3 , 3 / ua )  
[4356] ( move ul , 3 ; move ua - ul , 4 + ul )  | ( move ul - 2 , 0 ; move 4 + ul , 4 * 2 )  
[4357] ( move ul - ua , ul + ul ; move 3 , 4 )  | ( move ul - ua , 3 - ul ; move 3 , 4 - ua )  
[4358] ( move ul , ua ; move 3 + ul , 3 / ua )  
[4359] ( move 2 + ul , ul ; move ua , ua / 4 )  
[4360] ( move ua + ul , ul ; move 3 , ua / 3 )  
[4361] ( move 4 , ul ; move ua + ul , ua - 4 )  
[4362] ( move ua - ul , 4 - ua ; move ua , 4 )  | ( move 0 , 4 ; move ua - ul , 0 ; move ua , 4 )  
[4363] ( move 2 - ua , ul ; move ua , 4 / ua )  
[4364] ( move ul , ua / 3 ; move ua , 3 + ul )  
[4365] ( move ul , ua + 4 ; move 4 , ua * ua )  | ( move ul , ua + 4 ; move 2 + 2 , ua * ua ; pen 4 )  
[4366] ( move ua , 2 ; move ul + ul , ua / 4 )  
[4367] ( move ua + ul , 2 ; move ul / 3 , ul )  
[4368] ( move ul , 4 + ul ; move ua , 4 + ul )  
[4369] ( move ul - 4 , ua * ua ; move ul , 2 )  
[4370] ( move ua + ul , ul ; move ul , 4 * 2 )  
[4371] ( move ua + ul , ul / 3 ; move 2 , ul )  
[4372] ( move ul , 4 + ul ; move 4 , ua + ul )  | ( move ul , 4 + ul ; move 4 , ua + ul ; v0 = ul )  
[4373] ( move 2 , ul / ua ; move ua , ul - 3 )  
[4374] ( move 3 - ua , ul - ua ; move 4 , ul )  
[4375] ( move ua , 4 ; move ul + ul , ul - 3 )  
[4376] ( move 3 , ul ; move 2 + ul , ul / ua )  | ( move 3 , ua + ul ; move 3 , ul / ua ; pen ua )  | ( move 2 + ul , ul ; pen ul ; move 3 , ul / ua )  | ( move 3 , ul ; v0 = ul - 4 ; move v0 , v0 )  | ( move 3 , ul ; move 2 + ul , ul / ua ; pen ua - 4 )  
[4377] ( move ua , 4 + 4 ; move ul , ul + ul )  
[4378] ( move 4 , ua - ul ; move ua + ul , 4 )  
[4379] ( move ua , 2 ; move ua - ul , ua / 4 )  
[4380] ( move ul , ua - ul ; move 3 , 4 + ul )  
[4381] ( move 3 , ul + ul ; move 4 , ua * ua )  
[4382] ( move 2 / 4 , ua ; move ua , ua - ul )  | ( move ul / 2 , ua ; move ua , 0 - ul ; pen ul )  
[4383] ( move ul , 4 - ua ; move ua - 3 , ul )  | ( move ul , 4 ; move ua - 3 , ul ; pen 2 )  
[4384] ( move ua , 4 + 4 ; move ul - ua , ul )  
[4385] ( move ul / 2 , 3 ; move ua + ul , ul )  
[4386] ( move ua , ua / 4 ; move ua + ul , 3 )  
[4387] ( move ul - 4 , ul - 2 ; move ua , ul )  
[4388] ( move ua , 2 ; move ua / 3 , ul / ua )  | ( move ua , ul + ul ; move 3 - ul , ul / ua )  | ( v0 = ua ; move v0 , 2 ; move 2 , ul / v0 )  | ( move ua + ul , 2 ; move ul , ul / 4 ; v0 = ua )  
[4389] ( move ul / 3 , ua ; move ua + 4 , ul )  | ( ( move 2 / ua , ua ; move ua + 4 , ul ; pen 2 ) ; pen ul )  
[4390] ( move 4 , 4 + ul ; move ul + ul , ul )  
[4391] ( move 3 , ua / 4 ; move ua , ua - ul )  
[4392] ( move 3 - ul , ul ; move ua - 4 , ul )  | ( ( move 2 , ul ; move ua - 4 , ul ) ; v0 = 0 )  | ( move 0 , ul ; ( move 2 , ua ; move ua - 4 , ul ) )  | ( move 2 , ul ; ( move ua - 4 , ul ; pen 0 ) ; v0 = 3 )  
[4393] ( move ua , 4 + ul ; move 3 , ul / ua )  
[4394] ( move ul , ua / 4 ; move ua + 3 , ul )  | ( move ul , ua / 4 ; move 3 , ul ; move ua , ua )  | ( move ul , ua / 4 ; move ua , ua + ul ; move 4 - ul , ua )  
[4395] ( move ul - ua , ua ; move ul , 4 * 3 )  
[4396] ( move ul , ul + ul ; move ua , 2 / 4 )  
[4397] ( move ul , ua / 3 ; move ua , 2 / ua )  
[4398] ( move 4 - ul , ua ; move ul , ua - 4 )  | ( move 3 , ua ; move ul , 0 - 4 ; v0 = ul )  
[4399] ( move ua + ul , ul ; move ua , 4 * 4 )  
[4400] ( move ua / 4 , ua ; move ua + 4 , ul )  
[4401] ( move ul , 4 * 3 ; move ua + ul , ul )  
[4402] ( move ul / ua , ua ; move ua , 3 / 2 )  
[4403] ( move ul - 4 , 4 ; move ua + ul , ul )  
[4404] ( move ua + ul , 3 / ua ; move ul , 4 )  | ( move ul , 3 / ua ; ( move ua , ua ; move ul - 2 , ul ) )  
[4405] ( move 3 / ua , ul - 3 ; move ua , ul )  
[4406] ( move ua - ul , ul ; move 4 , 4 + ul )  
[4407] ( move ul , ua / 3 ; move ua , ul - 3 )  
[4408] ( move ul - 4 , ul ; move 3 , ul + ul )  | ( move ul - 4 , ua + ul ; move ua / 2 , ul + ul )  
[4409] ( move 4 , ul - 4 ; move ua , ua * ua )  
[4410] ( move 3 , ua + ul ; move ua / 4 , ul )  
[4411] ( move ul , 4 + ul ; move 4 + ul , ul )  | ( move 0 , 4 ; move ul , ul ; move 4 + ul , ul )  | ( move 0 , 4 ; move ul , ul ; move 4 + ul , ul - ua )  
[4412] ( move ua - ul , ua ; move ul / 2 , 4 )  | ( move 4 , 0 ; move ul , ua * 4 ; move ul / 3 , 4 )  
[4413] ( move 4 , ua - ul ; move ul , 4 + ul )  
[4414] ( move ul / 3 , 3 ; move ua , ul - ua )  | ( move ul / 3 , 3 ; move ua , ul ; pen 4 )  | ( move ul / 3 , 2 + ul ; move ua , ua + ul )  
[4415] ( move 4 , ua - ul ; move 4 - ua , ul )  
[4416] ( move ul - 4 , 3 ; move ul + ul , ul )  
[4417] ( move 4 , ul + ul ; move 4 - ua , ul )  
[4418] ( move ua , 4 + ul ; move 3 / ua , ul )  | ( move 0 , 4 ; move ua , ul ; move 3 / ua , ul )  | ( move 4 , 4 + ul ; move 2 , ua ; move 2 / 4 , ul )  
[4419] ( move ul , ul + ul ; move 4 , 4 + ul )  | ( ( move ul , 2 ; move 4 , 3 + 2 ) ; move ul , 4 )  
[4420] ( move 4 + ul , ul ; move ua - 4 , ul )  
[4421] ( move 3 , 4 / ua ; move ua , ul - ua )  
[4422] ( move 3 , ul / ua ; move ul - ua , 3 )  
[4423] ( move 4 , ua - ul ; move 4 + ul , ul )  | ( move 4 , ua - ul ; move 3 , ul ; move 2 , 0 )  
[4424] ( move ul , ul ; move ua - ul , 4 + 4 )  
[4425] ( move ua + ul , ul / 4 ; move 2 , ul )  
[4426] ( move ul , ul / 2 ; move 3 , ua * ua )  
[4427] ( move ua , ua ; move ul - 3 , ua / 4 )  
[4428] ( move ul - ua , ul ; move ul - 3 , 4 )  
[4429] ( move ul - 4 , ua + ul ; move 4 , ul )  | ( move 0 - 3 , ua + ul ; move 3 + ul , ul )  | ( ( move 0 - 3 , ul ; move 4 , ul ) ; v0 = ua + 4 )  
[4430] ( move ul - 3 , ua ; move ua , 4 / ua )  
[4431] ( move ul , ul / 4 ; move ua + 2 , ul )  | ( move ul , ul / 4 ; move 4 * 2 , ul - ua )  
[4432] ( move 3 , 3 ; move ul - ua , ul / ua )  
[4433] ( move 4 + ul , ul ; move ua , ul - 4 )  
[4434] ( move ua / 4 , ul ; move ua , 4 + ul )  
[4435] ( move 4 , ul + ul ; move ua , 4 / ua )  
[4436] ( move ul / 2 , ul ; move ua , 3 / ua )  
[4437] ( move 4 / ua , ua ; move ul - ua , 4 )  
[4438] ( move ua + ul , 4 ; move 4 , ul / ua )  
[4439] ( move ua , ul ; move ua / 4 , 4 + ul )  
[4440] ( move 3 , 3 ; move 4 , ul ; move 2 , 0 )  | ( move 2 + ul , 3 ; move 4 + 2 , ul ; v0 = 4 )  
[4441] ( move ul - 4 , ul / ua ; move 2 , ul )  
[4442] ( move ul + ul , ul / ua ; move 3 , 4 )  
[4443] ( move ua - ul , ul ; move 4 , ul - 4 )  
[4444] ( move 4 , ul / 2 ; move ul , ua - ul )  
[4445] ( move ul , ua ; move ua - ul , 4 * 4 )  
[4446] ( move ul / 4 , 3 ; move ua , ua - ul )  
[4447] ( move ul - 4 , ul ; move 4 , ul + ul )  
[4448] ( move 2 , ul / ua ; move ul - 4 , ul )  
[4449] ( move 4 , ua ; move ua / 4 , ua - ul )  
[4450] ( move 4 + ul , ua ; move 4 / ua , ul )  
[4451] ( move ul + ul , ua ; move 4 , 4 / ua )  
[4452] ( move ul / 3 , ul ; move ua , ul - 3 )  | ( move 4 - 3 , 2 ; move 4 + ul , ul / ua )  
[4453] ( move 4 + ul , ua ; move ul , 4 / ua )  | ( move 4 + ul , ua * 2 ; move ul , 4 / ua ; move 0 , ul )  
[4454] ( move ul - ua , 3 / ua ; move 4 , ul )  
[4455] ( move 4 , ua - ul ; move ul - 4 , ul )  
[4456] ( move ua / 4 , ul ; move 3 + ul , ul )  | ( v0 = 3 / 2 ; move v0 , ul ; move 4 , ul )  
[4457] ( move ul , ua - ul ; move ua , 4 / 3 )  
[4458] ( move 2 , ua ; move 2 , 2 ; move 4 , 3 )  
[4459] ( move 4 , 0 ; move ua , 2 ; move 4 , 3 )  
[4460] ( move ul + ul , ul ; move 4 , ul / 2 )  | ( move 2 , ua + ul ; move 4 , ul / 2 ; pen 4 )  | ( move 2 , ul ; ( move 4 , 3 / ua ; v0 = ua ) )  
[4461] ( move ul , 3 - ul ; move ua , ul / 3 )  
[4462] ( move ua - ul , ua * 4 ; move 4 , ul )  | ( move ua - ul , ua ; pen ul ; move 4 , ul )  | ( move ua - ul , 0 ; move 4 , ul ; move 0 , 0 )  | ( move ua - ul , ua ; v0 = ua + ul ; move 4 , v0 )  
[4463] ( move ua / 4 , 4 ; move ua + ul , ul )  
[4464] ( move ua , ua - ul ; move ul , 3 / 4 )  
[4465] ( move ul , 3 ; move 4 + ul , ul / ua )  
[4466] ( move ul , 3 / ua ; move ua , ul / 2 )  
[4467] ( move ua - ul , ul / ua ; move 4 , 3 )  | ( move 4 , ua ; v0 = ul ; move ua - v0 , v0 - 4 )  
[4468] ( move 2 , 2 ; move 0 , ul ; move 4 , 4 )  | ( move 3 - ul , ul + ul ; move 4 , 3 + 2 )  | ( move 2 , 2 ; v0 = 3 + ul ; move v0 , v0 + ul )  
[4469] ( move 4 + ul , ul / 3 ; move ua , ul )  
[4470] ( move ua - ul , ua / 3 ; move ul , 4 )  
[4471] ( move ul / 3 , 3 ; move ua - ul , ul )  
[4472] ( move ua , ul / 3 ; move ul , 4 + ul )  
[4473] ( move ul / 2 , ul / 2 ; move ua , ul )  
[4474] ( move ua , 4 / ua ; move 4 , ul - ua )  | ( pen 3 / 2 ; move ua , 4 / ua ; move 4 , ul )  | ( v0 = ul ; move ua , 4 / ua ; move 4 , v0 )  
[4475] ( move ua - 4 , ul ; move ul - 4 , ul )  
[4476] ( move 4 , ua / 4 ; move ua + ul , ul )  
[4477] ( move ul / ua , ua ; move ua , 3 / 4 )  | ( move ul , 4 ; ( move 0 , ua ; move ul - ua , 3 ) )  
[4478] ( move 3 / 4 , ul ; move ul - ua , ul )  
[4479] ( move ua , ul / 4 ; move ul , ua - 4 )  
[4480] ( move ul , ul - 3 ; move 4 , ul / ua )  
[4481] ( move ua , ul / 2 ; move ul , ua / 4 )  
[4482] ( move ul , ul ; move ua - 3 , ul / 4 )  
[4483] ( move ul - ua , ul ; move 4 / ua , 4 )  | ( move ul - ua , ul ; move ul , 4 * 4 ; pen 2 )  
[4484] ( move 3 , 0 ; move ul , 4 ; move 4 , 2 )  
[4485] ( move ua , 2 / 4 ; move ul , ul / ua )  
[4486] ( move 4 , 2 / ua ; move ul , ul / ua )  | ( move 4 , 2 / ua ; move 2 / 3 , ul / 4 )  
[4487] ( move 4 , ul ; move 4 - ua , ul / ua )  | ( move 2 + ul , ul ; move ul , ua ; move 3 , ua - 3 )  
[4488] ( move ua / 4 , ul ; move ua , ul / 2 )  
[4489] ( move 4 , ua - ul ; move ul , ul / 3 )  
[4490] ( move ul , 4 / ua ; move 4 , ul + ul )  | ( move ul , 4 / ua ; move 4 , ul + ul ; pen ua )  
[4491] ( move ul , ul / 3 ; move 4 , ua - ul )  
[4492] ( move ul , ul ; move ua - ul , 3 / 4 )  
[4493] ( move 3 , ul / ua ; move ul , 4 / ua )  
[4494] ( move ul , ul / ua ; move ua , 3 / 4 )  
[4495] ( move 4 , ul - 4 ; move ul , ul / ua )  | ( move 4 , ua - 3 ; ( pen 0 ; pen 2 ; move ul , ul / ua ) )  
[4496] ( move ul / ua , ul ; move 4 , ua / 3 )  
[4497] ( move 4 - ul , ul / ua ; move 4 , ul )  | ( pen ul ; move 3 , ul / ua ; move 4 , ul )  
[4498] ( move ua , ul / 4 ; move 4 - ul , ul )  | ( move ua , ul / 4 ; v0 = ua * 4 ; move 3 , ul )  
[4499] ( move ua , ul / 3 ; move ul / 3 , ul )  | ( v0 = 2 / ua ; ( move ua , v0 ; move v0 , 2 ) )  
[4500] ( move ua / 4 , ua ; move ua , ul / 4 )  
[4501] ( move 3 , ul ; move 4 , 0 ; move 3 , 4 )  | ( move 4 , ua + ul ; move 3 , ua ; move 3 , 4 )  
[4502] ( move ul , ua / 4 ; move ul - 4 , ul )  
[4503] ( move 2 , 4 ; move 3 , 2 ; move 4 , ul )  
[4504] ( move 0 , 2 ; pen 0 ; move ua + 2 , 3 )  | ( move 0 , ul ; ( pen 4 - ua ; move ua , 4 ) ; move 2 , ua )  
[4505] ( move 3 , 3 ; move ul , 2 ; move 4 , 3 )  
[4506] ( move ua , 3 ; move 3 , 3 ; move 4 , 3 )  
[4507] ( move 2 , ua ; move 3 , 4 ; move 3 , 4 )  
[4508] ( move 4 , 3 ; move ul , 4 ; move 2 , 3 )  
[4509] ( move ul , ul / 4 ; move ua , ul / 4 )  
[4510] ( move 2 , 2 ; move ul , 4 ; move 4 , 4 )  
[4511] ( move ul - 2 , 0 ; pen 0 ; move 4 , 0 )  | ( move ul , 0 ; ( pen 0 ; move 3 , ua ) )  
[4512] ( move 2 / ua , 0 ; pen 0 ; move 4 , 0 )  | ( move 2 / 4 , ua ; pen 0 ; move 4 , ua * 4 )  
[4513] ( move 3 , 4 ; move 4 , 2 ; move ul , 4 )  
[4514] ( move ua , 0 ; pen 0 ; move 4 / 2 , 0 )  | ( move ua , 0 - ua ; pen 0 - ul ; move 2 , 0 )  | ( move ua , ua + ua ; ( pen ul - ua ; move 2 , ua ) )  
[4515] ( move 3 , ul ; move 4 , 4 ; move 2 , 4 )  
[4516] ( pen ua - ul ; move ua + 3 , 3 + ul )  | ( pen ua ; move ul , ua * 3 ; move 3 * 3 , 4 )  
[4517] ( move 4 , ul ; move 2 , 4 ; move 4 , 4 )  
[4518] ( pen 3 ; move 0 - ua , 0 ; move 4 , 2 )  
[4519] ( pen 3 - ul ; move ua + ul , ua - 3 )  | ( pen 2 ; move 2 , ul - 4 ; move ua , 0 )  
[4520] ( move 4 , 0 - 3 ; pen 0 ; move ul , 2 )  
[4521] ( move 4 , 3 ; pen ua ; move 0 , 3 + 2 )  | ( ( move 4 , 3 ; pen ul ) ; pen ua ; move 0 , 4 + 4 )  | ( move 4 , 3 ; ( move 0 , ua ; pen ua ; move 0 , ul ) )  | ( ( move 4 , 3 ; pen ua ) ; v0 = 0 ; move v0 , v0 )  
[4522] ( pen 2 ; move 3 , 2 ; move 0 - 3 , ul )  
[4523] ( pen 2 ; move 0 , 2 ; move 4 + ul , 3 )  | ( move 0 , ul ; pen 2 ; move ul - ua , 4 )  | ( pen 2 ; v0 = 4 + ul ; move v0 , v0 )  
[4524] ( move 4 + 3 , 0 ; pen 4 ; move 0 , ul )  | ( move ua + ul , ua * 3 ; pen 4 ; move 0 , ul )  | ( move ua + ul , ua * 2 ; pen 2 + ul ; move 4 / ua , ua )  
[4525] ( move 4 , ul - 3 ; pen 4 ; move 0 , 0 )  | ( ( move 4 , ul - 3 ; pen 4 ) ; move 0 , 0 )  
[4526] ( pen 2 ; move ul , 0 ; move 4 , 4 + 2 )  
[4527] ( move 3 , 4 + 3 ; pen 0 ; move 2 , ul )  
[4528] ( pen ua ; move 3 , 4 ; move 2 , 3 + 2 )  
[4529] ( move 2 - 3 , ul ; pen 0 ; move 3 , 4 )  
[4530] ( move 0 - 3 , 4 ; pen 2 ; move ul , 3 )  
[4531] ( move 2 , ul ; pen 0 ; move 2 , 4 * 3 )  
[4532] ( move 4 , 4 ; pen ua + 3 ; move 0 , 3 )  | ( move ua - 2 , 4 ; pen ua ; move 0 , 0 )  
[4533] ( move 4 , ul ; pen 4 ; move 2 , 0 - 2 )  
[4534] ( move 0 - 2 , ul ; pen 3 ; move 4 , 3 )  
[4535] ( move 4 * 2 , ua ; pen 0 ; move 4 , 2 )  
[4536] ( move 4 , 2 ; move 2 - 3 , 3 ; pen ua )  
[4537] ( move 2 , 2 / 4 ; pen ua ; move 4 , 0 )  
[4538] ( pen 3 ; move 3 - ua , 2 ; move 3 , 3 )  
[4539] ( move ul , 0 ; ( pen 3 ; move 4 , 0 ) )  | ( move 2 , 0 ; pen 3 ; move 4 - ul , ua )  
[4540] ( move 0 - ua , ul ; move ua , ua + ul )  | ( pen ul ; ( move 0 - ua , ul ; move ua , ul ) )  
[4541] ( move 4 + ul , 2 ; pen 4 ; move 2 , 3 )  
[4542] ( move ua , 0 ; move ua + ul , ua * ua )  
[4543] ( move 3 , 3 ; move ua , 4 * 2 ; pen 2 )  
[4544] ( move 3 , 3 ; ( pen 0 ; move 3 , ua ) )  | ( move 3 - ua , 2 + ul ; pen 2 - 3 ; move ua , ua * 2 )  
[4545] ( move 4 + 3 , 2 ; pen ul ; move 3 , 4 )  
[4546] ( move ua + ul , ua ; move ua + ul , 2 )  | ( move ua + ul , ua ; move ua + ul , 2 ; v0 = ul )  | ( move ua + ul , 0 ; move ua + ul , ul + ul ; move 0 , 3 )  | ( move ua + ul , ua * 2 ; move ul , 2 ; move ua , ua + ua )  
[4547] ( pen 3 ; move ua , 2 * 2 ; move 4 , 4 )  
[4548] ( move ua - ul , ua ; move 0 - ua , ul )  
[4549] ( ( pen 2 ; move ua , 3 ) ; move 2 , 2 )  
[4550] ( move 3 , 4 ; move 3 , ua / 4 ; pen 0 )  
[4551] ( move ua + ul , 0 ; move ul - ua , ul )  
[4552] ( move ua / 3 , 4 ; pen 0 ; move 4 , 3 )  
[4553] ( move 4 + 4 , 2 ; move 3 , 4 ; pen ua )  
[4554] ( move 3 , 4 ; pen 3 ; move 2 , 4 + ul )  
[4555] ( move ul - ua , ua ; move 0 - ua , ul )  | ( move ua , ul ; v0 = ua - ul ; move v0 , v0 )  
[4556] ( move 3 , 2 ; ( pen ua ; move 2 , 2 ) )  
[4557] ( ( move 3 , 3 ; pen 0 ) ; move ua , 3 )  | ( move 2 + ul , 3 ; pen ul - ua ; move ua , 3 )  
[4558] ( move 0 , ua * ua ; move ua , ua - ul )  | ( v0 = ua * ua ; move ua , v0 - ul )  | ( move 0 , ua * ua ; move 4 + 3 , ul - 2 )  
[4559] ( move ua - ul , 0 ; move ul - ua , ul )  
[4560] ( move ua + ul , ua ; move 2 , ua * ua )  
[4561] ( move 4 , 4 + ul ; pen 2 ; move 3 , 4 )  
[4562] ( move 2 - ua , ua ; move ua + ul , ul )  | ( move 2 - ua , ua ; move ua + ul , ul ; v0 = 4 )  
[4563] ( move ua + 2 , ul ; move ua , ul + ul )  | ( move 2 , ul ; move ua , ua + ua ; move ua , 2 )  | ( v0 = ua ; move v0 + 2 , ul ; move v0 , 2 - v0 )  
[4564] ( move 0 - ul , ul ; move ua + ul , ul )  | ( move ul - 2 , ul ; move ua + ul , ul )  
[4565] ( move 3 , 2 ; pen 4 * 3 ; move 4 , ua )  
[4566] ( move ul , 0 - ul ; move ua + ul , ul )  | ( move ul , ua - ul ; move ua + ul , ul )  | ( move ul , ua - ul ; move ul , ul ; move ua , ua )  | ( v0 = ua + 2 ; move ul - v0 , 0 ; move ul , v0 )  
[4567] ( move ul , ua ; move ua - ul , 0 - ul )  | ( move ul , ua ; move ua - ul , ua - ul )  | ( move ul , ua ; move ua - 3 , ua - ul ; move 2 , 0 )  | ( move ul , ua ; move ua - ul , ua - ul ; v0 = ul )  
[4568] ( move 4 , 4 ; move ua + 3 , 3 ; pen 4 )  
[4569] ( pen 4 ; move ua , 2 ; move 3 , 4 * 3 )  
[4570] ( move ua - 2 , ul + ul ; move ua , ul )  | ( ( move ua - 4 , 2 ; move 2 , 0 ) ; move ua , ul - ua )  
[4571] ( move ua - ul , ua ; move ul , ua - 2 )  | ( ( move ua - ul , ua ; move 0 , 4 * 4 ) ; move ul , ul )  
[4572] ( move 3 , ul ; pen 4 ; move 4 , 4 + 3 )  
[4573] ( move ul - ua , ua ; move 2 , ua - ul )  
[4574] ( pen ua * 3 ; move 4 , 2 ; move 4 , 4 )  
[4575] ( move ua - ul , ul ; move 0 - ul , ul )  
[4576] ( move ul + ul , ua ; move 2 - ua , ul )  | ( move ul + ul , ua * 3 ; move 2 - ua , ul )  | ( move 2 , 0 ; v0 = ul - ua ; move v0 + ul , v0 )  
[4577] ( move ua , ua ; move ua - ul , ua - 3 )  
[4578] ( move ua + ul , 2 ; move ul - ua , ul )  
[4579] ( move ua + ul , ua ; move ua , ul - 3 )  
[4580] ( move ua - ul , ul ; move ua , ua - 2 )  
[4581] ( move 2 , ul ; move ua + ul , ua * ua )  
[4582] ( pen 2 ; ( move 3 , 4 ; move ua , 2 ) )  
[4583] ( move ua + 2 , ul ; move ul , ua - ul )  | ( move ua + 2 , ul ; move ul , ua - ul ; pen 4 )  
[4584] ( move 4 , 3 ; pen 4 ; move ua , 3 - 4 )  
[4585] ( move 4 , ul ; ( pen 0 ; move 2 , 4 ) )  
[4586] ( move 3 - ua , ua ; move ua + ul , ul )  
[4587] ( move ua + 3 , ul ; move ua , ul + ul )  | ( move ua + 3 , ul ; ( move ua , 2 ; v0 = ul ) )  | ( move ua + 3 , ul ; ( v0 = ua + ua ; move ua , 2 ) )  
[4588] ( move 4 , 3 ; ( pen 3 ; move 0 , ul ) )  
[4589] ( move 2 , ua - ul ; move ua + ul , ul )  | ( move 2 , ua - ul ; move ua + ul , ul ; v0 = 3 )  
[4590] ( pen 2 ; ( move ua , 2 ; move 4 , 3 ) )  
[4591] ( move 0 - ul , ul ; move ua - ul , ul )  | ( move 0 - ul , ul ; move 0 , ul ; move 4 + ul , ua )  
[4592] ( move ul , ua * ua ; move ua , 2 - ua )  | ( move ul , ua * ua ; move ua , 2 ; move 0 , ua + ul )  
[4593] ( pen 4 ; move 3 , 3 ; move 4 * 2 , ul )  
[4594] ( ( move ua , 4 ; pen 3 ) ; move 2 , 2 )  
[4595] ( move ua - ul , ua ; move 2 , ua * ua )  
[4596] ( move 4 * 2 , ul ; pen 4 ; move 4 , 2 )  
[4597] ( move 4 , 4 ; move 3 , 4 + ul ; pen 4 )  
[4598] ( move ul - ua , 3 ; move ua + ul , ul )  
[4599] ( pen 2 ; ( move ul , 3 ; move 4 , 2 ) )  
[4600] ( move ua - ul , ua ; move ua , 4 + ul )  
[4601] ( move 3 , ua * ua ; move ua , ua - ul )  
[4602] ( move ua , ua - 3 ; move ua - ul , ul )  
[4603] ( move ua - ul , ul ; move ua - 2 , ul )  
[4604] ( move ua - ul , ua * ua ; move ul , 2 )  
[4605] ( move ua + ul , ua ; move ua - ul , 4 )  
[4606] ( move 4 , 4 ; ( pen 4 ; move 0 , ua ) )  | ( move 3 + ul , 4 ; pen 3 + ul ; move 0 , ul + ul )  
[4607] ( move ua , ua * ua ; move ua + ul , 4 )  
[4608] ( move 3 , ul ; move ua + ul , ua * ua )  
[4609] ( move ua + ul , ul ; move ua , ua - 4 )  
[4610] ( move ul - ua , 2 ; move ua - ul , ul )  
[4611] ( move ua + ul , ul ; move ul - 2 , ul )  
[4612] ( move ul , ul ; move ua - 2 , ua * ua )  
[4613] ( move ul , 4 ; move 4 , 3 / 2 ; pen 3 )  
[4614] ( move ul - 2 , ua * ua ; move ua , ul )  
[4615] ( move ua + ul , 4 + ul ; move ua , ul )  | ( move ua + ul , 4 + ul ; move ua , ul - ua )  | ( move ua + ul , 4 + ul ; ( move ua , ul ; pen 2 ; pen ul ) )  
[4616] ( move ua + ul , ul ; move 3 , ua - ul )  
[4617] ( move ua - ul , ua * ua ; move 2 , ul )  
[4618] ( ( pen 2 ; move 4 , 4 ) ; move ua , 2 )  
[4619] ( move ul + ul , 3 ; move ua + ul , ul )  | ( move 2 , 3 ; ( move ua , ul ; move ul , ua ) )  
[4620] ( move 3 , 3 ; pen 4 ; move ua , 4 * 4 )  
[4621] ( move ua , ul ; move 3 - ua , ua - ul )  
[4622] ( move 3 , ua + ul ; move ua - ul , ul )  | ( move 3 , ul - ua ; move ua - ul , ul )  | ( move 0 , ua ; move 4 - ul , ul ; move ua - ul , ul )  
[4623] ( move 4 , ua ; move ua + ul , ua - ul )  | ( move 4 , ua ; move ua , 0 - ul ; move ul , 0 - ua )  
[4624] ( move 2 , 0 ; move ua , 2 ; move ul , 2 )  
[4625] ( move ul , ua - 4 ; move ua , ua + ul )  | ( move ul , 0 - 4 ; v0 = ul ; move ua , v0 )  
[4626] ( move ua - ul , ul ; move 2 , ul + ul )  | ( move ua - ul , ul ; v0 = 2 ; move v0 , 2 )  | ( move ua - ul , ul ; v0 = 2 ; move v0 , v0 )  
[4627] ( move ua , 4 ; move ua + ul , ua * ua )  
[4628] ( move ul - ua , ul ; move ul - ua , 2 )  
[4629] ( move 2 , 2 ; move ua , 2 ; move ul , 0 )  | ( ( move 2 , ul + ul ; move ua , ua + 2 ) ; move ul , ua )  
[4630] ( move ua + ul , 2 / ua ; move ul , ul )  
[4631] ( move 4 - ua , ul ; move ua + ul , ul )  
[4632] ( move ua , ua - ul ; move ua , ul / 2 )  | ( move ua , ua - ul ; ( move 0 , 0 ; move ua , ul / 2 ) )  
[4633] ( pen ul ; move 4 , 4 / 3 ; move 3 , 3 )  
[4634] ( move ua - ul , ua ; move ul - 3 , ul )  
[4635] ( move 4 , ul ; pen 3 - 4 ; move 4 , 4 )  | ( ( pen ul ; move 4 , ul ; pen 0 ) ; move 4 , 4 )  
[4636] ( move ua + ul , ul ; move 2 , ul / ua )  
[4637] ( move ua , ul ; move ua / 2 , ua * ua )  | ( move ua , ul ; ( move 3 , ua * ua ; pen 0 ) )  
[4638] ( move ua + ul , ul ; move ul , ua - 4 )  | ( move ua + ul , ua + ul ; move ul , ua / 3 )  
[4639] ( move ul , ul ; move ua + ul , 4 + ul )  
[4640] ( move ua , ua - ul ; move ua , ul - 4 )  | ( move ua , ul - 2 ; move ua , ul - 4 ; move 0 , ua )  
[4641] ( move ua - ul , ul ; move ua + ul , 4 )  
[4642] ( move ua + ul , 4 ; move ul - ua , ul )  
[4643] ( move ul , ua - 4 ; move ua , ua - ul )  
[4644] ( move ul , 3 ; move ul - ua , ua - ul )  
[4645] ( move ul - 3 , ua ; move ua - ul , ul )  
[4646] ( move 3 - ul , ua * ua ; move ua , ul )  | ( move 2 , ua * ua ; move 0 , ul ; move ua , 0 )  | ( move ul + ul , ua * ua ; move ua , ul - ua )  
[4647] ( move ul , ua + ul ; move ua , ua / 3 )  | ( ( move ul , ua + ul ; move ua , ua / 3 ) ; pen ul ; pen 0 )  
[4648] ( move 3 , ul ; move ul + ul , ua * ua )  
[4649] ( move ua + ul , 4 + ul ; move ul , ul )  | ( move ua + ul , 4 + ul ; move 2 - ul , ul )  
[4650] ( move 4 + ul , ua ; move ua - ul , ul )  | ( move 4 + ul , ua ; move ua - ul , ul ; v0 = 4 )  
[4651] ( move 4 , ul ; move ua + ul , ua * ua )  | ( pen ul ; move 4 , ul ; move ua + ul , ua * ua )  | ( move 4 , ua + ul ; move ul , ua * ua ; move ua , 0 )  
[4652] ( move ul , 4 ; move ua + ul , ul + ul )  | ( ( move ul , 4 ; move ua + ul , 2 ) ; pen ul )  | ( v0 = 4 ; move ul , v0 + ua ; move ua + ul , 2 )  | ( move ul , 4 ; v0 = ua + ul ; move v0 , ul + v0 )  
[4653] ( move ua , 0 ; move ul , 2 ; move 3 , 2 )  
[4654] ( move ul - ua , ua ; move 4 + ul , ul )  | ( move ul - ua , ua ; ( move 3 + ul , ul ; move ul , ua ) )  
[4655] ( move ua + ul , ul ; move 4 - ua , ul )  
[4656] ( move 4 , ul ; ( pen 4 ; move 4 , 0 ) )  | ( ( move 4 , ul ; v0 = 4 ) ; pen v0 ; move v0 , ua )  
[4657] ( move ul - ua , 2 / ua ; move ua , ul )  
[4658] ( move ua , ua - ul ; move ul , ua - 4 )  
[4659] ( move 4 + ul , ul ; move ua , ua - ul )  | ( move 4 + ul , ua + ul ; move ua , ul - 2 )  
[4660] ( move ul , ul - ua ; move ua , 2 / ua )  | ( move ul , ul ; move ua , ul / 3 ; v0 = 0 )  | ( v0 = ul ; move v0 * v0 , v0 ; move ua , 2 / ua )  
[4661] ( move ua , ua - ul ; move 4 , ua - ul )  | ( v0 = ua - ul ; move ua , v0 ; move 4 , v0 )  
[4662] ( move ul , ua ; move 4 + ul , ua - ul )  | ( v0 = 3 + ul ; move ul , ua ; move v0 + ul , 2 - 3 )  
[4663] ( move 3 , ua - ul ; move ul , ua - ul )  
[4664] ( pen 3 ; ( move 3 , 2 ; move ul , 4 ) )  
[4665] ( pen 4 ; move 4 , ul ; move 3 , 4 / 3 )  
[4666] ( move ul , ul - 3 ; move ul - ua , ul )  | ( move ul , 0 - 2 ; move ul - ua , ua + ul )  
[4667] ( move ul - 3 , ul ; move ua - ul , ul )  | ( move ul - 3 , ul ; move ua - ul , 2 - ul )  
[4668] ( move 4 , ua * ua ; move ua - ul , ul )  
[4669] ( move 4 , ua - ul ; move ul - ua , ul )  | ( move 4 , 0 - ul ; move ul - ua , ul ; v0 = ua )  
[4670] ( move 4 , 4 / 3 ; pen 3 ; move ul , 4 )  
[4671] ( move ul , ul ; move ua - ul , 4 + ul )  | ( move ul , ul ; move ua - ul , 4 + ul ; pen ua * 4 )  
[4672] ( move ua , ul - 4 ; move ul , ua * ua )  
[4673] ( move 4 + ul , ua - ul ; move ul , ul )  
[4674] ( move ul - 3 , ul ; move ul - ua , ul )  | ( move ua - ul , 2 ; move ul , ua - ul ; move ul , 0 )  
[4675] ( move ua , ul + ul ; move ua , 4 / ua )  | ( ( v0 = ua ; move v0 , 2 ) ; move ua , 4 / ua )  
[4676] ( move ul , ul / 2 ; move ua , ua - ul )  
[4677] ( move 2 , ul ; move 2 , 2 ; move ua , 2 )  | ( move 2 , ul ; move ul + ul , 2 ; move ua , 2 )  
[4678] ( move ul , ul - 2 ; move ua , ul / ua )  | ( move ul , 0 - ul ; move ua , ul / ua ; v0 = ua - 4 )  
[4679] ( ( pen 2 ; move 4 , 3 ) ; move 4 , ul )  | ( move 4 , 3 - ua ; pen 2 ; move 4 , ul )  
[4680] ( move ua , ua ; move 2 , 3 ; move 2 , 2 )  
[4681] ( move ua , ua ; move ul + ul , ul / 3 )  | ( move ua , ua ; move 2 , 2 / ua ; v0 = ua )  | ( move ua , 0 ; move 3 - ul , ul / 3 ; v0 = ul )  
[4682] ( move ua + ul , ul / ua ; move 3 , ul )  
[4683] ( move ul , ul / ua ; move ua - ul , 2 )  | ( move ul , 0 - ua ; move ul - ua , ua - ul )  
[4684] ( move ul - ua , ul ; move 2 , ul / ua )  
[4685] ( move ua , ul / 2 ; move ua - ul , ul )  | ( ( move ua , ul / 2 ; move 0 , ul ) ; move ua - ul , ua )  
[4686] ( move ul , ul / 2 ; move ua , ul + ul )  
[4687] ( move 3 , ul / ua ; move ua + ul , ul )  
[4688] ( move ul , 3 / ua ; move ua , ua * ua )  
[4689] ( move ul - 4 , ul ; move ua + ul , ul )  | ( pen 3 - 2 ; move ul - 4 , ul ; move ua + ul , ul )  | ( move ul - 4 , ul ; move ua + ul , ul ; move 4 / ua , 3 )  
[4690] ( move ul , ua * ua ; move ua - ul , 4 )  | ( move ul , ua + 2 ; move ul - ua , 4 / ua )  
[4691] ( move 4 - ua , ul ; move ul + ul , ul )  
[4692] ( move ul , ul / 2 ; move ua + ul , ul )  | ( move ul , 3 / ua ; move ul , ul ; move ua , ua )  | ( ( move ul , ul / 2 ; move ua + ul , ul ) ; v0 = 4 )  
[4693] ( move ul - ua , ul ; move ul - 3 , ul )  | ( move 2 , 2 ; ( v0 = ua - ul ; move v0 , v0 ) )  | ( move 2 , 2 ; move ua - ul , ul - 2 ; v0 = ul + ul )  
[4694] ( move ua , ul - 4 ; move ul - ua , ul )  
[4695] ( move ua + ul , ul ; move ul - 4 , ul )  
[4696] ( ( pen 3 ; move 4 , 4 ) ; move 2 , ul )  
[4697] ( move ul , ul ; move 4 + ul , ua - ul )  | ( move ul , ul ; move 4 + ul , 3 - 4 ; pen 2 )  | ( move ul , ul ; move 4 + ul , ua - ul ; pen 2 )  
[4698] ( move ua , 0 ; move 4 , 2 ; move 2 , ul )  
[4699] ( move ua - ul , ua ; move ul / 2 , ul )  | ( move ua - ul , ua ; move ul / 2 , 2 - ua )  
[4700] ( move ul - 4 , ul ; move ua - ul , ul )  
[4701] ( move ul , ul / ua ; move ul - ua , 3 )  
[4702] ( move ua , ua * ua ; move ul , ul / 3 )  
[4703] ( move ul , 4 ; move ua , 0 ; move 2 , 3 )  | ( ( move ua + ul , 4 ; move 2 , 3 ) ; move ul , ul )  
[4704] ( move ua , 4 / ua ; move ul + ul , ul )  | ( move ua , 4 / ua ; ( move 2 , ul ; v0 = ua ) )  | ( move ua , 4 / ua ; move ul + ul , ul ; v0 = 3 )  
[4705] ( move 4 , ul / ua ; move ul , ua + ul )  | ( move 4 , ul / ua ; v0 = 3 ; move ul , ua + ul )  
[4706] ( move ul , ul / ua ; move 3 , ua * ua )  
[4707] ( move ua - ul , ul / ua ; move 3 , ul )  
[4708] ( move ul , 3 ; move 2 , 4 ; move ua , 0 )  | ( move ul , 3 ; move ua , 3 + ul ; move 2 , 0 )  
[4709] ( move ua , ul / ua ; move ua - 4 , ul )  
[4710] ( move ul , ul ; move ua + ul , 4 / ua )  
[4711] ( move ua - ul , ua ; move ul , ul / 3 )  
[4712] ( move 4 , 0 ; move ul , ul ; move 2 , 2 )  
[4713] ( move ua , 0 ; move 2 , ul ; move 3 , 4 )  
[4714] ( move 0 , ul ; move 2 , 4 ; move 2 , ul )  | ( move ul + ul , 4 + ul ; move 4 - 2 , ul )  | ( v0 = 2 ; move v0 , 4 + ul ; move v0 , ul )  | ( move 2 , 4 + ul ; move 2 , ul ; v0 = ua / 3 )  
[4715] ( move ua , 4 / ua ; move ul - ua , ul )  
[4716] ( move ua - ul , ua ; move ua / 4 , ul )  
[4717] ( move 3 / ua , ul ; move ua - ul , ul )  | ( move 2 / 4 , ul ; move 0 , ua ; move ua - ul , ul )  
[4718] ( move 2 , 3 ; move 0 , ul ; move ua , 4 )  | ( move ul + ul , 4 - ul ; move ua , 4 + ul )  | ( move 2 , 2 + ul ; move ua , 4 + ul ; pen 2 + 2 )  
[4719] ( move ua , ul / 3 ; move ua - ul , ul )  
[4720] ( move 3 , ul ; move 0 , 3 ; move ua , 3 )  
[4721] ( move 4 , 0 ; move 2 , 2 ; move ul , ul )  
[4722] ( move ul + ul , ul ; move ua , ul / 3 )  | ( pen ul ; move 2 , ul ; move ua , ul / 3 )  | ( move ul + ul , ul ; move ua , ul / 3 ; pen ua )  
[4723] ( move ua , ul ; move ua / 4 , ua * ua )  
[4724] ( move 3 , ua - ul ; move ul , ul / ua )  | ( move 4 , ua - ul ; move ul / ua , ua + ul )  
[4725] ( move ul , ul ; move 4 , 0 ; move 3 , 2 )  | ( move 3 + 2 , ul ; v0 = ul + ul ; move 3 , v0 )  | ( v0 = 3 ; ( move 2 + v0 , ul ; move v0 , 2 ) )  
[4726] ( move ul - ua , ua ; move ul , ul / 4 )  | ( move ul - ua , ua ; move ul , ul / ua )  | ( move ul - ua , 0 ; move ul , ul / 3 ; move 0 , 0 )  
[4727] ( move 2 , ua ; move ua , 3 ; move 3 , 3 )  
[4728] ( move ua , ua ; move 3 , 4 ; move 2 , 2 )  
[4729] ( move 0 , 2 ; move 3 , 4 ; move ul , ul )  | ( move 0 , ua + 3 ; move 3 , 3 ; move ul , ul )  | ( move ul , 3 ; ( move 3 , 3 ; move ul , ul ) )  
[4730] ( move ua , ul / 4 ; move ul , ua * ua )  
[4731] ( move ul - ua , ul ; move 4 , ul / ua )  | ( move ul - ua , ua + ul ; move 4 , ul / ua ; v0 = ua )  
[4732] ( move ul - ua , ul ; move ua / 4 , ul )  
[4733] ( move ua - ul , ul ; move ul , ul / 3 )  
[4734] ( move ua , 0 ; move 4 , 3 ; move ua , 4 )  
[4735] ( move ul / ua , ul / ua ; move ua , 3 )  | ( v0 = ul / ua ; move ua , v0 * v0 )  
[4736] ( move ul + ul , ul / ua ; move 4 , ul )  | ( pen ul ; move 3 - ul , ul / ua ; move 4 , ul )  
[4737] ( move 2 , 0 ; move 3 , ul ; move ul , 4 )  
[4738] ( move 3 , ul ; move 2 , ul ; move 4 , 0 )  | ( move 3 , ul ; pen ul ; move 3 * 2 , ul )  | ( move 3 , ul ; move 4 + 2 , ul ; v0 = 2 )  | ( move 3 , ul ; move 4 + ul , ul ; move 2 - ul , ua )  | ( move 4 - ul , ul - ua ; move 4 , ul ; move 2 , ua )  
[4739] ( ( move 4 , 4 ; pen 3 ) ; move ul , 4 )  
[4740] ( move 4 , 3 ; move ul , 0 ; move 3 , ul )  | ( move 4 , 3 ; move ul , ua ; move 3 , ul )  
[4741] ( move ul / ua , ul / 3 ; move ua , ul )  
[4742] ( move 4 , 0 ; move ua , ul ; move 4 , 3 )  
[4743] ( move ua , ul / ua ; move ul , ul / 3 )  
[4744] ( move ua , ul ; move 2 , 2 ; move 4 , 3 )  
[4745] ( move 2 , 2 ; move 4 , ul ; move ua , 3 )  
[4746] ( move ul , 4 ; move 2 , ul ; move 2 , 3 )  
[4747] ( move 3 , ua ; move 4 , 3 ; move 2 , ul )  
[4748] ( move 3 , 3 ; move 3 , ua ; move ua , 4 )  
[4749] ( move 4 , 2 ; move 3 , ul ; move 2 , ul )  
[4750] ( move ua , 4 ; move 2 , ul ; move 2 , 4 )  
[4751] ( move 4 , 2 ; move ua , 3 ; move 4 , ul )  
[4752] ( move ul , 3 ; move 3 , 2 ; move ul , 4 )  
[4753] ( move 4 , 2 ; move ul , 3 ; move 4 , ua )  
[4754] ( move 2 , 3 ; move ul , 4 ; move ul , 3 )  
[4755] ( move 4 , 0 ; move ul , 4 ; move ul , 4 )  
[4756] ( move 0 , ul ; pen 0 ; move 2 + 2 , ul )  
[4757] ( move 0 , 0 ; pen 0 ; move ua - ul , 4 )  
[4758] ( move 2 , 4 ; move 4 , 4 ; move ul , ua )  
[4759] ( move 4 , 4 ; move ul , 2 ; move 4 , ua )  
[4760] ( move ul , 3 ; move 4 , 4 ; move 3 , ul )  
[4761] ( move 0 , ua * 3 ; pen 0 ; move ua , 2 )  | ( ( move 0 , ul ; pen 0 ) ; move ua , ul )  | ( move 0 , ul + ul ; pen 0 ; move ua , ua )  | ( move 0 , ua ; pen 0 ; ( move ua , 2 ; move 3 , 2 + ul ) )  
[4762] ( move ua - ul , 0 ; pen 0 ; move 3 , 2 )  
[4763] ( move ul , 3 ; move 3 , 4 ; move ul , 4 )  
[4764] ( pen 2 ; move ua + 2 , 0 ; move ul , 2 )  
[4765] ( move 2 , ul ; move 0 - ua , 3 ; pen 0 )  
[4766] ( move 2 , ul ; move ul , 4 ; move 4 , 4 )  
[4767] ( move 2 , ua + 3 ; pen 0 ; move 2 , ua )  
[4768] ( pen ul + ul ; move ua + ul , ul - 2 )  | ( pen 2 ; move ua , ua - ul ; move ul , ua )  
[4769] ( move ul , 3 ; move ua , 4 ; move 4 , 4 )  
[4770] ( pen 3 + ul ; move ul - ua , ua - ul )  | ( pen 4 ; move ul - ua , 0 - ul ; pen ua / 3 )  | ( pen 4 ; ( move 2 , ua - ul ; move ua - 3 , ua ) )  
[4771] ( move ul , 0 ; pen 0 ; move 4 + 3 , ua )  | ( move ul , ua ; ( pen 0 ; move ua + ul , ua ) ; v0 = ua )  
[4772] ( move 2 - 3 , 2 ; pen 0 ; move ua , ua )  
[4773] ( move 3 , ul + ul ; pen 0 ; move 3 , 0 )  
[4774] ( pen ua ; move 3 , 0 - 2 ; move ua , 2 )  
[4775] ( move 2 , ul ; pen 2 - ua ; move 2 , 0 )  | ( move 2 , ul ; ( pen 0 ; move ul + ul , ua ) )  | ( move ul + ul , 3 - 2 ; pen 0 ; move ul + ul , 0 )  | ( move 2 , ua + ul ; ( pen 3 - ua ; move 2 , ua * 3 ) )  
[4776] ( move 4 , ua + 2 ; pen 0 ; move 2 , ua )  | ( move 4 , 2 - ua ; pen 0 ; move 2 , ua )  | ( move 2 - ua , 2 ; ( pen 0 ; move ua , 0 ) )  
[4777] ( move 0 , ul ; pen 0 ; move 4 , 2 + ul )  
[4778] ( move 2 , ua + ua ; pen 0 ; move 3 , 3 )  
[4779] ( move ua + 2 , 2 ; move ua , 4 ; pen 0 )  | ( move 2 , 2 ; move ua , 0 ; move ua , 3 + ul )  | ( move ua + 2 , 2 ; move ua , 4 - ua ; v0 = ua * 4 )  
[4780] ( move ul , 0 ; pen 0 ; move 4 , 2 - ua )  | ( move ul , ua ; pen ul - ua ; move 4 , 2 )  
[4781] ( v0 = ua * 3 ; move 4 , ua * v0 )  | ( move 0 , 4 ; ( move 4 , 4 / 3 ; v0 = ul + ul ) )  
[4782] ( move 2 , 0 ; move 2 , ul / ua ; pen 0 )  
[4783] ( pen 2 ; move ul , 2 ; move 0 - ua , 3 )  
[4784] ( move 0 , 4 ; pen 0 ; move ul - ua , 3 )  
[4785] ( v0 = 4 / ua ; move 4 , ua - v0 )  
[4786] ( move 2 + ul , 2 ; pen 3 ; move ul , 0 )  | ( move 4 , 2 ; ( pen 4 - ul ; move ul , 3 ; v0 = ul ) )  
[4787] ( pen 2 ; move 0 , 3 ; move ua + ul , 3 )  | ( move ul , 3 ; pen 2 ; move ua + ul , 3 )  
[4788] ( move ua + 2 , ua ; pen 2 ; move 3 , 2 )  
[4789] ( v0 = ua / 3 ; move ua , 3 / v0 )  | ( v0 = 4 + 3 ; move ua , v0 + v0 )  | ( v0 = ua - 4 ; move ua , v0 + v0 )  | ( v0 = ua - 4 ; move ua , v0 + v0 ; pen ul )  
[4790] ( move 2 , 0 ; move 0 - 4 , ul ; pen ul )  | ( v0 = ua / 3 ; move 4 , ul ; move v0 , v0 )  
[4791] ( move ua , 0 ; pen 0 ; move 4 , ul - 3 )  
[4792] ( move ul , 4 ; move 4 , 4 ; move 4 , ul )  
[4793] ( move 4 + 4 , 0 ; pen ua ; move 0 , ul )  | ( move ua + 2 , ua ; pen ua ; move 0 , ul )  
[4794] ( move ua , 3 ; pen 0 ; move ua , 2 - 3 )  
[4795] ( move ua / 2 , 0 ; pen 0 ; move 4 , ua )  | ( move 4 - ul , ua ; pen 0 ; move 4 , 0 )  
[4796] ( move 2 , 0 ; pen 2 ; move ua , 4 + ul )  
[4797] ( move 0 , 0 ; pen ul / 3 ; move ua , 2 )  
[4798] ( move 2 , ua * 2 ; pen 0 ; move 4 , ua )  
[4799] ( move ua , 0 ; pen 3 ; move 3 , ua + 4 )  
[4800] ( move ul , 0 ; pen 4 ; move 2 + ul , 2 )  
[4801] ( move ul , 0 ; pen 0 ; move 3 , ul / 2 )  
[4802] ( pen ua ; move 3 , ua ; move 3 + 2 , 2 )  
[4803] ( move ul , 3 + 3 ; pen 0 ; move 3 , ua )  
[4804] ( pen 2 ; move ua , 2 - ul ; move 2 , 2 )  
[4805] ( move ua , 3 ; pen 0 ; move 2 , 4 + ul )  | ( move ua , 3 ; pen ul - ua ; move 3 , 4 )  
[4806] ( move 4 + ul , 2 ; pen ua ; move 0 , 3 )  
[4807] ( pen ul ; move ua , 3 ; move 2 + 2 , 2 )  | ( pen 3 / ua ; move ua , 3 ; move 4 , 2 )  | ( move ua , 3 ; move 4 , 2 - ua ; v0 = ua * ua )  | ( move ua , 2 + ul ; ( move 4 , 2 ; pen 0 ) ; v0 = ul )  
[4808] ( move 0 , ua ; pen 0 - 4 ; move 4 , ul )  | ( move 0 , ua + ul ; pen 0 ; move 4 , ua )  | ( ( move 0 , ul ; pen ul - ua ) ; move 4 , ua ; v0 = 0 )  
[4809] ( move 0 , ua / 3 ; pen 0 ; move ua , 4 )  
[4810] ( move 3 + ul , 3 ; pen 0 ; move 2 , ul )  
[4811] ( v0 = ul / ua ; move 4 , v0 / 2 )  
[4812] ( move 4 , 0 ; move 3 , ua - 2 ; pen ua )  
[4813] ( move 2 , ul - 2 ; pen 4 ; move ua , 0 )  
[4814] ( pen 2 ; move 4 , 0 - ua ; move 2 , ul )  
[4815] ( pen 3 ; move ua - 4 , 0 ; move ua , 2 )  
[4816] ( move ua , 0 ; pen 0 ; move 3 , ua / 4 )  
[4817] ( move 3 , ua ; pen 0 ; move 4 + ul , 2 )  
[4818] ( move ua , 2 ; pen ua - 2 ; move 3 , 2 )  
[4819] ( move ul , 0 - 4 ; pen ua ; move 3 , 2 )  
[4820] ( pen 4 ; move 3 + ul , 0 ; move ua , 3 )  
[4821] ( move 4 , 2 ; pen 0 ; move 3 , ul + ul )  
[4822] ( move ua , ul ; pen 0 ; move 3 , 3 * 2 )  
[4823] ( move ua , ua ; pen 4 ; move 2 , 3 + 2 )  
[4824] ( move ua , 4 ; move 0 - 2 , 3 ; pen ul )  
[4825] ( move ua , 0 ; pen ua ; move 4 + 3 , 4 )  
[4826] ( move ul - 2 , 4 ; pen 0 ; move ua , 3 )  
[4827] ( move ua , 0 ; pen 3 ; move 4 + ul , 3 )  
[4828] ( move 3 , 0 ; pen 4 ; move 2 + ul , ul )  
[4829] ( move 2 , 2 ; pen 0 ; move ua / 3 , ul )  
[4830] ( pen ua ; move ua , 0 ; move 3 , 4 + 4 )  
[4831] ( pen ua + 4 ; move 2 , 3 ; move ua , 2 )  
[4832] ( pen 3 ; move 4 , 2 ; move ua , 0 - ul )  
[4833] ( pen ua ; move 4 - ua , 3 ; move 3 , 0 )  | ( pen ua ; move ul , ua * 3 ; move 3 , 3 )  
[4834] ( move ua , 3 ; pen 2 ; move ua - 3 , 2 )  
[4835] ( move 0 , ul / 3 ; move ua , 4 ; pen 0 )  
[4836] ( move ua , 2 ; move ua + 2 , 3 ; pen 4 )  
[4837] ( move 4 , ua + 2 ; pen 0 ; move 4 , ul )  | ( move 4 , 2 ; pen 0 - ua ; ( move 3 , ul ; move ul , 0 ) )  
[4838] ( move 3 , ua ; pen 2 ; move 2 , ua - 3 )  
[4839] ( move 4 , ua + 3 ; pen 2 ; move ua , 2 )  
[4840] ( move ul , 2 ; pen ul - 2 ; move 4 , 0 )  | ( move ul , ul + ul ; pen 0 ; ( move 4 , 0 ; v0 = 0 ) )  
[4841] ( pen 2 ; move 0 , ua * ua ; move 4 , 3 )  
[4842] ( move 3 , 2 - 3 ; pen 2 ; move ua , ul )  
[4843] ( move ua , ul ; pen 3 * 2 ; move 4 , 0 )  | ( move ua , ul ; pen ua * 2 ; move 4 , ua )  | ( move ua , ul ; pen ua ; move 2 + ul , ua )  | ( move ua , ul ; pen ua + ul ; move 4 - ul , ua )  | ( move ua , ul ; pen ua ; ( move 3 + ul , ua ; pen ua ) )  
[4844] ( move 3 , 4 ; pen ua + 2 ; move ul , 2 )  
[4845] ( pen ua + 2 ; move ua , 4 ; move 4 , 2 )  
[4846] ( move ua - ul , 2 ; move 3 , 2 ; pen 3 )  | ( v0 = ua ; move v0 - ul , 2 ; move 3 , 2 )  
[4847] ( move 4 , 0 ; move 3 , ua - ul ; pen 3 )  | ( pen ul ; ( move 4 , ua ; move 3 , ua - ul ) )  | ( move 3 , ua ; ( move ul , ua ; move 2 + ul , ua - ul ) )  
[4848] ( move 4 , ua ; pen 0 ; move 2 - 4 , ul )  
[4849] ( move ua , 0 ; ( pen 0 ; move ua , 4 ) )  
[4850] ( move 3 , ul ; pen 3 ; move 3 - ul , 0 )  
[4851] ( pen 4 ; move 3 , 0 - 3 ; move ua , ul )  
[4852] ( pen 3 ; move 3 , ul ; move 2 , 2 - ua )  
[4853] ( move 2 , 4 * 3 ; move ua , ul ; pen 0 )  
[4854] ( move 4 , ul ; move 2 , 4 + ul ; pen 0 )  
[4855] ( pen 4 ; move ua / 2 , 0 ; move ul , 2 )  | ( ( pen ua ; move 3 , 0 ) ; pen 2 + ul ; move ul , 2 )  | ( pen ua ; ( move 2 + ul , ua ; move ul , 2 - ua ; pen 0 ) )  
[4856] ( move 4 , ua + ua ; pen 3 ; move 2 , 3 )  
[4857] ( move 4 , ua ; move 4 , 0 - 2 ; pen ul )  | ( move 3 + ul , ua ; v0 = 4 ; move v0 , 2 - v0 )  
[4858] ( move 3 , 4 ; pen 3 ; move 0 - ua , ul )  
[4859] ( pen 3 ; move 4 - ua , 0 ; move 3 , ul )  
[4860] ( move ua , 2 ; pen 2 ; move 3 , ua * 3 )  | ( move ua , 2 ; pen ul + ul ; move 3 , ua )  
[4861] ( move ua / 2 , 0 ; pen ua ; move 3 , 4 )  
[4862] ( move 4 , 4 ; pen 0 ; move 2 , ul - ua )  
[4863] ( move 4 , 0 ; move 2 , ua - 4 ; pen ul )  
[4864] ( move 2 * 2 , ul ; pen 2 ; move 2 , ul )  | ( move 4 , ul ; pen ul + ul ; move 2 , ul )  | ( ( move 4 , ul ; move 0 , ua - ul ) ; pen 2 ; move 2 , 2 )  
[4865] ( move 2 , ul / 3 ; pen ua ; move 3 , 0 )  
[4866] ( move ul , ul - 4 ; pen 0 ; move 3 , 2 )  
[4867] ( move 4 + ul , 3 ; pen 3 ; move ul , 0 )  
[4868] ( pen 3 ; move ua , 0 - ul ; move 4 , 3 )  
[4869] ( pen 4 ; move 0 , ul / 2 ; move ua , 2 )  
[4870] ( pen 2 ; move 2 + 2 , 4 ; move ul , ul )  | ( pen ul + ul ; move 4 , 4 ; move ul , ul )  
[4871] ( move ua + ul , 4 ; pen 3 ; move 2 , 2 )  
[4872] ( pen 2 ; move ul , 4 + 3 ; move ua , 2 )  
[4873] ( move ua , ua ; pen 4 ; move 2 , 4 + 3 )  
[4874] ( move ua / 2 , ul ; pen 3 ; move 2 , 2 )  
[4875] ( pen ua - 2 ; move 3 , 2 ; move ul , 4 )  | ( pen 4 ; move 2 + ul , 2 ; move ul , 4 )  
[4876] ( move ul , 4 ; pen 2 ; move 4 , ua + 2 )  
[4877] ( move 3 - 2 , ul ; pen 2 ; move ua , 4 )  | ( move ul , ul ; pen 2 ; ( pen 2 ; move ua , 4 ) )  | ( ( move ul , ul ; pen 4 ; pen 2 ) ; move ua , 4 ; pen ua )  
[4878] ( move ul , 0 ; move 3 , 3 * 3 ; pen ul )  
[4879] ( ( move ua , 3 ; pen 0 ) ; move 2 , ua )  
[4880] ( move 2 , 2 ; move 4 + 3 , ul ; pen ul )  
[4881] ( move 2 , ua - 3 ; pen 4 ; move ua , 3 )  | ( pen 3 ; ( move ua , 0 ; move ul , ua + 3 ; move ul , ua ) )  
[4882] ( move 3 , 2 ; move ul , ul / 3 ; pen 0 )  | ( move ua / 2 , 2 - ua ; move ul , ul / 3 )  | ( move 3 , ul + ul ; pen 2 ; move ul , 2 / ua )  
[4883] ( pen ua + ul ; move 3 , 3 ; move 4 , 2 )  | ( pen ua ; move ua / 2 , 3 ; move 4 , ua + 2 )  
[4884] ( pen 3 ; move ul , 2 + ul ; move 3 , 3 )  | ( move ul , 0 ; pen 2 + ul ; move 0 - 3 , 3 * 2 )  
[4885] ( move 4 , ul ; move 4 + 2 , 2 ; pen ua )  | ( move 4 , ul ; pen 2 / 3 ; move 4 + 2 , 2 )  
[4886] ( pen ua + 2 ; move ul , 3 ; move 3 , 4 )  | ( pen ua - ul ; move ul , 3 ; move 2 + ul , 4 )  
[4887] ( pen 2 ; move ul , ul ; move 3 , 3 + 3 )  
[4888] ( pen ua ; move 3 , 2 + ul ; move 3 , 4 )  
[4889] ( move 3 , 2 / ua ; pen ua ; move 2 , 3 )  | ( move 2 + ul , 2 / ua ; pen ua + 4 ; move 2 , 3 )  
[4890] ( move ul , 3 ; pen 0 ; move 4 , 4 - ua )  
[4891] ( move 4 , ua ; move 2 , 3 * 2 ; pen ua )  | ( move 4 , ua ; move ul , 3 * 2 ; move ul , ua * 3 )  | ( v0 = 3 ; move ul + v0 , ua ; move 2 , v0 + v0 )  
[4892] ( move ua , 4 ; pen 3 ; move 2 + ul , 3 )  
[4893] ( pen ua ; move ua + 2 , 3 ; move 4 , 4 )  
[4894] ( move 3 , 4 ; pen ua ; move ua + 2 , 4 )  
[4895] ( move ua , 2 / ua ; pen 2 ; move 3 , 3 )  
[4896] ( pen 3 ; move 2 + ul , 2 ; move 4 , ul )  
[4897] ( move ul , ul ; pen 0 ; move 3 , 3 / 2 )  
[4898] ( move 4 , 4 / ua ; pen 0 ; move ua , 2 )  
[4899] ( pen 2 ; move 4 , ua ; move 2 + ul , 4 )  
[4900] ( pen 2 ; move 3 , ua ; move ul - 3 , 3 )  
[4901] ( move 3 , ul ; pen 0 ; move 3 , 3 / ua )  
[4902] ( ( move ua , 4 ; pen 0 ) ; move ul , 0 )  | ( move ua , 4 ; pen ul - ua ; move ul , ua )  | ( move ua , 4 - ua ; pen 0 ; move ul , ua * 4 )  
[4903] ( move 3 , 4 * 2 ; pen ua ; move 2 , ua )  
[4904] ( move ua - 2 , 4 ; pen ul ; move 3 , 2 )  
[4905] ( pen 4 ; move 0 , ua * ua ; move 4 , 3 )  
[4906] ( move ua , 4 ; pen 4 ; move 2 , ua + 3 )  
[4907] ( move 4 , ua ; pen 0 ; move 4 * 2 , ul )  
[4908] ( move 2 , ul ; pen 3 * 2 ; move 2 , ul )  | ( move 2 , ul ; pen ua ; move 3 - ul , ul )  
[4909] ( pen 2 ; move ul , 2 ; move 3 , ul / 2 )  
[4910] ( pen 4 ; move 3 + ul , 4 ; move ua , 2 )  | ( pen ua - ul ; move 3 + ul , 4 ; move ua , 2 )  
[4911] ( pen 4 ; move 3 , ul ; move 0 - 4 , ul )  
[4912] ( move 3 , ul ; pen 2 ; move 2 - 4 , ul )  
[4913] ( move 4 , 4 + ul ; pen 4 ; move 0 , ul )  
[4914] ( pen 4 ; move ul , 2 ; move ua + 3 , 4 )  
[4915] ( move ul - 4 , 0 ; move 3 , ul ; pen 4 )  | ( move 0 - 3 , ua ; pen ul ; move 3 , ul )  | ( pen ul ; move 0 - 3 , ul ; move 3 , ua - ul )  | ( move ul - 4 , ua ; move 4 - ul , ul ; pen ua )  
[4916] ( move ua - 4 , ul ; pen 2 ; move 4 , 2 )  
[4917] ( move ua + ul , 2 ; move 4 , 4 ; pen 3 )  
[4918] ( move 3 , 4 ; pen ua ; move 4 + ul , 2 )  
[4919] ( ( move 2 , 0 ; pen 4 ) ; move ua , ua )  
[4920] ( move 4 , ul ; pen 2 ; move ua + 3 , 4 )  
[4921] ( pen 3 ; move 3 , 3 ; move 3 + ul , ul )  
[4922] ( move 4 + ul , 2 ; move 4 , 2 ; pen ul )  
[4923] ( move ua , 4 * 3 ; move ul , 2 ; pen 2 )  
[4924] ( pen ul ; move 3 , ua - 4 ; move 3 , 2 )  | ( move 3 , ua - 4 ; move 4 - ul , ul + ul )  
[4925] ( ( pen ua ; move 4 , 0 ) ; move ua , 2 )  | ( pen ua * ua ; move 4 , 0 ; move ua , 2 )  
[4926] ( move 3 , ua + 4 ; pen 3 ; move 4 , ua )  | ( move 3 , 4 ; ( pen 2 ; pen 3 ) ; move 3 + ul , ua * 2 )  
[4927] ( move 4 + 4 , ul ; pen 2 ; move ua , 3 )  
[4928] ( pen ul ; move 0 - 4 , ul ; move 4 , 3 )  | ( move ul - ua , ul ; move ul / ua , ul ; move 3 , 2 )  
[4929] ( move 2 , 4 / 2 ; pen ua ; move 3 , ua )  
[4930] ( move 4 , 4 ; pen 3 - ua ; move 2 , ua )  
[4931] ( move 3 * 2 , ul ; pen 4 ; move ua , 2 )  
[4932] ( move 3 , 3 ; pen ua ; move 3 * 3 , ul )  
[4933] ( move 3 * 3 , 2 - 3 ; move 3 * 2 , 2 )  
[4934] ( pen 4 ; move 4 , 3 + ul ; move ua , 3 )  | ( pen ua ; move 4 , 4 ; ( move ua , 3 ; v0 = 2 - 3 ) )  
[4935] ( move 2 , ul - 4 ; pen 3 ; move 3 , ul )  
[4936] ( pen 4 ; move 4 * 2 , ua ; move ua , 3 )  
[4937] ( pen ua ; move ua , 3 * 2 ; move 4 , 4 )  
[4938] ( move 2 , ul / ua ; pen 2 ; move 4 , 3 )  
[4939] ( move ul , 0 ; move 3 , ua / 4 ; pen 4 )  
[4940] ( move 3 , ul ; move 3 , 3 / 2 ; pen ua )  
[4941] ( move ul , 3 ; pen 4 ; move 3 , ua * 2 )  
[4942] ( move 4 , 3 ; pen ua * 3 ; move 3 , ua )  
[4943] ( pen ul + ul ; move 3 , 4 ; move 4 , 2 )  
[4944] ( pen ua ; move ua , 3 ; move 4 * 2 , 4 )  
[4945] ( move 0 - 4 , 4 ; pen 4 ; move ul , ul )  
[4946] ( pen 3 ; move ua + ul , 4 ; move 4 , 3 )  
[4947] ( pen 4 ; move 3 , 2 ; move ul - ua , 4 )  
[4948] ( move 4 , ul ; pen 3 ; move 3 , ul - 2 )  
[4949] ( pen ua ; move ua , 4 ; move 3 , 3 * 3 )  
[4950] ( pen 2 ; move 3 , ul ; move ul - 3 , 4 )  
[4951] ( pen 2 ; move 4 , 3 ; move ul , 4 + ul )  
[4952] ( ( pen 3 ; move ua , 0 ) ; move 4 , ul )  | ( pen 3 ; ( move ua , ua + ua ; move 4 , ul - ua ) )  
[4953] ( move ul , 4 + ul ; pen 3 ; move 3 , 4 )  
[4954] ( ( move ua , 4 ; pen 0 ) ; move 3 , ul )  | ( move ua , 4 ; pen 0 - 3 ; move ul - 4 , 4 )  
[4955] ( pen ua ; move ua , 4 ; move 4 * 2 , 4 )  
[4956] ( move ua , 2 / 3 ; pen 3 ; move 4 , ul )  
[4957] ( move 4 , ul ; pen ua * 4 ; move 2 , 3 )  
[4958] ( move ua , 3 ; ( pen 0 ; move 4 , ul ) )  | ( move ua , 2 + ul ; ( pen 0 ; move 4 , ul ) )  
[4959] ( move 4 , ua ; pen 4 ; move 2 / ua , 3 )  
[4960] ( pen 3 ; move ul - 4 , 4 ; move ua , 3 )  
[4961] ( move 3 , ul ; move 2 , ua / 4 ; pen 3 )  | ( move 3 , ul ; move ul + ul , ua / 4 ; v0 = ua )  
[4962] ( move 4 , 2 ; pen 4 ; move ua , ul / 2 )  
[4963] ( move 4 , ul ; pen ul ; move 4 , 3 + 3 )  
[4964] ( move ua , 3 - 4 ; pen 4 ; move ua , 4 )  
[4965] ( move 2 , 4 ; pen ua * ua ; move 4 , 4 )  
[4966] ( pen 4 + ul ; move ul , 4 ; move 4 , 2 )  | ( pen ua + ul ; move ul , 4 ; move 4 , ul + ul )  
[4967] ( move ua , ua ; move ua - ul , ua * ua )  
[4968] ( move 4 + ul , 4 ; pen 3 ; move 4 , ul )  
[4969] ( move ua - 3 , 4 ; pen 4 ; move ul , 4 )  
[4970] ( move ul - ua , ua ; move ua , ua * ua )  
[4971] ( move 3 , ul - 4 ; pen 4 ; move 3 , ul )  
[4972] ( move ua - ul , ua ; move ua , ua - ul )  
[4973] ( move ul , ua ; move ua + ul , ua * ua )  
[4974] ( move ul , 4 ; move ua , 4 + 4 ; pen 4 )  
[4975] ( move ua , ua * ua ; move ua + ul , ul )  | ( v0 = ua ; move v0 , v0 * ua ; move ul + v0 , ul )  
[4976] ( pen 4 ; move 3 , ul ; move ua , 2 / 4 )  
[4977] ( move ul , 3 ; ( pen 0 ; move 4 , ul ) )  
[4978] ( move ua , ul / 4 ; pen 3 ; move 3 , 3 )  
[4979] ( pen 4 ; move 3 , 2 / 3 ; move ul , ul )  
[4980] ( move 4 , 4 - 2 ; pen 4 ; move ul , ul )  | ( move 4 , 3 - ul ; pen 4 ; move ul , ul )  | ( move ul , 2 ; move 3 , ua ; ( pen ua ; move ul , ul ) )  
[4981] ( pen 2 ; ( move ua , ul ; move 2 , 4 ) )  
[4982] ( pen 3 ; move ua , 4 ; move 3 , ua / 4 )  
[4983] ( pen 3 ; ( move ul , 3 ; move ua , 2 ) )  
[4984] ( ( move 4 , ua ; pen 2 ) ; move ua , 3 )  
[4985] ( move 3 , 3 ; move ul , 4 * 3 ; pen ul )  
[4986] ( pen ua ; ( move 3 , 2 ; move ua , 4 ) )  
[4987] ( move ul - ua , ul ; move ua + ul , ul )  
[4988] ( pen 2 ; move ul , 4 ; move 3 , ul / 4 )  
[4989] ( ( pen ua ; move ua , 3 ) ; move 4 , 3 )  
[4990] ( move ua , ua - ul ; move ul , ua * ua )  
[4991] ( move ul , ul ; move ua + ul , ua * ua )  | ( move ul , ul ; move 2 - ul , ua * ua ; move ua , ua )  
[4992] ( move ul - ua , ua * ua ; move ua , ul )  
[4993] ( move ua + ul , ul ; move ul - ua , ul )  | ( move ua + ul , ul ; move ul - ua , ul ; pen 4 )  | ( move 0 , ul ; ( move ua + ul , 0 ; move ul - ua , ul ) )  
[4994] ( move 4 , 4 ; pen ul ; move ul , 3 / 2 )  
[4995] ( move 4 , 4 ; pen ul - 4 ; move 3 , ul )  
[4996] ( pen 4 ; move 4 + 4 , ul ; move ul , 4 )  
[4997] ( pen 4 ; move 4 , ul ; move ul , 4 * 2 )  
[4998] ( move ua , ua * ua ; move ul - ua , ul )  | ( move ua , ua * ua ; move ul - ua , ul ; pen ul )  
[4999] ( move ua + ul , ul ; move ul , ua - ul )  | ( move 4 + 2 , ul ; move ul , 0 ; move ul , ua - ul )  | ( move ua , ul ; move ul , ua ; move 0 - ul , ua * ua )  | ( move ua + ul , ul ; v0 = 4 ; move ul , ul + v0 )  | ( move ua + ul , ul ; move ul , 4 + ul ; v0 = ul + ul )  
[5000] ( ( pen ua ; move 3 , 3 ) ; move 3 , ul )  
[5001] ( move ua , ua - ul ; move ul - ua , ul )  | ( move ua , 0 - ul ; move ul - ua , ul ; pen ua )  | ( move ua , ua - ul ; v0 = ul - ua ; move v0 , ul )  
[5002] ( move 4 , ul ; pen 4 ; move 4 , ua - 4 )  
[5003] ( move ua - ul , ul ; move ua , ua * ua )  
[5004] ( move 4 , 4 ; ( pen ua ; move 2 , ul ) )  
[5005] ( move ul , ul ; move ua - ul , ua * ua )  
[5006] ( ( move 3 , 3 ; pen 4 ) ; move ua , ul )  | ( move 3 , ua + 3 ; pen ua ; move ua , ul )  
[5007] ( move ul - ua , ul ; move ua - ul , ul )  | ( move ul - ua , ul ; move ua - ul , ul ; pen ua )  
[5008] ( move 4 , ul ; ( pen 4 ; move 2 , ua ) )  
[5009] ( move ul , 0 ; move ua , 2 ; move 3 , ua )  | ( move ua / 3 , ua ; move ua , 2 ; move 3 , ua )  | ( move 3 , ua ; ( move ua , 2 ; v0 = 0 ) ; move 3 , ua )  
[5010] ( move 4 , ul / 2 ; pen 4 ; move ul , 4 )  
[5011] ( pen 3 ; ( move 3 , ul ; move ul , 3 ) )  | ( pen 3 ; move ul - 4 , ul ; move ul , 0 )  | ( pen 4 - ul ; move ul + ul , ul ; move 3 - ua , ua )  
[5012] ( move 4 , ua ; pen 4 ; move 4 , 4 / ua )  
[5013] ( move 2 , 0 ; move ua , ul ; move 3 , ul )  | ( move 2 , ua ; move ua , ul ; move 3 , ul )  
[5014] ( ( move 4 , ua ; pen 4 ) ; move ul , 3 )  
[5015] ( move ul , ul / ua ; move ua , ua * ua )  
[5016] ( move ua - ul , ul / ua ; move ua , ul )  
[5017] ( pen 4 ; ( move ua , 4 ; move 3 , ul ) )  | ( pen 2 * 2 ; move ua , 4 ; move 2 + ul , ul )  
[5018] ( move ua , ul / ua ; move ul - ua , ul )  | ( move ua , ul / ua ; v0 = ul - ua ; move v0 , ul )  
[5019] ( move ua , ul / ua ; move ul + ul , ul )  | ( move ua , ul / ua ; pen ul ; move 2 , ul )  | ( move ua , ul / ua ; move 2 , ul ; v0 = 2 )  | ( v0 = ua ; move v0 , ul / v0 ; move 2 , ul )  | ( move ul , ul / ua ; move ua - ul , ua ; move 2 , ul )  | ( move ua , ul / ua ; v0 = ul ; move ul + ul , v0 )  
[5020] ( move ua , ul ; move ul - ua , ul / ua )  
[5021] ( move ul , ul + ul ; move ua , ul / ua )  | ( move ua , ua - ul ; move ul - 2 , 4 - ul )  | ( move ul , 2 ; move ua , ul / ua ; move 0 , ua )  | ( pen ul ; move ul , ul + ul ; move ua , ul / ua )  
[5022] ( move 3 , ul ; move ua , 2 ; move ul , 0 )  | ( move 3 , ul ; move ua + ul , 2 ; pen 2 )  | ( move 3 , ul ; v0 = ul ; move ua + ul , 2 )  | ( move 3 , ul - ua ; move ua + ul , 2 ; move 0 , ua )  | ( move 2 + ul , ul ; v0 = ua + ul ; move v0 , 2 )  | ( move 2 + ul , ua + ul ; move 0 , ul ; move ua + ul , ul )  
[5023] ( move 2 , ua ; move 2 , ul ; move ua , 2 )  
[5024] ( move ua , 0 ; move 2 , 4 ; move ua , ul )  
[5025] ( move ul , 0 ; move 3 , 2 ; move ul , ul )  
[5026] ( move 2 , ua ; move 2 , ul ; move 2 , ul )  
[5027] ( move ul , 0 ; move 3 , ul ; move 2 , ul )  
[5028] ( move ua , ul ; move ua , 4 ; move 3 , 0 )  | ( move ua , ul ; move ua + 2 , 4 ; move ul , ua )  | ( move ua , ul ; move 2 , 4 ; move ua + ul , ua + ua )  
[5029] ( move ul , 0 ; move 2 , ul ; move ul , 3 )  
[5030] ( move ul , 0 ; move 2 , ul ; move 3 , ul )  | ( move ul , ua ; move 2 , ul ; move 2 + ul , ul )  | ( move ul , ua ; move 2 , ul - ua ; move 3 , ul )  
[5031] ( move 4 , 0 ; move ul , 2 ; move ua , ul )  | ( move 3 , ua ; move ul , ua + 2 ; move ua , ul )  | ( move 4 , ua + ua ; move ul , 2 ; move ua , ul )  
[5032] ( move 2 , 0 ; move ua , ul ; move 4 , ul )  
[5033] ( move 2 , ua ; move 3 , 2 ; move ul , ul )  
[5034] ( move ua , ul / ua ; move ul , ul / ua )  
[5035] ( move 2 , 3 ; move ua , ul ; move ua , 3 )  
[5036] ( move ul , 2 ; move 2 , ul ; move 2 , ul )  
[5037] ( move ul , 3 ; move ua , 2 ; move ul , 2 )  | ( move ua , 4 + ul ; v0 = 2 - ua ; move ul , v0 )  
[5038] ( move ul , 0 ; move ua , ul ; move 4 , 3 )  | ( ( move ul , 0 ; move ua , ul - ua ) ; move 4 , 3 )  
[5039] ( move 3 , 2 ; move ua , ul ; move ua , 3 )  
[5040] ( move ua , 0 ; move ul , ul ; move 4 , 3 )  
[5041] ( move 3 , ul ; move ua , 2 ; move 2 , ul )  
[5042] ( move ua , ua ; move 2 , 4 ; move 2 , ul )  
[5043] ( move 3 , 2 ; move ua , 3 ; move ul , ul )  | ( ( move 4 , 2 ; move ua , 3 ) ; move ul , ul ; v0 = ua )  
[5044] ( move ua , 2 ; move ua , 4 ; move 3 , ul )  
[5045] ( move 2 , 2 ; move ua , ul ; move ul , 4 )  
[5046] ( move ul , 2 ; move ul , 3 ; move 2 , ul )  
[5047] ( move ua , 2 ; move 2 , 4 ; move ul , ul )  
[5048] ( move 2 , 3 ; move 4 , ul ; move ua , ua )  
[5049] ( move ua , 2 ; move ul , 4 ; move 2 , ul )  
[5050] ( move ul , ul ; move 2 , 4 ; move 2 , ul )  
[5051] ( move 4 , ua ; move ua , 3 ; move 3 , ul )  
[5052] ( move ua , 3 ; move ul , 3 ; move ul , 3 )  | ( ( move ua , 3 ; move ul , 4 * 4 ) ; move 0 , 3 )  
[5053] ( move 2 , ul ; move ul , 3 ; move 3 , ul )  | ( move 2 , ul ; ( move ul , 3 ; move 3 , ul ; pen 3 ) )  
[5054] ( move 2 , ul ; move 4 , ul ; move ul , 2 )  
[5055] ( pen 3 ; move 4 + ul , 3 * 2 ; pen ua )  
[5056] ( move ua , 3 ; move ul , 4 ; move ul , 2 )  
[5057] ( move 4 , ua ; move ua , 3 ; move ua , 4 )  
[5058] ( move 2 , ul ; move ua , ul ; move 4 , 3 )  
[5059] ( move 0 , 0 ; pen 0 ; move ua , ua - ul )  | ( move 0 , ua - ul ; pen 0 ; move ua , 0 )  | ( move 0 , ul ; pen 0 ; move ua , ul - 3 )  | ( move 0 , 2 ; pen 0 ; ( move ua , ua - 3 ; move 0 , 3 ) )  
[5060] ( pen 3 ; pen ua ; move ua + 3 , 4 * 3 )  
[5061] ( move ul , 2 ; move 3 , ul ; move 4 , ul )  | ( move ul , 2 ; move 2 + ul , ua + ul ; move 4 , ul )  
[5062] ( move ua , ul ; move 4 , ul ; move 3 , 3 )  
[5063] ( move 3 , 3 ; move 3 , ul ; move ul , ul )  
[5064] ( move ua , 4 ; move 3 , ul ; move ua , 4 )  
[5065] ( move ul , ul ; move ua , 4 ; move 2 , 4 )  
[5066] ( move 4 , ul ; move 4 , 2 ; move ua , ul )  
[5067] ( move 3 , 4 ; move ul , ul ; move 2 , ul )  
[5068] ( move 0 , ua ; pen 0 ; move ua - ul , 2 )  
[5069] ( move ul , 2 ; move 4 , ul ; move ul , 4 )  
[5070] ( move 4 , 2 ; move ul , ul ; move ul , 4 )  
[5071] ( move ul , 0 ; pen ua ; move 0 - ua , 2 )  
[5072] ( move ua , ul ; move ul , 4 ; move 4 , 3 )  
[5073] ( move 3 , ul ; move 3 , 4 ; move ul , ul )  
[5074] ( move ua , ua + ul ; pen 0 ; move 4 , 0 )  
[5075] ( move 3 , ua ; pen 0 ; move ua , 0 - ul )  
[5076] ( move 4 , ul ; move ul , ul ; move 3 , 4 )  
[5077] ( move ua + ul , ul ; pen 0 ; move 3 , 0 )  | ( ( move ua + ul , ul ; pen 0 ; move 3 , ua ) ; pen ua )  
[5078] ( move ua , 0 - 2 ; pen 0 ; move ul , ul )  
[5079] ( move ul , 3 ; move 4 , ul ; move ul , 4 )  
[5080] ( move ua , ua ; pen 0 ; move 2 , ua - 2 )  
[5081] ( move 4 , ul ; move ul , 4 ; move 3 , ul )  
[5082] ( move ua , 0 - 2 ; pen 2 ; move ul , ua )  
[5083] ( pen 2 ; move ua , ua + 2 ; move ua , 2 )  
[5084] ( move ul , ua + ul ; pen 0 ; move 4 , 0 )  | ( move ul , ul ; pen 0 ; ( move 3 , ua * 3 ; move ul , ua ) )  
[5085] ( move ua , ua ; pen 0 ; move ua + 2 , 4 )  
[5086] ( move 0 , ul ; pen 0 ; move ua , 4 + ul )  | ( ( move 0 , 4 ; pen ul - ua ) ; move ua , 2 )  
[5087] ( move 3 - ul , ul ; pen 0 ; move ua , 0 )  
[5088] ( move 4 , 0 ; pen ua ; move ul + ul , 0 )  | ( move 4 , ua ; ( pen ua ; move 2 , ua ) )  | ( move 4 , ua ; pen ua + 2 ; move ul + ul , ua )  
[5089] ( move ua , 0 ; pen 2 + ul ; move ua , 3 )  | ( ( move ua , ua ; pen 3 ) ; v0 = ul - 3 ; move ua , 3 )  
[5090] ( move ua , 3 - ul ; pen 0 ; move ul , 0 )  
[5091] ( move ul , ul ; move ul , 4 ; move 4 , 4 )  
[5092] ( move ua , 0 ; pen 2 ; move ua - ul , 2 )  
[5093] ( pen ua - ul ; move 2 , 0 ; move ua , 2 )  
[5094] ( move ua , 2 ; pen ua * 2 ; move 0 , ua )  | ( move ua , 2 ; pen ua ; move 0 , 4 + ul )  | ( move 4 + 2 , 2 ; pen ua + ul ; move 0 , 0 )  | ( ( move ua , 2 ; pen ua ; v0 = 0 ) ; move 0 , v0 )  | ( move ua , 2 ; ( pen ua * 3 ; move 0 , ua ; v0 = 4 ) )  
[5095] ( move 4 + ul , 0 ; pen 0 ; move ul , ua )  | ( ( move ul , ua * 4 ; move 4 , ua ) ; pen 0 ; move ul , 0 )  
[5096] ( move 0 , ul ; pen 0 ; move 4 , ua - ul )  
[5097] ( pen 3 ; move ua + ul , 0 ; move ul , 2 )  
[5098] ( move 4 + ul , ul ; pen 0 ; move ul , 0 )  | ( move 4 + ul , ul ; pen ul - ua ; move ul , 0 )  
[5099] ( move 3 , 0 ; pen ua ; move ul + ul , 2 )  | ( move 3 , ua ; pen ua * 2 ; move 3 - ul , 2 )  | ( ( move 2 + ul , 0 ; pen ua ) ; move 2 , 2 ; v0 = ua )  
[5100] ( move ua , ua ; pen ua + 2 ; move 2 , 3 )  | ( move ua , ua ; pen ua + 4 ; move 2 , ua + 3 )  
[5101] ( move 4 , ua + 2 ; pen ua ; move ul , 0 )  | ( move 3 + ul , 2 ; pen ua ; move ul , ua )  
[5102] ( move 0 - 3 , ua ; pen ua ; move 3 , ua )  | ( move ul , 0 ; pen 3 * 2 ; move 0 - 3 , ua )  | ( pen ua ; move 3 , ua * 3 ; move 2 , ua / 2 )  
[5103] ( pen ua ; move 3 , 0 ; move ua + 3 , ul )  
[5104] ( move ul , ua + 3 ; pen 0 ; move ua , 3 )  
[5105] ( move ua + ul , 2 ; pen 4 ; move 0 , ua )  
[5106] ( move ul , 3 + 3 ; pen 0 ; move ua , ua )  
[5107] ( move 4 + ul , ua ; pen 0 ; move 2 , ul )  
[5108] ( move 2 , ul ; pen ua ; move ua , 3 + 2 )  | ( ( move ul , 0 ; pen ua + ul ) ; move ua , 4 + 2 )  
[5109] ( move 0 - 4 , ua ; pen ua ; move 2 , ul )  
[5110] ( move 4 + ul , 2 ; pen 0 ; move ua , ul )  
[5111] ( move 3 , 0 ; pen ua ; move ul , 3 + ul )  
[5112] ( move ul , 0 ; pen 3 ; move ua + 3 , ul )  
[5113] ( move ua , 3 ; pen ua + 3 ; move ua , 2 )  
[5114] ( move 0 - 3 , ul ; pen ua ; move ul , 2 )  
[5115] ( move 2 , 2 + ul ; pen 3 ; move ua , ua )  
[5116] ( move 4 , ua ; pen 2 + ul ; move ul , 0 )  
[5117] ( pen ua ; move 3 + ul , 0 ; move ua , 4 )  | ( ( pen ua ; move 4 , 0 ) ; move ua , ua + 4 )  
[5118] ( move 0 , 4 ; pen ua ; move ua + ul , 3 )  | ( pen ua ; v0 = 4 + 3 ; move v0 + ul , v0 )  
[5119] ( move ua - ul , ul ; pen 3 ; move 2 , 0 )  
[5120] ( move ua , ul ; pen 0 ; move 3 , 2 - ul )  | ( move ua , ul - ua ; pen 0 ; move 3 , ul )  | ( move ua , ul ; pen 0 - ua ; move 3 , ul )  
[5121] ( move 2 , 3 - ul ; pen 0 ; move ua , ul )  
[5122] ( move ua , 2 ; pen ua ; move 3 + ul , 2 )  | ( move ua , 2 ; pen ua ; move ua - 2 , ua + 2 )  
[5123] ( move ua , 0 - 4 ; pen 2 ; move ul , ua )  
[5124] ( pen 2 ; move ul , ul - 3 ; move ua , 0 )  
[5125] ( move 4 , ul ; pen 0 ; move 2 + ul , ua )  
[5126] ( ( move ul , ua ; pen 0 ) ; move ua , 0 )  | ( move ul , ua ; pen 3 - ua ; move ua , ua )  | ( ( move 4 - 3 , 0 ; pen 0 ) ; move ua , ua )  | ( move ul , 0 ; ( pen 0 ; move ua , 0 ; pen 3 ) )  | ( move ul , 0 ; pen 0 ; ( pen 0 ; move ua , ua ) )  | ( ( move ul , 0 ; pen 0 ; v0 = ua ) ; move v0 , v0 )  
[5127] ( pen 3 ; move ua , 0 ; move 3 - ul , ul )  
[5128] ( pen ua ; move 2 , ua ; move 3 , ua + 4 )  
[5129] ( move 0 - ua , 4 + 3 ; move 0 - 4 , 4 )  
[5130] ( move ul , 3 ; pen 0 ; move ua - ul , 3 )  
[5131] ( move 2 , 4 ; pen 0 - ul ; move ua , ul )  
[5132] ( move 4 , 0 ; pen ul - 2 ; move ul , ua )  | ( ( move 4 , 0 ; pen 0 - ul ) ; move ua / 4 , ua )  
[5133] ( move 3 , ua / 2 ; pen ua ; move ul , 0 )  
[5134] ( move ua + 3 , ul ; pen 4 ; move ul , 0 )  
[5135] ( move 0 - ua , 4 ; pen ul ; move 2 , ul )  | ( v0 = 3 + ul ; ( move 0 - ua , v0 ; move 2 , ul ) )  
[5136] ( move 3 , 0 ; pen ul - 3 ; move ul , ua )  | ( ( move 3 , ua ; pen 0 ) ; move ul , ua )  | ( ( move 3 , ua ; pen 0 ; move ul , ua ) ; pen ul )  
[5137] ( pen 2 ; move 2 , ua ; move ua - 3 , ul )  
[5138] ( pen ua + ua ; move 4 , ul ; move 2 , 2 )  | ( pen ua + ul ; move 4 , ul ; move 2 , 4 - 2 )  
[5139] ( pen 3 ; move ua , 0 ; move ua - 4 , ul )  
[5140] ( pen 4 ; move ul , ua ; move ua + 2 , 2 )  
[5141] ( pen 3 ; move ua , ua ; move 2 , 3 + ul )  
[5142] ( move ua , ua + 4 ; pen 3 ; move ua , 2 )  
[5143] ( move ua , 2 ; pen ua ; move 3 , ua * 2 )  | ( move ua , 2 ; ( pen ua ; move 3 , ua ; v0 = 0 ) )  
[5144] ( move 3 , 0 ; pen 4 ; move ua , ua - ul )  
[5145] ( move ul , ua ; pen 0 ; move 4 , 3 + ul )  
[5146] ( move ul - ua , 2 ; pen ua ; move 3 , 2 )  
[5147] ( move 4 , ua * ua ; pen ua ; move 3 , 0 )  
[5148] ( move ul , ul ; pen 0 - 3 ; move ua , 3 )  
[5149] ( pen 2 ; move 3 , ua ; move 2 + ul , ul )  | ( ( move ul + ul , ua ; pen 2 ) ; move ul , 0 ; move 3 , ul )  
[5150] ( move 3 , 2 ; pen ua ; move 2 , ua - ul )  
[5151] ( move 3 , ul ; pen 2 ; move ua - 2 , ul )  
[5152] ( move ul , ua - 4 ; pen 0 ; move 4 , ua )  
[5153] ( pen ua ; move 4 , 0 ; move 4 , ua - ul )  
[5154] ( pen 2 ; move 2 , 4 ; move ua + ul , ul )  
[5155] ( pen 2 ; move ul - 2 , ul ; move 3 , ua )  
[5156] ( move 3 - ua , ul ; move 3 , 2 ; pen ua )  
[5157] ( move ua , ul ; pen 2 ; move 3 + ul , 3 )  
[5158] ( move ua , 2 * 2 ; pen ua ; move ua , 4 )  
[5159] ( move 4 , ul ; pen ua + 2 ; move ul , 2 )  | ( ( move 4 , ul - ua ; pen 4 + 3 ) ; move ul , 2 - ua )  
[5160] ( move 2 , ul ; pen 2 ; move 3 , ul - ua )  
[5161] ( move ua , 4 ; pen 4 ; move 0 - ul , ua )  
[5162] ( pen 3 ; move 2 , ua + ul ; move ua , 4 )  
[5163] ( pen 3 ; move 3 , ua ; move ua - 2 , ul )  | ( pen 3 ; move 2 + ul , 0 ; move ua - 2 , ul )  
[5164] ( pen 3 ; move ul - 4 , 0 ; move ul , ua )  | ( pen 3 ; move 3 - 4 , ua ; move 2 + ul , 0 )  
[5165] ( move ul , 4 ; pen 0 - ul ; move ua , 3 )  | ( ( move ul , ua + 4 ; pen ul - ua ) ; move ua , 3 )  
[5166] ( move ul , 0 ; pen ua ; move 4 * 2 , ul )  
[5167] ( pen 3 ; move ua , 3 + 2 ; move ul , ul )  
[5168] ( pen ua ; move 4 , ul ; move 3 , ua + 2 )  | ( pen ua ; move ua - 2 , ul ; move 3 , ua / 3 )  
[5169] ( pen ua ; move 2 - ul , 2 ; move 3 , ul )  
[5170] ( move 2 - 4 , ua ; move ua , 3 ; pen ua )  | ( move ul - 3 , ua ; v0 = 3 ; move ua , v0 )  | ( move 2 - 4 , ua ; ( move ua , 3 ; pen ul + ul ) )  
[5171] ( move ua / 3 , 2 ; pen ua ; move ua , 2 )  | ( move ul , 3 ; pen 4 + 3 ; move ua , ua + ul )  | ( pen ua ; ( move ul , 3 ; move ua , ul ) ; pen 4 - 3 )  
[5172] ( move 4 , 3 ; pen ua + ua ; move ul , 2 )  | ( ( move 4 , 3 ; pen ua * 4 ) ; move ul , ul + ul )  
[5173] ( pen ua + ul ; move 3 , 3 ; move 2 , ul )  
[5174] ( pen 3 ; move ua , ua + ua ; move 3 , 4 )  
[5175] ( move ul , 0 ; pen 3 ; move ua , ul / 2 )  
[5176] ( move ul , ua ; pen 3 ; move 2 + ul , 3 )  
[5177] ( move 2 - ua , ul ; pen ul ; move 2 , 3 )  
[5178] ( move 2 , ul ; pen 3 * 2 ; move ua , ua )  | ( move ul + ul , ul ; pen 4 ; move ua , ua )  | ( move ua + 2 , ul ; pen 4 ; move 0 - ua , ua )  
[5179] ( pen 2 ; move ua , 3 + 3 ; move ul , ul )  
[5180] ( move 4 , 0 - ua ; pen ua ; move 4 , ul )  | ( ( move 4 , ua ; pen ua ) ; move 4 , ul )  
[5181] ( pen 4 ; move ul , 2 ; move ua + ul , 2 )  
[5182] ( pen ua ; move 4 - ua , 2 ; move 3 , ua )  | ( pen ua ; move 3 - ua , 2 ; move ul , ua )  | ( pen ua + ua ; move ul - 4 , 2 ; move ul , 0 )  | ( pen ua + ul ; move 4 - ua , ul + ul ; move 3 , 0 )  
[5183] ( move 4 , 3 * 2 ; move 2 + 2 , 2 - ua )  
[5184] ( move 4 , 0 - ul ; pen 3 ; move ua , ul )  
[5185] ( move 0 - ul , ua ; move 4 , 3 ; pen ul )  | ( move ul - 2 , ua ; move ul , 3 ; move 2 + ul , ua )  
[5186] ( pen ua - ul ; move ua , 0 ; move 4 , 4 )  | ( pen ua ; move ua , ua ; move ua - 2 , 2 + 2 )  
[5187] ( move 3 , 4 ; pen ul ; move ua , 0 - ul )  | ( ( move 3 , 4 ; move ua , 3 - 4 ) ; pen ua )  
[5188] ( move ul , 2 ; move ua , ua / 4 ; pen 0 )  | ( move ul , ul + ul ; move 0 , ua / 4 ; move ua , ua )  
[5189] ( move ua , ul ; pen 3 ; move ua - 3 , 2 )  
[5190] ( pen 3 ; move ua - 2 , ua ; move ua , 4 )  
[5191] ( pen ua ; move 4 , 2 ; move ua , 3 + ul )  
[5192] ( move 3 + ul , 2 ; move 3 + 2 , 3 - 4 )  
[5193] ( move ua , ul / 2 ; pen 3 ; move 2 , ua )  
[5194] ( move 0 - ua , 4 ; pen ul ; move ul , 4 )  
[5195] ( pen ul ; move ua / 2 , 3 ; move ua , 2 )  | ( move ua / 2 , 2 + ul ; move ua , ul + ul )  | ( move ua / 2 , 3 ; move 0 , ul ; move ua , ul )  
[5196] ( pen 3 - ul ; move ua , 3 ; move 2 , ul )  
[5197] ( move ua , ua ; ( pen 2 ; move ul , 0 ) )  | ( move ua , 0 ; pen 3 ; move ul , ua + ua )  | ( move ua , 0 ; pen ul + ul ; move ul , ua )  | ( ( pen ul / 2 ; move ua , 0 ) ; pen ul ; move ul , ua )  
[5198] ( move 4 , ua / 3 ; pen 0 ; move ua , ul )  
[5199] ( move 3 + ul , 4 * 2 ; move 2 + 2 , 3 )  
[5200] ( pen ul ; move 4 , 2 ; move 2 , ua * ua )  
[5201] ( move ua , ul ; pen 4 ; move ua - 2 , 3 )  
[5202] ( pen ul ; move ua + 3 , ul ; move 2 , 4 )  
[5203] ( move 3 - ua , ua ; move 4 , 2 ; pen ul )  
[5204] ( pen ua ; move ul , ua ; move 3 , 4 - 2 )  | ( pen ua ; move 0 , 0 ; ( move ul , ua ; move 3 , 2 ) )  
[5205] ( pen ua ; move 3 + ul , ua ; move 3 , 4 )  
[5206] ( pen ua ; move ul , 3 ; move ua + 3 , 4 )  | ( move ul , 3 ; ( pen ua ; move ua , 4 ) ; move 3 , ua )  
[5207] ( move ua + ul , 3 ; move 3 , 4 ; pen ua )  | ( move ua + ul , 2 + ul ; move 4 - ul , 4 )  | ( move ua + ul , 3 ; ( move 3 , 4 - ua ; v0 = 0 ) )  
[5208] ( pen 4 ; move 4 , ua ; move 0 - ul , ul )  | ( pen ua ; move 4 , ua ; move ul , 4 - ua )  | ( pen ua ; ( v0 = 4 ; move 4 , 0 ) ; move ul , v0 )  
[5209] ( pen ul + ul ; move ua , 4 ; move 3 , 2 )  
[5210] ( pen 2 ; move 3 , ua + 4 ; move ul , ul )  | ( pen 2 ; move 3 , 4 - ua ; move ul , 2 - ul )  
[5211] ( pen 3 ; move ul , 2 - ua ; move 3 , ul )  | ( pen 3 ; move ul - 4 , 3 ; move ul , ua + 2 )  
[5212] ( pen 2 ; move 3 , 3 - ua ; move ul , ul )  
[5213] ( pen 3 ; move 3 + ul , ul ; move 2 , ul )  
[5214] ( pen 3 ; move ua , 4 ; move 2 , ua * ua )  
[5215] ( pen 2 ; move ua , ul ; move ul , 4 + 3 )  
[5216] ( move ua , 4 * 2 ; pen 2 ; move ul , ua )  
[5217] ( pen ua ; move 4 , ul ; move ua , 2 - 3 )  
[5218] ( move 4 , 3 ; pen ua - 2 ; move ul , ua )  
[5219] ( pen 2 ; move 3 , ul ; move ul , ul - 2 )  
[5220] ( pen ua ; move 3 + ul , 2 ; move ul , 4 )  
[5221] ( pen ul ; move 4 , 0 ; move 2 , ul / ua )  | ( move 4 , ua ; ( move 2 , ul / ua ; v0 = ua ) )  
[5222] ( pen ul ; move ua , ul - 4 ; move 2 , 2 )  | ( v0 = ul / ua ; move ua , ua - 3 ; move 2 , 2 )  
[5223] ( move ua , 3 ; pen ua ; move 2 , ua * 4 )  | ( ( move ua , 3 ; pen ua ) ; move 2 , ua + ua )  | ( ( pen ul ; move ua , 3 ; pen ua ) ; move ul + ul , ua )  
[5224] ( move ua , ua ; pen ul ; move 2 , 3 * 3 )  
[5225] ( move ul , ua + 4 ; pen 3 ; move 3 , ua )  | ( move ul , 4 ; ( pen 3 ; move 3 , ua ; v0 = ul ) )  
[5226] ( move 4 / ua , 4 ; pen 0 ; move ua , ua )  
[5227] ( move ul , 2 ; pen 4 - ul ; move ua , 2 )  | ( ( pen 3 ; move ul , 4 - 2 ) ; v0 = ua ; move ua , 2 )  
[5228] ( pen 3 ; move ua , ua ; move 2 - ul , 4 )  | ( pen ul - 4 ; pen 3 ; ( move ua , ua * 3 ; move ul , 4 ) )  
[5229] ( move 2 , 4 ; pen ua ; move 3 , ul + ul )  | ( move ua - 4 , 4 ; pen ua ; ( move 2 + ul , 2 ; pen 0 ) )  
[5230] ( move 2 , 2 ; move ua , ul / 3 ; pen ua )  | ( move ul , ul + ul ; move ul , ua ; move ua , ul / 3 )  
[5231] ( pen 3 ; move ul , 0 ; move ua , 4 / ua )  
[5232] ( move 2 , ul / ua ; pen 3 ; move ua , 2 )  
[5233] ( pen 3 ; move ua , ua ; move 2 / 3 , ul )  
[5234] ( pen 2 ; move ul , 3 - ul ; move ua , 4 )  
[5235] ( move 3 , 4 ; pen 4 ; move ua + ul , ua )  
[5236] ( move ua , 3 ; pen 4 ; move 3 , ul + ul )  
[5237] ( move ua , 4 * 2 ; pen ua ; move ul , 3 )  
[5238] ( move 4 , ul ; pen ua ; move 3 , ua * 2 )  
[5239] ( pen 4 ; move 2 , 4 ; move ua , ua - ul )  
[5240] ( pen ua ; move 3 , 2 ; move ul , ua / 3 )  
[5241] ( move 3 , 3 ; pen ua ; move ul , ua / 2 )  
[5242] ( move 4 , ua ; pen ua * 3 ; move 2 , ul )  
[5243] ( move 4 , ua ; pen ua ; move 3 , ua * 3 )  | ( ( pen ul ; move 4 + 3 , 0 ; pen ua ) ; move ul - 4 , ua )  
[5244] ( move ua - 4 , ua ; move 3 , 4 ; pen ua )  | ( move 2 / ua , ua * 4 ; move 2 , 0 ; move 3 , 3 + ul )  
[5245] ( move 3 , 2 - 3 ; move 2 - ua , 3 * 3 )  
[5246] ( pen ua ; move ul , ua + 3 ; move 4 , 4 )  
[5247] ( move ua , 2 ; move 4 , ul / 2 ; pen ua )  
[5248] ( move ua , 3 ; pen 4 ; move 3 - ua , ul )  
[5249] ( move 3 * 3 , ul ; move 0 - 2 , 2 / 3 )  
[5250] ( pen 3 ; move ua , 4 + 3 ; move ul , ul )  
[5251] ( move ua , 3 ; move 3 , ua / 3 ; pen ua )  
[5252] ( move ua , 4 - ul ; pen 3 ; move ul , 2 )  | ( move ua , 3 ; pen ua - 3 ; move ul , ua + 2 )  
[5253] ( move 4 , ua + ul ; pen 2 ; move 4 , ul )  
[5254] ( pen ua ; move 4 , ua ; move 3 + ul , 4 )  | ( pen ua ; move 4 , 0 ; ( v0 = 4 ; move v0 , v0 ) )  
[5255] ( move 2 , ua ; pen 3 / ua ; move 3 , ul )  
[5256] ( move 4 / 2 , ua ; pen ua ; move 2 , ul )  
[5257] ( move 2 , ua ; pen ua ; move 4 , 3 / ua )  
[5258] ( pen ua ; move 4 - ul , ul ; move 3 , 2 )  
[5259] ( pen 2 ; move 4 + ul , 3 ; move ul , ul )  
[5260] ( move 2 , ua * ua ; pen ul ; move 4 , 3 )  | ( move 2 , ua * ua ; move 4 , 3 ; v0 = ul )  
[5261] ( move 3 , 4 ; pen ua + 4 ; move ua , ul )  
[5262] ( pen 2 ; move ua , 4 ; move ua , ua / 3 )  
[5263] ( move 3 , ul ; pen 3 ; move ul , ul - 2 )  
[5264] ( pen 2 ; move ul , 4 ; move 3 , ul + ul )  
[5265] ( move ua - 4 , 4 ; move ua , 2 ; pen ul )  
[5266] ( move ul - ua , 2 ; pen ua ; move 4 , 4 )  
[5267] ( move ua - 3 , 3 ; pen ua ; move ul , 4 )  
[5268] ( pen 3 ; move 3 , ua ; move 4 + ul , ul )  
[5269] ( move 3 , 2 ; pen ul ; move ua - ul , 4 )  
[5270] ( pen ua ; move 4 , ua ; move 3 , ul - 4 )  
[5271] ( pen ua ; ( move 3 , ua ; move ua , 2 ) )  
[5272] ( move ua , ul ; pen 4 * 3 ; move ul , 2 )  
[5273] ( pen ul + ul ; move 3 , ua ; move 4 , 4 )  
[5274] ( move 3 , ul ; pen ua ; move 4 - ul , 3 )  | ( pen ua ; ( move ul , 4 ; move 0 - 3 , ua ) )  | ( ( pen ua ; move 2 + ul , 4 ) ; move ul , 3 )  | ( ( pen ua ; move ul , 4 ) ; move ul - 4 , ua ; move ul , 0 )  
[5275] ( move ua , 3 ; move ua / 4 , 2 ; pen ul )  
[5276] ( pen ua ; move ua , ul ; move 3 , 4 * 3 )  
[5277] ( ( move ua , 2 ; pen 2 ) ; move ua , ul )  | ( ( move ua , 3 - ul ; pen 2 ) ; move ua , ul )  
[5278] ( pen ua ; move 4 - ua , ul ; move 3 , 4 )  
[5279] ( ( pen ua ; move ua , ua ) ; move 3 , 2 )  | ( ( pen ua ; move ua , 0 ) ; move 0 , ua ; move 3 , 2 )  
[5280] ( pen ua ; move ul , 4 ; move ul - 4 , 2 )  
[5281] ( move 4 , 4 ; pen ua * 2 ; move ul , ua )  | ( move 3 + ul , 4 ; ( pen ua ; move ul , ua ) )  
[5282] ( move ul - 4 , 2 ; pen 3 ; move ul , ul )  
[5283] ( pen 4 ; move ua , 4 - 2 ; move ul , ul )  
[5284] ( pen 2 ; move ua , ul / ua ; move 4 , 3 )  
[5285] ( move ul , 3 + ul ; pen 4 ; move ua , 4 )  | ( move ul , 4 ; ( pen 4 ; move ua , 4 - ua ) )  
[5286] ( pen 3 ; move 4 , ul ; move ua , 4 + ul )  
[5287] ( move ul - 4 , 4 ; pen ul ; move ua , 2 )  
[5288] ( move 4 , ua - 2 ; pen 4 ; move ul , ul )  
[5289] ( pen ua ; move ul , 4 ; move 3 + ul , 4 )  | ( ( move ul , 4 ; v0 = 4 ; pen ua ) ; move v0 , v0 )  
[5290] ( move 4 , ul + ul ; pen 3 ; move 3 , ul )  | ( move 4 , 2 ; pen 3 ; ( v0 = 4 - ul ; move 3 , ul ) )  
[5291] ( move 4 , ul ; pen 2 ; move ul , 4 + ul )  
[5292] ( move 3 - ua , 4 ; move ul , 4 ; pen ua )  | ( v0 = 4 ; move 3 - ua , 4 ; move ul , v0 )  
[5293] ( pen 3 ; move ua , ua ; move ua , 4 / 3 )  
[5294] ( pen 3 + ul ; move 4 , ua ; move 4 , ul )  
[5295] ( pen 3 ; move ua , 4 ; move 2 / ua , ul )  
[5296] ( pen ua + 4 ; move 4 , 3 ; move ul , ul )  | ( pen ua ; ( move 4 , 3 ; move ul , ul ) )  
[5297] ( move ua , ul - 4 ; pen ul ; move 3 , 3 )  | ( move ua , ul - 4 ; move 3 , 3 ; v0 = 2 )  
[5298] ( pen 2 ; move ua , 3 ; move 4 / ua , ul )  | ( ( pen ul + ul ; move ua , ua + 3 ) ; move ul , ul )  
[5299] ( move ua , ul ; pen 3 ; move 4 , 3 - ul )  
[5300] ( pen 4 ; move ua , 4 ; move ua + ul , 4 )  
[5301] ( move ul , 3 ; pen ul / ua ; move 3 , 3 )  
[5302] ( pen 4 ; move ua - ul , ul ; move 4 , 3 )  
[5303] ( move 4 , ul ; pen 3 ; move 4 + ul , ul )  
[5304] ( pen ua ; move 4 , ua ; move ua , 4 * 4 )  
[5305] ( move 3 , 4 ; move ua , 4 / ua ; pen ua )  
[5306] ( move ua , ul ; pen ul ; move 4 * 2 , 4 )  | ( move ua , ul ; ( v0 = 4 ; move v0 + v0 , v0 ) )  
[5307] ( move ul , ul ; pen ul - 4 ; move 4 , 2 )  
[5308] ( move 3 , 4 / ua ; pen 4 ; move ua , ua )  
[5309] ( pen ua ; move ua , 4 ; move 3 , ul / 3 )  
[5310] ( pen 4 ; move ua , 4 - ua ; move 4 , ul )  
[5311] ( pen ua * 2 ; move 4 , 4 ; move ul , ul )  | ( pen ua ; move ua - 2 , ua + 4 ; move ul , ul )  
[5312] ( move 4 , 4 ; pen ua ; move ua / 2 , ul )  
[5313] ( pen ul ; move ul , 3 ; move 4 + 4 , ul )  
[5314] ( move 3 - ua , 0 ; move 3 / 4 , 4 + 4 )  
[5315] ( pen 4 ; move 4 + ul , 4 ; move ul , ul )  
[5316] ( ( pen ua ; move 2 , 4 ) ; move ua , ul )  
[5317] ( pen ua / 3 ; move ul , 4 ; move 3 , ul )  
[5318] ( move ul , ul ; pen 4 ; move 4 * 2 , ul )  | ( ( move ul , ul ; pen 4 ; move ua + ul , ul ) ; v0 = ul )  
[5319] ( move ul , 4 ; pen 3 ; move ua , ul / 3 )  
[5320] ( move 4 , 4 / ua ; move 3 + 3 , 3 + 3 )  
[5321] ( pen ul ; move ul , 3 ; move 3 , 4 / ua )  
[5322] ( move 4 , 2 ; pen ul / 4 ; move ua , ul )  | ( move 4 , ul + ul ; pen 2 / ua ; move ua , ul )  
[5323] ( move 3 , ul / 3 ; pen ul ; move 3 , ul )  
[5324] ( move 4 , ul / 2 ; pen 4 ; move ua , ul )  
[5325] ( move ul , 4 / ua ; move 3 , ul ; pen 3 )  
[5326] ( move 4 , ua ; ( pen 2 ; move ua , ul ) )  | ( move 4 , ua ; pen 3 - ul ; move ua , ul )  | ( ( pen ua ; pen 2 ) ; move 4 , 0 ; move ua , ul )  | ( move 4 , ua ; ( move 0 , ul ; pen ul + ul ; move ua , ua ) )  
[5327] ( move 2 , 2 / 3 ; move ul - 3 , 3 / 2 )  
[5328] ( move ul , ul - ua ; pen 4 ; move 4 , 4 )  
[5329] ( move 4 - ul , ul ; pen 3 ; move ul , 4 )  | ( move 3 , ul ; pen 4 - ul ; move ul , 4 )  
[5330] ( move 2 , ua * 4 ; move 3 + 2 , 3 / 4 )  
[5331] ( move 4 , ul / 3 ; move 3 , ul ; pen ua )  
[5332] ( move 4 , 4 ; pen ua * ua ; move 4 , ul )  
[5333] ( move 4 - 2 , 4 ; move 4 + 3 , ul - 3 )  
[5334] ( move ul , 3 - 2 ; move 3 * 3 , 4 + 4 )  
[5335] ( pen ua ; ( move 2 , ua ; move 4 , ul ) )  | ( pen 4 + 3 ; move ul + ul , ua ; move 4 , ul )  
[5336] ( ( move 3 , 4 ; pen ua ) ; move ua , ua )  
[5337] ( move 3 / 4 , 3 ; move ua , ul ; pen ul )  
[5338] ( pen 4 ; move ul - 4 , 4 ; move ua , ul )  
[5339] ( pen ul ; move 3 , ul ; move ul , 4 * 4 )  | ( move ua - 3 , ul ; move ul - 2 , ul / 3 )  
[5340] ( pen ul ; move ul , 4 ; move 4 , ua / 3 )  
[5341] ( move 4 / 2 , 3 + 2 ; move 4 , ua / 3 )  
[5342] ( move 4 , 4 ; pen ua ; move 4 , ul / ua )  
[5343] ( move 4 / 2 , 2 * 2 ; move ua , 4 * 3 )  
[5344] ( pen 4 ; move 4 , ul ; move ua , ua / 4 )  
[5345] ( move 3 , ul / 4 ; pen 4 ; move ua , ul )  
[5346] ( move 3 , 4 / 3 ; move ul , ul ; pen ul )  | ( move 0 , 2 / ua ; move 3 , ul ; move ul , ul )  
[5347] ( ( move ul , ul ; pen ua ) ; move 3 , 4 )  | ( move ul , ul ; pen ua ; move 3 , 3 + ul )  | ( ( move ul , ul ; pen ua + 4 ) ; move 3 , 4 ; v0 = ua )  
[5348] ( move 2 * 2 , ua - 4 ; move 4 , 3 / 4 )  
[5349] ( move ua , 0 ; move ul , 2 ; move ua , ul )  
[5350] ( ( pen 2 ; move 4 , ul ) ; move ul , ul )  
[5351] ( pen 3 ; ( move ul , ua ; move 4 , ul ) )  
[5352] ( move 3 , ul / 4 ; pen 4 ; move ul , ul )  
[5353] ( ( move 4 , ul ; pen 4 ) ; move ul , ua )  | ( move 3 + 2 , ul ; pen 4 ; move ul , 4 - ul )  
[5354] ( move ul , 0 ; move ua , ul ; move ul , 2 )  | ( move ul , ua ; move ua , ul ; move 3 - 2 , 2 )  | ( ( move ul , 0 ; move ua , ul ; move ul , ul + ul ) ; pen ul )  
[5355] ( move 2 , ua ; move ua , ul ; move ua , 2 )  
[5356] ( move 4 / 3 , ul - 4 ; move 4 + 4 , 2 )  
[5357] ( move ua , 0 ; move 2 , ul ; move ul , ul )  | ( move ua , ua ; move ul + ul , ul ; move ul , ul )  
[5358] ( move 3 , ua * 3 ; move 4 + 4 , 3 / 4 )  
[5359] ( move 4 , ul ; ( pen ua ; move 4 , ul ) )  | ( move 4 , ul ; ( pen ua ; v0 = 0 ; move 4 , ul ) )  
[5360] ( move ua + 4 , 4 ; move 2 / 4 , 2 / 4 )  
[5361] ( move ul , 0 ; move 2 , ul ; move ua , ul )  | ( move ul , ua ; move 2 , ul ; move ua , ua + ul )  | ( move ul , ua ; ( pen ul ; move 3 - ul , ul ) ; move ua , ul )  
[5362] ( move ul , 0 ; move ua , ul ; move ua , 4 )  | ( move ul , 0 ; move ua , 3 - 2 ; move ua , 4 )  | ( move ul , ua ; move ua , ul ; move ua , 3 + ul )  
[5363] ( move ul , ua ; move ua , ul ; move 2 , 2 )  
[5364] ( pen 2 ; pen 3 ; move ua + 3 , ua - ul )  
[5365] ( move ua , 0 ; move ua , 4 ; move ul , ul )  | ( move ua , ua ; move ua , 3 + ul ; move ul , ul )  
[5366] ( move ua , ul ; move 2 , ul ; move ua , 2 )  
[5367] ( move ua , 2 ; move ul , 2 ; move ul , ul )  
[5368] ( move ua , 0 ; move ul , ul ; move ul , 4 )  
[5369] ( move ua , ua ; move ua , 4 ; move 2 , ul )  
[5370] ( move 3 , ua ; move ua , ul ; move ul , 2 )  
[5371] ( move ua , 2 ; move 2 , ul ; move ul , ul )  
[5372] ( move ua , 2 ; move ul , ul ; move 2 , ul )  
[5373] ( move ul , ul ; move ua , ul ; move 2 , 2 )  
[5374] ( move ua , ul ; move 2 , ul ; move 3 , ul )  
[5375] ( move ul , 0 ; move ul , ul ; move 4 , ul )  
[5376] ( move ua , 2 ; move ul , 3 ; move ul , ul )  
[5377] ( move ua , ul ; move ul , 3 ; move ua , 3 )  
[5378] ( move ua , ul ; move ua , 4 ; move ul , 2 )  
[5379] ( move ua , ul ; move ul , ul ; move 3 , 2 )  | ( move ua , ul ; move ul , ul - ua ; move 3 , 2 )  | ( move ua , ul ; move ul , ul ; move ua - 4 , 2 )  
[5380] ( move 3 , ul ; move 2 , ul ; move ua , ul )  
[5381] ( move ul , ul ; move 2 , ul ; move ul , 2 )  
[5382] ( move ua , ul ; move ul , 3 ; move ul , 2 )  
[5383] ( move ua , 2 ; move 4 , ul ; move ul , ul )  
[5384] ( move ua , 4 ; move 2 , ul ; move ul , ul )  
[5385] ( move ul , 2 ; move 3 , ul ; move ul , ul )  | ( move ul , 2 ; ( move 3 , ul ; move ul , ul ) )  
[5386] ( move ul , ua ; move ul , ul ; move 3 , 3 )  
[5387] ( move 3 , ul ; move ul , 2 ; move ul , ul )  
[5388] ( move ua , ul ; move ul , 3 ; move 3 , ul )  
[5389] ( move ua , ul ; move ul , 4 ; move 2 , ul )  
[5390] ( move ua , ul ; move ua , 3 ; move 4 , ul )  
[5391] ( move ua , ul ; move 2 , ul ; move 4 , ul )  | ( move ua , ul ; ( move 2 , ul ; move 4 , ul ) )  
[5392] ( move 3 , ul ; move ul , ul ; move ua , 3 )  
[5393] ( move 2 , ua ; move ul , ul ; move 4 , ul )  
[5394] ( move 3 , ul ; move ua , ul ; move ua , 4 )  
[5395] ( move 3 , ul ; move 2 , ul ; move ul , ul )  
[5396] ( move 3 , ul ; move ul , 3 ; move ua , ul )  
[5397] ( move ul , 4 ; move ua , ua ; move ua , 4 )  | ( move ua + ul , ua + 4 ; move ua , 4 ; v0 = 0 )  
[5398] ( move ul , 4 ; move ua , ul ; move 2 , ul )  
[5399] ( move 2 , ua ; move ul , ul ; move ul , 4 )  | ( ( move 2 , ua + ua ; move ul , ul ) ; move ul , 4 )  
[5400] ( move ul , ul ; move ua , ul ; move 2 , 4 )  | ( move ul , ua + ul ; move ua , ul ; move 2 , 4 )  
[5401] ( move ua , ul ; move 4 , ul ; move ua , 3 )  
[5402] ( move ul , ul ; move ul , 2 ; move 4 , ul )  | ( move ul , ul - ua ; move ul , 2 ; move 4 , 2 - ul )  
[5403] ( pen ul ; pen 2 ; move ua + ul , 4 * 4 )  
[5404] ( move 4 , ua ; move ua , 4 ; move ul , ul )  
[5405] ( move ua , ua ; move ul , ul ; move 4 , 4 )  
[5406] ( move ul , 2 ; move ul , ul ; move 4 , ul )  
[5407] ( move ul , 4 ; move ul , 4 ; move ua , ua )  | ( move ul , 4 ; v0 = ua ; move ua + ul , 4 )  
[5408] ( v0 = ua + ua ; move ua , ul / v0 )  | ( v0 = ua * ua ; move ua , 3 / v0 ; v1 = ua )  
[5409] ( move ul , 2 ; move 4 , ul ; move ul , ul )  | ( ( move ul , 2 ; move 4 , ul ) ; move ul , ul ; v0 = ua )  
[5410] ( move ua , ua ; move 4 , ul ; move 4 , ul )  
[5411] ( move ul , ul ; move 3 , ul ; move 3 , ul )  | ( move ul , ul ; move 3 , ua + ul ; move 3 , ul - ua )  | ( ( move ul , ul ; move 2 + ul , ul ) ; move 2 + ul , ul )  
[5412] ( move ua , 0 ; pen ua ; move ul + ul , 0 )  | ( ( move ua , ua ; pen ua ; move 2 , 0 ) ; v0 = 0 )  | ( ( move ua , 0 ; pen 4 + ul ) ; move 2 , ua ; pen 0 )  | ( pen 2 ; ( ( move ua , ua ; pen ua ) ; move ul + ul , ua ) )  | ( ( pen ul ; move ua , ua ) ; pen 4 + ul ; move ul + ul , ua )  
[5413] ( move ul , ua ; move 4 , ul ; move ul , 4 )  
[5414] ( move ua , ua - ul ; pen ua ; move 0 , 0 )  | ( move ua , ua - ul ; ( pen 4 ; move 0 , 3 + 2 ) )  | ( move ua , 0 - ul ; pen ua * 4 ; move 0 , 2 - ul )  | ( ( move ua , ua - ul ; pen 0 ) ; pen ua ; move 0 , ul )  
[5415] ( move 4 , ua ; move ul , ul ; move 4 , ul )  
[5416] ( move ua + ul , 0 ; pen ua ; move 0 , ul )  | ( move ua + ul , ua ; pen ua ; move 0 , ul )  | ( move ua + ul , 0 ; pen 4 + 3 ; move 0 , 2 )  | ( move ua + ul , ua ; pen ua + ua ; move 0 , ua )  | ( move ul , 0 ; ( move ua , ua ; pen 4 ) ; move 0 , ul )  | ( move ul , ua ; move ua , ua ; ( pen ua ; move 0 , 4 ) )  
[5417] ( move ul , ul ; move 3 , ul ; move ul , 4 )  | ( move ul , ul ; move 3 , ul ; move ul , ua + 4 )  
[5418] ( move 2 , 2 + 2 ; move ua + 2 , 2 - ua )  
[5419] ( move ua + ul , ua ; pen 0 ; move ua , 3 )  | ( move ua + ul , 0 ; pen ul / ua ; move ul , ul )  | ( move ua + ul , ua + ua ; pen 0 ; move ul , ua + ul )  
[5420] ( move ua , ua + 2 ; pen ua ; move 2 , ua )  
[5421] ( move ua , ua + ul ; pen 0 ; move 2 , ul )  | ( move 4 + 3 , ul ; ( pen 0 ; move 2 , ul - ua ) )  
[5422] ( move 2 + ul , ua + 2 ; move 0 - 2 , 4 )  
[5423] ( pen ua ; move ua , 0 ; move ua - ul , 2 )  | ( pen ua ; move ua , ua + ua ; move ua - ul , 2 )  
[5424] ( move 0 , 4 + 2 ; move ul - ua , 2 + 2 )  | ( v0 = 3 + 2 ; move v0 , v0 + v0 )  
[5425] ( pen ul ; pen 4 ; move ul - ua , 4 / 3 )  
[5426] ( move ul , 0 ; pen 0 ; move ul - ua , ul )  | ( move ul , ua ; pen 0 ; move ul - ua , ul )  
[5427] ( move 3 , 0 - 3 ; move ua + 3 , ua + 2 )  
[5428] ( move ua , ua * ua ; pen ua ; move 0 , 2 )  
[5429] ( move ua , 2 ; pen ua + ua ; move ua , 3 )  
[5430] ( move ua + 3 , ul ; pen ua ; move 0 , ul )  
[5431] ( move ul , 0 - 3 ; pen ua ; move ua , ua )  | ( move ul , ua - 3 ; ( pen ua ; move ua - ul , 0 ) )  
[5432] ( move 2 , ul ; pen ua ; move ul + ul , 0 )  | ( move 2 , ul ; pen ua * 3 ; move ul + ul , 0 )  | ( move 3 - ul , ul ; pen ua + ul ; move 4 / 2 , ua )  
[5433] ( pen ua ; move ul , 0 - 2 ; move ua , ul )  
[5434] ( pen 2 ; move ul , 0 ; move ua , ua - ul )  
[5435] ( move ua + ul , 0 ; pen ua ; move ul , 3 )  | ( move ua , ua ; ( pen ua ; move ul , ua ) )  | ( ( move ua , ua ; pen ua ) ; move 3 / ua , ua )  | ( move ua + ul , ua ; pen ua + 4 ; move ul , 2 + ul )  
[5436] ( move 3 , ua + ua ; pen ua ; move ua , 2 )  
[5437] ( move ua - ul , ul ; pen 0 ; move ua , 2 )  
[5438] ( pen 3 ; move ua , 0 ; move ua , ua * ua )  
[5439] ( move ul , 0 - ul ; pen ua ; move ua , 2 )  | ( ( move ul / 2 , 0 ; pen ua * ua ) ; move ua , ul )  | ( pen ua ; move ua , ul ; ( pen ul - 4 ; move 3 * 2 , 3 ) )  
[5440] ( move ul , 0 ; pen ul - ua ; move ua , 2 )  
[5441] ( move 3 + 2 , 2 ; move 3 + ul , 0 - ul )  
[5442] ( move 0 - ul , 2 + 2 ; move 3 - ua , 3 )  
[5443] ( move 2 + ul , 0 - ul ; move 4 , 2 + 2 )  | ( pen ul ; move ua / 2 , ul - 2 ; move 4 , 3 + ul )  
[5444] ( pen ul + ul ; move ua , 0 ; move ul , 2 )  
[5445] ( move 3 - ua , 0 ; move 0 - 3 , 3 - ul )  
[5446] ( move ua , ua ; pen 0 ; move 4 - ua , ul )  
[5447] ( move 2 , 2 ; pen ua * ua ; move ua , ua )  | ( ( move 2 , 2 ; pen ua * ua ) ; move ua , 0 ; pen ul )  | ( move 2 , ul + ul ; ( pen ua + ua ; move ua , 0 ; pen ua ) )  
[5448] ( v0 = 3 + 2 ; move v0 , v0 / ua )  | ( v0 = 4 + ul ; move v0 , v0 / ua )  
[5449] ( move 3 + 3 , 3 - ul ; move ua , 0 - 2 )  
[5450] ( pen ua ; move 2 , ua + ua ; move 3 , ul )  | ( pen ua * 2 ; move ul + ul , 0 ; move 3 , ul )  
[5451] ( pen ua ; move ua , ua ; move 3 - ua , 2 )  
[5452] ( pen ua ; move 3 - ua , 0 ; move ul , ul )  
[5453] ( move ua , ua ; pen 0 ; move ua - 4 , ul )  
[5454] ( move 3 + 2 , ua ; pen ua ; move ul , ua )  
[5455] ( pen ua - 2 ; move ua , ul ; move ua , 2 )  
[5456] ( pen 3 ; move 2 , ua ; move ua , ua + ul )  
[5457] ( move ul - ua , ua ; pen ua ; move 2 , 2 )  
[5458] ( move ul + ul , 2 ; pen ua ; move 2 , ua )  
[5459] ( move ua + ul , 2 ; move ul , 2 ; pen ua )  | ( move ua + ul , 2 ; move ul , 2 ; v0 = 3 )  | ( move ua + ul , 2 ; move ul , 2 ; move 0 , ul )  | ( move ua , 2 ; move ul , ua * 3 ; move ul , 2 )  | ( move ua + ul , 2 ; move ul , ul + ul ; pen ul )  | ( move ua + ul , ul + ul ; v0 = ul ; move ul , 2 )  | ( move ua + ul , ua + 2 ; v0 = 2 ; move ul , v0 )  | ( move ua + ul , ua + 2 ; move ul , ul + ul ; v0 = 2 )  
[5460] ( move ul , ua ; pen 0 ; move 4 + ul , ua )  
[5461] ( move ua , 0 ; pen ul ; move 3 , ua * ua )  
[5462] ( move ua - 3 , ul ; pen 0 ; move ua , ul )  
[5463] ( move 3 - ua , ua ; move 0 - 2 , 4 + 3 )  
[5464] ( move 4 , ua ; pen 0 ; move ua + ul , ul )  
[5465] ( move ua , 3 ; pen 0 - ul ; move ul , ua )  | ( move ua , ua + 3 ; pen 0 ; move 2 - ul , 0 )  | ( move ua , 4 - ul ; pen ul - ua ; move ul , 0 )  
[5466] ( move ua , ua ; pen 0 ; move ul , 4 + ul )  | ( move ua , 0 ; ( pen 0 ; move ul , 4 ; v0 = ua ) )  
[5467] ( move ua - ul , ul ; pen 3 ; move 0 , ua )  
[5468] ( pen 3 ; move ua + ul , ul ; move ua , 2 )  
[5469] ( move 3 + 3 , 4 + ul ; move 0 - ul , 2 )  
[5470] ( v0 = ua + 2 ; move v0 , v0 / 4 )  
[5471] ( move ua + ul , ul ; pen 4 ; move 0 , ul )  
[5472] ( move ul , ul ; pen ua + 3 ; move ua , 2 )  | ( pen ua + ul ; move ul , ul ; move ua , 2 )  
[5473] ( move 4 , ua - ul ; pen ua ; move 0 , ul )  
[5474] ( move 3 , ua - 2 ; move 3 + 2 , 3 + ul )  
[5475] ( pen ua ; move 4 + ul , 0 ; move ul , ul )  | ( pen ua ; move ua - ul , 0 ; move ul , ul )  | ( pen ua ; move 4 + ul , ua ; move ul , ul )  | ( pen ua ; move ua - ul , ua ; move ul , ul )  | ( pen ua * ua ; move ul , ua ; ( move 4 , 0 ; move ul , ul ) )  
[5476] ( move 2 + ul , ul ; pen ua ; move 2 , ul )  
[5477] ( move 4 - 2 , ul ; move 0 - ua , 4 + 2 )  
[5478] ( move ul - ua , ua ; pen 3 ; move 2 , ua )  
[5479] ( v0 = 3 + 3 ; move v0 , ua / v0 )  | ( pen ul ; v0 = ua * 2 ; move ua , v0 / 3 )  
[5480] ( move ua , 2 - ua ; pen ua ; move ul , 3 )  
[5481] ( pen 3 ; move ua , 0 - ul ; move ul , ul )  
[5482] ( pen 2 + ul ; move ua , ul ; move 2 , ul )  | ( ( pen 3 ; move ua , ul ) ; move 3 - ul , ul )  
[5483] ( move ul , ul ; pen 2 ; move ua + 2 , ul )  
[5484] ( pen ua ; move ul , ua ; move 3 + 2 , ul )  
[5485] ( move ul , 3 ; pen 0 ; move ua - ul , ul )  | ( move 3 - 4 , ua ; ( pen 0 ; move 4 + ul , 4 ; pen ua ) )  
[5486] ( v0 = 4 + 2 ; move v0 , v0 / ua )  | ( v0 = 3 / ua ; move ua , v0 + v0 )  | ( v0 = 3 / ua ; move 0 , v0 ; move ua , v0 )  
[5487] ( pen ul ; move ua , 2 ; move ua + ul , 3 )  | ( pen ul / 2 ; move ua , 2 ; move ua + ul , 3 )  | ( move ua , ul + ul ; move ua + ul , 4 - ul ; v0 = ua )  
[5488] ( move ua + 2 , 3 - ua ; move 4 , 3 + 2 )  
[5489] ( move 2 + ul , 3 ; pen ua ; move ul , ua )  
[5490] ( pen ua ; move ul , ul ; move ua , 3 + 2 )  
[5491] ( pen ua ; move ua , 3 + ul ; move 2 , ul )  
[5492] ( move 3 + ul , ul - 4 ; move 0 - 2 , 2 )  
[5493] ( move ul / ua , ua ; pen 0 ; move ua , 3 )  
[5494] ( move 3 + 2 , 3 ; move ua - 2 , 4 + ul )  
[5495] ( pen ua ; move 2 , ul ; move 3 - ua , ul )  
[5496] ( move 2 - ua , 4 ; pen ua ; move ul , ua )  
[5497] ( pen ua ; move ua , ua - 3 ; move 3 , ul )  | ( pen ua ; move ua , ua - 3 ; move 4 - ul , ul )  
[5498] ( move 4 , ul ; pen 0 ; move ua - ul , ul )  
[5499] ( move 4 , 0 - 2 ; move 4 + ul , ua + 4 )  
[5500] ( pen ua ; move ua , ua ; move ua , 3 / 2 )  
[5501] ( pen ua ; move ua , 2 ; move ul , 4 + ul )  
[5502] ( pen 2 ; move ul , 3 ; move ua + ul , ul )  
[5503] ( pen ua ; move 4 , ul ; move 2 , ua + ul )  
[5504] ( move ua , ua ; pen ua ; move 2 , ua / 3 )  
[5505] ( move 4 , 2 ; pen ua ; move ua + ul , ul )  
[5506] ( pen ua ; move ua , ul - 3 ; move ul , 2 )  | ( pen ua - ul ; move ua , 2 - 4 ; v0 = 3 )  
[5507] ( move ua , ul - 2 ; pen ua ; move ul , 3 )  
[5508] ( move ua + ul , ua ; pen 2 ; move ul , 4 )  
[5509] ( move ua , 3 * 3 ; move 4 - ua , 0 - 2 )  
[5510] ( move 3 , ua ; pen 3 ; move ua + ul , ul )  | ( ( move 3 , 0 ; pen 3 ) ; move ua + ul , ul ; move 0 , 0 )  | ( ( move 3 , ua ; pen 3 ) ; move ua + ul , ul ; v0 = 2 )  
[5511] ( pen ua ; move ua + 4 , ul ; move ua , 3 )  
[5512] ( move ua , ua + ua ; pen 3 ; move 4 , ul )  
[5513] ( pen ua ; move ul - 3 , 2 ; move ua , ul )  
[5514] ( move 3 + ul , ul ; move 3 + 3 , 3 + 2 )  
[5515] ( pen 4 ; move ul , 0 - ul ; move ua , ul )  | ( pen 3 ; move ul , ua - ul ; move ua , ul )  
[5516] ( move 2 - 4 , ua ; move 3 - ul , 0 - 3 )  | ( move 3 , ua / 2 ; pen 2 - ul ; move ul , ul / 4 )  
[5517] ( move ua , ul ; pen ul - 2 ; move 3 , ua )  | ( move ua , ul ; pen ul - 3 ; move 3 , ua )  
[5518] ( move 4 + ul , 2 ; pen ua ; move ua , ul )  
[5519] ( move ul , ul - 2 ; pen 3 ; move ua , ua )  | ( pen 3 ; move ua + ul , 0 - ul ; v0 = 4 + ul )  
[5520] ( pen ua / 2 ; move ua , ua ; move ua , 3 )  
[5521] ( pen ua ; move ul , 2 ; move 3 + ul , ul )  | ( pen ua * ua ; move ul , 3 - ul ; move 4 , ua + ul )  
[5522] ( pen ua ; move 3 , ua ; move ul - ua , 3 )  
[5523] ( move ua , 4 ; pen ul ; move ua + ul , 2 )  
[5524] ( move ua , ul - 4 ; pen 0 ; move ul , ul )  
[5525] ( move ua - ul , 2 - 4 ; move 2 , 3 + 2 )  
[5526] ( move 2 , 4 + 2 ; move 4 + ul , ua + 4 )  
[5527] ( pen ul ; move ua - ul , ua ; move 4 , 2 )  | ( move ua - ul , ua * 4 ; move 4 , ua + 2 )  
[5528] ( pen 2 ; move ua , ul ; move ul - 3 , ul )  
[5529] ( move ul , 2 ; pen ua - ul ; move 4 , ua )  | ( move ul , 2 ; ( pen 4 ; move 3 + ul , ua ) )  
[5530] ( move 2 , ul + ul ; pen ua ; move 4 , ul )  
[5531] ( move 3 , ua / 2 ; pen ua ; move ua , ul )  
[5532] ( move ul , 3 ; pen 2 / ua ; move ua , ua )  
[5533] ( move 3 / 2 , ua ; move ua + 3 , 2 - 3 )  
[5534] ( pen ul + ul ; move ul , 2 ; move 3 , ul )  
[5535] ( pen 2 ; move 3 , ua - ul ; move ul , ul )  
[5536] ( move ua , 4 ; pen ua ; move 4 - ua , ua )  | ( move ua , 3 + ul ; pen ua ; move 4 - ua , ua )  
[5537] ( pen ua ; move ua , ul ; move 4 , ul - 2 )  
[5538] ( move ul + ul , 3 ; pen 3 ; move ua , ul )  
[5539] ( move 3 - ul , 2 ; move 4 + 2 , 3 + ul )  
[5540] ( pen ua ; move ul , 2 ; move 4 + ul , ul )  | ( pen 4 + ul ; move ul , 2 ; move 3 + 2 , ul )  
[5541] ( v0 = 3 * 3 ; move v0 , v0 / ua )  
[5542] ( pen ua ; move 4 , ul ; move 2 - ua , ul )  
[5543] ( move 3 - ua , ul ; move 2 , ul ; pen ul )  | ( move 3 - ua , ul ; ( move 2 , ul - ua ; v0 = ua ) )  
[5544] ( move ul - ua , 4 ; move ua , 3 ; pen ua )  
[5545] ( move 0 - 3 , ul - ua ; move 3 , 3 * 3 )  
[5546] ( move ul , 0 ; pen ul ; move ua , 4 / ua )  | ( move ul , 0 ; v0 = 4 ; move ua , v0 / ua )  | ( ( move ul , ua ; v0 = ua ) ; move v0 , 4 / v0 )  
[5547] ( move 3 - ul , 0 ; move 4 - 2 , ua - 4 )  
[5548] ( move 4 , ul ; pen ul - 2 ; move ua , ua )  
[5549] ( move ul , 2 ; pen ua * ua ; move 3 , ul )  | ( move 3 - 2 , 2 ; pen 3 * 2 ; move 3 , ul )  
[5550] ( move ua - 3 , ul ; pen 4 ; move ua , ua )  
[5551] ( move 3 + 2 , 3 * 3 ; move 3 , ua + ul )  
[5552] ( move 3 - ua , ua + 2 ; move 2 , 2 / 4 )  
[5553] ( pen 4 ; move ul , 0 ; move ua , ul / ua )  
[5554] ( move 3 , ua - ul ; pen ua ; move 3 , ul )  | ( move 3 , ul - 2 ; pen ua + ul ; move 3 , ul )  
[5555] ( pen 4 ; move ul , 3 ; move ua , ua + ul )  | ( pen 4 + ul ; move ul , 3 ; move ua , ul )  | ( ( pen ua ; move ul , 3 ) ; move ua , ul )  | ( pen ua + ul ; move ul , 3 ; move ua , ul )  | ( pen ua ; move ul , ul - 4 ; move ua , 4 + 3 )  | ( ( pen ua ; move ul , 3 ; move ua , ul ) ; pen ul )  
[5556] ( move 3 + ul , 0 ; move 0 - 4 , ul / 4 )  
[5557] ( move 3 , 2 - ua ; move 3 - ua , 4 - 2 )  
[5558] ( move 2 - ua , ul ; pen 4 ; move ul , ua )  
[5559] ( move ul / 2 , ul ; pen ua ; move ua , 2 )  | ( move ul , ul / 3 ; pen ua * 4 ; move 4 + 2 , 3 * 3 )  
[5560] ( pen ua ; move 3 , 4 ; move ul , ua + ul )  | ( pen ua + ul ; ( move 3 , 2 + 2 ; move ul , ul ) )  
[5561] ( move 3 , ul ; pen 2 ; move ul + ul , ul )  
[5562] ( move ul , ua ; pen 2 / ua ; move ua , 3 )  
[5563] ( move 4 , 3 ; pen ua ; move ua + ul , ul )  
[5564] ( move 4 - ul , 0 ; move 4 + ul , 4 + 2 )  
[5565] ( move ua , ua - ul ; pen ul ; move 3 , 3 )  | ( move ua , 0 - ul ; v0 = 3 ; move v0 , v0 )  | ( ( move ua , ua - ul ; move ul , 4 - ul ) ; move ul , ua )  
[5566] ( pen ua + 2 ; move ul , ul ; move 4 , ul )  | ( pen ua ; ( move ul , ul ; move 4 , ul ) )  | ( ( pen ua ; move ul , 2 - ul ) ; move 4 , ul )  
[5567] ( pen ua ; move 4 , ua ; move ua , ua - 4 )  
[5568] ( move ua , ua - 2 ; pen 4 ; move ul , ul )  
[5569] ( move ua + ul , ul ; pen 4 ; move 2 , ul )  | ( move ua + ul , ua + ul ; ( pen ua ; move 2 , ul ) )  
[5570] ( move ua , 2 ; move ul - ua , 4 ; pen ul )  | ( move ua , 2 ; ( move ul - ua , 4 ; move 4 , ua ) )  
[5571] ( move ul , 2 ; pen ua ; move 4 , ul - ua )  | ( move ul , ul ; ( pen ua ; ( move 4 , 2 ; v0 = 4 ) ) )  | ( move ul , ua + 2 ; ( pen ua ; move ul , ul ; move 3 , 0 ) )  
[5572] ( move ul , ul ; pen 2 ; move 3 + ul , ul )  | ( move ul , ul ; pen ul + ul ; move 4 , ul )  
[5573] ( move 4 , ua + 3 ; pen ua ; move ul , ul )  | ( move 4 , 3 ; pen ua * ua ; move ul , ul )  | ( ( move 3 + ul , 3 ; pen ua ; move ul , ul ) ; pen 2 )  
[5574] ( move 3 + ul , 3 + ul ; move 4 , 3 + 2 )  
[5575] ( pen ua ; move ul , ua + 3 ; move 4 , ul )  | ( pen ua / 3 ; pen ua ; ( move ul , 3 ; move 4 , ul ) )  
[5576] ( move 4 , 3 + 2 ; move 4 + ul , 2 + ul )  | ( ( move 0 , ul ; move 2 * 2 , 4 ) ; move 4 + ul , 3 )  
[5577] ( move 3 , ul + ul ; pen ua ; move ul , 4 )  
[5578] ( move 4 + ul , ul ; pen ua ; move ua , 4 )  
[5579] ( pen 2 ; move ua , ul ; move ul - 4 , ul )  
[5580] ( move ua , ul ; pen ua ; move ul , 4 * 2 )  
[5581] ( move ua , 4 ; pen ul ; move ua - 3 , ul )  | ( move ua , 4 ; move ua - 3 , 4 - 3 ; pen ul )  
[5582] ( move 4 , ul - 3 ; pen ua ; move ul , ua )  
[5583] ( move ul - ua , 3 ; pen 4 ; move ua , ul )  
[5584] ( move 0 - 3 , 4 + ul ; move 4 + 4 , ul )  
[5585] ( move ul , ua - 4 ; move ua , 4 ; pen ua )  
[5586] ( move ul / 4 , 0 - 3 ; move 3 + 2 , ul )  
[5587] ( move ul - 3 , 2 + 2 ; move 3 , 3 / ua )  
[5588] ( pen ul ; move ua + 3 , ul ; move ul , 4 )  | ( move ua + 3 , ul ; v0 = ul ; move v0 , 4 )  | ( v0 = ul - ua ; move ua + 3 , ul ; move ul , 4 )  | ( move ua + 3 , ul ; move ul , 3 + ul ; pen 4 - ul )  | ( move ua + 3 , ul ; ( move ul , 3 + ul ; v0 = ul ) )  
[5589] ( move 2 / 4 , 2 ; move ua + 2 , 2 / ua )  
[5590] ( move 4 - ua , ua ; move ua , 4 ; pen ul )  | ( ( v0 = 4 - ua ; move v0 , 0 ) ; move ua , v0 )  
[5591] ( move 4 , 3 ; move ua + ul , ul ; pen ul )  | ( move 4 , 3 ; v0 = ul ; move v0 + ua , v0 )  | ( move 4 , 3 ; move ua + ul , ul ; v0 = ua + 3 )  | ( move 4 , 3 ; ( move ul , ul ; move ua , ua ) ; v0 = 4 )  
[5592] ( move 4 + ul , ul - 2 ; move 3 * 2 , 2 )  
[5593] ( move 4 , 4 / 2 ; move 2 - ua , 0 - ul )  
[5594] ( move 3 , ul ; pen ua ; move 4 + ul , ul )  
[5595] ( move 2 - 3 , 3 * 2 ; move ua + 4 , ul )  | ( move 0 , 3 ; move ul , ua ; move ua + 4 , 4 )  | ( move ul , 3 ; v0 = ua + 4 ; move v0 , v0 )  
[5596] ( move 2 + ul , 3 * 2 ; move 3 , 4 + ul )  
[5597] ( move 2 - ua , 4 * 2 ; move 2 - ul , 3 )  
[5598] ( move 0 - 3 , 4 - ul ; move 4 , ua - 3 )  
[5599] ( move 3 , ua ; pen ul / ua ; move 3 , ua )  
[5600] ( move 2 , ul ; pen ua ; move ua , ul / 3 )  
[5601] ( pen ua - 4 ; move ua , ul ; move ua , 4 )  
[5602] ( pen 4 ; move ua , ua + ul ; move ul , 4 )  
[5603] ( pen ua + 4 ; move ul , ul ; move ua , 4 )  | ( pen ua * 3 ; move ul , ul ; move ua , 4 )  | ( pen ua ; ( move ul , ul ; move ua , 4 ) )  
[5604] ( move ua , ul / 2 ; pen 3 ; move ul , ua )  | ( move ua , ul / 2 ; pen 3 ; move ul / 2 , 0 )  
[5605] ( pen 4 ; move ua , ua ; move ul , 4 + ul )  
[5606] ( move 2 , ul ; pen ul ; move ua , ua / 3 )  
[5607] ( move ua + 3 , 3 - 4 ; move ul , 3 + 3 )  
[5608] ( move 2 - 4 , 4 ; move ul - ua , 3 + 2 )  
[5609] ( pen 4 ; move 3 , ua * ua ; move ua , ul )  
[5610] ( move ua , ul / 4 ; pen ua ; move 2 , ua )  
[5611] ( move 3 , ua * ua ; pen 4 ; move ul , ua )  
[5612] ( pen ul + ul ; move 4 , 3 ; move ua , ul )  
[5613] ( move ua , ua * ua ; move 4 , 4 ; pen ua )  | ( pen ul ; move ua , ua * ua ; move 4 , 3 + ul )  
[5614] ( move 4 + 2 , 4 - 2 ; move ua , ul - 4 )  
[5615] ( move ua + 4 , 3 - 2 ; move 4 , ul - 3 )  
[5616] ( move 4 , ul ; pen ua * ua ; move ua , 4 )  
[5617] ( pen 3 ; move ua , ul ; move 3 / ua , ul )  | ( pen 2 + ul ; move 4 + ul , ul ; move ul , ul / 4 )  
[5618] ( move 4 + ul , ul - 2 ; move 2 , 4 * 2 )  
[5619] ( pen 3 ; move ua , ul / 2 ; move ul , ul )  
[5620] ( move ua + 2 , 3 - 4 ; move 3 , ul / 2 )  
[5621] ( pen ul + ul ; move 3 , ul ; move ul , 4 )  | ( pen 2 ; move 2 + ul , ul ; move ul , ua + 4 )  | ( ( pen 2 ; move 3 , ul ; move 0 , ul ) ; move ul , 3 )  
[5622] ( move 3 , 4 - ua ; move ua + 3 , 4 * 2 )  
[5623] ( pen ul + ul ; move 4 , ua ; move 4 , ul )  
[5624] ( pen 3 ; move ua , 4 - ul ; move ul , ul )  
[5625] ( move 0 - ua , 3 * 2 ; move 4 , ul / 3 )  
[5626] ( move ua , 2 ; move ul , ua / 4 ; pen ul )  | ( ( move ua , 2 ; move 2 - ul , ua / 4 ) ; pen ua + ua )  | ( move ua , 2 ; pen ul ; ( move ul , 3 / 2 ; pen 0 - 3 ) )  
[5627] ( move 2 , 3 + ul ; move 3 - ul , 4 * 2 )  
[5628] ( move 3 , ua ; pen ul / ua ; move 3 , ul )  
[5629] ( move ua / 3 , 3 ; move 4 + 2 , 3 + ul )  
[5630] ( pen ua / 3 ; move ua , ua ; move 4 , ul )  
[5631] ( move ul , ul ; pen ul + ul ; move 3 , 4 )  
[5632] ( move 4 / 2 , ua + ul ; move 3 * 2 , 2 )  | ( move 4 / 2 , ul ; pen ul ; move 4 + 2 , 2 )  
[5633] ( pen 4 ; move ul , ul ; move ua , 2 / ua )  
[5634] ( move 3 * 2 , ul / ua ; move 3 , 0 - 4 )  
[5635] ( pen ua ; move 4 , ul ; move 4 , ul + ul )  
[5636] ( move 2 , 4 - 3 ; move 4 + ul , ua - 3 )  
[5637] ( move 3 , 3 * 2 ; move 4 + ul , 2 - ul )  
[5638] ( move 3 + ul , 4 ; move ua - 2 , 4 - 3 )  
[5639] ( move ul , ul ; pen 4 + ul ; move 3 , ul )  | ( move ul , ua + ul ; pen ua ; move 3 , ul )  | ( move ul , ul ; ( pen ua + ul ; move 3 , ul ) )  | ( pen ul ; ( move ul , ul ; pen ua ; move 3 , ul ) )  
[5640] ( move 4 , ua - ul ; pen 4 ; move ul , ua )  
[5641] ( move ul - 4 , 0 ; move ul - 4 , 4 + 3 )  
[5642] ( pen 2 ; move ua , ua ; move ul , ul / 4 )  
[5643] ( move 2 , ul ; move ua , ul / ua ; pen 4 )  
[5644] ( move ul , 4 - ua ; move 3 + 2 , 4 + 4 )  
[5645] ( move 3 , 2 - ul ; move 2 - 4 , ul / 2 )  
[5646] ( move 4 + ul , 2 ; move 4 + 2 , 4 / ua )  
[5647] ( move 3 + 3 , 3 - ul ; move 4 , 4 + ul )  
[5648] ( move ul , 4 ; pen ul ; move ul - ua , 4 )  | ( move ul , 4 ; move ul - ua , 4 ; pen ua + ul )  
[5649] ( move 3 + 3 , 4 * 3 ; move 3 - ua , ul )  
[5650] ( move 4 * 2 , ul + ul ; move 2 - 3 , 4 )  
[5651] ( move 3 , ul ; ( pen ua ; move ua , ua ) )  | ( move 4 , ua + ul ; pen ua ; move ua , ua )  | ( ( move 2 + ul , ul ; pen ua ) ; move ua , 0 )  | ( move 3 , ul ; ( pen ua + 2 ; move ua , ua ) )  | ( move ua - 3 , ul ; pen ua ; move ua , ua * 2 )  | ( move ul + ul , ul ; pen ua ; move ua + ul , ua )  
[5652] ( move 4 , 4 / ua ; pen ua ; move ul , ua )  
[5653] ( move 4 + ul , 0 - 4 ; move 2 , ul / 4 )  
[5654] ( ( move ua , 2 ; pen ua ) ; move ul , ul )  | ( move ua , ua + 2 ; pen ua ; move ul , ul )  | ( move ua , ul + ul ; pen ua ; move ul , ul )  | ( move ua , 2 ; pen ul ; ( pen ua - ul ; move ul , ul ) )  
[5655] ( move 4 + 3 , 4 + 3 ; move ua , ul - 4 )  
[5656] ( move ua - 4 , 3 * 2 ; move 3 * 2 , ul )  
[5657] ( move ul , 4 ; pen ua ; move 4 - ul , ul )  | ( move ul , ua + 4 ; ( pen ua ; move 3 , ul ) )  
[5658] ( move 2 , 4 - 2 ; move 3 - ul , ul / 2 )  
[5659] ( move 4 , ua / 3 ; move ul - 2 , 4 - 2 )  
[5660] ( move ul + ul , 3 - 4 ; move 3 , 2 / 3 )  
[5661] ( move 4 - ua , ua ; move 4 + 4 , 4 + 4 )  
[5662] ( ( pen ua ; move ua , ul ) ; move ua , 4 )  | ( pen 3 + 3 ; move ua , ul - ua ; move ua , 3 + ul )  | ( ( pen ua ; move ua , ul ) ; move ua , 4 ; v0 = ua + ul )  
[5663] ( move 4 , ua ; pen ua ; move ul , ul / 4 )  
[5664] ( move ua , ul / 4 ; move ul , ul ; pen 3 )  | ( move ua , ul / 4 ; ( v0 = ul ; move v0 , ul ) )  
[5665] ( pen ua ; ( move 3 , ul ; move ua , ul ) )  | ( pen ua + 3 ; move 3 , ul ; ( move ua , ul ; pen 2 ) )  
[5666] ( move 3 , 2 * 2 ; move ul - 3 , ua / 4 )  
[5667] ( pen ua ; move ul , 4 / ua ; move 4 , ul )  
[5668] ( move 3 * 2 , ua ; move 2 - 4 , ul / 3 )  
[5669] ( move ul , ul ; pen ul - 4 ; move 4 , ul )  | ( ( move ul , ul ; pen 0 - ua ) ; move 4 , ul )  | ( move ul , ul ; pen 0 ; ( move 0 , 0 ; move 4 , ul ) )  | ( v0 = ul ; ( move v0 , ul ; pen 0 ) ; move 4 , v0 )  
[5670] ( move 4 + ul , ul / 4 ; move 3 , 3 + 2 )  
[5671] ( move 3 , ul - 4 ; move ul - 4 , 4 + 2 )  
[5672] ( move ua , ul ; pen 4 ; move 4 , ul / ua )  
[5673] ( move 3 * 3 , 4 + 3 ; move ul / 2 , ul )  
[5674] ( move ul - ua , 4 / 3 ; move 4 , 2 * 2 )  
[5675] ( move ul , ua / 4 ; move 4 , ul ; pen ul )  
[5676] ( move 3 , 3 * 2 ; move ul + ul , 3 / 4 )  
[5677] ( move 2 , 3 / 4 ; move ul - 4 , 3 + ul )  
[5678] ( move ul , ua * 2 ; move 4 + 3 , 4 * 4 )  | ( move ul , 0 ; move 0 , 4 ; move ua + ul , 4 * 3 )  
[5679] ( move ul , ul / 4 ; move 3 , ul ; pen ul )  | ( move ul , ul / 4 ; v0 = 3 ; move v0 , ul )  
[5680] ( move 3 * 3 , 4 * 3 ; move ul , 3 + ul )  
[5681] ( move 4 / 2 , ul ; move 4 + 4 , 4 + ul )  
[5682] ( move ua , 4 * 4 ; move ua - 2 , 4 / 3 )  
[5683] ( move 4 + ul , 4 ; move 4 / 2 , ul / 2 )  
[5684] ( move 4 , 3 / 4 ; move 2 / 3 , ua - ul )  
[5685] ( move 3 , 4 / 2 ; move ua / 4 , 3 - ul )  
[5686] ( pen ua ; move ua + 3 , ua - 4 ; pen ua )  
[5687] ( move ul / 2 , 4 ; move 4 * 2 , ua / 4 )  
[5688] ( move ul / 3 , ul / 3 ; move 4 , 4 + 3 )  
[5689] ( move ua , ua ; move ua , 3 ; move ul , ul )  | ( ( move ua , 0 ; move ua , ua + 3 ) ; move ul , ul )  | ( ( move ua , 0 ; move 0 , 2 ; move ua , ul ) ; move ul , ul )  
[5690] ( move ua , ua ; move ul , 3 ; move ul , ul )  | ( ( move ua , 0 ; move ul , 3 ) ; move ul , ul )  | ( move ua , 0 ; move ul , 3 ; move ul , ua + ul )  | ( move ua , ua ; ( move ul , 3 ; v0 = 2 ; move ul , ul ) )  
[5691] ( move ua , ul ; move ul , ul ; move 2 , ul )  | ( move ua , ul ; move ul , ul ; move 2 , 4 - 3 )  | ( move ua , ul ; move ul , ua + ul ; move 2 , ul )  
[5692] ( move ul , 2 ; move ua , ul ; move ul , ul )  
[5693] ( move 3 , ua ; move ul , ul ; move ua , ul )  | ( ( move 3 , ua ; move ul , ul ) ; move ua , ul )  | ( move 3 , 0 ; ( move 2 - ul , ul ; move ua , ul - ua ) )  | ( move 3 , 0 ; ( move ul , ul ; move ua , ul ; v0 = ul ) )  | ( move 3 , ua ; ( move ul , ul ; move ua , ul ; v0 = 4 ) )  
[5694] ( move ua , ul ; move ul , 2 ; move ul , ul )  
[5695] ( move ua , ua ; move ul , ul ; move ua , 4 )  | ( ( move ua , 0 ; move ul , ul ) ; move ua , 4 )  | ( move ua , ua * 3 ; move ul , ul ; move ua , 4 )  | ( ( move ua , ua ; move ul , ul ) ; move ua , 4 ; pen 4 + ul )  
[5696] ( move ua , 2 ; move ul , ul ; move ul , ul )  | ( ( move ua , 2 ; move ul , ul ) ; move ul , ul )  | ( move ua , ul + ul ; move ul , ul ; move ul , ua + ul )  | ( move ua , ul + ul ; ( move ul , 3 - 2 ; move ul , ul ) )  
[5697] ( move 4 , 4 - ul ; move ua / 4 , 4 * 4 )  
[5698] ( move ua , ul ; move 2 , ul ; move ul , ul )  | ( move ua , ul ; move ul + ul , ul ; move ul , ul )  | ( ( move 0 , 0 ; move ua , ul ; move 2 , ul ) ; move ul , ul )  
[5699] ( move ua , ua ; move ul , ul ; move 3 , ul )  
[5700] ( move 2 , ua ; move ul , ul ; move ul , ul )  | ( move 2 , ua ; move ul , ul ; move 2 - ul , ul )  | ( move ul + ul , ua * 4 ; move ul , ua + ul ; move ul , ul )  
[5701] ( move ul , ul ; move ul , 2 ; move ua , ul )  | ( ( move 2 , ul ; move ul , 2 ; move ua , ul ) ; pen 2 )  
[5702] ( move ul , ul ; move ul , ul ; move ua , 2 )  
[5703] ( move ul , 3 ; move ua , ul ; move ul , ul )  
[5704] ( move ul , ua ; move ul , ul ; move ua , 4 )  | ( move ul , ua ; ( move ul - 2 , 4 ; move ua , ul ) )  
[5705] ( move ul , ul ; move 2 , ul ; move ul , ul )  | ( move ul , ul - ua ; move 2 , ul ; move ul , ul )  | ( move ul , ul ; ( move 2 , ua + ul ; move ul , ul ) )  
[5706] ( move ua , ua ; move 4 , ul ; move ul , ul )  | ( move ua , ua * 4 ; move 4 , ul ; move ul , ul )  | ( move ua , ua + ua ; move 4 , ul ; move ul , ua + ul )  | ( move ua , ua ; move 4 , ua + ul ; move ul , ul - ua )  
[5707] ( move 3 , ul ; move ua , ul ; move ul , ul )  | ( ( move 3 , ul ; move ua , ul ) ; move ul , ul )  
[5708] ( move ua , ua ; move ul , 4 ; move ul , ul )  
[5709] ( move 4 , ua ; move ul , ul ; move ua , ul )  
[5710] ( move ua , 4 ; move ul , ul ; move ua , ul )  | ( move ua , 4 ; move ul , ul ; move ua , 2 - ul )  
[5711] ( move ua , 4 ; move ul , ul ; move ul , ul )  
[5712] ( move 3 , ul ; move ul , ul ; move ul , ul )  
[5713] ( move ua , ul ; move ul , ul ; move 4 , ul )  
[5714] ( move ul , ul ; move ul , ul ; move 4 , ul )  
[5715] ( pen ua ; move 0 - ua , ua ; move ua , ul )  
[5716] ( move ua + 2 , ul ; move ua + 2 , 0 - 4 )  
[5717] ( move ua - ul , ua ; pen 0 ; move ua , ul )  
[5718] ( move ul - ua , 0 ; move 0 - 2 , 4 - ul )  
[5719] ( move ua - ul , ul ; move 3 + 2 , 0 - 2 )  
[5720] ( move ul - ua , ua ; pen ua ; move ul , 0 )  
[5721] ( move ul - 2 , 0 ; move 2 - ua , 3 + ul )  
[5722] ( move ua , 3 - ul ; move ua + 3 , 2 + 2 )  | ( move ua , ua + 2 ; move 3 , 4 ; move ua , ua + ua )  | ( v0 = ua + 3 ; move ua , 2 ; move v0 , v0 + ul )  
[5723] ( pen ua ; move ua , ul ; move ua , ua - 2 )  
[5724] ( move ua , ul ; pen ua ; move ua + ul , 2 )  
[5725] ( pen ua ; move 2 , ua - ul ; move ua , ua )  | ( v0 = ua - ul ; pen v0 ; move v0 + 4 , v0 )  
[5726] ( move 2 - ua , ua ; move 3 + ul , 3 + 2 )  
[5727] ( move 2 + ul , 2 + ul ; move 2 - ua , 3 )  | ( move 3 , 3 ; move 0 - 4 , 2 + ul ; pen 4 )  
[5728] ( move 0 , 2 + ul ; move ua + 3 , ul / 2 )  
[5729] ( move ul , ul ; pen 0 ; move ua - ul , ua )  
[5730] ( move 0 - 2 , 3 ; move ua + 4 , ul - ua )  
[5731] ( move ul , ul ; pen 0 ; move ul - ua , ul )  
[5732] ( move ul - 4 , 0 ; move ua / 2 , ua + 2 )  | ( move ul - 4 , ua ; move 4 - ul , ul + ul ; pen 0 )  
[5733] ( move ua + ul , 2 ; pen ua ; move ul , ul )  
[5734] ( pen ua ; move 2 , ul ; move ua , ua - ul )  
[5735] ( move ul , ul / ua ; pen 0 ; move ua , ua )  
[5736] ( pen ua ; move ul , ua ; move 2 - ua , ul )  
[5737] ( v0 = ua - ul ; move v0 , 2 / v0 )  
[5738] ( move ua - 4 , 0 ; move 3 - ul , 2 - ua )  | ( ( move ua - 4 , 0 ; move ul , ul + ul ) ; move ul , ua )  
[5739] ( move ul / 2 , 2 ; move 2 - ua , 0 - ul )  
[5740] ( move ua - 3 , ua + 3 ; move ul , 3 + 2 )  
[5741] ( move ua , 0 - ul ; move 2 + ul , 4 * 2 )  
[5742] ( pen ua ; move ua , ul ; move ua - ul , 2 )  
[5743] ( pen ua + ua ; move ul , ua ; move 3 , ul )  
[5744] ( pen ua ; move ua , 2 ; move ul , ul + ul )  
[5745] ( move 0 - ua , 3 ; move 3 - ua , 3 - ul )  
[5746] ( move ua , ua + ul ; pen ua ; move ul , 3 )  | ( move ua , ul - ua ; pen ua ; move ul , 3 )  | ( move ua , ul ; pen ua - ul ; move ul , 4 - ul )  | ( ( move 4 + ul , ul ; pen ua ) ; move 0 , ua ; move ul , ua )  
[5747] ( move 0 , ua ; pen ul / ua ; move ua , ul )  
[5748] ( move ua , ua ; move 3 - ua , ul ; pen ua )  
[5749] ( move ua + 2 , 4 + 2 ; move 2 - ul , ul )  | ( pen ul ; ( move ua + 2 , 3 * 2 ; move ul , ul ) )  
[5750] ( move ul - ua , 2 - 3 ; move 2 + 2 , ul )  | ( move ul - ua , ua - ul ; move 4 , ul ; pen ua )  
[5751] ( v0 = ua + ul ; move v0 , 3 / v0 )  | ( move 0 , 2 ; v0 = 4 + 3 ; move v0 , v0 + 4 )  
[5752] ( v0 = ua + 4 ; move v0 , ua / v0 )  
[5753] ( move ua , 3 + 2 ; move 4 + ul , 2 + ul )  
[5754] ( move 3 + ul , 0 ; move ua - 4 , 2 - ul )  
[5755] ( pen ua ; move ua + ul , ul ; move 2 , ul )  
[5756] ( pen ul + ul ; move ua , ul ; move 2 , ul )  
[5757] ( move 0 - 3 , 4 ; move ua + ul , 3 - ul )  
[5758] ( pen ua ; move ul + ul , ul ; move 2 , ul )  | ( pen ua ; move 2 , ul ; move ul + ul , ul - ua )  | ( ( pen ua * ua ; move 2 , ul - ua ) ; move 2 , ul )  
[5759] ( move ul , ua ; pen ua ; move ua + 4 , ul )  | ( pen 4 ; ( move ul , ua ; move 4 , ul ) ; move ua , ua )  
[5760] ( move 4 + ul , ua ; pen ua ; move ua , ul )  | ( move 3 + 2 , 0 ; pen ua + 3 ; move ua , ul )  
[5761] ( v0 = 4 + ul ; move v0 , ua / v0 )  | ( v0 = 4 + ul ; move v0 , ua / v0 ; pen v0 )  | ( v0 = 3 + 2 ; v1 = v0 ; move v1 , v1 / 4 )  
[5762] ( pen ua ; move ua + ul , ul ; move ua , 4 )  
[5763] ( move 2 , ua / 2 ; move 3 + 2 , ul + ul )  
[5764] ( move ul , ul / ua ; pen 0 ; move ua , ul )  
[5765] ( move 4 * 2 , ua ; move 2 + ul , ua - 2 )  
[5766] ( move 0 - 4 , ul ; move ua - 3 , 3 - ua )  
[5767] ( move 4 + ul , 0 - ua ; move ua , 4 + 4 )  
[5768] ( v0 = ua + ul ; move v0 , 4 / v0 )  | ( v0 = ua + ul ; move v0 , 4 / v0 ; pen ua )  
[5769] ( pen ua ; move 3 , ua ; move ul , ua - ul )  | ( pen ua + ua ; ( move 3 , 0 ; move ul , ua - ul ) )  
[5770] ( pen 2 ; move ul , ul ; move ua , ua - ul )  
[5771] ( move 0 - ul , 3 - ul ; move 4 , ua + 3 )  
[5772] ( move ua - 3 , 0 ; move 2 + ul , ua / 4 )  
[5773] ( move ua + 3 , 2 ; move ua - 4 , 3 + ul )  
[5774] ( move ul + ul , 4 + 3 ; move 2 + ul , 2 )  
[5775] ( move 4 + ul , ul - 2 ; move ua + 3 , 2 )  
[5776] ( move 4 + 2 , ul / 3 ; move 0 - ua , ul )  
[5777] ( move ua , ua * ua ; pen ua ; move 4 , ul )  
[5778] ( move ul - ua , 4 * 2 ; move 2 , 2 + ul )  
[5779] ( move 3 / 2 , ua - ul ; move ua + 3 , 2 )  
[5780] ( move 4 , ua + 2 ; move 4 - ul , ua - 2 )  | ( move 4 , 3 - ul ; move 2 + ul , ul - 3 )  
[5781] ( move 2 , 0 ; move 2 , 3 + 2 ; move 4 , 2 )  
[5782] ( pen ua ; move ul + ul , ul ; move 3 , ul )  | ( ( pen ul ; pen ua * ua ; move 2 , ul ) ; move 3 , ul )  | ( ( pen ua ; move 2 , ul ) ; move 2 , ul ; move ul , ua + ua )  
[5783] ( move 4 + ul , 3 - ul ; move 2 , 2 - ua )  | ( move 4 + ul , 2 ; ( v0 = 2 ; move v0 , v0 ) )  
[5784] ( move ua - ul , ul ; pen 3 ; move ul , ua )  
[5785] ( move 4 + ul , 2 - ua ; move 2 / ua , 2 )  | ( move 0 , ul ; move 4 , ul ; move ul , ul / ua )  | ( move 4 , 2 ; move ul , ul / ua ; move ul / 2 , ua - 2 )  
[5786] ( move ul - ua , ul ; pen ua ; move 4 , ua )  
[5787] ( move 3 , ul ; pen ua ; move ul , ul + ul )  | ( move 3 , ul - ua ; pen ua ; move 2 - 3 , 4 + ul )  
[5788] ( move ul + ul , 0 - 2 ; move 3 , ua / 4 )  
[5789] ( v0 = 4 + ul ; move v0 , ul / v0 )  | ( move 0 , 3 ; move ul , ul / 3 ; move 4 , ua )  
[5790] ( move ua - 3 , 4 + 3 ; move 2 + ul , ul )  
[5791] ( move 4 , 3 + 3 ; move ul - 2 , ua + ul )  
[5792] ( move ua , ua ; pen ua ; move ul , ul - 4 )  
[5793] ( move 2 - ua , 4 ; move 4 + 2 , ul + ul )  
[5794] ( move 2 , ua + 2 ; move 3 + ul , 4 / ua )  
[5795] ( pen ua * ua ; move ua , ua ; move 4 , ul )  | ( ( pen ua ; move ua , ua ) ; move 2 + 2 , ul )  | ( pen ua ; ( move ua , ua ; move 4 , 2 - ul ) ; pen ua )  | ( pen ua ; ( v0 = ua + ul ; move ua , 0 ; move 4 , ul ) )  
[5796] ( move 4 + ul , 0 ; move ul - 4 , ul - 2 )  
[5797] ( move 2 + ul , ul ; move 3 - ua , 4 + 3 )  
[5798] ( move ul - 4 , 3 - ua ; move 2 - ua , 2 )  
[5799] ( pen ul ; move ua , ua ; move ua , ua / 3 )  | ( v0 = ua ; move ua , ua ; move v0 , v0 / 3 )  
[5800] ( move ua , 3 - 4 ; move 3 + 2 , ul + ul )  
[5801] ( move 3 + ul , 4 - ua ; move ua + 2 , 4 )  | ( ( move 2 * 2 , 3 + ul ; move 2 , 4 ) ; move ua , 0 )  
[5802] ( move 4 , ua ; pen ua ; move ul , ua - ul )  
[5803] ( move ua , ul / 3 ; move 3 - ua , 0 - 3 )  
[5804] ( move ua + ul , ua ; pen 4 ; move ul , ul )  
[5805] ( move 4 + 3 , ua * 4 ; move ul , 0 - ul )  | ( move 3 , ua ; move 4 , ua ; move 3 - 4 , ua - 4 )  
[5806] ( move 4 + 2 , ul - 3 ; move ua , 4 + ul )  
[5807] ( move 4 , ul / ua ; move 2 + ul , 3 + 2 )  
[5808] ( pen ua ; move ua , ul ; move ua , ua / 4 )  
[5809] ( pen 3 ; move ul - ua , ul ; move ul , ul )  
[5810] ( move ua , ul / 2 ; move 2 / ua , 3 + 2 )  
[5811] ( move 4 + 4 , ul - ua ; move ua + 2 , 4 )  
[5812] ( move 4 + 4 , 3 + 2 ; move ul , ul - ua )  
[5813] ( move ul - 4 , 0 ; move 4 + ul , 4 + ul )  
[5814] ( move 4 + ul , ul ; pen ua ; move ul , ul )  | ( move 4 + ul , ul ; pen ua + ul ; move 2 - ul , ul )  | ( move 4 , ul ; ( move ul , 0 ; pen ua + ua ; move ul , ul ) )  
[5815] ( move 2 - ua , 3 + 2 ; move ul , ua / 4 )  
[5816] ( move ul - ua , ul ; pen ua ; move 4 , ul )  
[5817] ( move ul + ul , 4 + 3 ; move 3 , ua - 3 )  
[5818] ( move 4 - 3 , 0 ; move ua + ul , ua / 4 )  
[5819] ( move ul - ua , ul ; pen 4 ; move ul , ua )  | ( move ul - ua , ul ; pen 4 + ul ; move ul , 0 )  
[5820] ( move 4 - ua , ua * 2 ; move ua / 2 , 2 )  
[5821] ( move 2 , 2 / 4 ; move ul - ua , ua - 2 )  
[5822] ( move ul , ua * 2 ; move 2 + 2 , ua / 4 )  | ( move ul , 0 ; move 4 , ua / 4 ; move 0 , 0 )  
[5823] ( move 3 + 2 , 2 / 4 ; move ul , ua + ul )  | ( move 4 + ul , 3 / ua ; ( move ul , ul ; pen 4 / ua ) )  
[5824] ( move ua , ua + 3 ; move 4 - 2 , 3 / ua )  | ( move ua , 3 ; move ul , 2 / 4 ; move ul , ua )  
[5825] ( move ua / 2 , 0 - ul ; move 4 , 4 + ul )  | ( pen ua / 4 ; move 3 , 0 - ul ; move 4 , 4 + ul )  
[5826] ( move 2 * 2 , ua - ul ; move 4 , ua - 3 )  
[5827] ( move ul , ul ; pen ua ; move ua , ul / 2 )  | ( ( move ul , ul ; pen 4 ) ; move ua , 2 / 4 )  
[5828] ( move 3 , ul ; pen ul - ua ; move ul , ul )  
[5829] ( move 4 + 2 , 4 * 2 ; move ua , ul + ul )  
[5830] ( move 2 - ua , 2 / ua ; move 3 * 2 , ul )  
[5831] ( move 3 , ul - 3 ; move ua + 2 , ul - 4 )  
[5832] ( move ua / 2 , 4 ; move ua - 3 , ua - 2 )  
[5833] ( move 2 + ul , 2 ; move 4 / 3 , ua + ul )  
[5834] ( move 3 , 3 / 4 ; move 0 - ua , ua - ul )  
[5835] ( move ul , ul ; pen ua ; move ua , ua / 3 )  
[5836] ( move ua - 4 , ul ; move 4 + 3 , ul - 2 )  
[5837] ( move 2 * 2 , 2 / ua ; move ul / ua , 2 )  
[5838] ( move ua - 2 , 2 - 4 ; move ul , ul / 2 )  
[5839] ( move ua , 4 * 2 ; move ua / 3 , ua + 3 )  
[5840] ( move ul / ua , 3 ; move 4 + 4 , 0 - ul )  
[5841] ( move 3 * 3 , ul - 3 ; move 2 - ua , ul )  
[5842] ( move ul , ua / 4 ; move 3 + 2 , ul - 2 )  | ( move ul , 4 * 2 ; move ul - ua , 3 - ul )  
[5843] ( move 4 , 3 / ua ; move 4 + ul , 0 - ul )  
[5844] ( move 3 , ul - ua ; move 4 * 2 , 3 + ul )  | ( move ua / 2 , ul ; move 4 * 2 , 4 ; pen 0 )  
[5845] ( move 2 + ul , 4 + ul ; move ul - 4 , 3 )  
[5846] ( move ua , ul - 3 ; move 3 + ul , 4 * 2 )  
[5847] ( move 3 - ul , 2 ; move 2 + ul , 4 / ua )  
[5848] ( move 3 - ul , ua + ul ; move 4 , 4 + 3 )  
[5849] ( move 3 * 3 , 3 / ua ; move ua , 2 + ul )  
[5850] ( move 4 , ua + 3 ; move 4 - 3 , ua - ul )  | ( move 2 + ul , 3 ; move ul , ua ; move ul , ua - ul )  
[5851] ( move 3 + 2 , ua * 3 ; move ul - 4 , ul )  | ( move 4 , 0 ; ( move ul , ua ; move ul - 4 , ul ) )  
[5852] ( move ua , 4 - ul ; move 3 * 2 , 3 + ul )  | ( move ua , 3 ; v0 = 2 ; move v0 * 3 , 4 )  
[5853] ( move ua , ua / 4 ; move 3 + 2 , 3 - ul )  
[5854] ( move ua - 2 , ul - 3 ; move 3 , ul / 2 )  
[5855] ( move 2 - ua , ul - 4 ; move 4 + 3 , ul )  
[5856] ( move ua , ua * 3 ; move 2 + ul , 4 * 3 )  
[5857] ( move ul - ua , 3 - ua ; move 4 / 2 , 3 )  | ( move ul - ua , 3 ; move ul + ul , ua + 3 )  
[5858] ( move ua - 2 , ul / 4 ; move ua / 2 , 2 )  
[5859] ( move 4 , ua + 4 ; move 4 - ua , 4 + ul )  
[5860] ( move ua , ul / 4 ; move 0 - ul , 4 + 4 )  
[5861] ( move 3 * 2 , 4 ; move ul - 4 , ua + ul )  
[5862] ( move 4 , 0 - 3 ; move ul - ua , ul / 4 )  
[5863] ( move 4 / ua , 3 ; move 3 + 3 , ua * ua )  
[5864] ( move ua + 4 , ul ; move 2 / 4 , ua + 4 )  
[5865] ( move ua + 4 , 4 / ua ; move 3 , ua - 3 )  
[5866] ( move 3 - 4 , ua + ua ; move 4 , ul / 2 )  
[5867] ( move ua , ul ; move 4 , ul / ua ; pen ul )  
[5868] ( move ua / 2 , ua - ul ; move 3 , 3 / 2 )  
[5869] ( move ua / 2 , 4 - 3 ; move ua , 4 + ul )  
[5870] ( move ul , ul ; pen ua ; move ua , ul / 4 )  
[5871] ( move 3 * 2 , ul ; move 4 + 4 , ul + ul )  
[5872] ( move 3 , ul / ua ; move 0 - 2 , ul / 4 )  
[5873] ( pen 4 ; move ul , ul / ua ; move ua , ul )  
[5874] ( move 2 + ul , ua ; move 4 + 4 , ua / 4 )  
[5875] ( move ul , 3 + 3 ; move ul - ua , 4 * 3 )  
[5876] ( move ua / 4 , ua ; move 3 + ul , 4 + 3 )  
[5877] ( move 3 / 2 , ul / 3 ; move ua + ul , 3 )  
[5878] ( move ua - 3 , ua / 4 ; move 3 - ua , 4 )  
[5879] ( move 4 + ul , 4 + ul ; move ul , 4 + 4 )  
[5880] ( move 2 / 4 , ul / ua ; move 3 + 2 , ul )  
[5881] ( move ua - ul , 4 - 3 ; move ua , 4 * 3 )  
[5882] ( move 4 , 3 - ua ; move ua - 2 , ul / 4 )  
[5883] ( move 4 + ul , ua / 3 ; move 4 , ua + 4 )  
[5884] ( ( move ua , ul ; pen ua ) ; move ul , ul )  | ( move ua , ua + ul ; pen ua * 3 ; move ul , ul )  | ( ( move ua , ul ; pen ua ) ; move ul , ua + ul )  | ( move ua , ul ; pen ua + ua ; move ul , ua + ul )  | ( move ua , ul ; ( pen ua ; move ul , ul ; pen ul ) )  | ( ( v0 = ul ; move ua , v0 ) ; pen ua ; move ul , ul )  
[5885] ( move ua , 3 / ua ; move ua / 3 , 4 + 3 )  
[5886] ( move 3 + 2 , ul / ua ; move 4 , 3 / ua )  
[5887] ( move 3 / ua , 3 - 4 ; move ua , 4 + ul )  
[5888] ( move ul / 3 , 2 * 2 ; move ua - ul , 4 )  | ( move ul , 2 ; move ul , ua + 3 ; move 4 + ul , 3 )  
[5889] ( move 3 , ua * 4 ; move 4 + ul , ua - 4 )  
[5890] ( move 4 + ul , 2 + ul ; move 4 , 4 / ua )  
[5891] ( move 4 + ul , 4 + ul ; move ul , 3 - 4 )  | ( move ul , 4 + ul ; move 4 , 0 ; move ul , ua - ul )  | ( v0 = 4 + ul ; move v0 , v0 ; move ul , v0 )  
[5892] ( move ul - ua , ul ; move 2 * 2 , 4 * 4 )  
[5893] ( move ua + ul , ul / 3 ; move 3 , 4 / 2 )  
[5894] ( move ul / 2 , ul ; move 4 + ul , 3 / 2 )  
[5895] ( move ua / 2 , 4 * 3 ; move ul , 4 + ul )  
[5896] ( move ul , ua / 2 ; move 3 + ul , 4 * 4 )  | ( ( move ul - 2 , 0 ; move ul , 2 / ua ) ; move 3 , 0 )  
[5897] ( move ua , 4 / 3 ; move 4 + ul , 4 + ul )  
[5898] ( move ul , ua * 4 ; move ua - 2 , 4 / 3 )  
[5899] ( move ul - 4 , 3 ; move ua - ul , 4 * 3 )  
[5900] ( move 3 + ul , ul / 3 ; move ua / 3 , 3 )  
[5901] ( move 3 - ua , ua / 4 ; move 4 - ul , 3 )  
[5902] ( move ul , 2 + ul ; move 4 * 2 , ul / 4 )  
[5903] ( move ua / 3 , ua - 3 ; move 4 - ul , 4 )  | ( pen ul / ua ; move 3 - ul , ul - 4 ; move 3 , 4 )  
[5904] ( move ul / ua , 3 ; move ua + 4 , 4 * 3 )  
[5905] ( move 3 / 4 , ul ; move ua + 3 , ua / 4 )  
[5906] ( move ua / 2 , 3 / 2 ; move ul , 4 / ua )  
[5907] ( move 3 / ua , 4 / 3 ; move ua + ul , 4 )  
[5908] ( move ul / 2 , 4 / ua ; move 4 , ua + 4 )  
[5909] ( move 3 , 2 ; move 2 , 3 / 2 ; move 4 , 2 )  
[5910] ( move 4 / 2 , ua - ul ; move 3 , ul / 4 )  
[5911] ( move ul , 3 / 4 ; move ua + ul , 3 / 4 )  
[5912] ( move ua / 2 , ua * 4 ; move 4 , ul / 4 )  
[5913] ( move 4 - ul , 4 ; move ua / 3 , ul / 3 )  
[5914] ( move 3 , 4 * 4 ; move 2 , 4 ; move 2 , 3 )  
[5915] ( move ul / 3 , ua / 3 ; move 4 , ul / 3 )  
[5916] ( move ul , ul ; move ua , ul ; move ua , ul )  | ( ( move ul , ul ; move ua , ul ) ; move ua , ua + ul )  
[5917] ( move ua , ua ; move ul , ul ; move ul , ul )  | ( move ua , 0 ; move ul , ul - ua ; move ul , ul )  | ( move ua , ua ; move ul , ul ; move ul , 2 - ul )  | ( move ua , ua ; move ul , ul ; move ul , ul - ua )  | ( pen ul ; ( move ua , ua ; move ul , ul ; move ul , ua + ul ) )  
[5918] ( move ul , ua ; move ul , ul ; move ua , ul )  | ( move 2 , ua ; move ul , ul - ua ; move ua , ul )  | ( ( move ul , ua * 4 ; move ul , ul ) ; move ua , ul )  
[5919] ( move 4 , ul / 4 ; move ua / 2 , ul / 4 )  
[5920] ( move ua , ul ; move ul , ul ; move ua , ul )  | ( move ua , 2 - ul ; move ul , ul ; move ua , ul )  
[5921] ( move 4 , 2 ; move 3 * 2 , 4 ; v0 = 3 )  
[5922] ( move 2 / 3 , 4 ; move 4 , 4 ; v0 = 3 )  
[5923] ( move ua + 2 , 0 ; move ua + ul , ua - 3 )  
[5924] ( move 0 - ua , 2 ; move ua - 2 , ul + ul )  
[5925] ( move 2 + ul , 0 ; move ua + 3 , ul + ul )  
[5926] ( move 3 + 2 , 0 ; move ul - ua , ul + ul )  
[5927] ( move 3 + 2 , 0 ; move 2 , 2 ; move ua , 0 )  | ( ( move 4 , ua ; move ul , ua ) ; move ua + 2 , 2 )  
[5928] ( move ua + ul , 2 + ul ; move ua + 3 , 2 )  | ( move ua , 3 ; move ul , ua ; move ua + 3 , 2 )  
[5929] ( move 0 , ul - 4 ; move 0 - ua , ua * ua )  | ( move ul / 3 , ua * ua ; move ua , ul / ua )  
[5930] ( move ua - ul , ua ; move 3 + 3 , 0 - ul )  
[5931] ( move 0 - 2 , ua ; move ua - ul , 2 / ua )  
[5932] ( move ua + 2 , ua * ua ; move ul , 0 - 4 )  
[5933] ( move ua , ua - 3 ; move 0 - 3 , ul - ua )  
[5934] ( move 3 - ua , 0 ; move ua - 4 , ua + ul )  
[5935] ( move ua + ul , 2 / ua ; move 2 , ua + 2 )  
[5936] ( move ua + ul , 0 - 3 ; move ua , 4 - ua )  
[5937] ( move 3 + 2 , ul ; move 2 + ul , ua - ul )  
[5938] ( move 4 + ul , 0 - 3 ; move ul , ua + ul )  | ( move 3 + 2 , 0 - 3 ; ( move ul , ul ; v0 = 3 ) )  
[5939] ( move 0 - 4 , 0 - ul ; move ua , ul / ua )  
[5940] ( move 2 / 3 , ua ; move ua + 2 , ua + ul )  
[5941] ( move ul + ul , 4 ; move 2 - ua , ua + 2 )  
[5942] ( move ua + 3 , ua + ul ; move ul , 4 + 2 )  
[5943] ( move 3 - ua , ua - ul ; move 2 , ua + 3 )  
[5944] ( move ul - ua , ua + 4 ; move 2 + ul , 2 )  | ( move 0 , ua + ul ; move ul - ua , 3 ; move 3 , 2 )  
[5945] ( move 4 - 2 , ul - ua ; move 0 - ua , ul )  
[5946] ( move 2 - ua , ua ; move ua - 2 , 4 - ua )  
[5947] ( pen ua ; move ul , ua ; move ua + ul , ul )  | ( pen ua ; move ul , ua ; ( move ua , ul ; move ul , ua ) )  
[5948] ( move 3 - ua , ul + ul ; move ul , 0 - 3 )  
[5949] ( move ua + 2 , 3 ; move 4 - ua , ua + ul )  
[5950] ( move 3 + 3 , ua + ul ; move ua , 3 - ua )  | ( move 3 + 3 , ul ; move ua , 3 ; v0 = 2 )  | ( move 4 , ua + ul ; move 2 , 0 ; move ua , 3 )  
[5951] ( move 4 , 4 ; move 0 , 0 - 2 ; move ua , 0 )  
[5952] ( move 2 + ul , ua - 2 ; move ua , 4 - ua )  
[5953] ( move 2 + ul , ul ; move ua - ul , 0 - 4 )  
[5954] ( move ua , ul ; pen ua ; move ua , ul + ul )  | ( move ua , ul ; ( pen ua - ul ; move 0 , 0 ; move ua , 2 ) )  
[5955] ( move ul , ua - 4 ; move ua + ul , 0 - 3 )  | ( v0 = ua + ul ; move v0 , v0 / 3 ; v1 = v0 )  
[5956] ( move ul - 3 , 2 ; move ua + 2 , ul - ua )  
[5957] ( move ua - 4 , ua + 2 ; move ul + ul , 2 )  
[5958] ( move ua + ul , 0 ; move 2 - ua , ua / 4 )  
[5959] ( move 3 - ua , 4 - ul ; move ua , 0 - ul )  
[5960] ( move ua + ul , ua - 3 ; move 3 - ul , 2 )  
[5961] ( move 3 - ua , 4 + 2 ; move ua + ul , ul )  
[5962] ( pen ua ; move ul , ul ; move ua , ua - ul )  
[5963] ( move 3 , ua - 3 ; move 2 + ul , ua - ul )  
[5964] ( move ul - ua , ul ; pen ua ; move ua , ul )  
[5965] ( move 3 , 0 ; move ul - 2 , 0 ; move 2 , 3 )  | ( v0 = 3 ; move 3 , ua ; move v0 , v0 )  | ( v0 = 3 ; move v0 , ua ; move v0 , v0 )  
[5966] ( move ua + ul , 3 + ul ; move 4 + ul , 2 )  
[5967] ( v0 = ul - ua ; move v0 , ul / v0 )  
[5968] ( move 4 + 2 , ua * ua ; move ul , ua - 2 )  
[5969] ( move ua / 2 , ul ; move ul - ua , 0 - 3 )  
[5970] ( move ul , 4 + ul ; move ua + 2 , ul - 2 )  
[5971] ( move ua , ua - 3 ; move ua + 2 , 4 - ul )  | ( move ua , ua - 3 ; move 2 , ua + 3 ; move ua , ua )  
[5972] ( move ua , 2 + ul ; move 4 + 3 , ul + ul )  | ( move ua , 2 + ul ; move 3 , 2 ; move 4 , ua * 3 )  
[5973] ( move ul - ua , 4 + 2 ; move ua - 2 , ul )  
[5974] ( move 2 , 3 + ul ; move ul - ua , ua + 4 )  
[5975] ( move ul , ua ; pen ua ; move ua - ul , ul )  
[5976] ( move 3 - ul , 0 ; move ua + ul , 3 / ua )  
[5977] ( move 0 , ua * ua ; move ua + ul , 4 * 3 )  
[5978] ( move 0 - ua , ua * 4 ; move 3 , ul + ul )  
[5979] ( move ul + ul , 4 + ul ; move 3 , 0 - ul )  
[5980] ( move ua - 3 , 3 + ul ; move 3 , ua + ul )  
[5981] ( move 3 - ua , ua * 3 ; move ua + ul , 2 )  
[5982] ( move ua + ul , 4 + 2 ; move ua + ul , 4 )  | ( move 0 , 4 + ul ; move ua + ul , ul ; move ua + ul , 4 )  
[5983] ( pen ua ; move ua , ul ; move ul - ua , ul )  
[5984] ( move 2 - 3 , 2 ; move ul - ua , ul + ul )  | ( move ua - ul , 4 ; move ul , ul - 3 ; pen 3 + ul )  
[5985] ( move 2 , 2 - 3 ; move ua + ul , ul / ua )  
[5986] ( move ua , ua * 4 ; move 4 + ul , 0 - ul )  
[5987] ( move ul - 2 , 2 ; move 4 + ul , ua * ua )  
[5988] ( move ul , ul ; pen ua ; move ua - ul , ul )  | ( move ul , ul ; pen 4 ; move ua - ul , ua + ul )  | ( move ul , ul ; ( pen ua ; move ua - ul , ul ) ; pen ua )  
[5989] ( move 4 + ul , ua ; move 4 + ul , ua - 2 )  
[5990] ( move ua , ua + 4 ; move ua + 3 , ul - 4 )  
[5991] ( move 0 - ua , ul ; move ua + 3 , ul / 4 )  
[5992] ( move 4 - ua , ua + 4 ; move 3 , ua + ul )  
[5993] ( move ul , 2 + ul ; move ua + 2 , 4 / ua )  
[5994] ( move 3 - ul , ul - 2 ; move 2 , ua * ua )  
[5995] ( move ua , ul / 2 ; move 3 - ua , ua + 3 )  
[5996] ( move 2 + ul , 2 ; move ua + ul , ul / 3 )  
[5997] ( move ul - 3 , ua + ua ; move 3 , ua - 4 )  
[5998] ( move 2 + ul , ul + ul ; move 2 , 3 / ua )  
[5999] ( move ul / 2 , ua ; move 4 + ul , 0 - ul )  
[6000] ( move ua + ul , 4 ; move 2 * 2 , ua - ul )  
[6001] ( move 4 , 0 - ua ; move ua / 4 , ua + ul )  
[6002] ( move 4 + ul , ua + 2 ; move ul , 4 + ul )  | ( v0 = 4 + ul ; move v0 , 2 ; move ul , v0 )  
[6003] ( move ul , ul + ul ; move 3 - ua , 4 + 2 )  
[6004] ( move 3 - ua , ua + ul ; move 3 + ul , 4 )  
[6005] ( move ua + 4 , 4 ; move ul - ua , 2 - ul )  
[6006] ( move 3 , ua - 3 ; move 3 - ul , ul + ul )  
[6007] ( move 4 - ul , ua + ul ; move ua / 2 , 2 )  | ( move 3 , ul ; v0 = ua ; move v0 - 3 , 2 )  
[6008] ( move ul - ua , 2 ; move 3 - ua , ul / 2 )  
[6009] ( move 3 * 2 , ul ; move ua - ul , 3 + ul )  
[6010] ( move ul + ul , ua * 3 ; move 3 - ua , 3 )  
[6011] ( move 3 , 0 ; move 2 , 3 * 2 ; move 2 , ua )  
[6012] ( move ua , ua - 4 ; move 3 + ul , 2 / ua )  
[6013] ( move 4 + ul , 4 + ul ; move ua + ul , 3 )  
[6014] ( move 4 - ua , ua * ua ; move ua , 3 * 2 )  
[6015] ( move ua + 3 , ul ; move ul / 2 , 2 - ul )  
[6016] ( move 0 - 3 , ul ; move ua / 4 , ul + ul )  
[6017] ( move ua - ul , ua / 4 ; move ul , 2 + 2 )  
[6018] ( move ua , ua + 2 ; move 3 - ul , ul / 3 )  | ( move ua , 2 ; move 2 , 2 / ua ; v0 = 4 )  | ( v0 = ul + ul ; move ua , v0 ; move v0 , v0 / ua )  
[6019] ( move 2 + ul , ua / 4 ; move 2 + ul , ul )  
[6020] ( move ul , 4 * 2 ; move ua + ul , ua + 4 )  
[6021] ( move ul + ul , 4 + ul ; move 4 + 2 , ul )  
[6022] ( move ul , 4 - ul ; move ua + 3 , ua + 4 )  
[6023] ( move 4 + 4 , ua - ul ; move 2 + ul , ul )  
[6024] ( move ua + 2 , ua - ul ; move 3 , ul / 3 )  
[6025] ( move ua + 2 , 3 + ul ; move ul , ua / 4 )  
[6026] ( move ul + ul , ua - 3 ; move ua , 3 / 2 )  
[6027] ( move 2 , 4 * 2 ; move ua - ul , ul + ul )  
[6028] ( move ua + 3 , 4 ; move ua - ul , ua - 4 )  
[6029] ( move 4 + ul , ua + ua ; move 4 , 4 + ul )  | ( v0 = 4 + ul ; move v0 , ua ; move v0 - ul , v0 )  
[6030] ( move 3 - ua , ua * 2 ; move 4 - ua , ul )  
[6031] ( pen ua ; move ua , ul / ua ; move ul , ul )  | ( ( pen ul ; pen ua ; move ua , ul / ua ) ; move ul , ul )  
[6032] ( move 3 - ul , ua + ul ; move ua - 3 , 4 )  
[6033] ( move 3 , ul - 2 ; move 4 + ul , ul - ua )  
[6034] ( move ua + 2 , 4 - ul ; move ul , 4 + ul )  
[6035] ( move ul + ul , ua - 2 ; move 3 , ul - 4 )  
[6036] ( move 0 , 4 - ul ; move ul - ua , ua / 3 )  
[6037] ( move ul - ua , ul - 2 ; move 2 , ul - 4 )  
[6038] ( move ul , 4 + ul ; move ul - 4 , ua + 3 )  
[6039] ( move ua + 2 , ul ; move 4 - ua , ul / 3 )  
[6040] ( move ul , ul - 3 ; move 2 + ul , ua / 3 )  | ( move ul , ul - 3 ; pen ul ; move 3 , ua / 3 )  
[6041] ( move ua + ul , 3 + ul ; move ua / 3 , 4 )  
[6042] ( move 2 + ul , ua ; move ua / 4 , 4 + ul )  
[6043] ( move 4 , 3 + ul ; move ul - ua , 2 / ua )  
[6044] ( move 3 / 2 , ua / 2 ; move ua , ua * ua )  
[6045] ( move 2 + ul , 3 - ul ; move ua , ua / 4 )  
[6046] ( move ua + ul , ul / 2 ; move 3 , 3 - ul )  
[6047] ( move ul - 4 , 0 ; move ua + ul , ul / 4 )  
[6048] ( move 3 - ul , 3 ; move 4 - ua , ul - ua )  
[6049] ( move ul / 2 , 4 ; move ua + ul , ua + 4 )  
[6050] ( move ul - 3 , ul + ul ; move 2 , 4 - ul )  | ( move 0 - 2 , 4 - 2 ; move 2 , 3 ; v0 = 0 )  | ( v0 = 2 ; move 2 - 4 , v0 ; move v0 , ul + v0 )  
[6051] ( move ua - 3 , ul + ul ; move 2 , ul / 3 )  
[6052] ( move 4 + 4 , ua + ul ; move 4 - ua , ul )  
[6053] ( move 3 * 2 , ua * ua ; move ul , 4 + ul )  
[6054] ( move ua + ul , ul ; move 2 / 4 , ul - 2 )  | ( move ul , ul ; move ua , 0 ; move ul / 2 , ul - 2 )  | ( ( move ua + ul , ul ; pen 0 ; move ul , 4 ) ; move ul , 0 )  
[6055] ( move 2 - ul , ul ; move ul - ua , 2 / 3 )  
[6056] ( move ua , ua * ua ; move 4 + ul , 4 + 4 )  
[6057] ( move ul + ul , 0 ; move 4 - ul , ul / 3 )  
[6058] ( move ua - ul , 4 / ua ; move 2 , ul - 2 )  
[6059] ( move 2 - ua , ua ; move ua - 4 , ua / 4 )  
[6060] ( move 3 , 0 ; move ul , 0 ; move 3 , 3 / 2 )  
[6061] ( ( pen 2 ; move 2 , 4 ) ; move 4 , 3 * 3 )  
[6062] ( move 2 - ul , ul ; move 3 * 3 , ul + ul )  
[6063] ( move 3 , 3 - ul ; move ua + ul , 4 / ua )  
[6064] ( move 4 + 4 , ul - ua ; move ua - 4 , ul )  
[6065] ( move 4 - ul , ua + 4 ; move ul - 3 , ul )  | ( ( move 0 , 2 ; move 3 , 2 ) ; move ul - 3 , ul )  
[6066] ( move 4 + 2 , 4 ; move 3 , 2 ; move ul , 0 )  
[6067] ( move ul - ua , ul / 3 ; move 3 , 3 + ul )  
[6068] ( move ua , 4 - ul ; move 2 + ul , ua / 4 )  
[6069] ( move 4 + 2 , 4 + ul ; move ul , ul / ua )  | ( pen ul / ua ; move ul , 2 ; move ul - ua , 3 )  
[6070] ( move ua + ul , ua - 4 ; move 3 , ua / 4 )  
[6071] ( move 0 , 3 ; move 3 , 3 ; move ua - 2 , 4 )  
[6072] ( move 3 , 3 ; move 2 , ul ; move 4 + 3 , 0 )  | ( ( v0 = 3 ; move v0 , 3 ) ; move v0 * v0 , ul )  
[6073] ( move ul - ua , 4 - 3 ; move ua , ul / 2 )  
[6074] ( move 2 - ua , ul ; move ul - 4 , ul - 4 )  
[6075] ( move ua / 3 , 3 / 2 ; move ua , ua - ul )  
[6076] ( move 3 , ua ; move 3 , 2 ; move 3 + 2 , 3 )  
[6077] ( move ua / 4 , ul ; move 2 + ul , 3 - ul )  | ( move 0 , ul ; ( move ua / 4 , ua + ua ; move 3 , 2 ) )  
[6078] ( move 2 - ua , ul - 3 ; move ul , ul / 3 )  
[6079] ( move 3 / ua , 4 + ul ; move 3 + ul , ul )  
[6080] ( move ul / 3 , ua - 2 ; move 4 , ua * ua )  
[6081] ( move 2 - 4 , ul / ua ; move ua / 3 , ua )  
[6082] ( move 3 - ua , ul / 3 ; move ul - ua , 4 )  
[6083] ( move ua + ul , 4 / ua ; move ul , 3 - 4 )  
[6084] ( move 2 + ul , ul / 2 ; move 4 , ul / ua )  
[6085] ( move 3 , 4 + ul ; move ul + ul , 4 / ua )  
[6086] ( move ul , ua - ul ; move 4 * 2 , ul / 2 )  
[6087] ( move ul + ul , ua * 4 ; move 2 , ul / 3 )  
[6088] ( move ul , ua / 4 ; move 0 - ua , ul / 4 )  
[6089] ( move 3 , 3 ; move 3 , 4 ; move ua + 2 , 2 )  
[6090] ( move ua - ul , 2 / ua ; move 4 , 3 / ua )  
[6091] ( move ul , ul - 3 ; move 3 * 2 , ul / ua )  
[6092] ( move 3 - ul , ua ; move 3 - ua , ul / 4 )  
[6093] ( move ul - ua , 4 ; move 2 - ul , 4 / ua )  
[6094] ( move ua - ul , ua - 3 ; move 3 , ul / 4 )  
[6095] ( move 4 + ul , ul - 4 ; move ua / 2 , ul )  
[6096] ( move 2 , 4 ; move 0 , ua / 2 ; move 4 , 2 )  
[6097] ( move 4 , 3 * 2 ; move ul , 0 ; move 2 , 3 )  
[6098] ( move 2 , 4 + ul ; move ul - ua , ul / 4 )  
[6099] ( move ul - ua , 3 / 2 ; move 4 - ul , ul )  
[6100] ( move ua - ul , 4 * 4 ; move ul , 3 + ul )  
[6101] ( move 3 , ua - 4 ; move 3 - ul , ul / ua )  
[6102] ( move 2 , ua + 4 ; move 2 , 2 ; move 4 , 4 )  
[6103] ( move ul / 2 , ul ; move ua - ul , 4 * 3 )  
[6104] ( move 4 / 2 , ul / 3 ; move ua , ua - ul )  
[6105] ( move 3 , 2 ; move 4 , ua + 3 ; move 4 , 2 )  
[6106] ( move 0 , 3 ; move 0 , 4 ; move 4 , ul / 3 )  
[6107] ( ( move 3 , 4 ; move 3 , 2 / 4 ) ; pen 4 )  
[6108] ( move ua , 4 / ua ; move ul + ul , 4 / 2 )  | ( move ua , 4 / ua ; move ul + ul , 2 ; move ul , ul )  
[6109] ( move ua - ul , 4 ; move ul / 4 , 2 - ul )  | ( move ua - ul , 4 ; move ul / 3 , ul ; pen 3 )  | ( move ul - ua , 4 - ua ; ( pen ua ; pen 0 ; move ul , ul ) )  
[6110] ( move 2 , 3 / ua ; move 0 , 2 ; move 4 , 4 )  
[6111] ( move 4 + ul , ul - 2 ; move ul / 4 , ul )  
[6112] ( move 2 , 2 ; move 3 , ul ; move 3 * 3 , 2 )  
[6113] ( move ul , ul - 3 ; move ul - 4 , 3 / ua )  
[6114] ( move 0 , 3 ; move 4 / 2 , 4 ; move ua , 2 )  
[6115] ( move ul , 4 + ul ; move 4 * 2 , ul / ua )  
[6116] ( move ul / ua , 4 + ul ; move 4 + 4 , ul )  
[6117] ( move ua / 2 , ul ; move ua / 4 , ua / 3 )  
[6118] ( move 4 , ul / ua ; move 3 + ul , ul / 3 )  
[6119] ( move 4 + 2 , 3 ; move 2 , 2 ; v0 = ul )  
[6120] ( move 0 , 4 ; move 4 , 4 + 3 ; move 3 , ul )  
[6121] ( move 4 , 0 ; move ul , 4 * 4 ; move 2 , 2 )  
[6122] ( ( move 3 , 2 ; move 0 , 2 ) ; move ua , 4 )  
[6123] ( move 4 , ul + ul ; move ua / 2 , ul / 4 )  
[6124] ( move ul - ua , ua / 4 ; move 4 - ul , 4 )  
[6125] ( move 4 , 2 ; move 4 , 0 ; move ul , 4 * 2 )  | ( move 4 * 2 , 2 ; move ul , ua * ua ; v0 = ua )  | ( move 4 + 4 , 4 - 2 ; move ul , ua * ua ; v0 = ua )  
[6126] ( move 0 , 2 ; move 2 , ul / 4 ; move 3 , 4 )  
[6127] ( move ul , 2 ; move 2 - 4 , 4 ; move 3 , 2 )  
[6128] ( move ua , 4 ; move 3 , 0 ; move 4 / 3 , 2 )  
[6129] ( move 3 - ul , 4 / 3 ; move ua , ul / ua )  
[6130] ( move ua / 2 , 4 / ua ; move ul - 4 , ul )  
[6131] ( move ul , 3 / ua ; move ua - ul , 3 / 4 )  
[6132] ( move ul / ua , 4 ; move ua + 3 , ul / 4 )  
[6133] ( move 4 + 3 , 4 ; move 0 , 4 ; move 3 , ul )  
[6134] ( move ul - 4 , ul ; move ua - 4 , ul / 4 )  
[6135] ( move ul / 4 , 4 / ua ; move ua , ua - 4 )  
[6136] ( move 0 , ua ; move 4 * 2 , 4 ; move 4 , 4 )  
[6137] ( move ul - ua , 4 / 3 ; move ul , ua / 4 )  
[6138] ( move 4 + ul , ul - 4 ; move ul , ul / 4 )  
[6139] ( move 4 , 3 ; move ua + 2 , 4 ; v0 = 2 )  
[6140] ( move ua / 4 , ul / ua ; move 3 , ul / 2 )  
[6141] ( move 2 + ul , 4 ; move 2 , 3 ; move 4 , 4 )  
[6142] ( move 4 + 2 , 3 ; v0 = 2 ; move 3 , ul )  | ( move 4 + 2 , 3 ; move 3 , ul ; v0 = ul )  
[6143] ( move 4 + 2 , 2 ; move 3 , ul ; v0 = 3 )  
[6144] ( move 2 , 2 / 4 ; move 3 , 4 ; move ua , 2 )  
[6145] ( move 3 , 0 - 4 ; move 4 , ul ; v0 = 3 )  
[6146] ( move ua , 4 * 4 ; v0 = 0 ; move 4 , 2 )  
[6147] ( move 4 , 4 - 3 ; move 3 , 4 ; move ua , 2 )  
[6148] ( move 0 - 3 , ua - 2 ; move 2 , 3 ; pen 0 )  
[6149] ( move 2 , 4 ; move 4 , 2 ; v0 = ua - 3 )  | ( move 2 , 4 ; move 3 , ul + ul ; move ul , ua )  
[6150] ( move 2 , 4 ; move ua + 3 , 3 ; v0 = 4 )  
[6151] ( move 4 , 2 - 3 ; move ua , 4 ; move 3 , 4 )  
[6152] ( move ua , 3 ; move 3 , 3 * 2 ; v0 = 4 )  
[6153] ( move 4 , ul ; move 3 * 2 , 3 ; move 4 , 3 )  
[6154] ( move 3 , ul ; move 4 * 2 , 2 ; v0 = 3 )  
[6155] ( move 2 , 4 ; move 3 - 4 , ul ; move 3 , 4 )  
[6156] ( move 4 , 0 ; ( move ul , 2 ; move 4 , 3 ) )  
[6157] ( move 3 , ua + 4 ; move 4 , 4 ; v0 = 3 )  | ( v0 = 4 ; move 3 , v0 ; move v0 , v0 )  | ( move 2 + ul , 4 ; move 3 + ul , 4 ; v0 = 0 )  | ( v0 = 2 ; move 3 , ua + 4 ; move v0 + v0 , 4 )  
[6158] ( move 2 , ua - 2 ; move 2 , 3 * 2 ; pen 0 )  
[6159] ( move 4 , ua ; pen 0 - 2 ; move 3 + 2 , 2 )  
[6160] ( ( move 3 , 3 ; move 3 , 3 ) ; move 2 , ul )  
[6161] ( ( move ul , 4 ; move 3 , 2 ) ; move 2 , 4 )  
[6162] ( move ua / 4 , 3 ; move 4 , 4 ; move 3 , 3 )  
[6163] ( move ul , 3 ; ( move 3 , 4 ; move 3 , 2 ) )  
[6164] ( move 3 * 2 , ua - 2 ; pen 4 ; move 2 , 0 )  
[6165] ( move 3 , 4 ; v0 = 4 ; move 3 / 2 , ul )  | ( move 3 , 3 + ul ; pen ul ; move 4 / 3 , ul )  
[6166] ( move ul , 2 * 2 ; pen 0 ; move 3 , 3 * 2 )  
[6167] ( move 3 + 2 , 2 ; pen 2 ; move ul - 2 , 4 )  
[6168] ( move ul / 3 , 0 ; pen 0 ; move 4 , 2 - 3 )  
[6169] ( ( move ua , 3 * 2 ; pen 0 ) ; move 2 , 0 )  
[6170] ( move 3 / 2 , 2 ; move 3 , 2 / ua ; pen 0 )  
[6171] ( move 3 - 2 , 2 ; move 4 * 2 , 2 ; pen ua )  | ( move ul , 2 ; move 3 + 2 , 2 ; move 3 , ua )  
[6172] ( move 0 - ua , ua ; move ua + 3 , ua + ul )  
[6173] ( pen 4 ; v0 = 3 * 3 ; move v0 , v0 )  | ( pen ua + ul ; pen ua + 2 ; move ua + 2 , 3 * 3 )  
[6174] ( move 0 , 4 + 4 ; pen 3 ; move 3 + ul , 4 )  
[6175] ( move 3 - 2 , 4 ; pen 3 ; move ua + 3 , 3 )  
[6176] ( move 0 - ua , ul + ul ; move ua + 2 , ul )  
[6177] ( move 2 , 2 - 3 ; move 3 * 3 , 2 ; pen ul )  
[6178] ( move ul , 3 ; pen 3 ; move 2 + 2 , 4 * 2 )  
[6179] ( move 3 + ul , 4 + 3 ; move 2 , 3 ; pen 3 )  
[6180] ( move 0 - 2 , ua + ul ; move ua + ul , ul )  | ( move 2 - 4 , ul ; move ul , ul ; move ua , 0 )  
[6181] ( move ua + ul , 0 ; move ua - 2 , ul + ul )  
[6182] ( move 0 - ua , ua * 2 ; move ua , ua - ul )  
[6183] ( move ul , ul + ul ; move ua + 2 , 0 - ul )  
[6184] ( move 2 - 4 , 2 - 3 ; move 4 , 2 ; pen ul )  
[6185] ( move ul + ul , 2 ; move ua + ul , 0 - ul )  
[6186] ( ( move 4 + 2 , 2 ; move 2 , 2 ) ; pen ua )  
[6187] ( move 0 - ul , ul + ul ; move ua + 2 , ul )  
[6188] ( move ua + 2 , ul + ul ; move ua + ul , 2 )  
[6189] ( move ua , ul - 3 ; move 0 - ua , ua + ul )  
[6190] ( move 2 - ua , 0 - ul ; move ul , ua * ua )  
[6191] ( move 4 , ul / 3 ; pen 3 + 3 ; move 4 , 0 )  
[6192] ( move 2 , ul - ua ; move ua - ul , 0 - ul )  
[6193] ( ( move 3 , ul ; pen 0 ) ; move 3 + 2 , 4 )  
[6194] ( move ua + ul , 0 ; move ul - 4 , ua + ul )  
[6195] ( move ua , 0 - ul ; move ua - ul , ua + 4 )  
[6196] ( move ua + ul , ul - ua ; move 2 - ua , 2 )  
[6197] ( move 0 - ul , ua - ul ; move ua , ua - 3 )  
[6198] ( move 3 - ua , ua ; move ul + ul , 0 - ul )  
[6199] ( move 2 - ua , ua ; move 3 + ul , ua - ul )  
[6200] ( move ua , ul + ul ; move 2 + ul , ua - 3 )  
[6201] ( move 2 , 2 ; move ua + ul , 0 ; move 2 , 2 )  
[6202] ( move ua , ua * ua ; move ul - 2 , 2 - ua )  
[6203] ( move ul + ul , 4 + ul ; move 0 - ua , ul )  | ( move 2 , 4 + ul ; move 0 - ua , ul ; pen 3 )  
[6204] ( move ua - ul , 0 ; move 2 - ua , ul / ua )  
[6205] ( move ul - 4 , ua ; move ua + 2 , ua + ul )  | ( move 4 - ua , 0 ; move 2 , ul ; move ua , 0 )  
[6206] ( move 0 - ua , 4 / ua ; move ua , ua + ul )  
[6207] ( move 2 - ua , 2 - ul ; move ua + ul , ul )  | ( move 2 - ua , ul ; move ua + ul , ul ; v0 = 0 )  
[6208] ( move ua - ul , ua + ua ; move ua - 4 , 2 )  
[6209] ( move ua - ul , ua - 3 ; move ul , 0 - ul )  
[6210] ( move 3 , 3 - ul ; ( pen 2 ; move 4 , 0 ) )  
[6211] ( move ua - 3 , 2 - ua ; move ua + ul , ul )  
[6212] ( move 3 + ul , ua ; move ua + ul , ua - 3 )  
[6213] ( move 2 / ua , ua ; move ul - ua , ua + 2 )  
[6214] ( move ul + ul , 4 + ul ; move ua + ul , 2 )  
[6215] ( move ua , ul / ua ; move ua + 3 , ua - 2 )  
[6216] ( move 0 - ua , ul ; move ua - ul , ul / 2 )  
[6217] ( move 3 , ua - ul ; move ua + ul , ua + 4 )  
[6218] ( move ua - 3 , ua + 3 ; move ua - ul , ul )  
[6219] ( move ul + ul , ul - 4 ; move ua , ua + 2 )  
[6220] ( move ua + 4 , ul ; move ua + ul , 3 + ul )  
[6221] ( move 2 * 2 , ua ; move ua - ul , ua - ul )  
[6222] ( move ua , 3 ; pen 3 ; move 3 / 2 , 4 * 3 )  
[6223] ( move ul , 0 ; move 3 + ul , 0 ; move 3 , 2 )  | ( move 4 + ul , 0 ; ( v0 = 2 ; move 3 , v0 ) )  
[6224] ( move ul , ua + 2 ; move ua - ul , 4 + ul )  
[6225] ( ( move ul - 4 , 3 ; move 3 , 3 ) ; pen 0 )  | ( move 3 - ua , 3 ; v0 = 3 ; move v0 , v0 )  
[6226] ( move ua , 2 + ul ; move 4 + ul , ul + ul )  
[6227] ( move 3 , 4 * 3 ; pen 3 / 2 ; move ua , 3 )  
[6228] ( move ua , ua - 3 ; move ua + ul , ul - 3 )  
[6229] ( move ua + ul , ul ; move 2 + ul , ua - 4 )  | ( move 3 , ul / ua ; v0 = ul ; move v0 + ua , 4 )  
[6230] ( move 3 , 0 ; move 3 , ul ; move 2 - ua , 0 )  
[6231] ( move 2 - ul , 2 ; move ul - ua , ua * ua )  
[6232] ( move ul , ua / 2 ; move ua + 3 , ua + ul )  | ( ( move 3 , ul ; move ua , ua ) ; move ul , ua - ul ; pen ul )  
[6233] ( move ul - ua , 2 + ul ; move 3 , ua * ua )  
[6234] ( move ul , ua + 4 ; move 2 - ua , ua - ul )  
[6235] ( move ua , ua / 3 ; move ua - ul , ua + 2 )  
[6236] ( move 2 - ua , ua ; move 2 - ua , ul / ua )  
[6237] ( move 3 , ua * ua ; move ul + ul , ua - 3 )  
[6238] ( ( move 4 , 4 / ua ; pen 0 ) ; move 3 , 2 )  
[6239] ( move ul + ul , ua - ul ; move 4 + ul , 2 )  
[6240] ( move 3 , ua + 4 ; move ua - ul , ul + ul )  
[6241] ( pen 4 ; ( move 3 , 2 ; move 2 , ua - 4 ) )  
[6242] ( move ua + ul , ul + ul ; move 3 , ul - 3 )  
[6243] ( move ul , ua - ul ; move ua - ul , 2 - 3 )  
[6244] ( move ua - 2 , ua ; move ua - ul , ul / 2 )  
[6245] ( ( pen 3 ; move 2 , 4 ) ; move ua - 4 , 2 )  
[6246] ( ( move 3 , 0 ; pen 4 ) ; move 4 , 4 + ul )  
[6247] ( move ua + ul , ua / 4 ; move 0 - ul , ul )  
[6248] ( move 2 - ua , 4 - ua ; move ul , ua * ua )  
[6249] ( v0 = ua + 2 ; move v0 , v0 * v0 )  | ( v0 = 4 * 3 ; move ua , v0 * v0 ; move 2 , ua )  
[6250] ( move 2 , 0 ; move 3 , ul ; move 2 + 2 , ul )  
[6251] ( move ua , ua + 4 ; move 2 + ul , ul / ua )  | ( ( pen ul ; move ua , 4 ) ; move 3 , ul / ua )  | ( move ua , 4 ; move 2 + ul , ul / ua ; pen ua )  | ( move ua , ua + 4 ; move 3 , ul / ua ; v0 = ul )  
[6252] ( move ua / 2 , ua - ul ; move ua + ul , 3 )  
[6253] ( move ul - 3 , ua + ua ; move 4 - ua , ul )  | ( move 2 - 4 , 0 ; move 4 - ua , ul ; v0 = ul )  
[6254] ( move ua + 4 , ua + 4 ; move ul , ua * ua )  | ( move 0 , ua ; move ua + 4 , 4 ; move ul , 4 + 4 )  
[6255] ( move ua + ul , ul ; move ua - 4 , ul - 2 )  
[6256] ( move ul , ul - ua ; move 3 - ua , 3 + ul )  | ( move ul , ul ; move 0 , ua ; move 3 - ua , 4 )  
[6257] ( move ul + ul , 3 ; move ua + ul , 4 - ua )  | ( move 2 , 3 ; ( move ua , 4 ; move ul , ua + ua ) )  
[6258] ( move 2 , 0 ; move ul , ua ; move 0 - 3 , 4 )  | ( move ul , ua ; move 2 , 0 ; move ul - 4 , 2 + 2 )  
[6259] ( move ul + ul , 2 ; move ul - ua , 2 / ua )  
[6260] ( move ua , ul / ua ; move 4 + 2 , ul - ua )  
[6261] ( move 0 - 2 , 2 ; move ua , 2 ; v0 = ua )  
[6262] ( move 3 , 0 ; move 2 - ua , ua ; move 2 , 4 )  
[6263] ( move ul + ul , 3 ; move ul - ua , 2 / ua )  
[6264] ( move ua - 4 , ua - ul ; move 3 + ul , ul )  
[6265] ( move ul , ua * ua ; move 3 + ul , 4 + ul )  | ( move ul , ua * ua ; v0 = 3 + 2 ; move 4 , v0 )  
[6266] ( move ul + ul , 3 + ul ; move ua , ul / 2 )  
[6267] ( move ua - ul , ul - 4 ; move ua , 2 - ul )  
[6268] ( move ua / 4 , ua + ul ; move ua - ul , 2 )  
[6269] ( move 3 - ul , ua - 3 ; move ua - ul , ul )  
[6270] ( move ul + ul , 4 + ul ; move 4 - ua , ua )  
[6271] ( move ul + ul , ua - ul ; move 2 , ul / 2 )  
[6272] ( move ul - ua , ul / ua ; move ua , 2 - 3 )  
[6273] ( move ul - ua , ua ; move 4 * 2 , ua * ua )  
[6274] ( move 4 * 2 , 2 ; move ua , 2 ; move 0 , ua )  
[6275] ( move 2 , ua + 2 ; move ua , 0 ; move 4 , 4 )  | ( move ua + 2 , ul + ul ; v0 = 4 ; move 4 , v0 )  
[6276] ( move ul / ua , 4 + 2 ; move ua + ul , ul )  
[6277] ( v0 = 2 - ua ; move v0 , v0 * v0 )  | ( move 0 , ul / 2 ; move 2 - ua , 2 - 3 ; move 2 , ua )  
[6278] ( move ua - ul , 4 + 4 ; move ua , ua * ua )  
[6279] ( move ul + ul , 4 ; move ua + ul , 4 + ul )  
[6280] ( move ua - ul , 3 / ua ; move ua , ua + 4 )  
[6281] ( move ua , 4 - ul ; move ua + ul , 3 - ul )  
[6282] ( move 2 , 0 - ul ; move 3 , 2 ; move 2 , ul )  
[6283] ( ( move 4 , 4 + 4 ; move 4 , ul ) ; pen 0 )  
[6284] ( move 2 - ul , ul ; move ua + ul , ul / 2 )  | ( pen ul ; ( pen ul ; move ul , ul ) ; move ua + ul , ul / 2 )  
[6285] ( move ua + ul , ul + ul ; move 2 , ua / 4 )  
[6286] ( move ua , ua / 2 ; move ul + ul , ua - 4 )  
[6287] ( move 3 - ul , 2 ; move ua + ul , ul / ua )  
[6288] ( move ua - ul , ul - 2 ; move ua , ua / 3 )  
[6289] ( move ul , ul / ua ; move 2 + ul , 3 - ul )  
[6290] ( move 4 / ua , ua ; move 4 + ul , ua + ul )  
[6291] ( move ua + ul , 4 * 3 ; move ul , ul - ua )  
[6292] ( move ul - ua , 3 - ul ; move ul - 3 , ul )  
[6293] ( move ul + ul , ua ; move ua + ul , 3 / 4 )  
[6294] ( move ua + ul , ul - 4 ; move ua - ul , 4 )  
[6295] ( move 3 , 3 / 2 ; ( pen 2 ; move ul , 4 ) )  
[6296] ( move ua + ul , ul / 4 ; move 2 , ul + ul )  
[6297] ( move ul + ul , ul / 2 ; move ua - ul , 3 )  
[6298] ( move 4 , ua + ul ; move ul - 4 , ul + ul )  
[6299] ( move 4 + 2 , ua ; move 0 , ul ; move 2 , 4 )  
[6300] ( pen 4 + ul ; ( move 4 , 3 ; move 4 , 2 ) )  
[6301] ( move ua - ul , 4 * 2 ; move ul , ul + ul )  
[6302] ( move ua , 2 ; move ua - 3 , 2 ; v0 = 0 )  
[6303] ( pen 3 ; ( move 4 , ul ; move 3 - 4 , 2 ) )  
[6304] ( move 3 , 2 ; move 0 , 4 - ua ; move 2 , ul )  | ( move 0 , ua + ul ; move 3 , ul ; move 2 , 4 + ul )  
[6305] ( move 2 , ul / ua ; move ul - ua , 3 - ul )  
[6306] ( move ua - ul , 4 * 3 ; move ua , ul + ul )  
[6307] ( move ul - 4 , 2 ; move ul , 4 ; move 0 , 0 )  | ( pen ul ; ( move ul - 4 , 2 ; move ul , 4 ) ; v0 = ua )  
[6308] ( move 4 + ul , ua ; move 3 + ul , ul / ua )  | ( move 3 , ua ; move 2 , 0 ; move 4 , ul / ua )  
[6309] ( move ua , 0 ; move 4 * 2 , 4 ; move ul , 0 )  
[6310] ( move ua + ul , ua - ul ; move ua , 4 * 4 )  
[6311] ( move ua , 3 - ua ; move 3 - ul , ul / ua )  | ( move ua + ul , 2 + ul ; move 3 / 2 , ul / ua )  | ( move 2 , ua ; ( v0 = 0 ; move v0 - ua , 3 ) )  | ( move 2 , ua ; ( move 0 - ua , 3 ; move ul , ul / ua ) )  
[6312] ( move 4 - ul , ul ; move ua + ul , ul - 3 )  
[6313] ( move ua + ul , ul / ua ; move 3 , ul - 3 )  
[6314] ( move ua + ul , ul / 2 ; move ua , 4 - ul )  | ( move ua + ul , ul / 2 ; ( move ua , 3 ; v0 = 0 ) )  
[6315] ( move 4 , ul / ua ; move ul + ul , ua - 2 )  
[6316] ( move ua + 4 , 4 ; ( pen 4 ; move 3 , 3 ) )  
[6317] ( move ua - ul , ua - ul ; move 4 + ul , 4 )  
[6318] ( move ul - ua , 3 - ua ; move ua , ua / 4 )  
[6319] ( move 3 + ul , ua - 3 ; move ul / ua , ul )  | ( move 3 , ul - 4 ; ( move ul , ul / ua ; pen ul ) )  
[6320] ( move ua , ua / 4 ; move ua - 3 , ua * ua )  
[6321] ( move 4 / 3 , ua + ul ; move ua , ua - ul )  
[6322] ( move ua - ul , 2 / 3 ; move ua - ul , ul )  
[6323] ( move 4 / 2 , ul + ul ; move ua , ua - ul )  
[6324] ( move ua - 2 , ua ; v0 = 2 ; move 2 , 2 )  | ( move ua - 2 , ua ; move 2 , 2 ; v0 = ua )  
[6325] ( move ul / 2 , ua * ua ; move 4 , ua - ul )  
[6326] ( move 2 , 0 ; move ul , ua + 4 ; move 3 , 4 )  
[6327] ( move 4 , ua + ul ; move 2 , 4 ; move 3 , 0 )  | ( move 4 , ul ; v0 = 3 ; move 4 + ul , 4 )  
[6328] ( move ua + 3 , 4 ; move ul , 0 ; move 2 , 4 )  
[6329] ( move 0 , 2 ; move ua , 3 ; move ua - 4 , 4 )  
[6330] ( move 4 , ul / ua ; move 2 - ul , ul + ul )  
[6331] ( move ul , 3 / 2 ; move ua + ul , ul / ua )  
[6332] ( move 0 - ua , 0 ; move 3 , 4 ; v0 = ul )  
[6333] ( move 3 , 2 ; move ua , 3 ; move 3 + 2 , ul )  
[6334] ( move ua , 4 + 2 ; move ul , 0 ; move 4 , 3 )  
[6335] ( move ua , ua / 4 ; move 2 / ua , ul - ua )  | ( ( move ul / 4 , ua ; v0 = 4 ) ; move ua , ua / v0 )  
[6336] ( move 4 , 0 ; move 3 + 2 , 4 ; move ul , ua )  | ( ( move 4 , ua ; move 3 + 3 , 4 ) ; v0 = ua - 3 )  
[6337] ( ( move 3 * 2 , ul ; move 4 , 4 ) ; pen 3 )  
[6338] ( move ua - ul , 4 + 3 ; move ul / ua , ul )  | ( move ul , 4 ; v0 = 0 - 4 ; move v0 , 3 )  
[6339] ( ( move 4 , 4 ; pen ul ) ; move 3 / 2 , 2 )  
[6340] ( move ua - ul , 3 / ua ; move ua , 4 / ua )  
[6341] ( move 0 , ul ; move 2 , 2 / 4 ; move 2 , ul )  
[6342] ( move 0 , ua ; move 3 , 2 ; move 3 , ua / 4 )  
[6343] ( move 4 , 2 ; move 3 , 3 ; move 2 , ua + ul )  
[6344] ( move 4 , 2 ; move ul , 0 ; move 2 - 4 , ul )  
[6345] ( move 0 , 4 ; move 2 , ul ; move 4 - ua , 3 )  | ( move 4 , ua * ua ; move ul / ua , ul ; move 0 , 0 - 2 )  
[6346] ( move 2 , 2 ; move ua , 4 ; move 2 , ua * 3 )  | ( v0 = 2 ; ( move v0 , v0 ; move ua + 2 , 4 ) )  
[6347] ( move ua , 0 ; move 2 , ua ; move 3 , 4 / 3 )  
[6348] ( move 3 , 4 ; move ul - 4 , 2 ; move ua , 0 )  
[6349] ( move ua , ul ; move 4 + 3 , 2 ; v0 = 0 )  | ( move ua , ul ; move 4 , ua + 2 ; move 2 + ul , 0 )  | ( move ua , ua + ul ; ( move 4 , 2 ; move 3 , ua ) )  
[6350] ( move 3 - ul , ul / 4 ; move ua + ul , ul )  
[6351] ( move 2 - 4 , 4 ; move ua , ul ; move 3 , 0 )  
[6352] ( move 3 , 0 ; move 3 , ua - ul ; move 4 , 3 )  
[6353] ( move ua - 2 , 4 ; move ua , 4 ; move 0 , 4 )  | ( move ua - 2 , 4 ; v0 = 2 ; move ua , 4 )  
[6354] ( move 4 , 0 ; move ul , ul - 3 ; move 2 , 3 )  
[6355] ( move ua / 4 , ul - 4 ; move ua , ua - ul )  
[6356] ( move 2 , ua ; move ul , 3 - 2 ; move 2 , 4 )  | ( move 2 , 0 ; move ul , ul ; move ul + ul , 4 )  
[6357] ( move ul - 4 , 4 ; move ua , 3 ; move 2 , 0 )  
[6358] ( move ul , 3 ; move 4 , 2 + ul ; move 2 , 2 )  
[6359] ( move ua + 3 , 2 ; move 3 , 4 ; move 3 , ua )  
[6360] ( move 0 , 4 ; move ul - 4 , 0 ; move 4 , ul )  | ( move 4 / 3 , 4 ; move ul - 4 , ua ; move 4 , ul )  | ( move 0 - 3 , 4 ; ( move 4 , ul ; pen 0 ; v0 = ua ) )  
[6361] ( move 4 , 0 - 4 ; move ua , ua ; move 2 , 4 )  
[6362] ( ( move 3 , 4 ; pen 4 ) ; move ul - 3 , 4 )  
[6363] ( move ua , ul / ua ; move 2 + ul , ul / 4 )  
[6364] ( move 3 , 2 ; move ua , ua * 4 ; move 3 , 2 )  
[6365] ( move ua / 2 , ul ; move ul - ua , ul / 4 )  
[6366] ( move ua , ua * 2 ; move 3 , 3 ; move 4 , 2 )  
[6367] ( move 4 , 0 ; move 4 , ul - ua ; move 3 , 3 )  
[6368] ( move ul , 0 ; move ua , 4 * 3 ; move 2 , 4 )  
[6369] ( move 3 , 2 ; move 0 , ua / 4 ; move 4 , ua )  
[6370] ( move ul , 2 - 3 ; move ul , 2 ; move 3 , 3 )  
[6371] ( move ua + 4 , 4 ; move ul , 3 ; move 2 , 2 )  
[6372] ( move ua , 3 ; move 0 - 2 , 4 ; v0 = ul )  | ( move ua , 3 - ua ; move ul - 3 , 4 ; v0 = 0 )  
[6373] ( move 3 , 2 ; move 3 , ul ; move 2 - ua , 4 )  
[6374] ( move 2 , 3 ; move 2 , 4 / ua ; move ua , 2 )  
[6375] ( move ua + ul , ul / ua ; move ua / 4 , 4 )  
[6376] ( move 4 - ul , ul / ua ; move 4 , ua * ua )  
[6377] ( move 0 , ua ; move 4 + ul , 4 ; move 3 , 4 )  
[6378] ( move ua - ul , ua - ul ; move 4 , ul / 4 )  
[6379] ( move 4 , 0 ; move ua , ul - 4 ; move 4 , 2 )  
[6380] ( move 2 , ul ; move 4 + 2 , 4 ; move ul , 2 )  
[6381] ( move 4 , 2 ; move ua , ul - 4 ; move 4 , 0 )  
[6382] ( move 4 , ua ; move 3 , 3 + 2 ; move ul , 4 )  
[6383] ( move 2 , ua / 2 ; move ua , 3 ; move 4 , 3 )  
[6384] ( move ul , 4 + ul ; move 3 , 2 ; move 2 , 4 )  
[6385] ( move ul , 3 * 2 ; move 2 , 4 ; move ua , 3 )  
[6386] ( move 3 , 3 / 2 ; move 0 , ul ; move 4 , ul )  
[6387] ( move 4 , ua ; move 0 , 4 * 2 ; move 4 , ul )  
[6388] ( move 3 , ul ; move 3 , 3 / 4 ; move 0 , ua )  
[6389] ( move ua , 4 ; move 0 , 4 ; move ua / 4 , 2 )  | ( move ua , 4 ; ( move ul , 3 ; move ul + ul , 3 ) )  
[6390] ( move 3 * 2 , ul ; move ul , 2 ; move 4 , 2 )  
[6391] ( move 3 , 4 * 4 ; move 2 , ul ; move ul , 0 )  
[6392] ( move 3 + 3 , 4 ; move ul , ul ; move 2 , 3 )  
[6393] ( move 3 , ul ; move 2 , ul ; move 4 * 2 , 2 )  
[6394] ( move 3 * 2 , 4 ; move ua , 4 ; move 2 , ua )  
[6395] ( move ua , 2 ; move 4 + 4 , 4 ; move ul , 2 )  
[6396] ( move 3 + ul , 4 ; move ua , 4 ; move 3 , 2 )  
[6397] ( move 4 , 0 ; move ul , ul ; move 4 , 3 * 2 )  
[6398] ( move ul / ua , ul / 4 ; move 3 + ul , ul )  
[6399] ( move ua , 2 ; v0 = ul ; move 0 - 4 , 4 )  
[6400] ( move 4 , ul / 4 ; move ul + ul , ul / ua )  
[6401] ( move ua , ul ; move 4 , 3 ; move 4 , 4 + 2 )  
[6402] ( move ul - 4 , ua / 4 ; move ul , ul / ua )  
[6403] ( move 4 , ua ; move 3 / 4 , 2 ; move 2 , ua )  
[6404] ( move 0 , ua ; move 3 , 3 / 4 ; move 4 , ul )  
[6405] ( move 3 , 3 ; move ul , ul ; move 4 / 3 , 0 )  
[6406] ( move 4 , 0 ; move 3 - ul , ul ; move 4 , 4 )  
[6407] ( move 0 , 3 / ua ; move 4 , ua ; move 4 , 4 )  
[6408] ( move 4 , 4 ; move 2 , 4 ; move ul , 2 - ua )  
[6409] ( move ua - 3 , 2 ; move 4 , ul ; v0 = 2 )  
[6410] ( move 4 , ul ; move 2 , 4 ; move 4 , 2 + ul )  
[6411] ( move ul , ul ; move 2 , 4 * 2 ; move 4 , 2 )  
[6412] ( move 3 , 2 ; move 4 , ua ; move 4 , 4 - ua )  
[6413] ( move 4 , ua * 2 ; move 4 , 3 ; move 3 , ul )  
[6414] ( move 4 , 4 ; move 3 + ul , 3 ; move 4 , ua )  | ( move ul , 4 ; move 3 , ua ; move ua + ul , 3 )  
[6415] ( move 4 - ua , 3 ; move 3 , 4 ; move ul , 3 )  
[6416] ( move 4 , ua - 4 ; move 2 , 3 ; v0 = ua )  | ( move 0 , ua - 4 ; move 4 , ua + ua ; move 2 , 3 )  
[6417] ( move ua , ua + 2 ; move 4 + 2 , 2 ; pen 0 )  | ( move ua , 2 ; move ul , ul + ul ; move 4 + ul , ua )  
[6418] ( move 4 + ul , 4 ; move 3 , 2 ; move ul , 4 )  
[6419] ( move ua - 4 , 4 ; move 3 , 2 ; v0 = ua )  
[6420] ( move 3 , 2 / ua ; v0 = 4 ; move ua , 2 )  
[6421] ( move ul , 2 ; move 4 , 4 * 3 ; move ua , 3 )  
[6422] ( move 0 , ul / 2 ; pen 0 ; move ua , 3 + 2 )  
[6423] ( move ua , 2 ; ( move ul , 2 ; move 4 , 3 ) )  
[6424] ( move 3 , 3 / 2 ; move ua , 3 ; v0 = ul )  
[6425] ( ( move 3 , 0 ; move 3 , ul ) ; move ul , 4 )  
[6426] ( move 3 , 3 ; ( move ua , 3 ; move 3 , ua ) )  | ( move 2 + ul , 3 ; v0 = ua + 3 ; move v0 , v0 )  | ( v0 = 3 ; move v0 , v0 ; move v0 * v0 , v0 )  
[6427] ( move ua , 4 ; move 4 , 3 * 2 ; v0 = ua )  
[6428] ( move 4 + 3 , 2 ; move 4 , ul ; v0 = ul )  
[6429] ( move 2 , ul ; move ul , 4 * 3 ; move 4 , 3 )  
[6430] ( move 3 , 4 / ua ; move 4 , 3 ; move 3 , ua )  
[6431] ( move ul - 3 , ul ; move 4 , 3 ; move 3 , 4 )  
[6432] ( move ua - 3 , 4 ; move ua , 4 ; v0 = 4 )  
[6433] ( move 3 + ul , 0 - 2 ; pen 3 ; move ua , 2 )  
[6434] ( ( move 2 , 2 ; move ul , ul ) ; move 4 , 3 )  
[6435] ( move ul - 2 , 0 ; pen 0 ; move 3 , ua / 2 )  
[6436] ( move 2 , 2 ; move 3 , ul / 4 ; v0 = ul )  
[6437] ( move 4 , 2 ; move 2 , ul / 3 ; v0 = ul )  
[6438] ( move 0 , 2 ; move ua + 3 , ua / 4 ; pen 0 )  
[6439] ( move 0 - ul , 2 ; pen 2 ; move 3 + ul , 2 )  
[6440] ( move ul , 3 ; move 4 - 3 , ul ; move 4 , 4 )  
[6441] ( move ul - 2 , 0 ; pen 0 ; move 3 , 4 + ul )  
[6442] ( move ua / 4 , 2 ; move 3 , 4 ; v0 = ua )  
[6443] ( move ua , 4 ; move ua / 4 , 2 ; v0 = 4 )  | ( move ua , 4 ; v0 = 3 ; move v0 / 2 , 2 )  
[6444] ( move 0 , 0 ; pen ul - ua ; move 4 , 3 * 2 )  | ( ( move 0 , 2 ; move 0 , 4 ) ; pen 0 ; move 4 , ua )  
[6445] ( ( move 4 , 2 ; move 4 , ua ) ; move ua , 4 )  
[6446] ( ( move 4 , 2 ; move ul , ul ) ; move 4 , 2 )  
[6447] ( move 4 , 4 ; ( move 2 , ul ; move 3 , ua ) )  | ( move 4 , 4 ; move ul , ul ; move 4 , ua * 2 )  | ( v0 = 4 ; move v0 , v0 ; move v0 + ul , ul )  
[6448] ( pen 4 ; v0 = ua - 2 ; move v0 , v0 )  | ( v0 = 4 ; pen v0 ; move v0 , ul - 3 )  | ( pen ua - 3 ; ( move 4 , ua - 2 ; move ul , 2 + ul ) )  
[6449] ( pen ul ; move 2 , 0 ; move 0 - 4 , ul - 3 )  
[6450] ( pen 3 ; v0 = 4 + ul ; move v0 , v0 )  
[6451] ( move 2 * 2 , ua ; pen 0 - 4 ; move ul , 2 )  
[6452] ( move 3 , 3 ; pen ul ; move ua + 2 , 3 + 2 )  
[6453] ( move ua , 2 / 3 ; move ul , 0 - 4 ; pen 0 )  
[6454] ( pen 3 ; move 4 * 2 , 0 ; move ul , 0 - ul )  
[6455] ( move ua / 2 , 3 + 3 ; pen ua ; move 3 , 0 )  
[6456] ( move 2 , ul ; pen 0 ; move 2 - 4 , ua - 3 )  
[6457] ( pen 4 ; move 4 + ul , 0 ; move 3 , 2 + ul )  
[6458] ( move 2 , 2 - 4 ; pen 2 ; move 3 - ua , ua )  
[6459] ( pen 2 ; move 3 , 0 - 3 ; move ua , 3 / ua )  
[6460] ( move 3 , 0 ; pen 3 + 3 ; move ua , ul / 2 )  
[6461] ( move 3 + 2 , 4 + ul ; move ul , 2 ; pen 2 )  
[6462] ( move ua , 3 * 2 ; move 2 , ul - 4 ; pen 0 )  
[6463] ( ( move 4 + ul , 0 ; pen ua ) ; move 2 , 0 )  
[6464] ( move ul , 4 ; ( move 4 , ul ; move 3 , 3 ) )  
[6465] ( move ua + 2 , 4 + 2 ; pen 3 ; move ul , 3 )  
[6466] ( move 3 , 3 + 3 ; pen 4 ; move 2 , ua + ua )  
[6467] ( move 2 , 0 ; move 2 - ua , 4 / ua ; pen 3 )  
[6468] ( pen 2 ; move 0 , 4 - 2 ; move ua , ul / 2 )  
[6469] ( move ua , 0 ; ( pen 0 ; move 4 - ua , 3 ) )  
[6470] ( move 4 , 0 ; ( pen 0 ; move 3 , ua + ul ) )  | ( move 4 , 0 ; pen 0 ; ( v0 = ul ; move 3 , ul ) )  | ( ( move 4 , ua ; pen 0 ; move 4 - ul , ul ) ; move 0 , ul )  
[6471] ( pen 2 ; move 3 - ua , ul ; move 3 + 3 , 3 )  
[6472] ( move 3 , 2 ; pen 3 * 2 ; move 2 , ul - ua )  
[6473] ( pen 2 - ul ; move 3 , ul - 2 ; move 3 , 2 )  
[6474] ( move ul , ul ; ( pen 0 ; move 4 + 2 , 0 ) )  
[6475] ( move ua , 3 - 4 ; pen 0 ; move ul , 3 * 2 )  
[6476] ( pen 3 ; move ul , 2 + 2 ; move 4 - ul , 2 )  
[6477] ( move ua + 2 , 3 ; move ul / 3 , 2 ; pen 2 )  | ( move ua + 2 , 2 + ul ; move ul , 2 ; pen 0 )  
[6478] ( move 4 , 2 - ua ; pen ua * 2 ; move 3 , 2 )  
[6479] ( move 3 , 2 ; move 4 * 2 , 2 ; pen ua + ul )  
[6480] ( move ua / 2 , 3 ; pen 0 ; move 3 , 4 - ua )  
[6481] ( move 3 , 2 ; pen 4 - ua ; move 2 - ul , 2 )  
[6482] ( pen 4 ; v0 = ua ; move 4 , v0 * v0 )  
[6483] ( move 2 + ul , 3 + ul ; move 3 , 3 ; pen 3 )  | ( move 3 , ua + 4 ; move 4 - ul , 3 ; pen ua )  | ( move ua / 2 , 4 ; move 2 + ul , 3 ; pen ul )  | ( v0 = 3 ; move v0 , 4 ; move v0 , v0 )  | ( v0 = 3 ; move v0 , 3 + ul ; move 3 , v0 )  | ( ( v0 = 3 ; move v0 , 4 ) ; move v0 , v0 )  
[6484] ( move 2 , 4 + ul ; pen 4 ; move ua - 4 , 0 )  
[6485] ( move 4 , ua - 4 ; pen 0 ; move ul , 4 - 2 )  
[6486] ( move 4 , 4 + ul ; pen 0 ; move ua , 4 * 2 )  
[6487] ( pen ul ; move 3 + ul , 3 ; move 4 + 3 , 2 )  
[6488] ( move 4 , ua / 2 ; move 0 - 4 , ul ; pen 2 )  
[6489] ( pen ua - ul ; move 4 , 4 ; move 0 - 3 , 3 )  
[6490] ( move 0 , 2 ; ( pen 0 - ul ; move 4 , ul ) )  
[6491] ( pen 4 / ua ; move ua + 2 , 4 ; move 2 , 2 )  
[6492] ( move ua + 2 , 4 * 3 ; move ua , 2 ; pen 4 )  
[6493] ( pen ul ; move 4 * 2 , ua ; move 3 , 3 + 2 )  | ( move 4 + 4 , ua ; move 3 , 4 + ul ; v0 = 4 )  
[6494] ( move ua - 2 , 4 + ul ; pen 3 ; move 2 , 4 )  
[6495] ( move ul - 4 , ul ; pen 3 ; move 3 , 2 + 2 )  
[6496] ( pen ua ; move ua , 3 + 2 ; move 4 , 4 + 4 )  
[6497] ( pen 4 - 2 ; move 3 , 3 ; move ul , ul - 2 )  
[6498] ( move ul - 4 , 2 ; move 4 / 2 , ul ; pen 0 )  | ( move 0 - 3 , ul + ul ; move 2 , ul ; v0 = ul )  | ( move ul , 3 ; ( move 2 - 4 , 0 ; move 3 , ul - 2 ) )  
[6499] ( ( pen ua ; move 2 + 2 , 3 ) ; move ul , 2 )  
[6500] ( move ul , 4 + 4 ; pen 2 ; move ua / 2 , 2 )  
[6501] ( move 3 , ua ; pen 4 + 4 ; move 3 * 2 , ua )  | ( move 3 , ua ; pen ua * 4 ; move ua - ul , ua )  
[6502] ( move 4 , 2 ; pen 0 ; move ul - 4 , ul - 4 )  
[6503] ( pen ul ; move 3 * 3 , 0 ; move ul , 4 + 4 )  
[6504] ( move 2 , 2 + ul ; pen 2 / 4 ; move 3 , ul )  
[6505] ( move 3 - 4 , ua - ul ; pen 2 ; move 4 , 2 )  
[6506] ( move ua , ua + ua ; move ua - 2 , ua - ul )  
[6507] ( move ua , 4 * 2 ; move 4 , 4 ; pen ua + 2 )  
[6508] ( move 4 , ua / 4 ; pen 2 ; move ua + 2 , 3 )  
[6509] ( pen ul ; move ul , 4 - 2 ; move 3 , 4 + 2 )  
[6510] ( move 2 , 4 ; pen 0 ; move 4 + ul , ul / 3 )  
[6511] ( pen 2 ; move ua / 2 , 4 ; move 4 , ua + 3 )  
[6512] ( pen 3 + ul ; move 4 , 3 ; move 3 + 3 , ul )  
[6513] ( pen 4 ; move 3 - ua , ul ; move 3 * 2 , 2 )  
[6514] ( pen 2 ; ( move 2 + ul , 3 ; move ua , 2 ) )  
[6515] ( pen 2 ; ( move 3 , ul - 3 ; move ua , 0 ) )  
[6516] ( move ul - ua , ua + ua ; move ua + 2 , ul )  
[6517] ( pen 3 ; move ua , ul ; move 2 * 2 , 3 / 2 )  
[6518] ( move ul , 2 ; pen 2 + ul ; move 4 , 4 - 3 )  
[6519] ( pen 3 ; move ua - 3 , ua ; move 3 * 3 , 3 )  
[6520] ( ( move 2 , 3 + 3 ; pen ua ) ; move ua , 2 )  
[6521] ( move 3 , 2 ; pen 2 ; move 3 * 2 , ul / ua )  
[6522] ( pen 4 ; move 2 + 2 , 3 - 4 ; move ul , ul )  
[6523] ( move 3 , 0 - 4 ; move 2 , ul / 4 ; pen ul )  
[6524] ( move 4 + 3 , 4 ; move 3 - ua , 3 ; pen ul )  
[6525] ( ( move 4 , ua + 2 ; pen 3 ) ; move 2 , ua )  
[6526] ( move 2 , 0 ; ( pen ul + ul ; move 3 , 4 ) )  
[6527] ( move 4 , 4 ; move 3 + ul , 4 + 2 ; pen ul )  
[6528] ( ( pen 3 ; move 2 , 0 ) ; move ul - 3 , ul )  
[6529] ( move 4 , 2 / ua ; pen 4 ; move ua + 2 , 4 )  
[6530] ( pen ul ; move 2 , 4 - 3 ; move 4 - ua , 3 )  | ( pen 3 / 2 ; move 2 , 4 ; move 2 , ul / ua )  
[6531] ( move 4 + 4 , 3 + 2 ; pen 4 ; move ul , ul )  
[6532] ( move 3 , ul / 2 ; move 3 , 4 + 3 ; pen ua )  
[6533] ( move ua , 4 ; pen 2 - 3 ; move ul - 3 , 4 )  
[6534] ( move 3 , ul ; move 2 - ua , 4 * 3 ; pen 3 )  
[6535] ( pen 2 ; move ua , ua - 2 ; move 3 / 4 , 4 )  
[6536] ( pen ua ; move 2 * 2 , 4 / 3 ; move ul , 2 )  
[6537] ( pen 3 ; move 3 * 2 , 3 ; move 4 , ua * ua )  
[6538] ( move 2 , ul ; ( pen 2 ; move 2 * 2 , ua ) )  | ( move 3 , ul ; ( pen 2 ; move 3 , 0 ) ; move 0 , 2 )  
[6539] ( move 4 , 4 + 2 ; pen ul ; move ul , 4 + 3 )  
[6540] ( move 3 , 4 + 2 ; move 4 , 2 / ua ; pen ul )  
[6541] ( move 3 , ua - 3 ; ( move ua , 2 ; pen 2 ) )  | ( move 4 - ul , ul - 4 ; v0 = 4 ; move ua , 2 )  | ( v0 = ua - 3 ; move v0 , v0 ; move ua , 3 - ul )  
[6542] ( ( pen 2 ; move 3 , ua ) ; move ul , 3 + 2 )  
[6543] ( move 4 + ul , 4 + ul ; pen 3 ; move 3 , 3 )  
[6544] ( move 2 / 4 , 2 ; pen 2 ; move ul - ua , 4 )  
[6545] ( pen 4 ; move 3 , 4 + 2 ; move ul , 3 - ul )  
[6546] ( move ua , 4 ; pen ua + 4 ; move 4 + 4 , 4 )  
[6547] ( ( move 3 , ul - 4 ; pen 0 ) ; move ua , 3 )  
[6548] ( move ul , ua * ua ; move ul - ua , 0 - ul )  
[6549] ( ( pen 2 + ul ; move 3 , ua ) ; move 3 , 3 )  
[6550] ( move ul , 2 ; pen ua / 2 ; move 3 , 4 * 3 )  
[6551] ( move ul - 4 , 0 ; ( pen 3 ; move ul , 2 ) )  | ( move 0 - 3 , 0 ; pen 4 ; move ul , ul + ul )  
[6552] ( move 4 , ua ; ( pen ua + 2 ; move 3 , 3 ) )  
[6553] ( pen 4 ; ( move 4 , ua ; move 2 , ua + 2 ) )  
[6554] ( pen 4 - 3 ; move ul - ua , 3 ; move 3 , 4 )  
[6555] ( move ua , 4 * 2 ; ( pen ua ; move 2 , 2 ) )  
[6556] ( ( pen 2 ; move 4 , ua ) ; move 3 , 2 + ul )  
[6557] ( pen 4 ; move 2 , 3 / 2 ; move 4 , ua * ua )  
[6558] ( move ua , ua ; ( move 4 * 2 , 4 ; pen 0 ) )  
[6559] ( move ua , ul + ul ; move ua + 3 , ul + ul )  | ( move ua , 2 ; v0 = ua ; move 3 + v0 , 2 )  
[6560] ( move ul , ua * ua ; move 2 + ul , ua + ul )  | ( move ul , ua * ua ; v0 = ul ; move 3 , v0 )  | ( ( move ul , ua * ua ; move 3 , ul ) ; v0 = ua + 4 )  
[6561] ( move ul - ua , ul ; move ua + 3 , ua + ul )  
[6562] ( pen 4 ; ( move 4 , 0 - ua ; move 2 , ul ) )  | ( ( pen ul ; pen ua * 2 ; move 4 , 0 ) ; move 2 , ul )  
[6563] ( pen 2 + ul ; move 2 , ul / 3 ; move 4 , 4 )  
[6564] ( move ua , ua + 3 ; move ua , 2 ; move 2 , 0 )  
[6565] ( move 4 , 4 * 3 ; pen 3 ; move 3 - ul , ua )  
[6566] ( ( pen ua ; move 3 , ua + 2 ) ; move 4 , 4 )  
[6567] ( move ua , ua ; move 2 + 2 , 4 ; move ua , 0 )  | ( ( move ua , ua ; v0 = 4 ) ; move ua + 4 , v0 )  
[6568] ( move ua + ul , ua ; move ua - 4 , ul + ul )  
[6569] ( move ua , 3 - ul ; move ua + ul , ua * ua )  
[6570] ( ( move 3 , ul / 2 ; pen 0 ) ; move 3 , ul )  
[6571] ( pen ul ; move 3 , ul - 2 ; move 4 , 2 / 4 )  
[6572] ( move ua + ul , ua - 4 ; move ua , ua * ua )  
[6573] ( move 0 - 4 , ua ; move 2 , ul ; move ua , 0 )  
[6574] ( move 4 * 2 , 3 ; move 4 , ua * ua ; pen 4 )  
[6575] ( move ul - ua , ua ; move ua - 4 , ua + ul )  | ( move ul - ua , ua ; v0 = ua - 4 ; move v0 , ul )  
[6576] ( move ul , 2 + ul ; move ua - ul , ul + ul )  
[6577] ( pen ua ; ( move ua , 3 * 3 ; move 3 , 2 ) )  
[6578] ( move 2 - 3 , ul ; move 0 , ul ; move ua , 0 )  | ( move 0 - ul , ul ; move 3 , ul ; move 3 , ua )  
[6579] ( move 4 + 4 , 3 ; pen ul - 4 ; move ua , 4 )  
[6580] ( move ul , ua + ul ; move ua + ul , ua - 4 )  | ( move ua + ul , ul / ua ; move ul - 2 , ul )  | ( v0 = ul ; move v0 , ul ; move ua + v0 , ua - 4 )  
[6581] ( move 3 - ua , ua + ul ; move ul , ua * ua )  
[6582] ( move ua - ul , ua - ul ; move 2 - ua , ul )  
[6583] ( move ua - ul , ua - ul ; move 3 , ua + ul )  
[6584] ( pen 3 ; move 3 , 3 / 4 ; move ua , 4 + ul )  
[6585] ( move 2 , 0 ; move ua + 2 , ul ; move ua , 3 )  
[6586] ( move 0 , 2 ; move 2 , 2 ; move ua , ua * ua )  
[6587] ( pen 4 + ul ; move 4 , ul ; move 2 , 2 / 4 )  
[6588] ( move ua , 0 ; move ul , 2 ; move 2 / ua , 0 )  
[6589] ( move ul , ua * ua ; move 3 - ua , ua * ua )  
[6590] ( pen 2 ; ( move 4 - ua , 3 ; move ua , 4 ) )  
[6591] ( move ul , 0 ; move ul - 2 , ul ; move 3 , 0 )  
[6592] ( move 0 , 2 ; move ua - ul , ul ; move 2 , 2 )  
[6593] ( move 0 - 4 , ua ; move 0 , ul ; move 2 , ul )  
[6594] ( move ua - ul , 3 + ul ; move ul + ul , ul )  
[6595] ( ( pen 4 ; move 4 + ul , ua ) ; move 3 , 2 )  
[6596] ( move ua , 2 / 3 ; ( pen 3 ; move 2 , ul ) )  
[6597] ( move ua , 0 ; move 3 , ua - 2 ; move ua , 3 )  
[6598] ( move ua + ul , ua * ua ; move 3 - ul , ul )  | ( move ua + ul , ua * ua ; v0 = 4 + ul ; move 2 , ul )  
[6599] ( move ul - ua , ua * ua ; move ul , 3 - ua )  
[6600] ( move ul - ua , 2 ; move ul , 0 ; move 2 , 2 )  
[6601] ( move 0 - 4 , ua ; move 2 , ua ; move ua , 2 )  
[6602] ( move ua - ul , ul ; move ul + ul , ul - 2 )  
[6603] ( move 2 , ua ; move ua , 4 ; move ua , 0 - 2 )  
[6604] ( ( move 4 , 3 ; pen ua ) ; move 2 , ua * 3 )  
[6605] ( move ul , ul - 3 ; move ua + ul , ua * ua )  
[6606] ( move ul , ua - 2 ; move 3 , 0 ; move ua , 2 )  | ( move ul , ua ; move 4 , 2 - 4 ; move ua , 2 )  
[6607] ( ( move 2 , 3 ; pen 4 ) ; move 4 + ul , ua )  | ( ( move 2 , 2 + ul ; pen 4 ) ; move 4 + ul , 0 )  
[6608] ( ( move ua / 2 , 3 ; pen ua ) ; move 4 , 2 )  
[6609] ( move ul - ua , ul - 3 ; move ua , ua * ua )  
[6610] ( move ua , 4 ; ( pen 3 ; move ua , 2 - 4 ) )  
[6611] ( ( pen 4 ; move ua , ua / 3 ) ; move 4 , 0 )  
[6612] ( move ua - 3 , ua ; move 0 , 2 ; move ul , 2 )  
[6613] ( move ua , 0 ; move ua , 2 - 4 ; move 2 , ua )  | ( move ua , ua ; move 0 , 0 - 3 ; move ua + 2 , ua + ul )  
[6614] ( ( pen ua ; move 2 , 2 ) ; move 2 , ul / 4 )  | ( pen 4 ; move 4 , ua - ul ; move 3 , ua + 3 )  | ( pen ua * 3 ; move 3 , 2 ; move ul , ul / 3 )  
[6615] ( move ul / ua , 3 ; move ua + ul , ua + ul )  
[6616] ( move ua + ul , ul - ua ; move ul , 4 + ul )  | ( move ua + ul , ul ; move ul , 4 + ul ; v0 = ua )  
[6617] ( move 2 , 0 ; move ua , 4 ; move 2 , ua + ul )  
[6618] ( move 3 + 2 , 0 ; move ul , ul ; move ul , 2 )  
[6619] ( move ua + ul , ua ; move ul - ua , ua / 4 )  
[6620] ( move ua , 0 ; move 3 - ul , 2 ; move ul , 2 )  
[6621] ( move ua , 2 ; move ua , ul ; move 2 , 0 - 4 )  
[6622] ( move ua , 3 + 2 ; move 2 , 2 ; move ua , ul )  
[6623] ( move ul , 3 + 3 ; move ua , 2 ; move ul , 0 )  
[6624] ( move ua , ua - 4 ; move ul / ua , ua + ul )  
[6625] ( move 4 , 4 * 3 ; ( pen 0 ; move ul , ul ) )  
[6626] ( move 2 / ua , ul + ul ; move ua - ul , ul )  | ( move ul / 3 , ul ; move ua - ul , ul + ul )  
[6627] ( move ul + ul , ul ; move ul - ua , ul - 3 )  
[6628] ( move 0 , ua ; move 3 , 3 ; move ua - ul , 2 )  
[6629] ( move 2 , ul ; move ua , 0 - ul ; move 3 , 2 )  
[6630] ( move 4 - ul , ua - ul ; move ua , ua * ua )  
[6631] ( move ul , ua * ua ; move ua + ul , ul / 2 )  
[6632] ( move 2 + ul , 0 ; move ua , ul ; move 4 , 2 )  
[6633] ( move ua , 0 ; move ua , 2 ; move 4 - ul , 2 )  
[6634] ( move ua , 0 ; move 0 - ul , ua ; move 4 , 4 )  
[6635] ( move 2 , 0 - ul ; move ua , 2 ; move ua , 4 )  
[6636] ( move ua , ua - 3 ; move 2 , 3 ; move 0 , ul )  
[6637] ( ( move 3 , ua ; pen 3 ) ; move 4 * 2 , ul )  
[6638] ( move ul , 4 + ul ; move ul - ua , ul - ua )  
[6639] ( move ua + ul , 2 / ua ; move ul , ul / ua )  
[6640] ( move ul + ul , ua * ua ; move ua , 4 / ua )  
[6641] ( move ua , 0 ; move ua , 4 ; move 3 - ul , 2 )  
[6642] ( move ul - ua , ua - 4 ; move ua , ul / ua )  
[6643] ( move ul + ul , ul ; move ua + ul , ul / 3 )  
[6644] ( move 0 , 3 ; move ul - 4 , 0 ; move ul , ul )  | ( move ul - 4 , 3 ; v0 = 3 - 2 ; move ul , v0 )  | ( move ul , ul ; ( move 3 , 4 - 2 ; move 3 - ua , 0 ) )  
[6645] ( move ua , ul - 3 ; move ul + ul , ul / ua )  
[6646] ( move ua + ul , ul - 3 ; move ul , ul / ua )  
[6647] ( move ua - ul , 3 ; move ul + ul , ul / ua )  | ( move ul + ul , 0 ; move ul - ua , 3 ; v0 = 0 )  
[6648] ( move ul , 0 ; move ua + 3 , 4 ; move ua , 3 )  
[6649] ( move ua - 4 , ul / ua ; move ua + ul , ul )  
[6650] ( ( pen 3 + ul ; move 4 , ul ) ; move 3 , 4 )  
[6651] ( move 0 , 3 ; move ul , ua ; move ua , 4 + 3 )  | ( move ul , 2 + ul ; move ua , 4 + 3 ; pen 0 )  
[6652] ( move 0 - ua , ul ; move 3 , ul ; v0 = 0 )  
[6653] ( move ul - ua , ua ; move 4 / ua , ul + ul )  
[6654] ( move 3 , 0 ; move ul - 3 , ua ; move ul , 2 )  
[6655] ( move 4 , ul ; move 0 - 4 , 0 ; move ua , ul )  | ( move 0 - 4 , ul - ua ; move ua , ul ; v0 = 0 )  
[6656] ( move ua , 2 ; move ua + 2 , 2 ; move ul , 4 )  
[6657] ( v0 = ua - ul ; move v0 , v0 * v0 )  | ( v0 = ul - ua ; move v0 , v0 * v0 )  
[6658] ( move 2 , 2 ; move ua , 3 + 2 ; move ul , ul )  
[6659] ( ( move 4 , 4 ; pen 3 - 4 ) ; move ua , ua )  
[6660] ( move ul , ua + ul ; move ua + ul , ul / 4 )  | ( move ul , ul ; v0 = ua + ul ; move v0 , ul / 4 )  
[6661] ( move 3 , 2 + 2 ; move ua , ul ; move 2 , ul )  
[6662] ( move 2 , ua ; move ua , ul ; move 2 , 2 - 3 )  
[6663] ( move ul , ua ; move ua + 3 , 2 ; move 4 , 2 )  
[6664] ( move 4 , ul ; move 2 , 3 ; move ul - ua , 0 )  
[6665] ( move ua , 0 ; move 3 - ua , 2 ; v0 = ul )  
[6666] ( move ua - 2 , 0 ; move ul , 4 ; move ul , 3 )  
[6667] ( move 2 , ul ; move 0 , 3 ; move ua , 3 / ua )  
[6668] ( ( move 4 , 4 ; pen ua ) ; move ul , 3 - 4 )  
[6669] ( move ul , 0 ; move 3 , 4 + ul ; move 2 , ul )  
[6670] ( move 2 , ul ; move 2 , 2 ; move 4 + ul , ua )  
[6671] ( move ua , 3 ; move 2 + 2 , ul ; move 3 , ul )  
[6672] ( move ua , ua ; move 2 , 3 ; move 4 , 2 + ul )  
[6673] ( move 0 , 4 ; move ua , ul / 2 ; move 2 , ua )  
[6674] ( move ua , 2 ; move 2 , 0 ; move ul / 3 , ul )  | ( move ua + 2 , 2 ; move ul / 3 , ul ; v0 = ul / ua )  
[6675] ( move ul , 0 - 3 ; move ua , 2 ; move ul , 4 )  
[6676] ( move 4 , 0 ; move ul , 3 ; move ul , 2 - ua )  
[6677] ( move ul , 0 ; move 4 , ul ; move ul - 2 , 2 )  
[6678] ( move ul , 0 ; move 2 - ul , 4 ; move ua , 3 )  | ( move ul , 0 ; move ul , ua + 4 ; move ua , 3 )  
[6679] ( move ua , 3 ; move ua , 4 + ul ; move 2 , 2 )  
[6680] ( move ua + 4 , 4 ; move 0 , ul ; move ua , 3 )  
[6681] ( ( move ua , 4 * 3 ; pen ua ) ; move 4 , 4 )  
[6682] ( move 3 , ul ; move 0 , ul ; move ua - 3 , 3 )  
[6683] ( move ua + ul , 4 ; move 2 , 2 ; move 2 , ul )  
[6684] ( move ul - ua , 0 ; move ul , 4 ; move 3 , 2 )  
[6685] ( move 3 , ul ; move 2 , ul ; move ua , 3 + 2 )  
[6686] ( move 2 , 0 ; move ua , ul / 2 ; move ua , 4 )  
[6687] ( move 4 , 0 ; move ua - ul , 3 ; move ul , 2 )  
[6688] ( move 0 , ua ; move 3 , 4 * 2 ; move ua , ul )  
[6689] ( move ul , 0 ; move 2 , ul ; move 2 , 4 - ul )  
[6690] ( move 2 , 0 ; move 3 , 4 + ul ; move ul , ul )  
[6691] ( move 3 - ua , ul ; move ul , 2 ; move 4 , 0 )  
[6692] ( move ua , 3 / 2 ; move 0 , ua ; move ul , 4 )  | ( move ua , 3 / 2 ; v0 = ul ; move v0 , 4 )  
[6693] ( move 2 , 4 ; move 2 , ul ; move 2 + ul , ul )  
[6694] ( move 3 , 3 ; move 0 , ul ; move ua - 4 , ul )  
[6695] ( move 0 , 4 + 3 ; move ul , 4 ; move ua , ul )  
[6696] ( move ul + ul , ul ; move 2 , 2 ; move 2 , 4 )  
[6697] ( move 4 - ua , 4 ; move ul , 0 ; move ua , 3 )  
[6698] ( move 4 , ua ; move 2 , 2 ; move 3 , ul - ua )  
[6699] ( move 2 , ua ; move ul , 0 - 4 ; move 4 , ul )  
[6700] ( ( pen ul ; move 3 , 4 * 4 ) ; move ul , 3 )  | ( move ul - 2 , ul / ua ; move ul - 4 , 0 - 3 )  
[6701] ( move ua , ua ; move 3 , 2 ; move 2 - 4 , ul )  
[6702] ( move ua , ul ; move 3 , 2 ; move 4 / ua , 0 )  
[6703] ( move 3 , ua ; move 3 , 0 ; move ul - 4 , ul )  
[6704] ( move ul , 0 ; move 3 , 4 ; move ul , ul - 2 )  
[6705] ( move ua , ul ; move 4 , 3 - ua ; move 2 , 2 )  
[6706] ( move 2 * 2 , ua ; move ul , ul ; move 3 , 2 )  
[6707] ( move ua - 4 , 0 ; move ul , 4 ; move ua , 3 )  
[6708] ( move ul , 4 ; move 2 - ua , 4 ; move ul , 0 )  
[6709] ( move 4 , 3 ; move ua , 2 ; move 2 - ul , ua )  
[6710] ( move ua , ua ; move ua , 4 ; move 4 + 3 , 2 )  
[6711] ( move 3 + ul , ul ; move 2 , 3 ; move 2 , ul )  
[6712] ( move ul , 2 ; move ua , 2 ; move 3 , ua - 4 )  
[6713] ( move 4 , ua ; move 2 + ul , 2 ; move 3 , ul )  
[6714] ( move 0 , 4 ; move ua - ul , ul ; move 2 , 4 )  
[6715] ( move ul , 3 - 2 ; move ul , 2 ; move ua , 3 )  | ( ( pen ul ; move ul , ul ) ; move ul , 4 / 2 ; move ua , 3 )  
[6716] ( move ua , 3 / 4 ; move 0 , ua ; move ul , 2 )  
[6717] ( move 2 , ul ; move 4 , ua + 4 ; move ua , 2 )  
[6718] ( move 3 , 3 ; move 3 + ul , 2 ; move ul , ua )  | ( move 3 , 3 ; ( v0 = 2 ; move 4 + ul , v0 ) )  
[6719] ( move 2 , 4 ; move ua , ua / 3 ; move ul , 0 )  
[6720] ( move 3 , 4 ; move ua + ul , 4 ; move 0 , ul )  | ( move 2 , 4 ; move ul , ua ; move ua + ul , 2 + 2 )  
[6721] ( move 0 , ul ; move ua , 4 + 4 ; move 3 , ul )  
[6722] ( move 4 , ul ; move ua , 4 ; move 0 - ul , 2 )  
[6723] ( move ul + ul , 2 ; move 3 , 3 ; move ul , 2 )  
[6724] ( move 3 - ua , 3 ; move 3 , ul ; move ua , 3 )  
[6725] ( move ul , 2 ; move ul , 3 ; move 4 + ul , 2 )  
[6726] ( move ul , 4 + 2 ; move 2 , ul ; move ua , 4 )  
[6727] ( ( move ua , 0 ; move 2 , 2 ) ; move ul , ul )  | ( move ua , ua ; ( move 2 , 2 ; pen ul ) ; move ul , ul )  
[6728] ( move 3 , ua ; move 2 - 4 , ul ; move ul , 2 )  
[6729] ( move ua , 3 ; move ua , 4 * 4 ; move ul , 0 )  
[6730] ( move ul , ul ; move ua , 2 ; move 2 , 4 * 2 )  
[6731] ( move 2 , 3 ; move ul , 2 ; move 4 , ul + ul )  
[6732] ( move 4 , 2 ; move 4 - ua , 2 ; move ua , ul )  
[6733] ( move 3 , 3 ; move 2 , 3 ; move ul + ul , ul )  
[6734] ( move 0 - ua , ul ; move 4 , 3 ; move ul , 4 )  
[6735] ( move 4 , ua ; move 0 , 3 ; move ua , ua / 4 )  
[6736] ( move ul + ul , 3 ; move 3 , 2 ; move 3 , ul )  
[6737] ( move 3 , ul ; move ua - 3 , 2 ; move ua , 4 )  
[6738] ( move 4 , ua ; move 2 - 4 , ul ; move ua , 2 )  
[6739] ( move ul , 4 ; move 3 , 3 ; move ua , 2 + ul )  
[6740] ( move 2 , ul ; move 4 , ua - ul ; move 2 , 3 )  
[6741] ( move 3 , ul ; move ua + 3 , 4 ; move ul , 2 )  
[6742] ( move 4 - ua , ua ; move 4 , 4 ; move 0 , ul )  | ( ( v0 = 4 ; move v0 - ua , ua ) ; move v0 , v0 )  
[6743] ( move ua , 4 ; move 2 , ul ; move 3 , ul - 2 )  
[6744] ( v0 = ua ; move ua , 0 ; move 4 / ua , 2 )  
[6745] ( move 4 , 2 ; move 3 , 2 - ul ; move ua , ul )  
[6746] ( move ua , 0 ; move ul , 3 / ua ; move 3 , 4 )  
[6747] ( move 3 , ua - ul ; move ua , 4 ; v0 = 0 )  | ( move 0 , ua ; move 3 , ua - ul ; move ua , 4 )  
[6748] ( move ul , 2 ; move ua , 4 ; move ua + 3 , 4 )  
[6749] ( move ul , ul / ua ; move 4 + ul , ul / ua )  
[6750] ( move 4 , 4 + 3 ; move ul , 0 ; move ul , ul )  | ( ( move ua - ul , 4 + 3 ; v0 = ua ) ; move ul , ul )  
[6751] ( move ua , 2 ; move ul , 3 ; move 2 , ua / 3 )  
[6752] ( move 4 - ua , 3 ; move 3 , ul ; move ua , 2 )  
[6753] ( pen ua ; move ul + ul , 0 ; move 0 - 2 , 0 )  
[6754] ( move 2 , ul ; move ua , 4 ; move 4 + ul , 2 )  
[6755] ( move 2 , ua ; move ul , ua ; move 4 , 2 - 4 )  | ( move 3 , ua * 2 ; move 4 , ul - 3 ; v0 = 4 )  
[6756] ( move ua + ul , 4 ; move ul , 0 ; move 4 , 4 )  | ( v0 = 4 ; move ua + 2 , v0 ; move v0 , v0 )  
[6757] ( move ua , 4 ; move 4 , ua ; move 3 , 2 - ua )  
[6758] ( move 4 , 0 ; move ul / 3 , 2 ; move ul , ua )  
[6759] ( move ua , ua / 4 ; move ul , 2 ; v0 = 0 )  
[6760] ( move ua , ul ; move 4 - 3 , ul ; move 2 , 3 )  
[6761] ( move 4 , 4 ; move 2 , ul ; move 3 + ul , ua )  
[6762] ( move 3 , ua ; move 4 , ul ; move ul , 4 + 2 )  
[6763] ( move 2 , 3 ; move 2 - ua , ul ; v0 = ul )  
[6764] ( move ul , ul ; move 2 , 4 ; move ul , 3 - 2 )  
[6765] ( move 4 / ua , ul / ua ; move ua , ul / ua )  | ( ( v0 = ul / 3 ; move ua , v0 ) ; move v0 , v0 )  
[6766] ( move 4 , 4 ; move ul , 2 ; move 2 , ul + ul )  
[6767] ( move ul , ul ; move 4 , 2 ; move ul , 4 + 2 )  
[6768] ( move 4 , 0 ; move ua , 4 + ul ; v0 = ul )  
[6769] ( move ul , 3 ; move ua + ul , 4 ; move 3 , 3 )  
[6770] ( move ua , ul / 4 ; move 4 , 2 ; move ul , 0 )  
[6771] ( move 4 , ua + 4 ; move 4 , ul ; move ua , 2 )  
[6772] ( move ul , 3 ; move 3 , ul ; move 3 , ua + 4 )  
[6773] ( move 3 , 2 - ul ; move ul , 2 ; move ul , 4 )  
[6774] ( move 3 , ul ; move 2 , 4 - ul ; move ua , 3 )  
[6775] ( move 2 * 2 , ul ; move ua , 4 ; move ua , 4 )  
[6776] ( move 4 , 2 ; move 2 , ul ; move 4 , ul - ua )  
[6777] ( move ua , ua - 3 ; move 2 , ul ; v0 = 3 )  | ( ( move ua , ul - 4 ; move 2 , ul ) ; pen 0 )  
[6778] ( move 4 + ul , ua ; move 3 , 3 ; move 3 , ul )  
[6779] ( move 2 , ul / 4 ; move 2 , 2 ; move ua , ul )  
[6780] ( move 2 , ul ; move ul , ul ; move 3 , 3 * 2 )  
[6781] ( move 3 , ul ; move ul , 2 ; move 2 , 4 - ul )  
[6782] ( move ul , ul ; move 2 , 4 * 3 ; move ul , 2 )  
[6783] ( move 4 , 2 ; move 4 , ul ; move ua + ul , 4 )  
[6784] ( move 4 , 4 + ul ; move ul , ul ; move 3 , 2 )  
[6785] ( move 2 , 4 ; move ua - ul , ul ; move 4 , 3 )  
[6786] ( ( move ul , ul ; move ua , 2 ) ; move 2 , 2 )  
[6787] ( move 2 , 4 ; move 4 , 3 ; move ul , ua - ul )  
[6788] ( move 4 , ua / 2 ; move ul , 3 ; move 3 , ua )  
[6789] ( move ua , 0 ; move 2 , ul / 4 ; v0 = ul )  | ( ( pen 2 ; move ua , ua + ua ) ; move 2 , ul / 4 )  
[6790] ( move 3 , ua ; move 4 , ua ; move 4 , ul - 3 )  
[6791] ( move 2 - ua , ul ; v0 = 2 ; move 4 , ul )  | ( move ul , ua ; move 2 - ua , ul ; move 4 , ul )  | ( move 2 - ua , ul ; move 3 + ul , ul ; v0 = ua )  
[6792] ( move ua , 3 ; move 4 , 4 - ul ; move ua , 3 )  
[6793] ( move 3 , 2 ; move ua - 3 , ul ; v0 = ul )  
[6794] ( v0 = 2 ; move 4 + 2 , 0 ; move v0 , 2 )  
[6795] ( move ua + 2 , ul ; move 3 , 4 ; v0 = ul )  
[6796] ( move 3 , 2 ; move ua , 3 / ua ; v0 = ua )  | ( move 2 + ul , 2 ; v0 = 3 / ua ; move ua , v0 )  
[6797] ( move 3 , ul ; move 2 - ua , 3 ; v0 = ul )  
[6798] ( move 4 , 3 ; move ua - ul , ul ; move 4 , 2 )  
[6799] ( move 3 / 2 , 4 ; move 2 , ua ; move ul , ul )  
[6800] ( move ua , 4 ; move 0 - 4 , ul ; v0 = ul )  
[6801] ( move ua , ul ; move 4 - 2 , 3 ; move 4 , ul )  
[6802] ( move 3 , ul ; move ul , ua ; move 3 , 3 / 2 )  
[6803] ( move 3 , ua * ua ; move 3 , 4 ; move 3 , ul )  
[6804] ( move 4 , ul + 4 ; move 4 , ul ; move ua , 2 )  
[6805] ( move 4 - ua , ua ; move 4 , 4 ; move 2 , ul )  
[6806] ( move 0 , 0 ; pen 3 - ua ; move 2 - ua , ul )  
[6807] ( move ul , 4 ; move 3 , 4 ; move ul , 3 + ul )  
[6808] ( move ul , 4 ; move 3 , ul ; move ua , 4 * 2 )  
[6809] ( move ul , 3 ; move 3 , 4 ; move 4 , ul + ul )  
[6810] ( move 3 * 2 , ua ; move ul , ul ; move 4 , 4 )  
[6811] ( move 4 - ul , 3 ; move 2 , 4 ; move ul , ul )  
[6812] ( ( move ul , 2 ; move 2 , ul ) ; move ul , 2 )  
[6813] ( move ul , 4 ; move ul - 4 , ul ; v0 = 0 )  | ( move 2 + ul , 4 + ul ; move 2 - ul , ul + ul ; pen ua )  
[6814] ( move ua , 2 ; ( move 3 , ul ; move 3 , ua ) )  | ( pen ul ; move ua , 2 ; move 3 * 2 , ua + ul )  | ( ( move ua , 2 ; move 4 + 2 , ul ) ; v0 = 3 )  
[6815] ( move ul , 4 ; move 3 , ul ; move 2 , 4 - ul )  
[6816] ( move 3 , 3 ; move ul - ua , 3 ; v0 = ul )  
[6817] ( move 4 - ua , ul ; move 4 , 2 ; move ul , 4 )  
[6818] ( move ul , ua / 4 ; move 2 , 4 ; move 2 , ul )  
[6819] ( move 2 , ul ; move 2 , ul / 4 ; move 3 , ul )  
[6820] ( move 4 , ul - ua ; move 4 , 4 ; move ul , 2 )  
[6821] ( move ul , 4 * 3 ; move 3 , ul ; move ua , 3 )  
[6822] ( move ul , 3 ; move 4 , 3 / 2 ; move ua , ul )  
[6823] ( move 4 , ul ; move 4 , 3 ; move 3 , ua * ua )  
[6824] ( move 4 , 3 + ul ; move ul , 3 ; move ul , 4 )  
[6825] ( move 4 , ul / 3 ; move ul , 2 ; move 4 , ua )  
[6826] ( move ua - ul , 4 ; move ul , 4 ; v0 = 2 )  | ( move ua - ul , 4 ; v0 = 4 ; move ul , v0 )  | ( move ua - ul , 4 ; move 0 , ul + ul ; move ul , 2 )  | ( ( move ua - ul , 4 ; move ul , 4 ) ; v0 = 3 + 2 )  
[6827] ( move ul , 2 ; move 3 , ul ; move 4 / 3 , ul )  
[6828] ( ( move 3 , ul ; move ul , 2 ) ; move 2 , ul )  
[6829] ( move 3 , 0 ; ( move ul , ul ; move ul , 4 ) )  
[6830] ( move 3 , ua - 3 ; move ul , 4 ; v0 = ul )  
[6831] ( move 0 , ua * 4 ; pen 0 ; move ua + ul , 2 )  
[6832] ( move 2 , ul + ul ; pen 2 - ua ; move 2 , 0 )  
[6833] ( ( move ua , 4 ; move ua , 2 ) ; move 3 , ul )  
[6834] ( move ul , 4 ; move 3 , ul ; move 4 + ul , 4 )  
[6835] ( move ua , ul / 3 ; move ua , 2 ; v0 = 4 )  | ( move ua , 2 / ua ; move ua , ul + ul ; v0 = ul )  
[6836] ( move ua , 2 ; move 4 / ua , 4 ; move ul , 4 )  
[6837] ( ( move ul , 3 ; move 3 , ul ) ; move ua , 2 )  
[6838] ( move 4 , 4 + ul ; move 4 , 4 ; move ua , ul )  
[6839] ( pen 2 ; move ul , 0 ; move 3 + 2 , ua + ul )  | ( ( pen 2 ; move ul , 0 ) ; move 4 + ul , ul )  
[6840] ( move ul , ul ; move 4 , 4 * 2 ; move 3 , ul )  
[6841] ( move 4 , ul ; move 4 - 2 , ul ; move 4 , ul )  
[6842] ( move 4 - ua , ul ; v0 = ul ; move 4 , 2 )  
[6843] ( move ul , 0 ; ( move 3 , ul ; move ul , 4 ) )  
[6844] ( move ua , 4 ; move ul , 3 / 2 ; move 4 , ul )  
[6845] ( move 2 , 2 ; ( move ul , ul ; move 4 , ua ) )  | ( move 2 , ul + ul ; move ul , ul ; move 4 , ua )  
[6846] ( move 0 - 2 , ul ; pen 3 ; move ua + 2 , ul )  
[6847] ( move 2 , ul ; move ul , ul ; move 4 , 4 / 3 )  
[6848] ( move 2 / 3 , 0 ; pen 0 ; move ua - ul , ua )  
[6849] ( move ua - 2 , ua * 2 ; move 2 , ul ; pen 0 )  
[6850] ( move ua , 4 - ul ; pen 0 ; move ua , 2 + 2 )  
[6851] ( move 2 , 2 ; pen ul - 2 ; move ua , 0 - ul )  
[6852] ( move 2 , ua ; pen 2 - ua ; move 3 , ua + 2 )  
[6853] ( move 0 , ua ; pen 0 ; move 3 + ul , 3 / ua )  
[6854] ( ( move ul , ua ; move 3 , 2 ) ; move ul , 4 )  
[6855] ( move ua - 4 , ul ; v0 = 4 ; move ua , 4 )  
[6856] ( move 3 , 3 / ua ; v0 = ul ; move ua , 4 )  | ( move 3 , 3 / ua ; ( pen 0 ; pen ul ; move ua , 4 ) )  
[6857] ( move ua - 2 , ul - 3 ; pen 0 ; move 2 , ua )  
[6858] ( move 2 , ul ; move ua , ul / 4 ; v0 = 3 )  
[6859] ( move ua , ua ; ( move 3 , ul ; move 3 , 4 ) )  | ( move ua , ua * 3 ; move 3 , ul ; move ua / 2 , 4 )  
[6860] ( move 4 , 4 ; move 4 , 4 - ul ; move ua , ul )  
[6861] ( ( move ua , 3 ; move ul , 2 ) ; move 4 , ul )  
[6862] ( move ua , 4 / ua ; v0 = ul ; move 4 , 3 )  
[6863] ( move ul , 4 * 3 ; move ua , 4 ; v0 = ul )  
[6864] ( move 2 + ul , ua ; pen 4 ; move ul , 0 - 2 )  
[6865] ( move ua , 4 / ua ; v0 = ua ; move 4 , 4 )  
[6866] ( move 3 , 0 ; pen ua - 3 ; move ul , 2 + ul )  | ( move ua - 3 , 0 ; pen 4 - ul ; move ul , 3 )  
[6867] ( move ua , 3 ; ( move 3 , ul ; move 4 , ul ) )  
[6868] ( move 3 , 0 ; move 3 + ul , ua - 3 ; pen ua )  
[6869] ( ( move ul , 3 ; move ul , ul ) ; move 4 , 2 )  
[6870] ( move 2 , 4 + ul ; pen ua + ul ; move 3 , 0 )  
[6871] ( ( move ul , 3 ; move ua , ua ) ; move 4 , 4 )  
[6872] ( move 2 , ua + ul ; move ua / 3 , 2 ; pen 0 )  
[6873] ( move 3 - 2 , 3 ; pen 0 ; move ua , ua * ua )  
[6874] ( move 3 , 4 ; move ul , ul ; move ul , 3 / 4 )  
[6875] ( move 4 , ul ; move 0 - ua , 0 - 4 ; pen ua )  
[6876] ( pen 2 ; move 2 , ua + ua ; move 3 , ul - 2 )  
[6877] ( pen ul + ul ; move 0 - 4 , 2 ; move ua , 2 )  
[6878] ( pen ua ; move 2 , 3 + 2 ; move 3 , ua - ul )  
[6879] ( move 4 , ul / 3 ; move 4 , ul ; v0 = ua )  
[6880] ( move 3 + 2 , ul ; move ua + ul , 2 ; pen 3 )  | ( move ul , ua ; move 4 + ul , ul ; move ua + ul , ua + 2 )  
[6881] ( move 4 , 3 ; v0 = ul ; move ua / 4 , ul )  
[6882] ( move ua + ul , 3 / ua ; pen 0 ; move 3 , 2 )  
[6883] ( move 2 , ua ; pen ul - 4 ; move 3 - ua , 0 )  
[6884] ( move ul , ua * 3 ; pen 0 ; move ua , 4 + 2 )  
[6885] ( pen ua * 4 ; move 2 , 0 ; move ua , ul - 2 )  
[6886] ( move 2 + ul , 2 ; pen ul ; move ua + 2 , 4 )  
[6887] ( pen ul + ul ; move 2 , 0 ; move 4 , ul - 2 )  
[6888] ( move 0 - ua , 3 + ul ; move 3 , ul ; pen 3 )  
[6889] ( move 3 + 2 , ul + ul ; move 3 , 2 ; pen ua )  | ( move ul , 2 ; move 4 , 0 ; ( move 3 , 2 ; pen ul ) )  
[6890] ( move ul , 4 / 3 ; move 3 , ul ; v0 = ul )  
[6891] ( move 4 , 3 + 3 ; pen ua ; move 0 , ul + ul )  
[6892] ( move 3 + ul , 0 - 3 ; pen ul ; move ua , 3 )  
[6893] ( pen 2 ; move 3 , 2 ; move ul - 3 , ua + ua )  
[6894] ( pen ul ; move 2 + ul , 0 - 2 ; move 4 , ul )  | ( move ul , ua + 2 ; move 3 , ul / ua ; move 3 , ua - ul )  
[6895] ( pen ua ; move 4 , ua + 4 ; move ul , 2 + 2 )  
[6896] ( pen ua + 3 ; move 3 , 4 ; move ua + ul , 2 )  
[6897] ( move ul - ua , 0 ; move 3 + 3 , ul ; pen 4 )  | ( move ul - ua , ua ; v0 = 3 ; move v0 + v0 , ul )  
[6898] ( pen ua / 3 ; move 2 , 0 ; move ul + ul , 3 )  
[6899] ( move ua , 4 ; ( move ul , 4 ; move 4 , ul ) )  
[6900] ( move 3 , 2 ; pen ul + ul ; move 3 - ua , 2 )  
[6901] ( move ul , 4 ; move ua + 2 , 2 ; pen ul - 2 )  
[6902] ( pen ua * ua ; move 2 , 2 ; move 3 , ua - 3 )  
[6903] ( move 3 / ua , ua + ul ; move 4 , 2 ; pen 0 )  
[6904] ( pen ua ; move 0 , ua - 4 ; move 4 , ua - 3 )  
[6905] ( pen 3 ; ( pen 4 ; move ua + ul , 4 * 4 ) )  | ( move 2 , ul - 3 ; pen 4 ; move ua + ul , ua - 4 )  
[6906] ( move 4 , 0 ; pen ua / 2 ; move 2 + ul , ul )  
[6907] ( move 4 , 2 + ul ; pen 2 ; move 3 + ul , ua )  
[6908] ( move ul / 4 , 2 ; pen 0 ; move ua + ul , 2 )  
[6909] ( pen 3 - 2 ; move 2 , ua ; move ua - 3 , ul )  | ( move 2 , ua ; move ua - 3 , ul ; move ul / 4 , 4 )  
[6910] ( move ul , 0 ; pen 3 + ul ; move 3 , 4 + ul )  | ( move ul , ua * 4 ; ( pen ua + 4 ; move 3 , 4 + ul ) )  
[6911] ( move 4 - ua , 0 - ua ; pen 4 ; move 2 , ul )  
[6912] ( move 0 , 4 / 3 ; move ua - ul , ul ; pen 0 )  | ( move 0 , 4 / 3 ; ( move 0 , ua ; move 4 + ul , ul ) )  
[6913] ( pen 3 ; move 2 , 3 - ua ; move ua - 2 , ul )  
[6914] ( move 4 + 3 , ul + ul ; move 3 , ul ; pen 0 )  
[6915] ( move ul - 4 , ua ; pen 0 ; move 3 - ul , 3 )  
[6916] ( move 3 , ul / ua ; pen 3 ; move 2 , ua + 2 )  
[6917] ( move ul - 4 , 0 ; pen 2 ; move 4 - ua , ul )  
[6918] ( pen 4 ; move 3 , 2 + ul ; move ua , 3 + ul )  
[6919] ( pen 2 ; move 4 * 2 , 2 + ul ; move ul , ua )  
[6920] ( pen 3 ; move 4 , ul + ul ; move 0 - 3 , ul )  
[6921] ( pen 3 - ul ; move 4 , 0 ; move ua + ul , 4 )  
[6922] ( move ua + 3 , 2 ; move 4 - 2 , ul ; pen ul )  | ( move 3 , 2 ; move ua , ua + ua ; move ul + ul , ua + ul )  
[6923] ( move ua , ua ; pen ua * 3 ; move 2 - 4 , 2 )  
[6924] ( move ua , 0 - 2 ; ( pen ul ; move ua , 2 ) )  | ( move ua , ul - 3 ; v0 = 2 ; move ua , v0 )  
[6925] ( move ua , ul - 4 ; move 3 , 2 ; pen 2 + ul )  
[6926] ( pen 3 ; move 3 , ua + 3 ; move ua , 4 + ul )  
[6927] ( move ua + 3 , 4 ; pen 0 ; move ul - 4 , ul )  
[6928] ( move 4 , 3 + ul ; pen 2 - ua ; move 3 , ua )  
[6929] ( move ul - 4 , 2 ; pen 3 ; move ua + ul , 2 )  
[6930] ( move ua / 3 , 3 ; pen 0 ; move ua + 4 , ul )  
[6931] ( pen 3 ; move ua + 3 , ua - ul ; move 2 , 4 )  
[6932] ( pen ua + ul ; move 4 , 4 ; move ua + 2 , 3 )  
[6933] ( move 4 - 2 , 4 ; pen 0 ; move ua - ul , ul )  
[6934] ( move 4 + 2 , ul ; pen 2 ; move 3 , ua - ul )  
[6935] ( pen 3 ; move ul - 2 , ua ; move ua , 4 - 2 )  
[6936] ( ( move ul , 0 ; pen 0 ) ; move ua + ul , 4 )  
[6937] ( ( pen ua ; move ua , 0 ) ; move 3 , ua - 2 )  
[6938] ( move 4 + ul , 4 ; pen 0 ; move ua , ua * 3 )  
[6939] ( pen ul ; move 4 + ul , 3 ; move ua + 2 , 3 )  
[6940] ( move ua , ua * 3 ; pen 3 ; move 4 , 0 - ul )  
[6941] ( move ua - 3 , 4 + 3 ; move ua , 2 ; pen ul )  
[6942] ( pen ua + 3 ; move 2 , ua ; move 4 , ul - 3 )  
[6943] ( move ul - 3 , 2 ; move ua , 4 + 2 ; pen ul )  
[6944] ( move 4 , 2 + ul ; move 4 , 0 - ul ; pen ul )  | ( v0 = ua - ul ; move 4 , 4 - ul ; move 4 , v0 )  
[6945] ( ( move ul , 2 ; pen 0 ) ; move ua + ul , 2 )  
[6946] ( pen ua ; move 3 - 2 , ul ; move 3 , ul - 2 )  
[6947] ( move 3 , ul ; pen 0 - 4 ; move ul - ua , 3 )  
[6948] ( move ul , ua - 4 ; pen 2 ; move 3 , ua - 2 )  
[6949] ( move 4 , 3 + 2 ; pen 3 + ul ; move ua , ul )  
[6950] ( pen 3 ; move ul + ul , ua * 3 ; move 2 , 2 )  
[6951] ( move ul - 3 , 3 ; pen 0 ; move ua - 4 , ul )  
[6952] ( move 4 / 3 , ua + 4 ; pen ua ; move ua , 0 )  
[6953] ( pen 3 - ul ; move 3 , ua + 3 ; move 2 , ul )  
[6954] ( move 3 + ul , ul ; pen 0 ; move 4 , ul - 3 )  
[6955] ( ( pen 2 ; move ul - 2 , 0 ) ; move ua , ul )  
[6956] ( pen 4 ; move ua / 3 , ul ; move 2 , 0 - ul )  
[6957] ( move 2 , ua ; pen ul / 3 ; move 3 + ul , 2 )  
[6958] ( move 3 , 2 ; pen 3 ; move ua - ul , 4 + ul )  
[6959] ( move 0 - 3 , ua ; ( pen ua ; move 2 , ul ) )  
[6960] ( move 4 + 2 , ul ; move 3 , ua - 4 ; pen ua )  
[6961] ( ( pen ua ; move 4 , 0 ) ; move ul , 0 - ul )  
[6962] ( move 4 , ul - 3 ; pen ul ; move 2 + 2 , ul )  | ( ( move 4 , ul - 3 ; move 3 + ul , ul ) ; move 0 , ul )  
[6963] ( move 2 , 0 - 4 ; move ua , ul / ua ; pen 4 )  
[6964] ( pen ua ; move ua , 4 + ul ; move 3 * 2 , 3 )  
[6965] ( move ul , 3 ; pen ul + ul ; move 3 , 2 - 3 )  
[6966] ( move 0 - 4 , ul ; move ua , 4 * 3 ; pen ua )  
[6967] ( move 3 , 4 ; pen ua * 2 ; move 2 , ua - ul )  
[6968] ( move ul , 4 * 3 ; pen ua - ul ; move 3 , 0 )  
[6969] ( move 2 , ul ; move 2 , 2 / 3 ; pen ua - ul )  
[6970] ( move 3 , 3 + 2 ; pen ul - 3 ; move ul , ul )  
[6971] ( move 4 , 4 ; pen ua * 3 ; move ua , 0 - ul )  
[6972] ( move ua , ul - 4 ; pen 3 ; move 3 + 2 , ul )  
[6973] ( move ul + ul , 3 ; pen ua + 4 ; move 4 , 2 )  
[6974] ( move 3 , ul - 4 ; pen 0 ; move ul + ul , 4 )  
[6975] ( move 3 , ua - ul ; pen 2 ; move 2 , 3 / ua )  
[6976] ( pen 3 + ul ; move 3 , ul ; move 2 , 3 - ul )  
[6977] ( move 4 , ua ; move 3 - ua , 2 ; pen ua * 3 )  
[6978] ( pen 2 ; move ua / 2 , ua ; move ua , 3 * 3 )  
[6979] ( move ua , 0 ; pen ua / 4 ; move ua , 3 * 3 )  
[6980] ( move 0 , ul / ua ; ( pen 0 ; move ua , 3 ) )  
[6981] ( move ul , 0 ; move 2 + ul , ul / 4 ; pen 4 )  
[6982] ( pen 4 ; move 2 , ul + ul ; move 4 + 3 , ul )  
[6983] ( move 4 + ul , ul ; pen 4 + 4 ; move ua , 2 )  
[6984] ( move ua , ul / 3 ; move 4 , 2 + ul ; pen 2 )  
[6985] ( pen ua ; move 0 - ul , ua / 3 ; move 4 , 4 )  
[6986] ( ( pen ua ; move 2 , 4 ) ; move ua , 0 - ul )  | ( pen ua ; move ul - 3 , ul ; move ua , ul + ul )  
[6987] ( pen ul ; move 4 + ul , 4 ; move 2 , ua + 4 )  
[6988] ( move ua , 2 ; ( pen 2 ; move ua , 3 - ua ) )  
[6989] ( pen ua ; move 2 * 2 , ul ; move 3 , ul / 2 )  
[6990] ( move 4 , 0 - ul ; move ua , 4 ; pen 3 / ua )  | ( ( move 4 , 0 - ul ; move ua , 4 ) ; move 0 , 3 + 3 )  
[6991] ( move 3 , ul / 4 ; move ua , ua - 2 ; pen 2 )  
[6992] ( move 4 , ua * ua ; move ul , 4 + 2 ; pen 3 )  
[6993] ( move 4 , 2 ; pen ua + ul ; move 3 - ul , 4 )  
[6994] ( move ua , ua + 2 ; ( pen 4 ; move ua , 2 ) )  
[6995] ( move 2 , ua - 4 ; pen ul ; move 4 , 3 - ua )  
[6996] ( move ua + ul , 3 / 4 ; move ua , 3 ; pen 2 )  
[6997] ( move ua , 3 ; pen ua + 3 ; move 2 / 4 , ul )  
[6998] ( pen 4 ; move ua , ua - 3 ; move 4 , ul - 2 )  
[6999] ( pen 3 ; move ul , ul + ul ; move 3 * 3 , 2 )  
[7000] ( move 3 , ua ; move 2 , 3 / ua ; pen 4 + ul )  | ( move 3 , ua ; v0 = ul + ul ; move v0 , ul / v0 )  
[7001] ( move ua / 3 , 3 - ua ; pen 3 ; move 3 , ua )  
[7002] ( ( move ua , 3 - ul ; pen 0 ) ; move 2 , ul )  | ( move ua , 3 - ul ; pen 2 - ua ; move 2 , ul )  
[7003] ( pen ua + ua ; move 4 , 4 * 2 ; move 3 , ul )  
[7004] ( pen ua * 2 ; move ul , ua ; move 3 , 4 * 2 )  | ( pen ua ; move ul , ul / ua ; move 3 , ua / 4 )  
[7005] ( pen ul ; ( move ua + ul , 2 ; move 2 , 2 ) )  | ( move ul , 2 ; move ua , ua ; move 2 , ul + ul )  
[7006] ( move 2 + ul , 3 ; pen 4 ; move ua - ul , 4 )  
[7007] ( ( move 2 , 2 ; pen ua ) ; move ua , ua + 4 )  
[7008] ( pen 2 ; move ua / 2 , 3 + ul ; move 4 , ul )  
[7009] ( move ul + ul , 4 + ul ; pen 3 ; move 3 , 3 )  
[7010] ( move ua , 4 ; pen 4 - ua ; move 3 , ua * 2 )  
[7011] ( move 2 + ul , ua ; pen 3 ; move ul , 4 * 3 )  
[7012] ( pen 4 ; move ua + 4 , 4 ; move 3 - ua , ul )  
[7013] ( pen ua ; move ul - ua , 3 * 2 ; move 4 , 4 )  
[7014] ( ( pen ua ; move 2 - ua , ua ) ; move 2 , 4 )  
[7015] ( move ua , ua ; pen 4 * 3 ; move 4 , ul - 2 )  
[7016] ( move ua + ul , 3 ; pen 4 * 3 ; move ua , 4 )  
[7017] ( move 4 , ul ; pen 3 - ua ; move 2 - 4 , ul )  
[7018] ( pen 4 ; move ul - ua , 2 ; move 4 - 3 , ul )  | ( ( pen 4 ; move ul - ua , 2 ) ; pen ua * 4 ; move ul , ul )  
[7019] ( move 4 , ul / ua ; pen ul ; move 2 , 4 + 2 )  
[7020] ( move 3 , 4 / ua ; pen 2 ; move ul , ua * 2 )  
[7021] ( ( move 4 , ul / ua ; pen 0 ) ; move ul , 0 )  
[7022] ( move 4 + 3 , ul ; pen ua ; move 3 - ul , 4 )  
[7023] ( ( move ua - 2 , ul ; move ua , 2 ) ; pen 3 )  | ( v0 = ua - 2 ; move v0 , ul ; move ua , 2 )  
[7024] ( pen 3 * 3 ; move ua + 3 , ul ; move ul , 4 )  
[7025] ( pen 4 / 2 ; move ua , 3 ; move ul , ua + 4 )  
[7026] ( pen 4 + ul ; move 2 , ul ; move 3 , ul - 4 )  
[7027] ( move 2 , 4 ; ( move ua - ul , ul ; pen 0 ) )  
[7028] ( pen 3 - ul ; move 3 , ua ; move 4 , ua - 4 )  
[7029] ( move ul , ul ; ( pen 0 ; move 3 , ua - 3 ) )  
[7030] ( move 4 , ua * 3 ; pen ua ; move ua , 4 * 2 )  
[7031] ( pen ua / 3 ; move 3 + ul , 3 ; move ua , 4 )  
[7032] ( move ul , 4 ; move ua , 3 * 3 ; pen 3 + ul )  
[7033] ( move 4 + ul , ul ; pen ul ; move 2 , 4 * 2 )  | ( move 4 + ul , ul ; move 0 , 0 ; move ul + ul , 4 + 4 )  
[7034] ( pen ul ; move 3 , ua / 2 ; move 3 , 4 + ul )  
[7035] ( pen 2 * 2 ; move 4 , 4 - ua ; move ul , ul )  
[7036] ( move ua / 4 , ul ; move 2 * 2 , 2 ; pen ul )  
[7037] ( move 3 / 4 , ul ; move ua , ua + 4 ; pen 2 )  
[7038] ( move 4 , ua ; pen ul ; move 4 + ul , 4 + 4 )  
[7039] ( ( pen ua * 3 ; move ua , ul ) ; move 2 , 2 )  | ( ( pen 4 + 3 ; move ua , ul ) ; move 2 , 2 - ua )  
[7040] ( move ua , ul / 3 ; pen 2 ; move 3 , ua / 3 )  
[7041] ( move 4 * 2 , ua ; pen 4 * 2 ; move ul , ul )  
[7042] ( ( move ul , ul / 2 ; pen 0 ) ; move ua , 3 )  
[7043] ( move ua + ul , ul ; move ua + ul , ul + ul )  | ( move ua + ul , ul ; move ul , ul + ul ; move ua , ua )  
[7044] ( pen 4 ; move ul , 4 / ua ; move 3 + 2 , ul )  
[7045] ( pen 4 ; move ua , ua ; move ul - 3 , 4 * 3 )  
[7046] ( ( move 2 , 4 ; pen ua * ua ) ; move ua , 2 )  
[7047] ( move ua , 0 ; move ua , ua + 2 ; move 2 , ul )  
[7048] ( move ul , ul - 4 ; pen 3 ; move 3 , ua * 3 )  
[7049] ( pen 4 + 3 ; move 4 , 4 ; move ul , ul + ul )  
[7050] ( move ul - 4 , 3 / ua ; move 4 , 2 ; pen ua )  
[7051] ( move 4 + ul , 2 ; ( pen ua ; move 2 , ul ) )  
[7052] ( ( move ua + ul , 4 ; pen ul ) ; move 2 , 2 )  
[7053] ( move 4 , ul + ul ; move 4 + ul , 4 ; pen 3 )  
[7054] ( move 4 , ua * 3 ; pen 3 ; move ul , 4 + ul )  | ( move 4 , ua ; move 0 , 3 ; ( pen 2 ; move ul , ul + ul ) )  
[7055] ( pen ua - 2 ; move ua , ul / 4 ; move 3 , 4 )  
[7056] ( move ua , 2 ; move 4 + ul , 4 / ua ; pen 4 )  
[7057] ( move 4 , ul ; pen 4 + ul ; move ua / 2 , 3 )  
[7058] ( move ul + ul , 4 ; move 3 , ul / 3 ; pen 2 )  
[7059] ( move 3 , ul ; ( pen 0 ; move 4 , ua - ul ) )  
[7060] ( pen 4 ; move 3 , ua / 4 ; move 3 , ul + ul )  
[7061] ( move 2 , 0 ; move ua , ul + ul ; move ua , 2 )  
[7062] ( pen ul / ua ; move 4 , 4 * 3 ; move ua , 2 )  
[7063] ( ( move ua , ua ; pen 3 ) ; move 4 - ul , 2 )  | ( move ua , 0 ; pen 4 - ul ; ( move 3 , 2 ; move 0 , ua ) )  
[7064] ( pen ua ; ( move ua , ul / 2 ; move 3 , 2 ) )  
[7065] ( pen 4 ; move 4 , ul / ua ; move 4 + ul , 2 )  
[7066] ( pen 4 ; ( move ua , ul - 2 ; move ua , 3 ) )  
[7067] ( move 2 , 3 ; ( pen 4 ; move ua + ul , ul ) )  
[7068] ( move 3 , ul ; pen ua / 3 ; move 4 , ul - 3 )  
[7069] ( move 3 , 4 ; pen 4 ; move ul - ua , ul - 4 )  
[7070] ( move 4 , ua + ul ; move 4 , ul / 2 ; pen 4 )  
[7071] ( move ua , 2 ; move 2 - ua , ul ; move ua , 0 )  
[7072] ( move ua , ul - ua ; move ua - ul , ua * ua )  | ( move ua , ul ; v0 = ua - ul ; move v0 , ua * v0 )  | ( ( move ul , 0 ; move ua , ul ) ; move ua - ul , ua * ua )  
[7073] ( move ul + ul , ua ; move ul - ua , ua - ul )  
[7074] ( move ul - 4 , ua * 4 ; move 3 , 4 ; pen ua )  
[7075] ( move 4 + ul , 3 / ua ; pen ul ; move 4 , 3 )  
[7076] ( move ul , ul ; ( pen 0 ; move ua , 2 / 4 ) )  | ( move ul , ul ; pen 2 - 3 ; move ua , ul / 2 )  
[7077] ( ( move ua , 2 ; pen 3 ) ; move ua , ul - 4 )  
[7078] ( move ul , ul ; ( pen 0 ; move 4 , ua - 4 ) )  
[7079] ( ( pen 2 ; move ua , ul / 2 ) ; move ua , 3 )  
[7080] ( move ul , ul ; pen 2 ; move ul - 4 , 2 / 4 )  
[7081] ( pen ua ; move 3 , 2 / ua ; move 4 , ul / 3 )  
[7082] ( pen 3 * 3 ; move ul , ul / 3 ; move 3 , ul )  
[7083] ( pen ua + ul ; ( move 4 , 2 ; move 4 , ul ) )  | ( pen ua ; ( move 4 , ua + 2 ; move 4 , ul ; v0 = ua ) )  
[7084] ( move 3 , 3 ; ( pen 3 ; move ul , ul - ua ) )  
[7085] ( move ul + ul , ul + ul ; move ul - ua , ul )  | ( move 2 , 2 ; move ul - ua , ul ; pen ua - ul )  
[7086] ( ( move ua - 3 , ul ; move 3 , ul ) ; pen 3 )  | ( move ua - 3 , ul ; v0 = 0 ; move 3 , ua + ul )  | ( move ua - 3 , ul ; v0 = ul ; move 4 - ul , v0 )  
[7087] ( ( move ua , ua - 2 ; pen ul ) ; move 4 , 4 )  
[7088] ( move 2 , ul ; move 3 , ul / 4 ; pen ua / 3 )  
[7089] ( ( move ul , 2 ; pen ua ) ; move 4 * 2 , ul )  
[7090] ( move ul , ul - 4 ; pen 3 ; move 4 , ua / 3 )  
[7091] ( move ul , 0 ; move ua , ul + ul ; move 2 , 2 )  
[7092] ( pen 4 ; move ua / 3 , ul ; move ul - 4 , 3 )  
[7093] ( ( pen 2 ; move ul , 4 / ua ) ; move ua , 2 )  
[7094] ( move ua , 0 ; move ul , 0 ; move 4 - ua , ul )  
[7095] ( move ul , ua + ul ; move ua + ul , ul / ua )  | ( move ul , ul ; move ua , ul / ua ; move 2 , ua )  | ( ( move ul , ul ; move ua + 2 , ul / ua ) ; v0 = ul )  
[7096] ( move ua , ua - ul ; move 2 , 0 ; move ua , 3 )  
[7097] ( move ul - ua , ua * ua ; move ul + ul , ul )  
[7098] ( pen 4 ; ( move ul , ua - 2 ; move ua , 4 ) )  
[7099] ( pen 2 ; move 4 + ul , ul / 4 ; move ul , 4 )  
[7100] ( ( pen 4 ; move 2 + ul , 3 ) ; move ul , ul )  
[7101] ( pen ua ; ( move 3 + ul , 4 ; move ua , 4 ) )  
[7102] ( ( move ul , 2 ; pen 3 - 4 ) ; move ua , ul )  | ( move ul , 2 ; ( pen 0 ; move ua , ul - ua ) )  | ( move ul , ua + 2 ; pen ul - ua ; move ua , ul )  
[7103] ( move 4 , 2 - 4 ; pen ul ; move ul / 3 , ul )  
[7104] ( move ua , 0 ; move 2 / ua , ul ; move ul , 0 )  
[7105] ( ( move 3 , ul / ua ; move 3 , ul ) ; pen 2 )  
[7106] ( move 4 , 4 * 4 ; move ul + ul , 4 ; pen ul )  
[7107] ( move ul - ua , 2 ; move ul , 0 ; move 2 , ul )  
[7108] ( move ua , ua + 2 ; move ua , 2 ; move 3 , ul )  
[7109] ( move ua , 3 + ul ; move 2 , ua ; move ua , 2 )  | ( ( move ua , 3 + ul ; move 2 , 0 ) ; move ua , ul + ul )  
[7110] ( move 2 , 2 ; move ua , ul ; move ua , 2 + ul )  
[7111] ( move 0 , ul ; move ua , ul ; move 0 - 4 , ul )  
[7112] ( move ua + ul , ul / ua ; move ul , ul + ul )  
[7113] ( move 4 , 0 ; move 2 , ul ; move ua , ua + ul )  
[7114] ( ( pen ua ; move 4 + ul , ua ) ; move 4 , 4 )  
[7115] ( move 2 , ua ; move ua - 3 , 2 ; move ua , ua )  
[7116] ( move 4 , ul - 3 ; ( pen ul ; move 2 , ul ) )  
[7117] ( move 2 , 0 ; move ul , ul ; move ua , ua + 4 )  
[7118] ( move 4 , 3 / 4 ; pen ua * 4 ; move ua , ul )  
[7119] ( ( move 2 , ua ; pen ul ) ; move 2 , ul / 4 )  
[7120] ( move ua , 2 ; move ua , 3 ; move 2 + ul , ua )  
[7121] ( pen 2 ; ( move 4 - ul , ua ; move ul , 4 ) )  
[7122] ( move ul , ul ; move ul , 0 ; move ua + 2 , 3 )  | ( move 2 , ul ; move ua , ua + 3 ; move ul + ul , ua )  
[7123] ( move ul , ua - 2 ; move ua , ua ; move 2 , 2 )  | ( move ua + ul , ul - 3 ; move ul , 2 ; pen 0 )  
[7124] ( move ul - ua , 3 ; move 0 , ua ; move 2 , ul )  
[7125] ( pen 4 + ul ; ( move 3 , ul ; move 3 , ul ) )  
[7126] ( ( move 4 , ul ; pen 2 ) ; move 4 + ul , ul )  
[7127] ( ( move ua , ul ; pen 4 ) ; move 4 , 3 + ul )  
[7128] ( move 0 , ul / 3 ; move ua , 0 ; move ua , ul )  | ( move ua , ul / 3 ; ( move ua , ul ; v0 = ua ) )  | ( move ul , ul / 3 ; move ua - ul , 0 ; move ua , ua + ul )  
[7129] ( move 4 , ua * ua ; move ul , ul ; move 0 , 0 )  | ( move 4 , ua * ua ; move ul , ua + ul ; pen ul )  
[7130] ( move ul / ua , ul / ua ; move ua , ua + ul )  
[7131] ( move ua + 2 , 2 ; move ua , 4 ; move ul , ua )  
[7132] ( move ua , 0 ; move 3 + ul , 3 ; move ul , ul )  | ( ( move ua , ua ; move 4 , 3 ) ; move ul , ul )  
[7133] ( move ul , 0 ; move ua + 2 , 4 ; move ul , ul )  
[7134] ( move 4 + ul , 0 ; move ua , ul ; move ua , 3 )  
[7135] ( ( pen 2 ; move ua , ul ) ; move ul , 4 / 3 )  
[7136] ( move 2 , ul ; move 2 , ul ; move ul , 0 - ul )  
[7137] ( move ua , 0 ; move ul / 2 , ul ; move ua , 2 )  | ( move ua , 0 ; move ul / 2 , ul ; move ua , ul + ul )  
[7138] ( move ul - 4 , ua ; move ul , 2 ; move ua , 0 )  
[7139] ( move 2 , ul ; move 0 , ua * ua ; move 3 , ul )  
[7140] ( pen ua - 4 ; ( move ul , ua ; move 4 , 4 ) )  
[7141] ( move ua , 0 ; move ul , 3 ; move ul , 3 + ul )  
[7142] ( move 2 , 2 ; move ua , ua ; move 3 , ua * ua )  
[7143] ( move ul , 0 ; move 2 , ul ; move ul , ul - 2 )  
[7144] ( move 4 , 0 ; move ua + ul , 2 ; move ul , ul )  
[7145] ( move ul , ua ; move 0 , 2 ; move ua , 3 / ua )  
[7146] ( move 0 - ul , ua ; move 2 , ua ; move ul , 4 )  
[7147] ( move 2 , ul ; move 2 - ua , ul ; move ua , 2 )  
[7148] ( move 3 , ul ; move 3 , ul ; move 0 - ua , ua )  
[7149] ( move ua , 0 ; move ul , 2 ; move ul - ua , 4 )  
[7150] ( pen 3 / 4 ; move ua , 4 ; move ul , ul / 3 )  
[7151] ( move ua - ul , ul / ua ; move ul , ul + ul )  | ( move 2 , ul / ua ; move 3 , ua ; move ul , 2 )  
[7152] ( move ul , ul ; move ua + ul , 0 ; move 4 , 2 )  | ( move ua , ul ; move ul + ul , ua ; move 3 + ul , ul + ul )  
[7153] ( move ua , 0 ; move 4 + ul , ul ; move 2 , ul )  
[7154] ( pen ul ; ( move ul , 2 ; move 4 , 3 / ua ) )  
[7155] ( move 2 , ua - 4 ; move 0 , ul ; move ua , ul )  
[7156] ( move 0 - ul , ul ; move ua , 2 ; move 3 , ul )  
[7157] ( move ua , ul ; move 2 , ua - 2 ; move 2 , ul )  
[7158] ( move ua , 3 ; move ul , ua + ua ; move 3 , 3 )  
[7159] ( move ua , 3 / 2 ; move 0 , ua ; move ul , ul )  | ( move ua , 3 / 2 ; v0 = ul ; move ul , ul )  
[7160] ( move ul , 2 ; move ua , ul ; move ua + 3 , 3 )  
[7161] ( move 3 , ua ; move 2 , ua + 4 ; move ua , ul )  
[7162] ( move ua - 3 , ua ; move ua , 3 ; move 2 , ul )  
[7163] ( move 2 , 0 ; move ul , 4 - ul ; move ua , ul )  
[7164] ( move 2 , ua ; move 3 , ul ; move 2 , ul - ua )  
[7165] ( move 3 , ua ; move ul , ul ; move 4 - ua , 0 )  
[7166] ( pen 4 ; ( move ul , ul ; move ua , 4 * 3 ) )  
[7167] ( move ua + ul , ul ; move 2 , ua ; move 3 , 3 )  | ( move ua , ul ; move 2 + ul , ua ; move 4 , 3 )  | ( move 3 + ul , ul ; move 3 + 2 , ua ; move 4 , 3 )  
[7168] ( move ul , 2 ; move ul , 0 - ul ; move 3 , ul )  
[7169] ( move 2 , ua ; move 4 , 2 - ua ; move ua , ul )  
[7170] ( move 2 + ul , 3 ; move ua , ul ; move 2 , ul )  
[7171] ( move ua , 2 ; move ua - ul , ul ; move 3 , 2 )  
[7172] ( pen 2 ; pen 3 + ul ; move ua + 2 , ua / 3 )  
[7173] ( move 2 , ul ; move ul , ua ; move 2 , ul - 2 )  | ( move 3 , ul ; v0 = ua - ul ; move 2 , v0 )  | ( ( move ul , ul ; move 2 , ua ) ; move 2 , ua - ul )  | ( move 3 , ul ; move 3 - ul , ua - ul ; v0 = ul )  
[7174] ( move 0 , 3 ; move 3 , ua * ua ; move ul , ul )  
[7175] ( move 3 , ua ; move ua , ul + ul ; move 3 , 2 )  
[7176] ( v0 = 0 ; move ua , ul ; move ul - ua , 2 )  | ( move ua , ul ; move ul - ua , 2 ; pen 0 - 2 )  | ( v0 = ul ; move ua , ul ; move v0 - ua , 2 )  | ( move 0 , ua ; move ua , ul - ua ; move ul - ua , 2 )  
[7177] ( move ul , ul / 3 ; ( move 4 , 2 ; pen ul ) )  
[7178] ( move 2 , ua * 2 ; move ul , 2 ; move ua , ul )  | ( move ul + ul , 0 ; move ul , ul + ul ; move ua , ul )  | ( move ul + ul , 0 ; ( move ul , 2 ; move ua , ul - ua ) )  
[7179] ( move ua - ul , 2 ; move 2 , 3 ; move ua , ul )  
[7180] ( move 2 , ua ; move 3 , ua * ua ; move 2 , ul )  
[7181] ( move 2 , ua + ua ; move 2 , ul ; move ul , 4 )  
[7182] ( move 2 , 3 ; move ul + ul , ul ; move ua , 2 )  
[7183] ( move ua , ua ; move ul , 0 ; move 2 , ua / 4 )  
[7184] ( move ul - 2 , 2 ; move 2 , ul ; move ua , ul )  
[7185] ( move ua , 2 / ua ; move 3 , ua ; move ua , 2 )  
[7186] ( move ul , 0 - ua ; move 4 , ul ; move ul , 2 )  
[7187] ( move 2 , ul ; move ua , 4 ; move ul + ul , 2 )  
[7188] ( move 4 , ul ; move ua , 2 + ul ; move ua , 3 )  
[7189] ( ( pen 4 ; move 4 , ul ) ; move 3 / ua , ul )  
[7190] ( move 2 , ua * ua ; v0 = ua ; move ua , 2 )  | ( move 2 , ua * ua ; move ua , 2 ; v0 = 4 + 3 )  
[7191] ( move 2 , ul ; move ul , ua + 3 ; move ua , 4 )  
[7192] ( move 4 , ua ; move 2 , 4 + ul ; move ua , ua )  
[7193] ( move ul , ua * ua ; move 4 , 0 ; move ua , 4 )  
[7194] ( move ul , 4 ; move ua , 3 + ul ; move 2 , ua )  
[7195] ( move ua , ua ; move ul , 4 ; move 4 , 0 - ul )  
[7196] ( move 4 , ul ; move 2 , 2 ; move ua , ul - ua )  
[7197] ( move 2 , ul ; move ul , 3 + ul ; move ul , 2 )  
[7198] ( move 2 - ul , 2 ; move ul , ul ; move ua , 3 )  
[7199] ( move 4 - ul , ul ; move ua , 2 ; move ua , 2 )  
[7200] ( move 4 , ua + 4 ; move ua , ua ; move ul , 2 )  
[7201] ( move 2 , ul ; move ul , ul + ul ; move 2 , 3 )  
[7202] ( move 2 , 3 ; move ul , ul ; move 2 , ul - ua )  
[7203] ( move ul , ua ; move 4 , ul ; move 2 , 2 + ul )  
[7204] ( move ul , ul ; move 4 , 2 ; move ua , 2 + ul )  
[7205] ( move ua , ua ; move 3 / 2 , ua ; move ul , 2 )  
[7206] ( move ua , 4 ; move 2 , ua * ua ; move 3 , ua )  
[7207] ( move 4 , ul ; move ul , ua ; move ua + 2 , 4 )  
[7208] ( move ua , ul ; move ul + ul , 2 ; move 3 , 4 )  
[7209] ( move ul , 4 ; move 0 , ul ; move ua , ul / 2 )  | ( move ul , 4 ; move ua , 3 / 2 ; v0 = ul - 3 )  
[7210] ( move 2 , ul ; move ul , ul ; move 2 , ul - 3 )  
[7211] ( move 4 , ua ; move 3 + 2 , ul ; move ul , ul )  
[7212] ( move 3 , ul + ul ; move 2 , 4 ; move ua , ul )  
[7213] ( move 3 , 2 ; move 3 + ul , ul ; move ul , ul )  
[7214] ( move 4 , ua ; move ul + ul , ul ; move 2 , 3 )  
[7215] ( move ua , 4 ; move 2 , 3 + ul ; move ul , ul )  
[7216] ( move ua , 3 ; move ul , ua + ul ; move 4 , 3 )  
[7217] ( move ul , ul ; move 0 , 4 ; move 4 , ua * ua )  
[7218] ( move ua , ua ; move ua + ul , 4 ; move 4 , 3 )  
[7219] ( move ul - 4 , ua ; move 2 , ua ; move 3 , ul )  
[7220] ( move ul , 4 + ul ; move 2 , ul ; move ul , 2 )  
[7221] ( move ua , ua ; move 2 , ul ; move 3 / 2 , ul )  
[7222] ( move ul , 0 ; move ul , ul ; move 2 , ul / 3 )  
[7223] ( move ul , ul ; move ua , 3 / 2 ; move ua , 2 )  
[7224] ( move ua , ua ; move 0 - 4 , ul ; v0 = ul )  | ( move 3 + ul , ul - ua ; move 0 - ua , 2 - 3 )  | ( v0 = 0 ; move ua , v0 ; move v0 - 4 , ul )  
[7225] ( move ul , ul ; move ul , 2 ; move 2 , ul - 3 )  
[7226] ( move ua , 3 ; move ul , ul - 3 ; move ul , 2 )  
[7227] ( move 2 , ua ; move ul , 3 + ul ; move ul , 4 )  
[7228] ( move ul , 4 + ul ; move 2 , 2 ; move ul , ul )  
[7229] ( move ul , ul ; move 3 - ua , 2 ; move 3 , ul )  
[7230] ( move 0 , ul - ua ; pen 0 ; move ua + ul , 0 )  
[7231] ( move 3 , ul ; move 4 , ul ; move ua , ua + 3 )  
[7232] ( move 2 , ul - ua ; move 2 , ul ; move 4 , ul )  
[7233] ( move 2 + ul , 4 ; move ul , ul ; move ua , 3 )  
[7234] ( move ua , 2 - ul ; move ul , 2 ; move ul , 4 )  
[7235] ( move ul , ul ; move ua , 4 ; move 3 + 2 , ul )  
[7236] ( move ul , 0 ; move ul - 4 , ul ; move ua , 4 )  
[7237] ( move 2 , 3 ; move ul , ul ; move 3 , ua - ul )  
[7238] ( move ua / 4 , 0 ; move ul , ua ; move 3 , ul )  
[7239] ( move 3 , ul ; move ul , 2 ; move ua , 4 + ul )  
[7240] ( move 4 , 4 ; move ua + ul , ua ; move ua , 3 )  
[7241] ( move ul , ul ; move 4 , 0 ; move 4 + ul , ul )  
[7242] ( move 4 , 0 ; move ul , 2 / ua ; move ul , ul )  
[7243] ( move 4 , ua + ul ; move ua , 4 ; move ua , 3 )  
[7244] ( move ul , ul ; move 2 , ul - ua ; move 4 , 2 )  
[7245] ( move 4 , ul ; move 3 , ua + ul ; move ul , 2 )  
[7246] ( move ua , ul ; move 2 / ua , 3 ; move 3 , ul )  
[7247] ( move ul - 3 , ul ; move 3 , ul ; move ua , 3 )  
[7248] ( move 2 , ul / ua ; move ul , 3 ; move 2 , ul )  
[7249] ( v0 = 4 ; move v0 , v0 ; move v0 , 2 )  
[7250] ( move 3 + ul , ul ; move ul , 4 ; move ua , 3 )  
[7251] ( move ua , ul - 4 ; move ul , 2 ; move 4 , ua )  
[7252] ( pen 2 ; ( move ua + ul , 0 - 4 ; pen ul ) )  | ( pen ul + ul ; move ul , 0 - 4 ; move ua , ua )  
[7253] ( move ul , 0 ; move ua , ul ; move ul , 4 / 3 )  
[7254] ( move 3 , ua ; move ul , ul - 4 ; move 2 , ul )  
[7255] ( move ua - ul , 3 ; v0 = ul ; move ua , 2 )  
[7256] ( move ua , ul ; move ua , 3 ; move 4 - ua , 4 )  
[7257] ( move 3 , ua ; move ua / 3 , ul ; move ul , 2 )  
[7258] ( move ul , 4 ; move 2 , ua + 4 ; move ul , ul )  
[7259] ( move ul , ua ; move 2 , ul ; move 4 , 3 - ul )  
[7260] ( move ua , 2 - ua ; move ul , 4 ; move 4 , ul )  
[7261] ( move ua - 4 , ul ; move ua , ua ; move 3 , 4 )  
[7262] ( move ua - ul , ul ; move ul , 4 ; move 2 , 3 )  
[7263] ( move ul , 2 ; move ua , 4 ; move ul , 2 / ua )  
[7264] ( move 3 , ua - 4 ; move ua , 3 ; move ul , ul )  
[7265] ( move ul , 3 + ul ; move ua , ua ; move 4 , 4 )  | ( ( move ua + ul , 4 ; move 0 , 3 ; pen ul ) ; move 4 , ul )  
[7266] ( move 3 , 0 ; move 4 , ul ; move ul , ul / ua )  
[7267] ( move ua , ua ; move ul , 2 / 4 ; move ul , 2 )  
[7268] ( move ul , 4 ; move ul , ul ; move 2 - ua , 3 )  
[7269] ( move 4 , ul ; move ul - 3 , 2 ; move ua , ul )  
[7270] ( move ua , 2 ; move ul , ul / 2 ; move 4 , ua )  
[7271] ( move ua - ul , 2 ; move ul , 3 ; move 4 , ul )  
[7272] ( move ul , ul - 4 ; move 2 , ul ; move 2 , ul )  
[7273] ( move 0 , 2 + ul ; pen 0 ; move ua + ul , ua )  | ( move 0 , ua ; pen 0 ; move ua + ul , ua + 3 )  
[7274] ( move 3 , ua ; move ul , 2 / ua ; move ua , 4 )  
[7275] ( move ul , 4 + 3 ; move ul , ua ; move 3 , ul )  | ( move 2 , 4 + 3 ; ( v0 = 0 ; move 3 , ul ) )  
[7276] ( move 3 , ul / ua ; move 4 , 0 ; move ul , ul )  
[7277] ( move 4 , ua - ul ; move ul , 3 ; move ul , 2 )  
[7278] ( move ua , ul ; move 4 , 2 ; move 4 + ul , ul )  
[7279] ( move ul , ul ; move ul , 2 - ul ; move 2 , 4 )  | ( move ul , ul ; move ul , ul ; move 3 - ul , 4 )  
[7280] ( move ul - ua , ua ; move 4 , 4 ; move ua , 4 )  
[7281] ( move 3 + ul , ua ; move 4 , 4 ; move ul , ul )  
[7282] ( move ul , ul ; move 4 , 0 ; move 4 / ua , ul )  
[7283] ( move ua , ul ; move 4 + ul , 3 ; move 4 , ul )  
[7284] ( move ul , ul / 3 ; move ul , 3 ; move ua , 2 )  
[7285] ( move 3 + ul , ua ; move ul , ul ; move 4 , 4 )  
[7286] ( move 4 , 2 ; move ul , ul ; move ua / 2 , ul )  
[7287] ( move ua , ul ; move 3 , ul / ua ; move 2 , 4 )  
[7288] ( move ul , ua ; move ul , 2 ; move ua , 3 / 4 )  
[7289] ( move ul , ul ; move 2 , 4 ; move ul - 4 , ua )  
[7290] ( pen ua ; move ua , 0 - ul ; move ua , 0 - 2 )  
[7291] ( move 3 , ul ; move 3 , 2 / ua ; move ul , ul )  
[7292] ( move ul , ul ; move 3 * 2 , ul ; move 3 , ul )  
[7293] ( ( move ua , ul ; move ua , 2 ) ; move 2 , ul )  
[7294] ( move ul , ul ; move 4 , ul ; move 3 , 3 + ul )  
[7295] ( move 3 , ua ; move 3 / ua , ua ; move 4 , ul )  
[7296] ( move ua , ua ; move ul , 4 ; move ul - 3 , 4 )  | ( move ua , ua ; move ul , 3 + ul ; move 2 , ul )  
[7297] ( move 0 , ul / ua ; move 4 , ul ; move ul , 4 )  
[7298] ( move 2 , 4 ; move ul , 4 ; move ul , ul + ul )  
[7299] ( move ul , 4 ; move ua , 3 / ua ; move ua , 3 )  
[7300] ( move 3 / 2 , ua ; move ul , ul ; move ua , 4 )  
[7301] ( move ul , ul ; move ua , 3 - 4 ; move ul , 3 )  
[7302] ( move ul , ul - 2 ; move 3 , 4 ; move ul , ul )  
[7303] ( move 2 , ul ; move ul , 4 ; move 4 , ul + ul )  
[7304] ( move ul , ul ; move 3 , ul / 4 ; move ul , 0 )  | ( v0 = ul ; move v0 , 3 - 2 ; move 4 , v0 / 4 )  
[7305] ( move ua , ul / 3 ; move ua , 4 ; move 2 , ul )  
[7306] ( move ua , ul ; move ul , ua ; move 4 * 2 , 4 )  
[7307] ( move ul , ua ; move ul , 4 ; move 4 , ul - 2 )  | ( move 4 - 3 , 0 ; move ul , 3 + ul ; move 4 , ua - ul )  
[7308] ( move ul , 3 * 2 ; move ul , ul ; move 4 , ua )  
[7309] ( move 3 , ul ; move 3 , 4 + ul ; move ul , ul )  
[7310] ( move ul , 4 ; move 3 + ul , ul ; move 3 , ul )  
[7311] ( move 3 / 4 , ul ; move ul , ua ; move ua , 2 )  
[7312] ( move ua , 4 ; move ul , 2 ; move ua , ul / 3 )  
[7313] ( move 2 , 4 - ul ; move ul , ul ; move ua , 4 )  | ( move 2 , 2 + ul ; ( move ul , ul ; move ua , 4 ; pen ua ) )  
[7314] ( move 4 , 4 / ua ; move ua , 2 ; move ul , ua )  
[7315] ( move ua , ul - ua ; move 4 , 3 ; move 4 , ul )  
[7316] ( move ul / ua , 4 ; move ua , 4 ; move ua , 2 )  
[7317] ( move ul , 3 + ul ; move ua , 4 ; move 4 , ul )  
[7318] ( move 4 , 4 - ul ; move ua , 2 ; move ul , ul )  
[7319] ( move ua , ua ; move ul , 4 / ua ; move 4 , 2 )  
[7320] ( move 3 , 4 - ul ; move ua , 4 ; move ul , ul )  
[7321] ( move ua - 3 , ul ; move 4 , 4 ; move ul , ul )  
[7322] ( move ul , 3 ; move ua , 3 / ua ; move ul , 4 )  
[7323] ( move ua - ul , ul ; move 4 , ul ; v0 = 2 )  | ( move ua - ul , ul ; move 2 , ul ; move 2 , ua )  | ( move ua - ul , ul ; move 3 , ul ; move ul , ua * 4 )  
[7324] ( move ua , 4 ; move ul , 4 + ul ; v0 = ua )  
[7325] ( ( move ua , ua ; move ul , ul ) ; move 3 , 2 )  
[7326] ( move ua , ua ; ( move 3 , 3 ; move ua , ul ) )  | ( ( move ua , ua ; move 3 , 4 - ul ) ; move ua , ul )  
[7327] ( move ul , ul ; move ul , ul ; move 3 , 4 - 3 )  | ( ( move ul , ul ; move ul , ul ) ; move 3 , ul )  
[7328] ( move ua , ua ; move ul , 4 / 2 ; move ul , 4 )  
[7329] ( move ul , 0 ; ( move ua , 4 ; move ul , ul ) )  
[7330] ( ( move ul , 0 ; move ul , ul ) ; move 3 , ul )  
[7331] ( move 2 , ul ; move ul / ua , ul ; move 4 , 3 )  
[7332] ( move ua , ua ; move ul , ul ; move 3 , 4 * 4 )  
[7333] ( move 4 / ua , ul ; move 3 , ua ; move 3 , ul )  
[7334] ( move 4 , ua ; move ua , 4 ; move 3 / ua , ul )  
[7335] ( move ul , 4 * 3 ; move ua , ul ; move 3 , ul )  
[7336] ( move ul , 4 ; move ul , ul ; move ul - 3 , 3 )  
[7337] ( v0 = 4 / ua ; move ua + ul , ul + v0 )  | ( move ua / 4 , ua * ua ; move ua + ul , 4 - ul )  
[7338] ( move 4 , ua ; move 4 , ul ; move ul , 3 - ul )  
[7339] ( move ul , 3 ; move ul , 4 ; move 2 , ul / ua )  
[7340] ( move ul , ua ; move ul , 4 ; move 3 , ul / 2 )  
[7341] ( move ul , 3 ; move 4 + ul , ul ; move ul , 4 )  
[7342] ( move 4 , ul ; move ul , 4 ; move 3 - ua , ul )  
[7343] ( move ua / 2 , ul ; move ul , 4 ; move ua , 4 )  
[7344] ( move 4 , 2 / ua ; move ul , 4 ; move ul , ua )  
[7345] ( move ul , ul ; move 2 - ua , 4 ; v0 = ul )  | ( ( move ul , ul ; v0 = 2 - ua ) ; move v0 , 4 )  
[7346] ( move 3 , ul ; move ul + ul , 4 ; move 4 , ul )  
[7347] ( move ua , ua / 3 ; move ul , ul ; v0 = 2 )  | ( move ua , ua / 3 ; v0 = ul ; move v0 , v0 )  
[7348] ( move ul , ua ; move 4 , ul ; move ul , 4 * 2 )  
[7349] ( ( move ua , ua ; move 3 , 2 ) ; move ul , ul )  
[7350] ( ( move ua , ul ; move ua , 3 ) ; move 2 , ul )  | ( move ua , ul ; ( pen ul ; move ua , 3 ) ; move 2 , ul )  
[7351] ( move ul , ul ; move 3 - 4 , ul ; move 4 , ua )  
[7352] ( move ul , 4 ; move ua , 2 / 3 ; move ul , ul )  
[7353] ( move 4 , ul ; move 3 , 4 ; move ua , ul / ua )  
[7354] ( move 3 , 4 ; move ul , ul ; move ua / 4 , ua )  
[7355] ( ( move 2 , ua ; move 3 , ul ) ; move ul , ul )  
[7356] ( move 4 , ul ; move ul , 4 + ul ; move 4 , ul )  
[7357] ( ( move ua , 3 ; move ul , 2 ) ; move ul , ul )  | ( move ua , 3 ; ( move ul , 2 ; move ul , ul ) )  
[7358] ( ( move ua , ul ; move 4 , ua ) ; move ul , 2 )  
[7359] ( move ua , 0 ; pen ua ; move ua - ul , 3 + 2 )  
[7360] ( ( move 2 , ul ; move ua , ul ) ; move ua , 4 )  
[7361] ( move ul , ul ; move 4 , 2 / ua ; move 4 , ul )  
[7362] ( move ul , 2 ; move ul , ul / ua ; move 4 , 4 )  
[7363] ( move ua / 4 , ul ; move 2 , ul ; move ul , 4 )  
[7364] ( move 4 , 4 - ua ; move ul , ul ; move 4 , ul )  
[7365] ( move 3 , 3 ; move ua / 4 , ul ; move ul , ul )  
[7366] ( move ua , ul ; move 4 , ua / 4 ; move 3 , ul )  
[7367] ( move ul , ua ; move 4 , 4 ; move 3 , ul / ua )  
[7368] ( move ul , 4 * 3 ; move 4 , ul ; move ua , ul )  
[7369] ( move 4 , ul - 4 ; move ua , ul ; move ul , 4 )  
[7370] ( move 2 , ul ; move 3 , ul ; move ul / 4 , ul )  
[7371] ( move ua / 3 , ul ; move 3 , ul ; move 4 , ul )  
[7372] ( pen ua * ua ; move 3 , 0 ; move 0 - ua , ul )  
[7373] ( pen 4 ; move ua , 0 ; move ua + ul , ua - 2 )  
[7374] ( pen ua ; move 2 , ua ; move 3 + ul , 0 - ul )  
[7375] ( pen ua + ua ; move 2 , 2 ; move ua , 3 + ul )  | ( pen ua + 3 ; ( move ul + ul , 2 ; move ua , 4 ) )  
[7376] ( move ua + 2 , 4 ; pen ua ; move 0 - ua , ul )  
[7377] ( move ua + 2 , ul ; move ua + ul , 2 ; pen 2 )  
[7378] ( move 0 - 3 , 2 ; pen ua + ul ; move ul , ua )  | ( move ul - 4 , 2 - ua ; pen 4 + 3 ; move ul , 0 )  
[7379] ( pen ua ; move ul , 0 ; move 4 + ul , 0 - ul )  
[7380] ( move ua , ul / 4 ; move 2 , ul ; v0 = ul )  
[7381] ( ( move 4 , ua ; move 2 , ul ) ; move ul , ul )  | ( move 2 * 2 , 0 ; move 2 , ul - ua ; move ul , ul )  | ( move 4 , ua * 4 ; move ul + ul , ul ; move ul , ul )  
[7382] ( move ua - 4 , 0 - ul ; pen 0 ; move ua , ul )  
[7383] ( v0 = 4 ; move ua + 2 , 3 ; move 2 , v0 )  
[7384] ( ( move ua , ul ; move ul , ul ) ; move 3 , 3 )  
[7385] ( move ua , 0 ; pen ua * ua ; move 2 , ua - 3 )  
[7386] ( pen 2 ; move ua , ua ; move ua + 2 , ua + 4 )  
[7387] ( move ul , ul ; move ul , ul ; move 4 , 4 / 2 )  
[7388] ( move ul + ul , ua + 2 ; pen 2 ; move ua , 2 )  
[7389] ( move ul , ul ; move 3 , 4 * 4 ; move ul , ul )  
[7390] ( move 4 , ul ; move 4 , ul ; move ul - 4 , ul )  
[7391] ( move 4 , ul / 4 ; move ul , ul ; move ul , 2 )  
[7392] ( move 2 , ua ; pen ul - 2 ; move ua , ua + 2 )  | ( move 2 , ua + ua ; ( pen ul / 4 ; pen 0 ) ; move ua , 2 )  
[7393] ( move ul , ua / 3 ; move ul , ul ; move 4 , 4 )  
[7394] ( move ul , ul ; pen 0 ; move 0 - ua , 4 + ul )  
[7395] ( move 4 , ua ; move ul , ul / 3 ; move 4 , ul )  
[7396] ( move 2 , ua ; pen ua ; move ua + 4 , 0 - ul )  
[7397] ( pen 2 ; move ua + 2 , ua + ul ; move ul , 2 )  
[7398] ( move 2 , ul + ul ; pen ul - ua ; move 3 , 0 )  | ( move ul , ul + ul ; move ul , ua ; ( pen 0 ; move 3 , 0 ) )  
[7399] ( move ua + 3 , ul ; pen 3 ; move 0 , ul - ua )  
[7400] ( ( move ul , ul ; move 4 , ul ) ; move 2 , ul )  | ( move ul , ul ; move 4 , ua + ul ; move 2 , ul )  
[7401] ( move ul + ul , 2 / ua ; pen 0 ; move 2 , ua )  
[7402] ( move 4 , ua - 2 ; v0 = 2 ; move v0 , 3 )  
[7403] ( move ul , ua * 3 ; pen 0 ; move ua + 2 , ul )  
[7404] ( move ul , ul ; ( move ul , 4 ; move 2 , ul ) )  
[7405] ( move ul - ua , ua ; pen 0 ; move 3 , ul - 2 )  
[7406] ( pen 3 ; move ua , 0 ; move 3 + ul , ul + ul )  
[7407] ( move 4 , ul / 3 ; move ul , ul ; move ul , 4 )  
[7408] ( move 3 , 3 ; ( move ul , ul ; move ul , ul ) )  
[7409] ( pen 2 ; move ua , 3 - ua ; move ua , 2 - ua )  
[7410] ( move ul + ul , 2 / ua ; pen ua ; move 2 , 0 )  
[7411] ( move ul , ul ; move ul , ul / 4 ; move 4 , 3 )  
[7412] ( move ul , ul ; pen ul - ua ; move 0 - 4 , 0 )  
[7413] ( move ua , ul ; pen 2 ; move ua + 2 , 4 - ua )  
[7414] ( move ua - ul , 0 ; pen 2 + ul ; move 4 , ul )  
[7415] ( move ua - 2 , ul / 2 ; pen ua ; move ul , 0 )  
[7416] ( move ua + ul , ua + 4 ; pen 4 ; move ul , 0 )  | ( move ua + ul , 4 ; pen 3 ; move 2 - ul , ua )  | ( move ul , 2 * 2 ; ( move ua , 0 ; pen 3 ; move ul , ua ) )  
[7417] ( pen ua - 3 ; move ua + ul , ul ; move 2 , 2 )  
[7418] ( move ua , 2 + ul ; pen 0 ; move ua / 3 , ul )  
[7419] ( move ua - ul , 3 ; pen 0 ; move ul - 2 , ul )  
[7420] ( move ul , 0 ; move ul - ua , ua / 4 ; pen 0 )  
[7421] ( move ul , 2 ; v0 = 3 ; move v0 , 4 + 3 )  
[7422] ( pen 4 - ul ; move ua , 0 ; move ua + ul , 3 )  
[7423] ( pen ul + ul ; move 2 , ul ; move ua - 2 , 2 )  
[7424] ( move ua / 2 , 0 ; pen 2 ; move ul , ul + ul )  
[7425] ( move ua - ul , 4 ; move ua - 2 , ul ; pen 0 )  
[7426] ( pen ua ; move 3 , 0 ; move ul + ul , 4 + ul )  | ( pen ua ; ( move 2 , ul + ul ; move 3 , ul ) )  
[7427] ( move ua / 2 , 0 ; pen 3 ; move ua , ua - ul )  
[7428] ( move ua + ul , 0 - ul ; move 4 , 2 ; pen ul )  
[7429] ( move 3 , ua + ul ; move ua - 4 , ul ; pen 0 )  
[7430] ( pen ua + 3 ; move 2 + ul , ul ; move 2 , ul )  | ( pen ul ; ( pen ua ; move 3 , ul ) ; move ua / 3 , ul )  
[7431] ( move 3 , ua - 3 ; v0 = 4 ; move v0 , 2 )  
[7432] ( move ua , 3 * 3 ; pen 0 ; move ul + ul , ua )  
[7433] ( move ua , ua - 2 ; move 3 , ua - 3 ; pen ua )  | ( move ua , ua - 2 ; move 3 , ua - 3 ; move ul , ua * 2 )  
[7434] ( move 3 , ua + ul ; pen 2 ; move ua , 3 + ul )  
[7435] ( move ua , ul / 3 ; pen ua ; move 0 , 2 - ua )  
[7436] ( pen 2 ; move 2 / ua , 2 ; move ua , ua + ul )  
[7437] ( move ul , 2 ; pen ul / 2 ; move ua + ul , 0 )  
[7438] ( move 0 - ul , ul - 2 ; pen ua ; move 4 , ul )  
[7439] ( move ua , ua ; pen ua ; move 3 * 3 , 2 - ua )  
[7440] ( pen 4 ; move 3 - ua , ua ; move ua + 2 , ul )  
[7441] ( move ua , 0 ; move 2 , ua / 4 ; pen ua - ul )  
[7442] ( move 3 + ul , ul ; pen 2 ; move 2 + ul , ul )  
[7443] ( move 4 * 2 , ua + ul ; pen ua ; move 2 , ua )  
[7444] ( move 3 , ua ; pen 2 - ua ; move ua , ua - 4 )  
[7445] ( pen ua ; move ua , ul ; move 2 + ul , 4 + 3 )  
[7446] ( move 3 , ua * ua ; pen ua + 2 ; move ul , 3 )  
[7447] ( pen ul ; move 2 / ua , ul ; move ua + 2 , 2 )  | ( move ul / 3 , ul ; move ua + ul , 3 - ul ; move ul , ua )  
[7448] ( move ua , ua * ua ; move ul - 3 , 4 ; pen 0 )  
[7449] ( move ua - ul , ua ; pen ul ; move 2 , 2 - 3 )  | ( v0 = ua - ul ; move v0 , ua ; move 2 , v0 - ua )  
[7450] ( pen ua ; move ua , ua * 2 ; move ua , 2 - 4 )  
[7451] ( pen ua ; move 3 , ul ; move 3 + 2 , ul + ul )  
[7452] ( pen ua ; move 2 - ul , 0 ; move ua , 4 / ua )  
[7453] ( move 3 - ul , ua ; pen 0 ; move ua , ul - 4 )  
[7454] ( pen ua - 4 ; move 2 , 2 - ua ; move ua , ul )  
[7455] ( move 3 , ua + 3 ; pen ul + ul ; move 3 , ua )  
[7456] ( move ua + 2 , ul ; pen 4 ; move 0 , ul / ua )  
[7457] ( move ul + ul , 2 ; pen 2 - ua ; move 4 , ua )  | ( move 2 , 2 ; ( pen 0 ; v0 = 4 ) ; move v0 , 0 )  
[7458] ( move ul + ul , ua ; pen 0 ; move 4 * 2 , ul )  
[7459] ( move ua , 2 - 4 ; pen ua - ul ; move ua , 2 )  
[7460] ( move 2 , 3 ; pen 2 ; ( pen 4 ; move 3 , 2 ) )  
[7461] ( pen 3 ; move ua + 3 , 2 ; move ul - ua , ul )  
[7462] ( pen ul ; move 3 , ua - ul ; move 3 , 2 + ul )  | ( move 3 , 0 - ul ; v0 = 3 ; move v0 , v0 )  | ( v0 = 3 ; move v0 , ul - 2 ; move 3 , v0 )  | ( v0 = 3 ; move v0 , 2 - 3 ; move v0 , v0 )  
[7463] ( ( move ua - ul , ua ; pen ua ) ; move 0 , 2 )  
[7464] ( pen ua ; move ul , 3 - ua ; move 4 + ul , 2 )  
[7465] ( pen 3 ; move ua , 3 - ul ; move 2 - ua , ul )  
[7466] ( move ua , ua + 3 ; pen 4 + ul ; move 3 , ul )  | ( move ua , 3 ; ( pen ul ; pen 4 ; move 3 , ul ) )  
[7467] ( move 3 , ul ; pen ua - ul ; move 3 , 2 - ua )  | ( move 2 + ul , ul ; pen ua ; move 2 + ul , ul + ul )  
[7468] ( move ul - 2 , ua ; move ua , ua / 3 ; pen 2 )  
[7469] ( pen ul ; move ua , 2 ; move 4 - ua , 3 + ul )  
[7470] ( pen 3 + ul ; move ul , 3 ; move 3 - ua , ua )  
[7471] ( pen ua ; move 2 - 4 , ua ; move ua - 3 , ul )  
[7472] ( move 2 , ua ; pen 4 + ul ; move ul - ua , 3 )  
[7473] ( move ul , 4 + 4 ; pen 2 ; move ua + ul , ua )  
[7474] ( move ua , ul + ul ; pen 2 ; move 4 , 3 + ul )  | ( ( move ua , ul + ul ; pen ul + ul ) ; move 4 , 4 )  
[7475] ( pen ua + 2 ; move ul , ul ; move 4 - ul , 2 )  | ( ( pen ua ; move 2 - ul , ul ; pen ua ) ; move 3 , 2 )  
[7476] ( pen ua + 3 ; move ul , ua ; move ua , 4 + 4 )  
[7477] ( move ul - ua , 0 ; move 3 , ul / 2 ; pen ul )  
[7478] ( move 3 , ua - ul ; pen 3 + 3 ; move ua , ul )  | ( move 2 + ul , ua - ul ; pen ua ; move ua , ul )  
[7479] ( move 2 , 3 - ul ; pen 2 ; move ul - ua , ul )  
[7480] ( move ua + 3 , ul ; pen ua ; move ua - 3 , 4 )  
[7481] ( move ua - ul , 4 ; move ua , ul - 4 ; pen 0 )  
[7482] ( pen ua * 2 ; move 2 , ul ; move ul - ua , 4 )  
[7483] ( v0 = ua - 4 ; move 4 * v0 , v0 - 3 )  
[7484] ( move 2 , 4 / 3 ; v0 = ul ; move 3 , v0 )  
[7485] ( pen 2 + ul ; move 3 , 4 + ul ; move ul , ul )  
[7486] ( move 4 , ua / 3 ; pen ua + 2 ; move ul , ua )  
[7487] ( pen 3 ; move ua + ul , ua ; move ul , 3 * 3 )  
[7488] ( pen 2 ; move 4 + 3 , ul ; move ul - ua , ul )  
[7489] ( pen ul ; move 3 , ua ; move ua - ul , 4 - 2 )  | ( move 3 , ua ; v0 = ua - 3 ; move v0 + 2 , 2 )  
[7490] ( pen ul ; move 3 - ua , 2 ; move 3 - ul , ul )  
[7491] ( pen ua + ul ; move ul , 3 + ul ; move 3 , 4 )  | ( pen 4 ; ( pen 4 ; move ul , 4 ) ; move 3 , 4 )  
[7492] ( move ua , 0 ; ( pen ua ; move 3 - ua , ul ) )  
[7493] ( move 4 , ul - ua ; pen 3 ; move ua - ul , 2 )  
[7494] ( move ul , ul ; pen 0 ; move ul - ua , 4 * 3 )  
[7495] ( move ua + ul , ul ; pen 4 + 3 ; move 3 , ul )  
[7496] ( ( move ua + ul , ul ; pen ua ) ; move 3 , 0 )  | ( move ua + ul , ul - ua ; pen ua + ul ; move 3 , ua )  
[7497] ( move 2 , ua ; pen 3 - ul ; move ul - 3 , ul )  
[7498] ( pen ua + 3 ; move 4 - ua , ua ; move 4 , ul )  
[7499] ( move 3 , ul + ul ; pen 4 + ul ; move ul , 2 )  
[7500] ( move ul - ua , 4 * 2 ; move 2 , ul ; pen ua )  
[7501] ( move ul , 3 + ul ; pen 4 ; move 4 , ua + ua )  
[7502] ( move 2 + ul , ul ; pen 3 ; move ul , 2 / ua )  
[7503] ( pen 4 ; move ua , ua ; move ua + 2 , ua / 4 )  
[7504] ( move ua , ul + ul ; move ua / 4 , 2 ; pen 2 )  | ( v0 = 2 ; ( move ua , v0 ; move ua / 4 , v0 ) )  
[7505] ( move ul - ua , ul - 3 ; move 4 , 2 ; pen ua )  
[7506] ( pen 2 + ul ; move ua + 4 , 4 ; move ul , ul )  | ( pen 4 ; move ua + 4 , 4 - ua ; move ul , ul - ua )  
[7507] ( pen 4 ; move 3 + ul , ul + ul ; move ua , 3 )  
[7508] ( move 3 , ul / ua ; pen ua + 3 ; move 2 , ul )  
[7509] ( pen ua ; move ua , 4 + ul ; move ul , 4 + 3 )  
[7510] ( move 4 , ua ; pen 0 ; move 3 - ul , ul / ua )  
[7511] ( move 3 , 4 + ul ; pen ul ; move ua - 2 , ul )  
[7512] ( move ua , 3 + ul ; pen ua / 3 ; move 2 , ul )  | ( move ua , 4 ; v0 = 2 ; ( pen v0 ; move v0 , ul ) )  
[7513] ( ( move ua , ua - 2 ; pen ua ) ; move 2 , ul )  
[7514] ( move 3 , ua * 4 ; pen 0 ; move ul , ul / ua )  | ( move 3 , ua ; pen ul / 4 ; move ul , ul / 4 )  
[7515] ( move ua + 4 , ul ; pen 4 ; move ul , 3 + ul )  
[7516] ( pen ul + ul ; move ua , 3 ; move ul , 4 * 2 )  
[7517] ( pen ua ; move ua - ul , 4 + 3 ; move 4 , ul )  
[7518] ( move 2 - ua , 4 ; pen ul ; move 4 , ua - ul )  
[7519] ( move ua - 3 , ua ; pen ua / 2 ; move ul , 4 )  
[7520] ( pen 4 + 3 ; move ul , ul ; move ua , ul - 3 )  | ( pen 4 * 2 ; move ul , ul ; move ua , ul - 3 )  
[7521] ( move ul , ua - ul ; move ua , 3 / 2 ; pen 3 )  
[7522] ( move 3 / 2 , ua ; pen 4 - ua ; move ua , ul )  
[7523] ( move ul , 2 ; ( pen ua ; move ua , 2 - ua ) )  
[7524] ( move 4 + ul , ul ; move ua , 4 + 4 ; pen ua )  
[7525] ( pen ua ; move 4 + ul , ua ; move 4 , 4 + ul )  
[7526] ( move ua / 2 , 3 - ua ; move 4 + 2 , 3 * 2 )  
[7527] ( move ua , 4 + ul ; move ua , 4 ; pen 4 + ul )  
[7528] ( move 3 , 4 - ul ; pen ua * ua ; move 3 , ua )  | ( ( move 3 , 3 ; pen ua ) ; move ua / 2 , 0 ; v0 = 4 )  
[7529] ( pen ua * 4 ; move ua , ua ; move 4 - ua , 3 )  
[7530] ( move ul , 4 + ul ; move ua , ul / 4 ; pen 0 )  | ( ( move ul , 4 + ul ; move ua , ul / 4 ) ; v0 = 2 )  
[7531] ( move ul - ua , 3 ; pen ul ; move ul , 4 + 3 )  
[7532] ( move 2 , ul - ua ; pen ul / 2 ; move ua , 4 )  
[7533] ( move ua , 2 - ul ; pen ul / 4 ; move 2 , ua )  
[7534] ( move ua - ul , 3 ; pen ua ; move ul , 4 + 4 )  
[7535] ( move 3 , 4 / ua ; pen ua + ul ; move 2 , ul )  
[7536] ( move 0 , ul / 4 ; pen 4 ; move ua , ul - ua )  
[7537] ( pen 2 ; move ua , 4 + ul ; move 4 - ul , ul )  
[7538] ( move ua + ul , ul - 4 ; pen 4 ; move ul , 2 )  
[7539] ( pen ul + ul ; move 4 , 3 - ul ; move ua , 3 )  
[7540] ( move 3 , ul ; move 3 - ua , 2 ; pen ul / ua )  
[7541] ( ( move ua , ua ; pen ua ) ; move 2 + ul , 3 )  | ( ( pen ul ; move ua , ua ) ; pen ua ; move 3 , 3 )  
[7542] ( pen ua - 2 ; move 4 , 4 ; move ul - ua , ul )  
[7543] ( move ua + ul , ua / 3 ; pen 4 ; move ul , 2 )  
[7544] ( move ua - ul , ul ; pen 3 ; move 2 , 4 - ul )  
[7545] ( move 2 / 4 , ua ; move ua + 4 , ul ; pen ua )  | ( move 3 / ua , ua ; move ua + 4 , ul ; pen ua / 4 )  
[7546] ( pen ua ; move ua - ul , 4 ; move 3 , 2 / ua )  
[7547] ( move ua - 2 , 4 ; pen ua ; move ul / 2 , ul )  
[7548] ( move 4 , 4 ; v0 = 4 ; move v0 - ua , 4 )  
[7549] ( move ua , ul ; pen 4 ; move 3 - 4 , ua + ul )  
[7550] ( move 4 + ul , 4 ; pen ul + ul ; move ul , 3 )  
[7551] ( pen 3 ; move ul + ul , 4 - ul ; move ua , 4 )  
[7552] ( move ua - ul , ua ; pen 3 ; move ul , 4 / 2 )  
[7553] ( move 4 / 3 , ua * ua ; pen ua ; move 3 , ua )  
[7554] ( ( move 2 , ul ; pen 2 ) ; move ua + ul , ul )  
[7555] ( move ua - 3 , 2 ; pen ul ; move ua / 4 , ul )  
[7556] ( move 4 , ua ; ( pen ua ; move ua + ul , 2 ) )  
[7557] ( move ul - 4 , 4 + ul ; move 3 , ul ; pen ua )  
[7558] ( move ua , 3 ; move ua - 4 , ul ; pen ua * 4 )  | ( ( pen ul ; move ua , 3 ) ; move ua - 4 , ua + ul )  | ( pen ul ; ( move ua , 3 ; move ua - 4 , ul - ua ) )  | ( pen 4 / ua ; move ua , 4 - ul ; move ua - 4 , ul )  
[7559] ( ( pen ua ; move ua , 2 ) ; move 3 - ua , ul )  
[7560] ( move ua , 2 ; ( pen ul ; move 2 , ua - ul ) )  | ( v0 = ua ; move v0 , 2 ; move 2 , v0 - ul )  | ( ( move ua , 2 ; move 2 , 0 - ul ) ; v0 = ul )  
[7561] ( move ua , 3 ; pen ua * 3 ; move ul , ul / 2 )  
[7562] ( move ua , ua - 4 ; move 2 , ul / 4 ; pen ua )  
[7563] ( pen ua ; ( move ua , ul ; move 3 , 2 + ul ) )  | ( pen ua ; move 3 + 3 , ul ; ( move 3 , 3 ; v0 = 0 ) )  | ( pen ua ; ( move ua , ul ; move 4 , 3 ) ; v0 = ua + ul )  
[7564] ( move ua , ul ; pen 2 ; move ul - 4 , ul - 4 )  
[7565] ( pen ul ; move ua , 4 + ul ; move 4 + ul , 4 )  
[7566] ( move ua , ul + ul ; pen ua ; move 4 / 2 , 4 )  
[7567] ( move ua , 4 ; ( pen ua + ul ; move ua , 2 ) )  
[7568] ( move ul , ul ; pen ua * 4 ; move 3 , ul - 2 )  
[7569] ( pen ul ; move ul , ua - 4 ; move 4 + 3 , ul )  
[7570] ( move 0 - 4 , ul ; pen ua ; move ul / 4 , ul )  
[7571] ( move ua , ua * ua ; pen 2 ; move 3 / 4 , ul )  
[7572] ( move ul - ua , 4 ; pen 4 ; move ul , ul - 2 )  
[7573] ( pen ua ; ( move 2 , ua ; move ua , 4 + ul ) )  
[7574] ( pen 4 ; move ua , ul ; move 4 * 2 , ul + ul )  
[7575] ( move 3 , 4 - ua ; pen 4 ; move ul + ul , ul )  | ( move 3 , 4 ; ( pen 3 ; move 2 , ul ; v0 = ul ) )  
[7576] ( move ua , ul / 2 ; pen ua ; move 2 / 3 , ul )  
[7577] ( pen ul ; move 3 - ua , 4 ; move 4 , ul - ua )  
[7578] ( pen ua ; ( move ul , 2 ; move ua - ul , 2 ) )  
[7579] ( move 3 - ua , ua - 4 ; pen ul ; move ul , 4 )  
[7580] ( ( move 4 , ua * ua ; pen 0 ) ; move ul , ul )  
[7581] ( move ua - ul , ua ; move 3 / 4 , 4 ; pen ua )  
[7582] ( move 3 , ul ; move ua - ul , ua / 4 ; pen 3 )  
[7583] ( pen 2 / ua ; move ua , ua / 4 ; move ul , 3 )  
[7584] ( move 3 , ua + ul ; ( pen ua ; move ua , 4 ) )  
[7585] ( move 3 , 3 - ul ; pen ul ; move ul - 4 , ul )  | ( move ul , 3 - ul ; move 2 , 0 ; move ul - 4 , ul )  
[7586] ( move ul , ua - 3 ; move 4 , ul / 3 ; pen ua )  
[7587] ( move ua , 4 ; move 3 - ua , ua / 4 ; pen ul )  
[7588] ( ( move 3 , ua ; pen ul + ul ) ; move 2 , ul )  
[7589] ( ( pen ua + ul ; move 4 , ua ) ; move ul , 2 )  
[7590] ( move ul , 2 - 4 ; move ua , ul / 3 ; pen ul )  
[7591] ( move ul , 4 + ul ; pen ua * 3 ; move 4 , ul )  
[7592] ( ( pen 3 ; move ua + ul , ua ) ; move 3 , ul )  
[7593] ( move ul , ua ; pen ua + 4 ; move 4 , ul / 3 )  
[7594] ( ( move ua - ul , 2 ; move ua , 4 ) ; pen ua )  
[7595] ( move 4 , 4 ; pen ul ; move ua + ul , ua / 3 )  
[7596] ( ( move 2 , ul ; pen ua ) ; move ua , 3 - ul )  | ( ( move 2 , ul ; pen ua ) ; move ua , 2 ; pen 3 )  
[7597] ( pen ua ; move 4 * 2 , ul / ua ; move ua , 4 )  
[7598] ( ( move 0 , ul ; pen ul ) ; move ua , ua / 3 )  | ( v0 = ua ; ( move 0 , v0 / 3 ; move v0 , ul ) )  
[7599] ( pen ul ; move ul - 4 , ua ; move 3 - ul , 4 )  
[7600] ( move 3 - ul , 4 ; pen ul / ua ; move 2 , ul )  
[7601] ( move ua , 4 + ul ; move ul , 4 * 3 ; pen ul )  
[7602] ( ( move ul , ul ; pen 0 ) ; move ua / 2 , ul )  
[7603] ( ( move 3 - ul , 2 ; pen ua ) ; move ua , ul )  
[7604] ( move ua , ul + ul ; pen 4 ; move ul / 2 , 4 )  
[7605] ( ( move ua - ul , 2 ; move 4 , ul ) ; pen ua )  
[7606] ( move 3 - ul , 3 ; pen ul ; move ua , ul / 4 )  
[7607] ( pen 3 ; move ua - ul , 3 / ua ; v0 = ul )  
[7608] ( ( move ua , ul / 3 ; pen 0 ) ; move ul , ul )  
[7609] ( move ul , 4 ; pen 4 ; move 4 - ul , ul + ul )  | ( move ul , 3 + ul ; pen ua + ua ; move 3 , ul + ul )  
[7610] ( ( move 2 , ul / 2 ; move ua , ul ) ; pen ua )  | ( move 2 , ul / 2 ; v0 = ul - ua ; move ua , v0 )  | ( move 2 , 2 / 4 ; ( move ua , ul ; v0 = 4 + ul ) )  
[7611] ( pen ul ; move 3 - ua , 4 ; move ua / 4 , ul )  | ( move ul , ul ; move 4 - ua , 4 - ul ; move 4 / 3 , ul )  
[7612] ( pen ua ; move ul , 3 / 4 ; move ua - ul , 4 )  
[7613] ( pen ua ; ( move 3 , ua ; move ua , ul / 2 ) )  
[7614] ( ( move 4 , ua * ua ; pen ul ) ; move ua , 2 )  
[7615] ( move 4 , ul ; pen ul ; move 4 + ul , ua / 3 )  
[7616] ( pen ua ; ( move 2 , ul ; move ua , ua / 3 ) )  
[7617] ( pen 4 ; move ua , ua * ua ; move 3 , ul / 4 )  
[7618] ( move 3 , 4 ; ( pen ul + ul ; move ua , ua ) )  | ( ( move 4 + 2 , 4 ; pen 4 ; pen ul + ul ) ; move 3 , 0 )  
[7619] ( ( move 4 , ua ; pen ua ) ; move 3 , ua - ul )  
[7620] ( pen ua ; move 4 , 3 ; move ul - ua , ul / 4 )  
[7621] ( move ua , 4 + ul ; ( pen ua ; move ul , 3 ) )  
[7622] ( move ul , ul ; move ua - 3 , 3 / 4 ; pen ul )  | ( move 3 - 2 , ul ; move ua / 2 , 4 + 3 ; pen 2 + ul )  
[7623] ( move ul , ul / ua ; pen 4 * 4 ; move 3 , ua )  
[7624] ( ( pen ua ; move 3 , ua ) ; move ua , 4 / ua )  
[7625] ( ( move ua , 4 ; pen ua ) ; move ua , ul - 4 )  
[7626] ( ( move ul , 4 ; pen ul - 2 ) ; move ua , ul )  | ( ( move ul , 4 ; pen ul - ua ) ; move ua , ul )  | ( ( move ul , 4 ; ( pen 2 ; pen ul - ua ) ) ; move ua , ul )  
[7627] ( ( pen ua ; move ua , 3 / ua ) ; move ul , 3 )  
[7628] ( move ua - ul , ua ; move ul , 2 ; move ua , 0 )  
[7629] ( move ua / 4 , ua / 3 ; pen ul ; move 3 , ul )  
[7630] ( move ua , ua ; move 0 - 3 , ua ; move ua , ul )  
[7631] ( move ul - 4 , ua ; ( pen 3 ; move ul , ua ) )  
[7632] ( pen 4 ; ( move ua , ul ; move 3 , ul + ul ) )  
[7633] ( ( pen ul + ul ; move 2 , ul ) ; move 4 , ul )  
[7634] ( move 2 / 4 , ul ; pen ul ; move 4 , ul / ua )  
[7635] ( ( pen 4 - ul ; move ua , ul ) ; move 3 , ul )  
[7636] ( move ua , 0 ; move 2 , ul ; move ul + ul , ul )  
[7637] ( move 4 , 4 * 4 ; move ua , ul ; pen ul / ua )  | ( move 4 , 4 * 4 ; ( move ua , ul ; pen ua + 3 ) )  
[7638] ( move 4 , ul ; ( pen ua + ul ; move ul , 4 ) )  | ( ( v0 = ul ; move 4 , v0 ) ; pen 4 ; move v0 , 4 )  
[7639] ( ( pen ua ; move ul , ul ) ; move 4 , 2 / ua )  | ( ( pen ua * ua ; move 2 - ul , ul ) ; move 4 , 2 / ua )  
[7640] ( move ul , ua ; move 2 , ua + 2 ; move ua , ul )  | ( ( move ul , ua ; pen ul ; move 2 , 4 - 2 ) ; move ua , ul )  
[7641] ( pen ua ; ( move 2 , ul / 4 ; move ua , ul ) )  
[7642] ( ( move ul , ul / ua ; pen 3 ) ; move 3 , ua )  
[7643] ( move ul , 0 ; move ul - ua , ul ; move 2 , ul )  
[7644] ( move ul , 2 ; move ul , ua + 2 ; move ua , ul )  | ( move ul , 2 ; move ul , ul + ul ; move ua , ul )  
[7645] ( ( move 3 , ul / 3 ; pen ul ) ; move ua , ul )  
[7646] ( move 4 , ua ; move ul , 0 ; move ua + ul , ul )  | ( move 4 , ua ; ( move ul , ua ; move ua + ul , ul ) )  
[7647] ( move ul , 3 ; move ua , ua * ua ; move ul , 0 )  
[7648] ( move 3 - ul , 0 ; move ua , ul ; move ul , ul )  | ( move 2 , ua ; move ua , ul ; move ul , ul - ua )  
[7649] ( move 2 , ua + ul ; move ul , ul ; move ul , 2 )  
[7650] ( move ul - ua , 3 ; move 0 , ul ; move ul , ul )  | ( move ul , 2 ; ( move ua - ul , ul ; pen ul ) )  | ( move ul - ua , 3 ; v0 = ul - 2 ; move v0 , v0 )  | ( v0 = ul ; move ul - ua , 3 / v0 ; move v0 , 2 )  
[7651] ( move 0 , ul ; move ua - ul , 4 ; move ua , ul )  
[7652] ( move 4 , ul ; move 0 - ul , ul ; move ua , ua )  
[7653] ( move ua + ul , ua ; move 3 , 3 ; move ua , ul )  
[7654] ( move ul , 2 ; move ua , ua - 2 ; move ul , ul )  
[7655] ( move ua , ua ; move 0 - ul , 4 ; move ul , ul )  | ( ( move ua , ua ; move ul - 2 , 4 ) ; move ul , ul )  
[7656] ( move 2 + ul , ua ; move ua , ul ; move 3 , ul )  | ( move 3 , ua ; move ua , ul ; move 3 , ul - ua )  
[7657] ( move ua + ul , ua ; move ul , 2 ; move 3 , ul )  
[7658] ( move ul , 0 ; move ua - 3 , ul ; move ul , ul )  
[7659] ( move ua , 2 ; move ua , 4 ; move ul , ua + ul )  
[7660] ( move 0 , ua * ua ; move ua , ul ; move ul , 4 )  
[7661] ( move ul , ua * ua ; move ua , 0 ; move ul , 4 )  
[7662] ( move ua , ua ; move ul , 2 ; move ul , ul - 2 )  
[7663] ( move 2 , ua * ua ; move ua , 2 ; move ul , ul )  
[7664] ( move ua , ua + ul ; move ua , 4 ; move 2 , ul )  
[7665] ( move ul + ul , 0 ; move ua , ul ; move ul , 4 )  
[7666] ( move ua , ul ; move ul , 0 - ul ; move 3 , ul )  
[7667] ( move ul , ua ; move 3 , ul ; move ul - ua , 2 )  
[7668] ( move 3 , ul ; move ul , ua ; move ua - ul , 2 )  | ( move 4 , ul ; move ua - 2 , ua + 2 ; move ul , 0 )  
[7669] ( move ua , ul ; move 0 , ul ; move ua , 4 / ua )  
[7670] ( move 2 , 3 - ua ; move ua , ul ; move ul , ul )  
[7671] ( move ua , ul ; move 3 , ua * ua ; move ua , 3 )  
[7672] ( move ul , 2 ; move 4 , ua ; move ua , ua * ua )  
[7673] ( move ul , 4 ; move 2 , ul ; move ua , ua + ul )  
[7674] ( move ul , ul / ua ; move ua , ul ; move 3 , 0 )  
[7675] ( move 4 , 0 ; move ul , ua - ul ; move ul , ul )  
[7676] ( move ul , ul ; move 2 - ua , 2 ; move ul , ul )  
[7677] ( move ul , 0 ; move ua - ul , ul ; move ul , 4 )  
[7678] ( move 2 , 3 + ul ; move ul , ul ; move ua , ul )  
[7679] ( move ua , ul ; move ul - ua , ua ; move 3 , 3 )  
[7680] ( move 0 , ua ; move ul , ul ; move ua , 4 / ua )  
[7681] ( move 4 + 3 , ul / 4 ; move ua / 4 , 2 / 3 )  
[7682] ( move 3 , ul ; move ua + ul , 2 ; move ul , ul )  
[7683] ( move 4 , ua ; move ul , ua - 2 ; move ua , ul )  
[7684] ( pen 2 + ul ; move ua - ul , 2 / 3 ; pen ul )  
[7685] ( move 3 , ua ; move ua , ul ; move ul , 4 + ul )  
[7686] ( move ul + ul , ua ; move ua , 4 ; move ua , 4 )  
[7687] ( move ua , ul ; move ua , 4 ; move ul , 3 + ul )  | ( move ua , ul ; move ua , 3 + ul ; move 2 , 3 + ul )  
[7688] ( move 3 - ua , 3 ; move ul , ul ; move ua , ul )  
[7689] ( move ul , ul ; move ul , ul ; move 3 + 2 , ul )  
[7690] ( move ua , 4 ; move ul , ul ; move ul + ul , 2 )  
[7691] ( move 3 , ul ; move ul , ul - 2 ; move ua , ul )  
[7692] ( move 2 + ul , ul ; move 4 , ul ; move ua , ul )  
[7693] ( move ul + ul , ul ; move 3 , 2 ; move ul , ul )  
[7694] ( move 4 , ua * ua ; move 2 , ul ; move ua , ul )  
[7695] ( move ul , ua ; move ul , ul ; move 3 + ul , 3 )  
[7696] ( move 2 , 4 ; move ul , ua + ul ; move ul , ul )  
[7697] ( move 3 , ul ; move ua , ul ; move ua , 3 - ul )  
[7698] ( move ua - ul , ua ; move ul , 4 ; move ul , 2 )  
[7699] ( move ua , ul ; move 3 , ua - ul ; move ua , 4 )  
[7700] ( move 3 , ul ; move 2 , ul + ul ; move ul , ul )  
[7701] ( move 3 + ul , 2 ; move ul , ul ; move ul , ul )  
[7702] ( move 2 , ul ; move ua , ul + ul ; move ul , 4 )  
[7703] ( move ul , ul ; move ua , ua / 4 ; move ul , 0 )  
[7704] ( move ul , ul ; move ul , ua ; move 4 + ul , 2 )  
[7705] ( move 4 , ul ; move 3 , ua + ul ; move ua , ul )  
[7706] ( move ua , ul ; move ul , 2 ; move ua , ul - 4 )  
[7707] ( move ua + 2 , ul ; move ul , ul ; v0 = ua )  | ( move ua + 2 , ul ; pen ul / 2 ; move ul , ul )  | ( move ua + 2 , ul ; pen ul - ua ; move ul , ul )  
[7708] ( move ua , ul ; move 3 , ul ; move ua - 3 , ul )  
[7709] ( move ua , ul ; move ua , 3 ; move ua / 2 , ul )  
[7710] ( move ua , ul ; move 4 , ua + 4 ; move ul , ul )  
[7711] ( move 4 , ul - ua ; move ul , ul ; move 2 , ul )  
[7712] ( move ul + ul , 2 ; move ul , ul ; move 4 , ul )  
[7713] ( move ul , ua * ua ; move 3 , ul ; move ua , 4 )  
[7714] ( move 4 , 3 + ul ; move ul , ul ; move ua , ul )  
[7715] ( move ul , 3 ; move ul + ul , ul ; move 3 , ul )  
[7716] ( move ua , ua ; move ul - 3 , ul ; move 4 , ul )  
[7717] ( move 4 , ua ; move ua , ul - 3 ; move ul , ul )  
[7718] ( move 3 , 3 ; move ua - ul , ul ; move ul , ul )  
[7719] ( move ul , ul - 4 ; move ul , 2 ; move ua , ul )  
[7720] ( move ua , 3 ; move 3 / ua , ua ; move ul , ul )  
[7721] ( move ua , ul ; move ua , 3 ; move ul - 4 , ul )  
[7722] ( move ua , ua ; move ul , ul ; move ul - 3 , 4 )  
[7723] ( move ua - ul , 2 ; move ul , ul ; move 4 , ul )  
[7724] ( move ua , ul ; move ul , 2 - ul ; move ul , 4 )  
[7725] ( move ul , ua ; move ul , 3 ; move 3 - ul , ul )  
[7726] ( move ul , 3 + ul ; move ul , ul ; move ua , 4 )  | ( ( move 0 - ul , ul ; move ul , 4 ; move ua , 4 ) ; pen ul )  
[7727] ( move ul / 3 , ul ; move ua , 2 ; move ul , ua )  
[7728] ( move 4 , ul ; move 2 + ul , ul ; move ul , ul )  | ( move 4 , ul ; move 3 , ul - ua ; move ul , ul )  
[7729] ( move 4 , ua ; move ua , 4 ; move ul , ul + ul )  
[7730] ( move ua - ul , ul ; move ul , 2 ; move ul , 4 )  
[7731] ( move ul , 3 + ul ; move ul , ul ; move 4 , ul )  
[7732] ( move 4 + ul , ua ; move 4 , ul ; move ul , ul )  
[7733] ( move ul , ul + ul ; move ul , 4 ; move ua , 4 )  
[7734] ( move ua , ua ; move ua , 4 ; move 4 , ul / ua )  
[7735] ( move ul , 4 ; move ua , 4 ; move ul , ua - ul )  
[7736] ( move 4 - 2 , ul ; move ul , ul ; move ul , ul )  
[7737] ( move ul , ul ; move 3 + ul , 4 ; move ul , ul )  | ( move ul , ul ; ( move 4 , 4 ; ( pen ul ; move ul , ul ) ) )  
[7738] ( move 4 , ul ; move ul , ul + ul ; move 4 , ua )  | ( move 4 , ul ; move 0 , ul ; move 4 + ul , ua + ul )  
[7739] ( move ul , ul ; move ul , ua - 4 ; move 3 , ul )  
[7740] ( move 4 , ua ; move ul + ul , ul ; move 4 , ul )  
[7741] ( move ul , ul ; move 3 , 3 - ul ; move ul , ul )  
[7742] ( move ua , 3 ; v0 = 0 - ua ; move v0 , 2 )  
[7743] ( move ua , ul ; move ul , ua ; move 4 , ua / 3 )  
[7744] ( move ua , ua ; move ul / 4 , ua ; move 3 , ul )  | ( move 4 + 2 , ua + ua ; move ul / 2 , 0 ; move 3 , ul )  
[7745] ( move ul , 3 ; move 4 , ul - ua ; move ul , ul )  | ( ( move ul , 3 ; move 4 , ul - ua ) ; move ul , ul )  
[7746] ( move ua - ul , 0 ; v0 = 2 ; move 2 , v0 )  
[7747] ( move ul , ua + ul ; move 4 , ul ; move 4 , ul )  
[7748] ( move ul , 3 ; move ul , ua ; move ul - 4 , ul )  
[7749] ( move 4 , ua ; move ul , ul ; move ul , 3 - ul )  | ( move 4 , 0 ; ( move ul , ua + ul ; move ul , ul + ul ) )  
[7750] ( move ul , 3 - ua ; move ul , ul ; move 4 , ul )  
[7751] ( move ua , 4 ; move ul , ua - ul ; move ul , 4 )  
[7752] ( move 3 , ua ; move 4 / ua , ul ; move ul , ul )  
[7753] ( move ul , ul ; move 2 , ul ; move ua / 4 , ul )  
[7754] ( move ul / 4 , ul ; move ua , ua ; move 3 , ul )  
[7755] ( move 3 - ul , ul ; move ul , ul ; move ul , 4 )  
[7756] ( move 2 , 4 ; ( pen ua ; move 3 , 0 ; pen 0 ) )  
[7757] ( move ul , 4 ; move ul + ul , ul ; move 4 , ul )  
[7758] ( move 3 , ua / 3 ; move ul , ul ; move ul , ul )  
[7759] ( move ua , ul ; move ul , 4 ; move 4 - ul , ul )  
[7760] ( move ul , 3 ; move 4 - ul , ul ; move ul , ul )  
[7761] ( move ul , 4 ; move ua , ul / 4 ; move ul , ua )  
[7762] ( move 3 , ua ; ( move ua , ul ; move ul , ul ) )  
[7763] ( move ua , ul / 3 ; move ul , 4 ; move ul , ul )  
[7764] ( move ul , ua ; move ul , ua / 4 ; move 4 , ul )  
[7765] ( move ua , ua ; move ul , ul ; move 4 , ul / 4 )  
[7766] ( move ua , ul ; move 4 , 4 ; move ul , ul / ua )  
[7767] ( move ul , ul ; move 4 , ul / 2 ; move ul , ul )  
[7768] ( pen ul ; move ua , ua ; move ua + ul , 0 - 2 )  
[7769] ( move ul , 0 ; pen 3 - ua ; move ua , ua + ul )  | ( ( move ul , 0 ; pen 0 ; move ua , ul ) ; pen ul )  
[7770] ( ( pen 0 ; move 2 , 4 ) ; pen 3 ; move ua , 2 )  
[7771] ( move ul , ul ; move 4 , ul ; move 4 , ul / ua )  
[7772] ( move ul , ul ; ( move ua , 4 ; move ua , ul ) )  
[7773] ( move 2 , 3 ; v0 = ua ; move 3 + v0 , ul )  | ( move ul + ul , 3 ; ( move 3 , ul ; move ua , ua * 3 ) )  
[7774] ( move 4 , 0 ; ( pen 2 ; pen 0 ) ; move ul , 4 )  
[7775] ( pen ua ; move ua + ul , 0 ; move 3 , ul - ua )  | ( pen ua - ul ; move ua + ul , ua ; move 3 , ul )  | ( ( pen ua + 2 ; move ul , ua ; move ua , ua ) ; move 3 , ul )  
[7776] ( move ul , ul ; ( move ua , ul ; move ua , 4 ) )  | ( ( pen ul ; move ul , ul ) ; move ua , ul ; move ua , 4 )  
[7777] ( pen ua ; move 0 - ul , 2 ; move ua , ua * ua )  
[7778] ( pen ua ; move ua , ua + ul ; move 0 - 4 , ul )  
[7779] ( pen ua + 4 ; move ua - ul , 0 ; move ua , ul )  | ( pen ua + ul ; move ua - ul , ua ; move ua , ua + ul )  
[7780] ( pen ua ; move 2 + ul , ul - ua ; move ua , 2 )  
[7781] ( move ul , ua + ul ; pen 2 ; move ua , ua - 2 )  
[7782] ( pen ua ; move 2 , 2 + ul ; move ua , ul - ua )  | ( pen ua * ua ; move ul + ul , 3 ; move ua , ul )  | ( ( pen 0 ; pen ua ; move 2 , 3 - ua ) ; move ua , ul )  
[7783] ( pen ua ; move ua + 2 , ul ; move ua , 3 + ul )  
[7784] ( move ua - ul , ua ; move 0 - 3 , ul ; pen ua )  
[7785] ( move ul , 0 ; pen 2 ; move ua - ul , ua - ul )  
[7786] ( move 3 - ua , 2 ; v0 = 3 ; move v0 , ul )  
[7787] ( move ul , ua + 4 ; pen 0 ; move ua + ul , ul )  
[7788] ( move 2 , ua ; v0 = 4 + 3 ; move v0 , ul )  
[7789] ( move ua + ul , ua + 3 ; move ua , 3 ; pen ua )  
[7790] ( move ul , 2 ; ( pen 3 ; move 3 , 3 ) ; pen 0 )  
[7791] ( move ua - ul , ul ; pen ua - 2 ; move 0 , ul )  | ( move ua - ul , ul ; pen ua + ul ; move 0 , 3 + 3 )  
[7792] ( ( move ul , ul ; move 3 , ul ) ; move ul , ul )  | ( move ul , ul - ua ; move 3 , ul ; move ul , ul )  
[7793] ( pen 3 ; move ul , 0 ; move ua + ul , ua * ua )  
[7794] ( pen ua ; move ua + ul , 3 + 2 ; move ua , ul )  
[7795] ( move 2 + ul , ul + ul ; pen 0 ; move ul , ul )  | ( move ua / 2 , ul + ul ; pen 0 ; move ul , ul )  
[7796] ( move ua - ul , ul ; pen 0 ; move ua , 3 + ul )  
[7797] ( move ua , ul / ua ; pen 0 - ul ; move ul , 0 )  
[7798] ( pen ua ; move 4 , ua ; move ua + ul , 2 + ul )  
[7799] ( move ul - 3 , ul ; pen 0 ; move ua , ul + ul )  
[7800] ( move ua , 0 ; pen 4 + ul ; move ul , ua * ua )  
[7801] ( move ul + ul , ul / ua ; pen 0 ; move 2 , ua )  
[7802] ( move ul - ua , 0 ; pen ua ; move ul , ul - 3 )  | ( ( move ul - ua , ua ; pen ua + 2 ) ; move ul , ua + 4 )  
[7803] ( move 2 , ua - ul ; move 3 , ua + ul ; pen ua )  
[7804] ( move ua + ul , 2 ; pen ul ; move ua , 3 + ul )  | ( move 0 , ul ; ( move ua + ul , ul ; move ua , 4 ; pen ua ) )  
[7805] ( pen ul ; move ua + 2 , ua ; move ua , ua - 4 )  
[7806] ( pen ua ; move ua , 0 - ul ; move 4 + ul , ul )  
[7807] ( move ul , 0 ; pen 2 / ua ; move ul - ua , ua )  
[7808] ( v0 = 2 ; move ua - v0 , ul ; move 4 , 3 )  
[7809] ( move 3 , ul + ul ; pen 0 - ul ; move ul , ua )  | ( move 2 + ul , 2 ; ( pen 0 ; move ul , ua ) ; move 0 , ua )  
[7810] ( move ua , 4 + ul ; pen ua ; move ua + ul , 2 )  
[7811] ( pen ua ; move ua , 2 + ul ; move ul , ul - 2 )  
[7812] ( pen ua + ua ; move ul , ua - ul ; move 3 , 2 )  | ( pen ua ; move ul , ua - ul ; move 3 , ul + ul )  
[7813] ( move ua - ul , 4 ; pen 0 ; move ua - ul , ua )  
[7814] ( move 3 , ua ; move ua - 2 , ul ; pen ua + ul )  | ( v0 = ua - 2 ; move 3 , ua ; move v0 , ul )  
[7815] ( pen ua ; move 3 - ul , ua ; move ua , ua + 4 )  
[7816] ( pen 3 ; move ua - 3 , ua ; move ua , ul - ua )  
[7817] ( move ua , 2 ; move ul - ua , ua * ua ; pen 3 )  
[7818] ( pen ua ; move ul , ul - 2 ; move 3 , ua + ul )  | ( pen ua ; move ul , ua - ul ; move 2 + ul , ul )  
[7819] ( move ua , 4 + ul ; v0 = 4 ; move 3 , v0 )  | ( v0 = 4 ; move ua , ul + v0 ; move 3 , v0 )  
[7820] ( move 4 * 2 , ua - 3 ; move ua + 2 , 2 - ua )  
[7821] ( move ua , ul + ul ; pen 2 + ul ; move ul , 3 )  
[7822] ( move ua , ua + ul ; pen ua ; move 3 , ul - 3 )  
[7823] ( move ua , ua * ua ; pen 4 ; move 2 , ua + ul )  
[7824] ( pen ua + ul ; move 2 , 3 - ul ; move ua , ul )  | ( ( move 0 , ul - ua ; pen ua ) ; move 2 , ul ; move ua , ul )  
[7825] ( move ua , 4 + ul ; pen ua + ua ; move 3 , ul )  
[7826] ( move ua + 2 , ua * 2 ; move 3 * 3 , 2 + ul )  
[7827] ( move 2 , ul ; v0 = ua - 4 ; move 4 , v0 )  | ( ( move 2 , ul ; move 4 , 0 - 4 ) ; v0 = 0 )  
[7828] ( pen ua ; move 3 + ul , ua ; move 3 - ua , ul )  
[7829] ( move 4 + ul , 4 ; v0 = 2 ; move v0 , ul )  | ( move ul + ul , 3 - ul ; v0 = 0 ; move ul - ua , 2 )  
[7830] ( move 4 , ul + ul ; pen 0 - ul ; move ul , ua )  
[7831] ( move 3 - ua , ul ; pen ua ; move ul , ua - 2 )  
[7832] ( move 0 , ul + ul ; move ua , 3 / ua ; pen ul )  | ( move ul / 2 , 3 ; move 0 , ua - 4 ; move ua , ul / 3 )  
[7833] ( move 3 + 2 , 0 - 2 ; move 4 , 0 ; move 3 , 2 )  
[7834] ( move 3 - ua , ul - ua ; pen ua ; move 3 , ua )  | ( pen ua ; ( move 3 , ul ; pen 4 / ua ; move ul , 2 + ul ) )  
[7835] ( move 2 + ul , 3 + ul ; pen ua ; move ul , ul )  
[7836] ( move ul - ua , ua * 3 ; pen ua ; move ua , 2 )  
[7837] ( move ua , 4 + 3 ; v0 = ul ; move 4 , v0 )  | ( ( move 0 , 4 + ul ; move ua , 2 ) ; move 4 , ul )  | ( ( move ua , 4 + 3 ; move 4 , ul - ua ) ; v0 = ul )  
[7838] ( move ua , 2 ; v0 = 4 ; move ua , 4 * v0 )  
[7839] ( move ua , ul ; pen 3 / ua ; move ua , ua + 2 )  
[7840] ( move ul , 3 ; pen ua + 3 ; move ua - ul , ua )  
[7841] ( move 2 + ul , 4 ; pen ua * ua ; move ul , ua )  | ( move 4 , 4 - ua ; pen 4 * 3 ; move ul - 2 , 0 )  | ( ( move 4 - ul , 3 + ul ; pen ua ) ; move ul , 0 )  
[7842] ( pen ua ; move 3 - ua , ua * 3 ; move ua , ul )  
[7843] ( move 3 , 3 - ua ; pen ua ; move ul - ua , ul )  
[7844] ( pen 3 ; move ul , ua - 3 ; move ua + ul , ul )  
[7845] ( move 0 - 4 , ul / 2 ; move 2 + ul , ul - 2 )  
[7846] ( move ul , ul + ul ; pen 2 ; move ul - ua , 3 )  
[7847] ( pen ul ; move ul , ul - 3 ; move ua , ua - 2 )  
[7848] ( pen ua ; move ul / 2 , ul ; move ua + ul , 2 )  
[7849] ( move ua - ul , ua ; pen 4 + ul ; move 2 , ul )  
[7850] ( move ua , ul ; pen ul + ul ; move 4 + ul , 2 )  
[7851] ( move 3 , 3 + ul ; pen ul + ul ; move ua , ul )  
[7852] ( pen 2 ; move ua + ul , 4 - ua ; move ul , ul )  
[7853] ( move ul , 0 ; pen ul / 3 ; move ua + ul , ul )  
[7854] ( move 4 - ua , 4 ; v0 = 4 ; move ua , v0 )  
[7855] ( pen ul + ul ; move ua , ua ; move 2 , 3 / ua )  
[7856] ( move ul , ul ; pen 2 / ua ; move ua + 2 , ul )  
[7857] ( pen 3 ; move ul + ul , ul + ul ; move 2 , ul )  
[7858] ( move 3 , ul ; move 3 + ul , ua * ua ; pen ua )  | ( ( move 3 , ul ; move 2 + 2 , ua * ua ) ; v0 = 4 )  
[7859] ( pen ua - ul ; move ua , ua - ul ; move 2 , 4 )  
[7860] ( move ua , 4 ; pen ua ; move 3 + ul , ul + ul )  
[7861] ( move 4 , 0 ; pen ul / ua ; move ua , ua * ua )  
[7862] ( pen ua * ua ; move ua , 4 + ul ; move 3 , ul )  
[7863] ( move ul , ua * ua ; pen 4 ; move 2 + ul , ul )  
[7864] ( pen ua ; move 4 , ua + ul ; move 4 , ul - ua )  | ( ( pen 0 ; pen ua ; move 3 + ul , ul - ua ) ; move 4 , ul )  
[7865] ( move ua / 2 , ul ; pen ua ; move 3 - ua , ul )  
[7866] ( move 3 , ul ; pen ul ; move ul - 3 , ua + ul )  
[7867] ( move ul - ua , 4 - ua ; move 2 , ul ; pen ul )  
[7868] ( move ua , ua - ul ; move ua - ul , 3 ; pen 4 )  
[7869] ( move ua - ul , 4 ; pen ua - ul ; move ul , 2 )  
[7870] ( move ua - 3 , ul / ua ; move ua , ul ; pen 2 )  
[7871] ( pen ua - 3 ; move ua , ul ; move ul , 3 - ul )  | ( pen 3 ; ( move ua , ul ; move ul , ul + ul ) )  
[7872] ( move 2 , ul / ua ; move ul + ul , ul ; pen 2 )  
[7873] ( move 4 , ul ; pen ua * ua ; move 2 , ul + ul )  
[7874] ( move ul , ua - ul ; move 2 - ua , 4 ; pen ul )  
[7875] ( move ua + ul , ul / 2 ; pen 3 ; move ul , ua )  
[7876] ( move 4 + ul , ua ; pen ua ; move ul - ua , 4 )  
[7877] ( move ua , ul ; pen ul - ua ; move 3 - ua , 4 )  
[7878] ( pen ua ; move 4 , ul ; move ul + ul , ul - 2 )  | ( pen ua + ul ; move 2 , ua / 2 ; move 3 + ul , ua + ul )  
[7879] ( move ul , ua - 4 ; pen ua - 3 ; move ua , ul )  
[7880] ( move ua + ul , 4 ; pen ul - ua ; move 4 , ua )  
[7881] ( move ua , ul / ua ; pen 2 ; move ua , 3 - ul )  
[7882] ( move ua , 2 - ua ; pen ua ; move ul / 3 , ul )  
[7883] ( move ua , ul ; pen 3 + 2 ; move ul , ul / ua )  
[7884] ( move 3 - ul , ua / 3 ; move 0 - 4 , 2 + ul )  
[7885] ( pen ua * 2 ; move ua + ul , 4 ; move ul , ul )  
[7886] ( pen ua ; move ua - ul , ul ; move 3 , 4 + ul )  
[7887] ( move ua - 3 , ul ; pen 3 - ul ; move ua , ul )  
[7888] ( pen ua - 4 ; move ua , ul ; move ul , ul - 2 )  
[7889] ( pen 2 ; move ul , ul ; move ul - ua , 2 / ua )  
[7890] ( move ul , 0 ; pen ul / 4 ; move ua , ua * ua )  
[7891] ( pen 4 ; move ul , ua - ul ; move 3 , ua + ul )  
[7892] ( move 2 , 4 ; pen ul + ul ; move ua - ul , ul )  
[7893] ( pen 3 + ul ; move ua , ua ; move ul - 4 , ul )  
[7894] ( pen ua ; move 3 , ul / ua ; move 2 - ua , ul )  
[7895] ( move ua / 2 , 3 + ul ; move 3 - ua , 3 * 2 )  
[7896] ( pen ua ; move ul , ul ; move ua + ul , 4 * 3 )  
[7897] ( move ua , ul / ua ; pen 0 ; move ul / 3 , ul )  | ( move ua , ul / ua ; v0 = 2 ; move v0 / ua , v0 )  
[7898] ( pen 3 - ul ; move ul , 4 + ul ; move ua , ul )  
[7899] ( move 3 - ul , ul ; pen 4 ; move ua + ul , ul )  | ( move ul + ul , ul ; ( pen ua ; move ua + ul , ul ) ; pen ul )  
[7900] ( pen ua * ua ; move ua , ul ; move 2 , ul / 3 )  
[7901] ( pen ua ; move 3 , ul + ul ; move 4 - ul , ul )  
[7902] ( pen ua ; ( move ua , ul ; move ul , 0 - ul ) )  
[7903] ( pen ul + ul ; move ul , 4 ; move ua , 4 + ul )  
[7904] ( move 4 - ua , ua ; pen ul ; move ua - ul , 4 )  
[7905] ( move ua , ul ; pen ul - 2 ; move 3 , ul / ua )  
[7906] ( pen 3 ; move ul - ua , ul + ul ; move 4 , ul )  
[7907] ( move ul - 3 , 4 ; pen ua ; move ua - ul , ul )  
[7908] ( pen ua ; move ua / 4 , ua - 3 ; move ua , ul )  
[7909] ( move ul , 4 ; move ua + 3 , ul / ua ; pen ua )  
[7910] ( move ul - ua , 4 ; pen ul ; move ul , 3 + ul )  
[7911] ( move 4 , 4 + 4 ; move 0 , 2 + 2 ; move 2 , 2 )  
[7912] ( move 2 + ul , ul / ua ; pen 3 ; move ul , ul )  
[7913] ( pen ua + 2 ; move ua , ul ; move ul , ul / 4 )  | ( pen 4 + ul ; move ua , ul ; move ul , 3 / ua )  
[7914] ( pen 3 - ul ; move 3 , ul ; move ua - ul , ul )  | ( move 3 , ul ; pen ul + ul ; move ua - ul , ul )  
[7915] ( move ul , ua + ua ; pen 4 ; move ua , ul / 3 )  
[7916] ( move ul - 4 , ua - 4 ; move 3 + 2 , ul - 2 )  
[7917] ( move ul , 3 ; pen ul - 4 ; move ua , ul + ul )  
[7918] ( move ul - 4 , ul ; pen ua ; move ua - 3 , ul )  
[7919] ( move ul , 4 ; pen ua - ul ; move ua , 4 + ul )  
[7920] ( pen ua ; move ul , ul + ul ; move 4 + ul , 4 )  
[7921] ( pen ua ; move ul , 4 ; move ua - ul , 4 + ul )  
[7922] ( move ua - ul , ul / 4 ; move ul , ul ; pen 0 )  
[7923] ( move 4 , ul ; move ua , ul - 3 ; pen ul + ul )  
[7924] ( pen ul ; move ul , ul ; move ul - ua , 3 * 3 )  
[7925] ( move ua , 4 ; pen ul / ua ; move 4 , ua + ul )  
[7926] ( move ua , ul / ua ; move 4 , 4 + ul ; pen ua )  
[7927] ( move 4 + 4 , 2 + ul ; move 2 / ua , ul - 3 )  
[7928] ( move 3 - ua , ul / ua ; pen ua ; move 4 , ul )  
[7929] ( pen ul + ul ; move 3 , ul / 2 ; move ul , ul )  
[7930] ( move ua , 2 ; ( pen ua ; move ua - ul , ul ) )  
[7931] ( move 0 - 4 , 3 / 4 ; move 3 + ul , ua - ul )  
[7932] ( pen ul ; move 3 , 4 / ua ; move ua , ul + ul )  
[7933] ( move 0 - 2 , ua / 4 ; move ul - 3 , 3 / ua )  
[7934] ( move ua , ua ; ( pen 2 ; move ul + ul , ul ) )  | ( move ua , 0 ; v0 = 2 ; ( pen v0 ; move v0 , ul ) )  
[7935] ( pen 3 ; move ul , ul / ua ; move 3 , ua * ua )  
[7936] ( move ul , 3 ; pen ul + ul ; move 4 - ul , ul )  
[7937] ( move ul , ul ; pen 4 + 3 ; move ua , ul / ua )  | ( ( move ul , ul ; pen ua ) ; move ua , ul / ua )  
[7938] ( move ua + ul , ua ; ( pen ua ; move ul , 4 ) )  
[7939] ( move ua , ul / ua ; pen 3 / ua ; move ua , 4 )  
[7940] ( ( move ul , ua ; pen ua ) ; move ua , 4 + ul )  
[7941] ( move 4 / ua , 4 ; pen ul - ua ; move ua , ul )  
[7942] ( move ul / 3 , ul ; pen ul - ua ; move ua , 4 )  
[7943] ( ( move ua , ua ; pen ua ) ; move 4 + ul , ul )  | ( move ua , ua + ua ; pen ua ; move 4 + ul , ul )  
[7944] ( move ul , 4 ; move ua + ul , ul / 3 ; pen ul )  
[7945] ( move 2 - ua , 3 + ul ; move 3 * 3 , ul / 3 )  
[7946] ( ( move ul , ua - 3 ; pen ua ) ; move ua , ul )  
[7947] ( pen ul ; move ul , 4 * 3 ; move ul - ua , ul )  
[7948] ( pen ul + ul ; move ul , 3 ; move ua , ul / 4 )  
[7949] ( pen ua ; move 4 + ul , ul ; move ua / 4 , ul )  
[7950] ( pen ua ; move ua , ul / ua ; move ul , 4 / 2 )  
[7951] ( move ua , ua ; ( pen ua ; move 2 , ul / ua ) )  
[7952] ( pen ul ; move ua , ua / 4 ; move ua , 4 - ul )  
[7953] ( pen ua + ul ; move 4 , 4 / ua ; move ul , ul )  
[7954] ( move 2 + ul , 3 / 4 ; move ua - 2 , ul / 3 )  
[7955] ( move ul , ua - ul ; ( pen ua ; move 4 , ua ) )  
[7956] ( move ul , ua / 3 ; move 4 , ul / ua ; pen ua )  
[7957] ( move ul - ua , ul ; pen 4 ; move ul , ul / 3 )  
[7958] ( move ua , ul ; ( pen ul + ul ; move 4 , ul ) )  
[7959] ( move ul , ua / 4 ; pen ul ; move ua , ul / 3 )  
[7960] ( ( move ua , 4 ; move ul - ua , ul ) ; pen ul )  | ( move ua , 4 ; move ul - ua , ua + ul ; v0 = ua )  
[7961] ( move 2 / 3 , ua / 2 ; move 3 + ul , ul / 3 )  
[7962] ( move ua - 3 , 4 * 2 ; move 4 / 3 , ul + ul )  
[7963] ( move ua , ua ; move 0 , ua * ua ; move ua , ul )  
[7964] ( pen ul ; move 3 , ul / ua ; move ua , ul / 4 )  
[7965] ( move ul - ua , 0 ; move ul , ul ; move ul , ua )  | ( v0 = ua ; move ul - v0 , v0 ; move 2 , ul - ua )  
[7966] ( move 2 , ul ; move ul - ua , ul ; move ua , ua )  
[7967] ( move ul , ul ; move ua , ua - ul ; move ua , 2 )  
[7968] ( move ua , ul ; move ul , 2 ; move ua + ul , ul )  | ( ( move ua , ul ; move ul , 2 ) ; move ua + ul , ul )  
[7969] ( move ul , ua ; move ua , ua + ul ; move 3 , ul )  
[7970] ( move ul , ua ; move ua , 2 ; move ul , ul + ul )  
[7971] ( move ua , ua - ul ; move 2 , ul ; move ul , ul )  
[7972] ( move ua , ua ; move ul , ul ; move ua - 3 , ul )  
[7973] ( move ul , ul ; move ul , ua + ul ; move 2 , ul )  | ( move ul , ul ; move ul , ul ; move ul + ul , ul )  
[7974] ( move ul + ul , 2 ; move ul , ul ; move ua , ul )  
[7975] ( move ua , 3 ; move ua , ul + ul ; move ul , ul )  
[7976] ( move ul , ua ; move ul , 3 + ul ; move ua , ul )  
[7977] ( move ua , ul ; move 2 , ul + ul ; move ul , ul )  
[7978] ( move ul , ul ; move ua , ul ; move 3 , ua + ul )  | ( ( move ul , ul ; move ua , ul ; move 3 , ul ) ; pen 2 - ua )  
[7979] ( move ul - ua , 2 ; move ua , ul ; move ul , ul )  
[7980] ( move ul + ul , ul ; move ua , ul ; move ul , 2 )  
[7981] ( move ul , ua ; move ul , ul + ul ; move 2 , ul )  
[7982] ( move ua , ul - ua ; move ul , ul ; move ul , 2 )  | ( ( move ua , ul ; pen ul ) ; move ul , ul ; move ul , 3 - ul )  
[7983] ( move 2 , ua ; move ul - ua , ul ; move ul , ul )  
[7984] ( move ua , ua + ul ; move 3 , ul ; move ul , ul )  
[7985] ( move ua , 4 + ul ; move ul , ul ; move ua , ul )  
[7986] ( move ul , ul ; move ul , 4 ; move ua , ua + ul )  
[7987] ( move ua , ul / ua ; move ul , ua ; move ua , 3 )  
[7988] ( move ul , ul ; move ul , 2 ; move ua - ul , ul )  
[7989] ( move ua , ul ; move ul , ul ; move ul - 3 , ua )  
[7990] ( move ul , ua ; move ul , ua * ua ; move 3 , ul )  
[7991] ( move ul , ul ; move ul , ul ; move ua , 3 + ul )  
[7992] ( move 3 - ua , ul ; move ua , ul ; move ul , ul )  
[7993] ( move ul , ua ; move ul , ul ; move 3 , ul + ul )  
[7994] ( move ua , 2 / ua ; move ul , ul ; move ua , ul )  
[7995] ( move ua - ul , ua ; move ua , 4 ; move ul , ul )  
[7996] ( move ul , ul ; move 2 , ul ; move ul + ul , ul )  
[7997] ( move ul , ua ; move ul , ul - 3 ; move ua , ul )  
[7998] ( move ua , ul ; move ua , 4 ; move ul - ua , ul )  
[7999] ( move ul , ul ; move ua , ul ; move ua + ul , 4 )  
[8000] ( move ul , ul ; move 4 , ua + ul ; move ul , ul )  
[8001] ( move ua , ul ; move ul , ul / ua ; move 2 , ul )  
[8002] ( move ul , 4 ; move ua , ul ; move ul , ua * ua )  
[8003] ( ( pen ua ; move 3 , 0 ; pen 0 ) ; move ua , 2 )  
[8004] ( move ul , ul ; move ua , 2 / ua ; move ul , ul )  
[8005] ( move ua , ua - 4 ; move ul , ul ; move ul , ul )  
[8006] ( move ul , ua * ua ; move ul , ul ; move 3 , ul )  
[8007] ( move 0 - 2 , ua + 2 ; move ua + ul , ua + 2 )  | ( move 0 - ul , 2 ; move 2 - 3 , 0 ; move ua + ul , 2 )  
[8008] ( move ul - ua , ua ; move ul , ul ; move 4 , ul )  
[8009] ( move 4 , ua ; move ul , ul ; move ua - ul , ul )  
[8010] ( move 4 , ua ; move ua , ul ; move ul , ul / ua )  
[8011] ( move ua , ul ; move 4 / ua , ul ; move ua , ul )  
[8012] ( move ul , ua ; move ua , 4 ; move ul / ua , ul )  
[8013] ( move ul , ua ; move ul , ul ; move 4 , ul / ua )  
[8014] ( move ul / ua , ul ; move ul , ul ; move 3 , ul )  
[8015] ( move ul , ua / 4 ; move ul , ul ; move ua , ul )  
[8016] ( ( pen 3 ; move 3 , ua ) ; pen 0 ; move ul , 0 )  
[8017] ( ( pen 0 ; move 3 , ul ; pen 2 ) ; move 2 , ua )  
[8018] ( v0 = 0 - ua ; move v0 - ul , v0 * ua )  | ( move 0 , 3 ; move ul , 3 / 2 ; move 4 + 2 , ua )  
[8019] ( move ul , ul ; move 4 , ul ; move ul , ul / ua )  
[8020] ( ( pen 2 ; move 3 , 0 ) ; pen ua ; move 4 , ua )  | ( move 3 , ua * 3 ; ( pen ua + ul ; move 4 , 0 ) )  
[8021] ( ( move ua , ul ; move ul , ul ) ; move ul , ul )  | ( move ua , ul ; ( move ul , ul - ua ; move ul , ul ; pen ua ) )  
[8022] ( move 2 , 4 ; ( pen ul ; pen 0 ; move ua , 2 ) )  
[8023] ( move ul , ul ; ( move ul , ul ; move ua , ul ) )  | ( ( move 2 - ul , 2 - ul ; move ul , ul ) ; move ua , ul )  
[8024] ( move 3 + ul , 3 ; move 0 , 2 ; move 0 - 2 , 0 )  
[8025] ( move ua , 3 ; v0 = 2 ; move v0 - ua , ul )  | ( v0 = 4 ; pen ul ; ( move ua , 3 ; move 2 - ua , ul ) )  
[8026] ( move 2 + 2 , 2 ; move 0 , 0 ; move ua + 2 , 4 )  
[8027] ( move ua + ul , ua ; pen ua ; move 2 , ua - ul )  
[8028] ( move ul + ul , 0 ; pen ul + ul ; move ua , ul )  | ( ( move 2 , ua ; pen 2 ; move ua , ul ) ; v0 = 3 )  | ( ( pen 0 ; pen 2 ) ; ( move 2 , 0 ; move ua , 2 - ul ) )  
[8029] ( move ua + ul , 0 - ul ; pen ua ; move ul , ul )  
[8030] ( move 4 + 2 , 0 - 3 ; move ua + ul , ul - ua )  
[8031] ( move ua + ul , 2 + ul ; pen ua ; move ul , ua )  
[8032] ( move ua + ul , ua * ua ; move ul , ul ; pen 0 )  
[8033] ( pen ua ; move ua + ul , ua ; move 2 , ua * ua )  
[8034] ( v0 = ua + 4 ; move ua + ul , v0 * v0 )  
[8035] ( v0 = ua - 4 ; move ua , v0 ; move 2 , ul )  
[8036] ( move ua - ul , 0 ; pen ua ; move ul , ul - ua )  
[8037] ( pen ua * ua ; move ua , ua ; move ul , 0 - ul )  
[8038] ( move ua + ul , ua ; pen 2 ; move ul + ul , ul )  
[8039] ( pen ua * ua ; move ua + ul , ul ; move ua , 2 )  
[8040] ( move ua + 2 , 3 + ul ; move 4 - ua , 2 + ul )  
[8041] ( move ua , ul ; v0 = ul - 4 ; move v0 , 2 )  | ( ( move ua , ul ; move ul - 4 , 2 ) ; v0 = ua )  
[8042] ( move ua , ua + ul ; pen 0 ; move ul , ul / ua )  
[8043] ( move ua + ul , 2 + 2 ; move 4 - ua , ul - 2 )  
[8044] ( move 4 , ua ; v0 = ua ; move 3 - v0 , ul )  
[8045] ( pen ua + ul ; move ua , ua ; move ua + ul , 4 )  
[8046] ( v0 = 4 ; move ua , 3 ; move ul , ua - v0 )  
[8047] ( pen ua ; move ul , 3 - ua ; move ua , ua - ul )  
[8048] ( v0 = ul / ua ; move 3 , 2 ; move ul , v0 )  | ( move 3 , 2 ; ( move ul , ul / ua ; pen 2 ; pen 4 ) )  
[8049] ( move ua + ul , ua - ul ; pen 3 ; move ul , ua )  
[8050] ( pen ua ; move ua + ul , ul ; move ua + ul , 4 )  
[8051] ( move ul , ul + ul ; pen 0 ; move ua , ul / ua )  
[8052] ( move ul , ua ; pen 2 ; move ul - ua , ul + ul )  
[8053] ( move ua , ua / 2 ; pen ua ; move ul , ua + ul )  | ( pen ua ; move ul , ul ; ( pen ul ; move ua , ul - 2 ) )  
[8054] ( pen ul + ul ; move ua , 3 ; move ua , ua - ul )  
[8055] ( v0 = 2 ; move ul , 3 / v0 ; move ua , ul )  
[8056] ( pen ua ; move ua , 3 + ul ; move ul , ua * ua )  
[8057] ( move 3 * 2 , 2 / ua ; move ua + ul , ua + 2 )  
[8058] ( move 2 , ul ; v0 = 3 ; move v0 , ul / ua )  | ( move 2 , ul ; ( move 3 , ul / ua ; move 0 , 0 ) )  
[8059] ( move 2 + ul , ua + 3 ; move ua / 2 , ul - 2 )  
[8060] ( move 3 + 2 , ul - 2 ; move ua / 3 , ua + ul )  
[8061] ( move ua , ul ; pen 3 ; move ua - ul , ua - ul )  
[8062] ( move 3 - ul , 3 + 3 ; move 2 + ul , ua - ul )  
[8063] ( move ua , ua ; pen ul ; move ul - ua , 4 + ul )  
[8064] ( move 4 + ul , ul / ua ; move 3 + ul , 0 - 2 )  
[8065] ( pen 3 ; move ul , ul - ua ; move ua + ul , ul )  
[8066] ( pen ua / 2 ; move ua + ul , ua ; move ul , ul )  
[8067] ( pen ua - ul ; move ua , 4 + ul ; move ua , ul )  
[8068] ( pen ua ; move ua , ul + ul ; move ua - ul , 4 )  
[8069] ( move ua , ua + ul ; pen ua - ul ; move ul , 4 )  
[8070] ( move ul , ul ; pen 2 ; move ua - ul , ua * ua )  
[8071] ( move ua + ul , ua + ul ; move 3 / 2 , 3 - 2 )  
[8072] ( move ua , ul / ua ; v0 = 3 ; move v0 , 4 )  
[8073] ( pen ua + ul ; move 4 , ul ; move ua , ul + ul )  
[8074] ( ( move 2 - 4 , 0 ; pen 2 ) ; move 4 / 2 , 3 )  
[8075] ( pen ua + ul ; move ua - ul , ua ; move 4 , ul )  
[8076] ( move 2 * 2 , ul + ul ; move ua + 3 , ua - 4 )  
[8077] ( pen ua ; move ua + ul , ua ; move ua , ua / 4 )  
[8078] ( move ua + ul , ul - 2 ; move 0 - 3 , ua / 4 )  
[8079] ( move 4 + 3 , 4 + 2 ; move ua + ul , ua - ul )  
[8080] ( move ua , ul / 2 ; pen ua ; move ul , ua * ua )  
[8081] ( move ul , ul - 4 ; v0 = 4 ; move v0 , ul )  
[8082] ( move ul - 3 , ul ; pen ul + ul ; move ua , ul )  
[8083] ( move ua , ul ; pen ul - ua ; move ul , 2 / ua )  
[8084] ( pen ul ; move ul , ua * ua ; move 3 , ua - ul )  
[8085] ( pen ua + ul ; move 4 , ul ; move ul - ua , ul )  
[8086] ( move ua , ua + 3 ; pen ul / ua ; move ul , ul )  | ( move ua , 2 + ul ; pen ul - 2 ; move ul , ua + ul )  
[8087] ( pen ua - ul ; move ua - ul , ua ; move ul , 4 )  | ( ( ( pen ua ; pen ua ) ; move ua - ul , ua ) ; move ul , 4 )  
[8088] ( move ua , ul ; pen ua ; move 3 / ua , ua - ul )  
[8089] ( move ul - ua , 4 + ul ; move 3 - ua , 3 - 2 )  
[8090] ( pen 4 ; move ua , ul ; move ul - ua , ua * ua )  
[8091] ( pen 3 ; ( move ua , 4 ; move ul , 4 ) ; pen 3 )  
[8092] ( move ul - 4 , ua + ul ; move 3 + ul , 3 * 2 )  | ( move 0 , ul - 2 ; move ul - 4 , 2 ; move 4 , 4 + 2 )  
[8093] ( pen ua * 3 ; move ul - ua , ul ; move ul , ul )  | ( pen ua + ua ; move ul - ua , ul ; move ul , ul )  
[8094] ( move ul , ul ; pen ul / ua ; move ua - 2 , ul )  
[8095] ( move ua , 3 / ua ; pen ua * ua ; move ul , ul )  
[8096] ( ( pen 3 ; move ua , ul ; move 4 , 4 ) ; pen 3 )  
[8097] ( pen ua ; move ul , ul / ua ; move 3 , ul + ul )  
[8098] ( v0 = 3 ; move v0 , 4 ; move v0 + 2 , 3 )  | ( move 3 , 4 ; ( move ua - ul , 3 ; v0 = ul ) )  
[8099] ( move ua / 3 , 4 + ul ; move 3 - ua , 2 - ua )  
[8100] ( move 0 - 4 , 0 ; ( move 0 , 2 ; move ua , 3 ) )  
[8101] ( move 4 * 2 , 0 ; v0 = 4 ; move v0 , v0 )  
[8102] ( v0 = 3 ; move 3 , 3 ; move v0 , 3 + v0 )  
[8103] ( move 4 + 2 , 4 / ua ; move ul - 2 , ua - ul )  
[8104] ( pen ul ; move ul - ua , ua ; move 4 , ul / ua )  
[8105] ( move ul / 3 , ul ; move ua , ua * ua ; pen ul )  | ( move ul / 4 , ul ; v0 = ua ; move ua , v0 * v0 )  
[8106] ( move ul - ua , ul - 2 ; move ul - 4 , 4 + 3 )  
[8107] ( move 4 , 2 ; v0 = 3 ; move v0 , v0 * 2 )  
[8108] ( move ul - ua , ua / 4 ; move ua / 4 , 0 - 2 )  
[8109] ( move ul + ul , 2 / 4 ; move ua + ul , 2 - 4 )  
[8110] ( move ua , ul ; pen ua - ul ; move ul / 3 , ul )  
[8111] ( move ul / 3 , ul / 2 ; move 2 + 2 , ua - ul )  
[8112] ( move 0 , ul ; move 4 - 2 , 2 / 3 ; move 4 , 0 )  
[8113] ( ( move ua , ua * ua ; pen ua ) ; move ul , ul )  | ( move ua , ua * ua ; ( pen 0 ; pen ua ) ; move ul , ul )  
[8114] ( move 4 + ul , ua / 3 ; move 3 + ul , ul - 3 )  
[8115] ( pen ul ; ( pen 3 ; move 4 , 4 ; move ul , 4 ) )  
[8116] ( pen ua ; ( move ua , ul ; move ul + ul , ul ) )  
[8117] ( move ua + ul , ul / 4 ; pen ul ; move ul , ul )  
[8118] ( move ul - 4 , 4 + ul ; move 4 - 2 , ul + ul )  
[8119] ( move ul , 4 ; pen ul / ua ; move ua , ul / ua )  
[8120] ( move ul , ul / ua ; pen ua ; move ua , ul / 4 )  
[8121] ( move 3 + 2 , 0 ; move 4 , 2 - 4 ; move ul , 4 )  
[8122] ( move 4 * 2 , ua / 4 ; move 2 - ul , ul + ul )  
[8123] ( move ul - ua , 4 + ul ; move ua / 2 , 2 / 4 )  
[8124] ( move 4 + ul , 2 / 4 ; move ua / 2 , ua * ua )  
[8125] ( move 4 , 4 * 4 ; move 4 , ua - 2 ; move 0 , 0 )  
[8126] ( move 2 , 3 * 3 ; move 3 , 3 * 3 ; move ua , 0 )  
[8127] ( move 3 , 4 + 2 ; move ua , 3 * 2 ; v0 = 0 )  
[8128] ( move 0 - 2 , ul ; move 4 , 2 / 4 ; move 2 , 3 )  
[8129] ( move ua , 4 + 2 ; move 4 , 3 ; v0 = 0 - 3 )  
[8130] ( move 4 , 2 / ua ; move 0 , 3 ; move 3 , 4 * 2 )  
[8131] ( move 4 - ua , 0 ; move 3 , 4 * 2 ; v0 = 3 )  
[8132] ( move 3 , 3 ; move 3 , 3 * 2 ; move 3 , 4 - ua )  
[8133] ( move 4 , 2 / 4 ; move 3 , ua - 4 ; move 0 , 3 )  
[8134] ( move 4 , 0 - ul ; move 3 + 3 , 4 ; v0 = 3 )  
[8135] ( move 4 , 0 ; move 4 + 4 , ua - 2 ; v0 = 4 )  
[8136] ( ( move 2 , 4 ; move ua , 3 + 2 ) ; v0 = 0 )  | ( move 2 , 4 ; ( pen ul ; move ua , 4 + ul ) ; pen ul )  
[8137] ( move ul - ua , 4 * 4 ; move 4 - ul , ua / 4 )  
[8138] ( move 3 , 4 / ua ; move 2 - 4 , 3 ; v0 = 0 )  
[8139] ( move ul , 2 ; move 4 , 4 * 2 ; move 2 , 4 + 4 )  
[8140] ( move 4 , 2 ; ( move ua , 2 ; move 0 - 4 , 4 ) )  
[8141] ( move ua , ua ; move ul , ul ; move ul , ua * ua )  
[8142] ( ( move 4 + 4 , ul ; move 2 , 2 ) ; v0 = 0 )  
[8143] ( ( move 2 , 0 ; move 3 , 4 * 2 ) ; v0 = ua )  
[8144] ( move 3 * 2 , ua ; move 3 , 3 / 4 ; move 2 , 4 )  
[8145] ( ( move 2 , 0 ; move 2 , 2 / 4 ) ; v0 = ua )  | ( move 2 , ua ; v0 = ul ; move v0 + ul , v0 / 2 )  | ( move ul , 0 ; ( move ul , ua + ua ; move 2 , ul / 2 ) )  
[8146] ( ( move 0 , 3 ; move 3 + 3 , 4 ) ; move ul , 4 )  
[8147] ( move ua , ul ; move ul , ul ; move ul - ua , ua )  
[8148] ( move ua + ul , ul ; move ul , ul ; move ul , ul )  
[8149] ( move ul , ul ; move ua , ul + ul ; move ul , ul )  | ( move ul , ul ; ( move ua , 2 ; move ul , ul ; v0 = 3 ) )  
[8150] ( move ul , ua ; move ul + ul , ul ; move ul , ul )  
[8151] ( move 4 , 3 * 3 ; move ua , 4 / 3 ; v0 = 0 )  
[8152] ( move 2 , 0 ; ( pen 0 ; move 0 - 2 , ua - 4 ) )  
[8153] ( move ul , ul ; move ul , ul ; move ua + ul , ul )  
[8154] ( ( move 2 , 4 + 4 ; move 3 , ul ) ; v0 = 0 )  
[8155] ( move ul , ua ; move ul , ul ; move ua - ul , ul )  | ( move ul , ua ; ( move ul , ul ; move ua - ul , ul ) )  
[8156] ( move 0 , 3 ; pen 2 / ua ; move 2 * 2 , 3 + 2 )  
[8157] ( move 3 , 2 ; ( move 4 , ul / 2 ; v0 = 0 ) )  
[8158] ( pen 2 + 2 ; move 3 + 3 , ua + 2 ; move 3 , 4 )  
[8159] ( move 3 , 0 ; ( move ua / 4 , 2 ; v0 = 4 ) )  
[8160] ( move 0 - 3 , 0 - 4 ; move 4 * 2 , ul ; pen 3 )  
[8161] ( move ua + 2 , 2 + ul ; move 0 - ua , ul - ua )  
[8162] ( ( move 0 , 4 ; move 4 , 2 / 4 ) ; move 4 , ul )  
[8163] ( move 4 + 3 , ul ; ( move 4 , 3 ; move 3 , 4 ) )  
[8164] ( move 3 , ua ; ( pen ul ; pen 0 ) ; move ua , 2 )  | ( ( move 3 , ua ; pen 0 ) ; move 0 , ul ; move ua , ul )  
[8165] ( ( move 3 , 4 + 2 ; move ua , 0 - 2 ) ; pen 3 )  
[8166] ( move ua , 2 ; ( pen ua ; pen 3 ) ; move 2 , ua )  
[8167] ( move ua + ul , 2 + ul ; move 2 + 2 , ua - ul )  
[8168] ( ( pen ua ; move 0 , 2 ) ; pen ul ; move ua , 4 )  
[8169] ( pen ul ; move 2 , 0 ; ( pen ua ; move 4 , ua ) )  | ( move 2 , 0 ; ( ( pen ua ; move 4 , 0 ) ; pen ua ) )  
[8170] ( pen 4 ; ( move ua , ua ; pen 0 ; move ua , 3 ) )  
[8171] ( pen 4 ; ( move ul , 2 ; pen ul ) ; move ua , 0 )  
[8172] ( v0 = 3 + 2 ; move v0 , 0 ; move ua , v0 )  
[8173] ( move 2 , ua ; pen ul ; ( pen ua ; move 2 , 4 ) )  
[8174] ( move 3 + 2 , ul - ua ; move ua - ul , ua + 3 )  | ( move 4 , ul ; ( move 3 + 2 , 3 ; move ul , 2 ) )  
[8175] ( move ua + ul , ul - ua ; pen ua ; move ul , ul )  
[8176] ( move ua - 2 , 0 ; v0 = 4 ; move v0 , v0 )  
[8177] ( move 3 + 2 , ua - ul ; move ul + ul , 3 + ul )  
[8178] ( move 2 + ul , 0 - 2 ; move 0 , ua ; move 3 , 4 )  | ( move ul , ul - 3 ; move 3 - ul , ua + ua ; move 3 , 4 )  
[8179] ( move 3 * 2 , ua ; move 0 - 2 , ul ; move 0 , 2 )  
[8180] ( move 0 , 2 + ul ; move 2 , 4 ; move 2 , ua + 2 )  
[8181] ( move 2 , ua - 4 ; ( move 4 , 2 ; pen 0 - 4 ) )  
[8182] ( pen 2 ; ( move 4 , 3 ; pen ua ; move ul , ua ) )  
[8183] ( ( move 2 , ul ; pen 3 * 3 ) ; move 0 - 2 , 4 )  
[8184] ( move ul - ua , ul ; pen ua ; move ul , ua * ua )  
[8185] ( move ua - ul , 4 - ul ; move ua + 3 , 2 + ul )  
[8186] ( move 3 + ul , 4 + ul ; move 2 - ua , ul + ul )  
[8187] ( move 0 - ul , 4 + ul ; move 4 + ul , ua * ua )  
[8188] ( move ul , ua * ua ; pen ul ; move ua , ua - ul )  
[8189] ( ( move ua , 4 ; pen 2 ) ; pen ua ; move 4 , ul )  | ( ( move ua , 4 ; pen ua ; move 4 , ul ) ; v0 = 0 )  
[8190] ( pen ul ; move ul - ua , ua ; move ul - ua , ul )  | ( v0 = ul - ua ; move v0 , ua ; move v0 , ul )  | ( v0 = ul - ua ; move v0 , ua ; move v0 , v0 )  
[8191] ( move ul / 2 , 3 ; move ua , 0 ; move 2 , 0 - 2 )  
[8192] ( ( move 3 , 4 + 4 ; pen 3 + ul ) ; move 2 , 2 )  
[8193] ( move 3 + 2 , ua * ua ; move ua / 2 , ua - ul )  
[8194] ( ( pen 3 ; move ua , 4 ; pen ua ) ; move ul , 3 )  
[8195] ( pen ul + ul ; move ua , ul ; move ul , ul + ul )  
[8196] ( v0 = 2 ; move v0 , v0 ; move 3 , ua - 3 )  
[8197] ( move 0 , 3 * 2 ; move 2 , 2 ; move ua , 3 + ul )  
[8198] ( v0 = 3 ; move v0 , v0 ; move 2 , ua - 3 )  | ( move ua / 2 , 3 ; move 2 , ua - 3 ; pen ua / 2 )  
[8199] ( move 4 , 4 * 3 ; move 4 + ul , 2 * 2 ; pen 4 )  
[8200] ( move 3 , 3 ; move 0 - 2 , 0 ; move 4 - ua , ul )  
[8201] ( pen 4 + 3 ; ( move ul - 3 , 4 ; move 2 , 2 ) )  
[8202] ( move ul - ua , ua + 3 ; move ua + 2 , ul / 4 )  
[8203] ( move ua - ul , 4 + 2 ; move 3 - ul , ua - ul )  
[8204] ( v0 = 2 - ua ; move v0 , 3 ; move v0 , 4 )  
[8205] ( move 4 + 2 , 4 - ua ; move 0 , ul ; move 4 , 0 )  
[8206] ( move ua + 2 , ua * 3 ; move ul + ul , ua / 4 )  
[8207] ( move 2 - 4 , ua ; move 2 , 4 + 2 ; move 0 , ul )  | ( move 4 - ua , ua * 4 ; move 2 , 3 * 2 ; move 0 , ua )  
[8208] ( v0 = 3 ; move v0 , 2 ; move ua , 3 * v0 )  
[8209] ( move 2 , 0 ; move ua - 4 , 2 * 2 ; move ua , 3 )  
[8210] ( move 0 - 3 , 0 ; move ua , 2 / ua ; move 3 , 4 )  
[8211] ( move 2 , ul + ul ; move 0 - 2 , 3 ; move 3 , 3 )  
[8212] ( move ua / 3 , ua + 3 ; move 4 + ul , ua * ua )  
[8213] ( move 0 - 2 , 2 ; move 4 , 2 ; move ul , ua + 4 )  
[8214] ( move 2 - ul , ul / ua ; move ua + ul , 4 - 3 )  | ( move ul , ul / ua ; ( move ua , ul ; move ul , ua ) )  | ( move ul , ul / ua ; ( move ul , ul ; move ua , ua ) )  
[8215] ( move 4 , 4 ; move 0 - ul , ul - 2 ; move 3 , 0 )  
[8216] ( move 3 , ua - 2 ; move 0 , 3 * 3 ; move ua , 3 )  
[8217] ( move ua , 2 * 2 ; move ul , 0 ; move 4 * 2 , 2 )  
[8218] ( move 2 , ul ; move ua - 3 , 3 + 2 ; move 2 , 3 )  
[8219] ( move ul - 3 , ua - ul ; move ua + 2 , ul / 4 )  
[8220] ( v0 = 4 ; move 2 , 4 + ul ; move v0 , v0 )  
[8221] ( v0 = 4 + 4 ; move ua , v0 ; move v0 , 3 )  
[8222] ( move ua + ul , ua + ul ; move 3 - ul , 4 / 3 )  
[8223] ( ( move 4 , 2 ; pen 2 / ua ) ; move 2 , 4 * 3 )  
[8224] ( move 4 + ul , 0 ; move 4 + 3 , 4 ; move 0 , ul )  
[8225] ( v0 = 4 ; move ua , 4 ; move v0 + v0 , 3 )  | ( move ul / 2 , ul ; move ua , 3 ; move 4 * 2 , 3 )  
[8226] ( move ua , ua ; move 3 , 3 - 4 ; move 0 - 3 , 2 )  
[8227] ( v0 = 4 + 3 ; move ul , 3 ; move v0 , v0 )  
[8228] ( move 0 , 3 ; move 3 , ul ; move 4 + 2 , 4 + ul )  
[8229] ( move ua - 2 , 3 ; move 3 , 2 + ul ; move 2 , 4 )  
[8230] ( move 0 - 4 , 4 ; move ua , 3 / 2 ; move 0 , ul )  
[8231] ( v0 = 4 ; move 3 , v0 * v0 ; move 2 , ul )  
[8232] ( move ul - 3 , 2 / 4 ; move ul + ul , ua * ua )  
[8233] ( v0 = ua ; move 4 , v0 / 2 ; move v0 , 3 )  | ( move 4 + ul , ua / 2 ; ( move ua , 3 ; pen ul ) )  
[8234] ( move 2 + ul , 0 ; move ul , 2 - 4 ; move 3 , 4 )  
[8235] ( move 3 - ua , 4 / 2 ; move ua + ul , ul / ua )  
[8236] ( move ul , 3 ; move 3 - ul , 3 + 2 ; move 2 , 2 )  
[8237] ( move ua , ua ; move 2 , 4 + 2 ; move 4 , 2 * 2 )  
[8238] ( v0 = 4 ; move 3 , 4 ; move v0 , ua - v0 )  | ( move 3 , ua + 4 ; move 3 + ul , 0 - 4 ; v0 = 3 )  
[8239] ( move ul , 0 ; move 3 * 3 , 0 - ul ; v0 = 2 )  
[8240] ( move ua - ul , 2 ; move 3 , 0 ; move 4 , 4 + 4 )  
[8241] ( move ul , 2 ; move 3 + 2 , ul ; move 2 , 4 * 2 )  
[8242] ( move 4 , ua ; move ua / 3 , 0 ; move 0 - 4 , 4 )  
[8243] ( ( move 2 , 0 ; move 2 + ul , 4 ) ; move ua , 2 )  
[8244] ( move 4 , 2 ; ( move ua , 2 ; move 2 + ul , 0 ) )  | ( move 4 , ua + 2 ; move 2 + ul , 3 - ul ; move ua , ua )  
[8245] ( move 3 , 3 ; move 3 , ua + 2 ; move 4 , ul - 2 )  
[8246] ( move 4 - ua , 4 ; v0 = 4 ; move v0 , v0 )  | ( v0 = 4 ; move v0 - ua , v0 ; move 4 , v0 )  
[8247] ( move 0 , ua ; move 4 + ul , 2 / 4 ; move 3 , 2 )  
[8248] ( move ul , ul ; move 0 - 2 , 2 * 2 ; move 4 , 4 )  
[8249] ( move 3 , 0 ; move ul , ul ; move 4 + 3 , 3 * 2 )  
[8250] ( move 4 , 3 ; move 0 - 4 , ul ; v0 = 0 - ua )  
[8251] ( v0 = 3 ; move v0 , v0 ; move 3 , ul / 3 )  | ( v0 = 3 ; move 3 , v0 ; move v0 , ul / v0 )  | ( move 4 - ul , 3 ; v0 = ua - 3 ; move 3 , ul / 3 )  
[8252] ( move ua / 3 , 3 ; move ua , 0 ; move 4 * 2 , 2 )  
[8253] ( move 2 - ua , ul / ua ; move 3 / 2 , ul / ua )  | ( move ul + ul , 4 * 4 ; move 4 , 3 ; pen ua + 4 )  
[8254] ( move 3 , 3 ; move ul , 4 + 3 ; move 3 + ul , 2 )  
[8255] ( move 4 , 3 ; v0 = ua ; move v0 , v0 / 4 )  
[8256] ( ( move 3 , 2 ; move 4 - ua , 2 ) ; move 0 , ua )  
[8257] ( move 2 , ul ; move 3 * 2 , ua - 2 ; move 4 , 3 )  
[8258] ( ( move 4 + 3 , ua ; move 0 , ua ) ; move 3 , 2 )  
[8259] ( move 3 * 2 , ul - ua ; move 2 , 2 ; v0 = 2 )  | ( move ul , ul ; move 4 + ul , ua * 4 ; move 2 , 2 )  | ( ( move 3 * 2 , ul ; move 2 , 2 ; pen ul ) ; v0 = ul )  
[8260] ( move 2 , 3 ; move ul / 4 , 3 ; move ua , 2 + 2 )  
[8261] ( move 2 , 4 * 2 ; move 3 + ul , 2 ; move 3 , ul )  
[8262] ( move 3 + ul , 4 * 2 ; move 3 , ul ; move 4 , 0 )  
[8263] ( move ua + 2 , 3 / 4 ; move ua , 2 ; move 4 , 2 )  
[8264] ( move 4 , 4 * 3 ; v0 = ul ; move v0 , v0 )  
[8265] ( move 4 , ua ; move 0 , 4 + 2 ; move ua / 3 , 4 )  
[8266] ( move ul , 3 ; move ua , 4 + 3 ; move 2 , 3 * 2 )  
[8267] ( move 3 * 2 , 2 ; move ua / 3 , 0 ; move 4 , ul )  | ( move 4 * 2 , 2 ; move ul , ul ; move 3 , ua + ua )  
[8268] ( move 2 , 4 - ul ; move 0 , 4 ; move ua - 4 , 3 )  
[8269] ( move 2 , 2 ; move ua , 4 + 3 ; move 4 - 3 , ul )  
[8270] ( move 2 , 4 ; move 3 , ua + ul ; move 3 , 3 - 4 )  
[8271] ( move 4 * 2 , 0 - ul ; move 4 , 2 ; v0 = ua )  
[8272] ( move 2 , ul ; move 4 , 3 ; move 2 - ua , 3 / 2 )  
[8273] ( move 2 / 3 , 3 ; move 0 - ua , 4 ; v0 = ua )  
[8274] ( move ua - 2 , 2 ; ( move 3 , 2 ; move 2 , ul ) )  
[8275] ( move ul , 2 ; move 4 , 0 ; move 4 - ul , 4 * 2 )  
[8276] ( move 4 , 2 ; move 4 / ua , 2 ; move ul - 2 , 2 )  
[8277] ( ( move 4 , 2 ; move 0 , 4 ) ; move 2 - ua , ua )  
[8278] ( move 2 , 2 ; move ua , 4 ; move 4 + ul , 4 * 2 )  
[8279] ( move ua + ul , 0 ; ( move 3 , 2 ; v0 = 2 ) )  
[8280] ( move ul , 4 - 2 ; move 3 * 2 , 3 ; move 2 , ul )  | ( move 4 + 2 , 4 + ul ; ( pen 3 ; pen ul ; move 2 , ul ) )  
[8281] ( move 3 , ua + 4 ; move 3 - ua , 3 ; move 4 , 3 )  
[8282] ( move ul / 3 , 4 + ul ; move ua + ul , ul / 4 )  
[8283] ( move 3 , ul / 4 ; v0 = 4 ; move v0 , v0 )  
[8284] ( move ul - 2 , ul ; move 3 , 2 ; move 4 , 4 + 3 )  
[8285] ( move 3 + 2 , ul ; move ua , 4 * 4 ; v0 = 0 )  
[8286] ( move 3 / 4 , ul ; move ua , 2 ; move 3 + 2 , 4 )  
[8287] ( move 4 , ua * 2 ; move ul - 3 , 3 ; move 2 , 4 )  
[8288] ( move 4 , 3 / 4 ; move ua + ul , 0 ; move 3 , 4 )  
[8289] ( move ul , 4 + 4 ; move 2 , 4 + 3 ; move 4 , ua )  
[8290] ( ( move 4 , 2 ; move 2 - ua , 0 ) ; move ul , 4 )  
[8291] ( move ul , 3 / 4 ; move 2 , ua + 4 ; move 3 , 2 )  
[8292] ( move 4 , 4 ; move 2 - 4 , 3 + ul ; move ul , 3 )  | ( move 3 + ul , 4 ; move ul - 4 , 3 + ul ; move 0 , ul )  
[8293] ( move 4 * 2 , 4 ; ( move ua , 2 ; move 0 , ul ) )  
[8294] ( move 3 , 4 ; ( move 2 + ul , ul ; move 4 , 0 ) )  
[8295] ( move 3 , ua ; ( move 2 , 3 / 2 ; move ua , 2 ) )  
[8296] ( move ul , 2 ; move 3 , ua / 3 ; move 2 - 4 , 4 )  
[8297] ( move 2 , 3 ; ( move 3 , ul ; move 3 , 2 + ul ) )  
[8298] ( ( move 0 - ua , 3 ; move ua , 2 ) ; v0 = 4 )  
[8299] ( move 2 , 2 ; ( move ua , 4 ; move ua / 4 , 0 ) )  
[8300] ( move 3 , 0 ; ( move 2 , ul - 4 ; move ua , 4 ) )  
[8301] ( move 4 + 3 , 4 ; move 4 , 0 - ul ; v0 = ul )  
[8302] ( move 4 + 3 , ul ; pen 0 ; move ua + 2 , 2 + 2 )  
[8303] ( move 4 , 4 * 3 ; move ua - 4 , ul ; move 2 , 2 )  
[8304] ( move 2 + ul , 2 ; ( move ua , 4 ; move 3 , 3 ) )  
[8305] ( move 3 * 2 , 4 ; move 4 / ua , 0 ; move 4 , ul )  
[8306] ( move 4 , 2 ; ( move 3 + 2 , ua ; move ua , 4 ) )  
[8307] ( move 4 , 4 - 2 ; move 3 , ua - 3 ; move 4 , ul )  
[8308] ( move ul , 0 ; ( move 3 , 3 ; move 4 + ul , 4 ) )  
[8309] ( move 2 , 2 ; ( move 4 , 4 + ul ; move ul , 2 ) )  
[8310] ( ( move 3 - 4 , 0 ; move 3 , ul ) ; move ua , 4 )  
[8311] ( move ul - 3 , 2 ; move 4 + 3 , ul ; v0 = 4 )  
[8312] ( move 3 , 2 / 4 ; move ul , ul ; move 4 + 3 , 3 )  
[8313] ( move 4 , ua + 2 ; move 2 , 4 / ua ; v0 = 4 )  
[8314] ( move ul , 3 / 4 ; move ul - 4 , 0 ; v0 = 2 )  
[8315] ( move 4 + 3 , ua ; move ul - 3 , 4 ; v0 = 3 )  
[8316] ( move 3 - 2 , 2 - ua ; pen 0 - 3 ; move ua , 2 )  
[8317] ( move 4 + 4 , 4 + ul ; move ua , 4 ; v0 = 3 )  
[8318] ( ( move ua , ul ; move 3 , 4 / 3 ) ; move 0 , 3 )  | ( move ua , ua + ul ; move ul , 4 / 3 ; move 2 , ua )  
[8319] ( ( move 2 , ua * ua ; move 3 , 2 ) ; v0 = 3 )  
[8320] ( move 3 + ul , 4 + 3 ; pen 0 ; move ua + 2 , 3 )  
[8321] ( move 4 / ua , 2 ; move 4 * 2 , ua ; move 4 , 4 )  
[8322] ( v0 = 4 + 3 ; pen 3 ; move ua , v0 + v0 )  
[8323] ( move 4 , 3 * 2 ; ( move 4 , ul ; move ul , 0 ) )  
[8324] ( move 3 * 3 , 2 ; ( move ul , 3 ; move 2 , ul ) )  
[8325] ( v0 = ul ; ( move 4 + 2 , ua ; move 3 , 2 ) )  
[8326] ( move 2 , 3 ; move 3 , ul - 2 ; v0 = ul / 4 )  | ( move ul / ua , 0 ; move 2 , 3 ; move 3 , ua - ul )  | ( move 2 , 4 - ul ; ( move 3 , ua - ul ; v0 = ul ) )  | ( move ul + ul , 2 + ul ; move 3 , ua - ul ; pen 4 - ul )  
[8327] ( ( move 0 , ua ; move ua , 4 * 4 ) ; move 3 , 4 )  
[8328] ( move ua , 2 / 3 ; move 4 - 2 , 4 ; v0 = ul )  
[8329] ( move 3 , ua / 2 ; ( move ul , 0 ; move 4 , 4 ) )  | ( move 0 , 3 ; move 4 , ul / ua ; move 4 , 3 + ul )  
[8330] ( move ua , ua / 4 ; move 4 / 2 , 4 ; v0 = 0 )  
[8331] ( move 2 , 0 ; pen ua * 3 ; move 0 - 2 , 4 / ua )  
[8332] ( move 3 , 3 / 4 ; move ul , 4 ; move 3 - ul , 3 )  
[8333] ( move 3 , 4 + 2 ; pen 0 ; move 4 + 2 , ul + ul )  
[8334] ( move 3 , 0 ; pen 4 + 2 ; move ua - 4 , ua + 3 )  
[8335] ( ( move 2 , 3 ; move ul / 2 , ul ) ; move 4 , 2 )  
[8336] ( ( move 4 , 3 ; move ul / 2 , 0 ) ; move 4 , ul )  
[8337] ( move ua - 2 , 0 ; ( pen 0 ; move ua + 3 , 4 ) )  
[8338] ( move ul , 3 ; move 4 / 3 , 4 ; move 4 * 2 , ul )  
[8339] ( ( move ua , 4 * 2 ; move 4 , 2 ) ; v0 = ua )  
[8340] ( pen 0 ; ( move ul , 0 ; pen ul ) ; move ua , ua )  
[8341] ( move 3 , ua ; move 4 / 2 , ul ; move 4 , 4 / 3 )  
[8342] ( move 3 , ul - 2 ; pen ua - 3 ; move 4 + 3 , 0 )  
[8343] ( pen 2 / 4 ; move 0 - ua , 0 ; move 3 , 2 / ua )  
[8344] ( move ua , 3 ; move 4 , ul - 3 ; v0 = 3 / 4 )  | ( move ua , 3 ; move 3 + ul , ul - 3 ; move ul , 3 )  
[8345] ( ( move ua , 4 ; move ul , 3 + 3 ) ; v0 = 3 )  | ( ( move ua , 4 ; move ul , 3 * 2 ) ; pen 2 + ul )  
[8346] ( move ua + ul , 2 + ul ; move 0 - ua , ua + ul )  
[8347] ( move 3 , 4 ; ( move 3 , 3 ; move ul - 4 , ul ) )  
[8348] ( pen 2 + ul ; ( move 4 , 0 ; move ua + 2 , 2 ) )  
[8349] ( move 2 , 4 + 2 ; move ua + ul , 4 ; pen 4 + 2 )  
[8350] ( pen 4 ; v0 = 4 + ul ; move v0 , 2 * v0 )  
[8351] ( ( move 4 , ul - 3 ; move 2 , ul ) ; move 4 , 4 )  
[8352] ( pen ua / 3 ; move 3 , 0 ; move 3 + 2 , 2 / ua )  
[8353] ( ( move 4 / 2 , ul ; move ua , 4 ) ; move 3 , 3 )  
[8354] ( ( move ua , 3 - 4 ; move ua , 3 ) ; v0 = 4 )  
[8355] ( move 3 , ua ; move 4 / 2 , ul ; move 4 , 4 / 4 )  
[8356] ( ( pen ua - 2 ; move 3 , 0 ) ; move 2 , 3 + ul )  
[8357] ( pen 4 ; move 2 , ua / 3 ; move 2 + 2 , ua + 4 )  
[8358] ( move 0 , ul ; ( pen 0 ; move ua + 3 , 4 * 2 ) )  
[8359] ( move 3 , ul ; ( move 4 / 3 , ul ; move 2 , 4 ) )  
[8360] ( ( pen 0 ; move 2 , ua ; pen ul ) ; move ua , ul )  
[8361] ( move 4 + ul , ua * 2 ; pen 4 * 3 ; move 3 , 0 )  
[8362] ( move 4 - ul , 2 ; pen 4 * 2 ; move 2 - ua , 2 )  
[8363] ( ( move ua + 2 , 3 ; pen 4 + ul ) ; move 0 , 3 )  | ( move ua + 2 , 2 + ul ; ( pen ua ; move 0 , 2 ) )  | ( ( move 4 * 2 , 3 ; pen ua ; move 0 , 0 ) ; pen ul - 2 )  
[8364] ( move 2 - ua , ua / 3 ; move 3 , 4 ; pen 4 + 2 )  
[8365] ( move 3 * 2 , 3 ; move ul - 4 , ua - 3 ; pen 2 )  
[8366] ( pen 2 ; move ul , ua / 3 ; move 4 + 3 , 4 + 2 )  
[8367] ( pen 4 ; move 3 - ul , 0 - ul ; move 2 , 4 / 2 )  
[8368] ( pen ua * 3 ; move 0 , 4 * 2 ; move ua , 2 / 4 )  | ( pen ua * 2 ; v0 = 2 - ua ; move ua , 4 / v0 )  
[8369] ( move ul / 2 , ul ; move 4 + 2 , 3 * 2 ; pen 2 )  | ( move ua , 4 + 3 ; move ul / 2 , 3 * 2 ; v0 = 3 )  
[8370] ( move 2 , 3 - 4 ; move 4 - ul , 2 / ua ; pen 2 )  
[8371] ( move 2 , 0 ; move ul , ua + 2 ; move ua , 3 + 2 )  
[8372] ( ( move 2 , 0 ; pen 4 ) ; move 3 * 2 , ua * ua )  
[8373] ( pen ul ; move 2 + ul , 4 - 3 ; move 3 , 2 / 3 )  
[8374] ( move ua + 2 , ua + 4 ; move ua , 2 ; move 2 , 0 )  
[8375] ( move 2 , ua ; move 4 * 2 , 3 / 4 ; pen ua + 3 )  
[8376] ( pen 3 / 2 ; move 4 + 3 , ua ; move 2 , ul - 4 )  
[8377] ( move 3 / 2 , ul ; move ua , 4 * 3 ; pen 3 + 2 )  
[8378] ( move ua , 0 - 2 ; move 0 , ul ; move ul / 2 , 0 )  
[8379] ( move 0 , 0 ; move ul - 3 , ua - 2 ; move ua , 2 )  
[8380] ( ( pen 2 + ul ; move ua , 2 ) ; move 4 , 3 - 2 )  
[8381] ( ( move ua + 2 , 4 ; pen 2 ) ; move 4 + ul , 3 )  
[8382] ( move ul - 3 , 2 ; move 0 , 0 ; move ua + ul , 3 )  
[8383] ( move 2 , 0 ; move 0 - ua , 2 ; move 2 / ua , ul )  
[8384] ( move ua , 0 - 3 ; move ul - 3 , 0 ; move ua , 2 )  
[8385] ( move ul - ua , ua - ul ; move 3 + 2 , ul + ul )  
[8386] ( ( pen 4 ; move 0 - 4 , 3 ) ; move ua , ua + 4 )  
[8387] ( move 0 , ua ; move 4 + 3 , 0 ; move 2 , ul + ul )  
[8388] ( pen 4 ; move ua - ul , 4 + 2 ; move 4 * 2 , 4 )  
[8389] ( move 4 + 3 , ul ; move ul , 2 ; move 0 , 0 - ua )  
[8390] ( pen ua ; ( move 4 , ua ; pen ul ; move 3 , ul ) )  
[8391] ( move 4 , ua ; move 0 , 2 ; move 2 + ul , ua + 3 )  
[8392] ( move 2 - ua , ua ; move ul , 0 ; move 0 - 4 , 3 )  
[8393] ( v0 = 4 ; move ua , 0 ; move ua , v0 * v0 )  | ( move ua , ua + ua ; move ua , 4 * 4 ; v0 = 0 )  
[8394] ( move 4 + ul , 3 ; move 0 , 0 ; move ua , ua - 3 )  
[8395] ( move ua - 2 , ul + ul ; move 2 + ul , ul / ua )  
[8396] ( pen 2 + 2 ; ( move ul , 2 ; move ua , 3 / 4 ) )  
[8397] ( move 2 + ul , ul ; move 2 , 2 ; move ua , 2 + 2 )  
[8398] ( v0 = 2 ; move ua - ul , v0 ; move v0 , 2 )  
[8399] ( ( move 3 , 2 ; move 3 + ul , 2 / ua ) ; pen 3 )  
[8400] ( move 4 - ua , ua ; move 0 , 4 + 4 ; move ua , 0 )  
[8401] ( move 2 / ua , 0 ; move ul , 0 ; move 4 + 2 , ul )  
[8402] ( move ua , 4 ; move 3 + ul , 0 ; move 2 , 2 - ua )  
[8403] ( move 0 , ua - ul ; move ua + 3 , 0 ; move 4 , 4 )  
[8404] ( move 2 , 3 - ul ; move ua , 2 ; move 2 , ua + 2 )  
[8405] ( move 3 - 2 , ul + ul ; move ua + ul , ul / ua )  
[8406] ( move ua , 4 ; v0 = 2 ; move v0 - ua , v0 )  
[8407] ( move 4 - ua , 3 + 2 ; move 0 , 2 ; move ua , ul )  
[8408] ( move 4 , ul ; v0 = ua + 2 ; move v0 , v0 )  
[8409] ( v0 = ua - 2 ; move v0 + v0 , ua / v0 )  
[8410] ( move ul - ua , 3 + ul ; move ul + ul , ul - 3 )  
[8411] ( move ua + 3 , ul / 2 ; move ua - ul , ul + ul )  
[8412] ( move ul , 0 ; move ul , ul ; move 2 * 2 , 2 + 2 )  
[8413] ( v0 = ua - ul ; move 3 , v0 ; move 2 , v0 )  
[8414] ( move 3 , 3 * 2 ; ( pen ua + 4 ; move 3 , ul ) )  
[8415] ( move 4 , ul ; move 2 , 0 ; move 0 - ua , 4 + ul )  
[8416] ( move 4 - ul , 0 ; move 2 , 2 ; move ul , ua + 2 )  
[8417] ( v0 = ul - 4 ; move v0 , 0 ; move ul , v0 )  
[8418] ( ( move 3 , 3 + 2 ; move 4 , 2 / ua ) ; pen ul )  
[8419] ( move ul , 0 ; move 2 , 4 + ul ; move ul , 3 + 2 )  
[8420] ( move 3 , 4 * 2 ; ( pen 3 ; move 2 - ul , ul ) )  
[8421] ( move 2 , 0 ; move ul - 2 , ul / 3 ; move ul , 0 )  
[8422] ( move 2 + ul , 0 ; move ua , 4 / ua ; move 2 , 2 )  
[8423] ( move 0 - ua , 2 + ul ; move 2 , 3 ; v0 = ua )  
[8424] ( move 4 , ul ; v0 = ua - 2 ; move v0 , v0 )  
[8425] ( move ua - 3 , 0 ; move 4 , 2 ; move 2 + ul , ul )  
[8426] ( ( move 3 , ul ; pen 2 ) ; move 3 / 2 , ul - 3 )  
[8427] ( v0 = ua - 4 ; move v0 , ua ; move 3 , v0 )  | ( v0 = ua - 4 ; ( move v0 , ua ; move 3 , v0 ) )  
[8428] ( move ul + ul , ul - ua ; move ua - 4 , 4 + ul )  
[8429] ( v0 = ua - 4 ; move ua , 3 ; move v0 , v0 )  
[8430] ( move 2 , 3 / 2 ; ( move ua , ul - 4 ; pen 3 ) )  
[8431] ( move 3 , ua ; v0 = ul - 3 ; move v0 , v0 )  
[8432] ( move 3 , 0 ; move 4 * 2 , ua - ul ; move ul , 0 )  
[8433] ( move 3 , ua ; v0 = 4 + ul ; move v0 , v0 )  | ( move 3 , ua ; move ul , 4 + ul ; move 3 + ul , 0 )  
[8434] ( move 2 - ua , ul ; move 4 , ul ; move 3 + 2 , 0 )  
[8435] ( move 2 - ul , 0 ; move 3 , ua - 3 ; move ua , 3 )  
[8436] ( move 0 , 0 ; move ul , 2 / 3 ; move ua + ul , 4 )  
[8437] ( move 3 , 0 ; move 2 , ul ; move 3 - ua , ua + 4 )  
[8438] ( move ua , 2 ; move 0 , ul ; move ul - 3 , 4 + 2 )  
[8439] ( move 3 , 0 ; move 0 - 3 , ul ; move 4 + ul , ul )  
[8440] ( move ua + 3 , ul ; move 2 , 4 + ul ; move 0 , 4 )  
[8441] ( move 4 , 0 ; move 4 / ua , 3 + ul ; move ua , 0 )  | ( ( move 4 , ua ; move 4 + 3 , ua + 4 ) ; pen ul )  | ( move 3 , ua * 2 ; v0 = 4 ; move v0 + 3 , v0 )  
[8442] ( move ul , 0 ; move 2 , 4 + ul ; move 3 , ua + 4 )  
[8443] ( move 0 , 0 ; move 2 , ul / 3 ; move ua , 3 / ua )  
[8444] ( move 4 - ua , 3 - ul ; move ul , 0 ; move 2 , 2 )  
[8445] ( move 3 , 2 ; move ul , ul ; move 2 - 3 , ua + 2 )  
[8446] ( move ul , 4 ; move ua + 2 , 3 + 2 ; move ul , 2 )  | ( move ul , 4 ; move ua - ul , 4 + ul ; move 3 , 0 )  
[8447] ( move 0 , ua ; move ua / 4 , 0 - ul ; move 4 , 2 )  
[8448] ( move ua , ul ; ( move 2 , 4 / 3 ; pen 4 + 3 ) )  
[8449] ( move 3 , 2 + 2 ; move ua + 2 , 4 ; move ul , ul )  
[8450] ( v0 = ua - 4 ; move v0 , 4 ; move ua , v0 )  
[8451] ( move 3 , 2 ; move 0 , 4 + ul ; move ua , 3 - ul )  
[8452] ( move 2 + ul , 2 ; move 3 , 4 + ul ; move 2 , ua )  
[8453] ( v0 = 4 + 3 ; move ul , v0 ; move v0 , ul )  | ( ( move ul , ul ; v0 = 4 + 3 ) ; move v0 , v0 )  
[8454] ( move 0 , ua + ul ; move ul , 3 ; move 3 , 4 + 3 )  
[8455] ( move 3 , 3 / 2 ; move ua + 3 , ul ; move 0 , ua )  
[8456] ( move 4 , 0 ; move ul - 3 , ua ; move ua , 4 + 2 )  
[8457] ( move 3 , 0 ; move ul , ua / 4 ; move 3 + ul , 0 )  
[8458] ( move 3 - ua , 3 ; move 4 , 2 ; move 0 - ul , ua )  
[8459] ( move 2 + ul , 2 ; move 2 / 3 , 0 ; move ul , ul )  
[8460] ( move 2 , 2 + ul ; move ua , 0 - 3 ; v0 = ul )  | ( ( move 2 , 3 ; move ua , ul - 4 ) ; pen ul - 3 )  
[8461] ( move 2 , 0 ; move 4 / ua , 0 ; move 3 - ul , ul )  
[8462] ( move ul , 3 ; ( pen ul ; move 3 + 3 , 4 * 3 ) )  
[8463] ( move 0 , ul ; move 2 , 4 ; move 4 + 2 , ul + ul )  
[8464] ( ( pen 3 ; move ul - 2 , 4 ) ; move 3 , 3 / ua )  
[8465] ( move 2 , ul ; move 3 , 0 ; move 3 + ul , 4 + ul )  
[8466] ( v0 = 4 ; move ul - 3 , ul ; move v0 , v0 )  
[8467] ( ( move ul , ua ; move 0 - ua , 0 ) ; move 2 , 4 )  
[8468] ( move 3 - ua , ul ; move ul , 4 / 3 ; move 0 , 0 )  
[8469] ( move ul - 2 , 3 ; move 2 , ul ; move 3 , ua + 3 )  
[8470] ( pen 2 ; ( move 3 , ua ; move ua / 4 , 2 / 4 ) )  
[8471] ( move 0 - ua , ul ; move 3 , 4 ; v0 = ua + 2 )  
[8472] ( move ul + ul , 4 - ul ; move ua / 3 , ua * ua )  
[8473] ( move 4 , ul ; move 0 , 4 + ul ; move 0 - ul , 4 )  
[8474] ( move ua , 3 * 2 ; move ul , 3 + 2 ; move 2 , ul )  
[8475] ( move 4 , ul ; v0 = 4 + ul ; move v0 , v0 )  
[8476] ( move 2 , 4 ; move ul + ul , 2 ; move ua + 2 , 4 )  
[8477] ( move 4 , ul ; v0 = 3 ; move ua , v0 * v0 )  
[8478] ( move ua , 2 ; move 3 - ul , 3 ; move ul - 4 , 0 )  
[8479] ( move 4 - ua , ua ; move 4 , 4 + 2 ; move ul , 0 )  
[8480] ( move ua , ua ; move ul , 4 + 2 ; move 2 - 4 , 2 )  
[8481] ( v0 = ul - 4 ; move v0 , v0 ; move 3 , ul )  
[8482] ( move 2 - 4 , ua ; move ul , 0 ; move ua , 2 / 3 )  
[8483] ( move 4 + 2 , 0 ; move 3 , ul ; move ul , ua - 4 )  
[8484] ( move 2 , ua ; move 3 * 3 , 4 + ul ; move 0 , ul )  
[8485] ( move 3 , 0 - ul ; move 4 , 3 + ul ; move ul , 2 )  
[8486] ( move 4 + ul , 2 ; move ua , ua + 4 ; v0 = 0 )  | ( pen ul ; ( move 4 + ul , ul + ul ; move ua , 3 + ul ) )  
[8487] ( move ua + 2 , 3 + ul ; move 2 , 4 ; move ul , 3 )  
[8488] ( move ul / ua , 2 ; move 0 , 3 ; move 4 , 2 - ua )  
[8489] ( move 3 , 0 ; move 4 , 2 - ul ; move ua , 4 - ua )  
[8490] ( move ua - 4 , ua ; move 2 + 2 , 4 ; move ul , 2 )  
[8491] ( ( move 3 , ua / 4 ; pen 0 ) ; move 4 , 4 / ua )  
[8492] ( move ul , ul ; move 0 , ul / 4 ; move 3 , 0 - 2 )  
[8493] ( move ul , ul - 3 ; move 4 , 0 ; move 0 - 4 , ul )  
[8494] ( ( move 2 , 0 ; move 2 , ul ) ; move ua , 2 + ul )  
[8495] ( move 4 , 0 - 3 ; move ua , ua - 2 ; v0 = ul )  
[8496] ( move 3 , ul ; move ul - ua , 4 + 2 ; v0 = 0 )  
[8497] ( move 0 , ul / ua ; move 2 , 3 - 4 ; move 2 , ul )  
[8498] ( move ua , 2 + ul ; move 2 , 4 ; move ua / 3 , 2 )  
[8499] ( move ua - ul , 2 ; move ua , 4 + 4 ; v0 = 0 )  
[8500] ( move ul , ul ; move 3 + 2 , 3 + 2 ; move 4 , ul )  
[8501] ( move 3 , 2 ; move ua , 4 + 2 ; move ul , ua - 4 )  
[8502] ( move ua , ua / 4 ; v0 = 4 ; move v0 , v0 )  
[8503] ( move 2 , 4 - 2 ; move 0 , ul / ua ; move 4 , ua )  
[8504] ( v0 = ua / 3 ; move v0 , ul ; move v0 , 4 )  
[8505] ( move 4 , 3 ; move 0 - ua , 3 + ul ; move ul , 4 )  
[8506] ( move 0 , 2 - ul ; move 3 , 4 ; move 4 - ua , ul )  
[8507] ( move ua , ua ; move 2 , ua - 2 ; move 3 , 4 / 2 )  
[8508] ( move 3 - 4 , 4 ; move ua , ua ; move 3 , 0 - ul )  
[8509] ( move 4 , ua ; move ul , 0 - 3 ; move 4 - 2 , ul )  
[8510] ( move ul , ua ; move 2 , ul / 4 ; move 4 + 2 , 0 )  
[8511] ( move 4 , ul - ua ; move ua , 3 ; move 0 - 3 , 4 )  
[8512] ( move 0 , ua ; move 3 , ua * ua ; move 4 , 3 * 3 )  
[8513] ( move 4 , ua ; move 3 , ua + ul ; move 2 - 4 , 2 )  
[8514] ( move 2 , 2 ; move 3 - ul , 3 ; move ua , ua * 3 )  | ( move 3 , 3 - ul ; move ua + ul , 3 ; move ul , 0 )  
[8515] ( move 3 * 2 , ua ; move 0 , ul / 3 ; move 3 , ua )  
[8516] ( move 3 + ul , ua ; move 3 , 3 ; move ua / 4 , 0 )  
[8517] ( move ua + 2 , 2 ; move 4 , 2 ; v0 = ua * ua )  
[8518] ( move 0 , 3 ; move ua + ul , 2 ; move 4 , ua / 4 )  
[8519] ( move ua / 2 , 3 ; move 4 , 0 ; move ua - ul , 3 )  
[8520] ( move 4 + 2 , ua ; move 3 , ul ; move 2 + ul , 4 )  
[8521] ( move 3 - 2 , 2 - ul ; move ul , 2 ; move ua , 4 )  
[8522] ( move ua , 2 / ua ; move 3 , 0 ; move ul , 4 * 2 )  
[8523] ( move ua , 3 / 2 ; move ua , 4 + 4 ; move 0 , ul )  
[8524] ( ( move ul , 0 ; move 2 , 4 ) ; move ul - ua , 0 )  
[8525] ( move 4 , 0 ; move 4 - ul , 4 ; move ua , ua - 3 )  | ( move 4 , ua ; move 4 - ul , 4 ; move ua , ua - 3 )  
[8526] ( move ua + 2 , 3 ; move 2 , ua / 3 ; move ul , 4 )  
[8527] ( move 4 , 3 + 2 ; move ul , ua * 2 ; move 3 , ul )  
[8528] ( move 2 , 4 * 2 ; move 2 , 4 ; move ua , ul - ua )  
[8529] ( move ul , ua ; move 4 + 2 , ua * 3 ; move 4 , 2 )  | ( move 4 + 3 , 0 ; ( move 4 , ul + ul ; pen ua * ua ) )  
[8530] ( move 4 , ua ; move 0 - 2 , ua ; move ul , 3 / 4 )  
[8531] ( move ua , 0 ; move ul , ul / 4 ; move 4 + 3 , 2 )  
[8532] ( move 4 , ua ; move 3 + 2 , ua - ul ; v0 = 2 )  
[8533] ( move 3 , ul ; move 3 - ua , 4 * 3 ; move ul , 0 )  
[8534] ( move 4 , ul + ul ; move 2 - 4 , 0 ; move ul , 4 )  
[8535] ( move ul , 3 ; move 3 , 4 ; move 0 - ul , 4 + ul )  
[8536] ( move 4 , ua - ul ; move 3 , 3 * 3 ; move ul , 0 )  
[8537] ( move 3 + ul , 4 ; move 3 , ul / 2 ; move 0 , ul )  
[8538] ( move 3 , ua * ua ; move 4 , 2 ; move 4 - ua , 2 )  
[8539] ( move ua + 2 , ua ; move 4 , ua - 4 ; move 4 , 3 )  
[8540] ( move 3 - 4 , ul ; move ul , ua - 4 ; move 3 , 0 )  
[8541] ( move 4 + ul , 4 ; move ua - ul , 2 ; v0 = 0 )  
[8542] ( move 3 , ul - 2 ; move ul / 4 , 0 ; move ul , 2 )  
[8543] ( pen ul ; ( move 2 - 4 , 4 / 3 ; move 4 , ul ) )  
[8544] ( move ul / 2 , 3 + ul ; move 3 , 2 ; move 2 , ul )  
[8545] ( move 2 - ua , ul ; move ua , 4 / 3 ; move 3 , 2 )  
[8546] ( move 4 * 2 , 2 ; move ul - ua , ua ; move 3 , 4 )  
[8547] ( move 3 - ul , ua ; move 4 , ul ; move 2 , 3 * 2 )  
[8548] ( move ul , 2 * 2 ; move ul , 4 - 2 ; move ua , 4 )  
[8549] ( ( move 4 , 0 ; move ul - 4 , ul ) ; move ua , 0 )  
[8550] ( move 4 , 3 ; move ul , ua + 4 ; move 4 , 2 + ul )  
[8551] ( move 4 , ul ; ( move 2 , 0 ; move 2 , ua * ua ) )  
[8552] ( move 2 / 4 , 0 ; move ua , ua ; move 4 , ua / 3 )  
[8553] ( move ul , 2 ; move ul , 4 - ul ; move 2 , 4 + 3 )  
[8554] ( move ul , 0 ; ( move 3 + 2 , ul ; move 3 , ul ) )  
[8555] ( ( move ul , 0 ; move 3 + 3 , ul ) ; move ua , 3 )  
[8556] ( move ua , 4 ; move 2 , 4 + 3 ; move ul - 3 , ul )  
[8557] ( move ul / 2 , 0 ; move 3 , ul ; move 4 + ul , 4 )  
[8558] ( move ul , ua ; move 2 * 2 , 4 ; move ul / 2 , 2 )  
[8559] ( move ua - 3 , ua / 2 ; move 2 , ul ; v0 = 2 )  | ( move ul - 4 , 0 ; move ul , 4 ; move ul , ul / 3 )  
[8560] ( move 4 + 3 , 2 ; move ua , 4 * 2 ; move ul , ul )  
[8561] ( move 4 , ua + 2 ; move ul - 4 , 2 ; move ul , 4 )  
[8562] ( move ul , ul ; move 4 + ul , 2 ; move 2 , 3 - 4 )  
[8563] ( move ul , 3 ; move 4 , 2 + 2 ; move ul - 4 , ul )  
[8564] ( ( move ua , 4 + 4 ; move 0 , 3 ) ; move ua , ua )  
[8565] ( move ul , 0 ; ( move ul , 2 ; move 2 * 2 , ul ) )  
[8566] ( move 0 , 4 * 3 ; move 3 - ul , ul ; move ua , 4 )  
[8567] ( move 3 , ua * 3 ; move 2 , ul ; move ul , 2 - 4 )  
[8568] ( move ul - 3 , 2 ; move 4 , ua + ul ; v0 = 2 )  
[8569] ( move 4 , 2 - 4 ; move ua , 2 ; move ua , ua / 3 )  
[8570] ( ( move 4 / 3 , ul / 2 ; pen ul ) ; move 3 , 4 )  
[8571] ( move 3 , 2 / 4 ; move ua , 4 ; move 0 - ul , ul )  
[8572] ( move 2 , 3 * 3 ; move ua , 4 + ul ; move ul , 3 )  
[8573] ( move 4 , 2 ; move ul , ua * 4 ; move ua - 2 , 3 )  
[8574] ( move ua , 4 * 4 ; move ua + ul , 4 ; move 0 , 4 )  
[8575] ( move ua , 2 ; move 4 + 3 , ua * ua ; v0 = 3 )  
[8576] ( ( move ul , 2 ; move ul , 0 ) ; move 3 , ua - 4 )  
[8577] ( move 4 , ul ; move ua + 2 , ul - 3 ; v0 = 3 )  
[8578] ( move 4 , 2 ; move 4 - ua , 4 ; move 3 - ul , ua )  
[8579] ( ( move ul , 0 ; move ul + ul , 2 ) ; move 3 , 4 )  
[8580] ( ( move ul , ul ; move 2 , ua - 4 ) ; move 3 , 0 )  
[8581] ( move ul , ul ; move 0 - 4 , 4 * 2 ; move ul , 4 )  
[8582] ( move 3 , ua / 4 ; move ua - ul , 3 ; v0 = 0 )  
[8583] ( move 0 , 2 ; ( move ua , ul / 3 ; move 3 , ua ) )  
[8584] ( move 4 - ul , 4 ; move ul , 2 ; move 4 + 2 , ul )  
[8585] ( move 2 / ua , 4 ; move 4 , 3 ; move 2 + ul , ul )  
[8586] ( move 4 , ul ; ( move ul , ul ; move 0 - 2 , 2 ) )  
[8587] ( move ul , 2 ; ( move ua - 4 , 0 ; move 3 , ul ) )  
[8588] ( move 4 , 3 ; move 4 , ua ; move 3 + ul , ua - 4 )  
[8589] ( move ua , ua / 2 ; move 4 + 3 , 2 ; v0 = ul )  | ( move ua , ua ; move ua , ua / 2 ; move 4 + 3 , 2 )  
[8590] ( move ua , 2 ; move ul , 2 ; move ua / 4 , 3 - 4 )  
[8591] ( move 3 , ua - ul ; move 2 , 3 - 4 ; move ul , 4 )  
[8592] ( move 2 , 3 - 4 ; move ua , ua - 4 ; v0 = ua )  
[8593] ( move 3 , ua ; move 4 + 3 , ul ; move 3 , ul - 4 )  
[8594] ( move ul , ua + 3 ; move 3 , 4 * 3 ; move 4 , ua )  
[8595] ( move 4 * 2 , 2 ; move ul + ul , 4 ; move ua , 4 )  
[8596] ( move ul , 3 ; move 2 / 4 , ul ; move 3 + ul , 2 )  
[8597] ( move ul - 3 , ul - 4 ; move 4 , 2 ; move ul , 2 )  
[8598] ( move 2 , ua ; move 3 * 3 , ua * ua ; v0 = 3 )  
[8599] ( move 0 , 4 / ua ; move 3 , ua / 4 ; move ul , 2 )  
[8600] ( ( move 0 , ul ; move ul - 3 , ua ) ; move 2 , 4 )  
[8601] ( move 4 - ua , ul - 4 ; v0 = ua ; move 2 , 2 )  
[8602] ( ( move ua , 2 ; move 2 + ul , 4 ) ; move 2 , ul )  
[8603] ( move ua + 2 , 3 ; move ua , 4 * 4 ; move 4 , ul )  
[8604] ( move 4 , 2 ; move 4 / ua , ul ; move ua , 4 + 2 )  
[8605] ( move 4 / 3 , 3 ; move ua , ul ; move 2 + ul , 3 )  
[8606] ( move ua , 2 ; move 2 - ua , ul / 3 ; v0 = 4 )  
[8607] ( move 2 , ul ; move 2 / ua , 4 ; move 3 , 4 - ul )  
[8608] ( move 2 , ua ; move 2 + ul , ul / 4 ; v0 = 3 )  
[8609] ( move 4 , ul ; move 4 , 2 - ua ; move 4 , 4 + ul )  
[8610] ( ( move ua - ul , 0 ; move 4 , 2 ) ; move ul , 4 )  
[8611] ( move ul , ul ; move ul / 3 , 0 ; move 3 * 3 , 4 )  
[8612] ( move 2 , ul ; ( move 0 , 4 ; move ul - ua , 4 ) )  
[8613] ( move ua / 4 , 2 ; move ua , ul / 3 ; v0 = 0 )  
[8614] ( move 3 , 3 ; move ul , ul ; move 3 * 2 , ul - 4 )  
[8615] ( move 3 , 4 + ul ; move 3 * 2 , ul ; v0 = ua )  
[8616] ( move 2 , 2 + ul ; ( move ul , 3 ; move 3 , ul ) )  
[8617] ( ( move ua , 3 + 2 ; move ul , ua ) ; move 4 , 3 )  
[8618] ( move ua / 4 , 0 ; move ul , 4 * 3 ; move 3 , ul )  
[8619] ( move ul + ul , 4 ; move 3 , 4 / ua ; v0 = 0 )  
[8620] ( move ua , 4 * 3 ; move 4 / 2 , 2 ; move ua , ul )  
[8621] ( ( move 3 - ua , ul ; move 3 , 4 ) ; move 0 , ul )  
[8622] ( move 2 , ul ; move 2 , ul + ul ; move 4 , 3 / 4 )  
[8623] ( move ul , ua + 3 ; move 4 , 4 ; move 4 + ul , 4 )  
[8624] ( move 4 , 2 ; move 4 + ul , 2 ; move ul , ul / 3 )  
[8625] ( move 3 * 2 , 3 / 4 ; move ul , 2 ; move ul , ua )  
[8626] ( move 4 , 3 + 3 ; move ul , 4 + ul ; v0 = ua )  
[8627] ( ( move 4 , 3 ; move ul , 2 ) ; move 0 - ul , ul )  
[8628] ( move ua , 2 ; ( move ul , 2 ; move 3 - ul , 3 ) )  
[8629] ( move 0 , 4 * 3 ; move ul , 4 / ua ; move 4 , ua )  
[8630] ( move 3 , ua ; move ua , 4 + 4 ; v0 = 4 + ul )  
[8631] ( ( move ul , 2 ; move 0 , ul ) ; move 4 , ul / 2 )  
[8632] ( move ua , 2 / ua ; move 3 , 4 ; v0 = 2 / ua )  
[8633] ( move ul , ua - 2 ; ( pen 0 ; move 0 - ua , 0 ) )  
[8634] ( move 3 , 2 ; ( move 3 , ul ; move ua + ul , 4 ) )  
[8635] ( move 4 , 3 ; v0 = ua + ul ; move 4 , ua - 4 )  
[8636] ( move 4 - ul , ul ; move 2 , 2 / 3 ; v0 = ua )  
[8637] ( move ul , 2 ; ( move 4 , 0 ; move ul / 2 , ul ) )  | ( move 4 + ul , ul + ul ; move 3 / ua , ul ; move 0 , ua )  
[8638] ( move 2 - ua , ua ; pen ua + 2 ; move 2 , 3 + 3 )  
[8639] ( ( move 3 , 0 ; move ul , 4 / ua ) ; move 3 , ua )  
[8640] ( move 4 - ul , ul / 2 ; move 2 , 3 ; move ul , 4 )  
[8641] ( move 2 , ua * 4 ; move 3 , 3 / ua ; v0 = ua )  
[8642] ( ( move 2 , 3 ; move ua , 4 ) ; move ul - 2 , ul )  
[8643] ( move ul , ul / 4 ; move ua , 3 - 4 ; v0 = 0 )  
[8644] ( move ul , ua * ua ; move 4 * 2 , 2 ; v0 = 4 )  
[8645] ( move 3 - 2 , 2 - ua ; pen 0 - 3 ; move ua , ua )  | ( ( move ul , 2 ; pen 0 ; move ua , 0 ) ; v0 = 3 )  
[8646] ( ( move 4 , ul ; move 2 , 2 ) ; move ua , 3 - ul )  
[8647] ( ( move ua , 2 ; move 4 - ua , 2 ) ; v0 = ua )  | ( move ua , 2 ; ( v0 = 4 - ua ; move v0 , 2 ) )  
[8648] ( ( move ul , 2 * 2 ; move ua , ua ) ; move 3 , 4 )  
[8649] ( move 2 / 4 , 4 ; move ua , ua + 4 ; move ul , 4 )  
[8650] ( move 3 - ul , 2 ; move 0 - ua , 2 - ua ; pen 2 )  
[8651] ( move ul , 4 - ua ; ( move 2 , ul ; move 3 , 2 ) )  
[8652] ( ( move 2 + ul , ua ; move 3 , ua ) ; move 4 , 4 )  
[8653] ( ( move ua , 4 + ul ; move 2 , 2 ) ; v0 = ul )  
[8654] ( ( move 3 , 3 - ul ; move 2 , ul ) ; move ua , 4 )  
[8655] ( move ul , 2 ; ( move 4 , ua + 4 ; move ua , 4 ) )  
[8656] ( move ua , 2 ; pen 4 + 2 ; move ua + 2 , ua + 4 )  
[8657] ( move ul , 3 / ua ; move 3 / 4 , 2 ; move 3 , ul )  
[8658] ( move 2 + ul , 0 ; pen ul - 2 ; move 2 , ua * 3 )  | ( move 4 - ul , 0 ; ( pen 0 ; move ua / 3 , ua ) )  | ( move 3 , 0 ; ( pen 0 ; move 2 , ua ) ; v0 = ul )  
[8659] ( v0 = ul ; move 4 , ul / 2 ; move 3 - ua , 3 )  
[8660] ( move 4 - ul , 0 ; move ua / 4 , 4 ; v0 = ul )  
[8661] ( ( move ul , 0 ; move ul - 3 , 4 ) ; move ul , 4 )  
[8662] ( move ul , 4 * 3 ; move 4 , ul / ua ; v0 = 0 )  
[8663] ( move ua / 4 , ul ; ( move 3 , 0 ; move ua , 4 ) )  
[8664] ( move 3 , 4 + ul ; move ua , 4 * 3 ; v0 = ul )  
[8665] ( move 2 / 4 , 4 ; move ua , 2 / ua ; v0 = ua )  
[8666] ( move 3 , ul / 2 ; ( move 4 , ua ; move ua , 2 ) )  
[8667] ( move 3 , 4 + ul ; v0 = ua / 2 ; move 4 , ul )  
[8668] ( move ua - 4 , ul ; v0 = 4 + 3 ; move 4 , ul )  | ( move 2 , ul ; move ul / 3 , ua + ua ; move 3 + ul , ul )  
[8669] ( move 4 , ua ; move 2 , ul - 3 ; v0 = ua / 4 )  
[8670] ( move ul , ul ; ( move 3 , ul ; move 3 , 2 - 3 ) )  
[8671] ( move ua / 4 , ul ; move 3 , ul - 3 ; v0 = 2 )  
[8672] ( move 4 , 4 ; move 2 - ul , ul / 2 ; move 4 , ul )  
[8673] ( move ua + ul , 4 + 3 ; pen 4 ; move 0 , ua + 3 )  
[8674] ( move 4 * 2 , ua ; move ua / 4 , 4 ; v0 = ua )  
[8675] ( ( move 4 , ua ; move 3 - 4 , ul ) ; move 3 , ua )  | ( move 4 , 0 ; move ul - 2 , ul ; move ua / 2 , ua + ua )  
[8676] ( ( move 3 , ua ; move 3 , ul ) ; move ul , 4 - 3 )  | ( move 2 + ul , ua * 4 ; move 3 , ua + ul ; move ul , ul )  
[8677] ( ( move 4 , ul ; move 4 , ua ) ; move 3 , ul - 2 )  
[8678] ( move ul , ua + 2 ; ( pen 0 ; move ua , 2 + 2 ) )  
[8679] ( move 4 + 4 , ul / 2 ; move 3 , ul ; v0 = ul )  
[8680] ( move 2 + ul , ua ; pen 0 ; move 3 - ul , 4 - 2 )  
[8681] ( move 2 , 3 - 2 ; pen ua / 2 ; move ua , ua + 2 )  
[8682] ( move 3 - ua , 4 ; move 2 - ua , 3 ; pen 0 - ul )  
[8683] ( move ua / 4 , 4 + ul ; v0 = ul ; move 3 , 4 )  
[8684] ( pen 3 - ul ; move ul , ul ; move 3 + 2 , 2 + 2 )  
[8685] ( move ua / 4 , ul ; move 3 , 4 * 3 ; move 4 , ul )  
[8686] ( move 3 + 2 , 0 ; pen ul / 3 ; move ul , 2 - ua )  | ( move 4 + ul , 0 ; pen ua ; ( pen 0 ; move ul , 2 ) )  
[8687] ( move ul , 2 - 4 ; ( move 3 , ul ; move ul , 4 ) )  
[8688] ( ( move 3 , 4 ; move ua , 3 ) ; move ul - 4 , ul )  
[8689] ( ( move 4 , ua / 4 ; move 4 , 2 ) ; move ua , ul )  
[8690] ( pen 3 ; move ua + 2 , ua + 4 ; move ul - 3 , 3 )  
[8691] ( move ua - 3 , ul ; pen ua - 3 ; move 3 - 2 , 2 )  
[8692] ( ( move 3 , 4 ; move ul , 2 ) ; move ua / 4 , ul )  
[8693] ( pen 2 ; move ua / 2 , 0 ; move ul - 3 , 2 / ua )  
[8694] ( move ul - 2 , 4 + ul ; move 4 + ul , 3 ; pen 0 )  
[8695] ( pen 3 + ul ; move 3 , 0 ; move 3 - ua , ul - 4 )  
[8696] ( pen 3 + ul ; move ua - 3 , 2 ; move ul , 3 + 3 )  
[8697] ( pen ua + 4 ; move 4 , ua - 2 ; move ua , 3 - 2 )  
[8698] ( move 4 , ul ; ( move 4 , 3 - ul ; move 3 , ul ) )  
[8699] ( move ua , ul ; pen 4 * 2 ; move 0 - 3 , ua + 4 )  
[8700] ( move 2 , ua + ul ; pen 2 - ua ; move 4 + 4 , 3 )  
[8701] ( pen 3 ; move ua + 2 , 3 ; move 3 + ul , ua - 4 )  
[8702] ( move 4 , 0 - 3 ; pen ul / ua ; move 2 + 2 , ul )  
[8703] ( move 0 - 4 , ua * 4 ; pen 2 ; move ua - 2 , ul )  
[8704] ( pen 4 ; ( move ua , ua + 2 ; move 2 , ua + 2 ) )  
[8705] ( move 4 - ul , ua ; move 0 - 4 , 2 - 4 ; pen ua )  
[8706] ( pen ul ; move 2 / 4 , 2 ; move 3 + ul , 0 - ul )  
[8707] ( ( move ua + ul , ua ; move 4 , 0 - 4 ) ; pen 0 )  
[8708] ( move 3 , 0 ; ( pen 4 ; move ua + 2 , ua + ul ) )  
[8709] ( pen ua * 3 ; move 2 , 4 - ul ; move ua + 2 , 4 )  
[8710] ( move ul - ua , 0 ; ( pen 4 - 2 ; move ua , 2 ) )  
[8711] ( pen 2 ; move 3 - 4 , 4 + 3 ; move ua + ul , ul )  
[8712] ( ( move 0 - ul , 0 ; pen 4 ) ; move 3 , ul + ul )  
[8713] ( move 3 - ua , ul ; move 2 , 2 / 4 ; pen 2 + ul )  
[8714] ( move 2 , 2 / 3 ; pen 3 + ul ; move ua + ul , 4 )  
[8715] ( pen 2 ; move 2 - ul , ul - ua ; move 4 , 3 * 2 )  
[8716] ( ( pen 3 ; move ua + ul , 3 ) ; move ua , 0 - 3 )  
[8717] ( pen 3 ; move ua - 4 , 3 ; move ua + ul , 3 * 2 )  
[8718] ( pen 2 ; move 3 + ul , 2 / ua ; move ul , 4 + 3 )  
[8719] ( move ua - 4 , ua ; pen 2 / 4 ; move 3 , 0 - ul )  
[8720] ( move 2 , 0 ; move ul , ua * ua ; move 0 - ua , 0 )  
[8721] ( move ul + ul , 4 + 3 ; move 3 + ul , 2 ; pen 4 )  
[8722] ( move 4 - ua , 2 ; ( pen 0 ; move 2 + ul , ul ) )  | ( ( move 4 - ua , 3 - ul ; pen 0 ) ; move 3 , ul )  
[8723] ( ( pen 2 + 2 ; move ua , 2 - ua ) ; move 3 , ul )  
[8724] ( ( move 3 , 4 + ul ; pen 0 ) ; move 2 + ul , ua )  
[8725] ( move 4 , 4 + ul ; pen 3 ; move ul - 3 , 2 - ua )  
[8726] ( move ua , 2 + ul ; move 0 , 2 ; move ul - ua , 0 )  
[8727] ( move 2 + ul , 3 ; pen 4 ; move ua - ul , 4 * 2 )  
[8728] ( move 2 + ul , ua * ua ; move ua + ul , ua + ul )  
[8729] ( move 4 + 3 , 3 ; ( pen ua ; move 0 - ua , ul ) )  
[8730] ( ( move 2 , ua ; pen ua - 3 ) ; move ua - 3 , 2 )  
[8731] ( move 2 , 2 ; ( pen 2 ; move 4 + ul , ua + ul ) )  
[8732] ( move 3 , 3 * 3 ; move ua - 4 , ul ; pen ua - 2 )  
[8733] ( move 3 * 2 , ua ; move 4 , ua / 3 ; pen 2 - ua )  
[8734] ( ( pen 0 ; move ul , ul ; pen ul ) ; move ua , ul )  | ( pen 0 ; ( ( move ul , ul ; pen 2 / 3 ) ; move ua , ul ) )  
[8735] ( move 3 - ul , ul ; move 4 , 3 * 3 ; pen ua + 2 )  | ( ( move 2 , ua + ul ; move 2 , 3 * 3 ) ; move 2 , ua )  
[8736] ( pen ua ; move 4 * 2 , 4 / 2 ; move ua , 2 - ua )  
[8737] ( pen ua ; ( move ua - 2 , ua ; move 3 + 2 , 4 ) )  
[8738] ( move 3 - ul , ua ; ( pen 0 - ua ; move 4 , 2 ) )  
[8739] ( pen ua - 2 ; move 4 , 3 / 2 ; move ua - ul , 3 )  
[8740] ( pen 4 / 3 ; move ua + 2 , 3 ; move ua , 4 - ul )  | ( move ua + 2 , 3 - ua ; v0 = ua ; move v0 , 3 )  
[8741] ( pen ua - 4 ; ( move 4 , 0 ; move 2 , ul + ul ) )  
[8742] ( move ua + ul , ua / 2 ; move ua , 2 ; move 0 , 0 )  
[8743] ( move 4 + ul , 2 ; pen 2 + ul ; move 4 / ua , 4 )  
[8744] ( ( move ua / 2 , 3 ; pen 0 ) ; move ua - ul , 3 )  
[8745] ( move 3 + ul , ua - 3 ; pen 3 ; move 4 , ua * 4 )  
[8746] ( pen 4 ; ( move ua , 3 - ul ; move 0 - 2 , ul ) )  
[8747] ( move ua - 4 , 0 ; move ua , 0 ; move ua + ul , 2 )  
[8748] ( move ua - ul , 3 / 2 ; move 3 - ua , 4 ; pen 3 )  
[8749] ( pen ua - 4 ; move 3 , ua * 4 ; move 2 + ul , 4 )  
[8750] ( ( move 4 + 2 , 3 + ul ; pen ua ) ; move ul , 2 )  
[8751] ( move 3 , ua + ul ; ( pen 0 ; move 3 - 4 , ul ) )  
[8752] ( ( move 2 , 2 ; pen 3 - ua ) ; move 3 , ul + ul )  
[8753] ( move 4 - ua , 2 ; ( pen ua ; move 2 , ua * 2 ) )  
[8754] ( move 4 + ul , 3 * 2 ; ( pen ua ; move 2 , ua ) )  
[8755] ( move 3 + 3 , 4 * 4 ; pen ua ; move 3 - ul , ul )  
[8756] ( pen 2 ; ( move ul , ul + ul ; move 4 , 0 - 4 ) )  
[8757] ( move 3 , ul ; ( pen 3 - 4 ; move 0 - ua , ul ) )  
[8758] ( ( pen ua * ua ; move 4 , 2 ) ; move ul , 0 - 4 )  
[8759] ( move 4 - ua , ul ; ( pen 2 ; move 3 , 2 + ul ) )  
[8760] ( move 2 - ua , 4 ; pen ul / 4 ; move 2 - 3 , ul )  
[8761] ( move 2 , ul + ul ; move 3 , ul ; move 0 - ua , 0 )  
[8762] ( move 3 , 4 ; ( pen 0 ; move 3 - ul , ua * ua ) )  
[8763] ( move 3 , 3 / 4 ; pen 4 - ua ; move ua , 3 + ul )  
[8764] ( move ua , 0 ; move ul , 0 ; move 4 + ul , 2 + ul )  
[8765] ( move 0 , ul - ua ; move ua , 4 ; move ua , 0 - 2 )  
[8766] ( move 3 , ul / 3 ; pen 4 ; move 2 + ul , 4 + ul )  
[8767] ( move ul - 3 , 3 ; ( pen ul ; move 2 - ua , 3 ) )  
[8768] ( move 4 + 3 , ul - 4 ; move ul , ul - 3 ; pen 4 )  
[8769] ( move ul , 0 ; ( move ul - 4 , 4 + 4 ; pen ua ) )  
[8770] ( ( move ua - 2 , ul ; pen 4 ) ; move 2 - ua , 4 )  
[8771] ( ( pen 3 ; move ul , 3 ) ; move ua + ul , 4 + 3 )  
[8772] ( ( move 3 - ua , 3 ; pen 3 ) ; move ul - 2 , ul )  
[8773] ( move 3 , 0 ; ( pen 0 ; move 4 , 2 ; move 3 , 3 ) )  
[8774] ( move ua + 2 , ua ; move ul , 2 ; move ua - 4 , 0 )  
[8775] ( move 2 , ul ; ( move ua - ul , 4 * 2 ; pen 2 ) )  
[8776] ( move 0 , ua ; move 3 + ul , 4 ; move 0 - ua , ul )  
[8777] ( move ul - 3 , ua ; move ua - ul , 3 ; move 0 , 0 )  
[8778] ( move 0 - ua , 0 - ul ; move ul , ul ; move 2 , 3 )  
[8779] ( ( move ua / 3 , ua ; pen 4 ) ; move 2 , ua + 3 )  
[8780] ( move ua + ul , 2 ; ( pen ul ; move 4 + 4 , 3 ) )  
[8781] ( move ul / 3 , ul ; ( pen 0 ; move 4 , ua + 3 ) )  
[8782] ( ( move 4 + ul , ul ; move ua , 4 / 3 ) ; pen 0 )  
[8783] ( ( move ul - 3 , ul ; move 4 , 0 - 4 ) ; pen ul )  
[8784] ( move ul , ul + ul ; move ua + 2 , 0 ; move 3 , 3 )  
[8785] ( move 3 , ua ; v0 = ua - ul ; move v0 , v0 )  
[8786] ( v0 = ua ; move v0 , ua * v0 ; move ul , 2 )  
[8787] ( ( pen 4 * 2 ; move ua , ul ) ; move 2 , 4 + ul )  
[8788] ( ( move ua , 2 ; pen 4 ) ; move ua - 4 , 3 - ul )  
[8789] ( move ua + 2 , 4 + ul ; move ul , ul ; move 2 , 0 )  
[8790] ( move ul , 0 ; move ul - 2 , ua - 2 ; move 2 , ul )  
[8791] ( move ul / ua , ul - ua ; move ua - 2 , ul + ul )  
[8792] ( move 3 - ul , 0 - 2 ; move ua , ul ; move ua , 2 )  
[8793] ( move 3 , 3 ; move ua , 2 + ul ; move ua , ua + 2 )  
[8794] ( move ul , 3 ; move 3 , ua ; move ua + ul , 0 - 2 )  
[8795] ( move ua , 0 ; move ul , 3 + ul ; move 2 - ua , 3 )  
[8796] ( ( pen 2 + ul ; move 3 , ul ) ; move 3 , ua / 3 )  
[8797] ( move 4 , ul - ua ; ( pen 0 ; move ul - 4 , 4 ) )  
[8798] ( v0 = ua + ua ; move ul - v0 , v0 * v0 )  
[8799] ( move ua , 0 ; move 4 / ua , 0 - ul ; move 2 , ua )  
[8800] ( v0 = ua - ul ; move v0 , 2 ; move v0 , ul )  
[8801] ( ( move 4 + ul , ua ; pen 3 + ul ) ; move 4 , 3 )  
[8802] ( move 0 , ul ; move ua , ul ; move 3 + 2 , ua - 3 )  
[8803] ( ( pen 2 + ul ; move ua + 4 , 4 ) ; move ul , 4 )  
[8804] ( move ua , ul + ul ; ( pen 4 ; move 2 * 2 , 4 ) )  
[8805] ( move ul , 2 + ul ; move 0 , ua / 2 ; move ua , 3 )  
[8806] ( v0 = ua * ua ; move 4 , v0 ; move ua , v0 )  
[8807] ( ( move 2 - ua , ua ; move 3 , 4 * 4 ) ; pen ul )  
[8808] ( move 0 , ua ; move ua - ul , 3 ; move 2 , 2 / ua )  
[8809] ( move ul , 2 ; move ul , 2 - ul ; move ua , 0 - 3 )  
[8810] ( move 3 + ul , ua ; move ul , 2 ; move 2 + ul , 2 )  
[8811] ( move ul , 2 ; move ua , 3 ; move 3 + 2 , ua + ul )  
[8812] ( pen 2 ; ( move ul , ua - 4 ; move 4 - ul , 3 ) )  
[8813] ( move 0 , ul ; move ul , 4 ; move 2 - ua , 2 + ul )  
[8814] ( move 4 + ul , ua - 2 ; move ua , 3 ; move ul , 0 )  
[8815] ( move 2 , ul - 3 ; ( move 4 , ua * ua ; pen 4 ) )  
[8816] ( move 2 , 2 - ua ; move ua , ul ; move ul , 3 + 2 )  
[8817] ( move ua , 2 ; move 0 - 4 , ul ; move 2 + ul , ul )  
[8818] ( v0 = ua - ul ; move ul , v0 ; move 3 , v0 )  
[8819] ( v0 = 4 + ul ; move v0 , v0 ; move ua , ul )  
[8820] ( move 0 , ul ; move ua + ul , ua + 4 ; move 4 , 2 )  
[8821] ( move ua - ul , 2 ; move 3 + ul , 4 ; move 0 , ua )  
[8822] ( move 2 , ul ; ( move 3 * 2 , ua / 3 ; pen ul ) )  
[8823] ( move ul - ua , 0 ; move ua + 2 , 2 ; v0 = ul )  | ( move ul - ua , ua ; move ua + 2 , 2 ; v0 = 2 - 3 )  
[8824] ( move ul , 2 ; move ul , ul + ul ; move 2 , 2 + 2 )  
[8825] ( move ul - ua , 0 ; move 2 , 3 - ua ; move ua , 4 )  
[8826] ( move 4 , 2 + 2 ; move 0 - ul , ul ; move ua , ul )  
[8827] ( move 2 , ua ; move 0 , ul - 3 ; move 3 - ua , ul )  
[8828] ( move ul + ul , 0 ; move 3 , ul ; move 2 , 4 + ul )  
[8829] ( ( move 3 , 3 ; pen ul ) ; move 4 + ul , ul / 2 )  
[8830] ( move 4 , 2 ; move 4 + ul , ua + ul ; move ul , 0 )  
[8831] ( move 0 - ul , ul ; move ua , 3 ; move ua , 2 - 4 )  
[8832] ( move ul , ua ; move ua + 2 , 2 ; move ul , 3 * 2 )  
[8833] ( move 2 , 0 ; move 4 , ul ; move ua + ul , 4 - ua )  
[8834] ( move ua , 2 ; move ua - 3 , ua - 3 ; move 3 , ua )  
[8835] ( move ua , 4 + 2 ; move ua , 4 ; move ua - 2 , ua )  
[8836] ( move 2 , 4 + ul ; move ul , 0 ; move ua + ul , 4 )  
[8837] ( move 3 - 2 , ul ; move 2 , ul ; move ua , 2 - ua )  | ( move ul , ul ; move 3 - ul , ul ; move ua , ua + 2 )  
[8838] ( move ua + ul , 4 / ua ; move 2 , ul ; move 0 , 2 )  
[8839] ( move ul - 2 , ul ; move ul - 2 , 4 ; move ua , 0 )  
[8840] ( move ul - ua , 3 - ul ; move ul , 3 ; move 2 , 0 )  
[8841] ( ( move ua , 0 ; move 2 , 2 ) ; move ua , ua + ul )  
[8842] ( move ua , 0 ; move ul , ua / 3 ; move ul - 4 , 0 )  
[8843] ( move 0 , 4 ; move ua + ul , 4 ; move ua , ua + 4 )  
[8844] ( move 2 , ua + 3 ; move ua , 3 ; move ul , ua + 4 )  
[8845] ( move ua + ul , ul ; move 3 - 4 , 3 ; move 0 , ua )  | ( v0 = ua + ul ; move v0 , ul ; move ua - v0 , 3 )  
[8846] ( move 4 + 3 , ul ; move 4 / ua , ul ; pen 3 / 4 )  
[8847] ( move 2 , 0 ; move 2 , ul ; move ua - ul , 4 - ul )  
[8848] ( ( pen 3 ; move ul , ul - 4 ) ; move 3 + ul , 4 )  
[8849] ( ( move 4 - ul , 4 ; pen ul - 3 ) ; move ul , 2 )  
[8850] ( move ul , 3 ; move 3 , 0 ; move 3 - ua , ul - ua )  
[8851] ( move 3 , 3 - ua ; ( pen ua ; move 4 , ua / 4 ) )  
[8852] ( ( pen 3 * 3 ; move 4 , ua ) ; move 4 + ul , ul )  
[8853] ( move ua , 4 ; move 4 - ua , 2 - ua ; move ul , 0 )  
[8854] ( move 2 - ua , 4 + ul ; move 3 , 0 ; move ul , ul )  
[8855] ( move 3 , ua ; move ua , ul ; move 2 - 4 , ua + 2 )  
[8856] ( move ua + 2 , 0 ; move ua , 4 ; move ul , ua * 4 )  
[8857] ( move ul , 0 ; move 2 + ul , ua / 3 ; move 3 , ua )  
[8858] ( move 3 , 0 ; move ul , 2 ; move 4 - ua , ul - ua )  
[8859] ( move 2 , ul / ua ; move 0 , 3 ; move ua , 3 + ul )  
[8860] ( move ul , ul ; move 0 - ul , 4 ; move 2 , 2 + ul )  
[8861] ( move 4 , ul ; move ua , ua - 2 ; move 4 , 0 - ua )  
[8862] ( move 4 , 3 - ua ; ( pen ua ; move 2 , ul / 4 ) )  
[8863] ( move ua , ul ; move 4 - ua , 0 ; move 4 + ul , 2 )  
[8864] ( move 4 , 2 ; move 0 - ul , 3 ; move ua - ul , ul )  
[8865] ( move ul , 2 ; move ul , 0 ; move 4 * 2 , ua - ul )  
[8866] ( move ul , 0 ; move 4 , ua + 3 ; move 4 , ua * ua )  
[8867] ( move 3 , ul ; move 0 , ua ; move ua - 2 , 4 / ua )  
[8868] ( move 0 - ul , 4 ; move ua - ul , ul ; v0 = 0 )  
[8869] ( move ul , ua ; move ua , 4 ; move 2 - 4 , ua + 2 )  
[8870] ( move 2 / ua , 3 ; ( pen ul / ua ; move 4 , 3 ) )  
[8871] ( v0 = 0 - 4 ; move v0 , v0 ; move 2 , v0 )  
[8872] ( move 3 + ul , ul - 3 ; move 0 , 4 ; move ul , ua )  
[8873] ( move 4 + 3 , 0 ; move 4 - ua , ul ; move ua , ul )  
[8874] ( move 3 , 2 + ul ; move ua , 4 + ul ; move 2 , ul )  
[8875] ( move ua , ul ; move 0 , 3 / 4 ; move 2 + ul , ua )  
[8876] ( move ua , 3 ; move ul , ul ; move 3 + 3 , 2 + ul )  
[8877] ( move ua - 2 , ua + 3 ; move 3 , ul ; move 3 , ul )  
[8878] ( move 0 , ua / 4 ; move ul , ul ; move 2 + ul , 2 )  
[8879] ( move ua , 3 + 2 ; move 4 + ul , ul ; move 2 , ul )  
[8880] ( move ua - ul , 3 ; move ul , 2 - ul ; move 4 , 0 )  
[8881] ( move ua , ul ; move 2 * 2 , 2 ; move 3 , ul + ul )  
[8882] ( move ul , 3 + ul ; move 2 / ua , 0 ; move ua , 4 )  
[8883] ( move ua - 2 , 0 ; move ua + ul , ul ; v0 = 4 )  | ( move ua - 2 , ua ; move ul , ul - ua ; move ua , ua )  
[8884] ( move ul , 4 ; move ua , 2 + ul ; move 2 + ul , 3 )  
[8885] ( move 2 , 3 ; move ul - ua , ul / 3 ; move ua , 0 )  
[8886] ( move 3 - ua , ul ; move 3 , 0 ; move ul - 3 , ul )  
[8887] ( ( move ul , ua - 3 ; move 3 , ua / 4 ) ; pen 4 )  
[8888] ( move 4 , ua ; move 0 - ua , 3 - 4 ; move ul , ua )  
[8889] ( move 0 , ua ; move ua + ul , 2 / 3 ; move 4 , ul )  
[8890] ( move ul + ul , 2 ; move 2 , 3 / ua ; move 2 , ua )  
[8891] ( move 0 , 2 / ua ; move 4 , ul ; move ul + ul , 2 )  | ( move 3 + ul , 4 / 3 ; ( move 2 , 2 ; v0 = 4 ) )  
[8892] ( move ul - 4 , ua ; move 2 , 2 ; move ul - 2 , ua )  
[8893] ( move ul + ul , 0 ; move 4 + 3 , 3 ; move ul , ul )  
[8894] ( move 4 + ul , ul ; ( pen 2 ; move 3 / 4 , ul ) )  
[8895] ( move 0 , ua ; move 2 + ul , 3 / ua ; move 4 , ul )  | ( move 4 - ul , ul / 2 ; move 3 , ul ; move ul , 0 )  | ( pen ua ; ( pen ul ; move 3 , ul / 2 ; move 3 + ul , ul ) )  
[8896] ( move ua , 3 * 2 ; move 0 - ua , ul ; v0 = ua )  
[8897] ( move 0 , ua / 4 ; move 3 , ul + ul ; move ul , 2 )  
[8898] ( move 3 , 3 ; move ul , 2 ; move ul - ua , ul - 2 )  
[8899] ( move ul , 3 * 2 ; move ua , 2 ; v0 = ua + ua )  
[8900] ( move 2 - ua , 3 ; move ul , ua ; move ul - 2 , 4 )  
[8901] ( move ul - 3 , 2 ; move 4 , 2 ; move ua , ul + ul )  
[8902] ( move 4 , 2 - ua ; move 2 , ua - ul ; move 3 , ul )  
[8903] ( move ua - ul , 4 ; move 3 , 0 ; move ul , ua - 4 )  
[8904] ( move ul , ua ; move ul , 4 + 3 ; move ua , 2 * 2 )  
[8905] ( move 4 , ul ; move ul , 0 ; move ul - ua , 2 - 4 )  
[8906] ( move ua , ul ; move 0 - 4 , 2 ; v0 = ul + ul )  
[8907] ( ( move ua , 0 ; move ua , 3 + ul ) ; move ul , 2 )  
[8908] ( move ul , 2 ; move ua + 4 , 2 ; move ul , ul - 3 )  
[8909] ( move 4 - ua , 4 ; move 0 , 4 + ul ; move ua , ul )  
[8910] ( move ua - 2 , ul / 4 ; move ul , ul ; move 2 , 0 )  
[8911] ( move 2 , ul ; move 2 , ua + ul ; move 4 , ul - 3 )  
[8912] ( pen 3 ; ( move 3 + ul , ua / 4 ; v0 = ul ) )  
[8913] ( move 4 , ul / 3 ; move ua + ul , 3 ; move 0 , ua )  
[8914] ( move ul , 2 + ul ; move 4 , ul - 2 ; move 3 , ua )  
[8915] ( move 0 , ul / 2 ; move ua , 4 ; move ul , 3 + ul )  
[8916] ( move ua , ua - 4 ; move 0 , ua ; move ul , 4 * 3 )  
[8917] ( move ul , ul / 3 ; ( pen 2 / ua ; move 4 , 3 ) )  
[8918] ( move 0 , ua * ua ; move ul , 3 ; move 4 * 2 , ul )  
[8919] ( move 2 + ul , 3 ; move ul , ul - 2 ; move 4 , ua )  
[8920] ( move ul + ul , 3 ; move 0 , ul ; move 3 - ul , 4 )  | ( move 2 , 2 + ul ; ( pen ul ; move 3 - ul , 4 + ul ) )  
[8921] ( move 0 , 2 / 4 ; move ul , ua + ul ; move 3 , ul )  
[8922] ( move ua , 0 ; move ua / 3 , 3 - ua ; move 4 , ul )  
[8923] ( move ul - 3 , 0 ; move ua , 4 ; move 4 , ul + ul )  
[8924] ( move 2 , ua ; move ul , 0 - 4 ; move ul , 3 / ua )  
[8925] ( move 3 - ul , 2 - ua ; move 3 , ul ; move ua , 3 )  
[8926] ( move 4 , 0 ; move ul , ul - 4 ; move 2 , ul + ul )  
[8927] ( move ua - ul , 2 ; move ua , 2 / 3 ; move ul , 2 )  
[8928] ( ( move 2 , ul ; pen ul ) ; move 4 / 2 , ul / 3 )  
[8929] ( move ul , 2 ; move 3 + ul , ul ; move 3 , 3 - ua )  
[8930] ( move ul , 2 ; move ua + ul , ua - 2 ; v0 = 3 )  | ( move ul , 2 ; move ua + ul , ul - 3 ; pen ul - 4 )  
[8931] ( move 3 , 2 ; move ua - 3 , ul - 3 ; move ua , ul )  
[8932] ( move 0 , ul / 4 ; move ua , ul / ua ; move 3 , 0 )  
[8933] ( move 2 , ul + ul ; move 4 , ul ; move 3 + 2 , ul )  
[8934] ( move 0 , ul + ul ; move 4 , ua / 3 ; move ul , 2 )  
[8935] ( move ua , 3 * 2 ; move ul - 3 , 3 ; move ua , ul )  
[8936] ( move ul , ua ; move ua , 4 + ul ; move 2 - 4 , 3 )  
[8937] ( move ul , ul - 4 ; move ua , 2 ; move 3 - 2 , ul )  
[8938] ( move ul , ua + 3 ; move 4 + 3 , 3 ; move ul , ul )  
[8939] ( move 3 * 2 , ua ; move 3 , ul - ua ; move 3 , ul )  
[8940] ( move 4 , ul ; move 2 - ua , 3 / ua ; move ua , 2 )  
[8941] ( move ul , ul - 2 ; move 4 , ua + 4 ; move ua , 3 )  
[8942] ( v0 = 4 ; move ul , ul / v0 ; move v0 , ul )  | ( ( v0 = ul ; move v0 , ul / 4 ) ; move 4 , ul )  
[8943] ( move 2 , 4 + 3 ; v0 = ua ; move ua , ul - ua )  
[8944] ( move ua - 4 , 3 ; move 3 + ul , ul ; move ua , 3 )  
[8945] ( move ul , 3 / ua ; move 0 , ua ; move 3 , ul - 4 )  
[8946] ( move ua , 3 + 2 ; move ua + ul , ul ; v0 = 4 )  
[8947] ( move 3 , ua * 2 ; move ua , ul + ul ; move 4 , 3 )  | ( move 3 , 0 ; ( move ua , ua + 2 ; move 2 * 2 , 3 ) )  
[8948] ( move 0 - ua , ul ; move 4 , ul ; move 2 , ua / 4 )  
[8949] ( move 4 , 4 ; move 2 , 3 + ul ; move ua , ul - ua )  
[8950] ( move 4 + 2 , ua ; v0 = 2 ; move ul - ua , ul )  
[8951] ( ( move 2 , ua ; move ul , 2 - ua ) ; move ua , 2 )  
[8952] ( move ul , ua + 3 ; move ul , ul ; move 4 , 3 + 3 )  
[8953] ( move 2 , ul + ul ; move 4 , 3 ; move ul , 2 - ul )  
[8954] ( pen 4 ; ( move ul , 3 / ua ; move ul - 4 , 4 ) )  
[8955] ( move ua , ul / 3 ; move ua - 2 , ul ; v0 = 0 )  
[8956] ( move ul , 2 ; move ua , 3 ; move ul / 4 , ua + 2 )  
[8957] ( move ua + 3 , ul ; move 2 , ul - 2 ; v0 = ul )  
[8958] ( move ul , ua * ua ; move 0 , 3 - ul ; move 4 , 4 )  
[8959] ( move 3 , ua + ul ; move 4 , 3 ; move ul , 2 - ul )  
[8960] ( move ua , ua ; move 3 - ua , 4 / ua ; v0 = 0 )  
[8961] ( move 2 , 3 ; move ul / ua , ul ; move 0 - 4 , ul )  
[8962] ( move ul , ua ; move ul , 3 * 3 ; move 3 + 2 , ul )  
[8963] ( move ua , 2 ; ( move ua , 2 ; move ua , 3 + ul ) )  
[8964] ( move ul , 4 ; move 3 + ul , 3 + ul ; move ua , 3 )  
[8965] ( move 3 + 2 , ua ; move 4 , ul ; move 4 , ul + ul )  
[8966] ( move 2 , 4 ; move ua - 4 , 2 ; move ul , ul - ua )  
[8967] ( move 2 - 4 , 3 ; move ua , ul ; move ul - ua , 3 )  
[8968] ( move 4 , ul + ul ; move ul , 3 ; move ua - 2 , 3 )  
[8969] ( move 4 , ul ; move 2 , 4 ; move 2 + ul , ul + ul )  
[8970] ( move 3 + 2 , 4 + ul ; move ul , ul ; move ul , 3 )  | ( move 0 , ul - ua ; move 4 + ul , 4 ; move ul , ul )  
[8971] ( move ul - ua , ua ; move 3 , 4 / ua ; v0 = 0 )  
[8972] ( v0 = 4 ; move v0 , 4 + v0 ; move 2 , v0 )  
[8973] ( move ul , 3 * 3 ; move ua , ul ; v0 = ua + 2 )  | ( ( move 0 , 3 * 3 ; move ul , ua ) ; move ua , ul )  
[8974] ( move 3 + ul , ul ; move ul - 2 , ua ; move 4 , 4 )  
[8975] ( move ul , 4 ; move ua + 2 , 4 ; move ul / 2 , ua )  
[8976] ( move 2 , ua / 2 ; move ua / 2 , 3 ; move ul , ul )  
[8977] ( move 4 , ul ; move 3 + ul , 4 ; move ua , 3 + ul )  
[8978] ( move ua , ua ; move 4 / ua , 3 ; move 3 , ul - 2 )  
[8979] ( move ul + ul , 4 ; move 0 , ul / 4 ; move 2 , ul )  
[8980] ( ( pen 4 ; move 3 , 2 ; move 3 , 2 ) ; v0 = 3 )  
[8981] ( move ua , ul ; ( move ul , 0 ; move 2 , 2 / ua ) )  | ( move ul , ul ; ( move ua , 0 - ua ; move 2 , ul / 3 ) )  
[8982] ( move ua , 0 ; move 3 , ua / 4 ; v0 = ul - ua )  
[8983] ( move ul , ua + ul ; move 4 * 2 , 4 ; move ul , 2 )  
[8984] ( move 4 + ul , ul - ua ; move 3 , 4 ; move 3 , ua )  
[8985] ( move 3 , 3 ; move ul + ul , 4 ; move 3 , ua - ul )  
[8986] ( move ua - ul , 4 ; move ua , 2 ; move ul , 3 - 4 )  
[8987] ( move ua + ul , ua ; move ul / 2 , 2 ; v0 = 3 )  
[8988] ( v0 = 3 ; move v0 + v0 , 3 ; move v0 , 4 )  
[8989] ( move 2 , 2 ; move ua + ul , 3 / ua ; v0 = ul )  
[8990] ( move ul , 2 ; move 3 - ua , 3 ; move 4 - ul , ul )  
[8991] ( move ua + ul , 3 ; ( move 2 , 2 ; move ul , ua ) )  | ( move ul , 2 + ul ; move ua , 0 ; move 3 , ul + ul )  
[8992] ( move ul - 2 , 4 ; move ua , ul ; move ua , 3 / 2 )  
[8993] ( move ul / ua , 2 ; move ua , 3 ; move 2 , 4 - ul )  
[8994] ( move 3 - 4 , ul ; move 4 - ua , 2 ; move ua , ul )  
[8995] ( move ua , ul / 4 ; move ul / ua , 0 ; move 3 , 2 )  
[8996] ( move ua - 3 , 4 ; move 4 , 3 + ul ; move ua , ul )  
[8997] ( move 3 , ul ; move 4 , ua / 2 ; move ua , ua + 4 )  
[8998] ( move ua - ul , 3 ; move ul , 3 ; move 4 + ul , 3 )  
[8999] ( move 2 - ua , 3 ; move ul , 3 / ua ; move 3 , ul )  
[9000] ( move 0 , ua * ua ; move ul , 4 ; move 3 , 4 / ua )  
[9001] ( move ua , ua - ul ; ( move ua , 3 ; move 2 , 2 ) )  
[9002] ( move ul , ua + ul ; ( move 2 , ul ; move 2 , 2 ) )  
[9003] ( move ul , 3 * 3 ; move 2 , ul ; move 4 - ua , ua )  
[9004] ( move 2 , 4 / 3 ; move ua , 2 - ul ; move ul , ua )  
[9005] ( move ul , ua ; move 4 , ul / 2 ; move ul , 0 - 4 )  
[9006] ( move 2 + ul , ua ; move 2 , 4 ; move ul , ua / 4 )  
[9007] ( ( move ua , ua ; move 4 , ul + ul ) ; move 3 , 0 )  
[9008] ( move ul , 4 ; move 4 + ul , ua ; move 4 - ul , 2 )  
[9009] ( move 3 , ua + 4 ; move ul - 4 , ul ; move ul , 3 )  
[9010] ( ( move 4 , ua ; move ul , 2 ) ; move ua + 2 , ul )  
[9011] ( move ua , 4 ; move 4 , ua * ua ; move ul , 3 * 2 )  
[9012] ( v0 = 4 ; move v0 * 2 , v0 ; move 3 , v0 )  
[9013] ( pen 0 ; ( move 3 , 0 ; pen 2 * 2 ) ; move 2 , 3 )  
[9014] ( move 4 , ua ; ( move ua , ua - 2 ; move ua , 3 ) )  
[9015] ( move ul , 3 ; move ul + ul , ul ; move 4 , 3 * 2 )  
[9016] ( move ul , ua / 4 ; move ul - 3 , ua ; move 2 , 3 )  
[9017] ( move 3 , ua / 3 ; move 4 , ul ; move 2 , ua * ua )  
[9018] ( move 3 , ul - 4 ; move ul - 2 , ul ; move ua , 4 )  
[9019] ( move ua / 3 , ul ; move 3 , ul ; move ua - 4 , 2 )  
[9020] ( move 3 , ua / 3 ; move 2 , ua * ua ; move 4 , ul )  
[9021] ( move 3 , 2 ; ( move ul , 2 ; move ua + ul , ul ) )  
[9022] ( move ul - 3 , ul ; move ua , 3 ; move 4 - ua , 4 )  
[9023] ( move 2 , ua + ul ; pen ua + ul ; move 2 , 0 - 2 )  
[9024] ( move ul / ua , 3 ; move 3 , 4 + ul ; move 2 , ul )  
[9025] ( move ul , 3 / ua ; move 3 , 2 ; move ul , ul - 3 )  
[9026] ( move ua , 3 ; ( move ul - 2 , ul ; move 2 , ua ) )  
[9027] ( move ul , 3 * 2 ; move 3 , ul + ul ; v0 = ua )  
[9028] ( ( move ul , ua ; move 3 + 2 , ul ) ; move 2 , ul )  
[9029] ( ( move ul , 0 ; move 2 + ul , ul ) ; move 4 , ul )  
[9030] ( move 3 , ul / 3 ; move ua , ua ; move 4 , ua + 4 )  
[9031] ( move ul , 2 ; move 4 - ul , 4 ; move ul , 3 + ul )  
[9032] ( v0 = 4 ; move 3 , v0 ; move v0 + 4 , v0 )  | ( ( v0 = 4 ; move 3 , 4 ) ; move 4 + v0 , v0 )  
[9033] ( move ul , ul + ul ; move 3 , ul / 3 ; v0 = 0 )  
[9034] ( move ul , 3 ; move 4 , 2 / ua ; move ul , ua + 4 )  
[9035] ( move ul , 3 ; move ua + ul , 3 ; move 2 / 4 , ul )  
[9036] ( move ua , ua ; move ul / 3 , 3 ; move ua , 4 - 3 )  
[9037] ( move 4 - ul , ua * 2 ; move 3 , ul ; move 3 , ul )  
[9038] ( move ul / 3 , 2 ; move 3 , ua - ul ; move ul , 3 )  
[9039] ( move 3 , ua ; move 4 - ua , ul ; v0 = ua * 2 )  
[9040] ( move 4 , 3 ; move 3 , ul / ua ; move 2 , ua - ul )  
[9041] ( move ul / ua , 4 ; move 4 , ul ; move 0 - ul , 3 )  
[9042] ( move ul / ua , 2 ; move 3 , 3 ; move ul - ua , 4 )  
[9043] ( move ul , ul ; move ua - 3 , 4 / 3 ; move 2 , ua )  
[9044] ( move ua , ul ; ( move 0 , ua ; move 2 , ul / 3 ) )  
[9045] ( move ul , 3 * 3 ; move ua , ul / ua ; v0 = 0 )  
[9046] ( move ul , ua ; move 4 + ul , 4 ; move ua - 4 , 3 )  
[9047] ( move 2 + ul , ua - 4 ; pen 0 ; move ua , 0 - ua )  
[9048] ( ( move ul - 2 , ul ; move 2 , ul ) ; move ua , 2 )  
[9049] ( move 4 + ul , ua ; move ua / 4 , 2 ; move ul , 3 )  
[9050] ( move ul / ua , ua ; move 3 * 2 , 4 ; move ua , 3 )  
[9051] ( move ul , 4 + 4 ; move ua , 4 + 3 ; move ul , ul )  
[9052] ( move ul - ua , ul ; move 4 / 3 , 4 ; move 0 , ul )  
[9053] ( move ua , ul ; move ul , 4 ; move ul - 4 , 4 + 2 )  
[9054] ( move 3 , ua ; move ua , 3 / 2 ; move ul / 3 , ua )  
[9055] ( ( move ul , 2 ; move ul , ul ) ; move 2 , ul - 2 )  
[9056] ( move ul , ua ; ( move 4 , 0 ; move ua , ua / 3 ) )  
[9057] ( move ul , 3 ; move ul / 3 , 2 ; move 4 , ul + ul )  
[9058] ( move ua / 4 , ua ; move ua , 3 + 3 ; v0 = ul )  
[9059] ( ( move ua , 2 ; move ul , 2 + ul ) ; move ul , 4 )  
[9060] ( move 3 , 3 ; move ul - ua , 4 * 4 ; move ul , ua )  
[9061] ( ( move 2 , ua ; move ua , 3 ) ; move ul , 3 - ul )  
[9062] ( move 4 , 3 * 2 ; move ul , ul / ua ; move ul , 2 )  
[9063] ( move ua , ul ; move ul , 2 ; move 3 - ul , 3 / 4 )  
[9064] ( move 3 , 4 + 4 ; move ua , ul ; move ul - 4 , ul )  
[9065] ( move ua , ua / 3 ; move ul , 4 ; move 2 , ua / 3 )  
[9066] ( move 4 , 4 + ul ; move ua , 4 + 4 ; move ul , ul )  
[9067] ( move 3 , ua ; move 3 - 4 , ul ; move ul - 4 , ul )  
[9068] ( move 3 , 4 ; ( move 0 , ul ; move ul - ua , ul ) )  
[9069] ( move ua , ua ; ( move ul , 3 * 2 ; move 2 , ul ) )  
[9070] ( move ua , ul ; move ua - ul , 2 ; move 4 , 4 / 3 )  
[9071] ( move 2 + ul , ua ; move 4 , ul ; move ul , 3 / 4 )  
[9072] ( v0 = 3 * 3 ; move v0 , v0 ; move 4 , v0 )  
[9073] ( move ul - ua , 4 ; ( move ul , 3 ; move ul , 0 ) )  
[9074] ( move 4 , 4 ; v0 = 4 ; move v0 + v0 , v0 )  | ( v0 = 4 ; move v0 , v0 ; move v0 + 4 , v0 )  
[9075] ( move ua - ul , ua ; move 3 / 4 , ul ; move 4 , 2 )  
[9076] ( move ul , 2 - 3 ; ( move ul , ul ; move ua , 2 ) )  | ( move ul , ua - ul ; move 3 - 2 , ul ; move ua , 2 )  
[9077] ( ( move 3 , ua ; move 4 , ua + ul ) ; move 2 , ul )  
[9078] ( pen 4 ; ( move 4 , 3 ; move 3 , 2 ; v0 = 3 ) )  
[9079] ( move ua , ua + 3 ; ( move ua , 3 ; move ul , 4 ) )  
[9080] ( move 3 , ul / 3 ; move ul , ua ; move ua , 3 * 3 )  
[9081] ( move 4 / 2 , ul ; move ul , 4 ; move ua , 3 + ul )  
[9082] ( pen ua - ul ; move 0 - 2 , ul ; move 2 , 0 - ul )  
[9083] ( move ua - ul , ul ; ( move 0 , 4 ; move 3 , ul ) )  
[9084] ( ( move ua + 3 , ul ; move ua , 4 ) ; move ua , 3 )  
[9085] ( ( move ul , ul ; move 0 - ua , 3 ) ; move ul , 4 )  
[9086] ( ( move ul - ua , ua ; move 3 , ul ) ; move 2 , 4 )  
[9087] ( ( move ua , 4 ; move ua - 3 , ul ) ; move 2 , ul )  
[9088] ( move 4 , ul ; ( move 2 , 4 - ua ; move ua , ua ) )  
[9089] ( ( move ul , 4 ; move 0 , ul ) ; move 4 + ul , ul )  
[9090] ( move 4 , 4 - ul ; move ul , ul ; move 3 , 4 + ul )  
[9091] ( move ul + ul , ul ; move 4 , 4 ; move ul , 4 * 2 )  
[9092] ( move 2 , 4 ; move ua - ul , ua / 3 ; v0 = ul )  
[9093] ( move 4 , ul - ua ; move 4 , ul ; move ul , 3 / 2 )  
[9094] ( move ul - 4 , 4 ; move ul - 3 , ua ; move 4 , ul )  
[9095] ( move 4 - ul , ua - 3 ; v0 = ul ; move 3 , ul )  
[9096] ( move 2 , ua ; move ua - ul , 4 / 3 ; v0 = ul )  
[9097] ( move 3 , ua ; move 2 , ul - 4 ; move ul / 4 , ul )  
[9098] ( move 4 + ul , ul ; move ul , 3 ; move 4 , 4 - ul )  
[9099] ( move ul , ul / 2 ; move 3 , ul - 3 ; v0 = ua )  | ( move 3 , ua / 4 ; v0 = ua + 2 ; move ul , v0 )  | ( v0 = ua ; move 3 , v0 / 4 ; move ul , v0 / 3 )  
[9100] ( move ul , ul ; move ul , 4 + ul ; move 4 , 4 - 3 )  
[9101] ( ( move 4 , 2 ; move 3 - ua , ul ) ; move ul , ua )  
[9102] ( v0 = ul ; move ua , 3 / ua ; move ua - 3 , 4 )  
[9103] ( ( move 3 + ul , 3 ; move 3 , ul ) ; move ua , ul )  
[9104] ( move ul / 4 , 2 ; move ul , 4 * 2 ; move ua , ul )  
[9105] ( move ua / 4 , 3 ; move ua + ul , ul ; v0 = 3 )  
[9106] ( ( move ua , 3 - ua ; move 2 , ul ) ; move ul , 4 )  
[9107] ( move ua , 0 - ua ; move 2 + ul , 4 / ua ; pen 0 )  
[9108] ( move ul - 2 , ua ; ( move 4 , 2 ; move ul , ul ) )  
[9109] ( move 4 , ua ; ( move 2 / ua , ul ; move ua , 2 ) )  
[9110] ( ( move 4 + ul , ul ; move 2 , ul ) ; move 2 , ul )  
[9111] ( ( move 4 , ul ; move ul - 4 , ul ) ; move ua , 0 )  
[9112] ( ( move ua , ul ; move 2 , 3 + ul ) ; move 4 , ul )  
[9113] ( v0 = 3 ; move 3 , 4 / v0 ; move v0 , v0 )  
[9114] ( move ul - 4 , ua ; move ul , 4 / 3 ; move 3 , ua )  
[9115] ( move 2 , 4 / ua ; move 4 + ul , ul ; v0 = ua )  
[9116] ( pen ua - ul ; move 2 - 4 , 0 ; move ua , ua + 2 )  
[9117] ( ( move 4 , ua ; move 3 / ua , 0 ) ; move ul , ul )  
[9118] ( move 4 , ua ; move 4 / ua , 4 * 2 ; move ul , ua )  
[9119] ( ( move ul , 0 ; move ua / 3 , ul ) ; move 4 , ul )  
[9120] ( move 4 , ua * 4 ; move 2 , ul ; move ua / 4 , ul )  
[9121] ( v0 = 4 + 2 ; move ua , v0 ; move 2 , 2 - 4 )  | ( move ul - 3 , 4 ; move 0 - ua , 3 - ul ; v0 = ul )  
[9122] ( move 4 , ul ; move ua - 3 , ua / 3 ; v0 = ul )  
[9123] ( move 0 , ua * ua ; move 2 + 2 , ul - 4 ; pen ua )  
[9124] ( ( move ua , ul - 3 ; move ul , 4 ) ; move ul , 2 )  
[9125] ( move 4 , 3 ; move ul / 4 , ua ; move ua , ul - 4 )  
[9126] ( move ul - 3 , ul ; move ua , 4 / 3 ; v0 = ua )  
[9127] ( move 3 + ul , ul ; pen 2 ; move 3 + ul , 0 - ua )  
[9128] ( move 3 , 3 ; move ul , ua / 4 ; v0 = ul + ul )  
[9129] ( move 3 , 4 ; move ul , 2 / ua ; move ua / 4 , ul )  
[9130] ( move 3 , 3 + ul ; ( move 3 , ul ; move ul , ul ) )  
[9131] ( ( move 2 , 3 - ul ; move ul , ul ) ; move 3 , ul )  
[9132] ( move 4 - ul , 4 ; move 2 , ul / 4 ; move ul , ua )  
[9133] ( ( move ul , ua ; move ua , 2 / 4 ) ; move 2 , ul )  
[9134] ( move 0 - 2 , ua + ul ; move 2 , 4 + ul ; pen ul )  | ( move 2 - 4 , ul ; v0 = 4 + ul ; move 2 , v0 )  
[9135] ( pen 2 ; move ua + 2 , 2 + ul ; move ua , ul - 3 )  
[9136] ( move ul - 2 , ua + 3 ; pen 0 ; move ua , 3 - ul )  
[9137] ( pen ua ; move 3 + 2 , 2 - 3 ; move ua , ua + ul )  
[9138] ( move 4 , 2 ; ( move ul , ua / 3 ; move ua , ua ) )  
[9139] ( move ua - ul , 4 - ul ; move 3 , 4 ; v0 = ul )  
[9140] ( move ul , ua ; ( move 4 , 4 ; move ul , 3 + ul ) )  
[9141] ( move 0 - 2 , ul - ua ; pen 3 ; move ua , ua / 2 )  
[9142] ( ( move ua , ua * 3 ; move ul , 4 ) ; move ua , 4 )  
[9143] ( move ul , 3 ; move 4 - ul , 3 / ua ; v0 = ul )  
[9144] ( move ul , ul / 3 ; move ul - ua , 4 ; v0 = 3 )  
[9145] ( ( move ul , ul ; move ua , 3 ) ; move 3 , ul - 4 )  
[9146] ( v0 = ua / 3 ; pen v0 ; move ua , ua - v0 )  
[9147] ( move ul , 2 ; ( move ul , ul / 2 ; move ua , 4 ) )  
[9148] ( move 3 , 3 ; ( move ua , ul - 4 ; move ul , ul ) )  
[9149] ( ( move ua , 4 ; move ul , 4 - ua ) ; move 3 , ul )  
[9150] ( move 3 + ul , 0 ; pen ua ; move 4 + ul , 3 - ul )  
[9151] ( move ul , ua ; ( pen ul - 2 ; move 0 - ua , 0 ) )  
[9152] ( move 3 , ul ; pen 2 - 3 ; move ua + ul , ua + 3 )  
[9153] ( move 4 + ul , 0 ; pen ua - 2 ; move 4 - ua , ul )  
[9154] ( move ul - 4 , 4 ; move ul / 4 , ua ; move 4 , ul )  
[9155] ( pen 2 ; move ua , 0 - 4 ; move 4 - ua , ul + ul )  
[9156] ( move ul / 4 , 4 ; move ua , 3 - ul ; v0 = ul )  | ( move ul / 4 , 3 + ul ; move 0 , ul ; move ua , ul )  
[9157] ( move 2 , ul ; move 3 - ua , ua + ul ; pen 4 + 2 )  | ( ( move 2 , ul ; v0 = ua + ua ) ; move 3 - ua , ul )  
[9158] ( move 0 , ul ; pen ul - 3 ; move ua + 2 , ua * 4 )  
[9159] ( move ua , ul - 2 ; pen 2 + ul ; move 4 - ua , 2 )  
[9160] ( move ua , ua - 3 ; move ua , 3 * 3 ; pen 0 - ul )  
[9161] ( move 3 , 4 / ua ; v0 = ul ; move ua , ua / 4 )  
[9162] ( ( move ul , ul ; move ul , 2 ) ; move 3 , ua / 4 )  
[9163] ( move ua - ul , 3 / 4 ; pen 2 + ul ; move ua , 0 )  
[9164] ( move ua , 0 ; move 3 * 3 , ul + ul ; pen 4 - ua )  
[9165] ( move 0 - ua , ua * 2 ; pen 3 * 3 ; move ul , ul )  
[9166] ( move 3 , ua / 4 ; pen 2 ; move 0 - ua , ul - ua )  
[9167] ( move ua + 4 , ul - 2 ; move 3 , ul ; pen ua + 3 )  
[9168] ( move 2 , 4 * 2 ; pen 0 ; move ua + ul , ul / ua )  
[9169] ( move ul - ua , 0 ; pen ua * 2 ; move 2 / 3 , ul )  
[9170] ( move ua , ua + 2 ; pen ua - ul ; move 3 , 2 / 3 )  
[9171] ( move 0 - ua , 4 / 2 ; pen ul ; move 3 , ua + ul )  
[9172] ( move 3 + 3 , ua ; move ua - 2 , ul ; pen 3 - ul )  
[9173] ( pen ul + ul ; move 4 * 2 , 2 ; move ua , 2 + ul )  
[9174] ( move 2 , ul / 4 ; ( move ua , 4 ; move ul , ul ) )  
[9175] ( pen 3 ; move ua , ua - ul ; move ul - 3 , 3 + 2 )  
[9176] ( move 3 , 3 ; ( move ul , ul ; move ul / 3 , ul ) )  
[9177] ( move ul , 4 ; ( move 3 , ul ; move ua , 4 / ua ) )  
[9178] ( pen ul ; move ua + ul , 2 - 4 ; move 2 , ua - 4 )  
[9179] ( move ua , ul / 2 ; pen 2 ; move 2 - ul , ua - 3 )  
[9180] ( move ua + ul , ua ; pen 4 * 2 ; move 3 - ul , 2 )  
[9181] ( move 3 , 4 + 2 ; move ua + ul , ul - 3 ; pen ul )  
[9182] ( move 2 , 2 ; v0 = ul / 4 ; move 3 * 2 , v0 )  
[9183] ( move ua , 2 + ul ; ( pen 0 ; move ua , 3 - ul ) )  
[9184] ( pen 3 / 2 ; move 3 , ua - 2 ; move ua + ul , ul )  
[9185] ( move ua , ua + ul ; pen 3 + ul ; move 2 , 2 / 4 )  
[9186] ( pen ua + ul ; move 2 / 4 , 2 ; move ua - 2 , ul )  
[9187] ( ( pen 2 ; move ua , ua + ul ) ; move 2 + ul , 2 )  
[9188] ( move 4 + ul , ua * ua ; pen 0 ; move ul , 3 / 2 )  
[9189] ( move ul , ua + 2 ; pen 4 ; move ua + 3 , ul / 2 )  
[9190] ( pen 3 ; move 3 + ul , 2 ; move 4 - ul , ua + ul )  
[9191] ( pen 3 ; move 3 / ua , 2 ; move ua + ul , ua + 4 )  
[9192] ( move 4 + ul , 4 - ua ; pen 2 ; move 2 , ul - ua )  
[9193] ( pen 4 ; move ua - ul , 3 * 3 ; move ua , ua + 2 )  
[9194] ( move 2 , 0 ; pen ul / 3 ; move ua - 4 , ul + ul )  
[9195] ( move 4 , ua + ul ; move ul - ua , 2 / 4 ; pen 0 )  
[9196] ( pen ul / 4 ; move ul , ul ; move ua + 3 , 0 - 2 )  
[9197] ( move ua , 3 * 2 ; pen ua ; move 4 - ul , ua + 3 )  
[9198] ( move 2 - ua , 4 + ul ; move 4 , 2 + ul ; pen ul )  
[9199] ( pen ua - ul ; move 4 , 4 + ul ; move 2 + ul , 2 )  
[9200] ( move 2 , 2 ; pen ul + ul ; move 4 - ua , 4 + ul )  
[9201] ( ( move 4 , ua / 4 ; move ua , ul ) ; move 4 , ul )  
[9202] ( move 2 , 2 / 3 ; pen 3 - ua ; move ul + ul , ua )  
[9203] ( move ul - ua , 0 ; pen ua ; move 2 / 4 , 4 + ul )  
[9204] ( v4 = ua ; move ua , ul / 2 ; move ul , 2 / 4 )  | ( ( v0 = 2 / 4 ; move ua , v0 ) ; move ul , v0 )  | ( move ua , 2 / 4 ; v0 = 3 + ul ; move v0 / ua , ul )  
[9205] ( move 4 , ul / 3 ; pen 0 ; move ua + ul , 4 + ul )  
[9206] ( move ua , 4 + 4 ; move ua , ul - 3 ; pen 3 + ul )  
[9207] ( pen ua * 3 ; move 4 + ul , 3 ; move 2 + ul , ul )  
[9208] ( move ul - ua , ua * 2 ; ( pen ua ; move 0 , 3 ) )  | ( ( move ul - ua , ua ; pen ua * 2 ) ; move 0 , ua )  
[9209] ( move ua + 2 , 3 / 2 ; pen ua ; move ul / 2 , ul )  
[9210] ( move ua + 3 , 4 ; pen ua * 4 ; move ul , ua + 3 )  
[9211] ( move 4 , ua + ul ; pen ua + ul ; move 4 + 3 , 4 )  
[9212] ( move ul / 3 , 0 ; ( pen 0 ; move ua + ul , ul ) )  
[9213] ( pen ua ; move 4 - ua , ua ; move 4 + 2 , ul - 4 )  
[9214] ( pen ua ; move 0 - 4 , ul - ua ; move 3 / ua , 4 )  
[9215] ( pen 4 + ul ; move 3 / 2 , ul ; move ua + 2 , ul )  | ( pen ua ; ( move ul , ul ; move ul , ul ; move ua + ul , 0 ) )  
[9216] ( move 4 , ua * ua ; move 3 + ul , 2 ; pen ua * 3 )  
[9217] ( move ua - ul , 4 ; pen ul ; move 4 + ul , 0 - 4 )  
[9218] ( move 2 , 4 ; pen 3 - ul ; move ua + ul , 4 - ua )  
[9219] ( move ua + ul , 3 + ul ; move 4 , ul - 4 ; pen 2 )  
[9220] ( move 2 , ul ; move ua + 2 , ua + 4 ; pen ul / 4 )  | ( v0 = 4 ; move 2 , ul ; move v0 + v0 , v0 )  
[9221] ( ( pen 2 ; move 2 , 2 ) ; move 2 , 4 / 3 ; pen 4 )  
[9222] ( move 3 , 3 + ul ; pen 4 ; move ua - ul , ua + 4 )  
[9223] ( move 3 + 2 , 4 + ul ; pen ua ; move ul , ua / 3 )  
[9224] ( move 2 , 3 ; pen ul - ua ; move ua - 4 , 3 - ul )  
[9225] ( move ul - 3 , ua / 4 ; pen ua ; move 3 , 0 - ul )  
[9226] ( move ua / 2 , ul - 3 ; move ul , ua - 2 ; pen 3 )  
[9227] ( pen ua * 3 ; move 4 , ua + 2 ; move ul + ul , 4 )  
[9228] ( move 4 / 2 , ua ; v0 = 3 ; move 4 , v0 * 2 )  
[9229] ( move ul - 3 , 2 ; v0 = 3 / 4 ; move 3 , v0 )  
[9230] ( move 4 + ul , 2 + ul ; move ul , 4 * 3 ; pen ua )  
[9231] ( move 4 , ua + ul ; ( move 2 - ua , 2 ; pen ua ) )  
[9232] ( pen ua ; move 4 - ua , ua ; move 2 - 4 , ul / 2 )  
[9233] ( move 2 - 4 , ua * 2 ; move ul - ua , 4 ; pen ul )  
[9234] ( ( pen 3 ; move 2 , 3 - ua ) ; move ua , ua + ul )  | ( move 0 , ua + ua ; ( pen 3 ; move 2 , 3 ) ; move ua , ul )  
[9235] ( move 4 , 4 * 3 ; pen 2 ; move ua - ul , ua + ul )  
[9236] ( ( pen ua + ul ; move 4 + ul , ua ) ; move 2 , 2 )  
[9237] ( move ua , 2 / 3 ; pen ua + 4 ; move ul , 4 + ul )  
[9238] ( move 4 , 2 - 4 ; v0 = ul / 2 ; move 4 , v0 )  
[9239] ( move ul , 0 ; pen 3 / 4 ; move 4 + ul , ua * ua )  | ( move ul , ua ; move 4 + ul , ua * ua ; ( pen ua ; pen ua ) )  
[9240] ( move 4 , ul ; pen ua - 3 ; move ua / 4 , ua + 2 )  
[9241] ( pen 2 + ul ; move 4 , 2 / ua ; move 4 , ua - ul )  
[9242] ( ( pen 3 ; move ua + ul , ul ) ; move 2 + ul , 2 )  
[9243] ( ( move 2 + ul , ul + ul ; pen 3 ) ; move ua , 2 )  
[9244] ( pen ul ; move ul - 2 , 2 - ul ; move 4 * 2 , ul )  
[9245] ( move 4 + ul , 2 ; pen ua / 2 ; move 2 , ul / ua )  
[9246] ( ( move 3 , ul - 3 ; move 0 - ua , ul ) ; pen ua )  
[9247] ( move ua , 4 + ul ; ( pen ua - ul ; move 3 , 0 ) )  
[9248] ( ( move 3 , 3 ; v0 = 2 ) ; move v0 , 2 / ua )  
[9249] ( ( move 2 + ul , ul - ua ; pen 0 ) ; move ul , 4 )  
[9250] ( ( pen ua ; move 4 + 2 , 2 ) ; move ua , ua * ua )  
[9251] ( pen ul + ul ; move 2 / 3 , 4 ; move ua , ua + 4 )  
[9252] ( move 3 + ul , 3 * 3 ; pen ua + ul ; move 4 , ul )  
[9253] ( pen ul + ul ; move ua , 4 * 3 ; move 3 , ul - 3 )  
[9254] ( move 3 , ul / ua ; pen 0 ; move 4 / 3 , ul - ua )  
[9255] ( pen 2 ; ( move ua + ul , 2 ; move ul + ul , 4 ) )  
[9256] ( pen 4 ; move 4 + ul , 3 + ul ; move 4 , ua - ul )  
[9257] ( move 2 , ua ; ( pen ua * 3 ; move ua , ul - 2 ) )  
[9258] ( ( move ua + ul , 2 * 2 ; pen ua ) ; move 4 , ua )  
[9259] ( move ua , 4 + ul ; pen 3 / 4 ; move 2 - ua , ul )  
[9260] ( move ul , ul ; ( pen 0 - 3 ; move 3 , ua - ul ) )  
[9261] ( move 4 , ua + 3 ; move 3 - ul , ua / 4 ; pen ua )  
[9262] ( ( pen ua ; move ua , 4 ) ; move ua + 3 , ua - 3 )  
[9263] ( move ua , ua - 3 ; move 0 - ua , ul ; move 0 , ua )  
[9264] ( pen ul ; move 3 * 2 , ua * 4 ; move ua , ua - 4 )  
[9265] ( move ua - 2 , ua ; ( move 3 , 4 + ul ; pen ua ) )  
[9266] ( move ul - 3 , 3 + ul ; move 3 - ul , 4 ; pen ul )  
[9267] ( ( move ua - 4 , ul - 4 ; pen ua ) ; move ua , 0 )  
[9268] ( move 3 , ua + ua ; ( pen ua ; move ua - 4 , 4 ) )  
[9269] ( ( move ul , ua ; pen ul / ua ) ; move 3 * 2 , 0 )  
[9270] ( move 4 , ul / ua ; move ua , 4 + 3 ; pen 3 - ul )  
[9271] ( pen ua - 3 ; move 3 + ul , ul ; move 4 / 3 , ul )  
[9272] ( move ul - ua , ua ; pen ul ; move 4 / 2 , 2 / 3 )  
[9273] ( ( pen ua ; move 2 , ua * 3 ) ; move ua + 4 , ul )  
[9274] ( move ul / 2 , ua / 2 ; ( move ua , ul ; pen 0 ) )  
[9275] ( move ua + ul , ul ; ( pen 3 ; move 3 , 3 + ul ) )  
[9276] ( move 0 , ua ; move 0 - ua , ua ; move 4 + ul , ul )  
[9277] ( ( pen ua * 2 ; move ua , ua ) ; move ua , 4 * 2 )  
[9278] ( move ul - 4 , 2 ; move ua + ul , ul ; pen 4 * 4 )  
[9279] ( move ul , ul - 2 ; move ua , 0 ; move ua , ua + 2 )  
[9280] ( move 3 , 3 / 4 ; v0 = 3 / 4 ; move ua , v0 )  
[9281] ( ( pen 2 + ul ; move 4 , ul - 2 ) ; move ua , ul )  
[9282] ( move 4 + ul , ua ; pen ul - 4 ; move 3 , ul / 2 )  
[9283] ( move 3 - ua , ul ; ( pen ul ; move 2 , ua + 4 ) )  
[9284] ( ( move ul , 2 ; pen ul / ua ) ; move ua , 2 - 3 )  
[9285] ( move ua , ul ; move 0 , 3 ; move ua - ul , ua + 2 )  
[9286] ( pen ua - ul ; ( move 2 , 3 ; move ua , ul / 2 ) )  
[9287] ( move ua , ua + ul ; move 2 , 0 ; move 3 - ua , ul )  
[9288] ( pen 3 ; move 4 , 3 / ua ; move ul - ua , 4 - ul )  
[9289] ( move 3 * 3 , ul / 2 ; pen ul ; move ua / 2 , ul )  
[9290] ( move ua , ul - 4 ; ( pen 4 ; move ua , 2 - ua ) )  
[9291] ( move 3 , ua ; move 0 - ua , ua ; move 2 , ul + ul )  | ( move 3 , 0 ; move 0 - ua , ua ; move ul + ul , ul + ul )  
[9292] ( ( move ua - 3 , ua - 4 ; pen ua ) ; move 4 , ua )  
[9293] ( ( pen 2 ; move 4 , ua * ua ) ; move ua , 3 - ul )  
[9294] ( move ul , 3 * 2 ; move ua , ul / 3 ; pen ul - 4 )  
[9295] ( move ul / ua , ua * ua ; move ua + ul , ua + ul )  
[9296] ( move 0 , 2 ; move ul - ua , ua ; move ua , 3 + ul )  
[9297] ( ( move 3 , 2 ; pen 2 ) ; move ua , 4 ; move 0 , 2 )  
[9298] ( move ua , ua + ul ; move 2 / ua , 2 ; move ua , 0 )  
[9299] ( move 3 , 2 + ul ; ( pen 4 + ul ; move ul , ul ) )  
[9300] ( ( pen 4 ; move ul - 2 , 2 ) ; move ua - ul , ul )  
[9301] ( ( move ua , 4 + ul ; pen 4 + 2 ) ; move ul , ul )  
[9302] ( ( move 3 , ua * ua ; pen ua ) ; move 3 , ua * 3 )  
[9303] ( move ua , 0 ; move 2 + ul , ua * ua ; move 2 , ul )  
[9304] ( pen 4 / ua ; move 3 , ua / 2 ; move 4 , ua * ua )  
[9305] ( ( move ua , 2 ; pen ua * 3 ) ; move ul - ua , 4 )  
[9306] ( ( pen 2 ; move 3 - ua , ul ) ; move 4 + ul , ul )  
[9307] ( move ua , 4 + ul ; ( pen ua + 3 ; move ul , 4 ) )  
[9308] ( pen ua ; ( move ul - 4 , 2 ; move 4 , ua + ul ) )  
[9309] ( ( move ua , ul / 2 ; move 4 + ul , ul ) ; pen 2 )  
[9310] ( move 3 , 4 * 4 ; pen ua - ul ; move ul - 4 , ul )  
[9311] ( pen ul ; ( move ul , ua / 3 ; move ua + 3 , 3 ) )  
[9312] ( ( move 4 , ua * ua ; pen 3 ) ; move ul , ua * 2 )  
[9313] ( ( pen 4 ; move 4 , ua + 3 ) ; move ua - ul , ul )  
[9314] ( move 4 , 0 ; move ul - 2 , ua + ul ; move ua , ua )  
[9315] ( move ua + 4 , 4 ; pen ul / ua ; move ul , 4 * 3 )  
[9316] ( move 4 , 2 ; ( pen ua - 4 ; move ul + ul , ul ) )  
[9317] ( ( pen 4 - ul ; move 3 + 2 , ul ) ; move ul , ul )  
[9318] ( ( move ul / 2 , ua * 3 ; pen 2 ) ; move ua , ul )  
[9319] ( move ua , ua + 2 ; move ul , ua - ul ; move 2 , 2 )  
[9320] ( move 4 , 4 ; ( v0 = 4 + ul ; move v0 , 4 ) )  
[9321] ( move ua , ua ; move 2 - 3 , 0 ; move ul - ua , ul )  
[9322] ( move 2 , ul + ul ; ( move ua , 4 / 3 ; pen ua ) )  
[9323] ( ( move ua , ul - 2 ; pen 4 ) ; move ua , ul - 4 )  
[9324] ( move ua , ul ; move 2 - ul , 0 ; move 2 , ua * ua )  | ( move 0 , ua ; move ua + ul , ua + ul ; move 2 , ua * ua )  
[9325] ( move 2 , ul ; move ua + ul , 0 - ul ; move ua , 3 )  
[9326] ( move ua , ua ; move 0 - ul , ua - ul ; move 3 , 2 )  
[9327] ( move ua , 0 - ua ; move ul , ul ; move 2 - ul , 2 )  
[9328] ( move ua - 2 , 2 ; move ul , ua ; move 2 , ua + ul )  | ( move 0 , ua ; move ua - ul , ul + ul ; move 2 , ul )  
[9329] ( v0 = ua + 2 ; move v0 , 0 ; move v0 , v0 )  
[9330] ( move ul , 4 + ul ; pen ua / 4 ; move ua , 4 * 3 )  
[9331] ( move 0 - ul , 2 + ul ; move ua , ul ; move 4 , ua )  
[9332] ( move 2 , ua / 2 ; move ua , ua + ul ; move ua , 2 )  
[9333] ( move ua , 0 ; move ul , ul ; move 4 + 3 , ua + ul )  
[9334] ( move 3 , ua + 2 ; move 2 , ul ; move ul , ua + ul )  
[9335] ( move 0 - ua , ua ; move 2 , ua * 3 ; move ul , ul )  
[9336] ( move ul , 2 ; move 0 - ul , 3 ; move ua , ul - ua )  
[9337] ( move ul , ul ; move 0 - ua , ul ; move 3 + ul , 2 )  
[9338] ( move ua + ul , ul ; move ul - 3 , 0 ; move 2 , ul )  
[9339] ( pen 4 ; ( move 3 - ua , ul ; move ua , 3 / ua ) )  
[9340] ( move ua , ua ; move 2 + ul , ul ; move ua - 3 , 2 )  
[9341] ( move ua + ul , 2 ; move 3 / ua , ul ; move 0 , ua )  
[9342] ( ( pen 2 ; move ua , ul + ul ) ; move 4 , ul / 3 )  
[9343] ( move ul - ua , 3 / ua ; ( move ul , 3 ; pen 3 ) )  
[9344] ( move ua , 0 ; move ua - 3 , 3 ; move ul - ua , ul )  
[9345] ( move ul , ul ; move ua - 3 , ul ; move ua , 0 - 2 )  
[9346] ( move 4 / ua , ul ; move 0 , 2 ; move ua , ua + ua )  | ( move 4 / ua , ua + ul ; pen ul ; move ua , ul + ul )  
[9347] ( move ua , 4 + ul ; ( move 3 , 4 - ul ; pen ul ) )  
[9348] ( move ua , 0 ; move 0 , ul / 3 ; move ul + ul , ul )  
[9349] ( move 2 , ua - 2 ; move ua , ua ; move ua - ul , 3 )  
[9350] ( move ul + ul , 2 ; move 3 , 0 ; move ul , ul + ul )  | ( move 4 + ul , 2 ; v0 = ul ; move v0 , ul + v0 )  
[9351] ( pen ua ; ( move ua , ul ; move ua / 3 , 3 - 4 ) )  
[9352] ( move 3 - ul , ua ; move ua , ua + ul ; move 2 , 2 )  
[9353] ( move 2 , ua + ua ; move ul , 4 ; move ul , 0 - ul )  
[9354] ( move ua , 2 + ul ; move 2 , ul ; move ua , ua - 3 )  
[9355] ( move ua + 2 , ul + ul ; move 4 , ul ; move 0 , ul )  
[9356] ( move ua , 4 ; ( pen 0 ; v0 = 2 ; move 2 , 2 ) )  
[9357] ( move ua + ul , ul ; move ua , 3 + ul ; move 2 , 2 )  
[9358] ( move 2 - ul , 0 ; move ua , ul ; move ua + ul , 4 )  
[9359] ( move ul , 4 ; move ua , ua ; move 2 - ua , 2 + ul )  
[9360] ( move 2 , ua - 2 ; move ul , ul ; move 3 , ua + ul )  
[9361] ( move ul , 4 + ul ; move 0 , ua + ul ; move 3 , ul )  
[9362] ( move 4 , ul ; move ua , 4 ; move 0 - ua , ua + ul )  
[9363] ( move ua + ul , 0 ; move 4 , ua + 4 ; move ul , ul )  
[9364] ( move 4 , 0 ; move ul , ua ; move ul - ua , 3 + ul )  
[9365] ( move 2 - ua , ua ; v0 = 0 - ul ; move ua , ul )  | ( ( v0 = ua ; move 2 - v0 , v0 ) ; move v0 , ul )  
[9366] ( move 2 , ua ; move ul - ua , 0 ; move ul , ul / 2 )  
[9367] ( move 4 - ua , ua ; move 2 + ul , ul ; move ua , 2 )  
[9368] ( move ul , ua - 3 ; move 0 , ul ; move 4 + ul , ua )  
[9369] ( move 4 + 2 , ul + ul ; move ul , 2 ; move ua , ua )  
[9370] ( move ul - ua , ul ; move ua , 4 * 2 ; move 0 , ua )  
[9371] ( move ul , 4 ; move ua , 0 ; move 4 - ua , ua + ul )  | ( move ul , ul ; move ua + ul , 3 ; move 4 - ua , ul )  
[9372] ( ( move ul , 4 ; move ua - ul , ua / 3 ) ; pen 3 )  | ( v0 = ul - ua ; move v0 , ul / v0 ; move ul , v0 )  
[9373] ( ( move 2 , 2 ; move 3 , 4 ) ; move 4 , 0 ; pen ul )  
[9374] ( move ua , ua - ul ; move ul , 0 - ul ; move 4 , 2 )  
[9375] ( v0 = 0 - 2 ; move v0 , ul ; move v0 , v0 )  | ( v0 = 2 ; move v0 , ul - v0 ; move v0 , v0 )  | ( v0 = ul - 3 ; ( move v0 , ul ; move v0 , v0 ) )  | ( ( v0 = ul - 3 ; move v0 , ul ) ; move v0 , v0 )  | ( pen ul ; ( move 2 , ua - ul ; move ul , 2 ) ; move ul , 0 )  
[9376] ( move 3 - ua , ul - 2 ; move ul , 0 ; move ul , ul )  
[9377] ( move ua , 3 ; move ul , 2 + ul ; move 3 , ua + ul )  
[9378] ( move 0 , ul ; move ua , ua ; move 3 / 2 , ua - ul )  
[9379] ( move 3 , ul ; move 2 - ua , 2 ; move ua + ul , ul )  
[9380] ( move 0 , ua ; move 3 + ul , 4 ; move ul - ua , ul )  
[9381] ( move ua , 4 - ul ; move ua , 2 ; move ua , ua + 3 )  
[9382] ( move 4 - ua , 3 ; move ul , 0 ; move ul , ua + ul )  
[9383] ( move 2 , ua - ul ; move 3 , ua - 4 ; move ua , ua )  
[9384] ( v0 = ua - 2 ; move v0 , v0 ; move v0 , 2 )  
[9385] ( move ua , ua ; move ul , 0 ; move 3 / 4 , ua + ul )  
[9386] ( move ua , ul ; move 4 - ua , 0 ; move 4 + ul , ul )  
[9387] ( move ua , ua - ul ; move ul , ua ; move 2 , 4 + 3 )  
[9388] ( move 2 + ul , ul ; move ua , ua + ul ; move 4 , 3 )  
[9389] ( move ua , ul ; move 3 , ul - 3 ; move ul , ua + 2 )  
[9390] ( move ul - ua , 0 ; v0 = ul ; move ua + 3 , ul )  
[9391] ( move ul , 2 ; move ua + ul , ua + 3 ; move ul , 4 )  
[9392] ( move 3 , ul + ul ; move 2 + ul , 3 ; move ua , ul )  
[9393] ( move 3 , ua ; move ul - ua , ul ; move 0 - ul , 4 )  
[9394] ( move ul , 0 ; move ul , 4 + 3 ; move ua - ul , ul )  
[9395] ( move ua / 3 , ua ; move ua , ua - 2 ; move ul , 2 )  
[9396] ( move ua , ua + 4 ; move 3 , ua * ua ; move ua , 3 )  
[9397] ( ( move 2 , ul / 3 ; move 3 , ul / ua ) ; pen ul )  
[9398] ( ( pen ua / 3 ; move 4 + ul , ul ) ; move ul , 4 )  
[9399] ( move ua / 4 , 0 ; move ua , ul - ua ; move 2 , ul )  
[9400] ( move ul , 3 - ul ; move ua , 0 - ul ; move ua , 4 )  
[9401] ( pen ul ; ( move ul + ul , 4 ; move 3 , ua / 4 ) )  
[9402] ( move 3 , ua ; move ul , ua / 3 ; move ul - ua , 0 )  
[9403] ( move ul , ua ; move ua , 4 + ul ; move 4 , ua + 2 )  
[9404] ( move 4 + ul , 4 ; move 0 , ul ; move ua , ua * ua )  
[9405] ( move 3 , 3 ; move 2 , ul + ul ; move ul , ua + ul )  
[9406] ( move ul , ua * ua ; move 3 , 2 ; move 3 - ua , ua )  
[9407] ( move ul , 2 + 2 ; move ua + ul , ul ; move 4 , ul )  
[9408] ( move ua + ul , 3 + ul ; move ua , 4 ; move ul , 2 )  
[9409] ( move 2 + ul , 2 ; move ul , 4 ; move ul , ua + ul )  
[9410] ( move ul , ul ; move 2 , 2 - ul ; move ua , ua + 4 )  
[9411] ( move ua , ua ; ( move ul , 2 ; move ua + ul , 0 ) )  
[9412] ( move 0 , 4 - ul ; move ul , ul ; move 2 - ua , ul )  
[9413] ( move 3 , ul ; move ul , 0 - 4 ; move ul - ua , ua )  
[9414] ( move ua + ul , 2 ; move ul + ul , ul ; move 4 , 2 )  
[9415] ( move ul , ua + ua ; move 3 - ua , 2 ; move ul , 4 )  
[9416] ( move 2 , ua ; move ul - 3 , ul - ua ; move ul , 2 )  
[9417] ( move ul - ua , ul ; ( pen ul ; move 4 , 2 / 4 ) )  
[9418] ( pen ul ; ( move ul , 3 * 3 ; move 4 - ul , ul ) )  
[9419] ( move 0 , 4 ; move ua , ul + ul ; move 2 , ul / ua )  
[9420] ( move ul , 0 - ul ; move 2 , 4 ; move ua - ul , ul )  
[9421] ( move 2 + ul , ul ; move ul , 3 * 3 ; move ua , ua )  
[9422] ( move 4 , ua - ul ; move ua , ua ; move ul , 3 - 2 )  | ( move ua + 3 , ua - ul ; ( move ul , 0 ; move ul , ul ) )  
[9423] ( move 4 + ul , ua ; move ua , ul - ua ; move 2 , 4 )  
[9424] ( move ua , ua ; move 3 , ua * ua ; move 3 , ua * 3 )  
[9425] ( move ua , ul / 4 ; ( pen ua ; move 4 , 4 - ul ) )  
[9426] ( move 2 , ua * ua ; move ua - ul , 4 ; move ua , 3 )  
[9427] ( pen ul ; ( move 4 / ua , 4 + ul ; move 4 , ul ) )  
[9428] ( move 3 , ua + 3 ; move ul , ul ; move 2 / ua , ua )  
[9429] ( move 2 - ua , ua ; move ua - ul , ul ; move 4 , 3 )  
[9430] ( move ul , ul - 4 ; move ua , ua - ul ; move 2 , 2 )  
[9431] ( move ul , 4 ; move ul , ua - 2 ; move ua , 2 - ul )  
[9432] ( move ua , ul / 2 ; move 3 , ul ; move 2 + ul , ua )  
[9433] ( move 0 , ul ; move ua - ul , 3 / ua ; move 3 , ul )  
[9434] ( move ul , ua * ua ; move ua , 4 ; move 2 , 3 + ul )  
[9435] ( move 4 , ua * ua ; move 4 , ul + ul ; move ul , 0 )  
[9436] ( move ua , ua ; move 4 + ul , 2 + ul ; move ul , 4 )  
[9437] ( move ua , ua + 3 ; move ul , 4 - ul ; move ul , 2 )  
[9438] ( move ua + ul , ua ; move 4 , ua + 3 ; move 4 , ul )  
[9439] ( move 4 , ua + 2 ; move ul , 3 ; move ul + ul , ul )  
[9440] ( move ua , 4 + 2 ; move ul , ua - ul ; move ul , 3 )  
[9441] ( move 2 , ul ; move 0 , ul / ua ; move 3 - ul , ul )  
[9442] ( move ua , ua + ul ; move 3 / 2 , ul ; move 2 , ul )  
[9443] ( move ul + ul , ua / 3 ; move ua , ul ; move 2 , 2 )  
[9444] ( move 4 , 3 - ul ; move ua + ul , 2 ; move ul , ua )  
[9445] ( move ul , ua + ul ; move 3 , ul ; move 2 , 2 / ua )  
[9446] ( move ua , ua - ul ; move ua , 2 ; move 4 , 3 - ul )  
[9447] ( move 3 , 3 - ua ; move 3 , ua ; move ul - ua , ul )  
[9448] ( move ul , 0 - ul ; move 4 , 4 ; move ul - ua , ua )  
[9449] ( move ua + ul , ul - 2 ; v0 = ua ; move ul , 2 )  | ( move ua + ul , ua - ul ; ( v0 = 2 ; move ul , v0 ) )  
[9450] ( move ul , 2 + ul ; move ul , ul ; move ua , 3 * 2 )  
[9451] ( move ul , ua ; move ul - ua , 2 - 3 ; move 3 , ul )  
[9452] ( move 0 , ul ; move 2 , ul / 4 ; move ua , ul + ul )  
[9453] ( move ul , ul - 3 ; move ua , 4 ; move ua , ua + 3 )  
[9454] ( move ua , ul ; move ul , 2 + 2 ; move ua , 4 / ua )  
[9455] ( move 0 , ul ; move 3 , ul / ua ; move 4 , ua + ul )  
[9456] ( move 3 , ul ; move 4 - ul , ua + 2 ; move ua , ul )  
[9457] ( move ul / 2 , 2 ; move ul , ul / ua ; move ua , 0 )  
[9458] ( move ua , ua - ul ; move 0 , 3 ; move ua , ul / 4 )  
[9459] ( move ua , 3 - ul ; move ul , 2 ; move ul , ul - 2 )  
[9460] ( move ua , 4 + ul ; move ul , 0 ; move ul - 4 , ul )  
[9461] ( move ul , 4 ; move ua + 3 , ua ; move ul , ua + 4 )  
[9462] ( move ua - 3 , ul ; move 3 , ul / ua ; move ul , 0 )  
[9463] ( move ul , ul ; move 0 , ua / 3 ; move ua - ul , 3 )  
[9464] ( move 3 + ul , ua ; move ua , ul ; move ua - 3 , 4 )  
[9465] ( move ua + ul , 2 ; ( move 0 , ul ; move ua , ul ) )  | ( move ua , 2 ; move ul , ua ; ( move ua , 2 ; pen ua ) )  | ( ( move 2 , ul + ul ; move ua - ul , ua ) ; move ua , 2 )  | ( pen ul / ua ; ( move ua + ul , 2 ; move ua , ul + ul ) )  
[9466] ( move 3 , ul + ul ; move 4 , ul ; move 2 , ua + ul )  
[9467] ( move 3 , ul - ua ; move 3 , 2 ; move ul + ul , ul )  
[9468] ( move ul , ul - 3 ; move 0 , ul / ua ; move 3 , ua )  
[9469] ( ( move 2 , 2 ; move 4 , ul ; move 2 , 4 ) ; pen 3 )  
[9470] ( move ua , 4 + 4 ; move ul + ul , 2 ; move ua , ul )  
[9471] ( move ul / 2 , 0 ; move ul , ua ; move ua , 3 / ua )  
[9472] ( move 4 - ul , ua + ul ; move ul , 2 ; move 3 , ul )  
[9473] ( move ua , ua - 4 ; move ul , ul ; move ua - 4 , 2 )  
[9474] ( move ua , ua * 2 ; move ul , 3 + ul ; move ul , 4 )  
[9475] ( move 4 , 2 ; move 3 , ul + ul ; move ua - ul , ul )  
[9476] ( move 2 , ul ; move ua - 3 , ul - 3 ; move ul , ul )  
[9477] ( move ul , ua + ua ; move ul , 4 ; move 4 - ul , 2 )  
[9478] ( move ul , ul ; move 3 , 3 ; move ul - 2 , ul - ua )  
[9479] ( move 2 , 3 / ua ; move ua , ul + ul ; move 4 , ua )  
[9480] ( move ua , ua ; move ul , ul - 3 ; move ua , 3 - 4 )  
[9481] ( move 3 , ua ; move ul + ul , 3 / ua ; move 3 , ua )  
[9482] ( move ua + ul , ul ; move ul , ul - 3 ; move 4 , 2 )  
[9483] ( move ua - ul , 0 ; pen 0 ; move 0 - ua , ua * ua )  
[9484] ( v0 = 2 ; move v0 , 4 + ul ; move v0 , v0 )  
[9485] ( v0 = 4 ; move v0 , 0 ; move v0 , ua / v0 )  
[9486] ( move ul , ua - 3 ; move 2 , ua * ua ; move 4 , ul )  
[9487] ( v0 = 4 + ul ; move v0 , 2 ; move v0 , v0 )  
[9488] ( move ua / 2 , 3 ; pen 0 ; ( pen 0 ; move 2 , 0 ) )  
[9489] ( move ul , 0 ; move 4 , ua * ua ; move ua / 3 , ul )  
[9490] ( move 3 , ua + ul ; move ul , 3 / ua ; move ua , 3 )  
[9491] ( move ul , 3 ; move 2 - ua , ua ; move 3 / ua , ul )  
[9492] ( move ul - ua , 3 ; move ua + 3 , ul ; v0 = ua )  
[9493] ( move ul , ua ; move 4 , 3 - ul ; move ul , 2 - ua )  
[9494] ( move ul , ul - 4 ; move ua , ul ; move 0 - 4 , ul )  
[9495] ( move 2 , ul ; move 3 , ua - ul ; move ua / 2 , ul )  
[9496] ( move 2 , 2 - ul ; move ul , 4 ; move ul , ua * ua )  
[9497] ( move 4 , ua ; move 4 , ua + ul ; move 4 + ul , ua )  | ( v0 = 4 + ul ; move 4 , ua ; move v0 + 4 , ul )  
[9498] ( move ul , ul ; move ul - 4 , ua ; move ua - 3 , 2 )  
[9499] ( v0 = 3 ; move v0 , v0 ; move ul - v0 , 2 )  
[9500] ( move 2 , ul ; move ul , ul + ul ; move 2 - ul , 4 )  | ( move ul + ul , ul ; move ul , 2 ; move ul , 3 + ul )  | ( ( move 2 , ul ; move ul , ua + 2 ) ; pen ul ; move ul , 4 )  
[9501] ( move ua - 2 , ul ; move ul - ua , 2 ; v0 = ul )  
[9502] ( move ul , ua + 4 ; move 3 , ul ; move 3 + ul , ul )  
[9503] ( move 2 , ul ; move ul , 4 + ul ; move 4 , ua + ul )  
[9504] ( move ul , ul ; move ul , ua + 4 ; move ua / 2 , 2 )  
[9505] ( move ul + ul , 3 ; move 2 - 4 , ul ; move ua , ul )  
[9506] ( move ua , ua ; move ul + ul , 4 ; move 3 * 2 , ul )  
[9507] ( move ua + 3 , ul ; move 2 - ua , ul ; v0 = ul )  
[9508] ( move 2 - ua , ul / ua ; move 2 , ul ; move 3 , ul )  
[9509] ( move ua + ul , ul ; move ul , 3 * 3 ; move 3 , ua )  
[9510] ( move ua , ul ; move ul , 2 / ua ; move 3 - ul , 2 )  
[9511] ( move 2 , 2 / 4 ; move ul , ul + ul ; move ua , ua )  
[9512] ( move 4 + ul , 2 / ua ; move ul , 2 ; move ul , ua )  
[9513] ( ( move ua , ua ; move ul , 2 ) ; move ua , ua + 3 )  
[9514] ( move ul , 3 ; move 0 - ul , ul ; move ua , ua / 4 )  
[9515] ( move ul , ua - 3 ; move ua , 3 / ua ; move ua , 3 )  
[9516] ( move 4 , ul ; move ua - 2 , 3 ; move ua - ul , ul )  
[9517] ( move 3 , 4 - ul ; move ul , ua + ul ; move ua , 4 )  
[9518] ( move 4 , ua + ul ; move 3 , ua - ul ; move 4 , ul )  
[9519] ( move ul , ul / 2 ; move ua , 0 ; move ul , 4 / ua )  
[9520] ( move ul , 3 + ul ; move 2 / ua , 4 ; move ua , ul )  
[9521] ( move 4 , ua ; move ul , 3 + ul ; move 4 - ua , ul )  
[9522] ( move ul , 0 - ul ; ( move ua , ua ; move 3 , ul ) )  
[9523] ( move ua / 3 , 4 ; move ul , ua + ul ; move 2 , ul )  
[9524] ( pen ua ; move ua + ul , 0 ; move 0 - 2 , ua * ua )  
[9525] ( move 4 , ua - ul ; move 4 + ul , ua ; move 3 , ul )  
[9526] ( move ul - ua , 3 ; move ua / 2 , ua ; move 4 , ul )  
[9527] ( move ul , 3 ; move ul , ua + ul ; move 4 * 2 , ul )  
[9528] ( move 4 + ul , ua - ul ; move ul , 4 ; move 3 , ua )  
[9529] ( move ul , 2 ; move 2 , ul ; move ul + ul , ul / 3 )  
[9530] ( move ul , 4 ; move 3 , ul ; move ua - ul , ua + 4 )  
[9531] ( move ua , 3 ; move 4 / ua , ua + ul ; move ua , 4 )  
[9532] ( move ua , ua - 2 ; move ul , ul ; move ua , 3 / 4 )  
[9533] ( move 4 - ua , ul + ul ; move 2 , ua ; v0 = ul )  | ( move ul , 2 ; ( move ul , ua ; move 4 - ua , ua ) )  | ( ( move 2 , 2 ; move 4 - ua , ua ) ; move 0 , ua * 3 )  
[9534] ( move ul , 0 ; move ua / 4 , ul / 2 ; move ua , ul )  
[9535] ( move ul , ul ; move ua / 3 , 4 ; move 2 - ua , ua )  
[9536] ( move ul + ul , 3 ; move 3 , ul ; move 3 - ul , ul )  
[9537] ( move ul , ul ; move ua , ul - 3 ; move ul - 3 , 3 )  
[9538] ( v0 = 3 ; move v0 , v0 ; move v0 - ua , 4 )  
[9539] ( move 2 , ua ; ( move ul , 0 - ul ; move ul , ul ) )  
[9540] ( move 3 , ul / ua ; move ul , 3 + ul ; move 2 , ul )  
[9541] ( move 2 , ua - ul ; move ul , 4 / 3 ; move ua , ua )  
[9542] ( v0 = 4 ; move ua , v0 ; move v0 + 4 , v0 )  
[9543] ( move 4 , 3 / ua ; move ua , 4 ; move ul , ua + ua )  
[9544] ( v0 = 4 ; move v0 , 3 ; move ul + v0 , v0 )  | ( move 4 , 3 ; move 0 , 4 ; ( move 4 , ua ; move ul , 0 ) )  
[9545] ( move 4 - ul , ua ; move ul , ul ; move 4 , 2 + ul )  
[9546] ( ( move ul - ua , 0 ; move ua , ul ) ; move ua , 4 )  
[9547] ( move ul , ul ; move ua , ul / 3 ; move 0 - 4 , ul )  
[9548] ( move ua , ul + ul ; move ul , 3 ; move 4 + ul , 4 )  
[9549] ( move 2 , ua ; move ul , 4 / ua ; move ul , 3 + ul )  
[9550] ( move 3 , ua ; move ul - 4 , ua ; move ua - 4 , ul )  
[9551] ( move 4 / ua , ua ; move 2 + ul , ul ; move 3 , ul )  
[9552] ( ( move ua , ul ; move 2 , ua ) ; move ul , ua - 2 )  | ( ( move ul , 2 ; move ul , 2 ) ; move ua + ul , ul / ua )  
[9553] ( v0 = 4 ; move v0 + ua , v0 ; move v0 , 4 )  | ( v0 = ua + 4 ; move v0 , v0 ; move 3 + ul , v0 )  
[9554] ( move 3 , ua * ua ; move ul - 3 , ul ; move 3 , ul )  
[9555] ( move ul , ua ; move ua + ul , ul ; move 4 * 2 , 4 )  
[9556] ( move ul , ul ; move 3 , ul ; move ul - 4 , ua + 3 )  
[9557] ( move 4 + ul , ua ; move 3 , ul / ua ; move 2 , ul )  
[9558] ( move ua - 4 , ul ; move 3 - ul , ul ; move ua , 3 )  
[9559] ( move 2 , ua ; v0 = 4 ; move v0 , v0 * v0 )  
[9560] ( move ua - ul , ul ; move 3 , 3 * 2 ; move ul , ul )  
[9561] ( move 4 + ul , 4 ; move ul , ul ; move 4 , ua + ua )  
[9562] ( move 4 , ua ; move 3 , ua + ul ; move 4 / ua , ul )  
[9563] ( move 4 , 3 ; move ul , ul ; move ul / 2 , ua + ul )  
[9564] ( move 4 - ul , ul ; move ul , 2 + ul ; move 4 , ul )  
[9565] ( ( move ul , ul ; move 2 - ua , ua ) ; move 2 , ul )  
[9566] ( move ua , 0 ; pen 2 - ua ; move 2 + ul , ua + ul )  | ( ( move ua , ua ; pen 0 ) ; move 3 , ul ; pen ua - ul )  
[9567] ( move ul + ul , 4 ; move ul , 3 / ua ; move ua , 3 )  
[9568] ( move ul , 4 ; move 4 , ul ; move ul - 3 , ua + ul )  
[9569] ( move ul , ul ; ( move ua , ul ; move 2 , ua - 2 ) )  
[9570] ( move ul - 4 , 3 ; move 2 , ul / ua ; move ua , ul )  
[9571] ( move ua + 2 , 0 ; move 2 - ua , ua + ul ; pen ul )  
[9572] ( move 3 + ul , ul ; move 3 / ua , ul ; move 3 , ul )  
[9573] ( move ul , ua - 3 ; move ul , 4 ; move 4 - ua , ul )  
[9574] ( move ua - ul , 4 ; move 3 , ua * ua ; move 4 , ul )  
[9575] ( move 4 , ua - 4 ; move ua , ul + ul ; v0 = ua )  
[9576] ( move ul , ua + ua ; ( move ul , 2 ; move 3 , ul ) )  
[9577] ( ( move ua , ua ; move ua , 4 ) ; move ua , ua + 4 )  
[9578] ( move 2 - ua , ua + 2 ; pen ua ; move 0 , ul - ua )  
[9579] ( move 3 + ul , ua ; move 4 , ua * ua ; v0 = ul )  
[9580] ( move 3 + 2 , 3 ; ( pen 0 ; move 3 , 0 ; pen ul ) )  
[9581] ( move ua , ua ; ( move 3 , 3 + ul ; move ua , ul ) )  
[9582] ( move ul , ul ; move ua , 4 * 3 ; move ua , ul - 3 )  
[9583] ( move ua - 3 , 2 ; move ul / 3 , ul ; move ul , ul )  
[9584] ( move ul , 4 ; move ul , ul ; move ua - 4 , ul - 2 )  
[9585] ( move ul , ul ; ( move ua , 0 ; move ua , ua / 3 ) )  
[9586] ( move ul , ua ; move ul , ua / 3 ; move 4 - ua , 3 )  
[9587] ( ( move ua , ua ; move ua , 2 ) ; move ul - 3 , ul )  
[9588] ( move ul , ul ; move ul , 3 ; move 4 + 4 , ul + ul )  
[9589] ( move ul - ua , ul ; move ul , 4 ; move 2 , 3 / ua )  
[9590] ( move ua , ua ; move ua - 4 , 4 ; move ul , ul - 4 )  
[9591] ( move ul , 0 ; move ul / 4 , ul + ul ; move 4 , ul )  
[9592] ( ( move ul , ul ; move ua , ul ) ; move ua - 4 , 0 )  
[9593] ( ( move ua , 2 - ul ; move ua , 2 ) ; move ul , ul )  | ( ( move ua , ul ; move ua , 2 ) ; move ul , ul ; pen 4 )  | ( move ua , ul ; move ua , 2 ; ( move ul , ul ; pen ul ) )  
[9594] ( v0 = 3 ; move ul , v0 ; move v0 , v0 * 4 )  
[9595] ( move ul , ul / 3 ; move 4 + 3 , ul ; move ul , ua )  
[9596] ( ( move ul , ul ; move ua , ul ) ; move 3 + ul , 2 )  
[9597] ( move ul , ua ; move 4 , ua / 4 ; move ul , ua + 4 )  
[9598] ( move 3 , 2 ; ( move ul , ua ; move ua - ul , ul ) )  
[9599] ( move ua + 2 , 0 ; move ua - ul , 2 ; pen ul + ul )  
[9600] ( move 2 , ul / 3 ; move ul / 2 , ul ; move ua , ul )  
[9601] ( move ul , ua ; move ul / 3 , ua * 2 ; move 4 , ul )  
[9602] ( move ul / ua , ul ; move ua , ul / 3 ; move 2 , 3 )  
[9603] ( move 4 + ul , 3 ; move ul , 4 - ul ; move ul , ul )  
[9604] ( ( move ua , 2 + ul ; move 3 , ul ) ; move ul , ul )  
[9605] ( move ul - ua , ul ; move 2 , ul ; move ul , 3 / 4 )  
[9606] ( move ua , 4 * 3 ; move ul / 2 , ua ; move ul , ul )  
[9607] ( move ua , 4 ; ( move ul , ua + ul ; move ua , 3 ) )  
[9608] ( move ul , 4 ; move ul - ua , ul ; move ul , 3 * 3 )  
[9609] ( move 3 - ua , 4 ; move ul , ua * ua ; v0 = ul )  
[9610] ( move 3 + ul , ul ; ( move 2 , ul ; move ul , ul ) )  
[9611] ( v0 = 4 ; move v0 , ul / v0 ; move v0 , 3 )  
[9612] ( ( move ul , ul ; move ua , ua + ul ) ; move 3 , 4 )  
[9613] ( ( move ul , 3 ; move 2 , ul ) ; move ul , ua * ua )  
[9614] ( v0 = 4 ; move v0 , ul / 3 ; move v0 , v0 )  
[9615] ( pen ua ; move 0 - ua , 2 - ua ; move ua , 4 - ua )  
[9616] ( ( move ua , ul ; move ua - ul , 4 ) ; move 2 , ul )  
[9617] ( move ua / 4 , 3 - ua ; move 4 , ul ; move ul , ul )  
[9618] ( move ul , 4 - ul ; move 4 , ul ; move 2 , ul / ua )  
[9619] ( ( move ua , ul ; move ua , ua / 4 ) ; move ua , 2 )  
[9620] ( move ul , ul / 4 ; move ua - ul , 3 ; move ua , 4 )  
[9621] ( v0 = ua / 4 ; move 4 , v0 ; move v0 , v0 )  
[9622] ( move ul , ul ; ( move ua , ua ; move ua , 4 + 4 ) )  
[9623] ( move 3 , 4 / ua ; move ul , ua - ul ; v0 = ua )  
[9624] ( move ua , 3 ; ( move ul , 2 ; move ul / ua , ua ) )  
[9625] ( move ua + 2 , ul ; pen ua - 3 ; move ul + ul , 0 )  
[9626] ( pen 0 ; ( move 2 , 0 ; pen ua ) ; move 4 , 3 - 4 )  
[9627] ( move ua - ul , ul - 4 ; move ua , 4 ; v0 = ul )  
[9628] ( move ua / 3 , ua ; ( move ua , ul ; move ua , 3 ) )  
[9629] ( v0 = ua / 4 ; move v0 , v0 ; move 4 , v0 )  
[9630] ( v0 = 4 ; move v0 , 3 / v0 ; move v0 , ul )  
[9631] ( move ul , 2 ; move ul / 3 , ul ; move ua , ua / 4 )  
[9632] ( move 3 , 3 ; ( move ul , ua - ul ; move ul , ul ) )  
[9633] ( move 2 , ua ; ( move 3 , ul ; move ul / ua , ul ) )  
[9634] ( move ua , ul / 2 ; move ul , 4 ; move ul , ua / 4 )  
[9635] ( move ua , ul ; ( move ul , ul ; move 2 , ul - 4 ) )  
[9636] ( move 3 - ua , 0 ; pen ua - ul ; move 2 - ua , ul )  
[9637] ( move ua , ua - 4 ; move ul , 4 / ua ; v0 = ul )  
[9638] ( move ua , 2 ; v0 = 0 - ul ; move 3 , 4 * v0 )  
[9639] ( move ul - 4 , 3 ; move 4 / ua , ul ; move ul , ul )  
[9640] ( ( move 4 , ua ; move 4 , ua ) ; move ul - ua , ul )  
[9641] ( ( move ua , 2 / ua ; move ul , 3 ) ; move ul , ul )  
[9642] ( move 3 + 2 , ua ; pen ua + ul ; move ua - ul , 2 )  
[9643] ( ( move ul , 3 + ul ; move ul , 4 ) ; move ua , ul )  
[9644] ( ( move ul , ul ; move ul , ul ) ; move ua , 4 + 3 )  
[9645] ( move 2 , 4 ; v0 = 3 + ul ; move 2 + v0 , ul )  | ( ( move ul , 4 ; move ul , 0 ; move 3 * 2 , ul ) ; pen ul )  
[9646] ( move ul - ua , ul ; move ua , ul / 4 ; v0 = 3 )  
[9647] ( ( move ua , ul - 2 ; move ul , 4 ) ; move ul , ul )  
[9648] ( pen ua ; ( move 3 , 2 ; move 2 - 3 , 2 ; pen 3 ) )  
[9649] ( move ul - 4 , 0 ; pen 0 - ul ; move ul , ua - ul )  
[9650] ( move ua , 2 ; ( move ul / ua , ul ; move 4 , ul ) )  
[9651] ( move 0 , ul - 3 ; pen 3 - ua ; move ul - ua , ua )  
[9652] ( move ul , 4 / ua ; move ua , 4 / ua ; v0 = ua )  
[9653] ( move ul , ua + ul ; pen 3 - 4 ; move 0 - ua , ua )  
[9654] ( pen 2 + ul ; move ua - 3 , ua ; move ua , ul - 2 )  
[9655] ( v0 = 3 - ua ; move ul , 0 ; move 3 , v0 * 4 )  
[9656] ( ( move ul , ul ; move ul , ul ) ; move 2 , 3 / ua )  
[9657] ( move ua - ul , ul ; pen 0 - ul ; move 4 , ua + 2 )  
[9658] ( move ua - 4 , ua + ul ; pen 0 ; move ua + ul , 4 )  
[9659] ( v0 = 0 - ua ; move ul , 2 / 3 ; move v0 , 4 )  
[9660] ( move 2 , 3 * 3 ; v0 = 3 ; move v0 - ua , ua )  
[9661] ( move ua , 4 + ul ; pen ua * ua ; move 0 , ua + 4 )  
[9662] ( ( move ul , ul ; move ul , ul ) ; move 3 , ul - 3 )  
[9663] ( pen ul ; move 2 , 2 - ua ; move 3 - ua , ua + ul )  
[9664] ( move ul , ua ; move ul / 4 , 4 ; move ua , ua / 4 )  
[9665] ( move ua , 2 + ul ; pen 3 + ul ; move ul , 2 + ul )  
[9666] ( move 3 , 0 ; ( pen ul - 2 ; pen 3 ) ; move 4 , 2 )  
[9667] ( move 4 + 3 , ua + ul ; pen ua - ul ; move ul , 0 )  | ( move ua + ul , ul ; pen ua - ul ; move ul , ua * 3 )  
[9668] ( pen 2 ; move ua - 2 , 3 - ua ; move ua , ua - ul )  
[9669] ( ( move ul , ul ; move ul , ua / 4 ) ; move ua , 2 )  
[9670] ( move 4 , ul / 3 ; move ul , ul ; move ul , ul / 2 )  
[9671] ( ( move ul , ua ; move ul , 4 ) ; move ul - 4 , ua )  
[9672] ( move 3 , ul ; ( move ul / 3 , ul ; move ua , ua ) )  
[9673] ( move 4 + 4 , 4 ; v0 = ua ; move v0 , 2 + ul )  
[9674] ( move ua , 0 - ul ; pen ua ; move ul - 4 , ua - 3 )  
[9675] ( ( move ul , 4 ; move ul , ua * ua ) ; move 4 , ul )  
[9676] ( move ul , ul / 2 ; ( move ul , 4 ; move ua , ul ) )  
[9677] ( move 2 + ul , ul ; pen ul + ul ; move 2 , ua + 4 )  
[9678] ( move ua + 2 , 4 ; pen ua * ua ; move ul / ua , 0 )  
[9679] ( move 2 , ua - 3 ; move ul + ul , 2 + ul ; pen ul )  | ( move 3 - ul , ua - 3 ; v0 = 2 + ul ; move 2 , v0 )  
[9680] ( move ua - ul , 0 ; ( pen ua ; move ua , 0 - ul ) )  
[9681] ( ( move ul , ul ; move ua , 4 ) ; move ul , ua / 3 )  
[9682] ( move ua + ul , 3 / ua ; pen ua * 2 ; move ul , 0 )  
[9683] ( move ul , 0 ; ( pen 0 - ua ; move ul - ua , ua ) )  
[9684] ( move ua , 3 - ua ; pen ua + 3 ; move ul , 3 + ul )  | ( move ua , 3 ; ( pen 4 / 2 ; pen ua * 3 ) ; move ul , 4 )  
[9685] ( move ua + ul , 0 ; pen ul / ua ; move 3 , 3 + ul )  
[9686] ( move 4 + ul , ul ; pen 0 ; move ua - 4 , ua + ul )  
[9687] ( move ul , 3 ; ( move ua , ul / ua ; move ul , 4 ) )  
[9688] ( move ul - 3 , ua + ua ; move 3 - ul , 2 ; pen ua )  
[9689] ( move ua + 3 , ul - ua ; pen ua + 4 ; move ul , 2 )  
[9690] ( move ul + ul , ua + 4 ; pen ua ; move 3 + ul , 2 )  
[9691] ( ( pen 3 / ua ; pen 3 ) ; move 3 , 0 ; move 3 , 2 )  
[9692] ( move 4 + 3 , 3 ; v0 = ua ; move 3 , v0 * ua )  
[9693] ( move ua + 2 , 2 / ua ; move ul , 4 + ul ; pen ua )  
[9694] ( pen ua - 2 ; move 3 , 4 ; move ul + ul , ua + ul )  
[9695] ( move ua - ul , ua ; pen ua * 2 ; move 3 , 3 + ul )  
[9696] ( ( move ua , ul ; move ul , ul ) ; move 3 , ul / 4 )  
[9697] ( pen ua + 4 ; move ua + ul , 3 + ul ; move 3 , ul )  
[9698] ( pen ul + ul ; move 2 , ua + 2 ; move ua / 3 , ul )  
[9699] ( move ul - 3 , ua ; pen ua + ul ; move 3 - ul , 2 )  
[9700] ( v0 = 3 + 3 ; move ua / 3 , v0 ; move 3 , ul )  
[9701] ( pen ul ; move ua + ul , ul ; move 3 + 3 , ua - 3 )  | ( v0 = ul ; move ua + v0 , ul ; move ua , ul - 4 )  
[9702] ( ( move ua , ul ; move ua / 4 , ul ) ; move 4 , ul )  
[9703] ( move ua + 3 , 4 + 3 ; pen ua + ul ; move ul , ul )  
[9704] ( move ua + ul , 2 - ua ; pen ua ; move 3 / 2 , ul )  
[9705] ( move ul , ul / 3 ; ( move 4 , ua ; move ul , ul ) )  
[9706] ( move 0 - 2 , 3 - ul ; move ua , ul / ua ; pen ul )  | ( move ul , ua + ul ; move ul - 3 , ul ; move ua , ul / ua )  
[9707] ( pen ua ; move ua , ua - 2 ; move ul - 3 , 3 - ul )  
[9708] ( ( move ua , ul ; move ul , 4 ) ; move ul / 3 , ul )  
[9709] ( pen ul + ul ; move ua , ua + 4 ; move ul - 4 , 2 )  
[9710] ( move ua , ul - ua ; pen ua * 3 ; move 2 , 4 + ul )  
[9711] ( move ua , ua ; pen ua + ul ; move 0 - 4 , ul / 4 )  
[9712] ( move ul , 4 / ua ; move ua - 2 , 2 ; pen ua + ul )  
[9713] ( pen ul ; move 3 , ul - 2 ; move 3 - ua , ul + ul )  
[9714] ( pen ul ; move 2 + ul , 2 ; move 4 - ul , ua - ul )  | ( move 2 , ul + ul ; move 2 - ul , 0 ; move 3 , ua - ul )  
[9715] ( move ua - ul , 3 ; v0 = 4 * 2 ; move v0 , 4 )  
[9716] ( ( move ua + 3 , 4 ; v0 = ua ) ; move v0 , 2 )  
[9717] ( move ul - 4 , 3 ; v0 = ul ; move v0 + 3 , 4 )  
[9718] ( move ul , 2 ; move ua - ul , ua - 4 ; pen 3 - ua )  
[9719] ( pen ul ; move ua + 2 , ul ; move 4 * 2 , ul + ul )  
[9720] ( move ul - 3 , ua + 3 ; pen ua ; move ul - 3 , ul )  
[9721] ( move 2 , ul + ul ; move ua , ua - 4 ; pen ua / 2 )  
[9722] ( move ua - ul , 4 / 3 ; pen ua + ua ; move 2 , ua )  
[9723] ( move 3 , ua + ul ; pen ua + ua ; move 2 , ul / 4 )  
[9724] ( move 3 - ua , ul / 3 ; pen 0 - ul ; move ua , ul )  
[9725] ( pen 2 ; move ul / ua , ul - 3 ; move ua + 2 , ul )  
[9726] ( v0 = ul - 2 ; move 4 , ul ; move v0 / 3 , 2 )  
[9727] ( move 3 , 2 ; ( v0 = 2 ; move ul - ua , v0 ) )  
[9728] ( move 2 , ua + ul ; pen ul - 3 ; move 4 - ua , ul )  
[9729] ( move ua - ul , ua * ua ; pen 3 ; move ua + 3 , 4 )  
[9730] ( move 3 + ul , ul / ua ; pen 2 + ul ; move ul , 2 )  
[9731] ( move 4 + ul , ul ; pen ua + ua ; move ua , 3 / 2 )  
[9732] ( pen ul ; move ul , ua + 4 ; move ua + 2 , 3 / ua )  
[9733] ( pen ua - ul ; move 2 + ul , 4 ; move 4 , ul + ul )  
[9734] ( ( move ua , 4 ; v0 = 2 ) ; move 3 , ua - v0 )  
[9735] ( pen ul ; move 3 , 4 * 2 ; move ua - ul , ua + ul )  
[9736] ( pen 0 ; ( ( move 4 , 3 ; pen 3 ) ; move ua , 2 ) )  
[9737] ( move 3 + ul , ua ; pen ua * 2 ; move ul / 2 , ul )  
[9738] ( move 3 , 4 ; v0 = ua + 4 ; move 4 , v0 / ua )  
[9739] ( pen ua ; move ua + 4 , ua - ul ; move ul , 4 * 2 )  
[9740] ( move ul - ua , ua + ul ; pen ul ; move 3 , 4 + 4 )  
[9741] ( move 3 + ul , ua ; pen ua ; move ul / 3 , 3 + ul )  
[9742] ( move ua , 2 / ua ; pen ua - ul ; move ul , 4 - 2 )  
[9743] ( move 3 , 3 + ul ; pen ua - 4 ; move ul , ul + ul )  
[9744] ( move ul + ul , 4 + ul ; pen 4 ; move 3 + ul , ua )  
[9745] ( move 4 - ul , ua / 4 ; pen 0 ; move ul , ul + ul )  
[9746] ( move ua , 2 + ul ; pen 4 ; move ul + ul , 4 / ua )  
[9747] ( move 3 - ul , 4 ; move ul - ua , ul - 2 ; pen ul )  
[9748] ( move ul , ul ; ( pen 0 ; move ua - ul , ua + 4 ) )  
[9749] ( move ul , ua * ua ; pen 3 ; move 3 + ul , 3 / ua )  
[9750] ( v0 = ul ; move v0 , 3 * 3 ; move 4 - ul , 4 )  
[9751] ( ( move 2 , 2 ; pen 0 ; move ul , 0 ) ; move ul , 2 )  
[9752] ( pen 3 - ul ; move 3 , ua / 2 ; move ul , ul + ul )  
[9753] ( ( move ul + ul , 3 ; pen 2 ) ; move ua , ua + ul )  | ( move ul + ul , 3 ; pen ul ; ( pen 2 ; move ua , ul ) )  
[9754] ( move ul - ua , ua ; move ua , 2 / 4 ; pen ul - 3 )  
[9755] ( ( move ua , ul ; pen ua + ul ) ; move ua + 2 , 4 )  
[9756] ( move ul , ul + ul ; pen ua + 4 ; move 4 , 3 - ul )  
[9757] ( pen ul ; move ua , ul - 4 ; move ul - ua , 4 + 3 )  
[9758] ( move 4 , ua + 2 ; move 3 - ul , ul / ua ; pen ul )  
[9759] ( move 0 , ul + ul ; pen ul / ua ; move ua , 4 * 4 )  
[9760] ( ( move ul - ua , 0 ; pen 4 + ul ) ; move ua , ul )  
[9761] ( ( move ua , ul ; pen ul ) ; move ua - 2 , 2 - ua )  
[9762] ( pen ul ; move 3 + ul , 4 ; move ua - ul , 3 - ul )  
[9763] ( move ul / 2 , 3 / ua ; pen ul - ua ; move ua , 2 )  
[9764] ( move ua , ul ; pen 4 / ua ; move ul + ul , 3 + 3 )  
[9765] ( pen ul / 3 ; move 3 , 4 + ul ; move ua , ua - ul )  
[9766] ( move ul , ul ; ( pen 0 ; move ua - ul , ua / 2 ) )  
[9767] ( ( move ul , ua ; pen 4 - ul ) ; move ua , 0 - ul )  
[9768] ( move ul , ua - 4 ; pen ul - 4 ; move ua , ua - 4 )  
[9769] ( v0 = 4 ; pen 2 ; move v0 + v0 , ul / v0 )  
[9770] ( move ua , 4 / ua ; pen 2 - ul ; move 4 + ul , ul )  
[9771] ( ( pen ua ; move 2 + ul , 3 ) ; move ul - ua , ul )  
[9772] ( move ul , 4 ; pen ul / 3 ; move ua + ul , ul - 2 )  
[9773] ( ( move 3 , ua ; pen ua + ul ) ; move ul , ul - 2 )  | ( ( move 4 - ul , ua ; pen ua - ul ) ; move ul , ua - ul )  
[9774] ( ( pen 3 + ul ; move 2 , ul ) ; move ua , ul + ul )  
[9775] ( ( pen ul ; move ua , 3 / ua ) ; move 0 - ua , ul )  
[9776] ( pen 4 + ul ; move ua / 3 , ua ; move 4 + ul , ul )  
[9777] ( ( pen ua + ua ; move ua , ul ) ; move 2 , ul / 2 )  
[9778] ( ( move ua / 3 , ul ; pen 0 ) ; move ua + ul , ul )  
[9779] ( pen ul ; ( move ul - ua , ua - 3 ; move ua , 2 ) )  
[9780] ( move 3 / 4 , ul / ua ; pen ua ; move ua + 3 , ul )  
[9781] ( move 4 + ul , ul ; move ua - 2 , ul / 4 ; pen ul )  
[9782] ( ( pen ua ; move ua , ua ) ; move 4 - ua , 4 + ul )  
[9783] ( move ul , ul / ua ; ( pen 0 ; move 4 , ua + ul ) )  
[9784] ( move 2 , ua ; pen 0 ; ( move ul , 3 ; move 4 , 0 ) )  
[9785] ( move ul - 4 , 3 ; pen ua / 4 ; move ua , ul + ul )  
[9786] ( ( pen ul + ul ; move 2 * 2 , ua ) ; move ul , ul )  
[9787] ( move ua , 2 ; move ua , ua * ua ; move 0 , ua + ul )  
[9788] ( move 4 + ul , ul / ua ; move 2 / 3 , ul ; pen ua )  
[9789] ( move ul , 4 ; ( pen 0 ; move ul , 2 ; move 2 , 0 ) )  
[9790] ( move 4 - ua , ul ; pen 4 / ua ; move ua - 3 , ul )  
[9791] ( move ul , ul / 3 ; move 3 - ua , 4 ; pen ul - ua )  
[9792] ( ( move ul - 2 , ul ; pen ua ) ; move 3 , ul + ul )  
[9793] ( move ua + ul , ua ; ( pen ua - ul ; move 3 , 4 ) )  
[9794] ( move ua / 4 , 0 ; pen ul / 4 ; move ua - ul , ul )  
[9795] ( move ul - ua , 0 ; move ul + ul , 0 ; move ul , ul )  
[9796] ( ( move ua , ua ; pen 4 - ua ) ; move 4 , ul - ua )  | ( ( move ua , 0 ; pen 0 ) ; move ul , ul ; move 3 , 0 )  
[9797] ( move ua / 3 , 4 + ul ; ( pen ua ; move ua , ua ) )  
[9798] ( ( move 2 , ul ; pen 0 ) ; move ul , 3 ; move 4 , 0 )  
[9799] ( move ul , ua ; ( pen ua ; move ua - ul , 3 / 2 ) )  
[9800] ( pen 4 / ua ; move ua , ul / 2 ; move ul , 2 / ua )  | ( move 3 , ul / 2 ; move 3 , ua + ua ; move ul , 2 / ua )  
[9801] ( pen ul ; ( move 4 , ul + ul ; move ua - 2 , ul ) )  
[9802] ( ( move ua , ul / 4 ; v0 = 2 ) ; move 4 , v0 )  
[9803] ( move ua , ua ; move ul - ua , ul - 2 ; move 0 , ua )  
[9804] ( move ua + ul , ul ; ( pen 4 ; move ul , 3 + ul ) )  
[9805] ( ( pen ua ; move ua , 3 * 3 ) ; move ul , ua * ua )  
[9806] ( ( move 3 , ua ; pen ul / 2 ) ; move ua + ul , ul )  
[9807] ( move 3 , ul - 4 ; ( move ua + ul , ul ; pen ua ) )  
[9808] ( ( pen ul ; move 3 , ul ) ; move ua + ul , 4 + ul )  
[9809] ( pen ul ; ( move 2 , ua - ul ; move ua , ul / 2 ) )  
[9810] ( pen ua ; ( move ul , 4 ; move ua + ul , 4 + ul ) )  
[9811] ( ( move ua , ul ; pen ua - 3 ) ; move ul , 4 - ua )  | ( move ua , ul ; move 0 , ua ; ( pen 4 ; move ul , 4 ) )  | ( move ua , ul ; ( v0 = 4 ; pen v0 ; move ul , v0 ) )  
[9812] ( move ul , ul ; ( pen ua + 3 ; move ua - ul , 4 ) )  
[9813] ( ( move 4 + ul , ua ; move ua - 4 , ul ) ; pen ul )  
[9814] ( move ua + ul , ul ; move ua , 3 ; move ul , 0 - ua )  | ( v0 = ua + ul ; move v0 , ul ; move v0 , v0 * 3 )  
[9815] ( move ua + ul , 0 ; move 3 , ul + ul ; move ua , ul )  
[9816] ( pen 4 ; move 4 - ul , ul / ua ; move ul , 4 - ua )  
[9817] ( pen 3 ; ( move 4 - ul , ua ; move ul , ul + ul ) )  
[9818] ( pen 4 / ua ; move ul - 3 , ua / 4 ; move ua , ul )  
[9819] ( move ua , 0 ; move ul , ua + ul ; move ua , 3 - ul )  
[9820] ( pen 4 / ua ; move ul + ul , ul ; move 3 , ul / 3 )  
[9821] ( ( pen ua - ul ; move ua - ul , 3 ) ; move 4 , ul )  
[9822] ( move 4 , ua + ua ; move 0 - ul , ua ; move ua , ul )  
[9823] ( move ul - ua , ua ; ( pen 4 ; move ua - ul , 4 ) )  
[9824] ( ( move 4 , 0 ; move ua , 2 ; move ua , 4 ) ; pen 2 )  
[9825] ( move 4 - ul , 4 / ua ; pen ua * 4 ; move ul , ua )  
[9826] ( move ua , 4 ; ( pen ua * ua ; move 4 , ua * ua ) )  
[9827] ( ( move ua , ul / 4 ; pen ua ) ; move ua + ul , 4 )  
[9828] ( pen ua ; ( move 2 + ul , ul / 4 ; move ul , ul ) )  
[9829] ( move ua , ul ; move 3 - ua , 0 ; move ul , ua - ul )  
[9830] ( move ua , ua + ul ; move 4 , ua * ua ; move ul , 0 )  
[9831] ( move ul , ua / 4 ; ( v0 = 4 ; move 4 , v0 ) )  
[9832] ( pen 4 ; ( move ul - ua , ul ; move ul - 3 , ul ) )  
[9833] ( ( move 4 , ul ; pen ul / 2 ) ; move ua , ul + ul )  
[9834] ( move ul , 2 ; move ua , 2 ; move ul + ul , ua + ul )  
[9835] ( move ul + ul , 0 ; move ua , ul ; move ua + ul , 4 )  
[9836] ( move 3 , 3 ; ( pen 3 ; move ua , ul ) ; move 0 , 3 )  
[9837] ( move 2 , ul ; move ul - ua , 0 - ul ; move ua , ul )  
[9838] ( move ua , 4 + ul ; move 0 , ua ; move ua - ul , ul )  
[9839] ( move ul / 2 , ul ; move ua , ul / 4 ; pen ua * 4 )  
[9840] ( move ul , 4 ; move ua , 0 ; move ul - ua , ua - ul )  
[9841] ( move 3 , 3 ; ( move ul , 2 ; move 4 , ul ) ; pen 0 )  
[9842] ( pen ul ; ( move 3 , 0 ; move ua , 2 ; move 4 , 4 ) )  
[9843] ( move 0 , ul ; move ua - ul , ul ; move ua - ul , 3 )  
[9844] ( move ul , 0 ; move ul - ua , ua * ua ; move 4 , ua )  
[9845] ( move 2 , ul ; move 2 , ul ; move ua - ul , ua + ul )  
[9846] ( move ul , 2 ; move ua , ul ; move ua - 2 , ua - ul )  
[9847] ( move ua + ul , ul ; move ua , 3 + ul ; move 2 , ul )  
[9848] ( move 3 , 4 ; ( pen ul / ua ; move ul + ul , ul ) )  
[9849] ( move ua , 4 + ul ; move ua , ua + 3 ; move ua , ul )  
[9850] ( move ua , ua ; move 2 - 3 , ul ; move ul + ul , ua )  
[9851] ( move 2 , ul ; move ul , ua ; move 2 - ua , ul - ua )  
[9852] ( move ua , 2 ; move 3 , ua - ul ; move ul - ua , ua )  
[9853] ( move 3 , 0 ; move ul , ul ; move ul + ul , ua * ua )  
[9854] ( move ul , ua ; move ul - ua , 0 ; move ua , ua / 3 )  
[9855] ( move 3 , ua ; move ua + ul , ua + ul ; move 3 , ul )  | ( ( move 3 , ua ; move ua + ul , ul ) ; move 3 , ul ; pen 2 )  
[9856] ( move ua , 4 + 2 ; move ul , ua ; move ua , ua - ul )  
[9857] ( move ua - ul , ul ; move 4 , ua + ul ; move ul , 0 )  
[9858] ( move ua , ua - 4 ; move 0 , ul ; move ul , ul - ua )  
[9859] ( move ul - ua , ua ; move ul , ua ; move 0 - 4 , ul )  
[9860] ( move ua , 3 ; move ul + ul , ua - ul ; move ul , 2 )  
[9861] ( move ua - ul , ua ; move ua + ul , 4 ; move ua , 3 )  
[9862] ( move ua , ul ; move ul - 2 , ul + ul ; move 2 , ul )  
[9863] ( move 3 , ul ; move ul - ua , ul ; move 2 , ua + ul )  
[9864] ( move ul + ul , ua ; move 2 , ul ; move ua , 4 - ua )  
[9865] ( move ul , ul ; move ua , ua ; move ua + ul , 2 - 4 )  
[9866] ( move ua , ul + ul ; move 0 , ul ; move ua , ul / 3 )  
[9867] ( move ul , ua / 3 ; move ua , ua + ul ; move 2 , ua )  
[9868] ( move 2 , ul / ua ; move ul , ua ; move ua + ul , 2 )  
[9869] ( move ul , ul ; move ua , 3 - 2 ; move ua , ul + ul )  
[9870] ( v0 = 2 ; move ua + v0 , v0 ; move v0 , ul )  
[9871] ( move ua , ua ; move 2 + ul , ul ; move 2 , ul / ua )  
[9872] ( move 2 , 2 ; ( move ul , 4 ; move ul , 2 ; pen 3 ) )  
[9873] ( v0 = ua - 2 ; move v0 , ua ; move v0 , v0 )  
[9874] ( move ul , 3 ; move 3 , ul - ua ; move ua , ua + ul )  
[9875] ( v0 = ua + 2 ; move v0 , ul ; move v0 , v0 )  | ( move ua + 2 , ul ; v0 = 2 ; move ua + v0 , v0 )  
[9876] ( move ua , 0 ; ( move ua , 4 ; move 4 , 3 ; pen 4 ) )  
[9877] ( move 2 , ua ; move ua + ul , ua - ul ; v0 = ua )  
[9878] ( ( pen ul ; move ul / ua , 4 ) ; move ua , ua / 3 )  
[9879] ( move ul , ua ; move ul - 3 , ua ; move ul , 2 + ul )  
[9880] ( move ul , 2 ; move 3 , ua ; move ul - ua , ua * ua )  
[9881] ( move ua , 3 + 2 ; move ul , ul ; move ua - ul , ul )  
[9882] ( move ul - ua , ua + 3 ; move ul , 2 ; move ul , ul )  
[9883] ( move ul , ul ; move ua , 2 + ul ; move ua - 4 , ul )  
[9884] ( move ul , ua ; move 2 , ul ; move ua + ul , ua / 3 )  
[9885] ( move 4 + ul , ua ; move ul , 4 ; move ua , ua + ul )  | ( move 4 , ua ; ( move ul , ua ; move ul , 4 ) ; move ua , ul )  
[9886] ( move ul , ua + ul ; move 4 , ua ; move ua - 3 , ul )  
[9887] ( move 4 , ua ; move ul , ua - ul ; move ul , ua - 2 )  
[9888] ( move 3 , ua * ua ; move ul , ul ; move 2 , ul + ul )  
[9889] ( move ua , ul / 2 ; move ul , ua ; move 2 - ua , ul )  
[9890] ( move ul , ul ; move ua + 2 , ul - 3 ; move ul , ul )  
[9891] ( move 2 , ua ; move ua - 4 , ul + ul ; move ul , ul )  
[9892] ( move ua , ua - 2 ; move 4 , ua - ul ; move ul , ul )  
[9893] ( move ul , ua * ua ; move 2 , 4 ; move ua + ul , ul )  
[9894] ( move ul , 2 - ul ; move ua + ul , ul ; move 3 , ul )  
[9895] ( v0 = ua - 2 ; move v0 , v0 ; move ul , v0 )  
[9896] ( move ul , ua + ul ; move ua , 4 ; move ul , 2 - ul )  | ( move ul , ul ; ( move ua , 3 + ul ; move ul , ul ) )  | ( move ul , ua + ul ; move ua , 4 ; move ul , ul - ua )  
[9897] ( move ul , 4 + ul ; move 2 , ul + ul ; move ua , ul )  
[9898] ( move ua , 3 ; move ul , ul + ul ; move 3 , ua * ua )  
[9899] ( move ua , ul ; move 3 / ua , ul + ul ; move ua , 2 )  
[9900] ( move ua , 2 / ua ; move ua + ul , 3 ; move ul , ul )  
[9901] ( move ua , ua ; move ul , ul ; move ua + ul , 3 / 2 )  
[9902] ( move 2 + ul , ul ; move ul , ul ; move 3 + ul , ul )  
[9903] ( move ul + ul , 4 + 3 ; move ul , ul ; move ua , ua )  
[9904] ( v0 = 3 - ua ; move v0 , ua ; move v0 , v0 )  
[9905] ( move ul , ua ; move 2 , ua - ul ; move 4 + ul , ul )  
[9906] ( move ua , ua ; move 3 , ul / 2 ; move ua , ul + ul )  
[9907] ( move ua - 3 , 3 ; move ua , ul + ul ; move ul , ul )  
[9908] ( move 4 , ua + ua ; move ua - ul , 3 ; move ul , ul )  
[9909] ( move ul , ua ; move ua , ul ; move ua + ul , 4 * 2 )  
[9910] ( move ua , 3 ; move ul + ul , ul ; move 3 , ua * ua )  
[9911] ( move ul , ul + ul ; move ua , ua - ul ; move 2 , 4 )  
[9912] ( move 4 , ul ; move 2 , ua * ua ; move ul + ul , ua )  
[9913] ( move 2 , ul ; move ul + ul , ul ; move ul , 3 + ul )  
[9914] ( move ul - ua , 2 ; move ul - ua , 3 ; move ul , ul )  
[9915] ( move ul , ul - 3 ; move ul , ul ; move 2 , ua + ul )  
[9916] ( move 3 - ua , ua ; move ul , ua ; move ul , 4 - ul )  | ( ( move 3 - ua , 0 ; move ul , ua ) ; pen ul ; move ul , 3 )  
[9917] ( v0 = 3 - ua ; move v0 , ul ; move v0 , v0 )  
[9918] ( move ul - 3 , ua ; move ua , ua - ul ; move 4 , ul )  
[9919] ( v0 = 3 ; move ua , v0 ; move ua , v0 * v0 )  
[9920] ( move 2 + ul , ul / 2 ; move ul , ul ; move ua , ul )  
[9921] ( move 4 , ul - ua ; move ua , 3 ; move ul + ul , ul )  
[9922] ( move ul - ua , ul + ul ; move ul , ul ; move 2 , 4 )  
[9923] ( move ul + ul , 3 / ua ; move ua , 2 ; move ul , ul )  
[9924] ( move 2 + ul , ul ; move ul , ul ; move ua - 4 , ul )  
[9925] ( move ua , 2 ; move ul , ul / 3 ; move ua , ua * ua )  
[9926] ( v0 = ua - 4 ; move v0 , v0 ; move ua , v0 )  
[9927] ( move ua - ul , 0 ; move ul , ul ; move 4 / ua , ul )  
[9928] ( ( move ua , ua ; move ul , ul ) ; move ul - ua , 0 )  
[9929] ( move ua , 3 / ua ; move ul , ul ; move ua + ul , 3 )  
[9930] ( move ul , ul - 3 ; move ua , ua + 4 ; move ul , ul )  
[9931] ( move ul , ul ; move 3 , ua - ul ; move ua + ul , 4 )  
[9932] ( move 4 , 0 ; ( pen ua ; pen 0 ) ; move 3 + ul , 0 )  
[9933] ( v0 = ua - 3 ; move v0 , ul ; move v0 , v0 )  
[9934] ( move ul , ul ; move 3 , ua + ul ; move ua - ul , 4 )  
[9935] ( move 2 , ua * ua ; move ul , ul ; move ua , ua * 4 )  
[9936] ( move ua , ua * ua ; move ul , ul ; move ua - 4 , 3 )  
[9937] ( move 3 , ul ; move ua , ul - 4 ; move ul , ua + ul )  
[9938] ( move ua , ul ; move 4 / ua , 2 ; move ua , ua * ua )  
[9939] ( v0 = ua - 4 ; move ua , v0 ; move v0 , v0 )  
[9940] ( move ul , ua ; move ua , ul ; move ul / 2 , 3 + ul )  
[9941] ( move ua , ua / 2 ; move ua , ul + ul ; move 4 , ul )  
[9942] ( move 2 , ul ; move ul , ua ; move ua + ul , ua / 4 )  
[9943] ( v0 = 3 - ua ; move v0 , v0 ; move v0 , ul )  
[9944] ( move ul - ua , ul ; move ua , ul / ua ; v0 = 0 )  
[9945] ( move ua + ul , 4 ; move 2 , ua ; move ul / ua , ul )  
[9946] ( move ul , 0 - ul ; move ua , ua ; move ul , ul / 4 )  
[9947] ( move ul , ua ; move ua , 4 * 3 ; move ul + ul , ua )  
[9948] ( v0 = ul - ua ; move v0 , v0 ; move v0 , 4 )  | ( move ul - ua , ul ; pen ul ; move ul - ua , 3 + ul )  | ( move ul - ua , ul ; move ul - ua , 4 ; v0 = ul / 2 )  
[9949] ( v0 = 4 - ua ; move v0 , ul ; move v0 , v0 )  
[9950] ( move ul , ul ; move 2 + ul , ul ; move ul , ul / 2 )  
[9951] ( move ul , ul ; move ua , 3 - 4 ; move ul - ua , ul )  
[9952] ( v0 = 4 + ul ; move v0 , v0 ; move v0 , ul )  
[9953] ( move ul - ua , ua ; move ul , ua ; move ua / 3 , 4 )  
[9954] ( move ul , ua ; move 3 , ul + ul ; move ul - 4 , ul )  
[9955] ( move ua / 4 , 3 ; move ua , ua + ul ; move ul , ul )  
[9956] ( move ua , ul + ul ; move 3 / 2 , ul ; move ul , ul )  
[9957] ( move ul , ua ; move 4 , ul - ua ; move 4 + ul , ul )  
[9958] ( pen 2 ; ( move 4 , ul ; v0 = ua ; move 2 , 4 ) )  
[9959] ( move ul , 4 ; move ua , ul / ua ; move 2 , ul + ul )  
[9960] ( move ul , ul ; move 4 , ua + ul ; move 4 , ul + ul )  
[9961] ( move ua , ua + ul ; move ul , 4 ; move ua , ul / 3 )  
[9962] ( move ul - ua , ua ; move ul , 4 * 3 ; move ua , ul )  
[9963] ( move ul + ul , ul ; move 3 , ul ; move 4 - ua , ul )  
[9964] ( v0 = ua - 4 ; move v0 , ul ; move v0 , v0 )  
[9965] ( move ua - ul , 2 / ua ; move ul , 3 ; move ul , ul )  
[9966] ( move ul , ul ; move ul , 3 ; move ul + ul , 4 + ul )  
[9967] ( move ua , ul + ul ; move ul , ul / 4 ; move ua , 2 )  
[9968] ( move ul , ul ; move 2 / 4 , ua ; move ua , ua - ul )  
[9969] ( move ul , ul ; move ua + ul , 4 ; move ua , ul - 4 )  
[9970] ( move 3 , ua ; move ul / ua , ul ; move 4 , ua + ul )  
[9971] ( move ul , 4 ; ( pen 0 ; v0 = 3 ) ; move 4 , ul )  
[9972] ( move 0 , ua ; move ul , ul / ua ; move ua , ul / 4 )  
[9973] ( move 4 - ul , ul ; move ul , ul ; move 2 - ua , ul )  
[9974] ( ( pen ua ; move 4 , ua ; move 3 , 4 ) ; move 3 , 4 )  
[9975] ( move ua , ua ; move 3 - ul , ul ; move ul , ul / 2 )  
[9976] ( v0 = 4 ; move v0 , ul ; move ul - v0 , v0 )  
[9977] ( move ul - 4 , ul ; move ua , ul ; move ul + ul , 4 )  
[9978] ( move ua + ul , ul ; ( move ul , ul ; move ua , 2 ) )  
[9979] ( v0 = 3 ; move v0 , ul ; move v0 , v0 / ua )  
[9980] ( move 0 - ua , 3 + ul ; v0 = 3 ; move ua , v0 )  
[9981] ( move ul , 4 + ul ; move ul , ul ; move 4 + ul , ul )  
[9982] ( move ua - ul , ua - ul ; move 4 , ul ; v0 = ua )  
[9983] ( move 3 , ul / ua ; move ul , ul ; move ua - 3 , ul )  
[9984] ( move ul , ul ; move ua , 4 ; move ul / 2 , ua * ua )  
[9985] ( move ua / 2 , ul ; move ul - 3 , ul ; move ul , ul )  
[9986] ( move 2 , ul ; move ul , ul / ua ; move 4 , ua - ul )  
[9987] ( v0 = 0 - 2 ; move ua - 2 , ul ; move v0 , ul )  
[9988] ( move ul , 3 ; move ul , ul - ua ; move 4 - ul , ul )  
[9989] ( move 3 + ul , ua ; move ul , ul / 4 ; move ua , ul )  
[9990] ( move ul + ul , ul ; move 3 , ul ; move ua / 3 , ul )  
[9991] ( ( move ul , ul ; move ua , ul ) ; move 2 , ua * ua )  
[9992] ( move ul , ul / ua ; move 4 + ul , ul ; move ua , 4 )  
[9993] ( move ul , ul ; move 3 + ul , ul ; move ul , ul / 3 )  
[9994] ( pen 2 ; ( move 4 , ul ; v0 = ua ; move 4 , 4 ) )  
[9995] ( move ua / 2 , ua ; move ua / 4 , ul ; move ul , ul )  
[9996] ( ( move ua , 2 ; move ua - ul , ul ) ; move ul , ul )  
[9997] ( move ul - ua , 2 / 4 ; move ul , ul ; move ul , ul )  
[9998] ( move 4 , ul ; move ul , ul ; move ua + ul , 4 / ua )  
[9999] ( move ua , ul / ua ; move ul , ua ; move ul - 4 , 4 )  
[10000] ( move ua - ul , ul ; move 4 / 3 , ul ; move ua , ul )  
[10001] ( move ua , 4 + 3 ; pen 2 ; ( move 2 , ua ; pen 0 ) )  
[10002] ( move 4 , 4 / ua ; move ul , ul ; move ul , ua * ua )  
[10003] ( move ua , ua - ul ; move 4 , ul / ua ; v0 = ul )  
[10004] ( move ua / 2 , 4 ; move ul , ul / ua ; move ul , ul )  
[10005] ( move 3 , ul ; ( move ul - ua , ul ; move ua , ul ) )  
[10006] ( move ua , ul ; ( move ua - 4 , ul ; move ua , ul ) )  
[10007] ( move ua + ul , ua * ua ; pen ua - 3 ; move 0 , ua )  
[10008] ( ( move ul , ua ; move ul - 4 , ul ) ; move ua , ua )  
[10009] ( move ul , 2 - ul ; ( move ua , ul ; move ul , ul ) )  
[10010] ( move ul + ul , 0 ; v0 = 3 ; move 4 - ua , v0 )  
[10011] ( ( move ua , ul ; move 3 , ul + ul ) ; move ul , ul )  
[10012] ( move ua , ul ; v0 = 2 ; move 4 + ul , v0 + 3 )  
[10013] ( move 2 , ul ; v0 = 3 * 2 ; move ua , ua - v0 )  
[10014] ( v0 = 3 ; move 3 , ul + v0 ; move 2 , ua - ul )  
[10015] ( move ua , ua + 2 ; move ua + ul , ua - 3 ; pen ul )  
[10016] ( move ul / ua , 4 / ua ; move ul , ua ; move 4 , ul )  
[10017] ( move 4 + 3 , ua ; v0 = 2 ; move ua - ul , v0 )  
[10018] ( ( pen 2 ; move 3 , ul ) ; move 4 + 2 , ul ; pen 0 )  
[10019] ( ( move 3 , ul + ul ; move ul , ul ) ; move ul , ul )  
[10020] ( move ul / ua , ul / 4 ; move ua , 3 ; move ul , ul )  
[10021] ( ( move ul , ua - ul ; move ul , 4 ) ; move ua , ul )  
[10022] ( ( move ul , ua * ua ; move ul , ul ) ; move 4 , ul )  
[10023] ( move 4 + ul , 2 ; v0 = ua - ul ; move 3 , v0 )  
[10024] ( v0 = ua - 4 ; move 2 , ul ; move 3 , v0 - ua )  
[10025] ( move ul , ul ; ( move ua , ul ; move ul , ul / 2 ) )  
[10026] ( ( move 2 , 4 ; pen 2 ; move 2 + ul , ul ) ; pen 2 )  
[10027] ( pen ua ; move ua + ul , ul - ua ; move 3 , ua - 2 )  
[10028] ( pen 4 ; ( move ul , 3 + ul ; pen 0 ; move 3 , 2 ) )  
[10029] ( move 2 , ul - ua ; pen ua ; move ua - ul , ua - 2 )  
[10030] ( pen ua + ul ; move ua - ul , 2 ; move 2 + ul , ul )  
[10031] ( move 3 , 3 - ua ; ( pen 0 ; pen 3 ) ; move ua , 4 )  
[10032] ( move ua + ul , ul ; v0 = 4 + 2 ; move 4 , v0 )  
[10033] ( pen ua ; move ul + ul , 2 ; move ua + ul , ua + 4 )  
[10034] ( v0 = ul + ul ; move 2 , ul - 2 ; move 4 , v0 )  
[10035] ( move ua + 3 , 4 + 3 ; v0 = ul ; move v0 , ul )  
[10036] ( move ul - ua , 3 ; ( pen 4 ; pen 0 ) ; move 2 , 3 )  
[10037] ( move ua / 2 , ul ; pen 0 ; move ua + ul , ua - ul )  
[10038] ( v0 = 2 / ua ; move ul , 2 ; move ua + 4 , v0 )  
[10039] ( move 0 , ul - 4 ; v0 = ua / 3 ; move ua , v0 )  
[10040] ( move ul + ul , ul ; ( move ul , ul ; move 4 , ul ) )  
[10041] ( move ul - ua , 4 ; pen 2 + ul ; move ul , ua + ua )  
[10042] ( move ua - ul , ua - 4 ; move ua , 2 ; pen ua + ul )  
[10043] ( move 3 + ul , ul / 2 ; v0 = 2 ; move ul , v0 )  
[10044] ( move 4 - ua , ul ; move ua + 3 , ua + ul ; pen ua )  
[10045] ( move ul , ua - ul ; move 4 + ul , ul + ul ; pen 0 )  
[10046] ( pen ua + ul ; move 3 - ul , ua ; move 2 , ua * ua )  | ( ( pen ua * 4 ; move 2 , 0 ; move 2 , ua * ua ) ; pen 0 )  
[10047] ( pen ul + ul ; move ua + ul , ua + ul ; move 3 , 3 )  
[10048] ( move ul , 3 ; pen ua * 2 ; move ua - ul , ua + ul )  | ( move ul - 2 , ua ; ( pen ua ; move ua - ul , 3 + ul ) )  
[10049] ( move 4 - ul , ua + ul ; pen ua ; move 2 + ul , ul )  
[10050] ( pen ua ; move ul , ul + ul ; move 3 - ua , 3 + ul )  
[10051] ( move ul - 4 , ua + ua ; pen ul - ua ; move ul , 2 )  
[10052] ( move 3 , ul - 3 ; v0 = 2 / ua ; move ul , v0 )  
[10053] ( move ul , ul ; v0 = ul ; move 4 + v0 , 3 * 2 )  
[10054] ( move ua , ul ; pen 2 * 2 ; move ul + ul , ua - ul )  | ( move ua , ul ; ( pen ua - 2 ; move ul + ul , 3 - 4 ) )  
[10055] ( move 0 - 3 , ul / ua ; move ua , ua - ul ; pen ul )  
[10056] ( move ua + ul , 4 + ul ; pen ua + 3 ; move ul , ul )  
[10057] ( pen 4 ; move 2 , ul ; ( pen 2 ; move 3 , 3 - ua ) )  
[10058] ( pen 3 + ul ; move ul , ua + ul ; move 3 , ua * ua )  
[10059] ( move ua , 3 + ul ; move ua , ua / 4 ; pen ua + ua )  
[10060] ( v0 = 4 ; move v0 , v0 + 3 ; move 2 + 2 , 2 )  
[10061] ( move ul - ua , ul ; pen ua * ua ; move ua , 4 + 2 )  
[10062] ( move ul + ul , 3 / 4 ; v0 = 2 ; move v0 , ul )  
[10063] ( move 4 + ul , 2 / 3 ; v0 = ul ; move v0 , ul )  
[10064] ( move 4 * 2 , ua + ul ; pen ua + ul ; move ul , ul )  
[10065] ( pen 3 ; ( move 3 , 4 * 3 ; pen ua ; move 2 , ua ) )  
[10066] ( pen ua * 2 ; move ua - ul , ua ; move ul , 4 + ul )  
[10067] ( move 2 + 2 , 0 ; v0 = 4 / 3 ; move v0 , v0 )  
[10068] ( move ua - 3 , 3 ; pen ul + ul ; move ul , ua - ul )  
[10069] ( move ua + 3 , ul ; move ul - ua , ul ; pen ua - 4 )  
[10070] ( move 3 + ul , ul / ua ; move 2 , ul + ul ; pen ua )  
[10071] ( pen ua + 2 ; move ul , ua / 4 ; move ua , ua * ua )  
[10072] ( move ul + ul , ul + ul ; pen 2 ; move 3 - ul , ul )  | ( ( move 2 , ul + ul ; pen 4 ) ; pen ul + ul ; move 2 , ul )  
[10073] ( move ul - ua , 4 ; v0 = ul / 3 ; move 2 , v0 )  
[10074] ( move ul , 2 ; move ua + ul , ul / 2 ; pen ul + ul )  
[10075] ( pen ul + ul ; move ua , ua + ua ; move 4 , ua / 4 )  
[10076] ( move ul , 0 ; ( pen ua * ua ; move ua , ua - ul ) )  
[10077] ( pen ua * ua ; move ua , 3 ; move ul + ul , 3 / ua )  
[10078] ( move ua + ul , ul ; pen 4 + ul ; move 4 , ua * ua )  
[10079] ( move 2 , ul ; pen ul + ul ; move ul - ua , ul / 2 )  
[10080] ( move ua + ul , ul ; move ua + ul , ul - 4 ; pen 4 )  
[10081] ( move 3 , ul + ul ; pen ul ; move 4 + ul , ua - ul )  
[10082] ( ( move ua , ua * ua ; pen ua ) ; move ua , 2 + ul )  
[10083] ( move ua - 3 , ul / 3 ; pen ul ; move ua , ua + ul )  
[10084] ( move ul , ua - ul ; pen ul - 2 ; move ua , ul / 2 )  
[10085] ( ( move ua , ul ; move 0 , 2 ; pen ua ) ; move 2 , 0 )  | ( move ua , ul ; ( pen ua ; move 4 - 2 , 2 ; pen ul ) )  
[10086] ( pen ul + ul ; move ua + ul , ul ; move 4 , ua - 4 )  
[10087] ( move ul - ua , ua * 3 ; pen ua ; move ul , 4 + ul )  
[10088] ( move 3 , ul / 4 ; pen ua ; move ua + ul , ua + ul )  
[10089] ( move 4 , ua * ua ; move 4 + ul , ul ; pen ua + ul )  
[10090] ( move 3 , ul / 2 ; pen ua + ul ; move ul , ua * ua )  
[10091] ( pen ul ; move ua + 4 , ua - ul ; move 4 - ua , ul )  
[10092] ( move ul , 4 * 2 ; move ua + ul , ul ; pen ul - ua )  
[10093] ( move ul - ua , 4 * 4 ; v0 = 3 ; move ul , v0 )  
[10094] ( move ul - ua , ul ; pen ua * 2 ; move ul , 3 / ua )  
[10095] ( pen 2 ; ( move ua - ul , ua + ua ; move ul , ul ) )  
[10096] ( ( move 3 * 2 , ul ; pen 4 ) ; move ul , 3 ; pen 3 )  
[10097] ( move ua , ul + ul ; ( move ua + ul , 2 ; pen ul ) )  
[10098] ( move 3 , ua - 4 ; move 3 , 2 + 2 ; move 0 , 2 - 4 )  
[10099] ( move ul - ua , ul ; move 4 + ul , 3 / ua ; pen ua )  
[10100] ( pen ua / 4 ; move 2 - ua , ul ; move ua - ul , ul )  
[10101] ( move ul , ua / 3 ; pen ul - 2 ; move ul - ua , ul )  
[10102] ( pen 3 ; v0 = ua - ul ; move v0 , v0 * v0 )  
[10103] ( pen ua ; move 4 - ua , ul / 2 ; move ua - ul , ul )  
[10104] ( move 3 , ul / 4 ; v0 = 3 ; move ul , v0 / ua )  
[10105] ( move ua , ua / 4 ; pen ua * 4 ; move ul , ua + ul )  
[10106] ( pen ul / ua ; move ua + ul , 2 ; move ul , ua / 4 )  
[10107] ( move 2 , 0 ; ( pen 3 ; move ul , 0 ) ; move ua , ul )  
[10108] ( ( move 4 , 3 ; pen 3 ) ; move 4 + ul , 4 ; pen ul )  
[10109] ( pen ua ; move 4 + ul , ul / ua ; move 4 , ul - ua )  
[10110] ( move ua - ul , ul + ul ; move ul - 4 , 4 ; pen ul )  
[10111] ( move ua , ul / 4 ; pen ua - ul ; move ul , 3 - ua )  
[10112] ( move ua + ul , ua + 4 ; ( pen ua ; move ul , ul ) )  
[10113] ( move ua , ul / ua ; pen 4 - 3 ; move ua - ul , ul )  
[10114] ( move ua + ul , 3 / 4 ; move ul , ul + ul ; pen ul )  
[10115] ( pen ul ; move 4 / 3 , ul ; move ua + ul , ul + ul )  
[10116] ( move 4 , ul / ua ; ( v0 = 2 ; move ua , v0 ) )  
[10117] ( move ul , ul ; pen ua * ua ; move 4 + ul , ua / 3 )  
[10118] ( move 4 , ul ; move ul + ul , ul / ua ; pen 2 / ua )  
[10119] ( move 4 , ua ; move ul , 0 ; ( pen 0 ; move ua , 3 ) )  
[10120] ( move ua - ul , ul / 3 ; pen ul ; move 2 / ua , ul )  
[10121] ( move ua , ul - ua ; pen ul / 4 ; move 2 , ul / ua )  
[10122] ( move 2 , 0 ; move 2 , ua * 4 ; move 3 * 2 , 4 + 3 )  
[10123] ( move 4 + ul , 2 ; pen ul / ua ; move ul , ul / ua )  
[10124] ( move ul , ua ; move ua - ul , ua / 3 ; pen ul / 4 )  
[10125] ( move ua + ul , ul ; pen ua ; move ul / 3 , ul / 4 )  
[10126] ( pen ua * 3 ; ( move ul - ua , ul ; move ua , ul ) )  
[10127] ( ( move ul , 3 ; pen 0 ; move 4 , ul ) ; move ua , 0 )  
[10128] ( ( move ul + ul , ua ; pen ul + ul ) ; move 4 , ul )  
[10129] ( move 0 , ul ; ( move 2 , ua ; pen 3 ; move 2 , ul ) )  
[10130] ( pen ua ; ( move ul + ul , ua / 4 ; move ua , ul ) )  
[10131] ( ( move ua , 0 ; move ua , 3 ) ; pen 3 ; move ul , 3 )  
[10132] ( move 0 , ul ; pen 2 ; ( move 3 , ua ; move 3 , ul ) )  
[10133] ( move ul / ua , ua * ua ; pen ua / 4 ; move 4 , ul )  
[10134] ( move ua + ul , 0 ; move ua , ul + ul ; move ul , ul )  
[10135] ( ( move ua , 3 ; move ul , ua ) ; pen 0 ; move 2 , 4 )  
[10136] ( move ul , 0 ; move ua , ul ; move ua + ul , ua * ua )  | ( v0 = ua ; move v0 , ul ; move ul + v0 , v0 * ua )  
[10137] ( move 4 + 3 , 2 ; move 3 + 2 , 4 ; move 3 / ua , 2 )  
[10138] ( move ul , 0 ; move ua , ua ; move ul + ul , ua - ul )  | ( move ua + ul , ua ; move ul , ua - ul ; move ul , ua )  
[10139] ( ( pen 4 - ul ; move ua + ul , ul ) ; move ul , ul )  
[10140] ( pen 2 ; move ul , ul ; ( move 0 , 2 ; move 4 , ua ) )  
[10141] ( ( move 4 , 0 ; move 0 - 3 , 4 + ul ) ; v0 = 0 )  
[10142] ( move ul , 0 ; move ul , ul ; move ua + ul , ua + ul )  
[10143] ( ( pen 3 ; move 0 , ul ) ; move 2 , ua ; move 3 , ul )  
[10144] ( move 3 , 3 ; pen ua ; ( move 0 , ul ; move ua , 4 ) )  
[10145] ( ( pen ua - ul ; move ul , ul / 3 ) ; move ua , ul )  
[10146] ( ( v0 = 3 ; move 2 , v0 * v0 ) ; move 4 , 2 )  
[10147] ( move 4 , 2 ; move 3 , 3 / 2 ; move 3 * 2 , ua - 2 )  
[10148] ( ( move 2 , ua ; move ua , 4 ; move ul , 4 ) ; pen 0 )  
[10149] ( move ul , 0 ; ( pen 3 ; move 2 , ul ) ; move ua , 4 )  
[10150] ( ( move ul , ul / 4 ; pen ua ) ; move ua , ul - ua )  
[10151] ( move ua , ul + ul ; move 0 , ul ; move ua - ul , ul )  
[10152] ( move ua + ul , ua + ua ; move ul , ul ; move ul , 2 )  
[10153] ( move ua , ul ; move ul , ua ; move ua + ul , ua + 4 )  
[10154] ( move ul , ul ; move ul + ul , ul ; move ul - ua , 0 )  
[10155] ( move 4 , 2 ; move ua , 4 ; ( pen 0 ; move ul , ul ) )  
[10156] ( move ul , 2 ; move ul , ua + ul ; move ua , ul - ua )  
[10157] ( move ul , ua ; move ul , ua - ul ; move 2 , ua + ul )  
[10158] ( pen ul ; ( move 4 , 0 ; move ua , ul ; move 2 , 4 ) )  
[10159] ( move 2 + ul , ua ; move ul + ul , ul ; move ul , ul )  
[10160] ( move ua - ul , ua ; move ul , 3 + ul ; move ua , ul )  
[10161] ( move 2 , ul ; move ua , ul - ua ; move ul , ua - ul )  
[10162] ( move ul + ul , ua ; move 3 - ua , ul ; move ua , ul )  
[10163] ( ( move 4 - 3 , 0 ; move 4 , 4 - ua ) ; move 2 , 2 )  
[10164] ( move ua , ul ; move ul , ua + ul ; move 3 - ua , ul )  
[10165] ( pen ul ; ( move 2 , 4 ; move 3 , ul ; move ua , 2 ) )  
[10166] ( move ul , ul ; move 2 , ul ; move ul - ua , ua + ul )  
[10167] ( move ul + ul , ul ; move ul , ul ; move 2 - ua , ua )  
[10168] ( move ul , ul ; ( move 3 , 2 ; pen 2 ) ; move 3 , ul )  
[10169] ( move ul , 3 ; move ua + ul , ul ; move ul , ua + ul )  
[10170] ( move ul + ul , ul ; move ul , ul ; move ua + 2 , ul )  
[10171] ( move ua + 2 , ua - ul ; move ul , ul ; move ul , ul )  
[10172] ( move 2 , ua ; move ul , ua + ul ; move ua , ul / ua )  
[10173] ( move ul - ua , ul ; move ul , ul ; move ua , 3 + ul )  
[10174] ( move 3 , ul ; move ua - ul , ul ; move ua , ua * ua )  
[10175] ( move ul , ul ; move ua - ul , ul ; move ua - 2 , ul )  
[10176] ( move ua - ul , ua ; move 3 , ul ; move ul , ul + ul )  
[10177] ( v0 = ua - ul ; move v0 , ua ; move v0 , v0 )  | ( ( v0 = ua - ul ; move v0 , ua ) ; move v0 , v0 )  
[10178] ( move ul - ua , ul ; move ul , 3 ; move ul , ua + ul )  
[10179] ( move ul , ua ; move ul + ul , ul ; move ua , 4 + ul )  
[10180] ( move ul , ul ; move ul , ua - ul ; move ua , 3 - ua )  
[10181] ( move ua , 3 ; ( move 4 , 4 ; move ua , 3 ) ; pen ua )  
[10182] ( move ul , ua ; move ua , ul + ul ; move 2 / ua , ul )  
[10183] ( move ul , ua ; move ul , ua + ul ; move 4 , ua * ua )  
[10184] ( move 4 + ul , ua * ua ; move ua , ul ; move ul , ua )  
[10185] ( move ul , ua - ul ; move ua , ul ; move 3 + ul , ul )  
[10186] ( move 4 , ua + ua ; move ul , ul ; move ul , ua * ua )  
[10187] ( ( move ul , ua ; move 2 , 4 ; pen 3 ) ; move 4 , ua )  
[10188] ( move ul , ul ; move ua + ul , 3 - ul ; move ul , ul )  
[10189] ( move ul , ul ; move ua + ul , ul ; move ul , 4 + ul )  
[10190] ( ( move 3 , 4 ; pen 4 ; move 2 , ul ) ; move ua , ul )  
[10191] ( v0 = ua - ul ; move v0 , v0 ; move ul , v0 )  
[10192] ( ( move 3 , 4 + ul ; move 2 , 3 / 2 ) ; move 3 , 2 )  
[10193] ( move ua , ua ; move ul , ua - 4 ; move ua , ul / ua )  
[10194] ( move ua , ul + ul ; move ua , ul - 4 ; move ul , ul )  
[10195] ( move ul + ul , ul ; move ua , ua - 4 ; move ul , ul )  
[10196] ( move ul , ua ; move ul , ul + ul ; move ua - ul , 4 )  
[10197] ( move 4 , ua ; pen ua ; ( move 3 , 3 ; move ul , 4 ) )  
[10198] ( move ua , ul / ua ; move 2 , ul ; move ul + ul , ul )  
[10199] ( move ul , ua + ul ; move ul , ul ; move ua - ul , 4 )  
[10200] ( move 4 , 3 + 2 ; ( move ul / 3 , 0 ; move 4 , 4 ) )  
[10201] ( ( move 3 , 4 ; pen 4 ; move ul , ul ) ; move ua , 3 )  
[10202] ( move ua , ul ; move ul / ua , 3 ; move ul , ua * ua )  
[10203] ( move 4 + ul , ul ; move ul , ul ; move ul + ul , ul )  
[10204] ( move ul , 4 ; move ul - ua , ul ; move ua - ul , ul )  
[10205] ( move 3 , ul ; move ul / ua , ul ; move ua , ul - ua )  | ( move 3 , ul ; move ul / ua , ua + ul ; move ua , ua + ul )  
[10206] ( move ul + ul , ul ; move ul , ul ; move ua / 3 , ul )  
[10207] ( move ua - ul , ul ; move ul , ua - ul ; v0 = ul )  
[10208] ( ( move 2 , 0 ; pen ua ; pen ua ) ; move 3 + 2 , ul )  
[10209] ( move ul , 4 ; ( move 4 , ul ; pen 3 ) ; move ua , 4 )  
[10210] ( move 3 , ua ; pen 4 ; ( move ul , 3 ; v0 = ul ) )  | ( ( move 3 , ua ; pen 3 + ul ; move ul , 3 ) ; v0 = ul )  
[10211] ( move ua , ul / 4 ; move ul , ul ; move ua + ul , ul )  
[10212] ( move 0 , 3 ; ( move 4 - 3 , ul ; move 3 , 3 / 4 ) )  
[10213] ( move 3 , ua ; ( pen 3 ; move 4 , ul ; v0 = ul ) )  
[10214] ( move 4 + 2 , 2 ; ( move 3 / 4 , ul ; move 3 , 4 ) )  
[10215] ( v0 = ul ; move v0 , ua ; move ua + 2 , 4 + ul )  
[10216] ( pen 3 ; ( move 0 - 3 , 0 - 3 ; move 3 - ua , 3 ) )  
[10217] ( move 0 - ul , 3 ; v0 = ul - ua ; move v0 , ul )  | ( move ul , ua ; ( move 0 , 4 ; pen ul ; move ul - ua , 0 ) )  
[10218] ( move ul , ul ; ( pen 4 ; move 4 , 4 ; move ul , 4 ) )  
[10219] ( ( pen 0 ; move ua + 3 , 4 ; pen 3 ) ; move ul , ua )  
[10220] ( move ua - 3 , 2 ; v0 = ul ; move v0 , ua - ul )  
[10221] ( move ua , ua ; v0 = 4 + 3 ; move ua - v0 , ul )  
[10222] ( pen 3 - 2 ; move 4 , 2 + ul ; move 3 * 2 , 4 + 3 )  
[10223] ( move ua - ul , ua + ul ; pen 0 ; move ul + ul , ul )  
[10224] ( ( move 4 , ua ; pen 2 ; pen ua ) ; move 2 , ul - 2 )  
[10225] ( move ua + ul , 4 ; v0 = 3 ; move v0 , ua - ul )  
[10226] ( move ua , ul ; pen ua * ua ; move ua + 2 , ul + ul )  
[10227] ( v0 = 4 ; move 4 , v0 ; move v0 , v0 + v0 )  | ( v0 = 4 ; move v0 , v0 ; move v0 , v0 + v0 )  | ( move 4 , 3 + ul ; v0 = 4 ; move v0 , v0 + v0 )  
[10228] ( move ua + ul , ul + ul ; pen ua ; move ua , ua + 4 )  
[10229] ( v0 = 3 * 3 ; move v0 , v0 ; move v0 , v0 )  
[10230] ( pen ua ; move 0 , ul ; ( pen ul ; move 4 + 4 , 2 ) )  
[10231] ( ( move ul / 4 , 3 / 2 ; move 2 , 3 ) ; move 4 , 4 )  
[10232] ( ( pen 2 + ul ; pen ua ; move 4 , 3 ) ; move ua , 2 )  
[10233] ( v0 = 4 * 2 ; move v0 , v0 ; move v0 , v0 )  
[10234] ( move ua , ul / ua ; ( move ul , ul ; move ul , ul ) )  
[10235] ( pen ua ; move ua + ul , ul ; move ul + ul , 2 - ua )  
[10236] ( pen ul + ul ; move 0 - ul , ua * ua ; move ua , ul )  
[10237] ( move ul , 0 ; move 0 - 4 , 0 - 3 ; move 3 , 0 - ul )  
[10238] ( move ua , ua + ua ; pen 0 - ul ; move ul , ul / ua )  
[10239] ( move ua + ul , ua - ul ; pen ul - ua ; move 2 , ul )  
[10240] ( move ul , 3 * 2 ; ( pen 0 - 3 ; move 3 , 4 + 2 ) )  
[10241] ( move ul , 3 ; v0 = ua + ul ; move v0 , ua / 3 )  
[10242] ( v0 = 3 ; move v0 * v0 , v0 ; move v0 , 4 )  
[10243] ( move ua , 4 + ul ; move ul - ua , ul ; pen ua + ua )  
[10244] ( move 2 , 4 ; ( pen ua ; move 4 - ua , 2 ; pen ua ) )  
[10245] ( v0 = ua - ul ; move ul , ul / 3 ; move v0 , 2 )  
[10246] ( move ul + ul , ua ; pen ul + ul ; move 3 , ua * ua )  
[10247] ( move ua , 2 ; ( pen 4 ; pen 3 - ua ; move ua , 4 ) )  
[10248] ( move ua - ul , ul + ul ; move 3 , ua + ul ; pen ul )  
[10249] ( move ul + ul , ua ; pen ul + ul ; move ul - ua , 3 )  
[10250] ( pen 4 ; ( move ua , 0 ; move ul , ua - 4 ) ; pen 4 )  
[10251] ( move ua , 2 ; ( pen 4 * 3 ; move ua , ul ) ; pen 2 )  
[10252] ( pen 2 ; ( move ul , 0 - 2 ; move 4 + 4 , 4 + 4 ) )  
[10253] ( move ul + ul , ua * 3 ; pen ua ; move ua + ul , ul )  
[10254] ( pen ul + ul ; move 2 + ul , ul ; move ul , ul + ul )  
[10255] ( move ua , ua / 3 ; v0 = 3 / ua ; move ua , v0 )  
[10256] ( ( pen 2 ; move ul , ua ) ; pen ua ; move 3 , 2 / 3 )  
[10257] ( v0 = ul ; move v0 - ua , 2 ; move ul , ua / 4 )  
[10258] ( move 2 + 2 , 4 ; move ul , 0 - 4 ; move ul - 2 , 0 )  
[10259] ( v0 = 0 - 4 ; move v0 , 2 - ul ; move 3 , v0 )  
[10260] ( pen ul ; move ua + ul , ua / 2 ; move ul + ul , ul )  
[10261] ( pen ul + ul ; move ua + 4 , ul ; move ul , ua - ul )  
[10262] ( ( pen 4 ; pen ua * 2 ; move ua , ul ) ; move 4 , 2 )  
[10263] ( ( pen 4 + 2 ; move 2 + ul , 3 * 2 ) ; move 3 , 4 )  
[10264] ( ( pen 4 ; move 2 , 2 - ua ) ; move 4 , ul ; pen ul )  
[10265] ( pen 2 ; ( pen ua ; move 3 , ul ) ; move ua , 4 * 3 )  
[10266] ( move ul - 4 , 4 ; v0 = ul - ua ; move v0 , ul )  
[10267] ( pen 4 ; ( move 4 , ul / ua ; pen ul ) ; move 2 , 0 )  
[10268] ( move 2 , ul / ua ; move ua , ua * ua ; pen ua - ul )  
[10269] ( move ul , ua ; v0 = ul / 2 ; move 4 , v0 - ul )  
[10270] ( move 3 + 2 , 2 - 4 ; move 0 , ul ; move 4 , ua + 2 )  
[10271] ( ( move ul , ul / ua ; pen 0 ) ; move 4 , 3 ; pen 4 )  
[10272] ( move ua , ul / ua ; move 4 - ul , ul ; pen ua + ua )  | ( move ua , ul / ua ; move 2 + ul , ua + ul ; v0 = ua )  
[10273] ( move 2 , 3 ; v0 = 4 - 2 ; move ua - v0 , v0 )  
[10274] ( pen 4 ; ( move 3 , ul ; pen ua ) ; move ul , 4 + 3 )  
[10275] ( move ua + ul , ua / 3 ; pen ul ; move ul , ul - ua )  
[10276] ( move 3 + 2 , 3 ; move 3 - 2 , ul ; move 0 - 3 , ua )  
[10277] ( ( move ua , ul ; pen 4 + ul ; move 4 , 2 ) ; pen 4 )  
[10278] ( move 2 , 4 ; v0 = 3 - ul ; move v0 + 3 , v0 )  
[10279] ( move 2 , ul ; ( pen 0 ; move 0 , ul ) ; move ua , ua )  | ( ( move ul + ul , ul ; pen 0 ; move ua , ul ) ; pen ul )  
[10280] ( pen ul ; move ua , ul / 4 ; move ua - ul , ua + ul )  
[10281] ( move 2 , ul / 3 ; move 2 , 0 - 3 ; move ua + 4 , 2 )  
[10282] ( ( pen ua ; move ua - ul , ua ) ; move ua - ul , ul )  
[10283] ( ( v0 = 2 ; move ua - 2 , 2 ) ; move v0 , v0 )  
[10284] ( move ua , 2 - 4 ; v0 = 3 * 3 ; move v0 , v0 )  
[10285] ( move 0 - 3 , 2 / 4 ; move 0 , 2 + ul ; move 4 , ul )  
[10286] ( move ua - 2 , 4 * 3 ; v0 = 4 ; move v0 , v0 )  
[10287] ( ( ( pen 3 ; move ul , ua ) ; move 4 , 2 ) ; pen ul )  
[10288] ( move ul + ul , 3 + 3 ; move 2 , 0 - 4 ; move 3 , 4 )  
[10289] ( v0 = 4 + 2 ; move v0 , v0 ; move ua , 4 / 3 )  
[10290] ( move 2 + 2 , 0 ; move 4 , ua - 4 ; move 4 / 2 , ua )  
[10291] ( move 4 , ua - 4 ; v0 = 2 ; move 4 - v0 , v0 )  
[10292] ( move ul - ua , ul / 3 ; pen ua ; move ul / ua , ul )  
[10293] ( move 2 - 4 , 4 ; move 0 , 4 * 2 ; move ua + ul , 2 )  
[10294] ( move 0 , ua ; move ua , ul ; ( pen 3 ; move ua , 2 ) )  
[10295] ( ( pen 3 ; move 3 , ua / 4 ) ; pen ul ; move ul , 4 )  
[10296] ( move 0 , 3 ; move ua - 2 , ul ; move 4 * 2 , 3 * 3 )  
[10297] ( move 2 , 4 + 2 ; move 4 , ua * 2 ; move 2 , 3 - ul )  
[10298] ( ( pen 3 ; move 0 , ua ; move ua , ul ) ; move ua , 3 )  
[10299] ( move 3 , 3 / 2 ; v0 = ul ; move v0 , v0 - 4 )  | ( move ul , ua / 4 ; v0 = 3 ; move v0 , ua + v0 )  
[10300] ( move ul , 3 + 2 ; ( move 2 , 2 ; move ua , 4 + 2 ) )  
[10301] ( v0 = ua / 4 ; move 3 , v0 ; move v0 * 2 , 4 )  
[10302] ( move ua , ua ; ( pen 0 ; move ul , ul ; move 3 , 3 ) )  
[10303] ( move 0 , 3 ; ( move 4 , 2 ; move ua + 2 , 3 - ul ) )  
[10304] ( move 4 , 2 ; v0 = ua * 4 ; move 4 , v0 * v0 )  
[10305] ( ( move 3 , ua ; move ul , 0 ; pen ua ) ; move 3 , ul )  
[10306] ( move 0 , ul ; ( move 4 , ul ; pen 0 ) ; move ul , ul )  
[10307] ( ( move ul , 0 ; move ul , ul ; pen 0 ) ; move 4 , ul )  
[10308] ( ( v0 = 3 + 3 ; move ua , v0 ) ; move v0 , 4 )  
[10309] ( move 3 , ua ; ( pen ua ; move 4 , ul ) ; move ua , 0 )  
[10310] ( move ua , ul ; ( pen 0 ; move ua , 2 ) ; v0 = ua )  
[10311] ( move ul , 0 ; ( pen ua ; move 3 , ul ; move 2 , ul ) )  
[10312] ( move ua - 2 , 0 ; move 4 , 0 - 4 ; v0 = ul / 3 )  
[10313] ( ( move ua , 0 ; move ul - 4 , 0 - 2 ) ; v0 = 2 )  
[10314] ( move 0 , ua / 4 ; move 2 , 4 + 3 ; move ua , 3 - 4 )  
[10315] ( move 4 , 2 ; move 2 - 3 , ua + 4 ; move 3 , 3 - ul )  
[10316] ( move 4 , 4 + ul ; v0 = 4 ; move v0 , v0 * 4 )  
[10317] ( move ua , ul ; ( pen 3 ; move 0 , ua ; move 4 , ul ) )  | ( ( move ua , ul ; pen 3 ; move 0 , ua ) ; move 4 , ul )  
[10318] ( move 3 - ua , 0 ; move 3 , 3 * 2 ; v0 = ua * 4 )  
[10319] ( move 4 , 0 ; ( pen 3 ; move ul , ua ) ; move ul , ua )  
[10320] ( ( move ua , 0 ; move ul , ul ) ; pen 4 ; move ua , 3 )  
[10321] ( move ua , 0 ; move 3 , 4 ; ( move ul , ul ; pen ua ) )  
[10322] ( move ua + ul , ua ; move ul , ua + ul ; move ua , ul )  
[10323] ( ( move ul , 2 ; move 4 , ul ; move ua , ul ) ; pen 0 )  
[10324] ( move ul , 4 + 3 ; move ul , 4 + 2 ; move 3 , 4 + 3 )  
[10325] ( ( move ul , ul ; move 0 , ul ) ; pen 2 ; move 3 , ul )  
[10326] ( move 2 , ua / 2 ; move 4 + 3 , 3 ; move 4 , ua + 4 )  
[10327] ( pen ua ; ( move ua , 2 ; move ua , 4 ) ; move 2 , ul )  
[10328] ( ( move ua , ua ; pen ua ; move 2 , ul ) ; v0 = 2 )  
[10329] ( move ua , ua + ul ; move ua , ua * ua ; move ul , ul )  
[10330] ( move 3 - 4 , 2 ; move ua / 3 , 2 ; move 3 - ul , 3 )  
[10331] ( move 4 + ul , 4 ; move 2 , 2 - 4 ; move ua - 4 , 3 )  
[10332] ( ( move ua + 3 , ua / 3 ; move 3 , 4 ) ; move 2 , 0 )  
[10333] ( move ua , ua - ul ; move ul - ua , ul ; move ua , ua )  
[10334] ( v0 = 2 - 4 ; ( move 4 , v0 ; move v0 , ul ) )  
[10335] ( pen 2 ; move 0 , ul ; ( move 4 , ul ; move ul , ul ) )  | ( pen 2 ; move 4 , 2 ; ( v0 = ul ; move ul , v0 ) )  | ( pen 2 ; ( move 4 , 2 ; v0 = ul ; move v0 , v0 ) )  
[10336] ( ( move ua , 3 / 2 ; v0 = 4 ) ; move v0 , v0 )  
[10337] ( move 4 + 2 , 2 ; move 4 , 4 ; move 4 - ul , 3 - ua )  
[10338] ( move 0 , 3 ; move ul - 2 , 4 / 3 ; move 4 * 2 , ul )  
[10339] ( move ua , ul ; move 3 , ua ; ( pen 3 ; move ua , 4 ) )  
[10340] ( ( move ua , ul ; pen ua ; move 3 , 3 ) ; move 3 , ul )  
[10341] ( move 0 , ul ; ( move 2 , 3 / 4 ; move ua , 3 - 2 ) )  
[10342] ( move ul - ua , ua ; move ua , ul + ul ; move ul , ul )  
[10343] ( ( pen ua ; move ul , 0 ) ; move 4 , 4 ; move ul , ul )  
[10344] ( move ul , ua - ul ; move ul , ua - ul ; move ua , ua )  
[10345] ( ( move 2 , 4 + 4 ; move 4 + ul , ul ) ; move 0 , 3 )  
[10346] ( move 0 , 4 ; ( move 4 - ua , 2 ; move 4 , 3 + ul ) )  
[10347] ( ( move 2 , 3 ; move ua - 4 , 3 ) ; move 0 , ul - 4 )  
[10348] ( pen 4 ; ( move ua , ua ; move ua , 3 ; move ua , 4 ) )  
[10349] ( move 4 + 3 , ul ; ( move 2 / ua , 2 ; move 2 , 3 ) )  
[10350] ( ( move 0 , 0 ; move 4 , 4 - ul ) ; move 3 / ua , 4 )  
[10351] ( move 2 - ua , 2 / 4 ; ( move 3 , ua ; move 3 , 2 ) )  
[10352] ( ( move ul , 0 ; move ul , 4 ) ; move 4 , ul ; pen ul )  
[10353] ( move 2 , ul ; move 4 + ul , 4 * 4 ; move 2 - 4 , 3 )  
[10354] ( ( move 2 , ua ; move 3 , 4 + 3 ) ; move 4 , 3 - ua )  
[10355] ( move 2 , 4 / ua ; move 0 , 4 - 2 ; move 4 , ul / 4 )  
[10356] ( move ua + ul , 2 ; ( move 3 , 3 / 4 ; move 0 , 4 ) )  
[10357] ( move 4 , 3 / ua ; move ua / 4 , 2 ; move 0 , 2 / 4 )  
[10358] ( ( move 4 / 2 , ul ; move 3 , 3 ) ; move 0 - ul , 3 )  
[10359] ( move ul - 2 , 4 ; ( move 0 , ul / 4 ; move 3 , 2 ) )  
[10360] ( move ul , ul ; ( move 2 , 4 ; pen 4 ; move ul , ua ) )  | ( ( move ul , ul ; move ul + ul , 4 ) ; pen ua ; move ul , 0 )  
[10361] ( move ua , 4 ; pen 3 ; ( move 4 , ua ; move ul , ul ) )  
[10362] ( ( move 2 , 4 ; move 4 + ul , ua / 3 ) ; v0 = 0 )  
[10363] ( move 3 , 3 / 4 ; move ul , 2 ; move 3 / 4 , 2 - ul )  
[10364] ( pen ua ; ( move 0 , ul ; pen 0 ; move ua + 3 , ul ) )  
[10365] ( move ul , ul / ua ; move ul , ul ; move ua , ul + ul )  
[10366] ( ( move ul / 4 , 0 ; move ua , 3 * 3 ) ; move 2 , 4 )  
[10367] ( ( pen ul ; move 3 , ul ; move ul , ul ) ; move 3 , 4 )  
[10368] ( v0 = 3 ; move 3 , 0 ; ( pen v0 ; move ua , 2 ) )  
[10369] ( move 2 , 3 ; ( move ua , 4 / 2 ; move 2 - 4 , ul ) )  
[10370] ( move 2 , 4 * 4 ; move ul / 3 , 2 ; move ua / 3 , 3 )  
[10371] ( pen 3 ; move 3 , ul ; ( v0 = ul ; move ua , ul ) )  
[10372] ( move 2 , ul - ua ; ( move 3 , 3 * 2 ; v0 = 4 ) )  | ( ( move 4 - 2 , ul ; move 0 , 2 ; move 3 , 4 ) ; pen ul )  | ( v0 = 4 - ul ; move 2 , ul ; move v0 , v0 + v0 )  
[10373] ( move ul , ua ; ( move 4 , ul ; move 4 , 4 ; pen ul ) )  
[10374] ( move 2 , 4 ; ( move 3 - ua , 2 ; v0 = ua / 3 ) )  
[10375] ( v0 = 2 ; move ua + v0 , v0 ; move v0 , v0 )  
[10376] ( move ul , ul ; move ul , 4 ; ( pen 4 ; move 3 , ul ) )  
[10377] ( pen ua + ul ; ( move 2 , 0 ; pen 3 ) ; move ua , ua )  
[10378] ( move 3 , 2 / 4 ; move 3 , 4 - ua ; v0 = ua * 4 )  
[10379] ( move 3 * 2 , ua ; ( move ul , 3 - 4 ; move 4 , 3 ) )  
[10380] ( move 4 , 4 ; ( move 3 , ul ; move ul , ul ; pen ul ) )  
[10381] ( move ua , ua / 4 ; ( move 4 , 2 ; v0 = 4 + 2 ) )  
[10382] ( move 4 + ul , 2 ; ( move 4 , 4 * 3 ; move ul , 3 ) )  
[10383] ( pen ul ; ( pen 2 ; move ua , ua ; move 0 - ul , 2 ) )  
[10384] ( ( move ua , 3 / 4 ; move 4 , ua - 2 ) ; v0 = 2 )  
[10385] ( v0 = ua / 3 ; pen 2 ; move 4 + 3 , v0 * v0 )  
[10386] ( ( move 2 , 3 ; pen 0 ) ; pen ua + ul ; move ua , ul )  
[10387] ( move 2 , 4 * 3 ; move 2 , 3 / ua ; v0 = ul / 4 )  
[10388] ( v0 = ua - 2 ; move v0 , v0 ; move v0 , v0 )  
[10389] ( v0 = 2 ; ( move ul , ua - 4 ; move 4 , 2 / 3 ) )  
[10390] ( ( pen 0 ; move ua , 3 + ul ; pen 3 ) ; move ul , ua )  
[10391] ( v0 = 4 ; move v0 + v0 , v0 ; move ua , v0 )  | ( ( v0 = 4 ; move v0 + 4 , v0 ) ; move ua , v0 )  
[10392] ( ( pen ul ; move 2 , ua ; pen 0 ) ; move ul + ul , 3 )  
[10393] ( ( pen ua * ua ; move 3 , ul ) ; pen 2 ; move ua , 0 )  
[10394] ( pen 0 ; move 2 , ul ; ( pen 3 - ul ; move ua , ua ) )  
[10395] ( move 0 , 3 * 2 ; pen ua * ua ; move 3 * 3 , 4 + 3 )  
[10396] ( v0 = ua - 3 ; move v0 , v0 ; move v0 , v0 )  
[10397] ( ( move ua , 2 / ua ; pen ua ; move 2 , ul ) ; pen 0 )  
[10398] ( v0 = 4 + ul ; move v0 , v0 ; move v0 , v0 )  
[10399] ( move ua + ul , 2 / ua ; v0 = ua ; move v0 , ul )  
[10400] ( v0 = 4 ; move ua - v0 , v0 ; move v0 , v0 )  
[10401] ( v0 = 3 ; move ua , v0 ; move v0 , v0 * v0 )  
[10402] ( ( move 3 , 4 * 3 ; v0 = 3 ) ; move ul , 2 / ua )  
[10403] ( move ul - ua , ua - 2 ; v0 = ul ; move ul , v0 )  
[10404] ( ( move ua , ua ; pen ua ) ; pen 3 ; move ua - 3 , 2 )  
[10405] ( pen 2 ; ( move 2 + 2 , 3 - 2 ; move ul , ua + 4 ) )  
[10406] ( move 3 + 2 , ua ; move 2 , ua - 2 ; move 0 - ul , 0 )  
[10407] ( pen ua * 2 ; ( move 3 , ua ; pen ul ; move ul , 0 ) )  
[10408] ( pen ua + ua ; move ua - ul , ul + ul ; move ua , ul )  
[10409] ( pen ul ; ( move 4 + ul , 2 ; pen ua ) ; move ua , 2 )  
[10410] ( v0 = 4 ; move ua , v0 * v0 ; move v0 , v0 )  
[10411] ( move 3 - ua , ua * ua ; v0 = ul ; move v0 , ul )  
[10412] ( move ua , ul ; v0 = ul - 3 ; move v0 - ua , ul )  
[10413] ( move 0 , 3 - 2 ; move 4 + ul , 0 ; move 0 - ua , ul )  
[10414] ( move 3 - ua , ua + 3 ; move 0 , 0 ; move 2 - ul , 2 )  | ( move 3 - ua , ua + 3 ; move ul , ua + 2 ; v0 = ua )  
[10415] ( move ua - ul , ua ; v0 = 3 ; move ua , ua / v0 )  
[10416] ( pen ul ; move ul , ul ; ( pen ua ; move 0 - 3 , 4 ) )  
[10417] ( pen 4 / 2 ; move ua , 0 ; ( pen ua ; move ul , ul ) )  
[10418] ( ( pen 4 + 2 ; move ul , ul ) ; move 0 - 4 , 2 * 2 )  
[10419] ( v0 = ul + ul ; move v0 - ua , ul ; move ul , 4 )  | ( ( move 2 - ua , ul ; v0 = ul ) ; move ul , v0 + 3 )  
[10420] ( ( move ua + 2 , 0 - 3 ; move 2 , 4 / 3 ) ; pen ul )  
[10421] ( v0 = 4 ; move v0 , v0 / ua ; move v0 , v0 )  
[10422] ( move ua - 2 , 0 ; v0 = 4 - ua ; move v0 , v0 )  
[10423] ( pen ul ; ( pen ua ; move ul , ul ) ; move 3 , 3 + 2 )  
[10424] ( ( pen 0 ; move ua , ul - 4 ) ; pen ul ; move ul , 3 )  
[10425] ( ( move 4 * 2 , ua * 3 ; move ua + 3 , 4 ) ; pen 0 )  
[10426] ( move 0 - 2 , ul + ul ; v0 = 4 ; move v0 , v0 )  
[10427] ( move ul + ul , 4 + 2 ; ( move 2 * 2 , 4 ; pen 2 ) )  
[10428] ( move 4 , 3 ; ( v0 = 4 ; pen 4 ; move ua , v0 ) )  
[10429] ( move ul - 4 , ul ; ( pen 0 ; move ua , 4 ; pen ul ) )  
[10430] ( move 3 , 0 ; v0 = ul - ua ; move v0 , v0 * 2 )  | ( move 3 , 0 ; v0 = ul - ua ; move v0 , v0 + ul )  | ( move 3 , ua ; ( move 0 , 0 ; move ul - ua , ul + ul ) )  
[10431] ( move 0 - 3 , ul - 4 ; move 2 , ua + ul ; move 0 , 2 )  
[10432] ( move ua , ua ; ( pen 4 ; move 4 / ua , ul ) ; pen 0 )  
[10433] ( pen 4 * 2 ; move ua , 4 - 2 ; move ua / 2 , 3 / 2 )  
[10434] ( v0 = 2 + ul ; move 3 , 0 ; move v0 , ua / v0 )  
[10435] ( move ua - ul , 4 ; v0 = 0 - 3 ; move v0 , v0 )  | ( move 2 + ul , ul ; ( move ul - ua , 3 ; pen 0 ) ; pen ua )  
[10436] ( v0 = ua ; move v0 , 4 ; move v0 + 2 , ua + 4 )  
[10437] ( move ul + ul , 2 * 2 ; move 0 , 4 ; move 3 - ua , 0 )  
[10438] ( ( pen 3 ; move ul , 4 ) ; pen 3 ; move ua , ul + ul )  
[10439] ( v0 = ua - 2 ; move v0 - 3 , ul ; move v0 , 2 )  
[10440] ( move 0 , 2 + 2 ; move 3 , ua * ua ; move ua - 4 , 2 )  
[10441] ( ( move ua , ul ; pen ua ; move 3 , 4 * 2 ) ; pen ul )  
[10442] ( move 0 , ua - 3 ; move 4 + 2 , 0 ; move ul , 4 + ul )  
[10443] ( ( pen ua ; move 4 , ua ; pen ul ) ; move ul / 2 , 2 )  
[10444] ( move 3 , 4 ; ( move ua - ul , 4 ; pen ul ; pen ua ) )  
[10445] ( move 3 , 3 + 3 ; move 4 / 3 , ul - 3 ; pen 3 / ua )  
[10446] ( move ua , 4 + 3 ; move 3 - ul , 2 ; move 0 , 2 + ul )  | ( move 2 , 4 ; ( move ua , 3 ; move ul , 2 ; move ul , ua ) )  
[10447] ( move 4 + ul , 2 * 2 ; pen 4 ; move 3 / 2 , ua / 4 )  
[10448] ( move ua , 4 + 4 ; v0 = ul ; move 2 , v0 + v0 )  
[10449] ( pen 3 ; move ul , ul ; ( move ua / 2 , 3 ; pen ul ) )  | ( move ul , 0 ; v0 = 3 ; ( pen v0 ; move v0 , 4 ) )  
[10450] ( v0 = ul ; move v0 , v0 - 3 ; move 3 + 2 , ul )  
[10451] ( ( pen ul ; move 4 , 3 ; pen ul - 3 ) ; move ua , ul )  
[10452] ( pen 3 ; ( pen ua ; move 4 , ul ; move 2 , ul / ua ) )  
[10453] ( move 2 , ul / 2 ; v0 = ul ; move 2 + v0 , v0 )  
[10454] ( pen 3 ; ( ( move ua , ul ; move ua , 2 ) ; pen ul ) )  
[10455] ( v0 = 3 * 3 ; move 4 , ua ; move ua , v0 + v0 )  
[10456] ( move 0 , 4 + ul ; move ua + 3 , 3 + ul ; move 3 , 3 )  
[10457] ( pen ua ; ( move 3 * 2 , 4 * 3 ; move 2 + ul , 4 ) )  
[10458] ( move 4 , 3 ; v0 = ua ; move v0 + ul , v0 + 4 )  
[10459] ( move 3 , 2 / ua ; v0 = 3 ; move ul + v0 , v0 )  
[10460] ( v0 = ul - 3 ; move 2 , 4 ; move v0 + v0 , ul )  
[10461] ( pen ul / 4 ; move 3 * 2 , 4 * 2 ; move 3 * 2 , ul )  
[10462] ( move 3 + 3 , ul ; move ua + ul , 4 * 2 ; move 0 , 2 )  
[10463] ( pen 4 ; ( move ua , ul / 3 ; move 2 , ul ; pen ul ) )  
[10464] ( move ul - ua , 2 ; move 3 / 2 , ul - 2 ; move 2 , 0 )  
[10465] ( move ul , 3 + 2 ; move ua + 4 , 2 ; move 0 , ua / 3 )  
[10466] ( move 0 - 2 , ua ; move 2 , 4 / 3 ; move ua , ua + 3 )  
[10467] ( move 2 , 2 ; ( move ul - ua , 0 - 2 ; move ul , 0 ) )  
[10468] ( move 2 , 4 + ul ; v0 = 4 + ul ; move v0 , v0 )  
[10469] ( move ua - ul , 2 ; v0 = 3 ; move v0 , v0 / 2 )  
[10470] ( ( pen ul ; pen ua ) ; move 4 , ul ; move 4 , ul - 3 )  
[10471] ( move ua , 3 * 2 ; v0 = 4 - ua ; move v0 , v0 )  
[10472] ( move ua , 3 / 2 ; v0 = ul ; move 3 , v0 + v0 )  
[10473] ( move 0 , ul - 2 ; move 4 * 2 , 2 ; move ua + ul , 4 )  
[10474] ( move 4 , ua - 4 ; v0 = ul ; move 3 + v0 , v0 )  
[10475] ( move ul - ua , ul ; move 4 + 2 , 2 ; move 0 , 3 - 4 )  
[10476] ( v0 = ua ; move 2 / 4 , v0 + 3 ; move v0 , ul )  
[10477] ( move 4 - ua , 4 + 3 ; move ul , 0 ; move 2 , 3 + ul )  
[10478] ( v0 = ua - 3 ; move 4 + 4 , ul ; move v0 , v0 )  | ( ( move ul , ul ; move ua , ua ; move 3 , ul - 4 ) ; pen 2 )  
[10479] ( move 2 + ul , 4 ; move 0 , 3 ; move ul - 3 , ua + 4 )  
[10480] ( v0 = 4 ; move ul - ua , v0 / 2 ; move 2 , v0 )  
[10481] ( move 2 , ul / 3 ; v0 = 3 ; move v0 - ua , v0 )  
[10482] ( ( move ua + ul , 3 ; move ul , 0 ) ; move 2 + 2 , 2 )  
[10483] ( v0 = 4 ; move ua , ua / 2 ; move v0 , v0 * 2 )  
[10484] ( move 4 + 3 , ua - 4 ; v0 = ul ; move v0 , v0 )  
[10485] ( move ua - ul , 2 ; move 2 / 4 , 3 + 3 ; move 0 , ul )  
[10486] ( move 4 , 3 ; ( move 0 , ua + ua ; move 3 , 0 - ul ) )  
[10487] ( move ul + ul , 4 + 4 ; move 2 - ua , 0 ; move 4 , 3 )  
[10488] ( move 0 , 4 - ul ; move 3 - ua , 2 ; move 4 , ul - 2 )  
[10489] ( move ua + ul , 3 - ul ; ( move 0 , 2 ; move 4 , 0 ) )  
[10490] ( move 2 + ul , 3 ; move 3 , 4 ; move 2 + ul , ul - 2 )  
[10491] ( move ua , 4 + ul ; ( pen 2 ; move 4 * 2 , 4 * 4 ) )  
[10492] ( v0 = ul ; move v0 - 3 , ua ; move 4 , v0 - 4 )  
[10493] ( move ua , 0 ; ( v0 = 3 ; move v0 , v0 / ua ) )  
[10494] ( move ua , 3 - 4 ; move ul / 2 , ua ; move 0 - 3 , 2 )  
[10495] ( move 3 , 2 ; move ua / 3 , 3 + ul ; move 3 , ua + 2 )  
[10496] ( pen 4 - ul ; ( move ua , 4 * 2 ; move 2 - 4 , 4 ) )  
[10497] ( move 4 - ul , 4 + 2 ; move ul , 3 ; move 3 + ul , 0 )  
[10498] ( move 0 , 2 / 3 ; move ul + ul , 0 ; move 3 , 4 / ua )  
[10499] ( move 4 , 4 + 4 ; v0 = ul ; move v0 + ul , v0 )  
[10500] ( move ul - 2 , 2 ; move 2 - ul , 4 / ua ; move 3 , 0 )  
[10501] ( move 3 , 3 + 2 ; move ul / 2 , ua - ul ; move 3 , 2 )  
[10502] ( move ua , 0 ; move 4 - 3 , 3 + 2 ; move ul , 4 / ua )  
[10503] ( move 4 / ua , 3 ; move 0 , 4 + 3 ; move ua - 2 , ul )  
[10504] ( move 4 , 3 + 2 ; move 2 + ul , ul ; move 3 * 2 , ul )  
[10505] ( move 4 + ul , ua ; v0 = 4 ; move v0 , v0 / 3 )  
[10506] ( v0 = 3 ; move ua , v0 ; move 4 - ua , 4 / v0 )  
[10507] ( move ua , 2 ; move 3 - 2 , 4 ; move ua + 2 , 4 / ua )  
[10508] ( v0 = ua + 3 ; ( move v0 , ul ; move v0 , 3 ) )  
[10509] ( move 3 + ul , 4 * 2 ; move 0 - ua , 2 ; v0 = ul )  
[10510] ( move ua , ul ; ( pen ua ; move 0 , 3 ; move ua , ul ) )  
[10511] ( move 4 + 4 , ul - 4 ; v0 = ul ; move v0 , v0 )  
[10512] ( ( move ua , 4 * 2 ; move ul , 0 ) ; move 2 , ua - 2 )  
[10513] ( move 2 * 2 , 2 ; move 2 - ua , 2 ; v0 = ul / ua )  
[10514] ( move ua + 2 , 3 ; move ul , 4 - ul ; move 4 , 3 + 3 )  
[10515] ( move ul - 4 , 2 / 4 ; v0 = ul ; move v0 , v0 )  
[10516] ( ( move 3 , 0 ; move ul + ul , 3 ) ; move ua + 2 , 4 )  
[10517] ( move ul , 3 ; ( move 4 + ul , 2 / ua ; move 0 , 0 ) )  
[10518] ( ( move 0 - 2 , ul ; move 4 , ul ) ; move 0 , 2 / ua )  
[10519] ( move ul , 4 + 2 ; move 3 / ua , 4 ; move 2 - ua , 2 )  
[10520] ( move 4 + 3 , ul + ul ; move 4 - 2 , ua ; move 4 , 2 )  
[10521] ( move 2 - 3 , ul - ua ; move 2 , ul / 2 ; move 3 , 3 )  
[10522] ( move 3 + 2 , 2 ; move ul - 3 , ua + 4 ; v0 = ul )  
[10523] ( move 0 , 4 * 4 ; move 0 , 4 / 3 ; move ua + ul , ul )  
[10524] ( move 2 , ua ; move 4 - 2 , 2 / 3 ; move ul - 2 , ul )  
[10525] ( move ua , ul ; ( v0 = 4 ; move 2 - v0 , v0 ) )  
[10526] ( move ul , ul / 3 ; v0 = 2 ; move v0 * v0 , 4 )  | ( move ul , 2 / ua ; v0 = 3 + ul ; move v0 , v0 )  
[10527] ( move 3 , ul ; move 3 + 2 , 2 - ua ; v0 = 4 + ul )  | ( move 3 , ul ; ( move 0 , ul ; move ul , ul ) ; move 4 , ua )  
[10528] ( move ul , ul / 2 ; move 4 , 0 ; move ua - 2 , 2 / 3 )  
[10529] ( ( pen 2 / ua ; move 4 , 2 / 3 ) ; move ul , 2 / 4 )  
[10530] ( move ul - 2 , 4 + 3 ; move ua + ul , 4 ; move 2 , 4 )  
[10531] ( ( move ua + 2 , ua ; move ul , 2 - 3 ) ; v0 = 0 )  
[10532] ( move 2 , 0 ; ( move ul , 4 - ua ; move 2 , ua - 3 ) )  
[10533] ( move ua , ua + 2 ; move ul , 4 * 4 ; move 4 , 3 + 2 )  
[10534] ( move 3 , ua * 4 ; move ul , 0 ; move 4 + 3 , ul - 3 )  
[10535] ( move 3 , 2 / ua ; move 2 , 0 - ul ; v0 = ua - 4 )  
[10536] ( move ua + 2 , 4 ; ( move 3 / 4 , ul ; pen 4 * 4 ) )  
[10537] ( ( move ua + 2 , ua - 3 ; v0 = 0 ) ; move ua , 3 )  
[10538] ( move 2 - 4 , ul ; ( move 2 + ul , ul ; move 2 , 0 ) )  
[10539] ( move 3 , 0 ; ( move ul , 4 ; move 3 - ul , 0 - ul ) )  
[10540] ( move ul , 0 ; ( v0 = 4 ; move v0 , ul / v0 ) )  
[10541] ( pen ua ; ( move ul , 2 ; move 2 , ul ; move ua , ul ) )  
[10542] ( move 4 - ua , ul ; ( v0 = 3 ; move v0 , v0 ) )  
[10543] ( move 3 , ul - 3 ; move 0 - ua , 3 * 3 ; v0 = ul )  
[10544] ( move 3 + ul , 2 ; move 4 + 4 , 4 ; move ua , 4 + ul )  
[10545] ( move 0 - ua , 2 ; move 2 , ul ; move ua / 4 , 3 / 4 )  
[10546] ( move 2 + ul , 2 ; move 3 , 4 * 3 ; move ul - 4 , ua )  
[10547] ( move 4 - ua , ul ; move 3 + 2 , ua + 3 ; v0 = 4 )  
[10548] ( ( move 2 , ua - 2 ; move 2 , ul / 3 ) ; move 0 , ul )  
[10549] ( move ul , 2 ; move 4 * 2 , ul / 2 ; move 3 , 2 + ul )  
[10550] ( move 4 + 4 , ua ; move 2 - ua , 4 + 3 ; v0 = ua )  
[10551] ( move ua , ua + 4 ; move 3 + ul , 4 / 3 ; v0 = 0 )  
[10552] ( move 4 , ua - 4 ; ( move ua , 0 ; move 3 , ua + 3 ) )  
[10553] ( ( move ul , ua ; move ua , ul ; pen 0 ) ; move 4 , ul )  
[10554] ( move ul , 0 ; ( pen ua ; move 4 , ua ; move ul , ul ) )  
[10555] ( move 3 , 4 ; move 3 / 2 , 3 + 3 ; move ul , ua + ul )  
[10556] ( move 3 , 3 - ul ; move 3 , 3 + ul ; move ul , 3 * 2 )  
[10557] ( move ua , ul ; move 4 - 3 , 2 ; move 4 + 2 , 3 / ua )  
[10558] ( move 4 , 0 ; move ul / 2 , ul ; move ul - 3 , 4 + 3 )  
[10559] ( v0 = 4 ; ( move v0 , ua - ul ; move 4 , v0 ) )  
[10560] ( ( move ua + 4 , 4 ; move ul - 2 , 2 ) ; move ua , 2 )  
[10561] ( move ul , ul - 2 ; move 2 * 2 , 4 + 3 ; v0 = ul )  
[10562] ( move ua , 2 ; pen ua ; ( move ua , 4 ; move ul , ul ) )  
[10563] ( move ul + ul , 2 ; ( move 2 , 2 ; move 2 - ul , 4 ) )  
[10564] ( move 2 - 4 , 4 ; move ul + ul , 4 ; move 2 , 3 - ul )  
[10565] ( move 3 - ul , 3 + 3 ; move 4 , 4 - 2 ; move ul , ul )  
[10566] ( move ua , 0 ; move 4 + ul , ua / 3 ; v0 = 3 * 3 )  | ( move ua , ua + ua ; move 4 + ul , ua / 3 ; v0 = 2 )  
[10567] ( ( move ul - 3 , 3 ; move ua , 3 * 2 ) ; move 0 , ul )  
[10568] ( move ua + 4 , 3 / 4 ; move 3 - ul , ul ; move 0 , 4 )  
[10569] ( move ua - 4 , 3 / 2 ; move 4 , ul ; move 0 , 4 - ul )  
[10570] ( move 4 * 2 , ul ; ( move ul , 2 ; move ul , 0 - 2 ) )  
[10571] ( ( move ua - 3 , ul ; move 0 , 3 ) ; move ua , 3 * 3 )  
[10572] ( ( move ul , 3 ; pen ua ; move ul , ua ) ; move 3 , ua )  
[10573] ( ( pen ua ; move ua , 4 ; move ul , ua ) ; move 2 , ul )  
[10574] ( move 3 , ua * 4 ; move 2 + ul , 4 * 2 ; v0 = ua )  
[10575] ( move ua + 2 , ul ; ( move ul , 4 * 2 ; v0 = 0 ) )  
[10576] ( ( move ul , 3 ; pen ul ; move ua , ul ) ; move ua , 3 )  
[10577] ( move ua / 2 , 3 + 2 ; move ua , ul ; move 4 , 4 * 4 )  
[10578] ( move ul , 4 + 3 ; move 4 , 4 + ul ; v0 = ua + 3 )  
[10579] ( move 2 , ua ; move 4 / 3 , 3 * 3 ; move 4 - ua , ua )  
[10580] ( move ua / 4 , 0 ; move ul , 3 * 2 ; move 4 , 4 - ul )  
[10581] ( move ul - 2 , 4 * 2 ; move 3 / 4 , ul ; move ua , 2 )  
[10582] ( move ul , ua / 3 ; ( v0 = 4 ; move v0 , v0 ) )  
[10583] ( move ua , 4 ; ( move 2 , ul ; move ua , ul ; pen ul ) )  | ( ( move ua , 4 ; pen ul ) ; move 2 , ul ; move ua , ul )  
[10584] ( ( move 2 , ua ; pen ul ) ; move ua , 4 ; move ul , ul )  
[10585] ( move 3 , ua ; ( pen ua ; move 4 , ua ; move ul , ul ) )  
[10586] ( pen ua ; ( move ul , 4 ; move ua , 2 ; move ul , ul ) )  
[10587] ( pen 2 ; v0 = 4 - ua ; move v0 - ua , v0 + 2 )  
[10588] ( move 3 , ua + 2 ; ( move 4 + ul , ul ; move 4 , 2 ) )  
[10589] ( move 4 , 4 * 2 ; move ul , ua ; move 3 * 3 , ua + 4 )  
[10590] ( ( move 2 + ul , 3 ; move ul - ua , 4 ) ; v0 = 0 )  
[10591] ( ( move 3 , ua ; pen ua ) ; move ul , ul ; move ua , 4 )  
[10592] ( move 3 + 2 , ua * 4 ; pen 0 - ua ; move 3 + ul , 0 )  
[10593] ( ( move 4 , 4 ; move 4 , 3 - ua ) ; move 0 - ua , ua )  
[10594] ( pen ua ; ( move 2 , ua ; move ul , ul ) ; move 4 , ul )  
[10595] ( move 4 / 2 , ul ; move ul - 3 , 4 ; move 4 + ul , 2 )  
[10596] ( move 2 / ua , 4 ; move 4 , ul + ul ; move 4 , 4 + 3 )  
[10597] ( move 4 + 3 , 4 ; move ul , 4 - ul ; move ua / 2 , 3 )  
[10598] ( move 3 , 3 ; ( v0 = 0 - ul ; move ua + ul , 4 ) )  
[10599] ( move 4 + 3 , ua ; move ul , 3 / 4 ; move 3 + ul , 4 )  
[10600] ( move ua , 3 * 3 ; move 4 * 2 , 3 + ul ; v0 = ul )  
[10601] ( move 4 - ul , ua ; move 4 + ul , 2 - 4 ; v0 = 3 )  
[10602] ( move 0 , ua / 4 ; ( move 4 + 2 , ul ; move 3 , ul ) )  
[10603] ( ( move 0 , 4 * 3 ; move 3 , ul / ua ) ; move ua , 2 )  
[10604] ( ( move ul , 0 ; move ul - 4 , 2 ) ; move ul , 2 / 3 )  
[10605] ( ( move 3 * 2 , ul ; move 3 + ul , 2 ) ; v0 = ua )  
[10606] ( move ul / 3 , ua ; ( move ua - 4 , 0 ; move 3 , 4 ) )  
[10607] ( move 4 , 3 / 4 ; ( move 0 , 4 ; move ua + ul , ua ) )  
[10608] ( move ua + 2 , ul ; ( move 4 , ul - 2 ; v0 = 3 ) )  
[10609] ( move ua , 4 * 2 ; move 4 / ua , 2 - ul ; v0 = 3 )  
[10610] ( move 4 - 2 , ua * 3 ; pen 0 ; move ua + 2 , 2 - ul )  
[10611] ( move 3 , ua * 4 ; move 3 , ua / 3 ; move ua / 4 , 2 )  
[10612] ( ( move ua - 4 , 2 ; move 2 , ul ) ; move 3 , ua * 4 )  
[10613] ( ( move 3 , ua / 2 ; move 2 , ua ) ; move ua - 4 , 4 )  
[10614] ( pen ua + 2 ; move 3 , 3 + 2 ; move 4 + 2 , ul + ul )  
[10615] ( move 3 - ua , ul ; ( move ul / 4 , 4 ; move 2 , 0 ) )  
[10616] ( move 3 , ul ; ( move ul , ul ; pen ul ; move ua , 4 ) )  
[10617] ( move 3 , ul / ua ; ( move ua + 2 , 3 ; v0 = 2 ) )  
[10618] ( move 2 - ua , 3 + 2 ; pen ua + 3 ; move 3 - 2 , ul )  
[10619] ( ( move ua + 3 , ul ; move 3 , 4 ) ; move 4 , 3 - ua )  
[10620] ( ( move ul , ul / 4 ; move 2 , 0 - ul ) ; move 3 , 4 )  
[10621] ( ( move 4 , ua ; move ul , ul ; move ul , ul ) ; pen 4 )  | ( ( move 4 , ua ; move ul , ul ) ; move ul , ul ; pen ul / ua )  
[10622] ( move ua , 3 ; move ua / 3 , 3 * 3 ; v0 = ua / 3 )  
[10623] ( move 2 / 3 , ua ; move ul / 3 , ul ; move 4 , 4 * 2 )  
[10624] ( move 3 * 2 , 4 ; move ua , 4 * 4 ; v0 = ua - ul )  
[10625] ( ( move ua , ul ; move 2 - ul , 4 ) ; move 4 , 3 * 2 )  
[10626] ( move 4 , ua ; ( move 2 , ua ; move 4 - ua , 4 * 3 ) )  
[10627] ( move 4 , ua ; ( move 4 - ua , 4 + 2 ; v0 = ua ) )  
[10628] ( move 4 + ul , 3 ; ( move 4 , 2 ; move 4 , ua - ul ) )  
[10629] ( ( move ul , 2 ; move 2 - ua , 4 ) ; v0 = 3 / ua )  
[10630] ( move 2 + 2 , 3 + ul ; pen 4 ; move 3 + ul , 3 - ua )  
[10631] ( move ua + ul , 4 ; ( move 3 , 3 * 2 ; v0 = ul ) )  
[10632] ( move 4 , 3 ; ( move ua + 3 , ua - 4 ; v0 = ul ) )  
[10633] ( ( move ua , 0 ; pen 3 ) ; v0 = ua ; move v0 , 4 )  
[10634] ( move 4 / 2 , ul ; ( move 3 , 2 + ul ; move ul , 4 ) )  
[10635] ( ( move ul , 4 * 4 ; move 3 , 2 ) ; move ua , ua * 4 )  
[10636] ( ( move 3 , 4 ; move 2 , ul - 3 ) ; move ua / 4 , ul )  
[10637] ( ( move ul , 2 ; v0 = ua ) ; pen v0 ; move 3 , 2 )  
[10638] ( ( move 2 + ul , ua * 3 ; pen 0 ) ; move 4 + ul , 0 )  
[10639] ( ( move 2 - ua , ua ; pen ua ; move 0 , ul ) ; pen ul )  
[10640] ( move ul , 4 / 2 ; move 3 / 4 , 4 ; move 4 + ul , ul )  
[10641] ( move 3 * 2 , 3 ; pen 4 + 3 ; move ul - ua , 0 - ul )  
[10642] ( move ua , 0 ; ( pen ua * 4 ; move 3 + 2 , 0 - ul ) )  
[10643] ( move 4 - 2 , ul + ul ; pen 3 + 3 ; move 2 + ul , 4 )  
[10644] ( pen ul / 2 ; move 0 - 2 , 4 * 3 ; move ul - ua , 2 )  
[10645] ( pen 2 ; ( v0 = 4 ; move ua , v0 ; move ul , 2 ) )  
[10646] ( ( v0 = 2 ; pen v0 ) ; move ul , ua ; move 4 , 2 )  
[10647] ( ( move 4 , ua * 4 ; move ua , 4 ) ; move 4 , ul - 3 )  
[10648] ( ( move ua / 4 , 3 ; move ua , 4 / 2 ) ; move ul , 4 )  
[10649] ( move ua , ul ; ( pen ul ; pen ua + ua ; move 2 , 3 ) )  
[10650] ( move ul + ul , ul ; move ua + 3 , 0 - 3 ; move 0 , 0 )  
[10651] ( ( move 4 , 4 * 3 ; move ua - ul , 4 ) ; v0 = ua )  
[10652] ( move ul - ua , ua ; pen 4 ; ( pen 0 ; move ua , ul ) )  
[10653] ( pen ul ; move ua , ua - ul ; ( pen 0 ; move 3 , ul ) )  
[10654] ( pen 3 + 2 ; ( move 3 , ua - ul ; move 2 + 2 , ul ) )  
[10655] ( pen ua ; ( move ua + ul , ua ; pen ua ) ; move 2 , 4 )  
[10656] ( move ua + ul , ua ; pen 3 ; ( pen ua ; move ua , 3 ) )  
[10657] ( ( pen 3 ; move ua + ul , ul ) ; pen 0 ; move ul , ul )  
[10658] ( ( move ul , 4 / ua ; move 3 , 4 * 4 ) ; move ul , 2 )  
[10659] ( move ua - 4 , ul ; move ul - 3 , 4 - 2 ; pen 3 + 2 )  
[10660] ( pen 3 ; ( v0 = ua + ul ; move v0 , 3 / v0 ) )  
[10661] ( move 3 , 3 / 2 ; ( move ul , ul / 3 ; v0 = ul ) )  
[10662] ( move 2 - ua , 2 ; ( pen ua - 2 ; move 4 , 2 - ul ) )  
[10663] ( pen 3 ; ( move ul + ul , ua * 2 ; move 0 - 3 , 4 ) )  
[10664] ( ( move ua - ul , 4 ; pen 0 ) ; move ul , ul ; pen ul )  
[10665] ( move ul - ua , ul ; v0 = 0 - 2 ; move v0 , v0 )  
[10666] ( ( move ua , 0 - ua ; pen 2 ) ; move ul - 4 , 4 * 2 )  
[10667] ( ( pen ua ; move ua , ul ) ; pen ul / ua ; move 4 , 0 )  
[10668] ( move 0 , ua + ua ; move ua + ul , 3 ; move 2 , 2 - 3 )  | ( move ua + ul , 4 - ul ; move 2 , ua - ul ; v0 = ua )  
[10669] ( move 0 , ua / 2 ; move 3 , ua ; move ua + ul , 0 - 2 )  
[10670] ( move ua , 2 - ua ; v0 = ua - 2 ; move v0 , v0 )  
[10671] ( move ua + 2 , 0 ; move ul - 2 , ul / 2 ; move 0 , ua )  
[10672] ( move 2 , ul + ul ; v0 = ua + 2 ; move v0 , v0 )  
[10673] ( move 0 - 3 , ua ; move ul , 0 - ul ; move 2 / ua , 0 )  
[10674] ( move ul , ua ; v0 = ul - ua ; move ua , ul / v0 )  
[10675] ( pen ua ; move 3 , ul ; ( pen ua ; move ua , ul - 3 ) )  
[10676] ( move ul + ul , 0 - ul ; move 0 - 4 , 0 ; move ul , 3 )  
[10677] ( ( pen 4 ; move ua , 2 ; pen ul ) ; move ul - ua , ul )  
[10678] ( ( pen ua ; move ul , ua ) ; pen ul ; move 3 , 3 - ul )  
[10679] ( move ua - 2 , 0 ; move ul , 0 ; move 3 - ua , 4 + ul )  
[10680] ( move 4 , 4 + 3 ; pen 2 + ul ; move 3 + ul , ul / 4 )  
[10681] ( move ua + 3 , 4 + 2 ; move 0 , ul ; move ua + 2 , ul )  
[10682] ( ( pen ua ; move 3 , ua ) ; pen ul ; move 4 , ul + ul )  
[10683] ( ( pen ua ; move ua , 4 ; move ua - 3 , ul ) ; pen ul )  
[10684] ( ( move ul , ul / 4 ; pen 0 ) ; move 4 + 4 , 0 - ua )  
[10685] ( move 4 , 0 ; move 0 , 4 + 2 ; move ua - ul , ua + ul )  
[10686] ( v0 = 3 - ua ; move v0 , ul ; move 2 , v0 - ua )  
[10687] ( move ua , ua + 2 ; move 4 + ul , 4 + ul ; move 0 , 2 )  
[10688] ( pen ua ; ( move 3 , ul ; pen ua - ul ) ; move 4 , ul )  
[10689] ( move 0 , 4 ; v0 = ua ; move ul - v0 , ua * v0 )  
[10690] ( move 2 - 4 , 3 ; ( move 4 + 2 , ul ; pen ul - ua ) )  
[10691] ( move 2 , ul - 2 ; v0 = ua - ul ; move v0 , v0 )  
[10692] ( ( pen 4 ; move ul - ua , ua ) ; move ua , ul ; pen 4 )  
[10693] ( move ua - 3 , ua - 4 ; move ua , ua + 2 ; move 0 , 3 )  
[10694] ( move 0 , 0 ; move 4 + ul , 4 ; move ua + ul , ua + 4 )  
[10695] ( move 2 , ua ; ( move ul - 3 , 4 + 4 ; pen 3 + ul ) )  
[10696] ( move 2 + ul , 0 ; move 2 , ua + 4 ; move ua , ul - 4 )  
[10697] ( move 4 + ul , 0 ; move ul , 3 + 2 ; move 2 + ul , ul )  
[10698] ( move ul , 0 ; move ua + 3 , ul ; move 4 - 2 , ua - 2 )  
[10699] ( move 0 , 0 ; move ul / 2 , ua + 4 ; move ua , 4 + ul )  
[10700] ( ( pen 2 ; move ua , ul ; move ul / 3 , ul ) ; pen ul )  
[10701] ( move 0 - ua , 4 + ul ; move 2 + ul , ul ; v0 = 0 )  
[10702] ( move 2 + 2 , ul - 3 ; move ul - 2 , 2 ; move ua , ua )  
[10703] ( move ua + 2 , ua ; move ul - 3 , 0 ; move 3 , ul - 3 )  
[10704] ( pen 2 ; ( move ul - 4 , ul ; move 2 - ua , 3 * 3 ) )  
[10705] ( ( move ua , ul ; pen ul ; pen ua ) ; move 3 / ua , 4 )  
[10706] ( move 3 * 2 , 0 ; move ua + ul , ua * ua ; v0 = 0 )  
[10707] ( move 4 + ul , 4 * 3 ; move 4 + ul , 4 + 4 ; pen ul )  
[10708] ( move ua + ul , 0 ; move 3 , 2 ; move ua - 2 , 4 - ul )  
[10709] ( move 3 , 0 ; move 4 + ul , 2 ; move ua - ul , 2 + ul )  
[10710] ( ( move 4 + ul , 4 + 3 ; pen 3 + ul ) ; move ul , 3 )  
[10711] ( move 2 , ul ; ( pen ul / ua ; move ua , 4 ; pen ul ) )  
[10712] ( move 2 , 0 - ua ; move 2 - ua , 3 ; move 2 / ua , ul )  
[10713] ( move ul + ul , 0 ; move 2 + ul , 3 - ul ; move 3 , 2 )  
[10714] ( move 2 , 0 ; move 2 - ul , 2 * 2 ; move ul + ul , ul )  
[10715] ( move ua , ul - 4 ; move 0 , ul / 2 ; move 3 - ua , 0 )  
[10716] ( move 3 - ua , 0 ; move 2 , ul / ua ; move 4 + 2 , ua )  
[10717] ( move ua , 3 ; v0 = ul - 3 ; move v0 - ul , v0 )  | ( move ua , 3 ; move ul - 4 , ul - 3 ; v0 = ua + 3 )  
[10718] ( move 0 - 3 , 0 ; move ua + ul , 4 ; v0 = ua - ul )  
[10719] ( pen ul ; ( move 3 , ul - 4 ; pen ul ) ; move ul , ul )  
[10720] ( move ul , 0 ; move 4 / ua , 4 + ul ; move 2 + ul , 0 )  
[10721] ( move ua + ul , 4 ; move 2 , 0 - 2 ; move ul , 4 + ul )  
[10722] ( move 0 - ul , 0 - ul ; move 2 , 2 / ua ; move 4 , ul )  
[10723] ( move ul , ul ; ( pen 4 ; move ul - ua , ul ) ; pen 4 )  
[10724] ( move ua + 2 , 2 ; move ul , ul + ul ; move 2 / 4 , 0 )  
[10725] ( move 0 , 4 / ua ; ( pen ul / ua ; move 3 + 3 , 4 ) )  
[10726] ( move ua + ul , 2 ; move ua + 3 , ua - 4 ; v0 = 0 )  
[10727] ( move ua - ul , 0 ; move ul / 3 , 3 ; move ua - 3 , 0 )  
[10728] ( move ul , ul ; move ul , 3 + 2 ; move 2 + ul , 4 + 2 )  
[10729] ( move ua / 3 , 0 ; move 3 + ul , ua ; move 2 - ua , 4 )  
[10730] ( move 2 , ua / 3 ; move ul + ul , ua + 2 ; v0 = 0 )  
[10731] ( move 3 - ul , 2 ; move 3 , ua + 2 ; move ua , 4 - ua )  
[10732] ( move 2 - ul , 2 ; move 2 , 4 + ul ; move ua , ua * 2 )  
[10733] ( move ua - 4 , 0 ; move 3 , ul ; move ul - 4 , 0 - ul )  
[10734] ( move ua , 0 - 2 ; move 3 / ua , 3 ; move ul , 3 + ul )  
[10735] ( move ua , 4 - 2 ; move 0 , ua + 4 ; move 4 - ua , ul )  
[10736] ( v0 = 4 ; move ul - ua , 4 ; move v0 + v0 , ul )  
[10737] ( move 2 + ul , ul ; v0 = 4 ; move ua / v0 , v0 )  | ( move ul , 3 - 2 ; move ua / 3 , ua ; move ua / 4 , 4 )  
[10738] ( move ul - 4 , 0 ; move 2 , ua - 4 ; move ua , ua * 2 )  
[10739] ( move ua , 3 - 2 ; move 2 , ul ; move 2 - 4 , ua + ul )  
[10740] ( ( move 4 + ul , 4 + ul ; move 4 * 2 , 4 ) ; pen ua )  
[10741] ( move ul , 0 ; move 4 - ul , ua - 4 ; move ua , 0 - 4 )  
[10742] ( move ua + ul , ua ; move 2 , 4 * 2 ; move 3 , 2 + ul )  
[10743] ( move ul , 4 - 2 ; move 3 , ul ; move 0 - ul , ua + 3 )  
[10744] ( move 3 , 3 + ul ; move 2 , 4 ; move ul - 2 , ua + ul )  
[10745] ( move ul , ul - ua ; v0 = 4 ; move v0 , 3 * v0 )  
[10746] ( move 4 + 2 , ul ; move ul - ua , ul ; move 2 , 4 + 2 )  
[10747] ( move ul , 3 - ua ; move ua - 4 , 0 - ul ; move 4 , 2 )  
[10748] ( move 2 + ul , 2 ; move 3 + ul , ua * 3 ; move ua , 4 )  
[10749] ( move 0 , ul - 3 ; move ul - 4 , 3 ; move 2 - ua , ul )  
[10750] ( pen 3 ; move 4 / 3 , 2 / ua ; move 4 - ul , 4 / ua )  
[10751] ( move 2 + ul , 3 + ul ; move 0 , 4 ; move ul , ul / 2 )  
[10752] ( move ul - 2 , 3 + 2 ; move ul , ua + ul ; move 4 , 3 )  
[10753] ( move 3 - ul , 0 ; move ua + ul , 4 ; move 4 , 3 + ul )  
[10754] ( move ua - ul , ul ; move 3 , 3 - ua ; move 4 + 4 , 0 )  
[10755] ( move 2 - ua , 0 ; move ua + ul , 2 / 3 ; v0 = ul )  
[10756] ( move 4 , ua * ua ; move ul , 3 - ul ; move 4 + 2 , 0 )  
[10757] ( move ua + 2 , 4 ; move ua - 3 , 3 ; move 3 , ua - ul )  
[10758] ( move ul , 0 - ul ; move ua / 4 , 2 ; move 2 , ua * 2 )  
[10759] ( move 2 * 2 , ua - 3 ; move ua - ul , ul ; move 3 , 2 )  
[10760] ( move 3 , ul ; v0 = ul - 3 ; move v0 , v0 / ua )  
[10761] ( move 0 , ul ; move 3 * 2 , 4 ; move ul + ul , 3 - ul )  
[10762] ( move 2 + ul , 2 - 4 ; move ul , ua + 3 ; move ul , 4 )  
[10763] ( v0 = 3 + 3 ; move 3 , v0 ; move v0 , v0 - 2 )  
[10764] ( move 4 , ul ; v0 = ul - 4 ; move v0 , v0 - ul )  
[10765] ( move ua - 4 , ul ; move ua + 3 , 4 ; move 0 , ua / 3 )  
[10766] ( move 0 , ua ; ( move ua + 4 , ul ; move 3 , ua - 2 ) )  
[10767] ( move 3 + 2 , 4 ; move ul - ua , 2 ; move ul , ua * 3 )  
[10768] ( move 3 + 2 , ul ; move ua + 3 , 3 + ul ; v0 = ul )  
[10769] ( move 2 , ul ; ( move ua + 2 , 0 ; move ua - ul , 4 ) )  
[10770] ( move 4 - ua , ul / ua ; move 0 , ul - 3 ; move 2 , 3 )  
[10771] ( move ua / 2 , ua ; move ul , 3 + 2 ; move ul , 4 + 3 )  
[10772] ( ( move 3 - ul , 0 ; move 0 , 4 ) ; move ua + ul , ul )  
[10773] ( move 2 - ua , 3 ; move 2 + ul , 4 ; v0 = ua + ul )  
[10774] ( move ul , 4 + 3 ; move 3 - ua , ua ; move ul , 3 + 3 )  
[10775] ( move ul , 3 + 2 ; move ul , 3 + ul ; move ua , 3 / 2 )  
[10776] ( move 4 , ua + 3 ; move 2 + ul , ua - 4 ; move 3 , ul )  
[10777] ( move 2 , 4 ; move ua - 3 , 2 ; move 3 - ul , ul + ul )  
[10778] ( ( move ul + ul , 2 ; move 0 - ua , ul ) ; move 3 , 2 )  
[10779] ( move 4 - ul , 0 - ua ; move ul , 2 ; move ul , 4 + 4 )  | ( move 2 + ul , ua ; ( move 2 - ul , 2 ; move ul , 2 ) )  
[10780] ( move 3 , ul ; v0 = ul - 3 ; move v0 , ul / v0 )  
[10781] ( ( v0 = ua - 4 ; move ua , v0 ) ; move ua , v0 )  
[10782] ( move ul / 2 , 0 ; move ua + ul , ul ; v0 = 4 + 2 )  
[10783] ( move ua , 4 - 3 ; move 2 + ul , ul ; move 4 , ua - 2 )  
[10784] ( move 3 , ua ; move 2 , 2 * 2 ; move ua / 3 , ul - ua )  
[10785] ( ( pen 2 / 4 ; move ul , 4 * 4 ) ; move 3 , ua + ul )  
[10786] ( move ul , 4 + 2 ; move 4 , ua + ul ; move 4 , ua + 3 )  
[10787] ( move ua , 0 - ua ; ( move ul , 0 ; move ua / 2 , 4 ) )  
[10788] ( move 4 + ul , ul - 3 ; move 4 , 0 ; move ua , 3 - ul )  
[10789] ( move ua , 3 - ul ; move 3 / 2 , ua + 3 ; move 2 , ul )  
[10790] ( move 2 + ul , ua + ul ; move 3 - ua , 4 ; v0 = 2 )  
[10791] ( move ul , 2 - ul ; move ul , 2 ; move 3 * 2 , ul - 2 )  
[10792] ( move ua - 4 , 4 ; move 2 , 3 + ul ; move 3 + ul , ua )  
[10793] ( move ua , ua ; ( move 3 - 2 , 2 ; move ua + 2 , ul ) )  
[10794] ( move 4 , 3 + 2 ; move ul , ua / 4 ; move ua , ua + 3 )  
[10795] ( move 0 , ua - ul ; move ua , ul / 3 ; move 3 , 4 + 4 )  
[10796] ( v0 = 4 ; move 3 , v0 * v0 ; move 0 - 3 , v0 )  
[10797] ( move ul - 3 , ua + 4 ; move ul - ua , 4 ; v0 = 0 )  
[10798] ( move 3 , 4 - ua ; move 2 , ua + 4 ; move 4 - ul , ua )  
[10799] ( move 4 , ua + ua ; move ul - ua , 4 * 3 ; v0 = 0 )  
[10800] ( move ua , 0 ; ( move ul , 3 / 2 ; move 3 , ua + ua ) )  
[10801] ( move ua , 2 ; move ul - 4 , ua ; move ul - 3 , 4 + 3 )  
[10802] ( move ua - ul , ul / 3 ; move 0 , ua / 4 ; move 4 , 0 )  
[10803] ( ( v0 = 3 ; move ul - v0 , v0 ) ; move ua , ul )  
[10804] ( move 2 , 2 ; ( move ul - 2 , ua ; move ua , 2 - ul ) )  
[10805] ( move ua , 3 ; ( move ul , 3 + 2 ; move ua , 2 + ul ) )  
[10806] ( move ul - 4 , ua * 2 ; move 3 , ul ; move 2 , ua - 3 )  
[10807] ( move 0 , ua * ua ; ( move 2 , 3 + ul ; move 3 , ul ) )  
[10808] ( move ua - ul , 0 ; move ua , ul - 3 ; v0 = 2 / 3 )  
[10809] ( move 4 , 3 ; move ua + 2 , ua - ul ; v0 = ua * 2 )  
[10810] ( move ul , 3 ; ( move ua , ul + ul ; move 0 - 2 , 3 ) )  
[10811] ( move ua - 4 , ul / 2 ; move 4 - ul , 0 ; move 2 , ul )  
[10812] ( move 0 , 3 ; move ul - ua , 4 + 3 ; move ul / ua , 4 )  
[10813] ( move 3 * 2 , ul ; move ul - 3 , ua ; move 4 , 2 + ul )  
[10814] ( move ul , 4 ; move 2 + ul , 4 - ua ; move 2 - ua , 4 )  
[10815] ( move 3 * 2 , ua ; move 3 - ul , 2 - 3 ; move ul , ul )  
[10816] ( ( move 0 - 2 , ua ; move 4 - 2 , ul ) ; move ua , ul )  
[10817] ( move 2 , 2 + ul ; move 4 , 3 + ul ; move ul , ua / 3 )  
[10818] ( move 0 , 3 + ul ; move 4 , ua ; move ul / 4 , 4 + ul )  
[10819] ( ( move ul , 0 ; move ua - 2 , ul / 3 ) ; move ua , 2 )  
[10820] ( move ua - 2 , ua ; move 3 , ul ; move ul - 2 , 4 / 3 )  
[10821] ( ( move ul / 2 , ul ; move ua , ua + 4 ) ; move 2 , 0 )  
[10822] ( move ul , 2 ; ( move ul - ua , 3 ; move 2 + 2 , ul ) )  
[10823] ( ( move ul , ul ; move ua + 2 , 3 ) ; move 3 , ua + 3 )  
[10824] ( move 3 + 2 , ul / ua ; move ul , 4 + ul ; move 4 , 2 )  
[10825] ( move ua , ua + ul ; ( move ul , 2 - 3 ; move 3 , 2 ) )  
[10826] ( move 4 , ul ; move ul - 3 , 3 + 2 ; move 4 + ul , ul )  
[10827] ( move 3 , 2 ; move ua / 4 , 3 / 2 ; move ua , ua + ul )  
[10828] ( ( move 3 , 4 + ul ; move ua , 2 ) ; move ul , ua + 2 )  
[10829] ( move ua , ul / 3 ; move ul , 4 + ul ; move 4 - 3 , 0 )  
[10830] ( move ul - 4 , 2 ; move 3 - ua , ul + ul ; move 4 , 3 )  
[10831] ( move 2 - ua , ua ; move 4 + 3 , 4 ; move ul , ul - 4 )  
[10832] ( move 3 - ua , 0 ; ( move 2 - ul , 4 ; move ua , ul ) )  
[10833] ( move ul - 3 , 4 + ul ; move ul , 4 ; move 2 , ua + 4 )  
[10834] ( move 3 , ua ; move 2 - 4 , 4 ; move 4 + ul , ul - ua )  
[10835] ( move 4 , 4 ; move ul , 4 + ul ; move 0 - ul , 4 + ul )  
[10836] ( move ul , 3 + ul ; move 3 - ul , 2 + ul ; move 4 , 4 )  
[10837] ( move ua - 2 , ua ; move 3 / 2 , ul - 4 ; move ul , 3 )  
[10838] ( move 3 + ul , ua * 4 ; move ua , 2 - 4 ; move 3 , ul )  
[10839] ( move ul , 4 + 2 ; move ua - ul , ua / 4 ; v0 = 0 )  
[10840] ( move 2 - ua , 4 / ua ; v0 = 2 ; move ul , 2 + ul )  
[10841] ( ( move ua , ul - 3 ; move ul , ua - 2 ) ; v0 = 0 )  
[10842] ( ( move ua + ul , ua ; move ua + 3 , 2 ) ; v0 = 3 )  
[10843] ( move ua / 3 , 4 - ul ; move 4 + 3 , 2 ; move ua , ul )  
[10844] ( move 0 , ul / 2 ; move 4 , 4 * 3 ; move ua - ul , ul )  
[10845] ( move 4 / ua , ul / 3 ; move ua + 2 , 4 ; move ua , 2 )  
[10846] ( move 2 , ul ; ( move ua , 3 ; move 2 - ul , 3 + ul ) )  
[10847] ( move 0 - 4 , ul ; ( move ul , ua * ua ; v0 = 0 ) )  | ( move 0 - 4 , ul ; ( v0 = ul ; move v0 , ua * ua ) )  
[10848] ( move 4 + 2 , ua ; ( move ul , ul ; move 2 , 3 + ul ) )  
[10849] ( move ul , 4 * 3 ; move 3 , ua + ul ; move 4 , 3 + ul )  
[10850] ( move ul + ul , 2 ; ( move ua , ul ; move 2 , 3 * 2 ) )  
[10851] ( move ua + 4 , 0 - ul ; ( move 2 , ul ; v0 = ua ) )  | ( move ua + 4 , ua - ul ; move ul , ul ; move ul , ua * 4 )  
[10852] ( move ua , ul ; ( move 0 , 4 + 3 ; move ua , 4 - ul ) )  
[10853] ( move 3 , 3 / 2 ; move ul , ua * ua ; v0 = 2 + ul )  
[10854] ( move ua / 2 , 3 ; move ul , ul - 3 ; move 4 - 2 , ul )  
[10855] ( move ua - ul , ul ; move 2 / 4 , ua ; move 4 + 2 , 4 )  
[10856] ( ( move ua , ul ; move ul , ua ) ; pen ua ; move ua , 4 )  | ( ( pen ul ; move ua + ul , ul ) ; pen ua ; move ua , 4 )  
[10857] ( move ua , 4 + ul ; ( move ul , 0 ; move 4 , ua + 4 ) )  
[10858] ( move 2 , ul / ua ; ( move ua , 3 - ul ; move 3 , 0 ) )  
[10859] ( move ul , 4 ; move ua , 2 - ul ; move 2 / 3 , 4 + ul )  
[10860] ( ( move 2 , 2 ; v0 = 4 ) ; move v0 , v0 + v0 )  
[10861] ( pen ua + ul ; v0 = ua + 4 ; move v0 , v0 + 3 )  
[10862] ( move 3 + 3 , ul ; ( move 2 , 2 ; move ua , ul / ua ) )  
[10863] ( move 2 / ua , 4 * 4 ; move ul , 2 ; move 3 + ul , ul )  
[10864] ( pen ul ; ( move ua , ul ; move ul , 3 ; move ua , ul ) )  
[10865] ( move ul , ul - 2 ; ( move 0 - 4 , 3 ; move ul , ul ) )  
[10866] ( move ua , 2 ; ( move 2 , ua - ul ; move 3 - ul , 4 ) )  
[10867] ( move ua , ua ; ( move ua - 2 , 3 ; move 3 - ul , 4 ) )  
[10868] ( move 3 + 2 , ua ; ( move 4 , ul ; move 3 , ul + ul ) )  
[10869] ( ( move 4 , ua ; move ul , 3 + ul ) ; move 3 , 2 + ul )  
[10870] ( move 2 , 4 - ul ; move 4 , ua - 4 ; v0 = ua + ul )  
[10871] ( move 3 - 4 , ul ; move ul + ul , 3 ; move 4 - 3 , ul )  
[10872] ( move ul , ua * 2 ; ( move ul , 2 ; move 4 , ua + 3 ) )  
[10873] ( move 0 , ul ; ( move 4 + 3 , ul ; move ua - 4 , ul ) )  
[10874] ( ( move 2 - ua , ul ; move ua + 3 , ul ) ; v0 = 2 )  
[10875] ( move 2 / ua , 4 / ua ; move 2 , ua / 2 ; move ua , 4 )  
[10876] ( ( move 3 , ua ; move 3 + 3 , 4 ) ; move ul , ua + ul )  
[10877] ( ( move ul - 3 , 0 ; move ul , ul / 2 ) ; move 3 , ua )  
[10878] ( move 2 + ul , 4 ; ( move 3 , 2 ; move ul , ul + ul ) )  
[10879] ( ( move 4 , ua / 4 ; move 0 , 3 ) ; move ua , ua + ul )  
[10880] ( move 4 / 2 , 3 + ul ; move ul , ul - 2 ; move 4 , ul )  
[10881] ( ( move ul , ua + 4 ; move 0 , ua ) ; move 3 , 4 / ua )  
[10882] ( move ua + ul , 3 ; ( move 4 , ua + 2 ; v0 = ua ) )  | ( ( move ua + ul , 3 ; move 4 , 2 ) ; pen 0 ; move ul , 2 )  
[10883] ( ( move 4 + ul , 3 - ul ; move ua , 2 ) ; move 2 , ul )  
[10884] ( move ul - 2 , 4 ; move ul - ua , 4 ; v0 = ua + 4 )  
[10885] ( ( move ul - ua , ua ; move 2 , ua + 4 ) ; v0 = 2 )  
[10886] ( move 2 - 4 , ul + ul ; ( move ul , 0 ; move 4 , ul ) )  
[10887] ( move ul , 3 / 2 ; move ul , ul ; move 4 + 2 , ul / 2 )  
[10888] ( move 4 / 2 , ua - ul ; move ua - 2 , ul ; v0 = 3 )  
[10889] ( ( move 3 , 3 ; move ua , ul - ua ) ; move ul / 2 , 2 )  
[10890] ( move 0 - 2 , 0 ; v0 = 4 * 2 ; move 4 , ua / v0 )  
[10891] ( move ua - 2 , 0 - ua ; pen ul / 3 ; move 0 - ul , 2 )  
[10892] ( move 2 - ul , 4 - ul ; move 3 , ua ; move 4 , ul / 3 )  
[10893] ( move ul / 2 , 2 ; move 4 , ua * ua ; move ua , 3 / 4 )  
[10894] ( move 3 , 4 + ul ; move ul / 4 , ua ; move 3 * 2 , ul )  
[10895] ( move ua , 4 - ul ; ( move ua + 2 , 3 ; move ul , 4 ) )  
[10896] ( ( move ua , 2 ; move 2 + ul , ul ) ; move 4 - ul , 4 )  
[10897] ( move ua / 4 , 3 - 4 ; move ua , ul + ul ; v0 = 2 )  
[10898] ( ( move ul - 2 , 2 ; move 3 + ul , 4 ) ; move ul , ul )  
[10899] ( move ua , 4 / ua ; move ua , 2 * 2 ; move 3 / 4 , ul )  
[10900] ( move 0 , ul + ul ; ( move 4 , ua ; move 3 , 4 / ua ) )  
[10901] ( move 2 , ua + 3 ; ( move ua , 3 / ua ; move ul , 4 ) )  
[10902] ( move ua - 4 , ul ; ( move 3 , 2 ; move ua + ul , 4 ) )  
[10903] ( move 3 , ul ; ( move ul , ul ; move 3 + ul , 4 + 2 ) )  
[10904] ( move 3 , ua - ul ; ( move ul , 0 ; move ua / 3 , 4 ) )  
[10905] ( move 4 + 4 , ul + ul ; move 3 , ul - 3 ; v0 = ul )  
[10906] ( move ul , ua ; ( move ul - ua , 4 + 4 ; v0 = 0 ) )  
[10907] ( ( move ul , ua + ua ; move ua , 4 / 2 ) ; move 4 , 2 )  
[10908] ( ( move ul , ul ; move 3 * 2 , ua ) ; move 4 , ua - 2 )  
[10909] ( ( move 2 , ua * 4 ; move 3 + 2 , ul ) ; move ul , ul )  
[10910] ( ( move 3 , ul - 2 ; move ua - ul , ul ) ; v0 = 2 )  
[10911] ( move ua , 3 ; ( move 4 , 4 ; move ua - ul , 3 + ul ) )  
[10912] ( move 4 , ul / 2 ; move ul , ul / 2 ; v0 = 2 + ul )  
[10913] ( move 4 - 2 , ua ; ( move ul , ul / 2 ; move 2 , ul ) )  
[10914] ( move 3 , ua ; ( move 2 , ul + ul ; move 4 / 3 , ua ) )  
[10915] ( ( move 4 - ul , ua ; move ul , 3 ) ; move 3 + 3 , ul )  
[10916] ( move 3 + 2 , ua / 3 ; ( move ul , 3 ; move ul , ul ) )  
[10917] ( move ua , 2 ; ( move ul , 3 ; move 4 - ul , ul - 3 ) )  
[10918] ( ( move 4 + 2 , 2 ; move ul , 4 / ua ) ; move ul , ua )  
[10919] ( move ua - ul , 4 ; move 4 , 4 ; move ul / 2 , ua * 3 )  
[10920] ( move 3 , ua ; ( move 4 + 3 , ul ; move ua - ul , 4 ) )  
[10921] ( move 4 / 2 , ua / 4 ; move ul , 4 + ul ; move ul , 2 )  
[10922] ( move 3 , ua * 2 ; ( move 4 , ul ; move 3 , ua - ul ) )  
[10923] ( move ul , 3 ; ( move 4 + 2 , ul ; move ul , 4 + ul ) )  
[10924] ( ( move 3 , 4 / ua ; move 2 , ul ) ; move ul - 2 , ul )  
[10925] ( move ul , ua + 2 ; ( move 4 , ul / 2 ; move 4 , ul ) )  
[10926] ( move ua / 2 , 4 * 4 ; move ul , ul ; v0 = 3 + ul )  
[10927] ( move ul , ua ; ( move ul - 3 , 3 ; move ul , 3 * 3 ) )  
[10928] ( move 4 , ul ; ( move 3 - ua , 4 + ul ; move 3 , ul ) )  
[10929] ( move ua - 4 , ua + ul ; ( move 3 , 4 ; v0 = ua ) )  
[10930] ( ( move ul , ul ; move ua , 4 + ul ) ; move 4 / 2 , 2 )  
[10931] ( ( move ua , ua / 4 ; move ul , 3 - 2 ) ; move 3 , ul )  
[10932] ( move 4 , ul ; move 4 - ua , ua + 4 ; v0 = 4 / ua )  
[10933] ( move ua , 4 * 3 ; ( v0 = ul ; move ua + ul , 2 ) )  
[10934] ( ( move 3 , 4 ; move ua , ua ) ; move 4 - ul , 4 + ul )  
[10935] ( move ul - 3 , ul / 2 ; ( v0 = ua ; move ua , 2 ) )  
[10936] ( ( move ua - 2 , 2 / ua ; move ul , 4 ) ; v0 = ua )  
[10937] ( ( move 4 , 0 ; move 4 , 4 ) ; move 0 , ul ; move 3 , 2 )  
[10938] ( move 2 , ua + ul ; ( move 4 , ul ; move 4 , ul / 2 ) )  
[10939] ( pen ul ; v0 = 0 - ul ; move ua * v0 , v0 / 4 )  
[10940] ( ( move 2 + ul , 3 + 2 ; pen 0 ) ; move ul + ul , ua )  
[10941] ( ( move 3 / ua , 3 + ul ; move 3 , ul ) ; move 4 , ul )  
[10942] ( move ul / 4 , ul - 4 ; v0 = 0 ; move ua , ul / 4 )  
[10943] ( ( move 3 , 4 ; v0 = ua * ua ) ; move 3 - ua , ul )  
[10944] ( ( move 4 , ua * ua ; move 3 , ul ) ; v0 = ua - 3 )  
[10945] ( ( move ua , ul - 4 ; move 4 , ul ) ; move 3 , ua - 4 )  
[10946] ( ( move ua / 3 , 4 ; move 4 , 4 ) ; move ua , ua + ul )  
[10947] ( ( move 4 , ua + 4 ; move 4 + ul , 4 ) ; move ul , ul )  
[10948] ( move 4 / 3 , 4 ; move ul , 2 / ua ; move ua , ua / 4 )  
[10949] ( ( move ua , 4 * 4 ; move ua + ul , 3 ) ; v0 = ua )  
[10950] ( move ua / 3 , ua ; ( move 2 , 4 ; move ua / 3 , ul ) )  
[10951] ( move 3 / ua , 2 ; ( move ua , 2 / ua ; v0 = ul ) )  
[10952] ( ( move ul , 2 / 4 ; move ul , ua + 3 ) ; move 4 , ul )  
[10953] ( ( move 3 , 3 ; move ua - ul , ul ) ; move ul , 4 * 3 )  
[10954] ( move 4 , ua ; ( move 3 / 4 , ul ; move ul + ul , 3 ) )  
[10955] ( ( pen ua + ua ; move 0 - ua , 2 ) ; move 3 , 4 - ua )  
[10956] ( pen 4 - 2 ; move 2 + ul , ul - ua ; move 4 + ul , 2 )  
[10957] ( ( move ul , 4 ; move 3 + ul , ul / 2 ) ; v0 = ua )  
[10958] ( ( move 2 , 4 ; v0 = ua ) ; pen ua ; move v0 , ul )  
[10959] ( ( pen 0 ; move ua , ul ) ; pen ul + ul ; move ul , ua )  
[10960] ( move 3 + 2 , ua * 2 ; pen ua * 2 ; move 3 / ua , ul )  
[10961] ( move 3 + 2 , 4 ; v0 = 3 / 4 ; move 2 - v0 , ul )  
[10962] ( ( pen ua ; v0 = ul ) ; move 3 , 2 ; move v0 , ul )  
[10963] ( ( move ul , 0 - ua ; pen ua ) ; move 3 + ul , 4 + 2 )  
[10964] ( move 0 - 2 , 0 ; move ul + ul , 0 ; move ul , ul + ul )  
[10965] ( pen ua * 3 ; ( move 0 - ul , 0 ; move ua , ua / 3 ) )  
[10966] ( move 2 , ul ; ( pen ua ; v0 = 4 ; move v0 , ul ) )  | ( move ua / 3 , ul ; ( pen 2 ; pen ua * 2 ; move 4 , ul ) )  
[10967] ( move ua , 4 ; ( move 4 / ua , 4 + ul ; v0 = ul ) )  
[10968] ( pen 2 + 2 ; ( move ua , ul ; move 3 + ul , ua - 3 ) )  
[10969] ( ( move ul / 3 , ua ; move 4 , ua ) ; move 4 , 4 / ua )  
[10970] ( move 2 , 0 - ul ; ( pen 2 - ul ; move ua + ul , 4 ) )  
[10971] ( ( move 3 + 3 , 4 + ul ; pen ua + ul ) ; move ul , 0 )  
[10972] ( pen ua ; ( move ua , 3 ; v0 = ul ) ; move 4 , v0 )  
[10973] ( move 4 + ul , ul - 3 ; move ua / 4 , ua + 4 ; pen 0 )  
[10974] ( move 3 + ul , 3 * 3 ; move ul + ul , 3 ; pen 2 - ul )  
[10975] ( ( pen ua ; move ul , ua + ua ; pen 3 ) ; move ua , ul )  
[10976] ( move 2 - ua , 4 + ul ; move 3 + ul , 4 ; pen ua / 3 )  
[10977] ( ( move 3 , ua ; pen ua + 4 ) ; move 3 + 2 , ul - ua )  
[10978] ( pen ul ; move 3 - ua , 2 + ul ; move 4 + 3 , 4 / ua )  
[10979] ( move ua - ul , ua ; pen ua + 4 ; move 3 / 2 , 4 * 2 )  
[10980] ( pen ul / 4 ; move 3 + ul , 0 ; move 4 + ul , 4 + ul )  
[10981] ( ( move 2 , 3 ; move ua - 4 , 0 ; pen 0 ) ; move 2 , 2 )  
[10982] ( move ua / 4 , 3 ; pen 3 - ul ; move ua + 4 , ua - 2 )  
[10983] ( v0 = 3 ; ( move ua + 3 , v0 + 4 ; move 4 , 3 ) )  
[10984] ( ( move 2 , 0 ; v0 = 2 ) ; pen v0 ; move 4 , v0 )  
[10985] ( move ul , 3 ; ( pen ua + 4 ; move ul - ua , 2 + 2 ) )  
[10986] ( move 2 - ua , 4 ; ( pen ua ; move ua + 3 , 2 - ul ) )  
[10987] ( move 0 - ua , 0 ; move 2 , 4 + ul ; move ua , ua + ul )  
[10988] ( move ul , ul - 2 ; move 0 - ua , 0 ; move ul + ul , 2 )  
[10989] ( pen 2 ; ( move ua , ul ; pen ul - ua ; move ul , ul ) )  
[10990] ( move ua + 2 , ua ; move 3 - ua , ua + ul ; move 3 , 0 )  
[10991] ( move 2 , 0 ; move ua , ua * ua ; move 0 - 4 , ua + ul )  
[10992] ( move 0 - 3 , 2 + ul ; ( pen ua ; move ul , 4 / ua ) )  
[10993] ( ( move ua - ul , 0 ; pen ua + 4 ) ; move 2 , ul / 3 )  
[10994] ( pen ul + ul ; move 4 + 4 , ua * 3 ; move ua + 4 , 4 )  
[10995] ( move 3 + ul , 4 + ul ; move 3 , ul / 4 ; pen 2 + ul )  | ( v0 = 4 ; move v0 , v0 + ul ; move 3 , ul / v0 )  
[10996] ( pen ua ; ( move ua + 3 , 4 + 3 ; move ua - ul , 3 ) )  
[10997] ( move ua - 2 , ul - 2 ; ( move 4 , ua - 3 ; pen ul ) )  
[10998] ( ( move ul , ul - 2 ; pen 4 ) ; move ul - ua , 3 + 2 )  
[10999] ( move 0 , ul ; move 0 - ua , 0 ; move ua + ul , ul / 4 )  
[11000] ( move ul - ua , 0 - ul ; v0 = ul ; move v0 , v0 )  
[11001] ( v0 = 3 ; move v0 , v0 + v0 ; move v0 , v0 )  
[11002] ( move 3 + 2 , ul / 2 ; ( move 3 , ua + ul ; pen ul ) )  
[11003] ( move ul - ua , 0 ; move 2 + ul , 0 ; move 4 + ul , ul )  
[11004] ( ( move 0 , 0 ; pen 3 ; move 2 , 2 ) ; move 4 + ul , 4 )  
[11005] ( move 2 , ua + ua ; move ua - ul , 0 - ul ; v0 = 0 )  
[11006] ( move 4 , 4 ; ( v0 = 4 ; move 2 + ul , v0 * 2 ) )  
[11007] ( pen ua ; move ua - ul , ul ; ( pen ua ; move ul , 4 ) )  
[11008] ( ( move 3 + 3 , ua / 2 ; move 2 , ul ) ; pen ul - ua )  
[11009] ( move 2 + ul , 0 ; ( pen ul / 4 ; move 3 , ul + ul ) )  
[11010] ( move ua - 3 , 3 - 2 ; ( pen 3 ; move ul + ul , ul ) )  
[11011] ( move 4 + ul , ua * 3 ; pen 4 ; move 3 / 4 , ua + ul )  
[11012] ( move 0 , ul + ul ; move ua , 4 ; move ul + ul , 2 + 2 )  
[11013] ( pen ua * 2 ; ( move 4 , ua - 3 ; move ul , ua + 4 ) )  
[11014] ( move 3 + ul , 0 ; move ul , 0 ; move 4 + ul , ua - ul )  
[11015] ( pen ul ; ( pen ua ; move ua - ul , 4 ) ; move ul , ul )  
[11016] ( move 4 + ul , ul / 4 ; ( pen ua + 4 ; move 0 , ua ) )  
[11017] ( move 2 , ua ; move ua + ul , ua + 2 ; move ua , 2 - 4 )  
[11018] ( move ua + ul , 3 ; v0 = ua ; move v0 , ua * v0 )  
[11019] ( move ul , 4 - ul ; move 4 + ul , ua / 3 ; pen 4 + 3 )  
[11020] ( move ul - ua , 0 ; move ul , 4 + 3 ; move 2 , ua + ua )  
[11021] ( move ua , ua ; v0 = 4 + ul ; move v0 , ua - v0 )  
[11022] ( move 2 , ul ; move ul , 0 - 3 ; move ua + 3 , ua + ul )  
[11023] ( ( pen ul / ua ; move ua , 3 ) ; move 2 - ua , 4 + 3 )  
[11024] ( move 3 - 4 , ul ; move ua , ua ; move ua + ul , 0 - 2 )  
[11025] ( move ua + ul , ua + 4 ; ( pen 4 * 4 ; move 2 , ul ) )  
[11026] ( move 0 , ul ; move ua - 3 , ul - ua ; move 0 - ul , 4 )  
[11027] ( move 2 + ul , 0 ; move 2 , ua * ua ; move ul - 3 , ul )  
[11028] ( move 2 - ua , ua + ul ; move 2 , 2 ; move ua , ua / 2 )  
[11029] ( ( move 4 + ul , 3 / ua ; pen 2 + ul ) ; move ul , 3 )  
[11030] ( move ua + 2 , ua ; ( pen 4 / 2 ; move ul - 4 , ul ) )  
[11031] ( move 3 , 2 + ul ; move 0 , 4 ; move ul + ul , ua + ul )  
[11032] ( move ul , 2 + ul ; move ul - ua , 2 ; move 2 , 2 + ul )  
[11033] ( move 0 - ul , ua + ul ; move 0 , ua ; move 3 , 4 / ua )  
[11034] ( move ua + ul , ul - 4 ; move ul , 4 + ul ; move 0 , 0 )  
[11035] ( move ul , 0 ; move 0 , 4 / ua ; move ua + ul , 3 + ul )  
[11036] ( v0 = 4 ; move ul + v0 , ul ; move ua + ul , v0 )  
[11037] ( ( move ul / 4 , 4 - ua ; pen 0 - ua ) ; move ua , 4 )  
[11038] ( move 2 , ua + 4 ; ( pen ua - ul ; move ua , 3 / 4 ) )  
[11039] ( move 3 , 4 * 2 ; ( v0 = 4 ; move v0 , 4 - ul ) )  
[11040] ( move 0 - ul , ul ; move 3 + ul , 2 + ul ; move ul , 2 )  
[11041] ( move 4 , 2 / 4 ; v0 = 4 / 2 ; move ul , v0 / 3 )  
[11042] ( move ul , ul / 2 ; move 0 , 3 / ua ; move ua + ul , 0 )  
[11043] ( move 0 , ua + ul ; move 4 + 3 , ul / ua ; move ua , 2 )  
[11044] ( move ua , 4 - ua ; ( pen ul ; move 3 * 2 , ua / 3 ) )  
[11045] ( move 4 , ul - ua ; ( pen 3 ; move 4 * 2 , ul + ul ) )  
[11046] ( ( pen 4 ; move ul - 4 , ua + ul ) ; move 2 , ul - 4 )  
[11047] ( v0 = ua - ul ; move ua , v0 * ua ; move 4 , v0 )  
[11048] ( move 2 * 2 , 0 ; move ul + ul , 3 ; move ul + ul , ul )  
[11049] ( move ul , ul + ul ; v0 = ua ; move v0 , v0 - 4 )  
[11050] ( move ul + ul , 4 ; v0 = ua - ul ; move v0 , v0 )  
[11051] ( move 2 , 2 + 2 ; move ua + ul , ua - 4 ; move ul , ul )  
[11052] ( move ua , 2 ; move ua - 4 , ua ; move ua + 3 , 3 + ul )  
[11053] ( move 0 - 3 , 3 / ua ; move ul , ul ; move ul + ul , 0 )  
[11054] ( move ua - ul , 2 + ul ; move 4 - ua , 0 ; move ua , 4 )  
[11055] ( move 0 - 3 , ul / ua ; move ul , 0 ; move 4 , ua + ul )  
[11056] ( move 4 / 3 , ul + ul ; ( pen 3 ; move ul - ua , 2 ) )  
[11057] ( move 4 , 2 ; move 0 , ua + ul ; move ua - ul , 4 + ul )  
[11058] ( move 4 - ua , 4 ; pen ul - 4 ; move 3 - ul , ua / 4 )  
[11059] ( move ua + 2 , ua ; move 2 - 4 , ul ; move ul , ua + 3 )  
[11060] ( move 0 , ua ; move 0 - ul , ul / 3 ; move 3 - ua , ul )  
[11061] ( pen 4 + ul ; ( move ua - 3 , 2 / 4 ; move ua , ul ) )  
[11062] ( move ul , ul + ul ; move 2 , ul - 3 ; move ua + 2 , 3 )  
[11063] ( move ul - 3 , ua + 3 ; move ul , ul / 2 ; move ua , 0 )  
[11064] ( move ul , ul + ul ; move 2 + ul , 0 ; move 3 , ul / 2 )  
[11065] ( move ua + ul , 4 ; move ul / 2 , ua + 2 ; move ua , 2 )  
[11066] ( move 0 - ul , ua * 2 ; move ua - 2 , 4 ; move ul , ul )  
[11067] ( move 0 - ua , ul ; move 3 , 4 * 3 ; move ua , ua + ul )  
[11068] ( move ua , ul ; move 4 - 2 , ua + ul ; move 3 , ua - 2 )  
[11069] ( v0 = 4 + ul ; move v0 / ua , v0 ; move ua , ul )  
[11070] ( move 3 , ua - ul ; move ul , 3 * 2 ; move ua - ul , 0 )  
[11071] ( move 3 , ua - ul ; move 2 + ul , 2 ; move ul , ua * 2 )  
[11072] ( move ua , ua / 2 ; move 2 , ul + ul ; move 0 , ua * 4 )  
[11073] ( move 0 , ul + ul ; move ua - ul , ul / 2 ; move 2 , 3 )  
[11074] ( move ua / 2 , ua ; move 2 , ul - 4 ; move ul - ua , 0 )  
[11075] ( v0 = ua - ul ; move ua , v0 ; move v0 , ua / 4 )  
[11076] ( move ul / ua , 3 ; move ua , ul - 2 ; move 2 , ua + 2 )  
[11077] ( move 3 - ul , ul ; ( pen 3 - 4 ; move ua - 4 , ul ) )  
[11078] ( move ul , ua ; move 0 - ul , ua + ul ; move 4 , 4 + 3 )  
[11079] ( move 3 , ul ; move ua , ul - 2 ; move ua - 3 , ua + 3 )  
[11080] ( move 2 , 2 - ua ; move 4 + ul , ul ; move 2 - ul , ua )  
[11081] ( v0 = ua - ul ; move ua , 4 ; move v0 / ua , v0 )  
[11082] ( v0 = ua ; move ua , ul / 2 ; move ul , v0 * v0 )  
[11083] ( move ua + 2 , ua - ul ; move 3 - ul , 2 ; move ul , 3 )  
[11084] ( move ul , 0 ; move ul - 2 , 4 - ua ; move 4 + ul , ul )  
[11085] ( move ul , 3 * 2 ; move 2 + ul , ua + ua ; move ul , 4 )  
[11086] ( ( move ua + 2 , 3 ; move ua , ul + ul ) ; move 0 , ul )  
[11087] ( ( move 3 + ul , ua ; move 0 , ul ) ; move ua + 2 , ul )  
[11088] ( move 3 , ul / ua ; move ul , 3 ; move 2 + 2 , ua + ul )  
[11089] ( move 3 * 3 , 3 ; move ul , ua + 2 ; move ua , ua * ua )  
[11090] ( move 4 + ul , ua ; move 0 - 3 , ul + ul ; v0 = ua )  
[11091] ( move ul , ul / 2 ; move 2 + 2 , ua + 3 ; move ul , ul )  
[11092] ( move ul , ua / 4 ; move ul , 0 ; move 2 + ul , 3 + ul )  
[11093] ( move ua - 3 , ul ; move ua , ua + 4 ; move 2 , 3 - ul )  
[11094] ( move ua - ul , ua ; move ul , 4 + 3 ; move 2 , ua + 4 )  
[11095] ( move 3 , ul / ua ; move ul , 4 + 2 ; move ul - ua , 0 )  
[11096] ( move ul , ul ; move 0 - ul , ua - 2 ; move 3 , ul / 2 )  
[11097] ( move 2 + ul , ua * ua ; move ua + 2 , 3 ; v0 = ul )  
[11098] ( move 2 + ul , 3 ; move ul / 2 , 2 ; move ua + ul , ul )  
[11099] ( move 4 - ua , ua ; move ul , ua + 3 ; move ul , 4 + 2 )  
[11100] ( move ul , ua + ul ; move 2 , ua ; move ua / 4 , 3 + 2 )  
[11101] ( move ul , 0 ; move ua / 2 , 3 / ua ; move 2 + ul , ul )  
[11102] ( move 2 / 3 , ua ; move ua , ua + ul ; move 2 , 3 - ul )  
[11103] ( move ua / 2 , 2 ; move ul , ua * ua ; move ul , 0 - 4 )  
[11104] ( move ul , 4 ; move 2 - ua , ul / 2 ; move 0 , ul + ul )  
[11105] ( move ul - 3 , ua ; move 2 + ul , 4 ; move 2 , ul + ul )  
[11106] ( move ua , ua + ul ; move 2 , 3 + ul ; move 4 + ul , 4 )  
[11107] ( move ua + ul , ul ; move 0 , 3 ; move 3 - ul , ua / 3 )  
[11108] ( move ul , 0 ; move ua + ul , 4 ; move ul - 4 , 2 - ul )  
[11109] ( move ua , ua + 2 ; move 3 - ua , ua / 3 ; move 4 , ua )  
[11110] ( move ul , 3 - ul ; move ua + ul , 3 ; move ul - 2 , 2 )  
[11111] ( move 2 - ua , 0 ; move ua + ul , ua / 4 ; v0 = ua )  
[11112] ( move ul , 4 + 3 ; move ua , ul ; move ua - 3 , ua + 3 )  
[11113] ( ( move ua / 3 , 3 - 4 ; move ua - ul , ul ) ; pen 4 )  
[11114] ( move 4 + 2 , 4 / ua ; move ul , ua ; move ua , 2 + ul )  
[11115] ( v0 = ua - ul ; ( move ua , v0 ; move v0 , ul ) )  
[11116] ( move 2 - ua , ua ; move 4 + ul , ua - 2 ; v0 = ul )  
[11117] ( move ul , ul - ua ; move ua + ul , 4 ; move 3 + 3 , 3 )  
[11118] ( move 4 , ul ; move ul , 0 - 4 ; move 3 - ul , ua + ul )  
[11119] ( ( pen 3 ; move 0 , 4 * 2 ; move 4 , 4 ) ; move ul , 2 )  
[11120] ( move ul + ul , ul ; move 4 - 2 , ul ; move ua , 2 * 2 )  
[11121] ( move ul , 3 ; move ul + ul , ul ; move ul - 4 , 0 - 3 )  
[11122] ( move ul , 3 - ul ; move 3 * 2 , ul ; move 0 - ul , ul )  
[11123] ( move ul , ua + 4 ; move 3 , 2 - ua ; move ul , 3 - ul )  
[11124] ( move ua - ul , ua ; move ul , 3 + ul ; move 2 , 3 / 2 )  
[11125] ( move ul , 4 ; move 2 + ul , 2 - ul ; move ul , ua + 4 )  
[11126] ( move ul , 0 ; move ua + ul , 4 + 3 ; move ul , ul / 3 )  
[11127] ( move ul + ul , 4 ; move 0 , 3 / 4 ; move ua + ul , ua )  
[11128] ( move ua , ul ; move ul - 2 , 0 ; move 3 / 4 , ua - ul )  
[11129] ( move ua , ua ; move 2 / 3 , ua + 4 ; move 3 , ul - ua )  
[11130] ( v0 = 3 ; move v0 , v0 + 2 ; move ul - v0 , 3 )  
[11131] ( move ua + 4 , 4 ; v0 = 2 ; move v0 + v0 , v0 )  
[11132] ( ( move ul , ua - ul ; move ul , 0 ) ; move 0 - 3 , ul )  
[11133] ( move 2 , 2 ; move ul + ul , 2 * 2 ; move ul / ua , ul )  
[11134] ( move ua , ua + ua ; move ul , 3 ; move 4 - 3 , 4 + ul )  
[11135] ( move ua - 2 , ua / 4 ; move ul , 4 - ua ; move ul , 0 )  
[11136] ( move 4 + ul , ul / ua ; move ul , 2 ; move 4 + ul , 0 )  
[11137] ( move ua + ul , ua / 3 ; move ua + ul , 4 ; v0 = 0 )  
[11138] ( move 2 , ul ; v0 = 4 + 2 ; move v0 , v0 * v0 )  
[11139] ( move 3 , ua ; move ul + ul , 4 * 2 ; move ua , 4 + ul )  
[11140] ( move ul + ul , 4 ; move ua - ul , 3 + 3 ; move ua , 4 )  
[11141] ( move ua + 3 , ul ; ( move ua - 2 , 2 ; move ul , ua ) )  
[11142] ( move ua - ul , ua - 2 ; v0 = 2 - ul ; move ua , 4 )  
[11143] ( move 4 - ua , ul ; move ul - ua , 0 - 4 ; v0 = ua )  
[11144] ( move ua + ul , ua / 4 ; move 3 , ul ; move 4 , ua + 2 )  
[11145] ( move 2 - 4 , ua ; move ua - ul , 2 - ua ; v0 = ul )  
[11146] ( move ua - 3 , ul / ua ; move 3 , 4 ; move ua , 2 + ul )  
[11147] ( move 4 - ul , ua / 4 ; move 0 , ua ; move ul , 3 + ul )  
[11148] ( move 2 , ua ; v0 = 4 ; move v0 + 3 , v0 * v0 )  
[11149] ( move 0 - ua , ul ; ( move ul , 3 + 3 ; move ul , ua ) )  
[11150] ( move ua , 2 - ul ; move ul / 2 , ua ; move ua - 3 , 4 )  
[11151] ( move ul , 3 ; move ua + ul , ua * 3 ; move ua , 4 * 2 )  
[11152] ( move ul , 2 ; move 4 + 3 , 2 ; move ul + ul , ul / ua )  
[11153] ( move ul , 0 - 4 ; move ua , 4 + ul ; move ua / 4 , ua )  
[11154] ( move 3 , ul ; move 4 + ul , ul + ul ; move 2 * 2 , ul )  
[11155] ( move ua + ul , ua * ua ; ( move 0 , ul ; move 3 , 3 ) )  
[11156] ( move ul , 0 ; ( move ul - 3 , ua ; move ua , 3 + ul ) )  
[11157] ( ( move 0 , 3 ; move ul , 2 ) ; move ua - ul , ua * ua )  
[11158] ( move ul , 3 + 3 ; move ua - 4 , 3 + ul ; move ul , ul )  
[11159] ( ( move ua , ua ; move ua - 3 , ul + ul ) ; move 2 , 2 )  
[11160] ( move 3 , 2 + ul ; move ul + ul , 2 ; move ul , ua / 4 )  
[11161] ( move ua + ul , ul / 3 ; move 2 / 4 , ul ; move 0 , ua )  
[11162] ( move 3 , ua * 2 ; move ua , ul - 4 ; move 2 - ul , ul )  
[11163] ( ( move 2 , ua + ul ; move 3 + ul , ul ) ; move ua , 2 )  
[11164] ( v0 = 2 - 4 ; move v0 + v0 , 4 ; move ua , v0 )  
[11165] ( move 2 - ul , 0 ; move 4 , ul ; move ul - ua , ul / 3 )  
[11166] ( move ua / 3 , 0 ; move 3 / ua , ua + ul ; move 4 , ul )  
[11167] ( move ua + ul , 4 ; move 4 , 4 * 2 ; move ul , ua + ul )  
[11168] ( move 2 , 3 ; move ua , ua - ul ; move ua / 4 , 2 / ua )  
[11169] ( move ul , 0 ; move ua - ul , ul / 4 ; move 4 , ua - 3 )  
[11170] ( move ua - ul , 0 - 4 ; v0 = ul / ua ; move 2 , ul )  
[11171] ( move ul , ul / 2 ; move 4 , ul + ul ; move 2 + ul , 3 )  
[11172] ( move ul , ul ; move 4 - 3 , ua + ul ; move 3 , ua / 2 )  
[11173] ( move ua - ul , 2 - ul ; move 3 , ul / 3 ; move ua , 3 )  
[11174] ( move ul - ua , ul - 3 ; v0 = 4 + 2 ; move ua , ul )  
[11175] ( move ua - 4 , ua ; move 2 - ua , ul / 2 ; v0 = ua )  
[11176] ( move 2 , ua - 3 ; v0 = 4 ; move v0 , v0 * v0 )  
[11177] ( v0 = 3 * 2 ; move ua , v0 ; move 3 , v0 * v0 )  
[11178] ( v0 = 4 + 3 ; move ua , v0 * v0 ; move 3 , v0 )  
[11179] ( move ul / 3 , ua * ua ; move 2 , 3 ; move 3 , ul - ua )  
[11180] ( move ul + ul , 0 ; ( move ul , 2 + ul ; move 4 , ul ) )  
[11181] ( ( move 4 , 4 * 2 ; pen 3 ; move 3 , 2 ) ; move 4 , ua )  
[11182] ( move ua - ul , 2 ; move 4 , ul - 4 ; v0 = ua + ua )  
[11183] ( v0 = 2 ; move v0 , v0 / 3 ; move v0 + ul , 3 )  
[11184] ( v0 = 0 - ua ; move v0 , 2 / v0 ; v1 = v0 )  
[11185] ( move ua , 0 ; ( move 4 - ul , ua + ul ; move 3 , ul ) )  
[11186] ( ( pen ua ; move ua , ua ; move ul , ul ) ; move ua , ul )  
[11187] ( ( move 0 , ua * ua ; move 3 , ul ) ; move ua , ua * 3 )  
[11188] ( move 3 + ul , ul ; move ua - 3 , ul ; move 4 - ul , 3 )  
[11189] ( ( move ua + ul , 4 ; move ua , ua - 3 ) ; move 2 , ua )  
[11190] ( move ua - 4 , ua - ul ; move 3 , 3 ; move 2 , ul / ua )  
[11191] ( move ul , ua ; ( move ua , 4 ; move ua - 2 , 2 - ua ) )  
[11192] ( move 3 + ul , 4 ; move ua + ul , ul - 3 ; v0 = ua )  
[11193] ( move ul - ua , ul ; move 4 + 3 , ul / ua ; v0 = 0 )  
[11194] ( move ua - ul , ua - 4 ; v0 = ul ; move ul , 3 + 2 )  
[11195] ( move ul , ul ; move 2 + ul , 4 ; move 4 + ul , 4 + ul )  
[11196] ( ( move ua , 0 ; move ul / 3 , 2 - ua ) ; move ua , ul )  
[11197] ( move 2 - ua , ua ; move ul , 4 / ua ; move 2 / ua , 3 )  
[11198] ( move 4 , ul + ul ; move 4 - ul , 3 ; move ua , 3 + ul )  
[11199] ( move ua , ua ; move 4 + ul , ua / 4 ; v0 = ua + 2 )  
[11200] ( move ul , ua ; ( move 2 - ua , ul ; move ua , 3 + 3 ) )  
[11201] ( ( move 0 , 3 ; move ua , 4 + ul ) ; move ul + ul , ul )  
[11202] ( move 4 + ul , ul ; move ul / 3 , 2 ; move 2 + ul , ul )  
[11203] ( move ua + 3 , ua - ul ; ( move ul , ul ; v0 = 0 ) )  
[11204] ( move ua - ul , ul - 4 ; move ua / 4 , 2 ; move ua , 3 )  
[11205] ( move ua + 4 , ul ; move 4 , 3 + ul ; v0 = ul + ul )  
[11206] ( move ul , ua * ua ; ( move 3 - ul , 2 ; move ua , 2 ) )  
[11207] ( move 4 / ua , ua - ul ; move 3 / ua , 2 ; move 3 , ua )  
[11208] ( move ua , ul ; ( move 2 , 2 - ul ; move ul , ua + 4 ) )  
[11209] ( v0 = 3 / ua ; move 4 , v0 ; move v0 + 3 , v0 )  
[11210] ( move ul , 0 ; ( move 2 + ul , ul ; move ul / 2 , ul ) )  
[11211] ( move ul / 3 , 2 / ua ; move 3 , ua - ul ; move ua , 3 )  
[11212] ( v0 = 3 ; ( move v0 , 2 ; move v0 + ua , v0 ) )  
[11213] ( ( move ua - 2 , ul ; move ul - 4 , ul ) ; move ul , 0 )  
[11214] ( move 3 + ul , ul / 3 ; move ul , 2 ; move ul , ul - 3 )  
[11215] ( move 2 / 4 , 3 + ul ; move ua , ul ; move ul , ua - 4 )  
[11216] ( v0 = 3 * 2 ; move v0 , v0 ; move v0 - 4 , ul )  
[11217] ( move ua , ua / 4 ; move 3 , ua * ua ; v0 = 2 + ul )  
[11218] ( v0 = ua - 4 ; move v0 , 4 ; move v0 * v0 , 2 )  
[11219] ( move ua + ul , ul ; move 2 - 4 , ul - 4 ; move 4 , ul )  
[11220] ( move ua , ua ; ( move ul - 4 , 2 ; move 2 , ul - ua ) )  
[11221] ( move 4 , ul ; move ua - ul , 2 / 4 ; move ul / ua , 0 )  
[11222] ( move 4 - ua , 4 + ul ; move 2 , ua ; move ul , 4 / ua )  
[11223] ( ( move ua , 4 ; move ul , ua + ul ) ; move 4 , 0 - ul )  
[11224] ( ( move ua , ul ; move ul - ua , 4 + ul ) ; move 2 , 2 )  
[11225] ( move 0 - 4 , ul ; pen 0 - ua ; move 2 + ul , ua + ul )  
[11226] ( move ul , 2 ; move 4 - ua , 4 / ua ; move ul , 3 + ul )  
[11227] ( move 3 / ua , ua + 4 ; move 4 , ul + ul ; v0 = ua )  
[11228] ( move ua , ul ; ( move 0 , 4 ; move 4 - ul , ua * ua ) )  
[11229] ( move 4 - ua , 4 * 2 ; move ua , ua * ua ; v0 = ul )  
[11230] ( move ul + ul , ul ; move ua , 2 / 3 ; move ua , 4 / 3 )  
[11231] ( move 3 + 2 , 4 + 3 ; v0 = ua + 3 ; move ua , v0 )  
[11232] ( move ul , ul / ua ; move 4 - ua , 0 ; move 4 / 3 , ul )  
[11233] ( move 4 + ul , ua / 2 ; move ua , 4 + ul ; v0 = ul )  
[11234] ( ( move ul , ua / 2 ; move 3 , ul ) ; move 2 , ua + ul )  
[11235] ( move ul , ul / 4 ; move ul , ul - 4 ; move 3 , ua + 2 )  
[11236] ( move ul , ua ; ( move 4 , 0 ; move 0 , 3 ; move 3 , 2 ) )  
[11237] ( ( move 3 - ua , 0 ; move ul - 4 , ul ) ; move ul , ul )  
[11238] ( move ua , ul - 2 ; move 4 + ul , ua / 3 ; v0 = ul )  
[11239] ( move 3 , ul ; move ul / 3 , ul - 2 ; move ua , ul - 4 )  
[11240] ( move ul , 3 ; ( move 2 + ul , ua + ul ; move ul , 4 ) )  
[11241] ( move ul / 4 , ul ; move 2 + ul , ul ; move 4 , 3 + ul )  
[11242] ( ( move ul , 3 + ul ; move 3 + ul , ul ) ; move 2 , ul )  
[11243] ( move 2 , ua + ul ; pen ua - 3 ; move 0 - ua , ua + 4 )  
[11244] ( v0 = 4 * 2 ; move ul , v0 ; move v0 - 4 , v0 )  
[11245] ( move ua , ul ; ( move ul , ul ; pen ua ) ; move ul , ul )  
[11246] ( move ua , 4 / ua ; move 3 - ua , ul - 2 ; v0 = ul )  
[11247] ( move 3 - ul , ul ; move 4 , ul ; move 4 + ul , 3 - ul )  
[11248] ( move ul - ua , ul / 3 ; move 3 , 3 / ua ; move ua , 3 )  
[11249] ( move ua , 4 / 3 ; ( move ul , ul ; move 0 , ua + ul ) )  
[11250] ( move ua / 3 , 0 ; v0 = 0 - ua ; move v0 , 3 / 2 )  
[11251] ( move ua + ul , 0 - 2 ; move ul , 4 + ul ; pen 0 - ul )  
[11252] ( move ua , 2 + ul ; move ul , 4 / ua ; move ua , 4 / 3 )  
[11253] ( move 3 - 4 , ul ; move ul - ua , ul ; move ul , 4 * 2 )  
[11254] ( move 2 , ua * ua ; ( move ua , ul ; move ua , 3 * 3 ) )  
[11255] ( ( move 2 , ua + 3 ; move 3 - ul , ul ) ; move ul , ul )  
[11256] ( move 4 , ul ; move 4 + ul , ul / 2 ; v0 = ua + ua )  
[11257] ( pen ua - ul ; move ua + ul , 3 + 2 ; move 2 , 2 - ua )  
[11258] ( ( move ua , 4 * 4 ; move ua , ul ) ; move 0 - ul , ul )  
[11259] ( move 2 - 4 , ul ; ( move ul , ul + ul ; move 2 , ul ) )  
[11260] ( move ua , ul / 2 ; move 2 , ul / 4 ; move ul , 4 + ul )  
[11261] ( ( move 2 , ul ; move ul / 3 , ua + ul ) ; move 3 , ua )  
[11262] ( move ul , 2 ; move ua + 4 , ua / 3 ; v0 = ul / ua )  
[11263] ( move ul , ul / 4 ; move 4 - ul , ua ; move 3 , ua + 4 )  
[11264] ( ( v0 = 4 ; move v0 , 2 ) ; move v0 , v0 + ul )  
[11265] ( move 4 , 2 / ua ; ( move ul , ul ; move ul , ua + 2 ) )  
[11266] ( ( move 2 , ul ; move 4 + ul , ul ) ; move ul , 3 + ul )  
[11267] ( move 4 , ua ; move ul , ua * 3 ; move 4 + ul , ua / 4 )  
[11268] ( ( move ul - 3 , ul ; move 2 , 4 ) ; move ul , ua + ul )  
[11269] ( v0 = 4 ; move 2 / v0 , v0 ; move v0 , 3 / ua )  
[11270] ( move 4 / 2 , 4 ; move ua + ul , ua - ul ; v0 = ul )  
[11271] ( move 4 - 3 , ul / 4 ; move ul , ul ; move 3 - ua , ua )  
[11272] ( move ua + ul , 4 * 4 ; move ul + ul , ul ; v0 = 3 )  
[11273] ( move 4 * 2 , ul ; ( move ul , ua + 3 ; move ua , ul ) )  
[11274] ( move ua + 3 , ul / 2 ; move ul / 4 , ul ; move ul , 3 )  
[11275] ( ( move ul - 4 , 3 / ua ; move ua , ul ) ; move 0 , ul )  
[11276] ( move 4 * 2 , ul - 4 ; move ul , ul ; move ua , ul / 2 )  
[11277] ( move ul - 2 , 4 ; move ul / 4 , ul ; move ua , 4 - ua )  
[11278] ( move 3 , ul ; ( move ua - 4 , 2 ; move ul + ul , ul ) )  
[11279] ( move ul + ul , ua ; ( move 4 , 2 ; move 4 + ul , ul ) )  
[11280] ( ( move 4 + 4 , ul ; move ua , ul + ul ) ; move ua , 3 )  
[11281] ( ( move 2 , 4 ; move ul , ua ) ; move ua + ul , ua / 3 )  
[11282] ( move 4 - ul , 3 ; move ua , 3 * 3 ; move ul / ua , ul )  
[11283] ( move 4 - 2 , ul ; move 3 , ul / ua ; move ul / 2 , ul )  
[11284] ( ( move ua , ul ; move 3 + ul , ul - 3 ) ; move ul , 3 )  
[11285] ( move ul , 3 ; ( move ul - ua , 3 ; move ul - 3 , ul ) )  
[11286] ( v0 = 4 ; move v0 / 3 , v0 / 2 ; move v0 , ul )  
[11287] ( move 3 , ul - 3 ; move ua / 4 , ul ; v0 = ul + ul )  
[11288] ( move ua - ul , ua ; ( move 4 , ua - ul ; move 4 , 3 ) )  
[11289] ( move 4 - ul , ul ; move ul - 4 , ua * ua ; v0 = 3 )  
[11290] ( move ul + ul , 3 ; ( move ul , ul ; move 2 - 4 , ul ) )  
[11291] ( v0 = 4 / 2 ; move v0 , v0 / 3 ; move v0 , ul )  
[11292] ( move ul / 2 , ua / 4 ; move 4 , ua / 2 ; move ua , ul )  
[11293] ( move ua + ul , 2 ; move ul , ul / 4 ; move 4 , ua / 4 )  
[11294] ( move 4 / 3 , ul ; move 4 - 2 , ul / ua ; move ua , ul )  
[11295] ( move ul , ul ; ( move 3 - ul , ua - 4 ; move ua , 3 ) )  
[11296] ( move 4 , 4 ; move ul / ua , 2 / ua ; move ul , ul - 3 )  
[11297] ( ( move ul , ul / 2 ; move ul , ua + 4 ) ; move 2 , ul )  
[11298] ( ( move ua , 2 ; move 4 , ua + ul ) ; move ul , ul / 3 )  
[11299] ( move ul - ua , 4 ; move ua , 4 / 3 ; move ul , ul - 4 )  
[11300] ( ( move ul , 2 - ua ; move 3 , ul / 3 ) ; move ul , ua )  
[11301] ( move 3 + ul , ul ; pen ua - 3 ; move 2 + ul , ua + 2 )  
[11302] ( ( move ul , 2 ; move ul / 2 , ul ) ; move ua , 3 / ua )  
[11303] ( move 3 + ul , ul / 3 ; ( move 3 , ua ; move ul , ul ) )  
[11304] ( v0 = 3 ; ( move v0 , ul / v0 ; move 2 , v0 ) )  
[11305] ( move 3 , 4 - ul ; move ul , 2 ; move ul / 4 , ul / ua )  
[11306] ( move 0 , 3 ; ( pen 4 / 3 ; pen 0 ; move ua , 4 + 3 ) )  
[11307] ( move 2 , ua ; ( move 2 , 4 ; move 0 , ul ; move 4 , 3 ) )  
[11308] ( move ua + 2 , 3 + ul ; move ul , 4 + 3 ; pen ua + ul )  
[11309] ( move 4 , ul ; ( move 3 + ul , 4 ; move ua - ul , ul ) )  
[11310] ( move ul , 2 - 3 ; move ua + 3 , 2 - ua ; pen ua - ul )  
[11311] ( ( move ua , ul / 4 ; move ua , ul ) ; move ul , 4 + 2 )  
[11312] ( ( move ul , 3 - ul ; move ul , ua / 3 ) ; move ua , 3 )  
[11313] ( move 2 , 4 * 3 ; move ul , ul / ua ; move 4 , ul / ua )  
[11314] ( move 3 , 3 - ua ; v0 = ul ; move 2 - 4 , 2 - v0 )  
[11315] ( ( move 0 , ul ; move ul , 4 ) ; move 4 , 3 ; move 2 , 2 )  
[11316] ( move ul , 4 ; ( move ul , ul ; move ua - ul , 4 - 3 ) )  
[11317] ( move ul - 4 , ua ; move 2 + ul , 3 + 2 ; pen ul + ul )  
[11318] ( ( move ua , ul / 3 ; move ua , 2 ) ; move ul , ua / 4 )  
[11319] ( move 2 / ua , 4 ; move ul - ua , ul ; v0 = ul / 4 )  
[11320] ( move ua , ul / ua ; ( move ul , 4 ; move 4 - 2 , ul ) )  
[11321] ( ( move ul , 2 - ul ; move 4 / ua , ul ) ; move 3 , ul )  
[11322] ( pen 2 ; ( move ua , 2 ; move 0 , 0 - 2 ) ; move ul , 0 )  
[11323] ( move ul - ua , ul - 4 ; move 2 , 2 + ul ; pen ua * 2 )  
[11324] ( move 3 , 0 ; ( move ul , 3 ; move ul , 2 ; v0 = 3 ) )  
[11325] ( pen 3 - ul ; move ua + ul , 4 - ua ; move 2 , 3 + ul )  
[11326] ( ( move ul - 4 , 0 ; v0 = 4 + 2 ) ; move ua , v0 )  
[11327] ( move 2 + ul , 4 + 2 ; move ua / 4 , ua + ul ; pen ua )  
[11328] ( move ua / 4 , 4 ; ( move ua , ul ; move ul , 4 + ul ) )  
[11329] ( move ua , 2 + ul ; move ua + ul , 4 * 2 ; pen ul - 3 )  
[11330] ( pen ua / 3 ; move 3 , 2 ; ( pen 3 ; move 3 , 3 + 2 ) )  
[11331] ( move ul - 4 , 3 ; ( move ua , ul ; move ul / 4 , ua ) )  
[11332] ( v0 = ul / ua ; move 4 , 3 ; move 4 + 4 , v0 + 2 )  
[11333] ( move ul , 3 + 2 ; ( v0 = 2 - ua ; move v0 , 4 ) )  
[11334] ( ( pen ul ; move 2 + ul , ua * ua ) ; move 0 - ul , 2 )  
[11335] ( pen 3 - ul ; move ua + ul , ua ; move ul - 2 , 2 / 3 )  
[11336] ( pen ua + 3 ; move 3 - ul , ua * ua ; move 3 + ul , 4 )  
[11337] ( move ua + 3 , 3 / ua ; pen ua * ua ; move 3 + ul , 3 )  
[11338] ( move ua - 2 , ul + ul ; ( pen ul - ua ; move 3 , 0 ) )  
[11339] ( ( move ul , ua + ul ; pen 2 / ua ) ; move ua + 3 , 0 )  
[11340] ( ( move ul - ua , 4 ; pen 0 - ul ) ; move ul - ua , 0 )  
[11341] ( move ua - 2 , ul / ua ; move ua , 4 + 3 ; pen ua * 2 )  
[11342] ( ( move ua , ul / 2 ; move ul / ua , ul ) ; move 4 , 4 )  
[11343] ( move 2 - ua , 2 / 3 ; pen ua + 4 ; move ul , ul + ul )  
[11344] ( pen 3 + ul ; move 2 , ul / 2 ; move ua + 4 , ua * ua )  
[11345] ( ( move ul - 3 , ul ; move 3 , ul / ua ) ; v0 = ul )  
[11346] ( ( move ua , 4 * 3 ; v0 = ul ) ; move ul , ul / ua )  
[11347] ( move 3 - ul , ua - 2 ; move ua , ul / 3 ; pen ua * 2 )  
[11348] ( move ul + ul , 4 - ul ; pen 3 ; move 3 + ul , ua - 3 )  
[11349] ( move 0 , ua ; ( pen 0 ; move 3 , ua ) ; move 0 - 4 , 3 )  
[11350] ( move ua , ua ; move ul - ua , 0 - ul ; move ua + 2 , 0 )  
[11351] ( move 3 - ul , ua / 3 ; move 2 + ul , 3 ; pen ua - ul )  
[11352] ( ( move ua - 3 , 2 + ul ; pen ul ) ; move ul , 0 - ul )  
[11353] ( move 3 * 3 , ul ; pen 4 + ul ; move ua + ul , 3 + ul )  
[11354] ( ( move ua , 4 / ua ; move 4 , ul / ua ) ; v0 = ua )  
[11355] ( ( move 4 , ua ; v0 = ua + 4 ) ; move 2 , 3 * v0 )  
[11356] ( ( pen 3 + 2 ; ( pen ua ; move 4 , 2 ) ) ; move 4 , 2 )  
[11357] ( ( move ua + ul , ul + ul ; pen 2 ) ; move ua + 3 , 4 )  
[11358] ( move 0 - ul , ua ; move 0 , ul ; move ua - 3 , ua + ua )  
[11359] ( ( move ua - 2 , 4 + 3 ; v0 = 4 ) ; move ul , v0 )  
[11360] ( move ul , 2 ; ( v0 = 0 ; pen v0 ; move 3 , v0 ) )  
[11361] ( ( move ua + 2 , 4 + 3 ; pen ul ) ; move ul , ua + ul )  
[11362] ( pen ul / ua ; move 4 , 4 - ul ; move 3 + ul , ua - 2 )  
[11363] ( pen ul / ua ; move 0 - ul , 4 - ul ; move 4 , 2 / ua )  
[11364] ( pen 4 + ul ; ( move ul , ul ; move ua + 2 , 3 + ul ) )  
[11365] ( ( move 3 , ua - ul ; v0 = 3 * 3 ) ; move 3 , v0 )  
[11366] ( move 4 + ul , 4 - ul ; v0 = 4 ; move 4 , v0 * 3 )  
[11367] ( move 4 + 3 , ua ; pen ul + ul ; move 3 / 4 , ua - ul )  
[11368] ( pen 2 ; ( move 3 + ul , ul ; move ua + ul , ua / 3 ) )  
[11369] ( pen ua - ul ; ( move 3 - ul , 3 ; move ul - ua , 2 ) )  
[11370] ( pen 2 + ul ; ( move ul - ua , ul ; move ul , 2 - 4 ) )  
[11371] ( pen ul / ua ; move ul - 3 , 2 / ua ; move ua - 4 , 3 )  
[11372] ( ( move ul - ua , 3 / ua ; pen ua ) ; move 3 / ua , 0 )  
[11373] ( ( move 3 * 3 , 2 ; pen ua + ul ) ; move ul , ul - ua )  
[11374] ( ( move ul - ua , 3 - ua ; move 3 , ul - 2 ) ; pen ul )  
[11375] ( ( move ul + ul , 2 / ua ; pen 4 ) ; move ua + ul , 2 )  
[11376] ( move 2 - 4 , 3 - ua ; move ua , ua / 4 ; pen ul / ua )  
[11377] ( move ua , ul - 2 ; move ua / 4 , 2 / ua ; pen 4 - ul )  
[11378] ( ( v0 = ua - 4 ; move 3 * 3 , 4 ) ; move ul , v0 )  
[11379] ( move 2 , ul + ul ; move 0 , 3 ; move ua + ul , ua * ua )  
[11380] ( move ua + 2 , ul ; move 0 , ul + ul ; move ul , 3 + ul )  
[11381] ( ( move 3 - ua , ul ; move ul - ua , ul / 2 ) ; pen 2 )  
[11382] ( move 4 , 2 ; ( v0 = ua ; pen v0 ; move 3 , v0 ) )  
[11383] ( move ua + ul , ul ; v0 = ua ; move v0 , ua * v0 )  | ( move ua + ul , ul ; v0 = ua ; move ua , v0 * v0 )  
[11384] ( ( move 4 + ul , 3 + 2 ; pen ul / ua ) ; move ua , ul )  
[11385] ( pen ua / 3 ; move ua - 2 , ul / ua ; move 4 , 3 / ua )  
[11386] ( move ul - ua , 2 * 2 ; ( pen 2 ; move ul , ul / ua ) )  
[11387] ( move 2 , ua * ua ; move ua , 0 - ul ; move ul , 3 + ul )  
[11388] ( ( move 3 , ua / 2 ; pen 0 ; move 3 , 2 ) ; move ul , 2 )  
[11389] ( move 4 , 0 ; ( pen 4 ; move ua + 2 , ul ; move 3 , 2 ) )  
[11390] ( move 2 , 0 ; move ua + ul , ul ; move ua / 3 , ua + ul )  
[11391] ( ( move ul , 4 + ul ; pen ua ) ; move 4 + ul , 4 + ul )  
[11392] ( move ul , 2 + 2 ; move 3 + ul , ul ; move ua , ua + ul )  
[11393] ( pen 4 ; ( move 4 + ul , ul - ua ; move ua + ul , 4 ) )  
[11394] ( move 0 , ua ; move ua + 4 , ul ; move ul - 2 , ul - ua )  
[11395] ( move ua , 0 ; move ul + ul , ul - 3 ; move 2 , ua * ua )  
[11396] ( move ul + ul , ul ; ( pen 2 ; move 4 - ua , 4 - ul ) )  
[11397] ( pen 4 ; ( move ua - 4 , ua ; move ua / 2 , ua - ul ) )  
[11398] ( ( move 2 - ul , 2 ; pen 3 ; move 2 , ul ) ; move 4 , 0 )  
[11399] ( move 4 + ul , 0 ; move 3 - ua , ua ; move ua , ul + ul )  
[11400] ( move 4 + 3 , ua ; move 0 - ul , ua + ul ; move ua , ul )  
[11401] ( move 0 - 4 , ul ; move 2 , ua + ul ; move ua - ul , ua )  
[11402] ( ( v0 = ul ; pen 3 ; move 4 , 2 ) ; move v0 , v0 )  
[11403] ( move ua , 0 ; move ul - ua , ul ; move 4 * 2 , ua + ua )  
[11404] ( ( move ul , 4 ; pen ul + ul ) ; move 2 + ul , ul / 2 )  
[11405] ( move ul - ua , 0 ; move ul , ua * ua ; move ua , 3 + 3 )  
[11406] ( move ua , ul - 2 ; move 0 , 2 ; move ua + ul , ul / ua )  
[11407] ( move ul + ul , ul ; move 2 , ua + ul ; move ul , 0 - 4 )  
[11408] ( move 4 , ul ; move 3 - ua , ua ; move ua + ul , ua + 2 )  
[11409] ( v0 = ua + ul ; move v0 , 0 ; move 2 , v0 * v0 )  
[11410] ( pen ua ; move 0 , ul ; ( move 4 , 2 ; move 2 , 3 / 2 ) )  
[11411] ( move ul , 4 ; move ul + ul , ua + ul ; move 2 , ua + 2 )  
[11412] ( move ua , 2 - ul ; move 4 - ua , ua ; move ul , ua + 2 )  
[11413] ( move ul + ul , 2 ; move 3 , ua + 3 ; move ua + ul , ul )  
[11414] ( move ua , ua - 3 ; move ul , 0 - ul ; v0 = ua + ua )  
[11415] ( move 2 , 2 + ul ; move ul , ua ; move 3 - ua , ua - ul )  
[11416] ( move ua , ul ; move ua + ul , 2 + ul ; move ua - 3 , 3 )  
[11417] ( ( pen ua / 4 ; move 3 , ul + ul ) ; move ul - ua , 3 )  
[11418] ( move 4 , 3 ; ( pen 0 ; move ul - ua , 4 ; move 4 , 0 ) )  
[11419] ( ( move 4 , ul / 2 ; v0 = ul / 4 ) ; move v0 , 2 )  
[11420] ( move 2 - ul , 0 ; move ul , ul ; move ua + ul , 4 - ua )  
[11421] ( move 4 , 4 + ul ; move ua , ua * ua ; move 0 , ua + ul )  
[11422] ( move ua , 2 + ul ; move ua , ua - 4 ; move 2 , ul + ul )  
[11423] ( ( move 4 , ua * ua ; pen 4 / 2 ) ; move ua , ua * ua )  
[11424] ( move 2 , 2 / ua ; ( v0 = 0 ; pen 2 ; move 2 , ul ) )  
[11425] ( move ua - ul , ua ; move ul + ul , 0 - 2 ; v0 = ua )  
[11426] ( ( pen 4 + ul ; move 4 , 3 ) ; move 0 , 0 ; move ul , 4 )  
[11427] ( move 0 - 2 , ua ; move ua , ul + ul ; move 3 / ua , ul )  
[11428] ( move 3 , 2 ; ( pen ua + 4 ; move 3 , ua ; v0 = 0 ) )  
[11429] ( move ua , 3 ; ( pen 0 ; move 2 , 3 * 2 ; v0 = ul ) )  
[11430] ( move ua + ul , 4 ; move ul , ua + 4 ; move 2 , ua + ul )  
[11431] ( move 0 , ul ; move 3 , 2 ; ( pen ul ; move 3 * 2 , 4 ) )  
[11432] ( ( move 3 , ul - 4 ; move ul , 4 ; move 4 , 0 ) ; pen 0 )  
[11433] ( move ul + ul , ua - 4 ; move 0 , ul - ua ; move 4 , ua )  
[11434] ( ( move 3 , ul ; move 0 , ul ) ; pen 3 ; move 2 , 2 / 3 )  
[11435] ( move 4 , 3 ; move 4 + 2 , ul ; ( pen 3 ; move 0 , ul ) )  | ( v0 = 3 ; move 4 , v0 ; move v0 + v0 , ua + ul )  
[11436] ( move 2 , ul ; v0 = ua - 2 ; move v0 , v0 + v0 )  
[11437] ( move ua , ua + 2 ; move 3 + ul , ul ; move 3 - ul , ul )  
[11438] ( ( pen 2 / ua ; move ua , ul ) ; move 4 - ua , ul / 3 )  
[11439] ( move ul , ua + ul ; move 0 - ua , 4 + ul ; move ul , 4 )  
[11440] ( move 2 - ua , 3 ; move ua , ul + ul ; move ul , ua - 3 )  
[11441] ( move ul , ul ; move 0 - 2 , ua * ua ; move ul , 3 - ul )  
[11442] ( pen 2 ; ( move ul , 4 ; move 3 + ul , 0 ; move 4 , 3 ) )  
[11443] ( move ua - 2 , ul ; move 0 , ua * 4 ; move ul , ua * ua )  
[11444] ( move 4 * 2 , 0 ; move ul , ua + ul ; move ua - ul , ul )  
[11445] ( move ul , 2 + ul ; move 2 , 2 - ul ; move ua - ul , ul )  
[11446] ( move 3 , ul - 3 ; move 0 - ua , ul ; move ua - ul , ul )  
[11447] ( move ul , ul ; move ua + 2 , ul / 4 ; move 0 , ua - ul )  
[11448] ( ( pen 2 ; move 4 - 3 , 4 ; move ua , 2 ) ; move ua , 3 )  
[11449] ( pen ua ; ( move 3 , 2 ; ( move 2 , ua ; move 2 , 2 ) ) )  
[11450] ( ( pen 2 ; move 0 - 3 , ua ) ; move ul , 4 ; v0 = 3 )  
[11451] ( v0 = 3 - ua ; move v0 , 2 ; move ul + v0 , v0 )  
[11452] ( move ul , ua * 4 ; move 0 , ul ; move ua + 2 , ul / ua )  
[11453] ( move 2 , ul ; move 4 + 2 , ul ; move ua - ul , ul + ul )  
[11454] ( move ul - ua , ua / 4 ; move 0 , 2 + ul ; move ul , ul )  
[11455] ( move ua , ul / ua ; move 3 - ua , ul - 3 ; move 0 , ul )  
[11456] ( move ua + ul , 4 ; move 0 , 3 / ua ; move ul , ul - ua )  
[11457] ( move ul - ua , ua ; move ua - 4 , ul ; move ua , 3 - 2 )  
[11458] ( move 2 + ul , ua ; move 3 / ua , ul ; move ua - ul , 2 )  
[11459] ( move ua , 2 ; move ua , ua / 3 ; move ul - ua , ul - 2 )  
[11460] ( move ua / 2 , ul ; move 3 , 0 - ul ; move ul , ua * ua )  
[11461] ( move ul , ua + 4 ; move ul , ua - 2 ; move ua , 2 / ua )  
[11462] ( move 0 - ul , ul ; move ua , ul - ua ; move ua - 4 , 4 )  
[11463] ( move 4 , ua + ul ; move ul - ua , 3 + ul ; move 2 , ul )  
[11464] ( v0 = 2 ; move 2 - ua , v0 * ua ; move v0 , v0 )  
[11465] ( move ul , ua + ul ; move 3 , 4 ; move ul + ul , ua - 2 )  
[11466] ( v0 = 2 - ua ; move v0 - ul , 2 ; move v0 , v0 )  | ( v0 = 2 - ua ; move ul - ua , v0 ; move v0 , v0 )  
[11467] ( move 3 , ua * ua ; ( pen 4 ; move 4 - ul , ul / ua ) )  
[11468] ( move ua - 2 , 0 ; move ul , ul / ua ; move 4 - ul , ua )  
[11469] ( move ua + ul , ul ; move ua - 4 , ua ; move 2 , ua - 4 )  
[11470] ( move 2 , ua ; move 4 + ul , ua + ul ; move 4 , ua - ul )  
[11471] ( move ua - ul , ua ; move 3 + ul , ul ; move ul , 2 * 2 )  
[11472] ( move 2 * 2 , ul / ua ; move 2 , ua ; move ua + ul , ul )  
[11473] ( move 3 + ul , 2 / ua ; move ul , ua ; move 2 , ua - ul )  
[11474] ( v0 = ua ; move 2 - v0 , v0 ; move v0 + 3 , ul )  
[11475] ( move ua / 2 , ul ; move 3 + ul , 2 ; move ul + ul , ua )  
[11476] ( move ua / 2 , ua - ul ; move 2 , ul ; move ua + 3 , ul )  
[11477] ( move ua , ua ; ( move 0 - ua , ul ; move ul , ua + 3 ) )  
[11478] ( move 2 , ul ; move 3 + 2 , ua + ul ; move ul , ul / ua )  
[11479] ( move 4 , 2 ; pen ua ; ( move 4 + 2 , 4 ; move ul , 3 ) )  
[11480] ( move 2 , ua ; move ul / 3 , ul ; move ua - 2 , ul + ul )  
[11481] ( ( move 2 + 2 , ua ; pen 4 ; v0 = 4 ) ; move ul , 2 )  
[11482] ( move 3 * 3 , ua - ul ; move ua , 3 ; move ua , ul + ul )  
[11483] ( move 3 - 4 , ul ; move ua , ua ; move ua + ul , ua - 4 )  
[11484] ( v0 = 3 ; move ua , v0 ; move v0 + v0 , 4 + ul )  
[11485] ( move ul - 2 , 4 - ua ; move ul , 4 ; move ua + ul , ua )  
[11486] ( move 4 - ua , 0 ; move ua + ul , ul / ua ; v0 = ua )  
[11487] ( v0 = ua + 2 ; move v0 , v0 ; move 4 , ua * v0 )  
[11488] ( move ul + ul , ul ; move ua , 4 + ul ; move 4 , 2 + ul )  
[11489] ( move ul , 0 - 4 ; move ul + ul , ul - 4 ; move ua , ul )  
[11490] ( ( move ul - 4 , 4 ; move 3 , 3 ) ; pen 0 ; move 4 , ua )  
[11491] ( v0 = 3 ; move v0 , v0 ; move ul - 3 , ua + v0 )  
[11492] ( move ul , ul - 3 ; move ua - 4 , ul ; move ua , ua + 3 )  
[11493] ( move 2 - ua , ua ; ( move ua , ul ; move ul , ua + 2 ) )  
[11494] ( move 3 , ul + ul ; move 4 + ul , ul ; move ua , 3 + ul )  
[11495] ( move 0 , ul ; move ul , ul / ua ; move 4 * 2 , ua + ul )  
[11496] ( ( move ua + ul , 2 ; move ul , 2 ) ; move ua , ua + ul )  
[11497] ( move ul - ua , 0 ; move ul , ua + 4 ; move ul , ul / 3 )  
[11498] ( ( move ul , ua - 2 ; move 2 , ul ) ; move ua , ua + ua )  
[11499] ( move ua , ul ; move ul / 3 , 2 * 2 ; move ua + ul , ua )  
[11500] ( move 3 + 3 , ul ; move ua - ul , 3 + ul ; move ul , ul )  
[11501] ( v0 = 3 ; move v0 , ua - v0 ; move ul , 2 - v0 )  
[11502] ( move ua - 4 , ul ; move ul , ua ; move 3 - ua , 3 + ul )  
[11503] ( move ua , 4 ; move ua / 2 , ul + ul ; move 2 + ul , ul )  
[11504] ( move 0 - 2 , ul / 4 ; move ua , ul ; move ul , ul + ul )  
[11505] ( move ua , ua ; move 4 - ul , ul ; move ul - ua , 4 + 3 )  
[11506] ( move ua / 2 , 3 ; move ua , ul ; move ua - ul , ua - 4 )  
[11507] ( ( move ul , 3 ; move ua + ul , ua ) ; move ua , ua - 2 )  
[11508] ( move ua , 4 ; move 2 - ul , ua - ul ; move ul , ua - 4 )  
[11509] ( move 0 , ul ; move ua - ul , 4 / ua ; move ul , 4 + ul )  
[11510] ( move ul - 3 , ua ; move ul , 3 ; move ua - 4 , ul + ul )  
[11511] ( move 2 + ul , ua ; move 4 + ul , ul ; move 3 , ul / ua )  
[11512] ( move 2 , ul / 2 ; move ul , ua + ul ; move ua , 3 / ua )  
[11513] ( move 4 , 2 ; ( move 3 , ua / 4 ; pen 2 ; move ul , 2 ) )  
[11514] ( move ul , 2 + ul ; move 4 + ul , ua * ua ; v0 = ua )  
[11515] ( move 2 , ua * 3 ; move ul - ua , ul ; move 4 + ul , ul )  
[11516] ( move ul - ua , ua + 4 ; move 2 , ua ; move 4 , ul / ua )  
[11517] ( move 4 - ul , ua ; move 3 , ua * ua ; move ul - 3 , ua )  
[11518] ( move 2 , ua - 4 ; move ul , ul + ul ; move ua , ul / 2 )  
[11519] ( move ul - 4 , ul + ul ; move ul , ul ; move ul - 2 , 2 )  
[11520] ( v0 = 4 ; move ua , 2 * v0 ; move v0 - ua , v0 )  
[11521] ( move 2 - ul , ua * 4 ; move ul - ua , 2 ; move ul , ul )  
[11522] ( move ua , 2 - ua ; v0 = 4 ; move v0 , v0 * v0 )  
[11523] ( move ul , ua / 2 ; move ua / 2 , ul ; move ua , 3 + ul )  
[11524] ( move ul , ul ; move ul - 2 , ul / 2 ; move 3 , ua + ul )  
[11525] ( ( move ua + ul , ua + 3 ; move ul , ul ) ; move ua , 2 )  
[11526] ( move ul / ua , ua + ul ; move 3 , 2 / ua ; move ua , 3 )  
[11527] ( move ul , ul + ul ; move ua , ul / 4 ; move ua + 2 , 3 )  
[11528] ( move ua - ul , ua - 3 ; move 2 , ul ; move 3 / ua , ul )  
[11529] ( move ua - 2 , 4 - ul ; move 4 , ul + ul ; move ua , ul )  
[11530] ( move 4 / ua , ua ; move ua , 2 - ul ; move ul - 3 , ul )  
[11531] ( move 4 , ul / ua ; move ul + ul , ul / ua ; move 3 , 0 )  
[11532] ( move 4 , ul ; v0 = 2 + ul ; move v0 , v0 * v0 )  
[11533] ( v0 = 4 + ul ; move ul , v0 * v0 ; move v0 , 2 )  
[11534] ( move ua - ul , ul / ua ; move 4 + ul , 2 ; move 3 , ul )  
[11535] ( ( move ua - 4 , ua - ul ; move ua , ua ) ; move ua , 2 )  
[11536] ( move ul , ul ; ( move ul , 0 ; move ua - ul , 3 + ul ) )  
[11537] ( ( move ua , ul ; move 4 + ul , ua - ul ) ; move 0 , ul )  
[11538] ( move ul - 4 , 0 ; move ul , ua / 4 ; move ul , ul + ul )  
[11539] ( move ua - ul , ua * ua ; move ul - 3 , 3 ; v0 = ua )  
[11540] ( move ua , 3 ; move ul - ua , ul + ul ; move ua / 4 , 3 )  
[11541] ( move 4 + 4 , ua * ua ; move 3 , ul ; move ul + ul , ul )  
[11542] ( move 3 + ul , ua * ua ; v0 = 0 ; move 2 , 3 + v0 )  
[11543] ( move ul , 2 ; ( move 3 , ul ; move 2 , 4 * 3 ; pen 4 ) )  
[11544] ( ( move 3 , 3 * 2 ; pen ua ; move 2 , ul ) ; v0 = 4 )  
[11545] ( ( move 0 - 2 , 4 ; pen 3 / ua ; pen 0 ) ; move ua , 0 )  
[11546] ( move ua - ul , ul + ul ; move 4 + 3 , 4 ; move ul , ul )  
[11547] ( v0 = 3 * 2 ; move ul , v0 * v0 ; move ua , v0 )  
[11548] ( move ul - 4 , ua ; move 4 , ul ; move 3 - ul , ua + ul )  
[11549] ( move ul , 3 - ul ; move ua , ua + 4 ; move ul / 2 , ul )  
[11550] ( move 4 / ua , ua ; move ua , 2 - ul ; move ul + ul , 4 )  
[11551] ( move ua + 2 , 0 ; pen 2 + ul ; move ua + ul , ul + ul )  
[11552] ( move ul , ul - 4 ; move ul , 3 - ul ; move 3 - ua , ua )  
[11553] ( move ul , 4 + ul ; move ul - 3 , ul ; move 4 - ul , ua )  
[11554] ( v0 = 4 + ul ; move v0 , v0 ; move 4 - ul , v0 )  
[11555] ( move ul , ul ; move ul , ul / ua ; move 2 - ua , 2 / 3 )  
[11556] ( ( move ul , ua + 4 ; move ul , ul ) ; move ua , 2 + ul )  
[11557] ( move 3 + ul , ul ; ( move ul , ul ; move ul , ua + 2 ) )  
[11558] ( move ua , ua ; ( move ul - 2 , ua ; move 4 , ua * ua ) )  
[11559] ( move 4 , ua - ul ; move ul , ua / 3 ; move 3 + ul , ul )  
[11560] ( ( move 3 , ul + ul ; move ul , 0 ) ; move ua , ul / ua )  
[11561] ( move 4 , ua - 4 ; ( pen 2 ; move 2 , ul ) ; v0 = 4 )  
[11562] ( move ua + ul , ua ; ( move ul , ul ; move 2 - ua , 4 ) )  
[11563] ( ( pen 4 ; move 2 , ul ; move 4 , 3 ) ; move ua / 2 , 4 )  
[11564] ( move ua , ua - 4 ; move 4 / ua , ul ; move ul , ua * 2 )  
[11565] ( move ul , ul ; ( move ul - 3 , 0 - ul ; move ua , ul ) )  
[11566] ( move ua / 3 , ul ; move ul , 4 ; move ul - ua , 3 + ul )  
[11567] ( ( move ul , ua ; move ua + ul , 0 ) ; move 4 / ua , ul )  
[11568] ( ( move 3 , 2 ; pen ua ; pen 0 ) ; move 4 + 2 , ua - 2 )  
[11569] ( move ul , 3 ; ( move ul , ua + ul ; move 2 - ua , ul ) )  
[11570] ( move 4 , 2 / ua ; ( pen 4 ; move 2 , ul ; v0 = 2 ) )  
[11571] ( ( move ua , ul ; move ul , 3 ) ; move 2 - ua , ua * ua )  
[11572] ( move ul , ua + ul ; ( move 2 , ua + ul ; move ul , 4 ) )  
[11573] ( v0 = 2 / 3 ; move v0 , ua / v0 ; move ua , v0 )  
[11574] ( ( move 2 , ua + ul ; move ul , ua - ul ) ; move 4 , ua )  
[11575] ( move 3 + ul , ua * ua ; move ua , 4 - ul ; v0 = ul )  
[11576] ( v0 = ua - 2 ; move 3 , ua / v0 ; move 3 , 0 - ua )  
[11577] ( ( move ul , ul ; move ua - 2 , ul - ua ) ; move 3 , ul )  
[11578] ( move ul / ua , 2 ; move ua / 3 , ul ; move 4 , ua - ul )  
[11579] ( v0 = 4 ; move 4 , v0 - ul ; move ua , v0 * v0 )  
[11580] ( move ua , 4 * 4 ; move ua , ul - ua ; move ul / 2 , ul )  
[11581] ( ( move ua , ul ; move 3 , ul ) ; move ua - 4 , ua + ul )  
[11582] ( v0 = ul - ua ; ( move v0 , 2 ; move v0 , v0 ) )  
[11583] ( move ul , ul ; move ul / 4 , ua + 2 ; move ul - 4 , ul )  
[11584] ( v0 = ul / 2 ; move ul , v0 ; move 4 - v0 , v0 )  
[11585] ( move ul , 2 + ul ; move 4 , ul / ua ; move ua , ua / 4 )  
[11586] ( move ua - ul , ua - 2 ; ( move ul , 3 ; move ul , ul ) )  
[11587] ( move ul , 4 - ul ; ( move ua , ua ; move 2 , ua * ua ) )  
[11588] ( move ua , ua / 3 ; ( move ul + ul , 2 ; move ua , ul ) )  
[11589] ( move ul - ua , 4 - ul ; move ua , 3 / ua ; v0 = ua )  
[11590] ( move ua / 4 , ua ; move 4 , ua - ul ; move 4 , ul + ul )  
[11591] ( move ua + 3 , ul ; move 4 / ua , ua - ul ; v0 = ul )  
[11592] ( pen 4 ; ( move ul , 2 ; move 4 , ua / 3 ) ; v0 = 3 )  | ( ( pen 3 + ul ; move 4 , ul ; pen ua / 2 ) ; move ul , 4 )  
[11593] ( move 3 , ul ; ( pen 3 ; ( move 3 , 2 ; v0 = ua ) ) )  
[11594] ( v0 = 3 ; ( move v0 , v0 ; move ua - v0 , ul ) )  
[11595] ( pen 2 + ul ; move 2 , ul + ul ; move ul - ua , 0 - ul )  
[11596] ( move ul , ua ; ( move ul , 2 / ua ; move ua + ul , 4 ) )  
[11597] ( move ua , ua * 2 ; ( move ul / 2 , ul ; move ua , ul ) )  
[11598] ( move ul - ua , 4 + ul ; ( move 2 , ul ; move ul , ul ) )  
[11599] ( v0 = 3 ; move v0 , v0 / 4 ; move ul , ul - v0 )  
[11600] ( move ua , ul ; ( move 4 , ua - ul ; move ua , 4 - ua ) )  
[11601] ( ( move ul , 3 ; pen 0 ) ; ( move 4 , ua ; v0 = 4 ) )  
[11602] ( move 3 + 3 , ul - 4 ; ( pen ua ; move 0 , 0 ) ; pen 4 )  
[11603] ( ( move ul , ul ; move ua , ua - ul ) ; move 4 - ul , 2 )  
[11604] ( move 2 - ua , ul / 4 ; ( move ul , ua ; move ua , ul ) )  
[11605] ( ( move ul , ul ; move ua - ul , 4 + ul ) ; move ua , 4 )  
[11606] ( move 4 , ul + ul ; ( move ul , ul ; move ua , 3 - ul ) )  
[11607] ( move ua - ul , ua ; move ul / 4 , ul ; move 4 , ua * 4 )  
[11608] ( ( v0 = 2 ; move v0 , ul / v0 ) ; move ua , v0 )  
[11609] ( move 3 , ul + ul ; ( move ul , ul ; move ul , 4 - ua ) )  
[11610] ( move ua , 0 ; move 3 , 3 ; ( move ul , ul ; v0 = 0 ) )  
[11611] ( move ul / 4 , 4 ; move ua , ua ; move ul + ul , ul / 3 )  
[11612] ( move ua , 3 ; v0 = ul - 3 ; move ua + 4 , v0 - 2 )  
[11613] ( ( v0 = ua - ul ; move v0 , v0 ) ; move v0 , 4 )  
[11614] ( move ua + 3 , ua - ul ; move ul , ua + 2 ; pen 3 + ul )  
[11615] ( move ul - 4 , 4 - ul ; v0 = ul ; move ul , ua * ua )  
[11616] ( ( v0 = 4 / ua ; move ua , v0 ) ; move v0 , v0 )  
[11617] ( move ua - ul , ul / ua ; ( move ua , 2 ; v0 = ul ) )  
[11618] ( move ua / 4 , ul ; ( move ua , ul ; move 4 , ua + ul ) )  
[11619] ( ( move ua / 2 , ul ; move 4 , ul ) ; move ul - ua , ul )  
[11620] ( ( move ul , 0 ; pen 0 ; move ua , ua ) ; move 0 - 2 , 2 )  
[11621] ( move ul - ua , 0 ; move ua + ul , ua / 4 ; pen 3 + ul )  
[11622] ( ( move 3 , ul / ua ; move ua , ul ) ; move ua / 4 , ua )  
[11623] ( ( move 4 , ul ; move ul , 0 ) ; move 2 , 4 ; move 2 , ul )  
[11624] ( move 4 , ul ; ( pen 0 ; move 4 - 2 , 4 + 3 ; pen ua ) )  | ( move 4 , ul ; pen 0 ; ( move 2 , ul / 2 ; v0 = ul ) )  
[11625] ( ( move ul - 3 , ua ; v0 = ua ) ; move v0 + 2 , 2 )  
[11626] ( move ua + 2 , ul + ul ; pen 4 + ul ; move 4 , ua + ul )  
[11627] ( move ua + ul , 4 + 4 ; move ul , ua + ul ; pen ua * 2 )  
[11628] ( ( move ul , ul ; pen 2 ) ; pen 2 - 3 ; move 4 + 3 , 3 )  
[11629] ( move ua , 4 - ul ; ( move ul / 3 , ul ; move ul , ul ) )  
[11630] ( ( v0 = 4 ; move v0 , ul / v0 ) ; move v0 , ul )  
[11631] ( ( move ul / ua , ua / 4 ; move 4 , ua ) ; move ua , ul )  
[11632] ( move 2 + ul , ul / ua ; pen 2 - ul ; move ul , ua - 2 )  
[11633] ( ( move 4 , ul ; move ua - ul , 4 ) ; move ul / ua , ul )  
[11634] ( move 2 , ua * ua ; ( v0 = 4 ; move ua + 3 , v0 ) )  
[11635] ( ( move ua , ua ; move ul - 2 , 2 ; move 2 , 0 ) ; pen 0 )  
[11636] ( move 3 - ua , 2 + ul ; ( v0 = 4 ; move ua , v0 ) )  
[11637] ( ( move ua , 0 ; v0 = ua + ul ) ; move 4 , v0 / 3 )  
[11638] ( move ua , 4 + 2 ; ( v0 = ul + ul ; move 3 , v0 ) )  | ( move ul , 3 ; move ua , 3 ; ( move 2 + ul , 2 ; pen 0 ) )  
[11639] ( pen ua * ua ; move ua + ul , 2 ; move ua + ul , 4 * 4 )  
[11640] ( move ua - ul , 4 * 2 ; v0 = ua ; move v0 , 4 / 2 )  
[11641] ( move ua , 0 ; ( move 4 , 3 ; move 3 , ul ; v0 = ul ) )  
[11642] ( ( move ua + 3 , ua + ul ; pen ua ) ; move ua , 3 + ul )  
[11643] ( move ul - 4 , 4 + ul ; ( pen 2 ; pen 3 ; move 2 , 4 ) )  
[11644] ( move ua - 3 , 3 / ua ; pen ul ; move ua - ul , ua + 4 )  
[11645] ( move ul , 4 ; v0 = ul ; ( move 2 , 2 ; move ua , 3 ) )  
[11646] ( move 2 , 3 ; ( move 4 , ul ; move 4 , ua ) ; move ul , 3 )  
[11647] ( pen 4 + 4 ; move ua + ul , ul + ul ; move ul , ua - 4 )  
[11648] ( move ua , 3 * 2 ; pen ul - ua ; move 3 / ua , ua - ul )  
[11649] ( move 3 - 2 , ul / ua ; pen 4 ; move ul - ua , ul + ul )  
[11650] ( ( move ua + ul , ul / 2 ; move ul , ua * ua ) ; pen 0 )  
[11651] ( move ua - ul , ul - 2 ; move ua , 4 * 2 ; pen ul / ua )  
[11652] ( move ul - 4 , ul ; v0 = ul - 3 ; move 4 / 2 , v0 )  
[11653] ( ( move ul , 4 + ul ; pen ul + ul ) ; move ua , ua + 2 )  
[11654] ( move 4 + ul , 3 + ul ; pen ul ; move 4 - ul , ua - ul )  
[11655] ( move 4 , 2 / 4 ; ( pen 2 ; move 4 + ul , ul ; pen 2 ) )  
[11656] ( ( pen 2 ; move ua + ul , ul ) ; move ul + ul , 4 + ul )  
[11657] ( move 3 , 0 - 4 ; move ul , ua ; ( pen 0 ; move 2 , ua ) )  
[11658] ( ( move ua / 2 , ua ; pen ua + ul ) ; move ul - ua , 3 )  
[11659] ( pen ul + ul ; ( move 3 + 2 , ul ; move ul , ul - ua ) )  
[11660] ( ( move ua / 2 , ul ; v0 = ul / 2 ) ; move 2 , v0 )  
[11661] ( pen 3 ; ( move 3 , 4 - ua ; move ul , 4 ; pen 4 - 3 ) )  
[11662] ( ( move ua + ul , ua + 3 ; pen 3 ) ; move ul / ua , ua )  
[11663] ( move ul - ua , 0 ; ( move ua , ul / 3 ; pen ua - ul ) )  
[11664] ( ( move 2 , 0 ; pen 0 ; move ul - ua , 4 ) ; move 3 , ua )  
[11665] ( move 2 , ua ; ( move ua , ua * 3 ; pen 3 ) ; move 0 , 2 )  
[11666] ( move 2 , ul ; ( pen ua + ul ; move ul - ua , ua / 3 ) )  
[11667] ( move ul , ul ; ( v0 = 4 ; pen 0 ; move v0 , v0 ) )  
[11668] ( move ul + ul , ul ; move ua , 0 ; move ua + ul , 2 + ul )  
[11669] ( ( pen ua ; move ua + 3 , ul ) ; move ul - ua , 3 / ua )  
[11670] ( move ua , 0 ; move 2 , 2 ; ( pen 4 ; move ua , ua * 2 ) )  
[11671] ( ( move ul , 4 ; move 3 , 3 ; move ua , 4 ) ; v0 = ul )  
[11672] ( move ul , 0 ; pen ua ; ( move 2 - ua , 3 ; v0 = 0 ) )  
[11673] ( ( move 3 , ua + ul ; pen ua ; move 2 , 0 ) ; move 3 , 3 )  
[11674] ( ( move ul - ua , ua + 2 ; pen ul ) ; move ua , ul / 3 )  
[11675] ( move 2 , ua ; v0 = 3 ; ( pen v0 ; move v0 , ul ) )  
[11676] ( move ua , 2 + 2 ; move ua , 2 ; ( pen ua ; move 4 , 3 ) )  
[11677] ( move ua , 2 + ul ; move ul - ua , 0 ; move ul + ul , ul )  
[11678] ( ( move ul - 2 , ul - ua ; pen ua ) ; move ua , ua / 4 )  
[11679] ( ( move 2 , 4 - ua ; move ul , 0 ) ; pen 0 ; move ul , 4 )  
[11680] ( move ua + ul , ul ; move 2 - ua , ul - ua ; move ul , 0 )  
[11681] ( move 3 , ul ; ( pen 0 ; move 4 , ua / 2 ; move ua , 0 ) )  
[11682] ( move ul , 0 ; ( move ua , 3 ; move 3 * 2 , 2 ; pen ua ) )  
[11683] ( move ul , 4 ; pen ul ; ( move 3 , 0 ; move 0 - 2 , ul ) )  
[11684] ( pen 3 ; ( v0 = ua ; move ua , v0 ) ; move v0 , 4 )  
[11685] ( move ua , ul / 4 ; move 2 - ua , ul - ua ; pen ul / 4 )  
[11686] ( move ul + ul , ul ; move 0 , 2 ; move ua + ul , ua * ua )  
[11687] ( ( move ul - ua , 4 + 3 ; move ul , ul ) ; pen ul + ul )  
[11688] ( move ul - 3 , ua ; ( pen 0 ; move 0 , ul ; move 4 , 3 ) )  
[11689] ( pen 4 * 2 ; ( move ul - ua , ua ; move ua - ul , ul ) )  
[11690] ( move ul , 2 ; ( pen 0 ; move ua , ua + 3 ; v0 = 2 ) )  
[11691] ( move 2 , 3 ; ( pen 0 ; move 2 - ul , ua ) ; move 3 , ul )  
[11692] ( ( move ua , 4 ; pen 4 ) ; move 0 , 4 ; move 0 - ua , ul )  
[11693] ( pen ul + ul ; move 2 , ua ; ( move 4 , 2 ; move 2 , 2 ) )  
[11694] ( move 2 , 4 + ul ; ( move 3 , ua ; pen 0 ; move ua , 4 ) )  
[11695] ( move ul , 0 ; ( move 2 * 2 , ul ; move 3 , 2 ; pen ul ) )  
[11696] ( move ul , ua ; move 0 - ul , ua + ul ; move ua , 4 + ul )  
[11697] ( move 2 , 4 - 3 ; ( move ul , 3 ; pen 0 ) ; move ua , ua )  
[11698] ( move ul - ua , 0 - ua ; move 2 , ul ; move ul , ua - ul )  
[11699] ( move ua - ul , ul - 2 ; move ul , ua ; move 0 - ua , ul )  
[11700] ( move 3 , ua + 4 ; ( move 4 , 3 ; pen ua ; move 0 , ua ) )  
[11701] ( move ua , ua / 2 ; move ul - ua , ul ; move 0 , ua + ul )  
[11702] ( move ua + ul , ua + ua ; move ul , ul + ul ; move 3 , 2 )  
[11703] ( ( move ua , ua ; move 2 , ul - 4 ; pen 4 ) ; move 3 , 0 )  
[11704] ( move ua + ul , ua + ua ; move ua , 2 ; move ul , ul / 2 )  
[11705] ( move 0 - ul , 4 ; move ua , ul ; move ua - ul , ua + ul )  
[11706] ( ( pen 4 - ul ; move ul + ul , ul ) ; move 4 , ul + ul )  
[11707] ( move ua , ua - 2 ; ( pen 4 ; move ul , 0 ) ; move 3 , 4 )  
[11708] ( ( move 2 , 4 ; pen 3 ) ; move ul , 2 ; move 2 + ul , ua )  
[11709] ( move ul , 2 ; ( move 4 , ul ; pen 3 ; move 0 , 3 - ua ) )  
[11710] ( ( move ua , ua + 3 ; move ul , 4 ; pen 3 ) ; move 2 , 2 )  
[11711] ( move 0 , ul ; move ua + ul , ul / ua ; move ua , ua + 4 )  
[11712] ( move 4 , 4 ; ( move ul , ua - ul ; pen 0 ) ; move 2 , 2 )  
[11713] ( ( move 4 , 0 ; move ul , 4 ; move ul - 2 , 2 ) ; pen ua )  
[11714] ( move ul , ua ; move ul , ua * ua ; move 2 - ua , ua - 3 )  
[11715] ( move ul , ua ; move ua , 4 + ul ; move ua - 3 , ua + ul )  
[11716] ( move ua , 4 ; ( pen 3 + ul ; move ul , 2 ; v0 = 0 ) )  
[11717] ( move ul + ul , ul ; move 4 - ua , ul ; move ua , ua + 2 )  
[11718] ( move 0 , 3 ; ( pen ua ; move ul , ul ; move 4 + 3 , 4 ) )  
[11719] ( move ua + ul , 2 ; move ua - 3 , ul ; move ul , ua * ua )  
[11720] ( ( pen ul ; move 4 , 2 ; move ul , 2 / 3 ) ; move ua , 0 )  
[11721] ( move ua , 0 ; ( pen 3 ; move ul , ul ) ; move 4 + 4 , 3 )  
[11722] ( move ua , 3 ; ( move ua , 4 + 4 ; pen 4 ) ; move ul , 0 )  
[11723] ( pen 2 ; move 3 , 4 + ul ; ( move 2 , 2 ; move ul , ul ) )  
[11724] ( move 0 , 0 ; ( move 3 , ul / 3 ; move 4 , ul ) ; pen ul )  
[11725] ( ( move 2 , ul ; move 3 , 2 ; move 2 , ua / 3 ) ; pen ul )  
[11726] ( move 4 , ul ; move ul - ua , ua * ua ; move 0 - ul , ul )  
[11727] ( ( move 4 , 4 ; ( pen ul / 4 ; move ua , 3 ) ) ; pen 3 )  
[11728] ( v0 = ua * ua ; move 3 , v0 + v0 ; move ua , v0 )  
[11729] ( pen 3 ; ( move 4 , ul ; move ul , 3 * 3 ; move ua , 0 ) )  
[11730] ( move ua , ua + ul ; move 4 - ul , ul ; move 2 + ul , ul )  
[11731] ( v0 = ua + 2 ; move v0 , v0 * v0 ; move ul , ua )  | ( v0 = ua + 2 ; move ul , v0 * v0 ; move v0 , ua )  
[11732] ( move 4 , ul ; move ul , ua + ul ; move ua - ul , 2 + ul )  
[11733] ( ( move 2 , 3 ; pen ul ; move 3 , 2 - ul ) ; move ua , 4 )  
[11734] ( move ua , ul - ua ; move 4 , ua - 2 ; move ul , ul + ul )  
[11735] ( v0 = ua + ul ; move v0 , ua ; move v0 , v0 - 3 )  
[11736] ( move ua , ua ; v0 = 4 ; move v0 + v0 , ul + v0 )  
[11737] ( move ua - 4 , ul ; move 3 , ua - ul ; move ul , ua + ua )  
[11738] ( move ua , ua * ua ; move ua , ua / 2 ; move 3 + ul , ul )  
[11739] ( move ua , ul ; move 0 - ua , ul / ua ; move ul , ua - 4 )  
[11740] ( move ua , 4 + ul ; move ua , ua + ul ; move ua , 4 - ul )  
[11741] ( v0 = ua + 2 ; move ua , ua / v0 ; move v0 , v0 )  
[11742] ( move ul , ul ; move ua , ua + ul ; move ul - 3 , 3 + ul )  
[11743] ( v0 = 3 - ua ; move v0 , ul ; move v0 + v0 , ul )  
[11744] ( move 4 , ul ; move ul - 3 , ua + ul ; move ua , ul + ul )  
[11745] ( move ul , ul / ua ; move ul + ul , ua ; move ul , 3 + 2 )  
[11746] ( v0 = ua + ul ; move 2 , v0 * v0 ; move v0 , ul )  
[11747] ( ( pen ua + 3 ; move 4 , ua ) ; move 3 , 3 ; move ul , 4 )  
[11748] ( ( move 3 , 3 ; move ua , 4 ) ; pen 4 ; move 2 , ul + ul )  
[11749] ( move ua + ul , 4 + ul ; move 3 - ul , ul ; move ul , ua )  
[11750] ( move ul , 4 + ul ; move ua + 3 , ul + ul ; move ul , ul )  
[11751] ( pen ua ; ( move 4 , 3 ; move 4 / 2 , ul ) ; move ul , 0 )  
[11752] ( pen 4 ; ( move ul , 4 ; move ua , 2 / 3 ; move 0 , ul ) )  
[11753] ( move ul + ul , ua ; move 3 , ua * ua ; move ul + ul , 4 )  
[11754] ( move ua , ua / 3 ; move ul + ul , ua + ul ; move ul , 3 )  
[11755] ( v0 = 3 ; move ua - v0 , v0 + v0 ; move ul , ul )  
[11756] ( ( move 3 , 4 ; move 2 , 4 / ua ; move 2 , ua ) ; pen ua )  
[11757] ( move ul + ul , 3 ; move ul - ua , ul ; move 3 , ul + ul )  
[11758] ( ( move ul , ul ; move 3 , 0 - ul ; pen 3 ) ; move 4 , 4 )  
[11759] ( move ul + ul , ul ; move 4 + 2 , ul ; move ul - ua , ul )  
[11760] ( move 2 + ul , 0 ; ( move 0 - ua , 2 ; pen ul ) ; pen 2 )  
[11761] ( pen 4 ; ( move ua , 2 / 4 ; move 3 , ua ) ; move ua , 2 )  
[11762] ( v0 = 2 ; move v0 + ua , ul / ua ; move v0 , v0 )  
[11763] ( ( move 4 , 3 ; pen 3 ) ; move 2 , 4 ; move ul - ua , ua )  
[11764] ( move ua , ul - 4 ; move ua + ul , 4 ; move ul + ul , ua )  
[11765] ( move ua , 3 - ul ; move ul - ua , ua - ul ; move ul , 4 )  
[11766] ( move 3 - ul , ua ; move ul - 4 , ul ; move ul , ua + ul )  
[11767] ( move ul - ua , ul + ul ; move ul , ua ; move 3 , ul / 2 )  
[11768] ( ( move 2 , ul ; move 2 - ua , 4 ; pen 3 ) ; v0 = ul )  
[11769] ( move ul + ul , ul ; move ul / 2 , ua ; move ua , 4 - ua )  
[11770] ( move 4 + ul , ua * 3 ; move ul , ul ; move ul , ua + ul )  
[11771] ( move ul - 4 , 2 ; ( move ua , 4 ; pen ua ) ; v0 = 2 )  
[11772] ( move 4 , ul ; move ul / 2 , ua ; move ua + ul , ul + ul )  
[11773] ( move 4 - ul , ul ; move ul , ua + ul ; move 3 , ul + ul )  
[11774] ( move ul , ul ; move ua + ul , ul / ua ; move ua , 4 - 2 )  
[11775] ( move ua , 2 / ua ; move 4 - ua , ul ; move ul + ul , ul )  
[11776] ( move ul , 2 ; move ul - 4 , ul + ul ; move ua - ul , ul )  
[11777] ( move ul + ul , ua * 3 ; move ul , ua + 4 ; move ul , ul )  
[11778] ( move 3 - ua , ua - ul ; move ua , ul ; v0 = ul + ul )  
[11779] ( move 4 , ul / ua ; move ul - 2 , ul - ua ; move ua , ua )  
[11780] ( ( move 2 , ul ; move 3 , 2 ; pen ul - 4 ) ; move 4 , ul )  
[11781] ( move ul , ua / 4 ; ( move 3 , 3 ; move ua , 3 ) ; pen 2 )  
[11782] ( v0 = ua - 2 ; move v0 , v0 / ua ; move ul , v0 )  
[11783] ( v0 = 4 + ul ; move ul + v0 , ul ; move v0 , v0 )  
[11784] ( move 3 , ul / ua ; move ul , 3 - ua ; move ul , ua + ul )  
[11785] ( pen 2 ; move 3 , ul ; ( move 2 , ul ; v0 = ua / 2 ) )  
[11786] ( move ua , ua ; move 4 - ul , ul ; move ul - ua , 4 + ul )  
[11787] ( pen 2 ; ( move ul , ua ; move ul , 3 ; move 4 , 4 * 2 ) )  
[11788] ( move ua , 3 / ua ; move ul , ua - ul ; move 3 , ua - ul )  
[11789] ( move 3 * 2 , ul ; pen 4 ; ( move 2 , ul ; move 3 , ul ) )  
[11790] ( move ua , ul ; move ua / 4 , ul + ul ; move 3 - ua , ua )  
[11791] ( move 4 , 3 ; ( move 3 , ul ; pen ul ) ; move 2 , 4 - ua )  
[11792] ( move ul , 3 ; ( pen 2 ; move 4 , ul ) ; v0 = ua * 2 )  
[11793] ( ( move 0 , ul ; move ua , 4 ) ; pen 4 ; move 3 , ul / 4 )  
[11794] ( move ua - ul , ua + 4 ; move ul , ul ; move ul / 2 , ul )  
[11795] ( move ul / ua , ua + ul ; move 2 , ul ; move 3 , ul / ua )  
[11796] ( move ul , ua / 2 ; move ua + ul , ul ; move ua / 3 , ul )  
[11797] ( move ul , ul / ua ; move ua , 4 ; move ul - 2 , ua * ua )  
[11798] ( ( move ua + ul , ua + ul ; move ul , ul ) ; move ua , 3 )  
[11799] ( ( move ua , ul + ul ; move ua + ul , 3 ) ; move ua , ul )  
[11800] ( move ul , ul + ul ; move 3 / ua , ul ; move 4 , ua + ul )  
[11801] ( move ul , 3 / ua ; move ul - 4 , ul ; move ua , ua + ul )  
[11802] ( move ua , ul ; move 4 - ul , ul - 3 ; move ul - ua , ul )  
[11803] ( move 3 , 4 + 4 ; v0 = ul ; ( pen 2 ; move ua , ul ) )  
[11804] ( move ul , ua ; ( move ua + 3 , ua + ul ; move ul , ul ) )  
[11805] ( v0 = ul - 3 ; move v0 , ul - v0 ; move v0 , ul )  
[11806] ( pen 2 ; move 2 , 4 ; ( move ua , ul ; v0 = ul - 4 ) )  
[11807] ( move ua - ul , ul ; move ul , ul / ua ; move 3 , 3 - ua )  
[11808] ( ( move ul , 4 ; move 0 , ul ; move ua , 0 ) ; move ua , 2 )  
[11809] ( move ul , ul ; move ua - ul , ua / 2 ; move ua , ua / 4 )  
[11810] ( move ul - 4 , ul ; move ua + ul , ua - ul ; v0 = ul )  
[11811] ( ( move ua , 4 ; pen 0 ; move 4 , ua / 4 ) ; v0 = ul )  
[11812] ( ( move ul , ul ; move 2 , ua + ul ) ; move ua - ul , ul )  
[11813] ( move 2 , 4 ; ( pen ua ; move ua + 2 , ua * 2 ) ; pen 0 )  
[11814] ( v0 = ua ; move v0 , 4 / v0 ; move v0 , ul + ul )  
[11815] ( v0 = 3 ; move v0 , ul ; move v0 - ua , ul / v0 )  
[11816] ( v0 = 4 ; move v0 , ua - ul ; move v0 , ua / v0 )  
[11817] ( move ua , ul ; pen 3 ; ( v0 = ul - 4 ; move 3 , 3 ) )  
[11818] ( move 2 , ua ; ( move 3 , 4 ; pen 4 / ua ; move 4 , ul ) )  
[11819] ( pen ua ; move ul , 2 / 4 ; ( move 3 , 4 ; move 4 , ua ) )  
[11820] ( ( move 3 - ua , 4 ; move 4 , 4 ) ; pen ua ; v0 = ul )  
[11821] ( move ul , ua + ul ; move ul , ul / 3 ; move ul - 4 , ul )  
[11822] ( ( move ul , ul ; move ul , ul ) ; move ua - 3 , ua + ul )  
[11823] ( ( move ul - ua , ul ; move 3 , ul ) ; move ul , ua + ul )  
[11824] ( ( pen 4 ; move ua - 3 , ul ; move ul , 4 ) ; v0 = 3 )  
[11825] ( move 4 , ul - 4 ; ( move ua , 2 ; v0 = ul ) ; pen 4 )  
[11826] ( move ul / ua , ul ; move ua / 2 , ua * ua ; move ul , 4 )  
[11827] ( move ul / 3 , 4 ; ( move 4 , ua ; pen ul ; move 4 , 2 ) )  
[11828] ( ( move 4 , 4 ; pen 4 ) ; ( move ul , ua ; move ul , 0 ) )  
[11829] ( move ul , ua + ua ; move ul / ua , ul / 3 ; move 4 , ul )  
[11830] ( pen ua + 2 ; ( pen 3 ; move ua , 3 - ua ) ; move 2 , 2 )  
[11831] ( move ul , ua - ul ; move 3 , ua - ul ; move ul / 4 , ul )  
[11832] ( ( move ul - 3 , ul ; move ua , ul ) ; move ua , ua * ua )  
[11833] ( move 4 , ul ; move ul / ua , ul + ul ; move ua - 4 , ul )  
[11834] ( move ul , ul ; ( move ua , 2 ; move ua , 2 ) ; move 3 , 0 )  
[11835] ( move 0 , 3 ; ( move ua , ul ; move 2 , 3 ) ; move ua , ul )  
[11836] ( move 3 - ul , ua ; ( move ul , ul ; move ul , ua * ua ) )  
[11837] ( ( move 3 , 0 ; pen ua ; pen ul + ul ) ; move 2 - 4 , 2 )  
[11838] ( move ul , ul - 3 ; move ul , ul / ua ; move ua , ua / 4 )  
[11839] ( ( move ul , ua ; move ul - ua , 4 ) ; move ul , ul - ua )  
[11840] ( move 2 , 4 ; ( ( move 2 , ul ; pen 4 ) ; move ul , ul ) )  
[11841] ( ( move ua , ul ; move ul , ua - ul ) ; move 2 , ul / ua )  
[11842] ( ( move ul , 4 ; pen ul ) ; move 4 , 3 * 2 ; v0 = ul )  
[11843] ( move 0 , ul ; ( move 3 , 0 ; move ua , 4 ; move ul , ul ) )  
[11844] ( move ul , 4 ; ( move ua + 3 , 2 ; pen 4 - ua ) ; pen 0 )  
[11845] ( move 2 , 0 ; ( move 3 , 4 ; move ua , ua ) ; move ul , ul )  
[11846] ( move 3 , 0 ; move ul , ul ; ( move ua , 2 ; move ua , 4 ) )  
[11847] ( ( move ua , 2 - 4 ; pen ua ; move ua - 2 , 3 ) ; pen 2 )  
[11848] ( move ul , ul - 2 ; v0 = ul - ua ; move v0 , 3 + 3 )  
[11849] ( pen 2 - ua ; ( move 3 , ua - 4 ; pen 3 ) ; move ul , 0 )  
[11850] ( move 2 , ul ; ( move 3 , ul ; move 0 , ul ; move 2 , ul ) )  
[11851] ( ( pen ua ; move 4 , 2 ) ; pen 3 / ua ; move ua , 0 - 3 )  
[11852] ( pen ul + ul ; move 3 + ul , ua ; move 2 + ul , ul + ul )  
[11853] ( ( move 3 - ul , 2 ; pen ua ) ; move 3 , 3 + 3 ; pen ul )  
[11854] ( move ul - ua , ua - ul ; pen 3 ; move 2 + ul , ul + ul )  
[11855] ( move 2 - ua , ua ; ( v0 = ua - ul ; move 2 , v0 ) )  
[11856] ( move ua , ul - 2 ; v0 = 3 / ua ; move ua - 4 , v0 )  
[11857] ( pen ua + ua ; move ul + ul , 2 - ul ; move 4 , ul + ul )  
[11858] ( move 0 , ua ; pen 0 ; ( move ul , ua ; move 2 - ua , 0 ) )  
[11859] ( ( move ul , 2 ; move ul - 4 , 4 + 3 ) ; pen 0 ; pen ul )  
[11860] ( move ua , 3 ; ( move 3 , ul ; move 0 , ul ; move 4 , ul ) )  
[11861] ( ( pen 4 * 2 ; move ua , 3 ; pen ul - ua ) ; move 3 , 2 )  
[11862] ( move ul , 3 ; ( move 2 , ul ; move ul , ua ) ; move 4 , 2 )  
[11863] ( ( move ua , 4 / 3 ; pen 2 ; pen 0 ) ; move ul , ul - 3 )  
[11864] ( move 0 - 4 , 3 ; pen ua / 2 ; ( move ul , 3 ; pen ul ) )  
[11865] ( move ua + 2 , ua - ul ; pen ul / 2 ; move ul - ua , ul )  
[11866] ( move ua - 4 , ul ; ( v0 = 0 ; move v0 - ua , ul ) )  
[11867] ( ( pen 4 ; pen ul ) ; move ua , 3 ; move 4 - 2 , ua - 3 )  
[11868] ( move 2 + ul , ua + ul ; pen ul / ua ; move ua , ul / 2 )  
[11869] ( pen ul + ul ; move 3 + ul , ua + ul ; move 3 , ul / ua )  
[11870] ( move ul , ua / 4 ; ( move 4 * 2 , 2 ; pen ul ) ; pen 0 )  
[11871] ( pen 0 ; ( ( move 3 , ul ; pen ul ) ; move 2 - ul , 2 ) )  
[11872] ( pen ua * 3 ; move ua + ul , ua ; move 4 / ua , ua + ul )  
[11873] ( move ul + ul , 2 / ua ; move ua - 3 , ua - ul ; pen ul )  
[11874] ( ( move ul , 3 ; move 2 , ul ; move ul , ul ) ; move 4 , 2 )  
[11875] ( ( move ul , ua ; move 3 , ul ) ; v0 = ul ; move 2 , 2 )  
[11876] ( move 4 , ul ; ( move ul , 0 ; move ul , ul ; move 4 , 3 ) )  
[11877] ( ( pen 3 ; move 4 + 2 , ul ) ; pen ul ; move 4 , 3 + ul )  
[11878] ( move ul , 4 ; ( move 4 , 2 ; move ul , ua ; move ul , 2 ) )  
[11879] ( ( pen 3 ; pen 2 * 2 ) ; move 4 , ua ; move ul - 4 , ul )  
[11880] ( v0 = ua / 2 ; ( move ua + ul , v0 ; move 3 , ul ) )  
[11881] ( move ul - ua , ua - ul ; move ul , 4 / 3 ; pen ua + ua )  
[11882] ( move 3 , ul ; ( move ua , 4 ; move 2 , ul ; v0 = ua ) )  
[11883] ( move 3 , ua ; ( pen 3 ; pen 4 * 2 ) ; move ua / 2 , ul )  
[11884] ( ( move 2 , 4 ; move 3 , ul ; move ul , ul ) ; move ua , 4 )  
[11885] ( move ul , ul ; move ul , 2 ; ( v0 = 2 ; move 3 , ul ) )  
[11886] ( pen 3 ; v0 = ua - ul ; move ul + v0 , v0 * v0 )  
[11887] ( move 4 + ul , 3 - ul ; pen ul ; move ul - ua , ul - ua )  
[11888] ( pen 3 ; ( pen ul ; ( move 4 , ul ; move 0 - ua , 2 ) ) )  
[11889] ( move ua , 4 * 2 ; move ua / 2 , 4 ; ( pen 2 ; pen ul ) )  
[11890] ( move 3 + ul , ul / 3 ; v0 = ul - 4 ; move v0 , ul )  
[11891] ( move 4 , 4 ; pen ua * 2 ; ( pen 3 ; move ua , 3 - ul ) )  
[11892] ( move 4 * 2 , ul ; ( pen 3 ; move ua / 3 , 2 ; pen ul ) )  
[11893] ( ( pen ul ; move 4 , ul ) ; pen 2 ; move 3 + ul , 2 / 4 )  
[11894] ( ( move ua + ul , ua + ua ; pen 4 - ul ) ; move ul , ua )  
[11895] ( move 4 , 0 ; ( move ul , 0 ; pen ua ) ; move ul , ua + 2 )  
[11896] ( move 4 , 4 - ul ; v0 = ul / 2 ; move ul , v0 - ul )  
[11897] ( pen 3 ; move ul , ul - 4 ; ( pen 4 ; move 3 , ul - 2 ) )  
[11898] ( move 4 , ua ; ( move ua , 3 ; v0 = ua ) ; move ul , 4 )  
[11899] ( move ul - 4 , ul ; pen ul - 4 ; move ul + ul , ua + ul )  
[11900] ( pen ua + ua ; ( move 4 , ul + ul ; move ul , ua + ul ) )  
[11901] ( pen 3 ; ( move ua + ul , 4 ; move 2 , ua / 4 ; pen 4 ) )  
[11902] ( move ua / 4 , ul / ua ; move ua , ua + ul ; pen ua * 3 )  
[11903] ( move ua + ul , ua * ua ; ( move 3 , ul ; pen ul + ul ) )  
[11904] ( ( move ua , 3 - ul ; pen 2 ; move ul , 0 ) ; move 0 , ul )  
[11905] ( move ua , 2 ; ( pen 0 ; move 3 + ul , ul ; move 2 , ua ) )  
[11906] ( move ua - 2 , ul + ul ; ( pen ul + ul ; move ul , ul ) )  
[11907] ( move 0 , 3 / ua ; pen ua ; ( move ul , 2 ; move ua , 0 ) )  
[11908] ( pen 0 ; ( ( move ua , 4 ; pen ua * 3 ) ; move ul , 4 ) )  
[11909] ( move ua + ul , ua * 4 ; ( pen ua ; move ul - ua , ul ) )  
[11910] ( move 4 , 0 ; move ul , 2 ; ( move ua + ul , 2 ; pen ua ) )  
[11911] ( pen 2 ; move ua , 2 + 2 ; ( move ua , 2 ; move ul , ul ) )  
[11912] ( move ua , 2 ; ( pen ua ; move 3 , 2 ; move 2 + ul , ua ) )  
[11913] ( pen 3 ; ( move ul , ua ; move ul , 0 ) ; move ua + 3 , 2 )  
[11914] ( move 2 , 2 ; ( move ul , 3 + ul ; move ua , ul ; pen 0 ) )  
[11915] ( move ua , 3 - ua ; move 2 , 4 ; ( pen 0 ; move ua , ul ) )  
[11916] ( ( pen ul ; ( move ul - 2 , ul ; pen 3 ) ) ; move 4 , 3 )  
[11917] ( ( move 4 , ua ; pen 2 ) ; move 0 , ua * ua ; move ul , 2 )  
[11918] ( move ua , ua ; ( pen 0 ; move 4 , 4 ) ; move ul , ua + 2 )  
[11919] ( move ua , 0 ; ( move 2 , ua + 3 ; pen 4 ) ; move ul , ul )  
[11920] ( pen 2 ; ( move 0 , ua + ul ; move ua , 4 ) ; move ua , 4 )  
[11921] ( move 4 + 3 , 0 ; ( pen 0 ; move ul , ul ; move ul , ul ) )  
[11922] ( move ua / 2 , 0 ; pen 0 ; ( move ul , 4 ; move ul , ul ) )  
[11923] ( ( move 4 + 3 , ua ; pen 4 ; move ul , ua ) ; move 0 , ua )  | ( move ua , 0 ; move ul , ua + ua ; ( pen ua ; move ul , 0 ) )  
[11924] ( ( move ua , 0 ; pen ul ; move 2 , ua / 3 ) ; move ua , 3 )  
[11925] ( pen 2 ; move 0 , ul ; ( move ul , ul - 4 ; move ua , 2 ) )  
[11926] ( move ul , 0 ; move ua + ul , ul + ul ; move ul + ul , ul )  
[11927] ( ( move ul , ul ; pen 3 / ua ) ; move 0 , ul ; move 3 , 0 )  
[11928] ( ( move 3 , 2 ; pen 2 ; move ul , ua ) ; move 3 , ua + ul )  
[11929] ( move ul - ua , ul + ul ; ( pen 4 ; move ul / ua , ua ) )  
[11930] ( move ul , 0 - ul ; move ua , ul + ul ; move ul , ua + ul )  
[11931] ( pen 2 ; v0 = ua ; ( move ua , ua ; move 2 + ul , 2 ) )  
[11932] ( ( move 2 , ua ; ( move ua , 2 ; pen ua ) ) ; move 0 , ua )  
[11933] ( pen ua ; ( move ul - ua , ul + ul ; move ul , ua / 4 ) )  
[11934] ( move 2 , ua ; ( pen 3 ; move ul , ua - ul ) ; move 4 , 0 )  
[11935] ( ( move ul - ua , 4 ; v0 = 2 ) ; pen 0 ; move ua , ua )  
[11936] ( ( move ul , 2 ; move ua , ul ) ; move 4 , 2 + 2 ; pen ul )  
[11937] ( move ua , 2 ; ( move 2 , 3 - ul ; pen 4 ; move ua , ua ) )  
[11938] ( pen ua ; ( move ul , 0 ; move ul , 3 ; move 3 , 4 + ul ) )  
[11939] ( move 2 , ul ; ( move ul , ul - 3 ; pen 0 ) ; move ua , 4 )  
[11940] ( move ul , ua ; ( move 3 - ua , ul ; move 2 , 2 ) ; pen 3 )  
[11941] ( move ua + ul , ul + ul ; move ul , ua + 4 ; move ua , ua )  
[11942] ( move 4 , 0 ; ( pen ul ; move ul , ul ) ; move 0 - 4 , ul )  
[11943] ( move 4 + ul , ua ; pen 2 ; ( move ul , 2 ; move 3 , ua ) )  
[11944] ( move ua , 0 ; pen ul ; ( move ua , 4 ; move 3 , 4 + ul ) )  
[11945] ( ( move 2 , 0 ; move ua , ul ; pen 4 * 2 ) ; move ul , ul )  
[11946] ( pen ua ; ( move ul , 0 ; move 2 , ul / 3 ) ; move ul , 2 )  
[11947] ( move ua , ul / ua ; ( pen ua ; move ul / ua , 3 - ul ) )  
[11948] ( ( pen ua ; move ul , ul ) ; move 0 , ul ; move 3 , 3 * 2 )  
[11949] ( ( move 3 - 4 , ul ; pen ua ; move ua , ul ) ; move 3 , 0 )  
[11950] ( move ua , 0 ; move 2 , 4 ; ( pen ua / 3 ; move ua , ul ) )  
[11951] ( move ul + ul , ua + ul ; move ua , ua - ul ; move ul , 2 )  
[11952] ( move ua + ul , ua ; move ul , ul ; move 3 + ul , ua + ul )  
[11953] ( ( move 4 , ul ; pen ul + ul ; move 0 , 3 ) ; move 3 , ua )  
[11954] ( move ul , ul ; move ul , 2 ; ( pen 3 ; move ua / 2 , 0 ) )  
[11955] ( ( move 2 , ua * 2 ; move ul , 3 ; move 2 , ul ) ; pen ul )  
[11956] ( move 2 , ua ; ( move 3 , ul ; pen ul ; move 3 , 3 + ul ) )  
[11957] ( ( pen 2 ; move 3 + ul , 2 ) ; move 3 , ul ; move ul , ul )  
[11958] ( ( move ua - ul , 4 ; pen 3 ) ; move 4 , ua ; move 0 , ul )  
[11959] ( move ul , 3 ; ( pen ua ; move 4 , ua - ul ; move 0 , 4 ) )  
[11960] ( ( move ul + ul , 2 ; pen 2 ) ; move ul , ul ; move 2 , 4 )  
[11961] ( move ul - ua , ul ; move ul , ul ; move ul - ua , ua + 2 )  
[11962] ( move 2 , ul + ul ; move ua + ul , ul ; move ul , ua - ul )  
[11963] ( ( move 3 , ua ; move 2 , 4 + ul ; move ul , ul ) ; pen 3 )  
[11964] ( move 2 , 4 ; ( pen ua - 2 ; move 3 , ul ) ; move ul , ul )  
[11965] ( ( move ul , 4 + ul ; pen 4 ) ; move 3 , ul ; move 0 , ul )  
[11966] ( pen ul ; move 4 , 0 ; ( move 4 , ul ; move ua - ul , 3 ) )  
[11967] ( move ua , ul ; move ua - 3 , ul - ua ; move ul , ul - ua )  
[11968] ( move 3 * 2 , ul ; move ul , ul ; ( pen 0 ; move ul , 4 ) )  
[11969] ( ( pen 4 ; move ua , 0 - ua ; move ul , 4 ) ; move 4 , ul )  
[11970] ( move ul - 2 , ua + ul ; move ul , ul ; move ul + ul , ul )  
[11971] ( pen ua * 3 ; ( move ul , 2 ; move 2 , 3 ) ; move ul , ul )  
[11972] ( move 2 , ua / 4 ; ( pen 2 ; move 2 , ua ; move ul , ul ) )  
[11973] ( move ua , ua ; ( move 4 , ua + 4 ; move ua , 3 ) ; pen 4 )  
[11974] ( ( move ul , ua ; move 2 , ua ) ; pen 4 ; move 4 , ua + 4 )  
[11975] ( ( move ua , ua - 3 ; move 4 , 4 ; pen ua ) ; move ua , 3 )  
[11976] ( ( pen 4 ; move ul , 0 ) ; move ul , 2 ; move 3 , ul / ua )  
[11977] ( move 3 , ua ; ( move 4 - ua , 3 ; pen 2 ) ; move ul , ul )  
[11978] ( ( pen ua ; move 2 , 4 ; move ul , 2 + ul ) ; move 4 , ul )  
[11979] ( move ul , 4 + 3 ; ( pen ul ; move 0 , ul ; move 4 , ul ) )  
[11980] ( move 3 , ua ; ( pen 2 + ul ; move ul , ua ) ; move 4 , 4 )  
[11981] ( move 2 , ul ; ( pen 4 ; move ul , ua / 4 ) ; move ul , 0 )  
[11982] ( ( move ul , ua ; pen 2 ) ; move ua + 4 , ul ; v0 = 3 )  
[11983] ( ( pen ul ; move ua , ul ) ; move 3 - ul , 3 ; move 2 , 4 )  
[11984] ( move ua + ul , ua ; move 3 / ua , ul ; move ul , ul - ua )  
[11985] ( move ul / 4 , ua ; pen 0 ; ( move ua , 2 ; v0 = ul ) )  
[11986] ( ( move ul - 3 , 3 ; move ul , 3 ) ; pen ul ; move 3 , ua )  
[11987] ( move ul , ua / 4 ; ( move 2 , 3 ; pen 2 ; move ua , ul ) )  
[11988] ( move 4 , ua ; pen 3 + ul ; ( move 3 , ul ; move 4 , ua ) )  
[11989] ( move 4 , 4 ; ( move ua , 4 - ul ; move ul , ul ; pen 0 ) )  
[11990] ( pen ul ; move ul , 0 ; ( move 4 , 4 * 2 ; move ul , ul ) )  
[11991] ( pen 2 ; ( move 4 , ul ; move ua , 2 ; move ul - 4 , ul ) )  
[11992] ( pen ul ; ( move 3 / ua , ul ; move 3 , 0 ; move 4 , ul ) )  
[11993] ( ( move 4 , ul - ua ; pen ua ; move ul , 3 ) ; move 3 , 4 )  
[11994] ( pen ua ; move 4 , 3 * 2 ; ( move ua , ul ; move 4 , ul ) )  
[11995] ( ( move ul , 2 ; move 4 , 4 ; pen ua * 3 ) ; move ua , ul )  
[11996] ( move ua + ul , 3 ; move 4 , 3 ; ( pen ua ; v0 = ul ) )  
[11997] ( move ua , 0 ; ( pen 0 ; pen ua + ul ) ; move 2 / ua , 2 )  
[11998] ( v0 = ua - ul ; move ul - v0 , v0 ; move v0 , ul )  
[11999] ( move 3 , 4 + 3 ; ( pen ul ; move ul , 3 ) ; move ul , ul )  
[12000] ( move 3 , ua ; ( move ul , ul ; ( pen 3 ; move ul , 0 ) ) )  
[12001] ( move ul , ul - ua ; move ua + ul , ua / 3 ; move ul , ul )  
[12002] ( pen 2 ; ( move ua , ul ; move 2 , ul ; move 4 / 3 , ul ) )  
[12003] ( ( move 3 , ul ; move ul - 3 , 3 ; move ul , ul ) ; pen 3 )  
[12004] ( move ul , 4 ; ( move ua , ua + 4 ; pen ul ; move 4 , 3 ) )  
[12005] ( ( move ua , ul - 2 ; pen ua ) ; move 4 , ul ; v0 = 3 )  
[12006] ( move ul + ul , ul ; move ul , 4 + ul ; move ul , ul - ua )  
[12007] ( pen ua ; move ul , 4 ; ( move 0 - 4 , ul ; v0 = ul ) )  
[12008] ( pen ua ; ( move ua , 3 ; move 4 , 4 ) ; v0 = ul - ua )  
[12009] ( ( move ul , 2 ; move ul , ul ) ; pen 4 ; move 2 , ul / 3 )  
[12010] ( pen ua + ul ; ( move 4 , ul ; move ua , 4 ; v0 = 3 ) )  
[12011] ( ( move ua , ua + 3 ; pen 4 ; pen 0 ) ; move 0 - ua , ul )  
[12012] ( move ul + ul , ul - ua ; move ul , ul / ua ; move ua , 4 )  
[12013] ( ( pen ua ; move 2 , ul - ua ) ; pen 0 ; move ua + 2 , 4 )  
[12014] ( move 4 , ul ; ( move 3 , ul ; move 4 , ul ) ; pen 2 / ua )  
[12015] ( move ul - ua , ul ; move ua , ul / ua ; move ul - 4 , ul )  
[12016] ( move ua , ua ; ( move 3 , ul ; move 0 , ul ; move ul , 0 ) )  
[12017] ( move ul , 0 ; ( move ua , ua ; move ua , 3 ; move ua , 2 ) )  
[12018] ( move ua , 2 ; ( pen ul ; move ua , ua / 4 ) ; v0 = 4 )  
[12019] ( v0 = ul + ul ; move ua , ua ; move ua - 2 , 3 + v0 )  
[12020] ( move ua + ul , ul + ul ; v0 = ua ; move 2 + v0 , 4 )  
[12021] ( ( pen ul ; move ul , 3 / 4 ) ; move ul , 2 ; move 4 , ul )  
[12022] ( move ua + ul , 3 + 2 ; ( pen 4 ; move 0 , ul ; pen ua ) )  
[12023] ( pen ua / 2 ; ( move ua , 2 ; pen 0 ; move 2 , ua - ul ) )  
[12024] ( move ul , ul / 4 ; ( v0 = ul ; pen 0 ) ; move 4 , ul )  
[12025] ( ( move ua , ul ; move ul - ua , ul ) ; move ul , ul + ul )  
[12026] ( ( move 4 - ua , 0 ; pen 0 ; move ul - ua , ua ) ; pen 4 )  
[12027] ( move ua , 2 ; move 0 , ul ; ( move ua , ua ; move ul , 4 ) )  
[12028] ( pen ua + 4 ; ( pen 4 ; move ua , 0 ; move 2 - ua , ul ) )  
[12029] ( move ul , 0 ; ( pen 3 ; pen ul + ul ; move 3 , 2 + ul ) )  
[12030] ( pen 2 + ul ; move 3 , 0 ; ( pen 3 ; move ul + ul , ul ) )  
[12031] ( pen 2 ; ( pen ul ; move ua , ua * ua ; move 3 + 2 , 2 ) )  
[12032] ( ( pen ua - 3 ; move 2 , 3 + ul ) ; pen ua ; move 2 , ul )  
[12033] ( move ua , 3 * 3 ; v0 = ua * ua ; move ua , ua - v0 )  
[12034] ( move ua - ul , 3 ; ( pen 0 ; pen ua * 2 ; move ua , 4 ) )  
[12035] ( move ua , 4 ; ( pen ua ; move 2 , 3 + 2 ; pen ul + ul ) )  
[12036] ( pen ua ; ( pen 4 ; move ua , ua + 2 ) ; move 4 + ul , 2 )  
[12037] ( move ul , ua ; ( move ul , 2 ; move ul , ul ) ; move 4 , 0 )  
[12038] ( ( move 0 - ua , ua / 2 ; pen ul ; pen ua ) ; move 3 , 4 )  
[12039] ( ( move ul , 3 ; move ul , ua ) ; move ua , ul ; move 2 , 2 )  
[12040] ( move 2 , ul ; ( pen ul ; pen 2 ) ; move 2 - ua , ua - 4 )  
[12041] ( move ua - 3 , ua ; pen 2 ; ( move 2 , ul ; pen ua * 3 ) )  
[12042] ( pen 2 ; ( move ul , 4 ; pen ul - 2 ; move 2 - ua , ua ) )  
[12043] ( ( pen 0 ; move 4 - 2 , ua ; pen ul ) ; move ul - 3 , ul )  
[12044] ( ( pen 2 ; move ua - ul , 0 - 4 ; pen ua ) ; v0 = ua )  
[12045] ( ( move 2 , ul ; move ua , ul ) ; move 0 , ul ; move 4 , ul )  
[12046] ( ( move ua , ul - 2 ; pen 2 ; move ua , ul / 2 ) ; pen 2 )  
[12047] ( pen 4 + 2 ; ( move ua , 3 ; pen ua ) ; move 3 , ul + ul )  
[12048] ( ( pen 2 - ul ; pen 2 ) ; move ua - 4 , 2 ; move ua , ul )  
[12049] ( pen 0 ; ( move ul , ul / 3 ; pen ua ) ; move 4 - ul , 0 )  
[12050] ( move ua , ua - ul ; v0 = ul ; move v0 - 3 , 4 + ul )  
[12051] ( pen ul ; pen ua ; ( move 3 , ua ; pen ul ; move ul , ul ) )  
[12052] ( move 4 + ul , 3 - ua ; ( pen ul ; pen 4 ) ; move 0 , ul )  
[12053] ( move 2 , 3 ; ( pen ua ; pen 4 - ua ; move ua , ua / 2 ) )  
[12054] ( move ul + ul , 4 * 3 ; v0 = ul + ul ; move ua , v0 )  
[12055] ( move ul , 3 ; ( pen ua ; move ua + ul , 3 / 2 ) ; pen 2 )  
[12056] ( move ua , 3 * 3 ; ( pen ua ; move ul + ul , 2 ) ; pen 3 )  
[12057] ( pen 2 ; ( move ua - 3 , ua ; pen ul ; move 4 , ua - 3 ) )  
[12058] ( ( move 4 + ul , ul ; pen ul ; pen 0 ) ; move ua , 4 * 2 )  
[12059] ( pen ua ; ( pen 2 ; move ua / 3 , ua ) ; move ua - 3 , 3 )  
[12060] ( move 3 , ua ; ( move ua , ul ; move 3 , ul ; move 2 , ul ) )  
[12061] ( pen ul ; ( pen ua ; move ul , 2 + 2 ; move 4 + 4 , ul ) )  
[12062] ( ( move 4 , 0 - ul ; pen 3 ) ; pen ua ; move 4 - ua , ul )  
[12063] ( pen 3 ; ( move 2 - ul , ul / ua ; pen 0 ) ; move 3 , ul )  
[12064] ( pen ua ; ( move ul - 3 , ua ; pen 3 ; move 4 + 2 , ul ) )  
[12065] ( ( pen 0 ; move ul - ua , 3 ) ; pen 2 / ua ; move ul , 4 )  
[12066] ( move 3 , 4 + 3 ; pen ul ; ( move ua + ul , 3 ; pen ul ) )  
[12067] ( move ua , 4 * 2 ; ( pen ua ; pen 3 + ul ; move ua , 4 ) )  
[12068] ( move ua + 4 , 4 ; ( pen 3 + ul ; move ua , 3 ; pen ul ) )  
[12069] ( move 0 , ua ; ( ( pen ua ; pen ul / ua ) ; move 4 , 0 ) )  
[12070] ( move 3 , 3 - ul ; pen ua ; ( move 3 , 2 - ul ; pen ul ) )  
[12071] ( ( pen ul / ua ; pen ua ) ; move 2 + ul , 3 ; move 2 , 4 )  
[12072] ( move ul , 0 ; ( move ua , ul ; move ul , ul ) ; v0 = 3 )  
[12073] ( ( move ua , ul ; move ul , 3 ; move ul , ul ) ; move 3 , 2 )  
[12074] ( ( move ua , ul ; move ua , 2 ; move ua , 3 ) ; v0 = ul )  
[12075] ( ( ( pen 0 ; pen 2 ) ; move ua , ul + ul ) ; move 4 , ul )  
[12076] ( ( move ul , ul / 3 ; move 3 , 3 + 2 ) ; pen ul ; pen ua )  
[12077] ( ( move ua , ua ; move 0 , ua ; pen 0 ) ; move 2 , ul + ul )  
[12078] ( ( move ua + ul , 4 ; v0 = ua * ua ) ; move ua , v0 )  
[12079] ( ( move 4 * 2 , ua ; pen ul ; pen ul ) ; move ul , 4 + 2 )  
[12080] ( move ua , 4 / ua ; ( pen ul - 3 ; pen 2 ; move 3 , ul ) )  
[12081] ( move ul , 4 ; ( move ul , ua ; move 4 , ua ) ; move ua , 4 )  
[12082] ( ( pen ul ; move ua , 3 ; pen 3 ) ; move 3 + ul , ua / 4 )  
[12083] ( ( move ul - 4 , 3 ; pen ul - 2 ) ; pen ua ; move 4 , ul )  
[12084] ( ( pen 3 - ul ; move 4 , ua - ul ) ; pen ul ; move 4 , 2 )  
[12085] ( move 2 , ul ; ( move 3 , ul ; move ul , ul ) ; v0 = ua )  
[12086] ( move ua + ul , ul ; pen 3 ; ( pen 4 ; move 2 , ul / 3 ) )  
[12087] ( ( move ul , ul ; move ul , ul ; move 3 , 2 ) ; v0 = ul )  
[12088] ( move ua , 0 ; move ul , ua + 4 ; ( pen 0 ; move ua , ul ) )  
[12089] ( ( move 4 , ul ; move ul , 2 ; move ul , ul ) ; v0 = ua )  
[12090] ( ( move ul , ul ; move ul , ua ) ; move ua , 4 ; move 4 , 4 )  
[12091] ( v0 = ua * ua ; ( move ul , 3 * v0 ; move ua , ul ) )  
[12092] ( move 3 , ua ; ( move ul , ul ; move ul , ul ; v0 = 4 ) )  
[12093] ( ( pen ul ; pen ul ) ; ( move 3 , ua * ua ; move 3 , 2 ) )  
[12094] ( move ua , ua ; ( pen ua ; move 3 , ul + ul ; move 2 , 0 ) )  
[12095] ( ( move 4 , 4 + ul ; pen 2 ; move ul / 4 , ul ) ; pen ul )  
[12096] ( ( move 4 , ul ; move ul , ul ) ; move ul , ul ; v0 = 3 )  
[12097] ( move ul , ua ; ( move ul , ua ; pen 0 ) ; move 2 , ul - 2 )  
[12098] ( pen ua ; ( move 4 - ua , 0 ; move ua , 2 ; move ul , ua ) )  
[12099] ( ( move 3 , ua ; move ua , 2 ) ; move ua + ul , 2 ; pen ua )  
[12100] ( ( move ua , ua * ua ; move ul , 3 ) ; pen 3 ; move 0 , ua )  
[12101] ( move ul , ul ; move ul , 4 ; ( move 4 , ul ; v0 = ul ) )  
[12102] ( move 3 , ul ; ( pen ua ; move 2 , ua ; move ua , 2 - ua ) )  
[12103] ( pen 2 ; ( move 0 , ul ; move ul , ul ) ; move 2 - ua , ul )  
[12104] ( ( move ua , ul ; pen ua ; move ua , 2 ) ; move 0 - ul , 4 )  
[12105] ( move ul , ul ; move 3 , ua + 2 ; ( pen 0 ; move ul , ul ) )  
[12106] ( move ua , ua ; ( move 3 - ua , 0 ; pen ul ; move ua , 4 ) )  
[12107] ( move 0 , ua ; ( pen 2 + ul ; move ua , ul ; move ul , 4 ) )  
[12108] ( ( move ua , 4 ; ( pen ul ; pen ua ) ) ; move 3 , 4 / ua )  
[12109] ( move ul , ul ; move ul , ua + 4 ; ( move ua , 3 ; pen 0 ) )  
[12110] ( ( move 3 , ul ; move 0 - ul , ul ; pen ua ) ; move 2 , ul )  
[12111] ( move 3 + ul , ul ; pen 0 ; ( move ul , ua ; move 4 , ua ) )  
[12112] ( move 3 , 4 + ul ; ( pen ua ; move ua , ul ; move ul , 0 ) )  
[12113] ( ( move ul , ul / ua ; pen 0 ; move ul , 0 ) ; move ua , 4 )  
[12114] ( move ul , ul ; ( move ul , 3 ; pen 0 ) ; move ua , 3 + ul )  
[12115] ( pen ul + ul ; ( move ul , ul ; move ua , 3 ; move 2 , 2 ) )  
[12116] ( move ul , ua ; move ua , ul ; ( pen ua ; move 3 + 2 , 4 ) )  
[12117] ( ( move ua , ua ; move ua + ul , 4 ; pen 3 ) ; move 3 , ua )  
[12118] ( ( move ul , ua - 3 ; move ua , 2 ) ; move 2 , ul ; pen ul )  
[12119] ( move ul , 3 ; ( pen ua + ul ; move 4 , ua ; move ua , 2 ) )  
[12120] ( ( pen ua ; move ua , 2 ) ; move ua , ul ; move ua , 4 * 2 )  
[12121] ( move ua , ua ; ( move ul , 2 + ul ; pen ul ; move 3 , 3 ) )  
[12122] ( ( move ul , 3 * 3 ; move ua , 0 ) ; move ul , ul ; pen ul )  
[12123] ( ( pen 3 ; move ul , ua ; move ua + 3 , ul ) ; move ua , 4 )  
[12124] ( move 2 , ua * ua ; ( move 4 , 2 ; move ua , ul ; pen ul ) )  
[12125] ( ( move 4 , ul ; pen 0 ; move ul , ul ) ; move 3 - ua , ul )  
[12126] ( move ua , 4 ; ( move 2 , ul ; move 2 , ul ; pen ua - ul ) )  
[12127] ( ( move ul , 0 ; move ul - 4 , ul ) ; pen 3 ; move ul , ua )  
[12128] ( ( pen ul ; move 2 , ul ) ; move ul , 2 ; move ua , 3 - ul )  
[12129] ( move 2 , 4 ; ( pen 2 + ul ; move ul , ua ; move ul , ul ) )  
[12130] ( ( move 2 , ul + ul ; pen ul ) ; move ua , ul ; move 3 , 3 )  
[12131] ( ( move ua , 0 ; move 3 / ua , ul ; move ul , 3 ) ; pen ul )  
[12132] ( pen 4 - ul ; move ul , ul ; ( move 2 , 2 ; move ua , ua ) )  
[12133] ( pen 4 ; ( move 4 , 0 ; move ul , ua + ul ) ; move ul , ul )  
[12134] ( pen 2 ; ( move 2 , ul ; move ul , ul ; move ua , 2 / ua ) )  
[12135] ( ( move ua , ua ; move ua , 3 - ua ; move ul , 4 ) ; pen 4 )  
[12136] ( pen 0 ; pen 4 + ul ; ( pen ua ; move 4 + ul , 4 / ua ) )  
[12137] ( ( pen ul ; move ul , ua ) ; move 4 , ul ; move 0 - ul , 4 )  
[12138] ( move 4 , ul ; ( move ua , 4 ; pen ua + 3 ; move ul , ua ) )  
[12139] ( move ul , ua * ua ; move ua + ul , ul + ul ; move ul , ul )  
[12140] ( move ul , 3 ; ( move ua , ul ; move 3 , ul ; pen ua + 4 ) )  
[12141] ( move ul , ul + ul ; move ul + ul , ua * ua ; move ua , ul )  
[12142] ( move ua , ul ; ( move ua , 4 ; pen ua - 3 ; move ul , 3 ) )  
[12143] ( move 3 + ul , ua ; ( pen 4 ; move 2 , ul ) ; move ul , ul )  
[12144] ( move ul , ul ; move 4 , 3 ; ( pen 0 ; move ua , ul / ua ) )  
[12145] ( move ua + ul , ua ; move ul , ul / ua ; move ul - ua , ul )  
[12146] ( pen 3 ; ( move 3 , ul ; move ul + ul , ul ) ; move ua , 4 )  
[12147] ( move ua / 4 , ul ; move ua , ul ; ( move ul , 0 ; pen 4 ) )  
[12148] ( ( move 3 , ua ; move 4 , ul ) ; move ul , ua * ua ; pen 3 )  
[12149] ( ( move ul - ua , 4 ; move ul , ua ; pen 4 ) ; move ul , 2 )  
[12150] ( pen 4 * 3 ; move ua , 2 ; ( move ul , ul ; move ul , ua ) )  
[12151] ( ( move ul , ul + ul ; pen ua ; move 3 , 3 ) ; move ul , 4 )  
[12152] ( move ul , ul ; ( pen ul ; move ua - 4 , ua ) ; move 4 , 2 )  
[12153] ( move 4 - ua , ua ; ( v0 = ua ; pen ul ) ; move 2 , ul )  
[12154] ( move ua , ul ; ( move 4 , 4 ; pen 2 ; move ul , ul + ul ) )  
[12155] ( move 4 , ua ; ( pen 4 + ul ; move ul , ua ) ; move 4 , ul )  
[12156] ( move ua , 2 / ua ; ( move 4 , 4 ; pen ul ; move ua , ul ) )  
[12157] ( pen ua ; ( move 4 , ul + ul ; move 2 , ul ; v0 = ul ) )  
[12158] ( move ul , ua / 4 ; pen ua ; ( move 2 , 4 ; move ul , ua ) )  
[12159] ( ( pen ua ; move ul , 4 ) ; move 4 , ua ; move 3 - ul , ul )  
[12160] ( ( move ua , ul / 2 ; move ul , ua ; move 3 , ul ) ; pen 4 )  
[12161] ( move 3 , 4 + 4 ; ( pen ua ; move ul , ul ; move ul , ul ) )  
[12162] ( ( move 4 - ul , ul ; pen 3 ) ; move ua , ul ; move ua , 4 )  
[12163] ( pen ua ; ( move ul , 3 / ua ; move 3 , ul ) ; move 3 , ul )  
[12164] ( ( move ua , ul ; move ul , ul ; pen 3 - ul ) ; move 4 , 3 )  
[12165] ( pen ua ; move ul , 4 / ua ; ( move ul , 4 ; move 2 , ua ) )  
[12166] ( pen ua ; ( move ul + ul , 0 ; pen ul ; move 2 + ul , 0 ) )  
[12167] ( pen 4 ; move 2 , ul / ua ; ( move ul , ua ; move 3 , ul ) )  
[12168] ( ( pen 3 - ul ; move ua , 3 / 2 ; pen ul ) ; pen ua * 4 )  
[12169] ( move ul , ul ; pen ua ; ( move 3 , ul / 3 ; move 3 , ul ) )  
[12170] ( pen ua ; ( pen 2 ; move 2 , 0 ) ; move ua + ul , ul + ul )  
[12171] ( move ua , ul ; ( pen 3 ; move ua , ul - 4 ; v0 = ul ) )  
[12172] ( move ul , 2 ; pen ul / ua ; ( move 4 , 3 ; move ul , ul ) )  
[12173] ( pen 2 ; ( move ul , ul / 3 ; move ua , ul ; v0 = ul ) )  
[12174] ( ( pen ua ; move 4 , ul / 4 ; move ul , ul ) ; move 3 , ua )  
[12175] ( move 0 - ua , 2 ; ( pen ua ; move 2 , ul + ul ) ; pen ul )  
[12176] ( move ua - ul , 0 ; v0 = ua - ul ; move ua , v0 * ua )  
[12177] ( ( move ul - ua , ua ; pen ul ) ; move 3 , 0 - ul ; pen 0 )  
[12178] ( ( move ul , ua ; move 3 , ul / 4 ) ; pen ul ; move 3 , ul )  
[12179] ( move ua + ul , 0 - ul ; v0 = ul - ua ; move v0 , ul )  
[12180] ( pen 0 - 2 ; pen 2 ; ( move ua + ul , ul ; move ul , ul ) )  
[12181] ( ( pen ua ; move 2 - ua , ua - 4 ) ; move ua , ul ; pen 0 )  
[12182] ( pen ua ; ( move 0 , 3 ; pen 3 ; move ua - ul , ua - ul ) )  
[12183] ( ( pen 3 ; move ua , ul / 4 ; move ul , ul ) ; v0 = ul )  
[12184] ( pen ul ; pen ua - ul ; ( move 4 , 0 ; move ua + 2 , ul ) )  
[12185] ( ( pen 0 ; move ua , ul + ul ) ; pen 4 + ul ; move ul , 2 )  
[12186] ( move 4 , 4 ; ( pen ul ; move ul / ua , ul ) ; move ul , 4 )  
[12187] ( pen ua ; ( pen ul + ul ; move ul , 0 ; move ua , 4 + 4 ) )  
[12188] ( ( pen 3 ; move ul , ul - ua ) ; pen 0 ; move ua - ul , 3 )  
[12189] ( move ul , 0 ; ( pen ul ; pen ul ; move ua + ul , 2 / 3 ) )  
[12190] ( pen 0 ; ( move ua , ul + ul ; pen ul / ua ) ; move 3 , 3 )  
[12191] ( ( move ua , ul ; pen ul + ul ; move 3 , 4 ) ; pen 0 - ul )  
[12192] ( pen 2 ; move ul - ua , ua + 4 ; ( pen ul ; move ul , 2 ) )  
[12193] ( move ua , 4 ; ( pen ua ; pen ua ) ; move 3 + ul , ua + 4 )  
[12194] ( ( pen 3 ; pen ua + ua ; move ua , ul ) ; move 3 - ua , 4 )  
[12195] ( move 0 - ul , ul / 2 ; pen 3 ; ( move ua , ul ; pen ua ) )  
[12196] ( move ul , ua ; ( move ua , ul ; move ul , 3 ; move ul , 2 ) )  
[12197] ( move ul / 2 , 3 ; ( pen ua ; pen ul ; move ua + 2 , ul ) )  
[12198] ( ( move ua , 4 ; move ul , 0 ) ; move ul , ul ; move ul , ul )  
[12199] ( ( move ul , 4 / ua ; pen 0 ) ; move 4 , ua ; pen ua + ul )  
[12200] ( ( pen ul - ua ; move ua , 4 * 3 ) ; pen ua ; move ua , 2 )  
[12201] ( pen ua ; ( pen 4 ; move 3 + ul , 3 ) ; move ua , ua * ua )  
[12202] ( move ua , ul ; pen 2 ; ( pen 4 ; move ua + ul , ul - 4 ) )  
[12203] ( pen 2 - ua ; ( move ua , ul ; pen 4 - ul ) ; move 3 , ul )  
[12204] ( move 0 , ua ; ( ( pen 2 ; pen ul / ua ) ; move ua , ua ) )  
[12205] ( move ul , ul / 2 ; ( pen ua ; pen ul ) ; move ua + 4 , 2 )  
[12206] ( ( move ua + ul , 4 ; pen 3 ; move ul , 4 ) ; pen ua + ul )  
[12207] ( move ul , ul ; ( move ua , 2 ; move ul , ua ; move ul , 4 ) )  
[12208] ( ( move 3 , ul + ul ; pen ul ) ; pen 3 ; move 4 + ul , ua )  
[12209] ( pen ul ; move 4 , ua - ul ; ( move 3 , 4 ; pen ua + ul ) )  
[12210] ( move 2 + ul , 4 ; ( pen ua ; move ul , ul / 2 ; pen ul ) )  
[12211] ( ( pen 2 ; pen ua - 4 ; move ul , 4 ) ; move ua - ul , ul )  
[12212] ( pen 2 ; move 4 , ua / 4 ; ( move ua , ul ; pen ua - ul ) )  
[12213] ( ( pen ua ; move ua , 4 / 3 ) ; move 4 , ul + ul ; pen ua )  
[12214] ( move 2 + ul , ul ; pen ul ; ( pen 4 ; move ul , ul - 4 ) )  
[12215] ( move ua , ul / 4 ; ( pen ul ; move ul , 2 ; pen 4 - ua ) )  
[12216] ( move ul , 4 ; ( pen ul + ul ; move 4 * 2 , ul ) ; pen ul )  
[12217] ( move ul - ua , ul / 4 ; pen 2 ; ( move ul , ul ; pen 3 ) )  
[12218] ( pen ul ; move 3 , 4 * 3 ; ( pen ul / ua ; move ua , ul ) )  
[12219] ( ( pen ua + ul ; ( move ua , 4 ; pen ul ) ) ; move 3 , ul )  
[12220] ( ( move ul , ul / 4 ; move ua , 4 + ul ) ; pen ul ; pen 3 )  
[12221] ( move ua , ul ; pen 4 ; ( move ul / 4 , ul - 3 ; pen ul ) )  
[12222] ( move ul , ul ; ( move 0 - ua , ua ; pen ua ) ; move ul , 2 )  
[12223] ( ( ( move ua , ua ; pen 4 ) ; pen ua ) ; move ul , ul / 3 )  
[12224] ( ( move ul , ua + ua ; move ul , ul ; pen 0 ) ; move 4 , ua )  
[12225] ( pen ua ; ( move 3 + ul , 0 ; move ua , ul ) ; move ul , ul )  
[12226] ( ( move ul , ul ; pen 4 ) ; move ua , 0 ; move ul , ua + ul )  | ( ( pen ul ; pen 3 + ul ; move ua + ul , ul ) ; move ul , ul )  
[12227] ( ( move ua - 3 , ua ; pen 2 ; move ul , ua ) ; move ua , ul )  
[12228] ( move 2 , ua ; ( pen ul ; move ua , ua - ul ) ; move ul , 2 )  
[12229] ( ( move ua , ua * ua ; move ul , 2 ) ; move ua , ua ; pen 3 )  
[12230] ( ( move ul , ua ; pen 0 ) ; move 3 + ul , ul ; move ul , ul )  
[12231] ( move ua - 3 , ua ; move ul , ul ; ( pen 2 ; move ua , ul ) )  
[12232] ( pen ua ; move ul - ua , 0 ; ( move ul , ul ; v0 = ua ) )  
[12233] ( ( move ul , ua ; pen 4 ; move ua , ua + ul ) ; move ul , 2 )  
[12234] ( move ul - ua , ul ; ( move 2 , ul ; move 2 , ul ) ; pen ul )  
[12235] ( move 2 , ul ; ( pen ul - ua ; move ul , 3 ; move ua , ul ) )  
[12236] ( pen 3 ; ( move 0 , ul ; move ua , ul / ua ) ; move ul , ul )  
[12237] ( move ua , ua ; ( move ul , 4 ; pen ua ; move 4 + ul , ua ) )  
[12238] ( ( pen ul ; move ul - ua , ua ) ; move ua , 2 ; v0 = ua )  
[12239] ( ( move ua / 2 , 2 ; move ua , ul ; move ul , ul ) ; pen ul )  
[12240] ( ( pen ul ; move ul , 2 ) ; move 3 , ul ; move ul - ua , ul )  
[12241] ( pen ul ; ( move ua , ua - ul ; move ul , ul ) ; move 3 , 3 )  
[12242] ( pen 3 ; ( move ul , ul ; move ul - 3 , ul ) ; move ua , ua )  
[12243] ( move ul , ua - ul ; ( pen ua ; move ua , ul ) ; move 4 , 3 )  
[12244] ( ( move 3 , 2 ; move ul , ul / ua ; move ua , ua ) ; pen ul )  
[12245] ( move ul / 2 , 3 ; ( pen ua ; move ul , ua ) ; move ua , ul )  
[12246] ( move ua - ul , ul ; ( pen 0 ; move ul , ul ; v0 = ul ) )  
[12247] ( move 3 , 4 ; pen ua ; ( move ul , ua ; move ua - ul , ul ) )  
[12248] ( ( move ul , ul ; pen ua ) ; move 3 , ua ; move ul + ul , 4 )  
[12249] ( move ua , 3 ; ( move ul , ul ; pen 3 ; move ul , ul + ul ) )  
[12250] ( move ua , 2 ; move ul , ul ; ( move 4 , ul + ul ; pen ul ) )  
[12251] ( move ua , ua + 4 ; move ul , ul ; ( move 4 , ul ; pen ul ) )  
[12252] ( move ua , ul ; pen ul + ul ; ( move 3 , ul ; move 4 , ul ) )  
[12253] ( ( move ul , ul ; move ul - 4 , ua ) ; pen 2 ; move ul , ul )  
[12254] ( move ua , ua ; ( move ul , 4 ; pen ua / 3 ; move ua , ul ) )  
[12255] ( move ul , ua ; move ua / 4 , ul ; ( pen ul ; move ua , 2 ) )  
[12256] ( ( pen 4 * 2 ; move ua , ul ; move ul , ul ) ; move ul , ul )  
[12257] ( pen ul ; move 4 , ua ; ( move ul , ul ; move ul , 4 - ua ) )  
[12258] ( move ua + ul , ul ; ( move ul , 4 ; pen 4 ; move ul , ul ) )  
[12259] ( move ua , ua ; ( move ua / 4 , 3 ; pen ul ; move ul , ul ) )  
[12260] ( move ul , ua / 4 ; ( move ul , ul ; pen 3 ; move ua , ul ) )  
[12261] ( ( pen ul ; move ul , ua * ua ) ; move 4 , 4 ; move ul , ul )  
[12262] ( move ua , 4 ; ( pen ul ; move ul , ul ) ; move ul / 4 , ua )  
[12263] ( ( move ua , 4 - ul ; pen ul - ua ) ; pen ua ; move ul , 0 )  
[12264] ( ( move ul , ul ; move ua , 0 ; move ul , ul ) ; move ua , ul )  
[12265] ( pen ua * 3 ; ( move ua , ul ; pen ul ; move ua , ua + 2 ) )  
[12266] ( ( pen ua + ua ; move ul , 2 ) ; pen ul - ua ; move 4 , ul )  
[12267] ( ( move 4 + ul , 0 - ul ; pen ul ) ; move ua , ul ; pen ul )  
[12268] ( pen ua ; ( move ua - 3 , ua ; pen ua ) ; move 3 - ul , ul )  
[12269] ( ( move ua , ua ; pen ua ; move 2 - ua , ul ) ; pen ua * 4 )  
[12270] ( ( pen ua ; move ua - ul , ul ) ; pen ua ; move 3 - 2 , ul )  
[12271] ( pen ua ; pen ua / 2 ; ( move 3 , ul ; move ul , ua - ul ) )  
[12272] ( pen ua ; ( move ul , 4 ; pen ua - 3 ) ; move ua - ul , ul )  
[12273] ( ( move ul , ul ; pen ua ; pen ul - 2 ) ; move ua , 4 / ua )  
[12274] ( move ua / 4 , ul ; ( pen 2 ; move ua , ul + ul ; pen ul ) )  
[12275] ( move ul , 4 + ul ; move ua - 3 , ul ; ( pen ul ; pen ul ) )  
[12276] ( ( move ul , ul ; move ul , ua ) ; move ua , ul ; move 4 , ul )  
[12277] ( pen ul ; move 2 - ua , 4 / ua ; ( pen ul ; move ul , ul ) )  
[12278] ( pen ua ; ( move ua + ul , ua ; ( move ul , 4 ; pen ul ) ) )  
[12279] ( move ul , ua ; ( move ua - ul , ul ; pen 0 ; move ul , ul ) )  
[12280] ( move ua , ul ; pen ua ; ( move 2 , ul ; move ua + ul , ul ) )  
[12281] ( move ua , ua ; pen ua ; ( move ul , 4 - ul ; move ua , ul ) )  
[12282] ( ( move ua + ul , ua ; move 3 , ul ; move ul , ul ) ; pen ul )  
[12283] ( ( pen ul ; move ul , 3 + ul ) ; move ul , ul ; move ua , ul )  
[12284] ( pen ua ; ( move ul , 3 ; move ul , ul ) ; move ul - ua , ul )  
[12285] ( ( move ua , ul ; move ua , ul - 3 ; pen ul ) ; move ul , ul )  
[12286] ( move ua , ua - ul ; pen ul ; ( move ul , ul ; move ul , 4 ) )  
[12287] ( move ua - 4 , ul ; move ua , ul ; ( move ul , ul ; pen ul ) )  
[12288] ( ( pen ul / ua ; move ua , ua ; move ul , ul ) ; move 4 , ul )  
[12289] ( move ua , ul ; ( pen ul ; move ul , ul ) ; move ua / 4 , ua )  
[12290] ( move ul - ua , 4 ; move ul , ul ; ( move ul , ul ; pen ul ) )  
[12291] ( move ul , ul ; ( pen ul / ua ; move ua , ua ; v0 = ua ) )  
[12292] ( ( move ul , ul ; move ul , ul ) ; move ua , ul / 4 ; pen ua )  
[12293] ( move ul , ua + ul ; ( pen ul ; pen ul / 4 ) ; move ua , ul )  
[12294] ( move ua + ul , ua ; ( move ul , ul ; pen ua ) ; move ul , ul )  
[12295] ( pen ul ; ( move ul , ua * ua ; pen ua ; move ua , ua - ul ) )  
=======
((0 uniq "" (1)
  (96 105 113 115 220 221 286 289 347 383 408 562 640 644 709 731 733 760 947
   1015 1016 1018 1030 1052 1055 1188 1192 1195 1201 1208 1589 1644)
  -1 46)
 (1 uniq "move ua + 4 , ul " (0 6 7 8 10 11 12)
  (4 8 10 11 49 90 92 135 204 205 206 243 284 375 413 415 434 463 530 565 714
   779 827 863 888 996 1029 1035 1063 1143 1405 1503)
  -1 7)
 (2 uniq "move 4 * 3 , 3 / 4 " () () -1 0)
 (3 uniq "move ua + 4 , 0 - 4 " (4 5 6 7 8 9 10 11 12) (9 139 672 1256) -1 0)
 (4 equiv "move ua + 4 , 4 - 3 " (3 5 6 7 8 9 10 11 12) () 1 0)
 (5 uniq "move ua + 4 , 3 - 4 " (3 4 6 7 8 9 10 11 12)
  (6 7 12 174 263 349 411 416 440 468 535 536 789 1326) -1 0)
 (6 equiv "move ua + 4 , 0 - ul " (1 3 4 5 7 8 9 10 11 12) () 5 0)
 (7 equiv "move ua + 4 , ul - 2 " (1 3 4 5 6 8 9 10 11 12) () 5 0)
 (8 equiv "move ua + 4 , 2 - ul " (1 3 4 5 6 7 9 10 11 12) () 1 1)
 (9 equiv "move ua + 4 , ua - 4 " (3 4 5 6 7 8 10 11 12) () 3 0)
 (10 equiv "move ua + 4 , ua + ul " (1 3 4 5 6 7 8 9 11 12) () 1 1)
 (11 equiv "move ua + 4 , ul - ua " (1 3 4 5 6 7 8 9 10 12) () 1 5)
 (12 equiv "move ua + 4 , ua - ul " (1 3 4 5 6 7 8 9 10 11) () 5 0)
 (13 uniq "( pen 2 ; move 4 , 2 ) "
  (14 15 16 17 18 19 20 21 22 23 43 109 269 1667 2329)
  (23 35 42 109 591 920 1263 1474) -1 0)
 (14 uniq "( pen 2 ; move ua , 0 ) "
  (13 15 16 17 18 19 20 21 22 39 279 280 290 310 316 369 402 1667)
  (19 36 39 72 94 110 118 127 260 265 279 280 310 312 316 369 402 403 451 491
   529 555 647 762 772 828 861 999 1116 1396 1432 1498)
  -1 5)
 (15 uniq "( pen ua ; move 4 , 0 ) "
  (13 14 16 17 18 19 20 21 22 32 33 37 63 212 268 300 301 306 373 1667 2185
   2800 2829 3075 3091)
  (20 32 37 41 63 133 207 212 218 254 300 301 319 345 372 373 459 521 551 556
   599 615 785 835 924 1189 1215 1357 1370 1413 1546 1592)
  -1 37)
 (16 uniq "( pen 4 ; move ua , 0 ) "
  (13 14 15 17 18 19 20 21 22 39 64 119 120 122 130 268 290 298 307 339 1667
   2213 2542 2873)
  (21 62 64 100 119 120 121 122 132 298 307 314 317 339 346 484 496 515 600
   727 802 823 1389)
  -1 45)
 (17 uniq "( pen ua ; move 4 , 2 ) "
  (13 14 15 16 18 19 20 21 22 33 40 42 66 69 75 116 123 218 269 295 306 313
   333 1667 1784 1786 1788 1789 1830 1855 1858 1967 2116 2156 2166 2231 2329
   2347 2428 2488 2521 2560 2604 2611 2619 2800 2829 2991 3053)
  (40 66 68 69 116 123 131 162 208 258 261 306 313 327 410 446 506 510 520
   543 825 1316 1372 1457 1488 1520)
  -1 17)
 (18 uniq "( pen 3 ; move ua , 3 ) "
  (13 14 15 16 17 19 20 21 22 70 217 273 311 325 344 453 1667 1758 1879 1943
   2296 2609 3007)
  (70 71 80 82 273 311 344 376 472 777) -1 6)
 (19 equiv "( pen 2 ; move ua , ua ) "
  (13 14 15 16 17 18 20 21 22 72 73 118 127 216 251 257 310 312 314 316 1667)
  () 14 1)
 (20 equiv "( pen ua ; move 4 , ua ) "
  (13 14 15 16 17 18 19 21 22 69 75 77 133 157 212 218 220 295 333 345 1667
   1772 1784 1830 2116 2829 2860 3091)
  () 15 4)
 (21 equiv "( pen 4 ; move ua , ua ) "
  (13 14 15 16 17 18 19 20 22 64 119 120 121 132 159 298 299 307 312 314 317
   339 340 346 406 447 1667 1691 1903 2011)
  () 16 0)
 (22 uniq "( pen ua ; move ua , ul ) "
  (13 14 15 16 17 18 19 20 21 98 99 102 103 108 111 112 114 115 125 128 129
   209 250 251 257 262 281 282 320 326 333 334 336 348 356 358 377 385 404
   405 447 448 453 1656 1657 1664 1667 1674 1675 1683 1685 1707 1722 1729
   1731 1735 1772 1776 1778 1779 1784 1798 1800 1805 1809 1812 1813 1816 1828
   1860 1865 1959 1967 1972 1974 1976 1980 1996 2038 2050 2058 2093 2111 2577
   2598 2602 2677 2690 2699 2707 2776 2793 2810 2870 2876 3091)
  (74 83 102 103 108 111 125 128 129 281 282 377 404 445 546 548 597 613 636
   663 668 697 706 708 757 761 838 976 1453 1462 1478 1583)
  -1 46)
 (23 equiv "( pen 4 / 2 ; move 4 , 2 ) " (13 27 39 41 42 66 105 493 2115) ()
  13 0)
 (24 uniq "( move ua , 0 ; move 3 , 2 ) "
  (25 26 27 28 29 44 45 46 47 48 50 51 52 53 54 55 57 58 60 84 85 86 87 88 89
   90 91 93 524 1650 1666 1668 1730 2045 2098 2152 2191 2201 2400 2546 2558
   2670 2844 2857)
  (47 140 186 531 741 1087 1373) -1 18)
 (25 uniq "( move ua , 0 ; move 2 , 4 ) "
  (24 26 27 30 31 44 45 46 47 48 51 52 54 55 57 58 59 60 84 85 86 87 88 89 90
   91 93 617 683 1650 1666 1668 1697 1730 1889 2098 2191 2201 2400 2558 2663)
  (173 467) -1 2)
 (26 uniq "( move 4 , 0 ; move ua , 2 ) "
  (24 25 27 28 29 30 31 44 45 46 47 48 49 50 51 52 53 54 56 57 59 84 85 86 87
   88 89 92 321 324 352 354 523 1650 1666 1668 1730 2016 2045 2098 2191 2201
   2206 2389 2400 2558 2785 2829 2972)
  (53 154 245 544 752 1334) -1 6)
 (27 uniq "( move ua , 2 ; move 4 , 2 ) "
  (23 24 25 26 28 29 30 42 44 45 46 47 48 50 51 52 53 54 55 56 57 58 60 66 84
   85 86 87 88 89 90 91 93 141 150 269 318 367 387 1650 1666 1668 1730 2045
   2098 2115 2121 2191 2201 2400 2558 2562 2599)
  () -1 1)
 (28 uniq "( move 4 , 3 ; move ua , 2 ) "
  (24 26 27 29 30 31 44 45 46 47 48 49 50 52 53 54 56 57 59 83 84 85 86 87 88
   89 92 366 1650 1666 1668 1730 1795 2031 2045 2089 2098 2102 2191 2201 2256
   2390 2400 2482 2558 2572 2651 2744 2972 3050)
  (869) -1 3)
 (29 uniq "( move 4 , 4 ; move ua , 2 ) "
  (24 26 27 28 30 31 44 45 46 47 48 49 50 52 53 54 56 57 59 60 84 85 86 87 88
   89 92 578 1650 1666 1668 1730 2045 2098 2191 2201 2400 2462 2528 2558 2570
   3050)
  (441 578 1428) -1 7)
 (30 uniq "( move 4 , 2 ; move ua , 4 ) "
  (25 26 27 28 29 31 39 44 45 46 48 49 50 52 53 55 56 57 58 59 84 85 86 87 88
   89 92 486 1650 1666 1668 1730 1819 1965 2045 2098 2161 2191 2201 2400 2672
   2719)
  (203 438 801 884) -1 3)
 (31 uniq "( move 4 , 4 ; move ua , 4 ) "
  (25 26 28 29 30 44 45 46 48 49 50 52 53 56 57 58 59 60 84 85 86 87 88 89 92
   370 590 1650 1666 1668 1730 1908 2045 2191 2201 2251 2400 2672 2686)
  (153 753 969) -1 1)
 (32 equiv "( pen ua ; move 0 - 4 , 0 ) " (15 61 101 106 1700 2754) () 15 4)
 (33 uniq "( pen ua ; move 4 , 0 - 2 ) "
  (15 17 40 43 64 65 67 69 75 76 98 112 1858 1985 2213 2232) (75) -1 1)
 (34 uniq "( pen 2 ; move ua + 3 , 2 ) "
  (35 36 38 61 68 72 95 97 99 104 1663 1678 1734 1758 1814) () -1 0)
 (35 equiv "( pen 2 ; move 2 - ua , 2 ) " (34 72 101 2754) () 13 0)
 (36 equiv "( pen 2 ; move 4 + 2 , ua ) " (34 61 77 95 529 1734 1814) () 14
  0)
 (37 equiv "( pen ua * 3 ; move 4 , 0 ) " (15 41 42 63 66 83 102 108) () 15
  2)
 (38 uniq "( pen 2 ; move ua , 3 * 2 ) "
  (34 43 67 72 73 76 79 98 107 1758 1985 2212 2213) (495) -1 0)
 (39 equiv "( pen 4 / 2 ; move ua , 0 ) "
  (14 16 23 30 49 56 62 74 80 83 94 96 102 105 113 115) () 14 0)
 (40 equiv "( pen ua ; move 4 , 4 - 2 ) "
  (17 33 43 67 69 75 76 79 82 98 112 1858 1985 2213 2232) () 17 0)
 (41 equiv "( pen 3 * 2 ; move 4 , ua ) " (23 37 74 100 102) () 15 5)
 (42 equiv "( pen ua / 3 ; move 4 , 2 ) " (17 23 27 37 48 54 63 66 105 2393)
  () 13 0)
 (43 uniq "( pen 2 ; move 4 , ul / 2 ) "
  (13 33 38 40 69 72 75 76 98 114 493 1858) (493) -1 0)
 (44 uniq "( move ua , 0 ; move ua , 2 ) "
  (24 25 26 27 28 29 30 31 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 84
   85 86 87 88 89 90 91 92 93 134 163 165 456 523 1650 1666 1668 1711 1730
   1982 2045 2098 2112 2191 2201 2350 2356 2400 2558 2757 2857 2931 2940
   3032)
  (84 178 350 400 422 456 872 881 952 1284) -1 21)
 (45 uniq "( move ua , 0 ; move ua , 3 ) "
  (24 25 26 27 28 29 30 31 44 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 84
   85 86 87 88 89 90 91 92 93 164 167 170 381 545 712 1650 1666 1668 1730
   2045 2061 2098 2191 2201 2400 2558 2622 2767)
  (86 164 165 187 222 426 431 620 710 808 810 1099 1308 1526) -1 8)
 (46 uniq "( move ua , 0 ; move ua , 4 ) "
  (24 25 26 27 28 29 30 31 44 45 47 48 49 50 51 52 53 54 55 56 57 58 59 60 84
   85 86 87 88 89 90 91 92 93 169 323 412 602 1650 1666 1668 1730 1889 2045
   2098 2191 2201 2349 2400 2470 2476 2522 2558 2799)
  (88 167 196 229 323 330 538 811 1061 1225 1255 1514) -1 40)
 (47 equiv "( move ua , ua ; move 3 , 2 ) "
  (24 25 26 27 28 29 44 45 46 48 50 51 52 53 54 55 57 58 60 66 84 85 86 87 88
   89 90 91 93 140 144 322 531 1650 1666 1668 1730 1743 2045 2098 2152 2191
   2201 2222 2363 2392 2400 2558 2902 3043)
  () 24 10)
 (48 uniq "( move ua , 3 ; move ua , 2 ) "
  (24 25 26 27 28 29 30 31 42 44 45 46 47 49 50 51 52 53 54 55 56 57 58 59 60
   84 85 86 87 88 89 90 91 92 93 172 178 380 397 420 563 738 1650 1666 1668
   1730 1775 1803 1806 1863 1946 1982 2045 2097 2098 2139 2191 2201 2254 2350
   2363 2400 2409 2558 2564 2593 2632 2675 2752 2796 2808 2850 2857 2881 2883
   2910 2931 3032 3044 3081 3082)
  () -1 9)
 (49 equiv "( move 4 , ul ; move ua , 0 ) "
  (26 28 29 30 31 39 44 45 46 48 50 52 53 54 56 57 58 59 62 80 84 85 86 87 88
   89 90 92 93 94 174 1650 1666 1668 1730 1964 2045 2191 2201 2400)
  () 1 0)
 (50 equiv "( move 3 , ua ; move ua , 2 ) "
  (24 26 27 28 29 30 31 44 45 46 47 48 49 52 53 54 56 57 59 84 85 86 87 88 89
   91 92 105 291 353 559 726 1650 1666 1668 1730 1922 2045 2098 2191 2201
   2244 2304 2317 2354 2365 2400 2540 2557 2558 2822 2834 2919 3004 3012)
  () 2201 6)
 (51 uniq "( move ua , 0 ; move 4 , ul ) "
  (24 25 26 27 44 45 46 47 48 52 54 55 56 57 58 60 84 85 86 87 88 89 90 91 93
   293 379 587 1650 1666 1668 1730 1778 1913 2098 2191 2201 2400 2558 2674)
  (91 234 417 603 604 623 659 715 805 851 871 954 960 1021 1415) -1 6)
 (52 uniq "( move ua , 2 ; move ua , 4 ) "
  (24 25 26 27 28 29 30 31 44 45 46 47 48 49 50 51 53 54 55 56 57 58 59 60 84
   85 86 87 88 89 90 91 92 93 102 148 149 180 189 386 390 393 558 634 740
   1650 1666 1668 1715 1730 1917 1984 2045 2098 2189 2191 2201 2396 2400 2550
   2558 3018)
  (880 1163 1329) -1 6)
 (53 equiv "( move 4 , ua ; move ua , 2 ) "
  (24 26 27 28 29 30 31 44 45 46 47 48 49 50 52 54 56 57 59 84 85 86 87 88 89
   91 92 105 154 181 353 388 401 523 578 1650 1666 1668 1730 2045 2096 2098
   2191 2201 2400 2558)
  () 26 3)
 (54 uniq "( move ua , ul ; move 4 , 2 ) "
  (24 25 26 27 28 29 42 44 45 46 47 48 49 50 51 52 53 55 57 58 59 60 63 66 84
   85 86 87 88 89 90 91 92 93 188 367 387 389 534 589 692 703 716 1650 1666
   1668 1730 1738 1786 1818 1821 1930 1967 2045 2098 2115 2191 2201 2326 2364
   2393 2400 2558 2562 2611 2676 2691 2702 2714 3030)
  (138 188 763 964 1008 1032 1347) -1 15)
 (55 uniq "( move ua , 2 ; move 4 , ul ) "
  (24 25 27 30 44 45 46 47 48 51 52 54 56 57 58 60 84 85 86 87 88 89 90 91 93
   102 150 387 534 569 1650 1666 1668 1726 1730 1746 1811 1813 1827 1832 1978
   2098 2157 2191 2238 2338 2345 2387 2400 2461 2493 2558 2743 2751 2765 2865
   3014 3088)
  (150 182 745 800 814 886 1034) -1 18)
 (56 uniq "( move 4 , 2 ; move ua , ul ) "
  (26 27 28 29 30 31 39 44 45 46 48 49 50 51 52 53 55 57 59 60 74 83 84 85 86
   87 88 89 91 92 93 102 151 184 185 304 333 539 1650 1666 1668 1730 1797
   2045 2098 2122 2191 2201 2378 2400 2577 2819 2954)
  (184 185 539 1118 1519) -1 3)
 (57 uniq "( move ua , 4 ; move ua , 4 ) "
  (24 25 26 27 28 29 30 31 44 45 46 47 48 49 50 51 52 53 54 55 56 58 59 60 84
   85 86 87 88 89 90 91 92 93 103 108 199 395 400 564 637 707 1650 1666 1668
   1730 2045 2098 2191 2201 2265 2377 2400 2558 2606 2649 2799 2953)
  (527 792 890 907) -1 4)
 (58 uniq "( move ua , ul ; move 4 , 4 ) "
  (24 25 27 30 31 44 45 46 47 48 49 51 52 54 55 57 59 60 63 84 85 86 87 88 89
   90 91 92 93 341 533 534 540 565 589 694 1650 1666 1668 1730 1821 2098 2191
   2400 2484 2558 2702 2706 2952 3021)
  (194 341 540 693 798 1139 1140 1321 1353) -1 17)
 (59 uniq "( move 4 , ul ; move ua , 4 ) "
  (25 26 28 29 30 31 44 45 46 48 49 50 52 53 54 56 57 58 80 84 85 86 87 88 89
   90 92 93 198 201 203 396 399 401 485 511 590 1650 1666 1668 1730 1740 1819
   1965 2045 2191 2201 2247 2400 2516 2588 3020 3072)
  (143 201 799 895 1137) -1 10)
 (60 uniq "( move ua , 4 ; move 4 , ul ) "
  (24 25 27 29 31 44 45 46 47 48 51 52 54 55 56 57 58 84 85 86 87 88 89 90 91
   93 103 108 155 156 200 398 534 596 1650 1655 1666 1668 1685 1730 1733 1748
   1759 1978 2010 2098 2191 2238 2314 2337 2338 2400 2443 2558 2614 2616
   2936)
  (200 586 596 1186 1606) -1 3)
 (61 equiv "( pen ua ; move ua + 2 , 0 ) "
  (32 34 36 68 77 95 97 99 104 106 1663 1678 1700 1734 1814 2232) () 1700 5)
 (62 equiv "( pen 3 + ul ; move ua , 0 ) "
  (39 49 63 71 74 80 94 96 100 103 110 111) () 16 1)
 (63 equiv "( pen ua + ul ; move 4 , 0 ) "
  (15 37 42 54 58 62 66 71 90 93 94 100 103 110 111 556) () 15 1)
 (64 equiv "( pen 4 ; move ua , 0 - ua ) "
  (16 21 33 65 73 76 81 82 98 107 112 114 1903 1943 2213 2232 2306) () 16 5)
 (65 equiv "( pen 3 ; move ua , 0 - ul ) "
  (33 64 70 73 76 81 82 98 104 112 1709 1758 1903 1943 2213 2232 2306) ()
  1943 0)
 (66 equiv "( pen ua + ua ; move 4 , 2 ) "
  (17 23 27 37 42 47 54 63 84 91 103 105 111 313) () 17 0)
 (67 uniq "( pen ua ; move ua , 4 + 2 ) "
  (33 38 40 69 70 72 75 76 79 82 98 107 112 114 552 1684 1758 1858 1985 2212
   2213 2232)
  (488 867 1013) -1 0)
 (68 equiv "( pen ua ; move 3 + ul , 2 ) "
  (34 61 78 95 97 98 99 104 106 208 543 1663 1700 1734 1858 2103 2326) () 17
  0)
 (69 equiv "( pen ua ; move 4 , ua + 2 ) "
  (17 20 33 40 43 67 70 72 75 98 112 1758 1858 1985 2878) () 17 1)
 (70 equiv "( pen 3 ; move ua , ua + 3 ) "
  (18 65 67 69 72 73 76 79 81 82 112 344 1709 1758 1903 1943 2212 2232 2306)
  () 18 0)
 (71 equiv "( pen 2 + ul ; move ua , 3 ) "
  (62 63 74 80 94 100 103 110 111 2700) () 18 0)
 (72 equiv "( pen 2 ; move ua , ua * 2 ) "
  (19 34 35 38 43 67 69 70 73 75 76 79 98 112 1709 1758 1903 1985 2212 2213
   2306)
  () 14 0)
 (73 uniq "( pen 2 ; move ua , ua - 3 ) "
  (19 38 64 65 70 72 75 76 79 81 82 98 112 1709 1903 1943 2212 2213 2232
   2306)
  (532 1594) -1 0)
 (74 equiv "( pen 3 + 2 ; move ua , ul ) "
  (39 41 56 62 71 83 87 94 100 102 103 108 110 111 115 560 2830) () 22 5)
 (75 equiv "( pen ua ; move 4 , ua - 2 ) "
  (17 20 33 40 43 67 69 72 73 76 98 112 1858 1903 1985 2213 2232 2306 2691)
  () 33 0)
 (76 equiv "( pen 3 ; move ua , ul - 2 ) "
  (33 38 40 43 64 65 67 70 72 73 75 81 82 98 104 112 114 1658 1709 1758 1858
   1903 1943 1985 2035 2137 2213 2232 2306)
  () 1943 0)
 (77 equiv "( pen ua ; move 4 * 2 , ua ) " (20 36 61 78 95 220 572 1700 1734)
  () 1700 0)
 (78 equiv "( pen ua ; move 3 * 3 , ua ) " (68 77 95 99 107 161 219 664 1700)
  () 1700 3)
 (79 equiv "( pen ua ; move ua , 4 * 3 ) "
  (38 40 67 70 72 73 81 82 97 98 107 112 114 1943 1985 2212 2232 2958) ()
  2212 0)
 (80 equiv "( pen 4 - ul ; move ua , 3 ) "
  (39 49 59 62 71 83 92 94 100 110 111) () 18 0)
 (81 equiv "( pen 4 ; move ua , ul - 3 ) "
  (64 65 70 73 76 79 82 97 98 112 114 1663 1903 1943 2212 2213 2232 2306) ()
  2213 1)
 (82 equiv "( pen 3 ; move ua , 4 - ul ) "
  (40 64 65 67 70 73 76 79 81 98 104 112 1709 1758 1903 1943 1985 2212 2213
   2232 2306)
  () 18 1)
 (83 equiv "( pen 4 * 3 ; move ua , ul ) "
  (28 37 39 56 74 80 102 103 108 111 115) () 22 0)
 (84 equiv "( move ua , ua ; move ua , 2 ) "
  (24 25 26 27 28 29 30 31 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
   66 85 86 87 88 89 90 91 92 93 105 166 168 178 179 222 227 228 350 400 422
   431 460 669 674 679 735 1650 1666 1668 1730 1741 1806 1880 1942 1956 1982
   2045 2048 2098 2191 2201 2281 2291 2356 2357 2363 2400 2430 2441 2558 2585
   2632 2643 2928 3013 3032 3056 3070 3082)
  () 44 9)
 (85 uniq "( move ua , ul ; move ua , 2 ) "
  (24 25 26 27 28 29 30 31 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
   84 86 87 88 89 90 91 92 93 111 176 193 228 393 395 421 458 460 461 462 563
   609 629 655 674 679 707 725 735 744 1650 1666 1668 1669 1684 1691 1708
   1730 1747 1750 1754 1803 1818 1880 1886 1916 1942 1946 1956 2045 2076 2097
   2098 2105 2139 2148 2191 2201 2228 2269 2281 2363 2400 2558 2564 2593 2620
   2735 2757 2796 2808 2857 2881 2883 2885 2910 2915 2936 2979 3004 3044
   3081)
  (228 239 277 609 655 674 711 844 1176 1302 1377 1407) -1 30)
 (86 equiv "( move ua , ua ; move ua , 3 ) "
  (24 25 26 27 28 29 30 31 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
   84 85 87 88 89 90 91 92 93 168 187 229 232 330 351 426 433 620 622 688 723
   747 1650 1666 1668 1692 1730 2039 2045 2098 2191 2201 2400 2558 2862 3065)
  () 45 5)
 (87 uniq "( move ua , 2 ; move ua , ul ) "
  (24 25 26 27 28 29 30 31 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
   74 84 85 86 88 89 90 91 92 93 102 103 108 111 191 225 226 423 437 464 525
   610 622 691 736 784 1650 1666 1668 1730 1911 1972 1974 2045 2049 2098 2191
   2201 2320 2400 2558 2573 2768 2815 2823 2963 3085)
  (191 225 226 276 525 610 622 948 1023 1349) -1 10)
 (88 equiv "( move ua , ua ; move ua , 4 ) "
  (24 25 26 27 28 29 30 31 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
   84 85 86 87 89 90 91 92 93 196 233 330 386 400 477 538 549 558 564 602 637
   657 690 723 740 747 1650 1665 1666 1668 1730 1794 1804 1820 1991 2045 2051
   2098 2191 2201 2272 2349 2377 2400 2468 2550 2558 2579 2649 2802)
  () 46 9)
 (89 uniq "( move ua , ul ; move ua , 4 ) "
  (24 25 26 27 28 29 30 31 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
   84 85 86 87 88 90 91 92 93 111 180 193 198 233 236 237 361 363 393 395 432
   442 527 602 605 611 637 657 707 723 725 1650 1656 1666 1668 1669 1715 1730
   1820 1969 2045 2076 2098 2191 2201 2327 2400 2469 2476 2501 2531 2549 2558
   2606 2802 3018)
  (148 176 233 237 361 363 605 611 713 1598) -1 29)
 (90 equiv "( move ua , ul ; move 4 , ua ) "
  (24 25 27 44 45 46 47 48 49 51 52 54 55 57 58 59 60 63 84 85 86 87 88 89 91
   92 93 188 241 246 481 528 565 1650 1666 1668 1730 1818 2098 2191 2400 2558
   2691)
  () 1 0)
 (91 equiv "( move ua , ua ; move 4 , ul ) "
  (24 25 27 44 45 46 47 48 50 51 52 53 54 55 56 57 58 60 66 84 85 86 87 88 89
   90 93 200 234 238 242 356 425 481 587 604 659 1650 1666 1668 1686 1730
   1748 1783 1827 1856 1867 1913 2087 2090 2098 2191 2400 2558 2743 2896
   2973)
  () 51 4)
 (92 equiv "( move 4 , ul ; move ua , ua ) "
  (26 28 29 30 31 44 45 46 48 49 50 52 53 54 56 57 58 59 80 84 85 86 87 88 89
   90 93 100 110 201 243 443 791 1650 1666 1668 1730 2045 2191 2201 2400)
  () 1 0)
 (93 uniq "( move ua , ul ; move 4 , ul ) "
  (24 25 27 44 45 46 47 48 49 51 52 54 55 56 57 58 59 60 63 84 85 86 87 88 89
   90 91 92 111 183 238 241 246 341 387 425 427 481 530 534 569 589 605 614
   665 1650 1666 1668 1726 1730 1733 1759 1779 1818 1832 1845 1867 2009 2082
   2098 2157 2191 2314 2337 2400 2467 2490 2501 2558 2702 2872 2921)
  (238 240 241 246 589 614 894 1047 1064 1106 1244 1380 1627) -1 26)
 (94 equiv "( pen ul + ul ; move ua , 0 ) "
  (39 49 62 63 71 74 80 96 100 103 105 110 111 113 115) () 14 0)
 (95 equiv "( pen ua ; move ua + 2 , ua ) "
  (34 36 61 68 77 78 97 99 104 106 107 114 211 447 1663 1678 1734 1814 2232)
  () 1700 3)
 (96 equiv "( pen ul / ua ; move ua , 0 ) "
  (39 62 94 105 110 113 115 562 640) () 0 0)
 (97 uniq "( pen ua ; move ua + ul , 3 ) "
  (34 61 68 79 81 95 98 99 101 104 106 114 215 217 253 581 1663 1678 1706
   1734 1814 1834 1955 2099 2232 2417 2454)
  (215 217 253 581 818 1281) -1 16)
 (98 equiv "( pen ua ; move ua , ul - 2 ) "
  (22 33 38 40 43 64 65 67 68 69 72 73 75 76 79 81 82 97 106 107 112 114 1658
   1758 1803 1858 1903 1916 1943 1985 2035 2137 2213 2232 2306 2562 2885
   2969)
  () 2232 1)
 (99 uniq "( pen ua ; move ua + 3 , ul ) "
  (22 34 61 68 78 95 97 104 106 107 112 209 448 1663 1678 1700 1734 1814 2417
   2635 2677)
  (209 576 1175 1297 1476) -1 7)
 (100 equiv "( pen 3 + ul ; move ua , ua ) "
  (41 62 63 71 74 80 92 94 103 110 111 113) () 16 0)
 (101 uniq "( pen ua ; move ul - ua , 3 ) "
  (32 35 97 106 213 252 256 453 2039 2241 2257 2270 2307 2379 2433 2717 2754
   3074)
  (213 252 256 259 893 1313 1577) -1 4)
 (102 equiv "( pen ua * 2 ; move ua , ul ) "
  (22 37 39 41 52 55 56 74 83 87 103 108 111 115 377) () 22 3)
 (103 equiv "( pen ua + 4 ; move ua , ul ) "
  (22 57 60 62 63 66 71 74 83 87 94 100 102 108 110 111 115 447 548 1650) ()
  22 5)
 (104 uniq "( pen 3 ; move ua + ul , ul ) "
  (34 61 65 68 76 82 95 97 99 106 255 1663 1678 1734 1814 2645 3088)
  (255 357 618 1104 1173) -1 2)
 (105 equiv "( pen ul / ua ; move ua , 2 ) "
  (23 39 42 50 53 66 84 94 96 110 113 115 709 2013 2041 2096 2370 2884) () 0
  0)
 (106 equiv "( pen ua ; move ua - ul , 4 ) "
  (32 61 68 95 97 98 99 101 104 114 264 378 593 626 1663 1678 1697 1734 1738
   2075 2224 2352 2461 2490 2616 2641 2660 2754)
  () 2754 14)
 (107 uniq "( pen ua ; move ua , 3 / ua ) "
  (38 64 67 78 79 95 98 99 112 114 1709 1758 1858 1985 2232) () -1 0)
 (108 equiv "( pen ua * 4 ; move ua , ul ) "
  (22 37 57 60 74 83 87 102 103 111 115 668 1650) () 22 2)
 (109 equiv "( pen 2 ; move 4 , 2 ; pen 4 ) " (13 133) () 13 0)
 (110 equiv "( pen ul + ul ; move ua , ua ) "
  (62 63 71 74 80 92 94 96 100 103 105 111 113 115 260 265) () 14 0)
 (111 equiv "( pen ua + ul ; move ua , ul ) "
  (22 62 63 66 71 74 80 83 85 87 89 93 94 100 102 103 108 110 115 282 404 448
   624 689 697 1654 1811)
  () 22 2)
 (112 equiv "( pen ua ; move ua , ua - ul ) "
  (22 33 40 64 65 67 69 70 72 73 75 76 79 81 82 98 99 107 114 251 447 626 730
   1659 1709 1903 1943 1985 2020 2109 2213 2232 2306 2646 2728)
  () 2232 0)
 (113 equiv "( pen ul / ua ; move ua , ua ) "
  (39 94 96 100 105 110 115 286 709 733) () 0 0)
 (114 uniq "( pen ua ; move ua , ul / ua ) "
  (22 43 64 67 76 79 81 95 97 98 106 107 112 257 262 405 733 1709 1750 1858
   1867 1985 2036 2222 2228 2232 2364 2380 2583 2593 2620 2622 2826 2889)
  (257 262 405 910 984 1254 1392 1534) -1 2)
 (115 equiv "( pen ul / ua ; move ua , ul ) "
  (22 39 74 83 94 96 102 103 105 108 110 111 113 644 706 724 733) () 0 0)
 (116 equiv "( pen 4 ; pen ua ; move 4 , 2 ) " (17 123 125 128 313) () 17 3)
 (117 uniq "( move 4 + 4 , 0 ; move 3 , 4 ) " (192 198 1755 2251 2522) 
  (1081) -1 0)
 (118 equiv "( pen 0 ; pen 2 ; move ua , ua ) " (19 121 125 127 128 132) ()
  14 0)
 (119 equiv "( pen 4 ; move ua , ua ; pen 0 ) " (16 21 120 122 129 133) () 16
  7)
 (120 equiv "( pen 4 ; move ua , 0 ; pen ua ) " (16 21 119 122 129) () 16 6)
 (121 equiv "( pen 0 ; pen 4 ; move ua , ua ) " (21 118 125 127 128 132) ()
  16 4)
 (122 equiv "( pen 4 ; move ua , 0 ; pen ul ) " (16 119 120 129 133) () 16 4)
 (123 equiv "( pen ul ; pen ua ; move 4 , 2 ) " (17 116 125 127 128 132) ()
  17 3)
 (124 uniq "( move 2 , 4 ; move ua + 3 , 2 ) "
  (163 166 190 199 1017 1670 1708 1838 1857 1954 2124 2246 2390 2396 2470
   2654 2752)
  (1107) -1 2)
 (125 equiv "( pen 0 ; pen ua ; move ua , ul ) "
  (22 116 118 121 123 127 128 132) () 22 6)
 (126 uniq "( move ua , 4 * 4 ; move 4 , 4 ) " (139 196 200 1665 1984 2953)
  () -1 0)
 (127 equiv "( pen ul ; pen 2 ; move ua , ua ) " (19 118 121 123 125 128 132)
  () 14 3)
 (128 equiv "( pen 2 ; pen ua ; move ua , ul ) "
  (22 116 118 121 123 125 127 132) () 22 7)
 (129 equiv "( pen ua ; move ua , ul ; pen 3 ) " (22 119 120 122 133) () 22
  3)
 (130 uniq "( pen 4 ; move ua + 3 , 0 - 4 ) " (16 159) () -1 0)
 (131 equiv "( pen 3 + 3 ; move 3 + ul , 2 ) " (254) () 17 0)
 (132 equiv "( pen ul ; pen 4 ; move ua , ua ) "
  (21 118 121 123 125 127 128 346) () 16 6)
 (133 equiv "( pen ua ; move 4 , ua ; pen ul ) " (20 109 119 122 129) () 15
  0)
 (134 uniq "( move ua , 0 ; move ua , 0 - 2 ) "
  (44 136 163 164 165 167 168 170 171 172 176 181 193 237 239 1792 1905 2030
   3051)
  (170 968) -1 0)
 (135 equiv "( move 0 , ul ; move ua + 4 , 0 ) " (236 1708 1838 1969) () 1 0)
 (136 equiv "( move 3 , 0 ; move ua , ua + 2 ) "
  (134 164 165 167 168 172 181 185 201 226 235 1792 1905 2201 3051) () 2201
  4)
 (137 uniq "( move ua , 4 + 2 ; move ua , 2 ) "
  (140 148 151 178 179 180 184 191 225 228 233 276 1650 1741 1754 2931 2953
   2978)
  () -1 0)
 (138 equiv "( move ua , ul ; move 2 * 2 , 2 ) "
  (144 166 176 1708 1747 1969 2654 2752) () 54 0)
 (139 equiv "( move ua , ua - 4 ; move 4 , 0 ) "
  (126 174 179 200 238 247 813 1754) () 3 0)
 (140 equiv "( move ua , ua * 2 ; move 3 , 2 ) "
  (47 137 178 179 187 196 225 232 1665 1741) () 24 0)
 (141 equiv "( move ua , 2 ; move 4 + ul , 2 ) "
  (27 142 146 163 166 169 173 177 182 186 189 194 199 236 240 1670 1708 1719
   1747 1848 1857 1954 2246 2390 2396 2579 2654 2752)
  () 2098 1)
 (142 uniq "( move ua , 0 ; move 4 + ul , 4 ) "
  (141 146 163 169 173 175 177 182 186 189 194 199 236 240 1708 1719 1794
   1848 1857 1889 1954 1969 2024 2091 2396 2470 2579)
  (528 1169) -1 2)
 (143 equiv "( move 2 + 2 , ul ; move ua , 4 ) "
  (180 192 198 1755 1918 2251 2254 2468 2522 2855) () 59 0)
 (144 uniq "( move ua , ua ; move 3 * 3 , 2 ) " (47 138 166 168 177 186 1670)
  () -1 1)
 (145 uniq "( move ua , ua ; move 4 , 2 - 3 ) "
  (150 156 170 188 222 234 242 246 1692) (242 1471) -1 0)
 (146 uniq "( move ua , 3 ; move 4 + ul , 2 ) "
  (141 142 163 166 169 173 177 182 186 194 199 236 240 1670 1708 1719 1747
   1848 1857 1954 2091 2246 2390 2553 2579 2654 2752)
  () -1 0)
 (147 uniq "( move ua + 3 , 4 ; move ua , 3 ) "
  (198 2251 2254 2468 2522 2755 2978) () -1 0)
 (148 equiv "( move ua , 3 - 2 ; move ua , 4 ) "
  (52 137 149 151 179 180 191 196 225 228 233 247 1665 1668 1754 1819 1984
   2931 2953 2978)
  () 89 0)
 (149 uniq "( move ua , 2 - 3 ; move ua , 4 ) "
  (52 148 178 179 180 187 191 195 196 228 233 247 249 558 1665 1668 1754 1819
   1984 2254 2931 2953)
  () -1 4)
 (150 equiv "( move ua , 2 ; move 4 , 2 - ul ) "
  (27 55 145 155 165 171 188 222 226 234 239 241 242 246 2030 3051) () 55 7)
 (151 uniq "( move 4 , 3 + 2 ; move ua , ul ) "
  (56 137 148 184 191 203 225 276 1819 1981) () -1 0)
 (152 uniq "( move ua , 3 / ua ; move 4 , 2 ) " (228 1741 2805) () -1 0)
 (153 equiv "( move 4 , 4 ; move ua , 3 + ul ) "
  (155 165 167 168 185 201 222 226 229 235 239 245 277) () 31 1)
 (154 equiv "( move 4 , ua ; move ua , 4 / 2 ) " (53 168 181 193 245) () 26
  0)
 (155 uniq "( move ua , 4 ; move 4 , 4 + ul ) "
  (60 150 153 156 165 167 222 226 229 234 241 242 277 398 1857) () -1 0)
 (156 uniq "( move ua , 4 ; move 4 , ul / 3 ) " (60 145 155 170 246) () -1 0)
 (157 uniq "( pen ua ; move 0 - 4 , ua - 4 ) " (20) (826) -1 0)
 (158 equiv "( pen 3 + ul ; move ua + 4 , 4 ) " (210 214 253 1838) () 1678 4)
 (159 equiv "( pen 4 ; move ua + 4 , ua + 4 ) " (21 130 255 1678) () 1678 6)
 (160 uniq "( pen ua - ul ; move 4 , 4 + 3 ) " (261) (452 592 943) -1 0)
 (161 equiv "( pen ua ; move 3 * 3 , ua * 3 ) " (78 211) () 1700 0)
 (162 equiv "( pen 3 * 2 ; move 4 , ul + ul ) " (261) () 17 0)
 (163 uniq "( move ua , 0 ; move ua + ul , 2 ) "
  (44 124 134 141 142 146 166 169 170 173 175 177 182 186 189 194 199 236 240
   244 1670 1708 1719 1747 1794 1848 1857 1889 1954 1969 2024 2091 2124 2390
   2396 2470 2553 2654 2752)
  (1028 1059 1487) -1 0)
 (164 equiv "( move ua , 0 ; move ua , ua + 3 ) "
  (45 134 136 165 167 168 170 172 185 201 202 222 226 229 230 234 241 277 978
   1692 1792 1905 2030 3051)
  () 45 0)
 (165 equiv "( move ua , 0 ; move ua , 2 + ul ) "
  (44 134 136 150 153 155 164 167 168 170 171 176 185 222 226 229 234 235 239
   241 245 277 1889)
  () 45 0)
 (166 uniq "( move ua , ua ; move ua + 2 , 2 ) "
  (84 124 138 141 144 146 163 168 169 176 177 186 199 222 236 244 735 1670
   1708 1719 1747 1794 1848 1857 1889 1954 1969 2024 2091 2124 2390 2396 2470
   2579 2654 2752)
  () -1 0)
 (167 equiv "( move ua , 0 ; move ua , 3 + ul ) "
  (45 134 136 153 155 164 165 168 170 171 185 222 226 229 234 235 239 241 245
   277 2470)
  () 46 4)
 (168 equiv "( move ua , ua ; move ua , 3 + 2 ) "
  (84 86 134 136 144 153 154 164 165 166 167 172 176 181 193 222 226 229 234
   235 239 245 277 977 1670 1692 1792 3051)
  () 1666 0)
 (169 uniq "( move ua , 0 ; move ua + ul , 4 ) "
  (46 141 142 146 163 166 170 173 175 177 182 189 194 199 236 240 244 1670
   1708 1719 1747 1794 1838 1848 1889 1954 1969 2024 2091 2390 2396 2470 2553
   2579 2654 2752)
  (662) -1 0)
 (170 equiv "( move ua , 0 ; move ua , ul - 3 ) "
  (45 134 145 156 163 164 165 167 169 171 172 237 239 246 277 381 712 1692
   1792 1905 2030 3051)
  () 134 0)
 (171 uniq "( move ua , 3 ; move ua , 0 - ul ) "
  (134 150 165 167 170 172 202 222 226 229 237 239 242 250 277 1792 2030
   3051)
  () -1 0)
 (172 uniq "( move ua , 3 ; move ua , ua - 2 ) "
  (48 134 136 164 168 170 171 176 181 193 202 226 230 237 239 242 738 1792
   1905 2030 2752 3051)
  () -1 0)
 (173 equiv "( move ua , 0 ; move ul + ul , 4 ) "
  (141 142 146 163 169 175 177 182 189 194 199 236 240 983 1708 1719 1794
   1848 1889 1954 1969 2024 2091 2396 2470 2579)
  () 25 1)
 (174 equiv "( move 4 , ua - ul ; move ua , 0 ) "
  (49 139 179 184 203 233 243 1819) () 5 0)
 (175 uniq "( move 4 , 0 ; move ua + ul , ul ) "
  (142 163 169 173 182 190 199 236 240 244 245 248 919 985 1708 1719 1848
   1889 1954 2390 2470 2487 2553)
  (244 471 781 985 1065 1515) -1 4)
 (176 equiv "( move ua , ul ; move ua , 2 * 2 ) "
  (85 134 138 165 166 168 172 188 193 222 230 237 239 277 1692 1708 1747 1792
   1969 2654 2752 3051)
  () 89 4)
 (177 equiv "( move ua , ua ; move 4 + ul , 2 ) "
  (141 142 144 146 163 166 169 173 182 186 194 199 236 240 244 850 1670 1708
   1719 1747 1794 1848 1857 1954 2246 2390 2579 2654 2752)
  () 2558 1)
 (178 equiv "( move ua , ua * 3 ; move ua , 2 ) "
  (48 84 137 140 149 179 187 196 225 228 232 233 249 1665 1741 1754 1984 2254
   2931 2953)
  () 44 4)
 (179 uniq "( move ua , ua - 4 ; move ua , 2 ) "
  (84 137 139 140 148 149 174 178 187 191 196 200 225 228 232 233 247 1650
   1665 1741 1754 2755 2931)
  (1033 1160) -1 3)
 (180 equiv "( move ua , 2 + ul ; move ua , 4 ) "
  (52 89 137 143 148 149 196 198 203 225 233 238 276 1665 1984 2953) () 1668
  0)
 (181 uniq "( move 4 , ua ; move ua , ua - 2 ) "
  (53 134 136 154 168 172 185 201 242 245 388 1792 1905 2030 3051) () -1 0)
 (182 equiv "( move ua , 2 ; move 3 + ul , ul ) "
  (141 142 146 163 169 173 175 177 189 194 199 236 240 244 1670 1708 1719
   1848 1954 2396 2553)
  () 55 7)
 (183 uniq "( move 0 - ua , ul ; move 4 , ul ) "
  (93 223 238 274 278 425 887 1653 1962 2262 2291 2457) (425 694 887) -1 4)
 (184 equiv "( move 4 , ua + 2 ; move ua , ul ) "
  (56 137 151 174 191 200 203 225 233 238 276 1819 1981 2692) () 56 0)
 (185 equiv "( move 4 , 2 ; move ua , ua + ul ) "
  (56 136 153 164 165 167 181 201 222 226 229 230 234 235 241 245 277 2030
   3051)
  () 56 0)
 (186 equiv "( move ua , ua ; move 4 - ul , 2 ) "
  (141 142 144 146 163 166 177 189 248 1708 1747 1857 1954 2579) () 24 0)
 (187 equiv "( move ua , ua * 3 ; move ua , 3 ) "
  (86 140 149 178 179 196 225 232 233 249 426 860 1665 1741 1984 2931 2953)
  () 45 0)
 (188 equiv "( move ua , ul ; move 4 , 2 - ua ) "
  (54 90 145 150 176 237 239 241 242 246) () 54 8)
 (189 uniq "( move ua , 2 ; move ua - ul , 4 ) "
  (52 141 142 163 169 173 182 186 194 199 236 248 264 1670 1708 1719 1747
   1794 1848 1889 1954 1969 2024 2091 2396 2470)
  () -1 1)
 (190 uniq "( move ul , 3 ; move ua + 3 , ul ) "
  (124 175 244 1670 1838 1848 2091 2124 2390 2396 2470 2553 2752) (1309) -1
  0)
 (191 equiv "( move ua , 4 - 2 ; move ua , ul ) "
  (87 137 148 149 151 179 184 225 228 247 249 276 1754 1819 2931 2953) () 87
  0)
 (192 uniq "( move ua + ul , ul ; move 3 , 4 ) "
  (117 143 195 198 2341 2454 2468 2522 2755) () -1 0)
 (193 uniq "( move ua , ul ; move ua , 4 * 2 ) "
  (85 89 134 154 168 172 176 230 237 239 277 395 1692 1708 1747 1792 2076
   3051)
  () -1 0)
 (194 equiv "( move ua , ul ; move 3 + ul , 4 ) "
  (141 142 146 163 169 173 177 182 189 199 236 240 254 394 1708 1719 1747
   1794 1838 1848 1889 1954 1969 2024 2091 2396 2470 2579)
  () 58 1)
 (195 uniq "( move ua - ul , 3 ; move ua , 4 ) "
  (149 192 196 198 224 249 275 1668 1918 1984 2254 2341 2468 2522 2755 2855
   2953)
  () -1 0)
 (196 equiv "( move ua , ua * 3 ; move ua , 4 ) "
  (88 126 140 148 149 178 179 180 187 195 225 232 233 249 1665 1668 1741 1918
   1984 2855 2931 2953)
  () 46 1)
 (197 uniq "( move ua , 4 ; move ul - ua , 3 ) " (213 256) () -1 0)
 (198 uniq "( move ua + 4 , ul ; move ua , 4 ) "
  (59 89 117 143 147 180 192 195 233 1755 1918 2251 2254 2341 2468 2522 2755
   2855 2953 2978)
  () -1 0)
 (199 uniq "( move ua , 4 ; move ua + ul , 4 ) "
  (57 124 141 142 146 163 166 169 173 175 177 182 189 194 215 236 240 244
   1670 1708 1719 1747 1794 1838 1848 1857 1889 1954 1969 2024 2091 2124 2265
   2390 2396 2470 2553 2579 2654 2752)
  (962) -1 5)
 (200 equiv "( move ua , ua + 4 ; move 4 , ul ) "
  (60 91 126 139 179 184 225 233 238 247 276) () 60 0)
 (201 equiv "( move 4 , ul ; move ua , ua + 4 ) "
  (59 92 136 153 164 181 185 202 226 241 245 277) () 59 7)
 (202 uniq "( move ua , 3 ; move ua , ua / 4 ) "
  (164 171 172 201 226 230 1668 1792 1848 1920 2030 2091 2299 2460 2469 2531
   2576 2984 3051)
  () -1 2)
 (203 equiv "( move 4 , ul + ul ; move ua , 4 ) "
  (59 151 174 180 184 233 243 276 801 966 1819 1981 2953) () 30 0)
 (204 equiv "( move ua + 4 , ul ; v0 = ua ) " (206 440) () 1 0)
 (205 equiv "( v0 = ua ; move ua + 4 , ul ) " (535) () 1 0)
 (206 equiv "( move ua + 4 , ul ; v0 = ul ) " (204) () 1 0)
 (207 equiv "( pen ua - ul ; move 2 + 2 , ua ) " (210 219 254) () 15 0)
 (208 equiv "( pen ua ; move 3 + ul , ua + 2 ) " (68 255) () 17 0)
 (209 equiv "( pen ua + 2 ; move ua + 3 , ul ) "
  (22 99 210 214 215 251 253 1670 2396) () 99 3)
 (210 equiv "( pen ua + ul ; move ua + 2 , 4 ) "
  (158 207 209 214 215 236 253 254 1734 1794 1889 1969 2024 2091) () 1734 6)
 (211 equiv "( pen ua ; move ua + 2 , ua * 3 ) " (95 161 882) () 1700 0)
 (212 equiv "( pen ua * ua ; move 4 , 0 - ua ) " (15 20 250) () 15 4)
 (213 equiv "( pen ua + 2 ; move ul - ua , 3 ) " (101 197 256) () 101 1)
 (214 uniq "( pen 3 + ul ; move ua + 2 , ul ) " (158 209 210 253) (290) -1 0)
 (215 equiv "( pen ua + 4 ; move ua + ul , 3 ) "
  (97 199 209 210 217 253 254 259) () 97 1)
 (216 uniq "( pen 2 ; move ul - ua , ua + 4 ) " (19 252) (453 1073 1632) -1
  0)
 (217 equiv "( pen ua * 3 ; move ua + ul , 3 ) " (18 97 215 253 259 264 1848)
  () 97 2)
 (218 equiv "( pen ua + ul ; move 4 , ua / 2 ) " (17 20 261 266 282) () 15 0)
 (219 equiv "( pen ua - ul ; move 3 * 3 , ua ) " (78 207 254 664) () 1700 0)
 (220 equiv "( pen ul / ua ; move 4 * 2 , ua ) " (20 77 221 286) () 0 0)
 (221 equiv "( pen ul / ua ; move 4 + 3 , ul ) " (220 286) () 0 0)
 (222 equiv "( move ua , ua ; move ua , 2 + ul ) "
  (84 145 150 153 155 164 165 166 167 168 171 176 185 226 229 234 235 239 241
   242 245 277 281 431 881 1692 1794)
  () 45 0)
 (223 uniq "( move ul - ua , 0 ; move ua , ul ) "
  (183 224 227 274 275 278 670 712 953 978 1653 1918 1962 2262 2291 2585)
  (274 720 978 1224 1382) -1 1)
 (224 uniq "( move ua - ul , 0 ; move ua , ul ) "
  (195 223 247 249 274 275 276 278 958 1653 1695 1962 2242 2262 2468 2522
   2755)
  (275 688 955) -1 0)
 (225 equiv "( move ua , ua + 2 ; move ua , ul ) "
  (87 137 140 148 151 178 179 180 184 187 191 196 200 232 233 238 247 249 276
   622 736 948 1665 1741 2953)
  () 87 1)
 (226 equiv "( move ua , 2 ; move ua , ua + ul ) "
  (87 136 150 153 155 164 165 167 168 171 172 185 201 202 222 229 230 234 235
   239 241 242 245 251 277 281 282 1792 2030 3051)
  () 87 0)
 (227 uniq "( move ul - ua , ua ; move ua , 2 ) "
  (84 223 274 275 278 1040 1653 1741 1918 1962 2291 2585) (1040) -1 0)
 (228 equiv "( move ua , ul - ua ; move ua , 2 ) "
  (84 85 137 148 149 152 178 179 191 232 243 247 249 275 276 460 844 1665
   1741 1754 1819 2468 2755 2931)
  () 85 5)
 (229 equiv "( move ua , ua ; move ua , 3 + ul ) "
  (86 153 155 164 165 167 168 171 185 222 226 234 235 239 241 242 245 277 281
   881 1692)
  () 46 5)
 (230 uniq "( move ua , 2 ; move ua , ua * ua ) "
  (164 172 176 185 193 202 226 237 634 1692 1792 2030 3051) (634 1274) -1 7)
 (231 uniq "( move 4 , 4 ; pen 2 ; move 3 , 4 ) "
  (267 272 294 304 1672 1836 1899 1932 1950 1997 2079 2312 2355 2386 2556
   2649 2679 2710 2725 2759 2983 3084)
  () -1 0)
 (232 uniq "( move ua , ua * ua ; move ua , 3 ) "
  (86 140 178 179 187 196 225 228 233 433 747 1665 1741 1984) () -1 0)
 (233 equiv "( move ua , ua + ul ; move ua , 4 ) "
  (88 89 137 148 149 174 178 179 180 184 187 196 198 200 203 225 232 238 276
   637 723 1665 1741 1984 2591 2933 2953)
  () 89 0)
 (234 equiv "( move ua , ua ; move 4 , ua + ul ) "
  (91 145 150 155 164 165 167 168 185 222 226 229 235 241 242 245 277 281 481
   851 2579)
  () 51 0)
 (235 equiv "( move 3 , ua ; move ua , ul + ul ) "
  (136 153 165 167 168 185 222 226 229 234 244 245 248 277 2897) () 2201 4)
 (236 uniq "( move ua , ul ; move ua + ul , 4 ) "
  (89 135 141 142 146 163 166 169 173 175 177 182 189 194 199 210 240 244 253
   277 442 1669 1670 1708 1719 1747 1794 1838 1848 1889 1954 1969 2024 2091
   2390 2396 2470 2553 2579 2654 2752)
  (469) -1 11)
 (237 equiv "( move ua , ul ; move ua , 4 - ua ) "
  (89 134 170 171 172 176 188 193 230 239 246 266 277 1792 2030 3051) () 89
  9)
 (238 equiv "( move ua , ua + ul ; move 4 , ul ) "
  (91 93 139 180 183 184 200 225 233 276 425) () 93 5)
 (239 equiv "( move ua , ul ; move ua , 3 - ul ) "
  (134 150 153 165 167 168 170 171 172 176 188 193 222 226 229 237 241 242
   246 277 643 1792 2030 3051)
  () 85 0)
 (240 equiv "( move ua , ul ; move 3 + ul , ul ) "
  (141 142 146 163 169 173 175 177 182 194 199 236 244 254 277 623 642 1708
   1719 1747 1848 1954 1969 2553)
  () 93 3)
 (241 equiv "( move ua , ul ; move 4 , ua + ul ) "
  (90 93 150 155 164 165 167 185 188 201 222 226 229 234 239 242 246 261 277
   282 481 1047)
  () 93 3)
 (242 equiv "( move ua , ua ; move 4 , ua - ul ) "
  (91 145 150 155 171 172 181 188 222 226 229 234 239 241 246 1792 2030 2579
   3051)
  () 145 0)
 (243 equiv "( move 4 , ul - ua ; move ua , ua ) "
  (92 174 203 228 247 1754 1819 1981) () 1 0)
 (244 equiv "( move 4 , ua ; move ua + ul , ul ) "
  (163 166 169 175 177 182 190 199 235 236 240 245 248 471 781 1708 1719 1794
   1848 1954 2390 2553)
  () 175 3)
 (245 equiv "( move 4 , ua ; move ua , ul + ul ) "
  (153 154 165 167 168 175 181 185 201 222 226 229 234 235 244 248 277 441
   966 2553)
  () 26 1)
 (246 equiv "( move ua , ul ; move 4 , ul - ua ) "
  (90 93 145 150 156 170 188 237 239 241 242 277 879) () 93 2)
 (247 uniq "( move ua , ul - 4 ; move ua , ul ) "
  (139 148 149 179 191 200 224 225 228 243 249 275 276 974 1754 1819 1981
   2755 2931 3029)
  (974 1492) -1 1)
 (248 uniq "( move 4 , ua ; move ua - ul , ul ) "
  (175 186 189 235 244 245 480 1747 2390 2553) () -1 0)
 (249 uniq "( move ua , ul / 3 ; move ua , ul ) "
  (149 178 187 191 195 196 224 225 228 247 275 276 478 1754 1947 1981 1984
   2589 2889 2931 2953)
  (478 1290) -1 5)
 (250 equiv "( pen ua + ua ; move ua , 0 - ul ) " (22 171 212 251 281 282) ()
  2232 0)
 (251 equiv "( pen ua + 2 ; move ua , ua - ul ) "
  (19 22 112 209 226 250 257 281 282 990 2030 3051) () 2232 0)
 (252 equiv "( pen ua ; move ul - ua , ua + 3 ) " (101 216) () 101 0)
 (253 equiv "( pen ua + ul ; move ua + ul , 3 ) "
  (97 158 209 210 214 215 217 236 254 256 259 1038 1708) () 97 3)
 (254 equiv "( pen ua + ul ; move 3 + ul , ua ) "
  (131 194 207 210 215 219 240 253) () 15 1)
 (255 equiv "( pen 3 ; move ua + ul , ua + ul ) " (104 159 208) () 104 1)
 (256 equiv "( pen ua + ul ; move ul - ua , 3 ) " (101 197 213 253) () 101 3)
 (257 equiv "( pen ua + 2 ; move ua , ul / ua ) " (19 22 114 251 262 266) ()
  114 0)
 (258 equiv "( pen 4 * 3 ; move 4 , 2 ; pen 4 ) " () () 17 0)
 (259 equiv "( pen ua * ua ; move ua - ul , 3 ) " (215 217 253 264) () 101 0)
 (260 equiv "( pen ul + ul ; move ua , ua * 3 ) " (110 265 282) () 14 0)
 (261 equiv "( pen ua + ul ; move 4 , ul + ul ) "
  (160 162 218 241 277 281 282) () 17 2)
 (262 equiv "( pen ua + 3 ; move ua , ul / ua ) " (22 114 257 266) () 114 0)
 (263 equiv "( move ua + 4 , ua - ul ; pen ul ) " () () 5 0)
 (264 equiv "( pen ua * ua ; move ua - ul , 4 ) " (106 189 217 259) () 2754
  0)
 (265 equiv "( pen ul + ul ; move ua , ua * 4 ) " (110 260 282 1046) () 14 0)
 (266 uniq "( pen ua + ul ; move ua , 4 / ua ) " (218 237 257 262 282) 
  (1262) -1 0)
 (267 uniq "( move 3 , 0 ; pen 2 ; move 3 , ul ) "
  (231 272 288 304 305 308 328 1725 1727 1825 1836 1913 1932 1934 1950 1980
   2154 2202 2217 2230 2304 2355 2423 2426 2699 2703 2725 2759 2810 2833 2983
   3084)
  () -1 1)
 (268 equiv "( pen 4 ; move ua , 4 ; move 4 , 0 ) "
  (15 16 269 290 293 302 340 356 1657 1673 1685 1691 1720 1722 1729 1760 1778
   1779 1788 1789 1813 1925 1967 2009 2011 2082 2100 2181 2443 2488 2515 2542
   2611 2798 2835 2845 2848 2865 2991 3014)
  () 1678 0)
 (269 uniq "( pen 4 ; move ua , 2 ; move 4 , 2 ) "
  (13 17 27 268 293 322 326 340 350 356 1685 1691 1707 1720 1722 1729 1760
   1776 1778 1779 1788 1789 1813 1864 1925 1928 1967 1972 1993 2009 2011 2058
   2082 2095 2100 2115 2116 2182 2189 2231 2296 2329 2357 2428 2443 2488 2521
   2542 2566 2611 2643 2651 2670 2730 2777 2798 2825 2835 2845 2865 2991 3007
   3014 3053)
  () -1 0)
 (270 uniq "( pen 4 ; move 4 , 0 ; move 3 , ul ) "
  (271 292 293 295 302 320 333 336 342 348 364 1673 1675 1720 1760 1772 1776
   1778 1784 1798 1812 1865 2047 2086 2114 2150 2158 2166 2177 2180 2185 2231
   2322 2325 2372 2378 2506 2542 2567 2619 2651 2670 2722 2741 2777 2800 2829
   2870 2911 2943 3024 3033 3075 3091)
  () -1 0)
 (271 uniq "( pen 3 ; move 4 , 0 ; move 4 , ul ) "
  (270 292 293 303 320 333 336 348 356 364 1673 1675 1685 1717 1722 1728 1729
   1772 1778 1779 1784 1788 1812 1813 1831 1865 1876 1879 2009 2047 2082 2086
   2093 2106 2116 2158 2166 2180 2181 2182 2185 2231 2284 2313 2322 2325 2348
   2372 2378 2412 2443 2488 2506 2515 2542 2566 2567 2574 2575 2581 2611 2619
   2668 2729 2756 2774 2782 2798 2800 2829 2845 2853 2865 2870 2880 2987 3014
   3024 3033 3075 3091)
  () -1 1)
 (272 uniq "( move 4 , 2 ; pen 2 ; move 3 , ul ) "
  (231 267 304 335 358 1681 1727 1825 1836 1895 1899 1923 1932 1934 1945 1950
   1974 1977 1997 2023 2026 2134 2154 2202 2217 2268 2312 2320 2338 2355 2386
   2423 2556 2577 2725 2810 2902 2983 3011 3061 3084)
  () -1 1)
 (273 equiv "( pen 3 ; move ua , 3 ; v0 = 3 ) " (18 298 307 339) () 18 4)
 (274 equiv "( move ul - ua , ua ; move ua , ul ) "
  (183 223 224 227 275 278 513 518 720 953 1653 1918 1962 2262 2291 2585) ()
  223 1)
 (275 equiv "( move ua - ul , ua ; move ua , ul ) "
  (195 223 224 227 228 247 249 274 276 278 688 696 955 1653 1962 2291 2468
   2522 2585 2755)
  () 224 0)
 (276 equiv "( move ua , ul + ul ; move ua , ul ) "
  (137 151 180 184 191 200 203 224 225 228 233 238 247 249 275 1023 1754 1981
   2953)
  () 87 0)
 (277 equiv "( move ua , ul ; move ua , ul + ul ) "
  (153 155 164 165 167 168 170 171 176 185 193 201 222 226 229 234 235 236
   237 239 240 241 245 246 261 282 519 848 1708 1747)
  () 85 7)
 (278 uniq "( move ul - ua , ul ; move ua , ul ) "
  (183 223 224 227 274 275 513 720 788 1653 1676 1918 1962 2262 2291 2585)
  (513 1083 1327) -1 0)
 (279 equiv "( pen 2 ; ( move ua , 0 ; pen 0 ) ) " (14 317) () 14 0)
 (280 equiv "( pen 2 ; move ua , 0 ; pen 4 / 2 ) " (14 1788 2488) () 14 0)
 (281 equiv "( pen ua + ua ; move ua , ua + ul ) "
  (22 222 226 229 234 250 251 261 282) () 22 3)
 (282 equiv "( pen ua + ul ; move ua , ua + ul ) "
  (22 111 218 226 241 250 251 260 261 265 266 277 281 1036 1038) () 22 4)
 (283 uniq "( move ua , 0 ; pen ua ; move 2 , 0 ) "
  (285 288 294 328 329 335 1672 1725 1745 1748 1783 1786 1825 1855 1856 1913
   1934 1945 1971 1974 1991 2023 2032 2048 2079 2132 2134 2154 2202 2217 2230
   2281 2293 2304 2349 2350 2356 2423 2430 2441 2496 2497 2499 2649 2679 2706
   2710 2759 2776 2802 2806 2833 2902 3022 3078)
  (612 1286) -1 0)
 (284 equiv "( v0 = ua + 4 ; move v0 , ul ) " (536 827) () 1 0)
 (285 uniq "( move 2 , ua ; pen ua ; move 2 , 0 ) "
  (283 294 329 334 335 358 812 1725 1745 1783 1855 1923 1934 2023 2032 2048
   2079 2134 2220 2230 2268 2288 2344 2375 2423 2496 2497 2499 2679 2707 2710
   2806 2833 2858 3022)
  (1459) -1 0)
 (286 equiv "( pen ul / ua ; move ua + ul , ua ) " (113 220 221) () 0 0)
 (287 equiv "( move ua , 4 ; move ua , 2 ; pen 0 ) " (323 330 363 1650) ()
  1650 10)
 (288 uniq "( move ua , 0 ; pen 3 ; move 2 , ul ) "
  (267 283 305 328 329 335 1725 1745 1748 1759 1783 1804 1825 1856 1913 1917
   1934 1945 1950 1974 2023 2032 2097 2134 2154 2202 2217 2230 2253 2293 2320
   2324 2327 2338 2349 2350 2356 2375 2409 2423 2496 2499 2675 2710 2759 2776
   2806 2833)
  () -1 0)
 (289 equiv "( pen 4 ; pen ul / 4 ; move 4 , 4 ) " (347) () 0 0)
 (290 equiv "( pen 4 ; move 2 , ul ; move ua , 0 ) "
  (14 16 268 302 332 342 357 361 1656 1674 1691 1720 1731 1805 1809 1830 1865
   1876 1925 2001 2150 2329 2425 2431 2458 2651 2729 2856 2904 2906 2959)
  () 214 0)
 (291 uniq "( move 3 , 2 ; pen ua ; move ua , 2 ) "
  (50 294 297 334 358 362 1725 1727 1786 1825 1855 1899 1917 1932 1945 1971
   1974 1980 1991 1997 2023 2048 2097 2132 2217 2230 2268 2281 2304 2312 2317
   2320 2349 2350 2356 2409 2423 2426 2430 2441 2496 2497 2556 2560 2577 2604
   2649 2675 2699 2703 2707 2731 2776 2802 2806 2810 2833 2858 2860 2902 2919
   2983 3022 3061)
  () -1 0)
 (292 uniq "( pen 3 ; move 3 , 0 ; move ua , ul ) "
  (270 271 293 303 320 331 332 333 336 338 348 357 1674 1675 1683 1717 1728
   1731 1735 1767 1778 1788 1805 1809 1812 1828 1831 1860 1865 1879 1959 1972
   1976 2001 2044 2047 2050 2082 2086 2093 2106 2150 2158 2180 2181 2182 2185
   2209 2284 2322 2325 2348 2372 2378 2391 2425 2431 2443 2515 2519 2542 2566
   2567 2574 2575 2581 2598 2602 2624 2643 2668 2722 2729 2741 2756 2774 2782
   2787 2793 2800 2829 2845 2853 2856 2870 2880 2906 2922 2943 2959 2987 3001
   3014 3024 3075 3091)
  () -1 2)
 (293 uniq "( pen 3 ; move ua , 0 ; move 4 , ul ) "
  (51 268 269 270 271 292 296 303 320 336 348 356 385 1657 1673 1675 1685
   1717 1720 1722 1728 1729 1760 1772 1776 1778 1779 1788 1789 1798 1800 1812
   1813 1816 1831 1865 1876 1879 1928 1967 1972 1996 2009 2038 2047 2058 2082
   2086 2093 2100 2106 2114 2158 2180 2181 2182 2185 2231 2284 2296 2313 2322
   2325 2348 2372 2378 2412 2443 2488 2506 2515 2542 2566 2567 2574 2575 2581
   2609 2611 2643 2668 2670 2729 2730 2756 2774 2777 2782 2793 2798 2800 2835
   2845 2848 2853 2865 2880 2987 3007 3014 3024 3033 3071 3075 3091)
  () -1 0)
 (294 uniq "( move 4 , 4 ; pen ua ; move ua , 0 ) "
  (231 283 285 291 304 334 335 358 362 1672 1681 1725 1745 1748 1836 1899
   1923 1932 1964 1974 1980 1991 1997 2048 2079 2134 2220 2281 2304 2317 2349
   2355 2356 2430 2441 2560 2577 2649 2675 2699 2703 2707 2710 2776 2802 2810
   2858 2919 3061)
  () -1 1)
 (295 uniq "( pen ua ; move 4 , ua ; move 3 , 2 ) "
  (17 20 270 319 322 333 336 345 350 351 356 364 385 1264 1673 1705 1707 1772
   1776 1784 1789 1798 1805 1830 1864 1928 1959 1967 2011 2044 2050 2093 2095
   2100 2111 2116 2155 2166 2177 2185 2231 2245 2301 2303 2329 2347 2357 2391
   2428 2431 2488 2506 2521 2598 2609 2619 2623 2624 2638 2643 2651 2670 2690
   2715 2722 2741 2787 2800 2825 2829 2870 2904 2911 2927 2943 2991 3007 3027
   3033 3053 3075 3091)
  () -1 0)
 (296 uniq "( pen 3 ; move ua , ua ; move 2 , 4 ) "
  (293 316 322 336 350 351 356 361 385 1656 1657 1664 1675 1705 1717 1728
   1767 1784 1788 1800 1816 1864 1879 1928 1959 1996 2001 2011 2058 2082 2100
   2155 2181 2189 2245 2284 2296 2357 2443 2567 2574 2575 2581 2609 2611 2624
   2643 2690 2730 2756 2771 2835 2845 2848 2880 2987 3003 3007 3014 3071)
  () -1 2)
 (297 uniq "( move 3 , ul ; pen 3 ; move ua , 2 ) "
  (291 305 308 362 1786 1804 1917 1964 1971 1980 1997 2025 2048 2097 2253
   2281 2304 2312 2317 2320 2327 2350 2356 2375 2386 2409 2430 2441 2497 2604
   2675 2699 2707 2731 2802 2810 2833 2858 2860 2919 3022)
  () -1 0)
 (298 equiv "( pen 4 ; move ua , 0 ; v0 = ua ) " (16 21 273 301 307 339 515)
  () 16 6)
 (299 uniq "( move 2 , 3 ; pen 4 ; move ua , ua ) "
  (21 304 314 334 1991 2375 2707 2736 2858 2895) () -1 0)
 (300 equiv "( v0 = ul ; pen ua ; move 4 , 0 ) " (15) () 15 2)
 (301 equiv "( pen ua ; move 4 , 0 ; v0 = ul ) "
  (15 298 306 2185 2800 3075 3091) () 15 8)
 (302 uniq "( pen 4 ; move 4 , ul ; move ul , 0 ) "
  (268 270 290 319 340 342 364 1691 1720 1760 1830 1925 2011 2150 2166 2185
   2322 2651 3033)
  (342 970 1113) -1 0)
 (303 uniq "( pen 3 ; move 3 , 3 ; move ua , ul ) "
  (271 292 293 320 325 331 332 333 336 338 348 357 1674 1683 1717 1728 1731
   1735 1767 1805 1809 1816 1828 1831 1860 1865 1879 1959 1972 1976 1979 2001
   2044 2047 2050 2082 2086 2093 2106 2150 2158 2177 2180 2181 2182 2209 2284
   2322 2325 2348 2372 2378 2412 2425 2428 2431 2443 2515 2519 2566 2574 2575
   2581 2598 2602 2623 2624 2643 2651 2668 2722 2729 2741 2756 2774 2782 2793
   2798 2845 2856 2870 2880 2897 2906 2922 2943 2959 2987 3014 3024 3091)
  () -1 0)
 (304 uniq "( move 4 , 3 ; pen 2 ; move ua , ul ) "
  (56 231 267 272 294 299 334 335 358 1681 1836 1856 1895 1899 1923 1950 1964
   1974 1977 1980 1991 2026 2134 2230 2320 2324 2355 2375 2426 2556 2560 2577
   2699 2707 2776 2810 2895 3084)
  () -1 1)
 (305 uniq "( move 3 , ua ; pen 3 ; move 4 , ul ) "
  (267 288 297 308 328 358 1681 1725 1727 1748 1759 1783 1804 1825 1855 1856
   1895 1913 1923 1932 1977 1980 2026 2134 2220 2230 2253 2268 2320 2324 2338
   2344 2375 2423 2426 2604 2699 2703 2731 2736 2810 2833 2860 2895)
  () -1 1)
 (306 equiv "( pen ua ; move 4 , 2 ; v0 = ul ) " (15 17 301 333 2231) () 17
  5)
 (307 equiv "( pen 4 ; move ua , ua ; v0 = 4 ) " (16 21 273 298 339) () 16 1)
 (308 uniq "( move 3 , ul ; pen 4 ; move 4 , ul ) "
  (267 297 305 328 329 335 1681 1725 1727 1748 1759 1783 1786 1825 1856 1895
   1913 1923 1932 1977 1980 2025 2026 2032 2202 2220 2230 2268 2293 2317 2324
   2338 2344 2423 2426 2497 2604 2699 2703 2706 2707 2731 2736 2810 2833 2860
   2895)
  () -1 2)
 (309 uniq "( move 4 * 2 , 3 ; move 3 * 2 , 3 ) " () () -1 0)
 (310 equiv "( pen 2 ; move ua , ua * 3 ; pen 0 ) " (14 19) () 14 0)
 (311 equiv "( pen 3 ; move ua , 3 ; pen ua - 2 ) " (18 2643) () 18 0)
 (312 equiv "( pen 4 - 2 ; move ua , ua ; pen 2 ) " (19 21) () 14 0)
 (313 equiv "( pen ua + 4 ; pen ua ; move 4 , 2 ) "
  (17 66 116 1748 1786 1855 2441) () 17 0)
 (314 equiv "( pen 2 - 3 ; pen 4 ; move ua , ua ) " (19 21 299 346) () 16 0)
 (315 equiv "( pen 3 ; move ua , ua / 4 ; pen 2 ) " (1709) () 1709 2)
 (316 equiv "( pen 2 ; move ua , ua ; move 0 , ua ) "
  (14 19 296 322 339 340 350 351 356 385 1705 1728 1864 2011 2095 2100 2114
   2155 2357 2609 2643 2777 2798)
  () 14 0)
 (317 equiv "( pen 4 ; ( move ua , ua ; pen 4 ) ) " (21 279) () 16 0)
 (318 uniq "( move ua , 0 - 2 ; move 4 , 2 + 2 ) " (27 367) (394) -1 0)
 (319 equiv "( pen ua ; move 3 , ua ; move ul , 0 ) "
  (295 302 320 322 326 327 331 338 351 356 364 385 1683 1705 1731 1735 1772
   1784 1805 1812 1828 1860 1864 1959 1976 2011 2038 2044 2050 2086 2093 2100
   2106 2116 2155 2158 2180 2182 2185 2209 2245 2284 2301 2347 2357 2372 2391
   2425 2428 2431 2515 2519 2521 2575 2598 2602 2623 2624 2668 2690 2722 2741
   2749 2782 2787 2825 2853 2922 2927 2943 2987 3027 3053)
  () 15 0)
 (320 uniq "( pen ua ; move 3 , 0 ; move ua , ul ) "
  (22 270 271 292 293 303 319 325 327 331 333 336 337 338 348 351 356 364 385
   616 981 1656 1657 1658 1673 1674 1675 1683 1685 1722 1729 1731 1735 1772
   1776 1778 1779 1784 1798 1800 1805 1809 1812 1813 1816 1828 1830 1831 1860
   1865 1876 1928 1959 1972 1976 1979 1996 2038 2044 2047 2050 2058 2086 2093
   2106 2150 2158 2166 2177 2180 2182 2185 2189 2209 2231 2245 2301 2313 2322
   2325 2347 2357 2372 2378 2391 2412 2425 2428 2431 2448 2458 2488 2506 2515
   2519 2521 2542 2566 2567 2574 2581 2598 2602 2619 2623 2640 2668 2670 2690
   2722 2729 2741 2749 2774 2782 2787 2793 2800 2825 2829 2853 2856 2870 2904
   2906 2911 2922 2927 2943 2959 2987 3024 3027 3033 3053 3075 3091)
  (616) -1 2)
 (321 uniq "( move 2 - 4 , 0 ; move ua + 3 , 2 ) " (26 324 2016 2785) () -1
  0)
 (322 equiv "( pen ua ; move ua , ua ; move 3 , 2 ) "
  (47 269 295 296 316 319 325 326 350 351 356 385 1084 1656 1657 1664 1675
   1685 1691 1705 1707 1722 1728 1729 1772 1776 1778 1779 1784 1788 1789 1798
   1800 1805 1812 1813 1816 1830 1864 1925 1928 1959 1967 1972 1996 2011 2038
   2044 2050 2058 2093 2095 2100 2111 2114 2116 2155 2177 2189 2222 2245 2296
   2301 2329 2347 2357 2391 2428 2431 2488 2521 2542 2598 2609 2611 2623 2624
   2643 2670 2677 2690 2715 2722 2741 2777 2787 2793 2825 2829 2835 2904 2911
   2927 2943 2991 3007 3027 3053)
  () 2670 0)
 (323 equiv "( move ua , 0 ; move ua , 4 ; pen ul ) " (46 287 330 341 363) ()
  46 6)
 (324 uniq "( move 4 * 2 , 0 ; move ua + 3 , 2 ) "
  (26 321 352 353 399 2016 2203 2785) () -1 0)
 (325 uniq "( pen ua ; move ua , 3 ; move ua , 3 ) "
  (18 303 320 322 326 333 337 348 350 351 356 361 385 1656 1657 1664 1674
   1675 1683 1685 1691 1705 1707 1722 1729 1731 1735 1776 1778 1779 1789 1798
   1800 1805 1809 1812 1813 1816 1828 1830 1860 1864 1865 1879 1928 1967 1972
   1976 1979 1996 2038 2044 2058 2100 2111 2155 2177 2189 2357 2412 2425 2428
   2431 2488 2602 2623 2640 2643 2651 2670 2677 2793 2798 2829 2835 2904 2991
   3091)
  () -1 0)
 (326 uniq "( pen ua ; move ua , 2 ; move ul , 3 ) "
  (22 269 319 322 325 327 333 338 340 351 356 364 385 1656 1657 1664 1674
   1675 1683 1685 1705 1707 1720 1722 1729 1760 1776 1778 1779 1789 1798 1800
   1812 1813 1816 1864 1928 1967 1972 1993 1996 2011 2038 2058 2100 2111 2155
   2182 2185 2189 2231 2296 2301 2347 2357 2391 2488 2623 2670 2715 2730 2777
   2793 2825 2835 2865 2911 2943 2991 3007 3014)
  () -1 0)
 (327 equiv "( pen ua ; move 3 , 2 ; move ul , ua ) "
  (319 320 326 331 333 338 340 342 364 385 1674 1683 1731 1735 1760 1776 1812
   1813 1828 1860 1959 1972 1976 1993 2038 2044 2050 2058 2086 2093 2106 2158
   2180 2182 2185 2189 2209 2231 2245 2301 2347 2372 2391 2425 2428 2431 2515
   2519 2521 2566 2598 2602 2623 2668 2715 2722 2741 2749 2782 2787 2825 2835
   2853 2911 2922 2927 2943 3027 3053)
  () 17 0)
 (328 uniq "( move ul , 0 ; pen ua ; move 4 , ul ) "
  (267 283 288 305 308 329 334 335 358 362 625 1681 1725 1727 1745 1748 1759
   1783 1786 1825 1836 1855 1856 1895 1913 1923 1932 1934 1945 1974 1977 1980
   2023 2026 2032 2134 2154 2202 2217 2220 2230 2268 2304 2324 2338 2344 2349
   2355 2356 2423 2426 2560 2577 2604 2699 2703 2706 2707 2710 2731 2736 2759
   2776 2806 2810 2833 2860 2895 3061)
  (625 695 1082 1427) -1 1)
 (329 uniq "( move 2 , ul ; pen ua ; move 2 , ul ) "
  (283 285 288 308 328 334 335 358 362 997 1681 1725 1727 1745 1748 1759 1783
   1786 1825 1836 1856 1913 1923 1932 1934 1945 1971 1974 1980 1997 2023 2032
   2079 2134 2154 2202 2217 2220 2230 2268 2281 2293 2317 2344 2355 2375 2423
   2426 2496 2497 2499 2577 2604 2699 2703 2706 2707 2710 2731 2736 2776 2802
   2806 2810 2833 2858 2860 2895 3022)
  () -1 2)
 (330 equiv "( move ua , ua ; move ua , 4 ; pen 3 ) " (86 88 287 323 341 363)
  () 46 2)
 (331 uniq "( pen ua ; move 3 , ul ; move 2 , ul ) "
  (292 303 319 320 327 333 338 348 356 364 385 1656 1657 1664 1673 1674 1675
   1683 1685 1705 1707 1720 1722 1728 1729 1731 1735 1772 1776 1778 1779 1784
   1798 1800 1805 1809 1812 1813 1816 1828 1830 1831 1860 1864 1865 1876 1879
   1928 1959 1967 1972 1976 1979 1996 2009 2038 2044 2047 2050 2058 2082 2086
   2093 2106 2111 2114 2150 2158 2166 2177 2180 2181 2182 2185 2209 2231 2245
   2301 2313 2329 2347 2372 2391 2412 2425 2428 2431 2448 2458 2506 2515 2519
   2521 2566 2567 2574 2581 2598 2602 2619 2623 2668 2690 2693 2722 2730 2741
   2749 2756 2774 2782 2787 2793 2800 2825 2837 2848 2853 2856 2880 2904 2906
   2911 2922 2927 2943 2987 3024 3027 3033 3053 3071 3075 3091)
  () -1 1)
 (332 uniq "( pen 3 ; move ul , ul ; move ua , 2 ) "
  (290 292 303 336 337 348 350 357 361 859 1656 1691 1707 1731 1767 1788 1830
   1831 1925 1967 2001 2044 2047 2082 2095 2329 2348 2357 2378 2425 2431 2611
   2624 2643 2651 2729 2756 2829 2856 2904 2906 3007)
  () -1 0)
 (333 uniq "( pen ua ; move 4 , 2 ; move ua , ul ) "
  (17 20 22 56 270 271 292 295 303 306 320 325 326 327 331 336 337 338 348
   351 356 364 385 940 1656 1657 1673 1674 1675 1683 1685 1722 1729 1731 1735
   1760 1772 1776 1778 1779 1784 1798 1800 1805 1809 1812 1813 1816 1828 1830
   1831 1860 1865 1876 1959 1972 1976 1979 1993 1996 2038 2044 2050 2058 2086
   2093 2106 2116 2158 2166 2177 2180 2182 2185 2189 2209 2231 2313 2322 2357
   2372 2378 2412 2425 2431 2448 2458 2506 2515 2519 2566 2598 2602 2619 2640
   2651 2668 2690 2715 2722 2729 2730 2741 2777 2782 2793 2800 2825 2829 2835
   2856 2865 2870 2904 2911 2922 2943 2959 3014 3033 3075 3091)
  () -1 3)
 (334 uniq "( move 2 , 4 ; pen ua ; move ua , ul ) "
  (22 285 291 294 299 304 328 329 335 358 362 1672 1681 1725 1727 1745 1748
   1783 1825 1836 1856 1913 1923 1932 1934 1945 1974 1980 1991 2023 2032 2048
   2134 2154 2202 2217 2220 2230 2268 2281 2304 2317 2320 2344 2349 2355 2356
   2375 2423 2426 2430 2441 2577 2649 2675 2699 2703 2707 2736 2776 2802 2810
   2833 2858 2876 2895 2919)
  () -1 0)
 (335 uniq "( move 4 , ul ; pen ua ; move 2 , ul ) "
  (272 283 285 288 294 304 308 328 329 334 358 362 598 1681 1725 1727 1745
   1748 1759 1783 1786 1825 1836 1856 1895 1899 1913 1923 1932 1934 1945 1964
   1971 1974 1977 1980 1997 2023 2025 2026 2032 2079 2134 2154 2202 2217 2220
   2230 2268 2281 2288 2293 2317 2344 2355 2386 2423 2426 2496 2497 2499 2560
   2577 2604 2699 2703 2706 2707 2710 2731 2776 2802 2806 2810 2833 2858 2860
   3011 3022 3061)
  (598 1014) -1 0)
 (336 uniq "( pen 3 ; move 4 , ua ; move ua , ul ) "
  (22 270 271 292 293 295 296 303 320 332 333 348 350 351 356 357 364 385
   1673 1674 1683 1717 1728 1731 1735 1767 1772 1784 1805 1809 1828 1830 1831
   1860 1865 1879 1959 1972 1976 2001 2047 2050 2082 2093 2116 2166 2181 2185
   2231 2284 2322 2325 2348 2357 2378 2443 2506 2566 2574 2575 2581 2598 2602
   2609 2619 2624 2643 2651 2690 2729 2756 2793 2800 2829 2845 2856 2870 2880
   2959 2987 3014 3033 3075 3091)
  (1360) -1 0)
 (337 uniq "( pen ua ; move ul , 4 ; move ua , 4 ) "
  (320 325 332 333 338 348 351 357 361 1656 1657 1664 1673 1674 1683 1685
   1731 1735 1767 1805 1809 1828 1830 1860 1865 1972 1976 1993 2001 2044 2155
   2189 2209 2347 2357 2425 2431 2515 2602 2619 2640 2715 2722 2749 2793 2829
   2835 2853 2904 2906 2959 2991 3091)
  () -1 0)
 (338 uniq "( pen ua ; move 3 , 4 ; move ul , ul ) "
  (292 303 319 320 326 327 331 333 337 340 348 356 364 385 1657 1673 1674
   1675 1683 1685 1720 1722 1729 1731 1735 1760 1772 1776 1778 1779 1784 1798
   1800 1805 1809 1812 1813 1816 1828 1831 1860 1865 1876 1959 1972 1976 1979
   1996 2038 2044 2047 2050 2058 2086 2093 2106 2150 2158 2166 2177 2180 2181
   2182 2185 2209 2231 2245 2301 2313 2322 2347 2372 2391 2412 2425 2428 2431
   2443 2448 2458 2506 2515 2519 2521 2566 2574 2581 2598 2602 2619 2621 2623
   2668 2690 2722 2741 2749 2774 2782 2787 2793 2800 2825 2848 2853 2911 2922
   2927 2943 2959 2987 2991 3008 3024 3027 3033 3053 3075 3091)
  () -1 7)
 (339 equiv "( pen 4 ; move ua , ua ; v0 = ua ) " (16 21 273 298 307 316 600)
  () 16 0)
 (340 equiv "( pen 4 ; move ua , 4 ; move ul , ua ) "
  (21 268 269 302 316 326 327 338 342 385 1657 1685 1691 1720 1760 1812 1925
   2011 2038 2181 2347 2443 2542 2848 2991)
  () 1663 0)
 (341 equiv "( move ua , ul ; move 4 , 4 ; pen ul ) " (58 93 323 330 363) ()
  58 9)
 (342 equiv "( pen 4 ; move 4 , ul ; move ul , ua ) "
  (270 290 302 327 340 357 364 1691 1720 1760 1830 1925 2011 2150 2166 2185
   2322 2651 3033)
  () 302 0)
 (343 equiv "( pen ul ; pen 3 ; move ua + 2 , ua ) " () () 1814 0)
 (344 equiv "( pen ul ; pen 3 ; move ua , ua + 3 ) " (18 70) () 18 0)
 (345 equiv "( pen ua ; move 4 , ua ; pen 3 / ua ) " (20 295) () 15 0)
 (346 equiv "( pen ul / 4 ; pen 4 ; move ua , ua ) " (21 132 314) () 16 0)
 (347 equiv "( pen ul ; pen ul / 4 ; move 4 , ua ) " (289) () 0 0)
 (348 uniq "( pen ua ; move ul , 0 ; move ua , ul ) "
  (22 270 271 292 293 303 320 325 331 332 333 336 337 338 351 356 357 364 385
   670 981 1656 1657 1673 1674 1675 1683 1685 1722 1729 1731 1735 1767 1772
   1776 1778 1779 1784 1798 1800 1805 1809 1812 1813 1816 1828 1830 1831 1860
   1865 1876 1928 1959 1972 1976 1979 1993 1996 2001 2038 2044 2050 2058 2086
   2093 2106 2158 2166 2177 2180 2182 2185 2189 2209 2231 2242 2313 2322 2325
   2348 2357 2372 2378 2391 2412 2425 2431 2448 2458 2488 2506 2515 2519 2542
   2567 2598 2602 2619 2640 2668 2670 2690 2722 2729 2741 2782 2787 2793 2800
   2829 2853 2856 2870 2904 2911 2922 2943 2959 3024 3033 3075 3091)
  (1646) -1 0)
 (349 equiv "( move ua + 3 , 2 - 3 ; move ul , 0 ) " (392) () 5 0)
 (350 equiv "( pen ul ; move ua , ua ; move ua , 2 ) "
  (84 269 295 296 316 322 325 332 336 351 356 361 385 1656 1691 1705 1707
   1728 1767 1788 1789 1805 1830 1864 1925 1928 1967 1972 2011 2044 2095 2100
   2116 2155 2189 2245 2301 2357 2431 2488 2521 2609 2611 2624 2643 2651 2670
   2793 2829 2870 2904 2991 3007 3027)
  () 44 0)
 (351 uniq "( pen ua ; move ua , ua ; move ua , 3 ) "
  (86 295 296 316 319 320 322 325 326 333 336 337 348 350 356 361 385 1010
   1656 1657 1664 1674 1675 1683 1685 1691 1705 1707 1722 1728 1729 1731 1735
   1767 1772 1776 1778 1779 1784 1789 1798 1800 1805 1809 1812 1813 1816 1828
   1830 1860 1864 1865 1928 1959 1967 1972 1976 1996 2011 2038 2039 2044 2050
   2058 2093 2100 2111 2116 2155 2189 2245 2301 2357 2425 2431 2488 2521 2598
   2602 2609 2640 2643 2670 2690 2793 2829 2835 2870 2904 2991 3027 3091)
  (545 1605) -1 1)
 (352 uniq "( move 4 * 2 , 0 ; move ua + ul , 2 ) " (26 324 399 2016 2203) ()
  -1 0)
 (353 uniq "( move 4 + 3 , ua ; move ua + 3 , 2 ) " (50 53 324) () -1 0)
 (354 uniq "( move 4 + 4 , 0 - ul ; move ua , 2 ) " (26 1755) () -1 0)
 (355 uniq "( move 3 + 3 , 0 ; move 4 , ua * ua ) " () () -1 0)
 (356 equiv "( pen ua ; move ua , ua ; move 4 , ul ) "
  (22 91 268 269 271 293 295 296 316 319 320 322 325 326 331 333 336 338 348
   350 351 364 385 1656 1657 1664 1673 1674 1675 1683 1685 1705 1707 1717
   1720 1722 1728 1729 1731 1735 1760 1772 1776 1778 1779 1784 1788 1789 1798
   1800 1805 1809 1812 1813 1816 1827 1828 1860 1864 1865 1867 1876 1879 1928
   1959 1967 1972 1976 1979 1993 1996 2009 2011 2038 2050 2058 2082 2086 2087
   2093 2100 2106 2111 2114 2116 2155 2158 2166 2177 2180 2181 2182 2185 2189
   2209 2231 2245 2284 2301 2313 2325 2329 2348 2357 2372 2412 2428 2443 2448
   2458 2488 2506 2515 2519 2521 2542 2566 2567 2575 2598 2602 2609 2611 2619
   2643 2668 2670 2677 2690 2722 2730 2741 2749 2756 2774 2777 2782 2793 2798
   2800 2835 2845 2848 2853 2865 2870 2880 2911 2918 2922 2943 2973 2987 2991
   3014 3024 3027 3033 3053 3071 3075 3091)
  () 1778 0)
 (357 equiv "( pen 3 ; move ul , ul ; move ua , ua ) "
  (290 292 303 332 336 337 342 348 361 1303 1656 1691 1731 1767 1830 1831
   2001 2047 2082 2348 2378 2425 2431 2611 2643 2729 2756 2856 2904 2906)
  () 104 0)
 (358 uniq "( move 4 , ua ; pen ua ; move ua , ul ) "
  (22 272 285 291 294 304 305 328 329 334 335 362 682 701 1050 1681 1725 1727
   1745 1748 1783 1804 1825 1836 1855 1856 1895 1899 1913 1923 1932 1934 1945
   1964 1974 1977 1980 1991 1997 2003 2023 2026 2032 2048 2079 2134 2154 2202
   2217 2220 2230 2268 2281 2288 2304 2317 2320 2344 2349 2355 2356 2375 2423
   2426 2430 2441 2560 2577 2649 2679 2699 2703 2707 2710 2776 2802 2810 2833
   2858 2876 2919 3011 3061)
  (682) -1 0)
 (359 uniq "( move 3 , 4 + ul ; move ua + 2 , 3 ) " () () -1 0)
 (360 uniq "( move 3 + 2 , 2 ; move ua , 3 / ua ) " () () -1 0)
 (361 equiv "( pen ul ; move ua , ul ; move ua , 4 ) "
  (89 290 296 325 332 337 350 351 357 1656 1664 1691 1707 1720 1731 1767 1779
   1798 1800 1830 1925 1967 1972 2001 2009 2082 2095 2111 2114 2155 2189 2296
   2357 2425 2431 2611 2640 2643 2749 2756 2793 2835 2856 2904 2906 3071)
  () 89 0)
 (362 uniq "( move ul , ul ; pen ua ; move ua , 4 ) "
  (291 294 297 328 329 334 335 358 1013 1672 1786 1804 1917 1964 1971 1974
   1980 1991 1997 2032 2048 2079 2097 2202 2281 2304 2317 2327 2344 2349 2356
   2430 2441 2497 2499 2556 2577 2604 2649 2679 2699 2706 2707 2710 2731 2759
   2776 2802 2810 2833 2858 2860 2919 2983)
  () -1 2)
 (363 equiv "( move ua , ul ; move ua , 4 ; pen ul ) "
  (89 287 323 330 341 404) () 89 6)
 (364 uniq "( pen ua ; move 4 , ul ; move ul , ul ) "
  (270 271 295 302 319 320 326 327 331 333 336 338 342 348 356 385 646 1656
   1657 1664 1673 1674 1675 1683 1685 1707 1720 1722 1729 1731 1735 1760 1772
   1776 1778 1779 1784 1798 1800 1805 1809 1812 1813 1816 1828 1830 1860 1865
   1876 1959 1967 1972 1976 1979 1996 2009 2038 2047 2050 2058 2082 2086 2093
   2106 2111 2114 2116 2150 2158 2166 2177 2180 2182 2185 2209 2231 2301 2313
   2322 2329 2347 2372 2378 2391 2412 2425 2431 2448 2458 2506 2515 2519 2598
   2602 2619 2623 2668 2690 2722 2741 2749 2756 2782 2793 2800 2825 2829 2856
   2870 2904 2911 2922 2927 2943 3033 3071 3075 3091)
  () -1 0)
 (365 uniq "( move ua , ul / 4 ; move 3 + 2 , 2 ) " (435 1839 2174) () -1 0)
 (366 uniq "( move 4 , 3 * 3 ; move ua , 2 + ul ) " (28 431 443) (756) -1 0)
 (367 uniq "( move ua , ul / 2 ; move 4 , 2 * 2 ) " (27 54 318) () -1 1)
 (368 uniq "( move ul , 3 ; move ua + 3 , 4 * 3 ) " () () -1 0)
 (369 equiv "( pen 2 ; v0 = 0 ; move ua , v0 ) " (14 373 402) () 14 0)
 (370 equiv "( move 4 + 4 , 4 ; move ua , ua + 4 ) " (31 412 2251) () 2251 0)
 (371 uniq "( move ua + ul , 3 * 3 ; move 4 , 4 ) " () () -1 0)
 (372 equiv "( pen ua ; v0 = 4 ; move v0 , 0 ) " (376 403 445) () 15 0)
 (373 equiv "( pen ua ; v0 = 0 ; move 4 , v0 ) " (15 369 402) () 15 1)
 (374 uniq "( move 4 , ul ; move 4 * 2 , ul - 3 ) " () () -1 0)
 (375 equiv "( move ua + 4 , ul ; v0 = 4 / 2 ) " () () 1 0)
 (376 equiv "( pen 3 ; v0 = ua ; move v0 , 3 ) " (372 403 445) () 18 0)
 (377 equiv "( pen ul ; pen ua * 2 ; move ua , ul ) " (22 102 1972) () 22 0)
 (378 equiv "( pen ua ; move ua - ul , 4 ; pen ua ) " (106) () 2754 7)
 (379 uniq "( move 0 - ua , 0 ; move ua + 4 , ul ) " (51 407 1653) (780) -1
  0)
 (380 equiv "( move ua + 2 , 3 ; move ua , ua + 2 ) " (48 412 421 470 2254)
  () 2254 1)
 (381 uniq "( move ua , 0 ; move ua + 3 , ul - 3 ) " (45 170 417 436 1841) ()
  -1 0)
 (382 equiv "( move ua , 0 ; move 4 + ul , 2 - ua ) " (417 427) () 2558 0)
 (383 equiv "( pen ul / ua ; move 4 + 4 , 4 / 3 ) " () () 0 0)
 (384 uniq "( move ua + 3 , 2 ; move 3 , ua + ul ) " () () -1 0)
 (385 equiv "( pen ua ; move ua , ua ; move ul , ul ) "
  (22 293 295 296 316 319 320 322 325 326 327 331 333 336 338 340 348 350 351
   356 364 990 1346 1656 1657 1664 1673 1674 1675 1683 1685 1705 1707 1717
   1720 1722 1728 1729 1731 1735 1760 1772 1776 1778 1779 1784 1789 1798 1800
   1805 1809 1812 1813 1816 1828 1860 1864 1865 1876 1879 1928 1959 1967 1972
   1976 1979 1996 2009 2011 2038 2050 2058 2082 2086 2093 2100 2106 2109 2111
   2114 2116 2155 2158 2166 2177 2180 2181 2182 2185 2189 2209 2231 2245 2301
   2313 2322 2347 2357 2372 2391 2412 2443 2448 2458 2488 2506 2515 2519 2521
   2542 2567 2598 2602 2609 2619 2623 2643 2646 2668 2670 2677 2690 2722 2730
   2741 2756 2777 2782 2793 2798 2800 2825 2827 2835 2845 2848 2865 2870 2880
   2911 2922 2943 2987 2991 3014 3027 3033 3071 3075 3091)
  () 1812 0)
 (386 uniq "( move ua + 3 , ua - 2 ; move ua , 4 ) " (52 88) () -1 0)
 (387 uniq "( move ua , 2 + ul ; move 4 , ul - 2 ) " (27 54 55 93) () -1 2)
 (388 uniq "( move 4 * 2 , ua ; move ua , ua - 2 ) " (53 181) () -1 0)
 (389 uniq "( move ua , ul + ul ; move 4 * 2 , 2 ) " (54 461 2714) () -1 0)
 (390 uniq "( move ul - ua , 2 ; move ua , 4 - 3 ) " (52) (691 788) -1 1)
 (391 uniq "( move ua + ul , 2 ; move 4 + ul , 4 ) " (414 2341) (885) -1 0)
 (392 uniq "( move ua + 4 , 2 - 3 ; move ul , ul ) " (349) (1003 1636) -1 0)
 (393 uniq "( move ua , ul - 2 ; move ua , 2 / 4 ) " (52 85 89 401 2469) ()
  -1 3)
 (394 equiv "( move ua , ul - 3 ; move 3 + ul , 4 ) " (194 460 2174) () 318
  0)
 (395 uniq "( move ua , 4 + ul ; move ua , 4 * 2 ) "
  (57 85 89 193 439 1650 2076 2714 2738) () -1 1)
 (396 uniq "( move 4 + ul , 3 + ul ; move ua , 4 ) " (59 413 438 1723) 
  (1482) -1 0)
 (397 uniq "( move ua - ul , 3 / 4 ; move ua , 2 ) " (48 1650) () -1 1)
 (398 uniq "( move ua , 4 ; move 4 + ul , 4 + ul ) "
  (60 155 427 464 469 2842) () -1 0)
 (399 uniq "( move 4 * 2 , ul ; move ua + ul , 4 ) " (59 324 352 432 2203) ()
  -1 0)
 (400 equiv "( move ua , ua * 4 ; move ua , 4 / 2 ) " (57 84 88 431 1650) ()
  44 1)
 (401 uniq "( move 4 , ua - ul ; move ua , 2 / 4 ) " (53 59 393) () -1 0)
 (402 equiv "( pen 2 ; v0 = ua ; move ua , v0 ) " (14 369 373) () 14 0)
 (403 equiv "( pen 2 ; v0 = ua ; move v0 , ua ) " (372 376 445) () 14 0)
 (404 equiv "( pen ua + ul ; move ua , ul ; pen ul ) " (22 111 363) () 22 0)
 (405 equiv "( pen ua ; pen ua ; move ua , ul / ua ) " (22 114) () 114 1)
 (406 uniq "( pen ua + 4 ; move ua + 3 , 4 / ua ) " (21 448) () -1 0)
 (407 equiv "( move 0 - ua , 0 ; move ua , ua + ul ) " (379 1653) () 1653 2)
 (408 equiv "( pen ul / ua ; move 3 * 2 , ua * 3 ) " () () 0 0)
 (409 uniq "( move ua + 2 , ua ; move 0 - ua , ul ) " (1693) () -1 0)
 (410 equiv "( pen 4 * 2 ; move 4 , 2 ; move 0 , 3 ) " () () 17 1)
 (411 equiv "( move ua , ua - ul ; move ua - 2 , 0 ) " () () 5 0)
 (412 equiv "( move ua + ul , 0 ; move ua , ua + 4 ) " (46 370 380 470 2522)
  () 2522 3)
 (413 equiv "( move 3 + ul , ua + ul ; move ua , 0 ) " (396 438 1723) () 1 0)
 (414 uniq "( move ua + ul , 2 ; move ua + ul , 2 ) " (391 460 461 1954 3056)
  () -1 0)
 (415 equiv "( move 3 , ul - ua ; move ua + ul , 0 ) " (460) () 1 0)
 (416 equiv "( move ua + 4 , ua - ul ; move 0 , ua ) " (440) () 5 0)
 (417 equiv "( move ua , 0 ; move 3 + ul , ul - ua ) " (381 382 436) () 51 0)
 (418 uniq "( pen 3 ; move 3 , 3 ; move 4 , 2 * 2 ) "
  (2007 2015 2092 2353 2438) () -1 0)
 (419 uniq "( pen 4 * 3 ; move 3 , 0 ; move 3 , 4 ) "
  (1689 1764 1877 2271 2520 2841) () -1 0)
 (420 uniq "( move ua , 3 ; move ul - ua , ua + 2 ) " (48 437) () -1 3)
 (421 uniq "( move ua + 3 , ul ; move ua , ua - 2 ) " (85 380 2076) () -1 0)
 (422 equiv "( move ua , ua * 2 ; move ua , 2 - ua ) " (84 431) () 44 0)
 (423 equiv "( move ua , 2 + ul ; move ua , 3 + ul ) " (87 2738) () 1668 1)
 (424 uniq "( move 2 , ua + ua ; move ua + 4 , ul ) " () (846) -1 0)
 (425 equiv "( move 0 - ua , ua + ul ; move 4 , ul ) " (91 93 183 238 513) ()
  183 0)
 (426 equiv "( move ua , ua * 3 ; move ua , ua + 3 ) " (86 187 431 433 478)
  () 45 0)
 (427 uniq "( move ua , ul ; move 4 + ul , 0 - ul ) " (93 382 398 462 469)
  (1486) -1 0)
 (428 uniq "( move 4 , ul ; move 0 - ua , ul + ul ) " (519) () -1 0)
 (429 uniq "( move 2 - ua , 3 ; move ua , ua * ua ) " (470 2479) () -1 0)
 (430 uniq "( pen 4 ; move 4 , 3 / 2 ; move 3 , 2 ) "
  (1756 1795 1929 1963 1990 2060 2115 2190 2206 2260 2290 2316 2358 2369 2446
   2480 2482 2638 2689 2701 2726 2744 2750 2970)
  () -1 0)
 (431 equiv "( move ua , ua * 4 ; move ua , 2 + ul ) "
  (84 222 366 400 422 426 1650) () 45 0)
 (432 uniq "( move ua + 2 , ul ; move ua - ul , 4 ) " (89 399 463 1693) () -1
  0)
 (433 uniq "( move ua , ua * ua ; move ua , 3 * 3 ) " (86 232 426) () -1 0)
 (434 equiv "( move ua + ul , ul ; move 3 , ua * 3 ) " (470 2076) () 1 0)
 (435 uniq "( move ua , ul / ua ; move 3 + 2 , ul ) " (365 1839 2174) () -1
  0)
 (436 uniq "( move ua , 4 ; move ua + ul , ul - 3 ) "
  (381 417 462 464 1841 2265 2842 2928) () -1 0)
 (437 uniq "( move ua , 2 ; move ul - ua , ul / 2 ) " (87 420 1260 2955) ()
  -1 0)
 (438 equiv "( move 3 + ul , ul + ul ; move ua , 4 ) " (396 413 1723) () 30
  0)
 (439 uniq "( move ua , 4 + ul ; move ua , ua / 3 ) " (395 2469 2738) () -1
  0)
 (440 equiv "( move ua + 4 , ua - ul ; v0 = ua ) " (204 416) () 5 0)
 (441 equiv "( move 4 , 4 - ua ; move ua , ul + ul ) " (245) () 29 0)
 (442 uniq "( move ua , ul ; move ua + ul , 4 * 4 ) "
  (89 236 458 462 469 473 1669 2247 2265 2547) () -1 0)
 (443 equiv "( move 4 , ul / 3 ; move ua , ua + ul ) "
  (92 366 444 478 481 1981) () 1981 4)
 (444 uniq "( move 4 , ul / ua ; move ua , 3 - ul ) " (443) () -1 0)
 (445 equiv "( pen ua ; v0 = ua ; move v0 , ul ) " (372 376 403 760 1250) ()
  22 0)
 (446 equiv "( pen 3 + 3 ; ( move 4 , 2 ; pen 0 ) ) " () () 17 2)
 (447 uniq "( pen ua + 4 ; move ua + 2 , ua - ul ) " (21 22 95 103 112) () -1
  0)
 (448 uniq "( pen ua + ul ; move ua + 3 , 4 + ul ) " (22 99 111 406) () -1 0)
 (449 equiv "( move 3 , 0 ; move ua + 2 , 2 ; pen 2 ) " (2201) () 2016 0)
 (450 uniq "( move 4 , ul ; move 4 , 4 ; move 4 , 2 ) "
  (534 1818 1821 1863 2010 2102 2256 2399 2435 2463 2570 2702 3030) () -1 1)
 (451 equiv "( ( pen 2 ; move 0 , 0 ) ; move ua , 0 ) " () () 14 0)
 (452 equiv "( pen ua ; move 0 , 4 + 3 ; move 4 , 0 ) " (1655) () 160 0)
 (453 equiv "( pen ua / 3 ; move ul - ua , 3 + ul ) " (18 22 101) () 216 0)
 (454 equiv "( pen ua ; move 4 * 2 , 0 ; v0 = 0 ) " () () 1700 0)
 (455 uniq "( pen 4 ; move 3 , 0 ; move 3 , ul - 2 ) "
  (1658 1699 2035 2042 2137 2546 2844) () -1 3)
 (456 equiv "( move 0 , 0 ; move ua , 0 ; move ua , 2 ) "
  (44 483 523 527 601 1711 2857 2972 3004) () 44 1)
 (457 equiv "( pen 4 + ul ; move 2 , 2 ; move 3 , 4 ) " (1898 2792) () 2715
  0)
 (458 equiv "( move ua , ul ; move ua + ul , ua + 2 ) "
  (85 442 462 464 467 469 471 473 519 1669 1708 2842 2928) () 1708 2)
 (459 equiv "( pen 4 + ul ; move 4 , 0 ; v0 = 3 ) " (556) () 15 2)
 (460 equiv "( move ua , ul - ua ; move ua + ul , 2 ) "
  (84 85 228 394 414 415 461 1708 2139 3056) () 1708 2)
 (461 equiv "( move ua , ul + ul ; move ua + ul , 2 ) "
  (85 389 414 460 1708 2139 2714 3056) () 1954 0)
 (462 uniq "( move ua , ul ; move ua + ul , ua - 2 ) "
  (85 427 436 442 458 469 473 1669 1708 2928) () -1 0)
 (463 equiv "( move ua + 2 , ul ; move ul + ul , ua ) " (432) () 1 0)
 (464 equiv "( move ua , 2 ; move ua + ul , ul + ul ) "
  (87 398 436 458 469 471 519 1042 2842) () 1954 1)
 (465 uniq "( pen 4 ; move ul , 4 ; move 4 , 3 + 2 ) " (648) () -1 0)
 (466 uniq "( pen 4 ; move 2 , 4 - 3 ; move ua , 4 ) " (573 1936 2298 2763)
  () -1 0)
 (467 equiv "( move ua , ua ; move ul + ul , ua + 4 ) " (458 471 2928) () 25
  0)
 (468 equiv "( move ul , ua - ul ; move ua + 3 , ua ) " () () 5 0)
 (469 equiv "( move ua , ul ; move ua + ul , 3 + ul ) "
  (398 427 442 458 462 464 471 519 1669 2247 2842) () 236 4)
 (470 uniq "( move ua + ul , 3 ; move ua , ua * ua ) "
  (380 412 429 434 2076 2479) () -1 0)
 (471 equiv "( move 4 , ua ; move ua + ul , ua + ul ) "
  (244 458 464 467 469 2842 2928) () 175 0)
 (472 equiv "( pen 3 ; ( move ua , 3 ; v0 = 0 ) ) " () () 18 0)
 (473 uniq "( move 3 , ul ; move ua + ul , ua * ua ) "
  (442 458 462 1669 2247 2547) () -1 0)
 (474 uniq "( pen ua ; move 4 , 4 ; move 3 - 4 , 4 ) " (2779) () -1 0)
 (475 uniq "( pen 4 ; move 3 , ul ; move 4 * 2 , 4 ) " (2343 2484 2530) () -1
  0)
 (476 uniq "( ( move 3 , 3 ; pen ua ) ; move 2 , 4 ) "
  (522 598 654 657 660 1951) () -1 0)
 (477 uniq "( move ua - ul , ua * ua ; move ua , 4 ) " (88 518 1665) () -1 0)
 (478 equiv "( move ua , ul / 3 ; move ua , ua + ul ) "
  (249 426 443 481 1290 2469) () 249 5)
 (479 uniq "( move ua - ul , 4 ; move ua , ul + ul ) " () (958 1333) -1 0)
 (480 equiv "( move 4 + ul , ua ; move ua - ul , ul ) " (248 1693 2122 2339)
  () 2339 0)
 (481 uniq "( move ua , ul / ua ; move 4 , ua + ul ) "
  (90 91 93 234 241 443 478) (870) -1 0)
 (482 uniq "( move ua , 4 ; ( pen 2 ; move 4 , 4 ) ) " (2198 2415 2599 3092)
  () -1 0)
 (483 equiv "( v0 = 0 ; move ua , 4 ; move ua , 2 ) " (456 1650) () 1650 3)
 (484 equiv "( move ua , 0 ; pen 4 ; move 0 - ua , 0 ) "
  (1742 1824 1924 2450 2465 2956 3085) () 16 0)
 (485 uniq "( move 2 , 4 ; move 3 , ul ; move ua , 4 ) "
  (59 486 527 1846 2136 2256 2269 2476 2492 2527 2528 2570 2572 2588 2857
   2881 2912 2936 2950 2972 3018 3081)
  () -1 0)
 (486 uniq "( move ul , 4 ; move 4 , 2 ; move ua , 4 ) "
  (30 485 601 1797 1846 2105 2113 2136 2527 2570 2936) () -1 0)
 (487 uniq "( move 4 , 3 ; move ul , 4 ; move ua , 3 ) "
  (523 662 2061 2102 2463 2528 2564) () -1 0)
 (488 equiv "( move 0 , 4 + 2 ; pen ua ; move ua , 0 ) " () () 67 0)
 (489 uniq "( move 4 , 2 ; move 3 , ul ; move 4 , ul ) "
  (524 533 569 665 1782 1877 2090 2157 2256 2492 2572 2588 2881 2912 2950
   2972)
  () -1 0)
 (490 uniq "( move 0 - ua , 3 ; pen ua ; move 0 , 3 ) " (547 2964) () -1 0)
 (491 equiv "( pen 2 ; move ua , 0 ; move 0 , 4 + ul ) " (555) () 14 0)
 (492 uniq "( move ua , 3 ; pen ua ; move 0 - 2 , 3 ) "
  (2046 2292 2336 2586 3065) () -1 0)
 (493 equiv "( pen 4 / 3 ; pen 2 ; move 4 , ul / 2 ) " (23 43) () 43 0)
 (494 uniq "( move ua + 2 , 0 ; pen 3 ; move ul , 3 ) " () () -1 0)
 (495 equiv "( move 0 , 2 ; pen 2 ; move ua , 4 - ua ) " () () 38 0)
 (496 equiv "( v0 = ua ; pen 4 ; move v0 , v0 ) " () () 16 1)
 (497 uniq "( pen 4 ; move ua - ul , 0 ; move 4 , 2 ) "
  (542 1687 1697 1738 1749 2075 2115 2224 2242 2352 2447 2461 2490 2616 2641
   2847 2979)
  () -1 0)
 (498 uniq "( pen 3 ; move 3 , ul ; move 2 - ua , 2 ) "
  (1853 2018 2063 2164 2551 2555 2900 2965 3001) () -1 0)
 (499 uniq "( move ul , 3 + 2 ; pen 2 ; move ua , 4 ) " () () -1 0)
 (500 uniq "( move 4 , 3 ; move ua , 4 + ul ; pen 0 ) " (544 607) () -1 0)
 (501 uniq "( move ul , ul ; pen 4 ; move 4 , 0 - 2 ) " (2691) () -1 0)
 (502 equiv "( pen 3 + 3 ; move 4 , ul ; move ua , 2 ) " (2527 2830 2910) ()
  1830 0)
 (503 uniq "( move ua , 4 ; pen ua + 4 ; move 3 , 3 ) " (509 637 1704 2420)
  (906) -1 0)
 (504 uniq "( pen 3 + ul ; move 3 , ul ; move 2 , 4 ) "
  (624 1771 1815 1849 2080 2533 2792 2807 2859) () -1 3)
 (505 uniq "( move 3 + ul , 4 ; pen ua ; move 3 , 3 ) " () () -1 0)
 (506 equiv "( pen ua + 3 ; move 4 , 2 ; v0 = ua ) " (556) () 17 0)
 (507 equiv "( pen ua ; move 4 , ul / 2 ; v0 = 0 ) " (520 1858) () 1858 5)
 (508 uniq "( move 3 , 3 ; pen ul + ul ; move 3 , 4 ) " (1975) () -1 0)
 (509 uniq "( move ua , 3 ; pen 4 + 4 ; move 3 , ul ) " (503 1704) () -1 0)
 (510 equiv "( pen ua ; v0 = 4 - ua ; move 4 , 2 ) " () () 17 0)
 (511 equiv "( move 4 , ul - 3 ; pen 3 ; move ua , 4 ) "
  (59 558 1820 2089 2516 2719 2796 3020) () 2719 0)
 (512 uniq "( pen 4 ; move 2 , ua - 4 ; move 4 , ul ) "
  (2066 2197 2335 2625 2909 2924) () -1 0)
 (513 equiv "( move ul - ua , ua + ul ; move ua , ul ) " (274 278 425 518) ()
  278 0)
 (514 uniq "( pen 4 ; ( move ul , 2 ; move ua , 2 ) ) " (2590) () -1 0)
 (515 equiv "( ( pen 4 ; move ua , 0 ) ; v0 = ua ) " (298 600) () 16 4)
 (516 uniq "( pen 2 ; ( move 4 , ua ; move 2 , ul ) ) " (652) () -1 0)
 (517 uniq "( pen 4 ; move 3 - 4 , ul ; move 3 , ul ) "
  (584 1716 1861 1897 1901 2043 2159 2165 2257 2295 2613 2837) () -1 0)
 (518 uniq "( move ul - ua , ua * ua ; move ua , ul ) " (274 477 513) () -1
  0)
 (519 equiv "( move ua , ul ; move ua - ul , ul + ul ) "
  (277 428 458 464 469 2842) () 1747 0)
 (520 equiv "( pen ua ; move 4 , 4 / 2 ; v0 = ua ) " (507) () 17 0)
 (521 equiv "( pen 4 + ul ; v0 = 4 ; move 4 , ua ) " () () 15 1)
 (522 uniq "( ( move 3 , 4 ; pen ua ) ; move 4 , ua ) " (476 587 660 1951) ()
  -1 0)
 (523 uniq "( move 4 , ua ; move ul , 0 ; move ua , 2 ) "
  (26 44 53 456 487 601 602 662 1711 2102 2105 2256 2269 2363 2399 2463 2528
   2564 2570 2572 2883 2972)
  (866 1549) -1 0)
 (524 uniq "( move ua , 0 ; move 3 , ul ; move 2 , ul ) "
  (24 489 603 665 1907 2061 2090 2157 2476 2492 2768 2857 2881 2912 2950 2963
   2972 2993 3081)
  () -1 0)
 (525 equiv "( move ua , 2 ; move ua , ul ; v0 = 0 ) "
  (87 538 609 610 611 614) () 87 3)
 (526 equiv "( move ua , 3 ; move ua , 4 ; move ul , 0 ) "
  (605 608 1668 1863 2435 2501 2896) () 1848 0)
 (527 equiv "( move 0 , 3 ; move ua , ul ; move ua , 4 ) "
  (89 456 485 2476 2564 2588 2768 2910 3004 3018 3081) () 57 0)
 (528 equiv "( move ua , 0 ; move ul , 4 ; move 4 , ua ) "
  (90 533 603 662 665 1821 1863 2061 2476 2993) () 142 0)
 (529 equiv "( pen 2 ; pen ua / 3 ; move 4 + 2 , ua ) " (36) () 14 0)
 (530 equiv "( move ua , ul ; move 4 , 0 ; v0 = ul ) "
  (93 531 609 610 611 614) () 1 0)
 (531 equiv "( move ua , ua ; move 3 , 2 ; v0 = ul ) "
  (47 530 538 609 610 614) () 24 5)
 (532 equiv "( pen 4 - 2 ; pen 2 ; move ua , ul - 4 ) " () () 73 0)
 (533 uniq "( move ua , 2 ; move ul , ul ; move 4 , 4 ) "
  (58 489 528 602 603 665 2061 2157 2269 2476 2564 2702 2881 2993 3018 3030)
  () -1 1)
 (534 uniq "( move ua , ul ; move 4 , 2 ; move 4 , ul ) "
  (54 55 58 60 93 450 605 665 1797 1811 1818 1821 1894 2010 2090 2113 2157
   2501 2702 2815 2896 2950 3030)
  () -1 1)
 (535 equiv "( v0 = ua ; move ua + 4 , v0 - ul ) " (205) () 5 0)
 (536 equiv "( v0 = ua + 4 ; move v0 , ua - ul ) " (284) () 5 0)
 (537 equiv "( pen ua ; move ua , 0 ; move 2 , ua + 2 ) "
  (616 669 1928 2112 2223 2398 2844 2878) () 1928 0)
 (538 equiv "( move ua , ua ; move ua , 4 ; v0 = 4 ) "
  (88 525 531 609 610 611 1105) () 46 4)
 (539 equiv "( move 4 , 2 ; v0 = ul ; move ua , ul ) " (56) () 56 2)
 (540 equiv "( v0 = ua ; move ua , ul ; move 4 , 4 ) " (58) () 58 0)
 (541 uniq "( pen 3 ; ( move ua + 3 , 4 ; pen ua ) ) " () () -1 0)
 (542 uniq "( pen ua ; move ua - ul , 0 ; move 2 , 2 ) "
  (497 678 685 1680 1687 1697 1702 1738 1749 1769 1770 1791 1833 1869 1881
   1897 1911 1919 1928 1955 2037 2067 2075 2176 2224 2242 2300 2321 2352 2447
   2453 2461 2490 2616 2641 2648 2660 2663 2718 2791 2847 2915 2979 3005)
  () -1 0)
 (543 equiv "( pen ua ; move 3 + ul , 2 ; move 0 , ua ) "
  (68 582 1703 1833 1931 2103 2159 2263 2345 2637 3040) () 17 0)
 (544 equiv "( move 4 , 0 ; move ua , ul + ul ; pen 0 ) " (500) () 26 0)
 (545 equiv "( pen ua * 2 ; move ua , 0 ; move ua , 3 ) "
  (45 1689 1732 1983 2432) () 351 0)
 (546 equiv "( v0 = ua ; pen v0 ; move v0 , ul ) " (838 1175) () 22 2)
 (547 uniq "( move 2 - ua , 3 ; pen ua ; move ul , 0 ) "
  (490 675 680 2561 2964) () -1 0)
 (548 equiv "( pen ua + 4 ; move ua , ul ; move 0 , 3 ) " (103) () 22 0)
 (549 equiv "( move ua , ua ; move ua + 4 , 4 ; pen 0 ) " (88) () 2579 0)
 (550 uniq "( move 3 , 0 - 4 ; pen ua ; move ua , ua ) " (3032) () -1 0)
 (551 equiv "( pen ua ; move 4 , ua ; move ul - 3 , 0 ) " (2411 2612 2635) ()
  15 0)
 (552 uniq "( pen ua ; move 2 , ul ; move ua , 4 + 2 ) "
  (67 2137 2398 2540 2653 2904) () -1 0)
 (553 equiv "( move ua , ua ; pen 2 ; move 3 , 3 + ul ) " (1948) () 1948 0)
 (554 equiv "( move 0 , ul ; pen 4 ; move ua + ul , 3 ) "
  (590 642 686 1908 1992 2487) () 1663 0)
 (555 equiv "( pen 2 ; move ua , 0 ; v0 = ul + ul ) " (491) () 14 1)
 (556 equiv "( pen ua + ul ; move 4 , ua ; v0 = 0 ) " (63 459 506) () 15 0)
 (557 uniq "( pen ua ; move 4 , 2 ; move 3 , ua + ul ) "
  (574 616 627 687 1659 1790 2569 2596 2878) () -1 0)
 (558 uniq "( move ua , 2 - 3 ; pen ua ; move ua , 4 ) "
  (52 88 149 511 1668 1806 1820 1982 1991 2377 2550 2632 2796 3020 3032) ()
  -1 0)
 (559 equiv "( move 3 , ua ; move ua , 3 - ul ; pen 2 ) " (50) () 2201 0)
 (560 uniq "( pen 3 + 2 ; move ul , 3 ; move ua , ul ) "
  (74 566 689 1654 2552 2830) (689 1386) -1 0)
 (561 uniq "( move ul - ua , ua ; pen 4 ; move 2 , 3 ) " (720) () -1 0)
 (562 equiv "( pen ul / ua ; move 3 , 4 ; move ua , 0 ) " (96 644) () 0 0)
 (563 equiv "( move ua , ul ; pen 3 * 3 ; move ua , 2 ) "
  (48 85 2097 2808 2883) () 2281 0)
 (564 equiv "( move ua , ua ; pen 4 + 3 ; move ua , 4 ) "
  (57 88 637 1668 1804 1956 2606 2953 3066) () 2349 0)
 (565 equiv "( move ua , ul ; move 4 , 0 ; pen ua * 4 ) " (58 90 585 589) ()
  1 0)
 (566 equiv "( pen ua + 3 ; move ul , 3 ; move 3 , ul ) "
  (560 615 689 1654 1871 1898 2552) () 2552 0)
 (567 uniq "( pen 3 ; move ua , 4 + ul ; move ul , 2 ) "
  (629 1684 1733 1834 1869 1886 1930 1998 2175 2326 2597 2700 2735 2832) ()
  -1 0)
 (568 uniq "( move 3 + ul , ul ; pen 4 ; move ua , 2 ) " (2148) () -1 0)
 (569 equiv "( move ua , 2 ; pen 3 + ul ; move 4 , ul ) "
  (55 93 489 625 1782 1965 2449 2664 2808) () 2338 0)
 (570 uniq "( move 3 , 4 ; pen 3 ; move ua , ua + ul ) " (676) () -1 0)
 (571 uniq "( move 3 * 2 , 0 - 3 ; move ua , 3 / 2 ) " (2201) () -1 0)
 (572 uniq "( pen ua ; move 4 * 2 , ul ; move ua , 3 ) " (77) () -1 0)
 (573 uniq "( pen 2 ; move ul , ul - 3 ; move ua , 4 ) "
  (466 1803 1936 2298 2732 2794 2828 3072) () -1 0)
 (574 equiv "( pen ua ; move 4 , 3 ; move 4 , ua + ul ) "
  (557 616 2015 2569 2878) () 3040 0)
 (575 uniq "( pen 3 ; move 4 + ul , ua ; move 3 , ul ) "
  (685 1702 2159 2274 2417 2483 3088) () -1 0)
 (576 equiv "( pen 4 * 2 ; move ua , ul ; move 3 , ua ) " (1764 1793) () 99
  0)
 (577 uniq "( move 2 - 4 , ul ; pen ua ; move 3 , ul ) " (2708 3046) () -1 0)
 (578 equiv "( move 4 , 4 - ua ; move ua , 2 ; pen ul ) " (29 53) () 29 1)
 (579 uniq "( move 2 , 4 / ua ; pen 2 ; move ua , ul ) "
  (1718 1775 1942 1988 2394 2403 2716 3012 3013 3082) () -1 0)
 (580 equiv "( pen ua * ua ; move ul , 2 ; move 4 , 4 ) " (1654 1689 1993) ()
  1993 1)
 (581 equiv "( pen ua ; move ua + ul , 3 ; v0 = 4 ) " (97 593 595) () 97 9)
 (582 uniq "( pen ua ; move 3 + ul , ul ; move 4 , 4 ) "
  (543 678 1662 1703 1738 1770 1896 1931 1955 2099 2103 2108 2143 2159 2173
   2274 2321 2345 2376 2417 2454 2490 2549 2637 2648 2749 2915 2925 2941 2946
   2952 3021 3040 3058)
  () -1 0)
 (583 uniq "( move 4 , ul ; pen ua ; move ul / 2 , 2 ) " (594 2046 2914) ()
  -1 0)
 (584 uniq "( pen ua ; move 3 , 4 - ul ; move 3 , ul ) "
  (517 1662 1713 1716 1829 1859 2002 2020 2033 2131 2159 2330 2647 2688 2722
   2741 2822 2942)
  () -1 0)
 (585 equiv "( move ua , 3 ; move ua , 4 ; pen ua * 4 ) " (565 1668) () 1668
  1)
 (586 equiv "( move ua , 4 ; move 3 + ul , ul ; pen 4 ) " () () 60 0)
 (587 equiv "( ( move ua , 0 ; pen ua ) ; move 4 , ul ) "
  (51 91 522 598 654 657 660 1913 1951) () 1913 0)
 (588 equiv "( v0 = ua ; pen 3 ; move ua , 4 + ul ) " () () 1758 0)
 (589 equiv "( move ua , ul ; move 4 , ul ; pen 4 * 2 ) "
  (54 58 93 565 596 1818 1821 2702 3030) () 93 3)
 (590 uniq "( move 4 , ul ; pen 4 ; move ua + ul , 4 ) "
  (31 59 554 642 1663 1908 2487) () -1 0)
 (591 equiv "( pen 2 ; move 4 , ul + ul ; v0 = ul ) " () () 13 0)
 (592 equiv "( pen ua ; move ul / ua , 4 ; move 4 , 3 ) "
  (1927 2331 2387 2467 2614 2674 2705 2717 2727 2733 3038) () 160 0)
 (593 equiv "( pen ua ; move ua - ul , 4 ; v0 = 4 ) " (106 581 595) () 2754
  7)
 (594 uniq "( move 4 , ul ; pen ua ; move ul - 4 , 4 ) " (583 2046 2266 2914)
  () -1 0)
 (595 equiv "( pen 4 ; move ua + ul , 4 ; v0 = ul ) " (581 593 1663) () 1663
  6)
 (596 equiv "( move ua , 4 ; move 4 , ul ; pen ul / 2 ) " (60 589 2936) () 60
  1)
 (597 equiv "( v0 = 2 / 4 ; pen ua ; move ua , ul ) " () () 22 0)
 (598 equiv "( ( move 4 , ul ; pen ua ) ; move 2 , ul ) "
  (335 476 587 654 657 660 1951) () 335 0)
 (599 equiv "( pen 4 + 2 ; v0 = 4 ; move v0 , 0 ) " () () 15 0)
 (600 equiv "( ( pen 4 ; move ua , ua ) ; v0 = ua ) " (339 515) () 16 0)
 (601 uniq "( move ul , ua ; move ua , 2 ; move ua , 2 ) "
  (456 486 523 1711 1797 2105 2136 2363 2435 3004) () -1 0)
 (602 equiv "( move ua , ua ; move ul , 0 ; move ua , 4 ) "
  (46 88 89 523 533 662 2061 2105 2269 2363 2476 2564 2815 2883 3018) () 2522
  0)
 (603 equiv "( move ua , 0 ; move ul , ul ; move 3 , ua ) "
  (524 528 533 662 665 2061 2269 2476 2492 2564 2857 2963 2993) () 51 0)
 (604 equiv "( move 0 , ua ; move ua , ua ; move 4 , ul ) "
  (91 2010 2090 2896) () 51 0)
 (605 equiv "( move ua , ul ; move ua , 4 ; move 0 , ul ) "
  (89 93 526 534 609 611 665 1704 1821 1863 2010 2157 2501 2815 2896 2950) ()
  89 2)
 (606 equiv "( pen ua + ul ; move ua , 3 * 3 ; pen 2 ) " () () 1667 0)
 (607 equiv "( pen 4 - ul ; move ua , 4 + ul ; pen 0 ) " (500) () 1758 0)
 (608 equiv "( move ua , 4 ; move ua , 2 ; move ul , ua ) "
  (526 635 1650 2105 2113) () 2139 0)
 (609 equiv "( move ua , ul ; move ua , 2 ; v0 = ul ) "
  (85 525 530 531 538 605 610 611 614) () 85 7)
 (610 equiv "( move ua , 2 ; move ua , ul ; v0 = ul ) "
  (87 525 530 531 538 609 611 614) () 87 6)
 (611 equiv "( move ua , ul ; move ua , 4 ; v0 = ua ) "
  (89 525 530 538 605 609 610 614 890) () 89 4)
 (612 equiv "( move ua , 0 ; pen ua ; move ul + ul , 0 ) "
  (623 686 719 1992 2006 2215 2266) () 283 0)
 (613 equiv "( ( pen 4 + 2 ; move ua , ul ) ; pen ua ) " () () 22 0)
 (614 equiv "( move ua , ul ; move 4 , ul ; v0 = ul ) "
  (93 525 530 531 609 610 611) () 93 5)
 (615 equiv "( pen ua + ua ; move ul , ua ; move 3 , 0 ) " (566 1654 2552) ()
  15 0)
 (616 equiv "( pen ua ; move 3 , 0 ; move ua , ua + ul ) "
  (320 537 557 574 1658 1699 1837 2042 2112 2160 2328 2398 2569 2656 3090) ()
  320 0)
 (617 uniq "( move ua + 2 , 0 ; move 2 + ul , 2 - 4 ) " (25) () -1 0)
 (618 equiv "( pen 3 ; move 0 , ul ; move ua + ul , ua ) " (1740 2382 2587)
  () 104 0)
 (619 uniq "( move ul , ua ; pen ua ; move ua , 3 + 2 ) " (631 1922) () -1 0)
 (620 equiv "( move ua , ua + ua ; move ua , 3 ; pen 3 ) " (86 622) () 45 0)
 (621 uniq "( move ul , ua ; pen 2 ; move ua + 2 , ul ) " () () -1 0)
 (622 equiv "( move ua , ua + 2 ; move ua , ul ; pen 3 ) " (86 87 225 620) ()
  87 0)
 (623 equiv "( move ua , 0 ; pen ul ; move 3 + ul , ul ) "
  (240 612 642 719 2006 2487) () 51 0)
 (624 equiv "( pen ua + ul ; move 3 , ua ; move 2 , ul ) "
  (111 504 689 1771 1799 1811 1815 1849 1850 1871 1890 1894 1898 1907 1957
   1959 2199 2407 2533 2655)
  () 2180 3)
 (625 equiv "( move ul , 0 ; pen ua + ul ; move 4 , ul ) "
  (328 569 633 1782 1975 2478) () 328 1)
 (626 equiv "( pen ua ; move ua , ua - 2 ; move ul , 4 ) "
  (106 112 1671 1761 1763 1827 1859 1904 1940 1970 2017 2020 2027 2059 2109
   2214 2401 2473 2562 2642 2646 2662 2728 2969 3077)
  () 1940 0)
 (627 equiv "( pen ua ; move ua , ul ; move 3 , 3 + ul ) "
  (557 643 687 1659 1798 1872) () 1764 0)
 (628 uniq "( pen 4 ; move ul , ua ; move ua + ul , 2 ) " (2170 2961 3025) ()
  -1 0)
 (629 uniq "( pen 4 ; move ua , ul + ul ; move ua , 2 ) "
  (85 567 1684 1691 1706 1750 1795 1803 1823 1834 1869 1886 1916 1930 1946
   2115 2146 2208 2228 2326 2385 2459 2505 2593 2620 2700 2735 2757 2801 2885
   2915 2979)
  () -1 0)
 (630 equiv "( pen ua * ua ; move 4 , 0 ; move ul , ul ) "
  (667 1732 1873 1983 2084 2183 2185 2199) () 2185 0)
 (631 uniq "( move ul , 2 ; pen ua ; move ua , 4 + ul ) " (619 676) () -1 0)
 (632 uniq "( move ul + ul , 3 ; pen 2 ; move ua , ul ) " () () -1 0)
 (633 equiv "( move 4 , ua ; pen ua + ul ; move 2 , ul ) "
  (625 682 1956 1975 2134 2420 2449 2478 2770 2795 2866 2995) () 2134 0)
 (634 equiv "( move ua , 2 ; move ua , ua * ua ; pen 4 ) " (52 230) () 230 7)
 (635 equiv "( move ua , 4 ; move ua , 2 ; pen ul + ul ) " (608 1650) () 1650
  5)
 (636 equiv "( ( pen ua ; move ua , ul ) ; move 0 , ua ) " () () 22 0)
 (637 equiv "( move ua , 4 ; pen ua + ul ; move ua , 4 ) "
  (57 88 89 233 503 564 1956 1965 2354 2420 2606 2649 2795 2808 2840 2866
   2933)
  () 2649 0)
 (638 uniq "( move ua , 4 + 4 ; pen ua ; move ul , ua ) " (666) () -1 0)
 (639 uniq "( move ua - 2 , 4 ; pen ua ; move ul , ul ) "
  (675 702 1686 2140 2708 2743 2930 2964 3046) () -1 0)
 (640 equiv "( pen ul / ua ; v0 = ul ; move ua , 0 ) " (96) () 0 0)
 (641 equiv "( pen ua ; move ua , ul / 2 ; move 3 , ul ) "
  (685 724 1655 1671 1688 1694 1713 1716 1726 1746 1750 1761 1763 1776 1791
   1798 1827 1832 1833 1859 1867 1897 1904 1911 1933 1978 1990 2033 2034 2036
   2060 2067 2072 2083 2087 2109 2115 2121 2123 2149 2163 2187 2190 2200 2207
   2210 2222 2227 2228 2236 2252 2261 2273 2330 2334 2335 2337 2345 2364 2380
   2388 2393 2401 2402 2404 2417 2422 2424 2427 2461 2473 2480 2489 2500 2502
   2508 2523 2562 2583 2593 2620 2622 2636 2681 2688 2689 2693 2697 2721 2732
   2745 2751 2758 2812 2819 2820 2821 2826 2827 2847 2869 2872 2889 2894 2901
   2907 2921 2960 2969 2973 2986 2998 3037 3057 3069 3077)
  () 2745 0)
 (642 equiv "( move ua , ul ; pen 4 ; move 3 + ul , ul ) "
  (240 554 590 623 686 719 1742 1924 1992 2006 2450 2487 2586 2956 3085) ()
  1759 0)
 (643 equiv "( pen 4 ; move ua , ul ; move ua , 3 - ul ) "
  (239 627 1659 1872) () 1691 0)
 (644 equiv "( pen ul / ua ; move 3 , ua ; move 3 , ul ) " (115 562) () 0 0)
 (645 uniq "( pen ua ; move ul , 4 ; move 4 + ul , ul ) "
  (646 2170 2493 2635 2961) () -1 0)
 (646 uniq "( pen ua ; move 4 , ul ; move 4 + ul , ul ) "
  (364 645 1740 2094 2170 2382 2493 2587 2612 2635 3033) () -1 0)
 (647 equiv "( pen 3 - ul ; move ua , ua ; v0 = ul ) " () () 14 0)
 (648 equiv "( pen 4 ; move ul , 4 ; move ua , ul + ul ) " (465 2961) () 2385
  0)
 (649 equiv "( move 2 , ul ; ( pen ua ; move ua , ua ) ) " (2529 2858) ()
  2858 0)
 (650 uniq "( move ul , 4 + ul ; move 4 + 3 , 4 + 2 ) " () () -1 0)
 (651 uniq "( move 2 , 3 / 2 ; move ua + 4 , ua - 4 ) " () () -1 0)
 (652 equiv "( pen ua ; ( move ua , ul ; move 2 , ul ) ) " (516 1800 2590) ()
  3071 7)
 (653 equiv "( pen ua ; move ul , 3 / ua ; move 4 , ul ) "
  (656 724 1655 1690 1694 1726 1752 1827 1845 1867 1904 1926 1933 1958 1978
   2013 2041 2072 2083 2087 2104 2187 2204 2236 2279 2335 2364 2369 2370 2376
   2380 2422 2474 2502 2535 2630 2638 2689 2696 2751 2794 2817 2827 2869 2872
   2884 2917 2935 2948 2960 2973 2976 2977 2986 3034 3042 3067)
  () 2630 0)
 (654 equiv "( ( move ua , ul ; pen ua ) ; move 2 , ul ) "
  (476 587 598 657 660 1951 2032) () 2293 0)
 (655 equiv "( move ua , ul ; ( move ua , 2 ; pen ul ) ) " (85) () 85 3)
 (656 equiv "( pen ua ; move ul , ul / 4 ; move 4 , ua ) "
  (653 724 1726 1867 1882 1958 1978 2067 2072 2187 2207 2228 2236 2337 2364
   2376 2393 2402 2404 2424 2502 2535 2583 2625 2636 2794 2869 2872 2907 2976
   2986 3037 3042 3062)
  () 3042 0)
 (657 equiv "( ( move ua , ul ; pen ua ) ; move ua , 4 ) "
  (88 89 476 587 598 654 660 2802) () 2802 0)
 (658 uniq "( move ul , ul / 4 ; pen ua ; move 3 , ul ) "
  (1652 1743 2813 2930) () -1 0)
 (659 equiv "( ( move ua , ua ; move 4 , ul ) ; pen ua ) " (91 954 1380) ()
  51 0)
 (660 equiv "( ( move 3 , ul ; pen ua ) ; move ua , ul ) "
  (476 522 587 598 654 657 1951 1980) () 1980 0)
 (661 uniq "( move 4 , 3 - ua ; move 4 + 3 , ua / 4 ) " () () -1 0)
 (662 equiv "( move ua , ua ; move ul , 4 ; move ua , ua ) "
  (487 523 528 602 603 1323 2061 2105 2269 2363 2463 2476 2564 2815 2883) ()
  169 0)
 (663 equiv "( pen ul ; pen ua - ul ; move ua , 4 - 3 ) " () () 22 0)
 (664 equiv "( pen ua - ul ; move 3 * 3 , ua ; pen ul ) " (78 219) () 1700 0)
 (665 uniq "( move ua , ul ; move ul , ul ; move 4 , ul ) "
  (93 489 524 528 533 534 603 605 721 1771 1818 1821 2010 2061 2090 2157 2269
   2476 2481 2492 2501 2564 2702 2768 2815 2883 2896 2912 2950 2963 2993 3018
   3030)
  () -1 0)
 (666 equiv "( move ua , ua + ul ; pen ua ; move ul , 0 ) " (638 674 2814) ()
  3066 0)
 (667 equiv "( pen ua + ua ; move ua , 0 ; move ul , ul ) "
  (630 1654 1811 1812) () 1812 2)
 (668 equiv "( ( pen ua ; pen ua * 4 ) ; move ua , ul ) " (108) () 22 0)
 (669 equiv "( pen ua ; move ua , ua ; move ua , ua - 2 ) "
  (84 537 1658 1659 1699 1837 2035 2042 2112 2137 2160 2223 2272 2328 2357
   2398 2540 2844 3070 3090)
  () 2112 0)
 (670 uniq "( pen ua ; move ul - ua , 0 ; move ua , ul ) "
  (223 348 1676 1687 1817 1852 1861 1911 1927 1987 2043 2049 2069 2070 2107
   2165 2176 2239 2241 2242 2257 2270 2295 2307 2331 2379 2387 2433 2439 2453
   2467 2510 2548 2573 2601 2614 2658 2663 2674 2682 2705 2717 2727 2733 2746
   2816 2837 2843 2847 2852 2945 2967 2982 2992 3005 3017 3038 3055 3074
   3076)
  () -1 0)
 (671 uniq "( move ul , 2 - ul ; move ua + 3 , 0 - 2 ) " () () -1 0)
 (672 equiv "( v0 = ua + 4 ; move v0 , ua - v0 ) " () () 3 0)
 (673 uniq "( move 3 + 2 , 0 ; move ua + ul , 4 + ul ) " () () -1 0)
 (674 equiv "( move ua , ua + ul ; pen ul ; move ua , 2 ) "
  (84 85 666 1820 2632) () 85 0)
 (675 uniq "( move ul - ua , 0 ; pen ua ; move ul , ul ) "
  (547 639 680 720 2561 2964) () -1 0)
 (676 equiv "( move 2 , ul ; pen ua ; move ua , ua + ul ) "
  (570 631 1036 1880 2707 2858) () 2707 1)
 (677 uniq "( move ua , 0 - 3 ; move 3 + ul , 3 + ul ) " () (1150) -1 0)
 (678 uniq "( pen ua ; move ua + ul , ul ; move ul , 2 ) "
  (542 582 1703 1738 1770 1833 1869 1881 1897 1916 1931 1955 2037 2099 2103
   2159 2163 2173 2207 2300 2321 2345 2401 2417 2447 2454 2490 2549 2637 2641
   2648 2658 2718 2915 2925 2952 2979)
  () -1 0)
 (679 uniq "( move ua , ul ; pen ua ; move ua - ul , 2 ) "
  (84 85 686 719 1747 1880 1992 2046 2215 2281 2586 3065) () -1 0)
 (680 equiv "( move ul - ua , 2 ; pen ua ; move ul , ua ) "
  (547 675 2561 2964) () 2561 0)
 (681 uniq "( move ua , 2 ; pen ua ; move ul , ua - ul ) "
  (1880 1945 2006 2392 2691) () -1 0)
 (682 equiv "( move 4 , ua ; pen ua + ua ; move ua , ul ) "
  (358 633 1956 2995) () 358 0)
 (683 uniq "( move ua + ul , 0 ; move 3 * 2 , 4 + ul ) " (25) (1393) -1 0)
 (684 uniq "( pen ua ; move ul , ul ; move ua - 2 , ul ) "
  (2405 2514 2612 2929 2965) () -1 0)
 (685 equiv "( pen ua ; move ua - ul , ua ; move 3 , ul ) "
  (542 575 641 1680 1687 1697 1713 1738 1749 1769 1791 1833 1867 1881 1897
   1901 1911 1919 1955 2037 2043 2075 2159 2222 2224 2242 2257 2270 2300 2307
   2321 2345 2352 2379 2380 2417 2427 2447 2454 2461 2483 2490 2523 2616 2641
   2660 2717 2718 2791 2847 2925 2979 3037 3074)
  () 2847 0)
 (686 equiv "( move ua , ul ; pen ua ; move ul + ul , 3 ) "
  (554 612 642 679 719 1992 2006 2046 2215 2266 2586 3065) () 2499 0)
 (687 equiv "( pen ua ; move ua , ul ; move 3 , ul + ul ) "
  (557 627 1659 1798 1872) () 1707 0)
 (688 equiv "( move ua - ul , ua ; move ua , ul ; pen 3 ) " (86 275 690) ()
  224 0)
 (689 equiv "( pen ua + ul ; move ul , 3 ; move ua , ul ) "
  (111 560 566 624 721 1654 1771 1799 1811 1815 1850 1890 1894 1898 2183 2240
   2552 2655 2815 2830 2883)
  () 560 0)
 (690 equiv "( move ua + ul , ua ; move ua , 4 ; pen ul ) "
  (88 688 1314 2468) () 2522 0)
 (691 equiv "( move ul - ua , 2 ; move ua , ul ; pen ul ) " (87) () 390 0)
 (692 uniq "( move ua + ul , ul ; move 4 + 2 , 2 * 2 ) " (54) () -1 0)
 (693 equiv "( move ua , 2 - ul ; move 3 + ul , 2 * 2 ) " () () 58 0)
 (694 equiv "( move 0 - ua , ua + ul ; move 4 , 4 - 3 ) " (58 723) () 183 0)
 (695 equiv "( move ul , ua ; pen ua ; move 4 , ul - ua ) " () () 328 0)
 (696 equiv "( move ua - ul , ua ; pen 4 ; move ua , ul ) "
  (275 702 705 720 1686 1695 1736 2148 2238 2314 2708 2938 3046) () 1695 0)
 (697 equiv "( v0 = ua ; pen ua + ul ; move ua , ul ) " (111) () 22 1)
 (698 uniq "( move 4 , ua * ua ; pen ua ; move ul , ua ) " () () -1 0)
 (699 uniq "( move ua + ul , 4 ; move 4 * 2 , ua + 2 ) " () () -1 0)
 (700 uniq "( move ua + 3 , 2 / 4 ; move 2 , ua + ul ) " () () -1 0)
 (701 uniq "( move 4 / ua , ua ; pen ua ; move ua , ul ) " (358 720) () -1 0)
 (702 uniq "( move ua - ul , ul ; pen 4 ; move ul , ul ) "
  (639 696 705 1686 1695 1736 2148 2238 2314 2708 2938 3046) () -1 0)
 (703 uniq "( move ua - ul , 4 + ul ; move 4 + 4 , 2 ) " (54 1857 2714) () -1
  1)
 (704 uniq "( move 4 + ul , 0 ; move 4 + ul , ua / 4 ) " () () -1 0)
 (705 uniq "( move ua , ul / ua ; pen 4 ; move ul , ul ) "
  (696 702 1743 1942) () -1 0)
 (706 equiv "( pen ua ; v0 = ul / ua ; move ua , ul ) " (115 724) () 22 1)
 (707 uniq "( move ua , ul / 4 ; move ua + 3 , 4 - 2 ) " (57 85 89 1650) ()
  -1 0)
 (708 equiv "( v0 = 4 * 2 ; pen v0 ; move ua , ul ) " () () 22 0)
 (709 equiv "( pen ul ; pen ul / ua ; move ua , ua - 2 ) " (105 113) () 0 0)
 (710 equiv "( move ua , ua ; v0 = ua ; move v0 , 3 ) " (713) () 45 0)
 (711 equiv "( v0 = 2 ; move ua , ul ; move ua , v0 ) " () () 85 3)
 (712 uniq "( move ul - ua , 0 ; move ua + 2 , ul - 3 ) " (45 170 223) () -1
  0)
 (713 equiv "( move ua , ul ; v0 = ua ; move v0 , 4 ) " (710) () 89 0)
 (714 equiv "( v0 = ua ; move v0 , ul ; move 4 , ua ) " () () 1 0)
 (715 equiv "( v0 = 4 ; move ua , ua ; move v0 , ul ) " () () 51 0)
 (716 uniq "( move ul - ua , ua + ul ; move 4 + 2 , 2 ) " (54) () -1 0)
 (717 equiv "( move ul - 4 , 0 ; move ua + 3 , ul + ul ) " () () 2785 0)
 (718 equiv "( move 3 + 2 , 2 ; move 0 , 4 ; move ua , 0 ) " () () 1723 0)
 (719 equiv "( move ua , ul ; pen ua ; move ul + ul , ul ) "
  (612 623 642 679 686 1992 2006 2046 2215 2266 2336 2586 2914 2956) () 2293
  0)
 (720 equiv "( move ul - ua , ua ; pen ul ; move ua , ul ) "
  (274 278 561 675 696 701) () 223 0)
 (721 equiv "( pen ua - ul ; move ul , ul ; move ua , ul ) "
  (665 689 1057 1654 1771 1898 2183 2240 2440 2815 2830 2950) () 2830 0)
 (722 uniq "( move ua + ul , 4 - ul ; move ua + 3 , 3 ) " (735) () -1 0)
 (723 uniq "( move 2 - ua , ua + ul ; move ua , 4 * 3 ) " (86 88 89 233 694)
  () -1 0)
 (724 uniq "( pen ua ; move ul , ul / ua ; move ua , ul ) "
  (115 641 653 656 706 1671 1688 1690 1726 1750 1823 1867 1882 1926 1933 1958
   1960 2013 2031 2034 2036 2039 2041 2064 2066 2072 2096 2104 2187 2190 2210
   2219 2222 2228 2236 2244 2261 2279 2297 2298 2332 2334 2364 2370 2376 2380
   2388 2402 2404 2424 2427 2480 2500 2502 2523 2535 2583 2593 2617 2620 2622
   2630 2636 2673 2688 2693 2721 2732 2742 2794 2819 2820 2826 2827 2869 2872
   2879 2884 2889 2894 2907 2909 2939 2949 2960 2976 2986 3034 3037 3042 3057
   3072)
  () -1 0)
 (725 uniq "( move ua + ul , ul ; move ua - 2 , 4 / 2 ) " (85 89) () -1 0)
 (726 uniq "( move 3 * 3 , ua * ua ; move ua - ul , 2 ) " (50) () -1 0)
 (727 equiv "( pen 4 ; v0 = ua ; move ua , ua + v0 ) " (757) () 16 0)
 (728 equiv "( v0 = ul - 2 ; pen ua ; move ua , v0 ) " () () 2232 0)
 (729 uniq "( move 0 , 4 / 3 ; move ua , 4 ; move 4 , 2 ) "
  (1724 1737 2309 2359 2512 2797 2805 2980) () -1 0)
 (730 equiv "( pen ua * ua ; move ua , ua - ul ; pen ul ) " (112) () 2232 0)
 (731 equiv "( pen ul / ua ; v0 = 4 ; move v0 , ul ) " (760) () 0 0)
 (732 equiv "( v0 = 4 + 4 ; pen v0 ; move v0 , 0 ) " () () 1700 0)
 (733 equiv "( pen ul / ua ; move ua , ul / ua ; pen ul ) " (113 114 115) ()
  0 0)
 (734 uniq "( move 2 + 2 , 0 ; ( pen 4 ; move ua , 2 ) ) " (1780 1801 2153)
  () -1 0)
 (735 uniq "( move ua + ul , ua - ul ; move ua + 2 , 2 ) " (84 85 166 722) ()
  -1 0)
 (736 uniq "( move ua + ul , ua + 2 ; move 2 - ua , ul ) " (87 225) () -1 0)
 (737 uniq "( move 4 , 2 + ul ; pen 4 ; move 4 , 0 - 4 ) " () () -1 0)
 (738 uniq "( move ua + ul , 3 ; move ua + ul , ua - 2 ) " (48 172) () -1 0)
 (739 uniq "( move 4 , 4 ; pen 2 + ul ; move 4 + 3 , 3 ) " () () -1 0)
 (740 uniq "( move ua - ul , 2 / ua ; move ua , ua + 4 ) " (52 88) () -1 0)
 (741 equiv "( v0 = ua ; move v0 , v0 ; move 3 , 2 ) " (753) () 24 2)
 (742 uniq "( move 4 , 0 ; move ua + 2 , ul ; move 2 , 2 ) " () () -1 0)
 (743 uniq "( move 4 , 3 * 2 ; ( pen ua ; move 3 , 2 ) ) " (1899 2565 3073)
  () -1 0)
 (744 uniq "( move ua , ul / 4 ; move ua + ul , 2 + ul ) "
  (85 1650 1708 2842) () -1 0)
 (745 equiv "( move ua , 2 ; move 0 , 3 ; move 4 , ua - 2 ) " () () 55 0)
 (746 uniq "( move 4 , 2 ; move ua + 2 , 4 ; move 0 , ua ) " (2130) () -1 1)
 (747 uniq "( move ua , ua * ua ; move ua + ul , 4 / 3 ) " (86 88 232 1665)
  () -1 0)
 (748 uniq "( move ua , ua - 4 ; move 3 + ul , ul / ua ) " () () -1 0)
 (749 equiv "( move ua , 2 ; ( pen 4 * 4 ; move 4 , 2 ) ) " (1785) () 2599 0)
 (750 uniq "( move ua , 4 ; move 0 , 4 + 3 ; move ua , 2 ) " (1941) () -1 0)
 (751 uniq "( move 2 , 0 ; move 2 , 4 ; move ua , ua - 4 ) " () () -1 0)
 (752 equiv "( move 2 * 2 , 0 ; move ua , 2 ; v0 = ua ) " () () 26 0)
 (753 equiv "( v0 = 4 ; move v0 , v0 ; move ua , 4 ) " (741) () 31 0)
 (754 uniq "( move ua , 0 ; move ua - 4 , 4 ; move 3 , 4 ) " () () -1 0)
 (755 uniq "( move 4 , 0 ; move 4 , ul ; move 2 , 4 + ul ) " (800 2671) () -1
  0)
 (756 equiv "( move 0 , 4 ; move 4 , 4 + ul ; move ua , 3 ) " () () 366 0)
 (757 equiv "( pen ua ; v0 = ua ; move ua , ua / v0 ) " (727 761) () 22 1)
 (758 uniq "( move 4 + ul , 3 ; move 3 , ul ; move 2 , 4 ) " () () -1 0)
 (759 uniq "( move 3 , 4 ; move ua , 3 / 2 ; move 2 , ul ) " () () -1 0)
 (760 equiv "( pen ul / ua ; v0 = ua ; move v0 , ul ) " (445 731) () 0 0)
 (761 equiv "( pen ua ; v0 = ul ; move ua , ul / v0 ) " (757) () 22 0)
 (762 equiv "( pen 2 ; v0 = 3 ; move v0 + v0 , ua ) " () () 14 0)
 (763 equiv "( move ua , ul ; move 4 , 4 / 2 ; v0 = 3 ) " () () 54 0)
 (764 uniq "( move ua , 0 ; pen 4 + ul ; move 2 , 2 * 2 ) " () (983) -1 0)
 (765 uniq "( pen 3 ; move ua / 3 , 0 ; move ua + 2 , 2 ) " () () -1 0)
 (766 uniq "( pen ua ; move ua + 2 , 2 ; move 2 , 4 * 2 ) " () () -1 0)
 (767 uniq "( move ua , 3 ; pen ua + 2 ; move 4 , 3 + 2 ) " (819) () -1 0)
 (768 equiv "( v0 = 3 ; pen v0 ; move 3 * v0 , ua ) " () () 1814 0)
 (769 uniq "( move 3 , ua - ul ; pen 4 + 2 ; move 4 , 0 ) " (2384 2692) () -1
  0)
 (770 uniq "( pen 2 ; move 0 - ul , 2 ; move ua , 4 / 2 ) " () () -1 0)
 (771 uniq "( pen 4 ; move 3 , ua - 2 ; move ua + 2 , 4 ) " () () -1 0)
 (772 equiv "( pen 2 ; ( v0 = ua ; move v0 , v0 ) ) " () () 14 0)
 (773 uniq "( pen 4 ; move ul , 3 / 2 ; move ua - 3 , 0 ) " (1847 3086) () -1
  0)
 (774 uniq "( pen 4 ; move 2 , ua ; move 3 - ua , 4 + 3 ) " () () -1 0)
 (775 uniq "( pen 4 ; move 4 - 2 , ua ; move ua + 2 , 4 ) " () () -1 0)
 (776 uniq "( pen 3 ; move 0 , ua ; move 4 + 4 , ul / 2 ) "
  (2276 2739 2867 2932) () -1 0)
 (777 equiv "( v0 = 3 ; ( pen v0 ; move ua , v0 ) ) " () () 18 0)
 (778 uniq "( ( move ua , 0 ; pen 4 ) ; move 2 - ul , 2 ) " () () -1 0)
 (779 equiv "( move 0 , 0 ; move ua + ul , ul ; move 3 , 0 ) " () () 1 0)
 (780 equiv "( move 0 - ua , 0 ; move 4 , ul ; move ua , 0 ) " () () 379 0)
 (781 equiv "( move 4 , ua + ua ; move ua + ul , ul - ua ) " (244) () 175 0)
 (782 uniq "( pen ua ; move 4 * 2 , ua ; move 4 * 2 , 4 ) " () () -1 0)
 (783 uniq "( pen 2 ; ( move ua , 4 ; move 4 , 0 - ul ) ) " () () -1 0)
 (784 uniq "( move ua - ul , 2 ; move ua - ul , ul - ua ) " (87) () -1 0)
 (785 equiv "( pen ua * 4 ; v0 = ua * 4 ; move 4 , 0 ) " () () 15 0)
 (786 uniq "( pen 3 ; ( move 3 , 3 * 2 ; move ua , ua ) ) " (1914) () -1 0)
 (787 uniq "( move 4 , 4 ; pen 3 ; move 4 * 2 , ul + ul ) " () () -1 0)
 (788 equiv "( move ul - ua , 3 - ul ; move ua , ul - ua ) " (278) () 390 0)
 (789 equiv "( v0 = ua - ul ; move v0 + v0 , v0 ) " () () 5 0)
 (790 uniq "( move ua + 4 , 4 ; ( pen 2 ; move ua , 4 ) ) " () () -1 0)
 (791 uniq "( move 4 + ul , ul / ua ; move ua , ua + ul ) " (92) () -1 0)
 (792 equiv "( move ua , 2 * 2 ; move 0 , ua ; move ua , 4 ) " (948) () 57 0)
 (793 equiv "( ( pen 4 * 3 ; move ua , 4 ) ; move 2 , ua ) " () () 1734 0)
 (794 uniq "( move 2 , 0 ; move ua , ua / 3 ; move ua , 2 ) " () () -1 0)
 (795 uniq "( move 4 , 4 ; move ua , 0 ; move 0 - ua , ul ) " () () -1 0)
 (796 uniq "( move ua + ul , ul / 4 ; move ua , ua * ua ) " () () -1 0)
 (797 equiv "( pen ua ; ( move 4 + ul , 3 ; move 4 , 4 ) ) " (2946) () 2946
  0)
 (798 equiv "( move ua , ul ; v0 = 4 ; move v0 , v0 ) " () () 58 0)
 (799 equiv "( v0 = 4 ; move v0 , ul ; move ua , v0 ) " () () 59 0)
 (800 equiv "( move ua , 2 ; move 4 , ul ; move 0 , 4 + ul ) " (755 871 2671)
  () 55 0)
 (801 equiv "( move 4 , ul + ul ; move ua , 4 ; move 0 , 3 ) " (203 3054) ()
  30 0)
 (802 equiv "( pen 3 + ul ; ( move ua , 0 ; pen 0 - 4 ) ) " () () 16 0)
 (803 uniq "( move ua , 2 ; move 2 - ua , 4 ; move 3 , ul ) " () () -1 0)
 (804 uniq "( move 3 , ul ; move ua , ua ; move 4 * 2 , 2 ) " (863) () -1 0)
 (805 equiv "( move ua , 0 ; move 4 , ul ; move 3 / ua , 3 ) " () () 51 0)
 (806 uniq "( move ua , 4 + ul ; v0 = 0 ; move 4 , ul ) " () (987 1221 1529)
  -1 0)
 (807 uniq "( move ua , 3 - 4 ; move ul , 2 ; move 4 , ua ) " (2627) () -1 0)
 (808 equiv "( move ua , ua ; ( move ua , 3 ; v0 = 0 ) ) " (820) () 45 0)
 (809 uniq "( move ul , ul ; move 4 , 3 ; move 3 + 3 , ul ) " () () -1 0)
 (810 equiv "( ( move ua , 0 ; move ua , 3 ) ; v0 = ua ) " (811) () 45 1)
 (811 equiv "( ( move ua , ua ; move ua , 4 ) ; v0 = 0 ) " (810 1177) () 46
  1)
 (812 uniq "( move 2 , ua ; pen ua + ua ; move 2 , 0 - 3 ) " (285) () -1 0)
 (813 uniq "( move ua , ua - 4 ; move 4 , ul ; v0 = 2 ) " (139) () -1 0)
 (814 equiv "( move ua , 2 ; move 4 , ul ; v0 = ul - 3 ) " () () 55 0)
 (815 uniq "( move 4 , ul / 2 ; move 3 , ua ; move 3 , ul ) " (2966) () -1 0)
 (816 uniq "( move 4 + 4 , ua ; move ua , 4 ; move 4 , ul ) "
  (866 1808 2195 2861) () -1 0)
 (817 uniq "( move 4 , ua ; move 4 , 4 ; move 3 - ua , ul ) " () () -1 0)
 (818 equiv "( pen ua ; move ua - 2 , ua + 3 ; move 3 , 0 ) " (2289) () 97 0)
 (819 uniq "( move 2 , ua ; pen ua + 2 ; move ua , 3 + 2 ) " (767) () -1 0)
 (820 equiv "( move 3 , ua ; ( move ua , 2 ; v0 = ua ) ) " (808) () 2201 2)
 (821 uniq "( move 4 + 3 , 0 ; move ua , ua * ua ; pen 0 ) " () () -1 0)
 (822 uniq "( move ua , 4 ; move ua - ul , 4 ; v0 = 4 ) " () () -1 0)
 (823 equiv "( pen 3 + ul ; v0 = ua ; move v0 , v0 ) " () () 16 0)
 (824 uniq "( pen ua ; v0 = ua ; move v0 , v0 - 4 ) " () () -1 0)
 (825 equiv "( pen ua ; v0 = ul ; move 4 , v0 + v0 ) " () () 17 0)
 (826 equiv "( v0 = 4 ; pen ua ; move v0 , ua - v0 ) " (910) () 157 0)
 (827 equiv "( v0 = ua + 4 ; move v0 , ul ; pen v0 ) " (284) () 1 0)
 (828 equiv "( v0 = ua ; pen v0 / 3 ; move ua , v0 ) " () () 14 0)
 (829 uniq "( pen 2 ; move ua + 4 , ua + ul ; move 2 , 4 ) " () () -1 0)
 (830 uniq "( pen ua ; move 0 , ua ; move 3 * 2 , ua / 4 ) " () () -1 0)
 (831 uniq "( move 4 * 2 , ul ; pen ul ; move ua + 2 , 2 ) " () () -1 0)
 (832 uniq "( move 4 , 4 - ul ; pen ua ; move 2 , ua + 2 ) " () () -1 0)
 (833 uniq "( move 4 * 2 , ua + ul ; pen 2 ; move ua , 3 ) " () () -1 0)
 (834 uniq "( pen ua + ul ; move ua , 2 ; move 3 * 3 , 4 ) " () () -1 0)
 (835 equiv "( pen ua + 3 ; move 3 + ul , ua ; v0 = 3 ) " () () 15 0)
 (836 uniq "( pen ua + 4 ; move 3 * 3 , ua ; move ul , 2 ) " (2301) () -1 0)
 (837 uniq "( move 3 , ua ; pen 3 + ul ; move 3 * 2 , ul ) " () () -1 0)
 (838 equiv "( v0 = ua ; ( pen v0 ; move v0 , ul ) ) " (546) () 22 0)
 (839 equiv "( move ua + 2 , 2 ; ( pen ua ; move 2 , ul ) ) " (2023 2140) ()
  2140 0)
 (840 uniq "( move ul - 4 , 0 ; pen 4 ; move 3 , ul + ul ) " () () -1 0)
 (841 uniq "( pen 4 + ul ; move ul - 4 , 0 ; move ul , 4 ) " (2615) () -1 0)
 (842 uniq "( pen ua + 2 ; move 4 , 4 ; move ul , 4 + ul ) " () () -1 0)
 (843 uniq "( pen 4 ; move 2 , ua - 3 ; move ua - 4 , ul ) " () () -1 0)
 (844 equiv "( move ua , ul ; move 0 , 0 - ua ; move ua , 2 ) " (228) () 85
  0)
 (845 uniq "( pen ua - 3 ; move 4 , 4 ; move 3 + ul , ul ) "
  (1739 1796 1994 2172 2442 2887 2913 2934 3064) () -1 0)
 (846 equiv "( move 2 , ua ; ( move ua + 4 , ul ; pen 2 ) ) " () () 424 0)
 (847 equiv "( pen 4 * 4 ; move 3 - ua , ua ; move 2 , ul ) "
  (1891 1961 2008 2029 2410 2452 2509 2685) () 2509 0)
 (848 uniq "( move ua + ul , ul ; move ua + ul , ul + ul ) " (277) (1367) -1
  0)
 (849 uniq "( pen ua ; move 2 , ul / 4 ; move ua , 2 / 3 ) "
  (1773 1774 1882 1910 2021 2074 2267 2311 2451 2904 3016) () -1 1)
 (850 equiv "( ( move ua , ua ; move 4 + ul , 2 ) ; pen 3 ) " (177) () 2558
  0)
 (851 equiv "( move ua , ua ; move 0 , 0 ; move 4 , ua + ul ) " (234) () 51
  0)
 (852 equiv "( pen 3 * 2 ; move ua - ul , 4 ; v0 = ua ) " () () 2754 0)
 (853 uniq "( pen 3 ; move 4 + 3 , ul / ua ; move ua , 4 ) "
  (1851 1868 1875 1912 1921 1944 1953 1960 1989 1999 2014 2052 2053 2054 2078
   2081 2110 2125 2127 2142 2167 2169 2194 2205 2226 2229 2277 2286 2302 2323
   2368 2383 2444 2494 2503 2525 2526 2534 2559 2582 2626 2784 2804 2811 2877
   2890 2899 2905 2916 2923 2988 3059 3089)
  () -1 0)
 (854 uniq "( ( move 2 , ul ; pen 4 ) ; move ua , 2 - ua ) " () () -1 0)
 (855 equiv "( pen ua - ul ; move ua , 4 ; move 4 / 2 , 4 ) "
  (1968 2005 2117 2135) () 2135 0)
 (856 uniq "( pen ua ; ( move 4 , ua ; move ua - 2 , 4 ) ) " () () -1 0)
 (857 uniq "( ( move ua , ua ; pen 4 ) ; move 4 , ua - 2 ) " () () -1 0)
 (858 uniq "( pen 4 ; move ul , ul - 4 ; move 3 * 2 , ul ) " (2554 2634) ()
  -1 0)
 (859 uniq "( pen 3 ; ( move ul , ul - 3 ; move ua , 2 ) ) " (332) () -1 0)
 (860 uniq "( pen 3 ; ( move ua , ua * 3 ; move ua , 3 ) ) " (187 1914)
  (1339) -1 0)
 (861 equiv "( ( pen 3 - ul ; move ua , 0 ) ; v0 = ul ) " () () 14 0)
 (862 equiv "( pen ua ; ( move 3 , 4 ; move 3 - ua , ul ) ) "
  (1735 2722 2779) () 2779 0)
 (863 equiv "( move 0 , ul ; move ua , ua ; move 2 * 2 , ua ) " (804) () 1 0)
 (864 equiv "( move 3 + ul , 3 ; ( pen ua ; move 4 , ul ) ) " (865 2426) ()
  1681 0)
 (865 equiv "( move 2 + ul , 4 ; ( pen ua ; move 4 , ul ) ) " (864 2220) ()
  2703 0)
 (866 equiv "( move 4 + ul , ua ; move ua , 2 ; move 0 , ul ) "
  (816 1808 2195 2861) () 523 0)
 (867 equiv "( move 4 / ua , 3 ; ( pen ua ; move ua , 3 ) ) " () () 67 0)
 (868 uniq "( ( move 4 , ul ; pen 4 ) ; move 2 , ua * ua ) " () () -1 0)
 (869 equiv "( ( move 4 , 3 ; move ua , ul + ul ) ; pen 4 ) " () () 28 0)
 (870 equiv "( move ua , ul / ua ; move 2 , ul ; move 2 , 0 ) "
  (1787 2305 2524) () 481 0)
 (871 equiv "( move ua , ua ; move 4 , ul ; move 0 , ua + 4 ) " (800 960) ()
  51 0)
 (872 equiv "( move ua , 0 - ua ; v0 = ul ; move ua , 2 ) " (974) () 44 0)
 (873 uniq "( move ua , 0 ; move 0 , ul ; move ua , ul / 4 ) " () () -1 0)
 (874 uniq "( move 2 , 3 + ul ; move ua , ul ; move ua , 2 ) " (2419) () -1
  0)
 (875 uniq "( move ua , ua / 4 ; move ua , 2 ; move ul , 0 ) "
  (2178 2475 2644 2766) () -1 0)
 (876 uniq "( pen 4 ; move ul , ul / 4 ; move 3 , ua / 4 ) " (951 2886) () -1
  0)
 (877 uniq "( move 3 , ua * ua ; move ul , 2 ; move ua , 2 ) " (2937) () -1
  0)
 (878 equiv "( move ul , 3 ; move 3 , ua ; move ua + ul , 2 ) " () () 2390 0)
 (879 uniq "( move ua , 0 ; move 3 , ul ; move 4 , ul - ua ) " (246) () -1 0)
 (880 equiv "( move ua , ul + ul ; move ua , 4 ; v0 = 0 ) " (890 1023) () 52
  0)
 (881 equiv "( move ua , ua ; move ua , 2 ; v0 = 3 + ul ) " (222 229) () 44
  0)
 (882 equiv "( pen ua * 2 ; move ua + 2 , ua * 3 ; pen 4 ) " (211) () 1700 0)
 (883 uniq "( move ua , 3 / ua ; move 0 , ul ; move 4 , ua ) " (1787 2524) ()
  -1 0)
 (884 equiv "( move 3 , 2 ; move ul , ua ; move ua , 4 - ua ) " () () 30 0)
 (885 equiv "( move ul , 2 ; move ua , ua ; move 4 + ul , 4 ) " (2283) () 391
  0)
 (886 equiv "( move ua , 2 ; move 3 , ul ; move ul , ua * 3 ) " () () 55 0)
 (887 equiv "( move 0 - ua , ul ; move 4 , ul ; v0 = ua ) " (183) () 183 3)
 (888 equiv "( move ua , ul ; ( move ul , 0 ; move 3 , ua ) ) " () () 1 0)
 (889 equiv "( v0 = ua + ul ; move ua , 3 ; move ua , 4 ) " () () 1668 0)
 (890 equiv "( move ua , 3 + ul ; move ua , 4 ; v0 = ua ) "
  (611 880 962 1023) () 57 0)
 (891 equiv "( move 2 , ul ; move ua , 4 ; move 4 , ul - ua ) " (892 2010) ()
  2010 0)
 (892 uniq "( move ua , ul ; move ua , 4 ; move 4 , ua - 4 ) " (891) () -1 0)
 (893 equiv "( pen ua * 4 ; pen 3 * 2 ; move ul - ua , 3 ) " () () 101 0)
 (894 equiv "( ( move ua , ul ; move 3 , ul ) ; move ul , 0 ) " () () 93 0)
 (895 equiv "( move 3 + ul , ul ; move ua , 4 ; v0 = ua ) " () () 59 0)
 (896 uniq "( move 3 , ua - 4 ; move ul , 4 ; move ua , ul ) " (1949 2120) ()
  -1 0)
 (897 uniq "( move ua , 2 ; ( move ua , 4 ; move ul , ul ) ) " () () -1 0)
 (898 equiv "( move 4 , ua ; v0 = 4 ; move ul - ua , ul ) " (2218 2397) ()
  2594 0)
 (899 equiv "( pen ua - ul ; move 2 , 0 ; move ua - 2 , ul ) "
  (1807 1865 1883 1938 2442 3039) () 3039 0)
 (900 uniq "( move ua , 4 ; ( move ul , ua ; move ua , 4 ) ) " () () -1 0)
 (901 equiv "( move ua , ua + ul ; pen 3 * 2 ; move ul , 0 ) " (911) () 3066
  0)
 (902 uniq "( move 0 - ua , ul ; pen ua ; move ul - 2 , 3 ) " (2499) () -1 0)
 (903 uniq "( move ua , ul - 2 ; pen ua + 2 ; move 3 , ua ) " () () -1 0)
 (904 uniq "( pen 3 ; move ua , 0 - ul ; move ul + ul , 2 ) " () () -1 0)
 (905 uniq "( move ua , ua + ul ; pen 4 ; move 3 , ua + 2 ) " () () -1 0)
 (906 equiv "( move ua , 4 ; pen ua + ua ; move 2 + ul , 3 ) " (927) () 503
  0)
 (907 equiv "( pen ul ; move ua , 2 + 2 ; move ua , 4 - ua ) " () () 57 0)
 (908 uniq "( move ua + ul , 2 ; pen ul ; move 3 + 2 , ul ) " () () -1 0)
 (909 uniq "( move ul - ua , 4 ; move ua + 3 , ul ; pen 0 ) " () () -1 0)
 (910 equiv "( v0 = ua ; pen ua ; move v0 , ul / v0 ) " (826) () 114 0)
 (911 uniq "( move ua , 4 + ul ; pen 3 + ul ; move ul , 0 ) " (901) () -1 0)
 (912 uniq "( move ua + ul , 0 ; pen 3 - ul ; move 3 , ul ) " () () -1 0)
 (913 equiv "( pen 2 + ul ; move 3 + ul , 2 ; move ua , ul ) " (2233) () 2378
  0)
 (914 equiv "( move 3 , 0 ; ( v0 = ua ; move v0 , 2 ) ) " () () 2201 0)
 (915 uniq "( move ua + ul , ua ; pen 4 ; move ua , 2 * 2 ) "
  (1661 1698 2308 2631 2755) () -1 0)
 (916 uniq "( move 2 , ua ; pen ua ; move ua / 2 , ul - 2 ) " () () -1 0)
 (917 equiv "( pen ua + 4 ; move 4 , ul ; move 0 - ua , ul ) "
  (1862 1986 2004 2151 2192 2607 2839 2968) () 2151 0)
 (918 uniq "( move 2 - ua , ul ; pen 2 ; move 3 - ua , ul ) "
  (1682 1712 1822 2055 2144 2188 2342 2457 2511 2563 2783 2892 3002 3047) ()
  -1 0)
 (919 equiv "( move 4 , 0 ; pen 4 ; move ua + ul , ul - ua ) " (175 2487) ()
  2487 0)
 (920 equiv "( v0 = 2 ; pen v0 ; move 2 + v0 , v0 ) " () () 13 0)
 (921 uniq "( move ul , ua ; pen ua + 2 ; move 4 * 2 , ul ) " () (1595) -1 0)
 (922 uniq "( move 3 , ua - ul ; pen ua + ul ; move 2 , 4 ) "
  (1701 1802 2000 2366 2384 2592 2666 3000) () -1 0)
 (923 uniq "( pen ua ; move 4 + 3 , ul + ul ; move ul , 2 ) " () () -1 0)
 (924 equiv "( pen ua ; move 2 * 2 , ua + ua ; v0 = ul ) " () () 15 0)
 (925 uniq "( move ua / 3 , 2 ; pen ua + ul ; move 2 , ul ) "
  (2023 2071 2423) () -1 0)
 (926 uniq "( pen ua ; move 2 , 3 ; move 4 + ul , ua - ul ) " (2412) () -1 1)
 (927 uniq "( move ua , 4 ; pen 3 + ul ; move 2 + ul , ul ) "
  (906 1753 1874 2138 2786) () -1 0)
 (928 uniq "( pen 2 ; move 3 , ul ; move ul + ul , 3 + ul ) " () () -1 0)
 (929 uniq "( move ua , 2 / 4 ; pen ua ; move 2 , ua + ul ) "
  (1745 2023 2118) () -1 0)
 (930 uniq "( move 3 , 3 - ua ; pen ua ; move ul , ua + 4 ) " () () -1 0)
 (931 uniq "( pen 3 + 2 ; move ul , ul ; move 3 , ul - ua ) " () () -1 0)
 (932 uniq "( pen 4 ; move 0 , 3 / ua ; move ua + ul , ul ) " () () -1 0)
 (933 uniq "( pen ua ; move ul , 4 ; move ua - 2 , 3 - ul ) " () () -1 0)
 (934 uniq "( move 3 , ul + ul ; pen ua ; move ul - 3 , 3 ) " () () -1 0)
 (935 uniq "( pen ua ; move 3 , ul ; move 4 + 3 , ul + ul ) " (2106 2741) ()
  -1 0)
 (936 uniq "( pen ua ; move 4 , 0 - ul ; move ua / 3 , ul ) " (3091) () -1 0)
 (937 uniq "( pen 3 ; move 2 , 3 / ua ; move ua , ul + ul ) " (2897) () -1 0)
 (938 uniq "( pen ul + ul ; move 3 , ul ; move ua , 3 / 2 ) " () () -1 0)
 (939 uniq "( move ua , ul + ul ; pen 3 ; move 3 , ua / 3 ) "
  (1885 1920 2022 2299 2698) () -1 0)
 (940 uniq "( pen ua + 3 ; move 4 , ul / 2 ; move ua , ul ) " (333 2378 2819)
  () -1 2)
 (941 uniq "( move 3 , 3 + ul ; pen ua ; move ua / 4 , ua ) " (2860) () -1 0)
 (942 uniq "( pen 4 ; move 4 , 3 ; move ul + ul , ua + ul ) " (985) () -1 0)
 (943 equiv "( move ul / ua , 3 ; pen ua + ua ; move 4 , 4 ) " () () 160 0)
 (944 uniq "( move ul , ua ; pen ua - 2 ; move 4 , 4 / ua ) " () () -1 0)
 (945 uniq "( pen ul ; move ua + 2 , ul / 3 ; move 4 , ul ) " () () -1 0)
 (946 uniq "( pen ua ; move ua , ul / 4 ; move 2 , 3 / ua ) "
  (1774 1781 1910) () -1 0)
 (947 equiv "( pen 2 / ua ; v0 = ul - ua ; move 4 , ua ) " () () 0 0)
 (948 equiv "( move ua , ua + 2 ; move 0 , ua ; move ua , ul ) " (225 792) ()
  87 0)
 (949 uniq "( ( pen 2 ; move ua + 3 , ul ) ; move ul , ul ) " () () -1 0)
 (950 uniq "( move 4 , ua / 3 ; pen ua * 2 ; move ul , ul ) "
  (2250 2367 2532) () -1 0)
 (951 uniq "( pen 4 ; move ua , ul / ua ; move 2 , ua / 4 ) "
  (876 1781 2248 3031) () -1 0)
 (952 equiv "( move ua , 0 ; move ua - ul , 2 ; move ul , ua ) " () () 44 0)
 (953 uniq "( move ul - ua , ua ; move 4 , 0 ; move ua , ul ) "
  (223 274 2225) () -1 0)
 (954 equiv "( ( move ua , ua ; move 4 , ul ) ; pen ua / 4 ) " (659) () 51 0)
 (955 equiv "( move ua - ul , ua ; move ua , ul ; v0 = 0 ) " (275) () 224 0)
 (956 uniq "( move ua , ul ; move ua , ua / 3 ; move ul , 0 ) " (1024) () -1
  0)
 (957 uniq "( move ua + ul , ul ; move 2 , 3 ; move ua , ul ) "
  (1721 2126 2196 3023) () -1 0)
 (958 equiv "( move ua - ul , 4 ; move 0 , ul ; move ua , ul ) " (224 2888)
  () 479 0)
 (959 equiv "( move ua , ua ; move 3 - ul , ul ; move ua , 3 ) " () () 2580
  0)
 (960 equiv "( move ua , ua ; move 4 , ul ; move 0 , ul / ua ) " (871 1710)
  () 51 0)
 (961 uniq "( pen 4 + 3 ; pen ua ; move ua + ul , 2 / ua ) " () () -1 0)
 (962 equiv "( move ua , 3 + ul ; move ua , 4 ; move ul , ua ) " (890) () 199
  0)
 (963 uniq "( move ua , 2 + ul ; move ul , 4 ; move ua , ul ) "
  (2346 2351 2361) () -1 0)
 (964 equiv "( move ul , ul ; move ua - ul , ua ; move 4 , 2 ) " () () 54 0)
 (965 uniq "( move ua , ul - 3 ; move ul , ul ; move ua , 3 ) "
  (1949 2133 2249 2280 2351 2507 2544 2580 2610 2684 2831 2875 2888 2981
   3006)
  () -1 0)
 (966 uniq "( move 4 , ua ; move ua , ul + ul ; move ua , 4 ) " (203 245) ()
  -1 0)
 (967 uniq "( move ua , ul ; move ul , ul - 3 ; move 4 , ua ) " (1024 1884)
  () -1 0)
 (968 equiv "( move ua , ua ; move ua , ul - 3 ; v0 = ul ) " () () 134 0)
 (969 equiv "( v0 = 4 ; move v0 , v0 ; move ua , v0 ) " (1287 1500) () 31 0)
 (970 equiv "( v0 = 2 ; ( pen 4 ; move 3 + v0 , ul ) ) " () () 302 0)
 (971 uniq "( move 4 , ua ; move 4 + ul , ul ; move ul , ul ) " (1021) () -1
  0)
 (972 uniq "( pen ua ; move ul - ua , 0 ; move ua , ua + 2 ) " () () -1 0)
 (973 uniq "( move 4 , ul ; move ul , ul ; move ua , 4 - ul ) " () () -1 0)
 (974 equiv "( move ua , ul - 4 ; v0 = ul ; move ua , ul ) " (247 872 2888)
  () 247 0)
 (975 uniq "( move ua , 4 ; move ua / 4 , ul ; move ua , ul ) " () () -1 0)
 (976 equiv "( pen 4 * 3 ; ( move ua , ua + ul ; pen ua ) ) " () () 22 0)
 (977 uniq "( move ua , ua ; pen ua ; move ua + ul , 3 + 2 ) "
  (168 1043 2048) () -1 0)
 (978 equiv "( move ul - ua , 0 ; move ua , ul ; pen ua + 3 ) " (164 223) ()
  223 0)
 (979 equiv "( move ua , ul ; pen ua + ul ; move 2 , ua + 3 ) "
  (994 1036 2420 2499 2678) () 2499 0)
 (980 uniq "( pen ua + ua ; move ul , 0 ; move 4 , ua - ul ) " () (1277) -1
  0)
 (981 equiv "( pen ua * ua ; move 3 + ul , 0 ; move ua , ul ) " (320 348) ()
  3091 0)
 (982 uniq "( move ua , ua - 2 ; pen ua ; move ul , 2 + ul ) " (1945 2132) ()
  -1 0)
 (983 equiv "( move ua , 0 ; pen ua + ul ; move ul + ul , 4 ) "
  (173 2162 2278 2517 2591 2628 2695 2737 2760 2933 2989 2999 3060) () 764 0)
 (984 equiv "( ( pen ua * 2 ; move ua , ul / ua ) ; pen 4 ) " () () 114 0)
 (985 equiv "( pen ul ; move 4 , 0 ; move ua + ul , ua + ul ) "
  (175 942 1042) () 175 0)
 (986 uniq "( move 2 + ul , ua + ua ; pen ua ; move 4 , ua ) " () () -1 0)
 (987 equiv "( move ua , 3 + 2 ; v0 = ul ; move 4 , v0 ) " () () 806 0)
 (988 equiv "( move ua , ul ; move ua - ul , ua + 2 ; pen 3 ) " (1747) ()
  1747 1)
 (989 equiv "( pen ua * ua ; move 2 - ua , 2 ; move ua , ul ) "
  (1674 1972 2056) () 2056 0)
 (990 uniq "( pen ua + 2 ; move ua , ua ; move ul - 3 , ul ) " (251 385) ()
  -1 0)
 (991 uniq "( pen 2 ; move 3 , ul - ua ; move ua , ua + ul ) " () () -1 0)
 (992 uniq "( pen 2 ; move 2 + ul , ua + ul ; move ul , ul ) " () () -1 0)
 (993 uniq "( move 2 , 4 ; pen ua + ua ; move ua , ua * ua ) "
  (2258 2539 2734) () -1 0)
 (994 uniq "( move ua , ul ; pen ua + ul ; move 2 , 4 + ul ) "
  (979 1036 2032 2678) () -1 0)
 (995 equiv "( move ua , ua * 4 ; pen ua + ul ; move ua , 2 ) "
  (1741 1956 2048 2441) () 2356 0)
 (996 equiv "( move ua , ua + ul ; pen 2 - ul ; move 4 , ua ) " () () 1 0)
 (997 equiv "( move 2 + ul , ul ; pen ua - ul ; move 2 , ul ) " (329) () 2833
  0)
 (998 uniq "( move 4 , ua ; v0 = 3 / 2 ; move ua , v0 ) " (1061) () -1 0)
 (999 equiv "( pen ul + ul ; move ua , ua ; v0 = ua - 2 ) " () () 14 0)
 (1000 uniq "( pen ua ; move ua , ul ; move 4 + ul , ua + 4 ) " () () -1 0)
 (1001 equiv "( move ua , ua * 3 ; pen ua ; move 3 + ul , ul ) " (2003) ()
  1913 0)
 (1002 uniq "( pen ul + ul ; move ua , ua ; move ul , 2 / 3 ) " () () -1 0)
 (1003 equiv "( move ua + 4 , ul - 2 ; pen ul ; move ul , ul ) " () () 392 0)
 (1004 uniq "( move ua , 4 ; move 4 + ul , ua * ua ; pen ua ) " () () -1 0)
 (1005 uniq "( move ua , 2 + ul ; pen ua ; move ul , ul / 4 ) " (1945) () -1
  0)
 (1006 equiv "( pen 4 + ul ; move ua , 4 + ul ; move ul , ul ) " (1720) ()
  1761 0)
 (1007 uniq "( move 4 , ul + ul ; pen 4 ; move ua + ul , ul ) " () () -1 0)
 (1008 equiv "( ( move ua , ul ; v0 = 4 ) ; move v0 , 2 ) " () () 54 0)
 (1009 equiv "( ( move 4 , 4 ; pen 3 ) ; pen 2 ; move 3 , ul ) " (2119) ()
  2119 0)
 (1010 equiv "( ( pen ua ; move ua , ul - ua ) ; move ua , 3 ) " (351 2039)
  () 2622 0)
 (1011 equiv "( pen ua + ul ; ( move 2 , ul ; move ua , ul ) ) " (1057) ()
  2297 0)
 (1012 equiv "( pen ua ; ( move 4 , ua ; move ua , ua + ul ) ) " () () 3091
  0)
 (1013 equiv "( move ul , 4 - ul ; pen ua ; move ua , 4 - ul ) " (362) () 67
  0)
 (1014 equiv "( move 4 , ul ; pen ua ; move ua / 3 , ul - ua ) " () () 335 0)
 (1015 equiv "( pen ul / ua ; move ua , ul - 4 ; move 3 , ul ) " (1018 1798)
  () 0 0)
 (1016 equiv "( pen ul / ua ; v0 = 2 - ul ; move ua , ul ) " () () 0 0)
 (1017 uniq "( move 2 + ul , 4 / ua ; move ua + 3 , 4 / 2 ) " (124 2595 3026)
  () -1 0)
 (1018 equiv "( pen ul / ua ; move ua , ul - 4 ; move ul , 4 ) " (1015) () 0
  0)
 (1019 equiv "( pen ua + ua ; move ul - ua , 3 + ul ; pen 0 ) " () () 2754 0)
 (1020 uniq "( move 3 , 4 ; move 4 , 2 - 3 ; move 3 + 2 , 2 ) " () () -1 0)
 (1021 equiv "( move ua , ua ; move 2 + ul , ul ; move ul , ua ) " (971) ()
  51 0)
 (1022 uniq "( move 3 + 2 , 4 ; ( move 3 , 2 ; move 3 , 2 ) ) " () () -1 0)
 (1023 equiv "( move ua , ul + ul ; move ua , ul ; v0 = ua ) " (276 880 890)
  () 87 0)
 (1024 uniq "( move ua , ul ; move ua , ul - 3 ; move ul , ul ) "
  (956 967 2994) () -1 0)
 (1025 equiv "( pen 3 / ua ; pen ua + ul ; move ua - ul , 4 ) " () () 2754 0)
 (1026 uniq "( move ua , ua ; move ul , 4 / ua ; move ua , ul ) " () () -1 0)
 (1027 uniq "( pen ul + ul ; move 4 * 2 , ua * ua ; pen ul ) " () () -1 0)
 (1028 equiv "( v0 = ua ; move ua , 0 ; move ul + v0 , 2 ) " (1059) () 163 0)
 (1029 equiv "( v0 = ua - 2 ; move ua , ul ; move v0 , 0 ) " () () 1 0)
 (1030 equiv "( pen ul ; ( pen ul / ua ; move ua + 2 , ua ) ) " () () 0 0)
 (1031 uniq "( move ua + ul , 2 ; v0 = ua ; move v0 , 2 ) " (1060 1063) () -1
  0)
 (1032 equiv "( move ua , ua + ul ; v0 = 4 ; move v0 , 2 ) " (1033) () 54 0)
 (1033 equiv "( move ua , ua - 4 ; v0 = ua ; move v0 , 2 ) " (1032 2374) ()
  179 0)
 (1034 equiv "( move ua , 2 ; v0 = ul ; move 4 , ua + v0 ) " () () 55 0)
 (1035 equiv "( pen ul / ua ; ( pen ul ; move ua + 4 , ul ) ) " () () 1 0)
 (1036 equiv "( move 2 , ul ; pen ua + ul ; move ua , ua + ul ) "
  (282 676 979 994 2707 2858) () 2707 0)
 (1037 equiv "( move ua , 4 ; v0 = ul ; move ua + v0 , 3 ) " () () 2842 0)
 (1038 uniq "( pen ua + ul ; move ua , ul ; move ua + ul , 3 ) " (253 282) ()
  -1 0)
 (1039 uniq "( pen ua ; move ua + ul , ua ; move ua , ua - 4 ) "
  (1046 2141 2272 2434 2468) () -1 0)
 (1040 equiv "( move ul - ua , ua ; pen ul ; move ua , 2 - ua ) " (227) ()
  227 0)
 (1041 equiv "( pen ua + ul ; move ul , 2 ; move ua , ul - ua ) " () () 1654
  0)
 (1042 equiv "( pen ul ; move ua , 2 ; move ua + ul , ul + ul ) " (464 985)
  () 1954 0)
 (1043 uniq "( move ua , ua ; pen ua ; move 4 + ul , ul + ul ) " (977 1783)
  () -1 0)
 (1044 equiv "( pen 2 ; move ul + ul , ul ; move ua , ul - ua ) " () () 2856
  0)
 (1045 equiv "( ( pen 3 ; move 4 , 0 ) ; pen 3 ; move ul , ul ) " (2322) ()
  2322 0)
 (1046 equiv "( pen ua ; move ul + ul , ua ; move ua , ua * 4 ) "
  (265 1039 2141) () 1700 0)
 (1047 equiv "( move ua , ul ; move 4 , ua + ul ; pen ul + ul ) " (241) () 93
  0)
 (1048 equiv "( move 3 + ul , ul ; move ua , ua * ua ; pen ul ) " (2724) ()
  2724 0)
 (1049 uniq "( pen 4 ; move ua , ua - ul ; move ul , ul + ul ) "
  (1720 2057 2294) () -1 0)
 (1050 equiv "( move 4 , ua ; pen ua - ul ; move ul - ua , ul ) " (358 2416)
  () 2416 1)
 (1051 uniq "( pen ua * ua ; move ul , ul ; move ua , ul / 2 ) " () () -1 0)
 (1052 equiv "( pen ul / ua ; move 3 + ul , ua ; move ul , ul ) " () () 0 0)
 (1053 uniq "( move ul , ul / 3 ; pen ua + ul ; move ua , ul ) "
  (1679 1878 2101 2168 2259 2395 2669 2803 2809) () -1 0)
 (1054 uniq "( move ua + ul , ua / 4 ; pen ul ; move ul , ul ) "
  (1870 1995 2019 2319) () -1 0)
 (1055 equiv "( pen ul / ua ; move ua , ua - ul ; v0 = ul ) " () () 0 0)
 (1056 uniq "( v0 = 4 ; move 4 * 2 , 2 ; move v0 , v0 ) " () () -1 0)
 (1057 equiv "( pen ua - ul ; ( move ul , ul ; move ua , ul ) ) "
  (721 1011 2590) () 2830 0)
 (1058 uniq "( move ua , ul / ua ; ( pen ul ; move ua , ul ) ) " () () -1 0)
 (1059 equiv "( v0 = ua ; move ua , ua ; move ul + v0 , 2 ) " (1028) () 163
  0)
 (1060 equiv "( move ua + ul , ul ; v0 = ua ; move v0 , 2 ) "
  (1031 1063 1367) () 1711 0)
 (1061 equiv "( move ua , ua ; v0 = 3 + ul ; move ua , v0 ) " (998) () 46 0)
 (1062 equiv "( move ua , ul ; v0 = ua - ul ; move v0 , 2 ) " () () 1747 0)
 (1063 equiv "( move ua + ul , ul ; v0 = 3 ; move v0 , ua ) " (1031 1060) ()
  1 0)
 (1064 equiv "( v0 = ul ; move ua , ul ; move 3 + ul , v0 ) " () () 93 0)
 (1065 equiv "( move 4 , ua ; v0 = ua + ul ; move v0 , ul ) " () () 175 0)
 (1066 uniq "( move ua + ul , ua ; pen ua ; move ul , ua * ua ) " () () -1 0)
 (1067 uniq "( move ua + ul , 2 - 3 ; move ua + ul , 3 - ul ) " () () -1 0)
 (1068 uniq "( move 4 + 4 , 4 + ul ; move ua + ul , ua * ua ) " () () -1 0)
 (1069 equiv "( move 4 , ul - 2 ; move 3 , 4 ; move ua - 3 , 0 ) " (2543) ()
  1819 0)
 (1070 uniq "( move ua / 2 , 0 ; move 4 + 3 , 2 ; move ul , 4 ) " () () -1 0)
 (1071 uniq "( move 2 , 2 ; move 2 - 4 , 3 ; move ua + ul , 4 ) " () () -1 0)
 (1072 uniq "( ( move 3 , 3 / ua ; pen 3 ) ; move 4 , 4 / 2 ) " () () -1 0)
 (1073 equiv "( ( pen 2 ; move ua - ul , 4 ) ; pen 0 ; pen ul ) " () () 216
  0)
 (1074 uniq "( move 4 , 3 ; move ul - ua , 3 + 3 ; move 2 , 4 ) " () () -1 0)
 (1075 uniq "( move 3 / 4 , 2 + 2 ; move ua , ul ; move 4 , 2 ) " () () -1 0)
 (1076 equiv "( move 3 + ul , 2 / 4 ; move ua , 2 ; move 4 , 3 ) " (1888) ()
  2720 0)
 (1077 uniq "( v0 = 4 ; pen v0 ; move v0 , v0 * v0 ) " (1364) (1364) -1 0)
 (1078 uniq "( move 3 , 2 ; move 4 + 3 , ul ; move 3 / ua , 3 ) " () () -1 0)
 (1079 uniq "( ( move 2 , 3 ; move 3 , ul ) ; move 4 + 3 , ua ) " () () -1 0)
 (1080 equiv "( v0 = ua + 2 ; ( pen v0 ; move v0 , 0 ) ) " () () 1700 0)
 (1081 equiv "( ( move 4 * 2 , ua ; move 3 , 4 ) ; v0 = ua ) " () () 117 0)
 (1082 equiv "( ( move ul , ua ; pen ua ; move 4 , ul ) ; pen 0 ) " () () 328
  0)
 (1083 equiv "( move ul - ua , ul ; v0 = ua ; move v0 , ul ) " () () 278 0)
 (1084 equiv "( ( pen ua ; move ua , ua ) ; move 3 , 2 ; pen ul ) " (322) ()
  2670 0)
 (1085 equiv "( ( pen ua ; move 2 , 3 ; pen ua ) ; move ua , ul ) "
  (1805 1809) () 1809 0)
 (1086 equiv "( move 3 , 2 ; ( pen ul ; pen ua ) ; move ua , ul ) "
  (1980 2810) () 2810 0)
 (1087 equiv "( v0 = ul ; move ua , 0 ; move 3 , v0 + v0 ) " () () 24 1)
 (1088 uniq "( move ua , 3 ; move 0 - ul , 2 ; move ua + 3 , 0 ) " () () -1
  0)
 (1089 uniq "( move ua + ul , 0 ; move 0 , 2 ; move 3 , 2 / ua ) " () () -1
  0)
 (1090 uniq "( ( pen 2 + ul ; move 4 , ua * 2 ) ; move 2 , 4 ) " () () -1 0)
 (1091 equiv "( move ua + ul , 2 ; v0 = 4 ; move v0 , v0 ) " () () 2341 0)
 (1092 uniq "( v0 = ua + ul ; move v0 , 4 ; move v0 , 2 ) " () () -1 0)
 (1093 uniq "( move ua + ul , ul ; move 2 , 3 ; move 4 , 2 + 2 ) "
  (1892 2264) () -1 0)
 (1094 uniq "( pen 2 ; ( move 4 , 3 / 2 ; move ul / ua , 2 ) ) " () () -1 0)
 (1095 uniq "( move 2 , ua ; move 2 , 4 + 2 ; move ua , 3 - ul ) " () () -1
  0)
 (1096 uniq "( move ua , 0 ; move 2 + ul , ul - 3 ; move 4 , 4 ) " () () -1
  0)
 (1097 uniq "( move 4 , ua ; move 0 - 4 , 2 ; move 4 + ul , ua ) " () () -1
  0)
 (1098 uniq "( move ua , 0 ; ( move ua / 4 , 0 ; move ua , 2 ) ) " () () -1
  0)
 (1099 equiv "( v0 = ua ; ( move v0 , v0 ; move ua , 3 ) ) " () () 45 0)
 (1100 uniq "( move 4 , 3 ; move 3 - ul , 3 - ul ; move ua , 0 ) " () () -1
  0)
 (1101 uniq "( move ul , 3 / 2 ; move ua , 2 ; move 2 + ul , 4 ) "
  (2068 2694 2997) () -1 0)
 (1102 uniq "( move 4 , 3 + ul ; move 2 , ul ; move 3 + 3 , ul ) " () () -1
  0)
 (1103 uniq "( move 4 , 0 ; move 3 , 4 + 4 ; move ul - ua , ul ) " () () -1
  0)
 (1104 equiv "( pen ua ; pen 3 ; ( move ua + ul , ul ; pen 2 ) ) " () () 104
  0)
 (1105 equiv "( move ua , 2 - ua ; move ua + 3 , 4 ; v0 = 4 ) " (538) () 2396
  0)
 (1106 equiv "( v0 = ul ; ( move ua , v0 ; move 4 , v0 ) ) " () () 93 0)
 (1107 equiv "( move 2 , 4 ; move ua - ul , 2 ; move 4 , ua * 3 ) " () () 124
  0)
 (1108 equiv "( move ua , ul ; ( move 2 + ul , 0 ; move 4 , 4 ) ) " () ()
  1892 0)
 (1109 uniq "( move 4 + ul , ul ; move 4 , 3 ; move ua + 4 , 3 ) " () () -1
  0)
 (1110 uniq "( move ua , 3 + 3 ; move 4 - ul , 3 ; move 4 , ul ) " () () -1
  0)
 (1111 uniq "( move 2 , 3 ; ( move 2 , ul + ul ; move ua , 3 ) ) " () () -1
  0)
 (1112 uniq "( ( move ua , 2 ; move 3 , ul ) ; move 2 , 4 + ul ) " () () -1
  0)
 (1113 equiv "( ( pen ua ; pen 4 ) ; move 4 + ul , ul ; pen ua ) " () () 302
  0)
 (1114 uniq "( move 4 , 4 ; ( move ul , 2 ; move ua + ul , 4 ) ) " () () -1
  0)
 (1115 equiv "( pen ua + ul ; move ua / 3 , 4 ; move 0 - 2 , 2 ) "
  (1677 1751 2077 2333 2456 2836 3035 3083) () 2836 0)
 (1116 equiv "( v0 = ua ; ( pen 2 ; move v0 , ua + v0 ) ) " () () 14 0)
 (1117 uniq "( ( move 2 , ul ; move ua , 4 / 3 ) ; move ua , 4 ) " () () -1
  0)
 (1118 equiv "( move 4 , 4 / 2 ; move ua , ul ; v0 = ul - 4 ) " () () 56 0)
 (1119 uniq "( pen ua ; move ul - 3 , 0 ; move 4 + 3 , 4 + ul ) " (2158 2853)
  () -1 0)
 (1120 equiv "( move 0 , ua + ua ; ( pen 3 ; move ua , 2 - 3 ) ) " () () 1943
  0)
 (1121 uniq "( move 3 , ua ; pen ua + 2 ; move 4 + ul , 4 - 3 ) " () () -1 0)
 (1122 equiv "( move ua , 0 ; ( pen 3 + 2 ; move ua + ul , 4 ) ) " (2657) ()
  2591 0)
 (1123 uniq "( pen 4 + ul ; move ul - ua , 2 ; move 3 , 3 * 2 ) " () () -1 0)
 (1124 uniq "( pen ua ; ( move 0 - ul , 2 ; move 4 + ul , 2 ) ) " () () -1 0)
 (1125 uniq "( move 2 , ua / 3 ; pen ua * 3 ; move 3 , 3 + ul ) "
  (1893 2600 2769) () -1 0)
 (1126 uniq "( pen 3 * 2 ; move 3 , 2 - ua ; move ua , ul / 3 ) " () () -1 0)
 (1127 uniq "( move ul + ul , ua - ul ; move ua + 2 , ua * ua ) " () () -1 0)
 (1128 equiv "( ( move ua , ua ; pen ua ; move ul , 4 ) ; pen ua ) " () ()
  2628 0)
 (1129 uniq "( pen 3 ; ( move ua , ul ; move ua + 2 , 4 * 2 ) ) " () () -1 0)
 (1130 equiv "( pen 3 ; ( move ul - 4 , 0 ; move ul , ul - 2 ) ) "
  (2322 2584) () 2584 0)
 (1131 uniq "( move 4 , 2 ; ( pen ua + ul ; move 3 , 3 + ul ) ) " () () -1 0)
 (1132 equiv "( move ua , ua ; v0 = ua + 4 ; move v0 , v0 ) " (1139) () 2579
  0)
 (1133 uniq "( pen ua ; move 3 * 3 , ua + 4 ; move 4 / 3 , ul ) "
  (2093 2515 2722 2753) () -1 0)
 (1134 uniq "( ( pen 4 ; move ua , 2 + ul ) ; move 3 - ua , 4 ) " () () -1 0)
 (1135 uniq "( pen 4 ; move ua , 3 - 2 ; move 4 - ul , ul / 3 ) "
  (1760 2179 2235 2362) () -1 0)
 (1136 uniq "( move 4 + 4 , ul / ua ; pen 4 ; move 4 , ua - 2 ) " () () -1 0)
 (1137 equiv "( move 4 , ul ; ( move ua , 2 + 2 ; pen ul / 2 ) ) " () () 59
  0)
 (1138 uniq "( move 2 , 2 ; move ul , 2 ; move ua + ul , ua + 2 ) " () () -1
  0)
 (1139 equiv "( move ua , ul ; v0 = 3 + ul ; move v0 , v0 ) " (1132) () 58 0)
 (1140 equiv "( v0 = 3 + ul ; move ua , ul ; move v0 , v0 ) " () () 58 0)
 (1141 uniq "( pen 4 ; move 3 * 2 , ul / ua ; move 4 + ul , 4 ) "
  (1887 2255 2491 2849) () -1 0)
 (1142 uniq "( move ua , 2 / ua ; move ua , 2 ; move 0 , ua / 2 ) " () 
  (1338) -1 0)
 (1143 equiv "( move 2 , ul - ua ; move 4 + ul , ua ; move 3 , 0 ) " () () 1
  0)
 (1144 uniq "( move 2 - ul , ul ; ( pen 4 ; move ua , 3 - 4 ) ) " () () -1 0)
 (1145 uniq "( pen 4 ; ( move 3 , ua * 3 ; move 3 , ua * ua ) ) " () () -1 0)
 (1146 uniq "( move 0 , 2 ; move 4 , ul ; move ua + ul , ul - 2 ) " () () -1
  0)
 (1147 uniq "( move ua , 2 / ua ; v0 = ua ; move ua , 0 - 2 ) " () () -1 0)
 (1148 equiv "( move 4 , ua ; move 2 - ua , ul ; move ul , 0 - 3 ) " () ()
  2594 0)
 (1149 equiv "( move 3 + 2 , ua ; move ua - ul , ul ; v0 = 0 ) " (1693) ()
  2339 1)
 (1150 equiv "( ( move ua , ua - 3 ; move 4 , 4 ) ; pen 4 - ul ) " () () 677
  0)
 (1151 uniq "( move ua - 2 , 2 ; move ua , ua + 2 ; v0 = ul ) " (1223) () -1
  0)
 (1152 uniq "( move 3 , 4 ; ( pen 4 ; move ul - 3 , ul + ul ) ) " () () -1 0)
 (1153 uniq "( move 2 , 3 - ua ; move 2 , 3 + ul ; move ua , ul ) " () () -1
  0)
 (1154 uniq "( move ua , ua + ul ; move 4 , 3 ; move 4 , 0 - ul ) " (2985) ()
  -1 0)
 (1155 uniq "( move ul + ul , 2 ; move 3 , 4 / ua ; move ua , 0 ) " () () -1
  0)
 (1156 uniq "( move ul - ua , 0 ; move 3 , ul ; move 3 , 4 + ul ) " () () -1
  0)
 (1157 uniq "( move ua , 2 ; move 2 , ul ; move ua - 3 , 3 - ul ) " () () -1
  0)
 (1158 uniq "( move 4 , 2 ; move ul - ua , ul ; move 2 + ul , 2 ) " () () -1
  0)
 (1159 uniq "( move 4 , 0 ; move ul , ul ; move 4 + ul , 2 + ul ) " () () -1
  0)
 (1160 equiv "( move ua , 0 - 4 ; move ua , 2 ; v0 = ul + ul ) " () () 179 0)
 (1161 uniq "( move 3 , ua ; move 4 , ul ; move ua + ul , 2 * 2 ) " () () -1
  0)
 (1162 uniq "( move 4 , 0 - ua ; move 4 , ul ; move ul + ul , 3 ) " () () -1
  0)
 (1163 equiv "( move ua , ul + ul ; ( move ua , 4 ; move 0 , 2 ) ) " () () 52
  0)
 (1164 uniq "( move ua , ul - 4 ; move 4 , ul ; move 0 , ua - 4 ) " () () -1
  0)
 (1165 uniq "( ( move ua - 2 , 0 ; move 3 , ul ) ; move ua , ul ) " (2492) ()
  -1 0)
 (1166 uniq "( move 3 , 3 - ul ; move 2 , 4 ; move ua , ua * ua ) "
  (1826 2088 2282 2764) () -1 0)
 (1167 uniq "( move ua + 2 , ul ; move ul , ua / 4 ; move 4 , 2 ) " () () -1
  0)
 (1168 uniq "( move ua + 3 , ul ; move ua + ul , 4 ; v0 = 3 ) " () () -1 0)
 (1169 equiv "( move ua , ua ; move 4 + ul , 4 ; v0 = ua + 3 ) " () () 142 0)
 (1170 equiv "( move ua , 4 ; move ua , 3 - ul ; v0 = 2 - ua ) " () () 1650
  0)
 (1171 uniq "( move ul , 0 ; ( move 3 , ul ; move ua , ua + 4 ) ) " () () -1
  0)
 (1172 uniq "( v0 = 4 + 3 ; move v0 , v0 ; move v0 , 3 ) " () () -1 0)
 (1173 equiv "( ( pen ul ; pen ul ; pen 3 ) ; move ua + ul , ul ) " () () 104
  0)
 (1174 uniq "( ( move ua , ul ; move 4 + ul , 2 ) ; move 3 , ua ) " () () -1
  0)
 (1175 equiv "( v0 = ua + ul ; pen v0 ; move v0 + 2 , ul ) " (546) () 99 0)
 (1176 equiv "( ( move ua , ul ; v0 = 3 ) ; move ua , ua + 2 ) " () () 85 0)
 (1177 uniq "( ( move ua , ua ; move ua , ua / 4 ) ; v0 = 0 ) " (811) () -1
  0)
 (1178 uniq "( pen ua - 3 ; v0 = ul ; move ua , v0 + v0 ) " () () -1 0)
 (1179 uniq "( move ua , 4 ; move ul / 2 , 4 + ul ; move 4 , ul ) " () () -1
  0)
 (1180 uniq "( move ul - ua , ua ; move 3 + 3 , 0 - ul ; pen 2 ) " () () -1
  0)
 (1181 uniq "( ( move ua , 3 * 3 ; move ul , ul ) ; move ua , 3 ) " () () -1
  0)
 (1182 uniq "( move 2 - ul , 0 ; pen ua ; move 2 + ul , 4 + ul ) " () () -1
  0)
 (1183 uniq "( pen 2 ; move ua , ua * ua ; move ua + 3 , 2 * 2 ) " () () -1
  0)
 (1184 uniq "( move ul , ul ; ( move 4 + 3 , ul ; move ua , 4 ) ) " () () -1
  0)
 (1185 uniq "( move ua + ul , 0 - 2 ; pen 2 ; move ua / 4 , ua ) " (2234) ()
  -1 0)
 (1186 equiv "( ( move ua , 4 ; move 4 , ua + ul ) ; v0 = ua ) " () () 60 0)
 (1187 uniq "( pen 3 - ul ; move 2 + ul , 2 + ul ; move 2 , ul ) " (1762) ()
  -1 0)
 (1188 equiv "( v0 = ua + 4 ; pen ul / v0 ; move ua , v0 ) " () () 0 0)
 (1189 equiv "( pen 4 * 2 ; move 3 + ul , ua ; move 0 - ul , ua ) " () () 15
  0)
 (1190 equiv "( pen ua / 2 ; ( move ua , ua - ul ; move 0 , 0 ) ) " () ()
  1943 0)
 (1191 uniq "( move ua + ul , ul - 3 ; pen 2 ; move ua + 4 , 3 ) " (2234) ()
  -1 0)
 (1192 equiv "( v0 = ul / ua ; pen v0 ; move v0 - ua , 4 ) " () () 0 0)
 (1193 uniq "( pen ua - 3 ; move ul , 0 ; move 4 + 4 , ua - ul ) " () () -1
  0)
 (1194 uniq "( pen ua + 3 ; ( move ua , 0 ; move ul , 3 + ul ) ) " (1812) ()
  -1 0)
 (1195 equiv "( v0 = ul ; pen v0 / 4 ; move v0 * ua , ua ) " () () 0 0)
 (1196 uniq "( move ul - ua , ul ; move 4 + 3 , ul - 2 ; pen 3 ) " () () -1
  0)
 (1197 equiv "( pen 4 ; move ua + ul , 3 + ul ; v0 = 2 + ul ) " () () 1663 0)
 (1198 equiv "( pen ua ; move ua + 4 , 4 + 3 ; v0 = ua + ul ) " () () 2683 0)
 (1199 uniq "( move 3 , ul ; ( pen ua + ul ; move 2 , 0 - ul ) ) "
  (1810 2478 2833) () -1 0)
 (1200 equiv "( move 4 , ul / 3 ; ( move ua , ul ; v0 = ul ) ) " () () 1981
  0)
 (1201 equiv "( pen ul / ua ; move ua + 2 , 4 - 3 ; v0 = ua ) " () () 0 0)
 (1202 equiv "( pen ua ; ( move ua , 2 - ul ; move 2 + ul , 4 ) ) " (1664) ()
  1764 0)
 (1203 uniq "( pen 3 + ul ; move ua / 2 , ua / 4 ; move 2 , ul ) "
  (1728 2181) () -1 0)
 (1204 uniq "( move 3 - ul , ua + 4 ; pen ua ; move ua / 3 , 4 ) " () () -1
  0)
 (1205 equiv "( move 2 - ua , ua ; move ul , 0 ; move ua , ua + 2 ) " 
  (2225) () 2225 0)
 (1206 uniq "( ( move 2 , ua ; pen ua / 2 ) ; move ul + ul , 2 ) " () () -1
  0)
 (1207 uniq "( move 4 + 2 , ul ; pen ua * 4 ; move ul + ul , 4 ) " () () -1
  0)
 (1208 equiv "( ( pen ul / ua ; move ul - ua , 0 ) ; move 3 , 3 ) " () () 0
  0)
 (1209 uniq "( move ua , ul + ul ; ( pen ua ; move 3 + 3 , 4 ) ) " () () -1
  0)
 (1210 uniq "( pen 2 + ul ; move ua + ul , ul / 3 ; v0 = 4 ) " () () -1 0)
 (1211 uniq "( move 2 - ua , ul / ua ; pen 4 ; move ua - 4 , 4 ) " () () -1
  0)
 (1212 uniq "( move ua , 4 ; ( pen ua * 3 ; move ua , ua - 2 ) ) "
  (2441 2675) () -1 0)
 (1213 uniq "( ( move 2 , 4 ; pen 3 + ul ) ; move ua , ua - ul ) " () () -1
  0)
 (1214 equiv "( ( v0 = 3 ; pen v0 ) ; move v0 * v0 , 0 ) " () () 1814 0)
 (1215 equiv "( ( pen ua ; move 2 - ul , ua ) ; move 3 , ua * 4 ) " () () 15
  0)
 (1216 uniq "( move 4 , ua - ul ; ( pen 3 + ul ; move 3 , ul ) ) " (1315) ()
  -1 0)
 (1217 uniq "( move ua - 3 , 0 ; move ua , ua + ul ; move 4 , ua ) " () () -1
  0)
 (1218 uniq "( move ul , 2 ; move ua + ul , 3 + ul ; move ua , 2 ) " () () -1
  0)
 (1219 uniq "( move ua , ua + 4 ; move 0 - ua , ul ; move ul , 3 ) " () () -1
  0)
 (1220 uniq "( move ua , 3 + ul ; ( pen 3 ; move 4 , ul / ua ) ) " () () -1
  0)
 (1221 equiv "( move 0 , ul + ul ; move ua , 2 + ul ; move 4 , ul ) " () ()
  806 0)
 (1222 uniq "( move ul , ul ; move ua + ul , 4 ; move 3 - ua , 0 ) " () () -1
  0)
 (1223 uniq "( move ua - ul , 0 ; move ua , ua - 2 ; v0 = ul ) " (1151) () -1
  0)
 (1224 equiv "( move 0 , 0 ; ( move ul - ua , ua ; move ua , ul ) ) " () ()
  223 0)
 (1225 equiv "( move ua , 0 - ua ; v0 = ua * ua ; move ua , 4 ) " (1245) ()
  46 0)
 (1226 uniq "( move ua - ul , 3 ; move 0 , ul ; move 4 + ul , ul ) " () () -1
  0)
 (1227 uniq "( move ul / 3 , 0 ; move ua , 2 ; move ua - ul , ul ) " () () -1
  0)
 (1228 uniq "( move 3 , 2 - ua ; move ua , 4 ; move ul , ua + ul ) " () () -1
  0)
 (1229 uniq "( move ua , 4 + ul ; move ul - ua , ul ; move 3 , 2 ) " () () -1
  0)
 (1230 uniq "( move ul , ul ; ( move ua , 0 ; move ua , ua - 2 ) ) " 
  (1711) () -1 0)
 (1231 uniq "( move 3 + ul , ua ; move ua , 4 + 3 ; move ul , ul ) " () () -1
  0)
 (1232 uniq "( move ua , 2 ; v0 = 4 ; move v0 + v0 , v0 ) " () () -1 0)
 (1233 equiv "( move ua + ul , ua + 3 ; v0 = ul ; move ua , 4 ) " () () 1918
  0)
 (1234 uniq "( move 4 + ul , ul - ua ; move 3 , ul ; move ua , 3 ) " () () -1
  0)
 (1235 uniq "( move ul , 3 ; move ua , ul ; move 3 + ul , 4 - ua ) " () () -1
  0)
 (1236 uniq "( move ul , 0 ; ( move ua + ul , ua ; move ua , 4 ) ) " () () -1
  0)
 (1237 uniq "( move 4 + ul , ua ; move 3 , ul ; move ua + ul , 4 ) " () () -1
  0)
 (1238 equiv "( move ua , ul ; move ua - ul , 2 ; v0 = ua / 2 ) " () () 1747
  1)
 (1239 uniq "( move ua - ul , ul ; move ua , 4 ; move 3 , 3 - ul ) " 
  (2501) () -1 0)
 (1240 uniq "( move 2 , ua ; ( move ua , ul ; move 2 + ul , ul ) ) " () () -1
  0)
 (1241 uniq "( move 0 , ua ; move 4 , ul / ua ; move ua , 4 / ua ) " () () -1
  0)
 (1242 uniq "( move 3 , 4 + ul ; move ua , ul ; move ul , 3 - ul ) " () () -1
  0)
 (1243 uniq "( move ul - 4 , ul ; move 3 , 4 + ul ; move ua , ul ) "
  (2912 3015) () -1 0)
 (1244 equiv "( move ua , ul ; move 4 , ua + ul ; v0 = ua * 4 ) " () () 93 0)
 (1245 uniq "( move ua , ua / 3 ; v0 = ua * ua ; move ua , 4 ) " (1225) () -1
  0)
 (1246 uniq "( ( move ua , ul ; move 3 , ul ) ; move ua , ua - 3 ) " () () -1
  0)
 (1247 uniq "( move ua , 4 / ua ; move ua , 4 + 4 ; move ul , ul ) " () () -1
  0)
 (1248 uniq "( move 3 , ua + ul ; ( move 3 , ul ; move ua , ul ) ) " 
  (1315) () -1 0)
 (1249 uniq "( move 2 , ua ; ( move ul , 4 + ul ; move ua , ul ) ) " () () -1
  0)
 (1250 equiv "( pen ua + ul ; v0 = ua ; move v0 , v0 - ul ) " (445) () 2232
  0)
 (1251 uniq "( pen ua ; move ua / 2 , 0 ; move 2 + ul , ua + ul ) "
  (1675 1812) () -1 0)
 (1252 uniq "( ( move ul , ul ; move 4 , ua - 2 ) ; move ua , ul ) " () () -1
  0)
 (1253 equiv "( ( pen ul + ul ; pen ua + 3 ) ; move ua , 4 / 3 ) " () () 2259
  0)
 (1254 equiv "( v0 = ul ; pen v0 + ua ; move ua , v0 / ua ) " () () 114 0)
 (1255 equiv "( ( v0 = ua ; move v0 , v0 ) ; move v0 , 4 ) " () () 46 0)
 (1256 equiv "( move 4 , 0 - 4 ; v0 = ua ; move ua , 2 * v0 ) " () () 3 0)
 (1257 uniq "( move ua , 2 + ul ; pen ua ; move ua - 2 , ua - 4 ) "
  (2802 3078) () -1 0)
 (1258 uniq "( ( move 4 , ua / 3 ; move ul , ua ) ; move ua , ul ) " () () -1
  0)
 (1259 equiv "( move 4 , ua ; pen ua - ul ; move 2 + ul , 2 - ua ) " () ()
  2565 0)
 (1260 equiv "( move 0 - ua , 2 ; move ul - ua , ul / 2 ; pen ul ) "
  (437 2955) () 2955 0)
 (1261 uniq "( move ul + ul , ul ; ( pen ua + ua ; move 2 , 0 ) ) " () () -1
  0)
 (1262 equiv "( move 0 - ul , ua ; pen ua * 2 ; move ua , 4 / ua ) " 
  (2371) () 266 0)
 (1263 equiv "( v0 = 2 ; pen 2 ; move v0 * v0 , ua + v0 ) " () () 13 0)
 (1264 uniq "( pen ua - ul ; move 4 + ul , ua - ul ; move 3 , 2 ) " (295) ()
  -1 0)
 (1265 uniq "( ( pen 3 ; move 4 , 4 ) ; pen ul ; move 2 , 3 + 2 ) " () () -1
  0)
 (1266 uniq "( pen 4 - ul ; move ul - ua , 2 - ul ; move ul , 2 ) " () () -1
  0)
 (1267 uniq "( pen 3 ; move ua - ul , ul - ua ; move 3 , 3 - ul ) " (1844) ()
  -1 0)
 (1268 uniq "( ( pen ua ; move ua , ua ) ; move ua + 4 , ua + 4 ) " () () -1
  0)
 (1269 uniq "( pen ua ; ( move 3 , ua + 3 ; move ua , ua - ul ) ) " (1976) ()
  -1 0)
 (1270 equiv "( move 3 , ua * 4 ; ( v0 = ua ; move v0 , 2 ) ) " () () 2201 0)
 (1271 uniq "( move ul - ua , 0 ; move ua , ul + ul ; move ul , 0 ) " () ()
  -1 0)
 (1272 uniq "( ( move ua + ul , ul ; pen 3 ) ; move ua , ul - 3 ) " () () -1
  0)
 (1273 uniq "( move ua , 2 ; ( move ul - ua , 4 - ua ; pen ul ) ) " () 
  (1490) -1 0)
 (1274 equiv "( move ua , 2 - ua ; move 0 , ua * ua ; move ua , ua ) " () ()
  230 0)
 (1275 uniq "( move ul , 0 ; ( pen 2 ; move 0 , 4 ) ; move ua , 3 ) " 
  (3093) () -1 0)
 (1276 uniq "( ( move 3 , 2 ; move 2 , ua ; pen ua ) ; move 3 , 0 ) " () ()
  -1 0)
 (1277 equiv "( ( pen ua - ul ; move ul , ua ) ; move 4 , ul - 2 ) " () ()
  980 0)
 (1278 equiv "( ( pen ua ; move ua - ul , 3 + ul ) ; v0 = ua ) " () () 2754
  0)
 (1279 uniq "( ( pen ua + ua ; move 2 , ul ) ; move ua , ul / 4 ) " () () -1
  0)
 (1280 uniq "( ( move ul , ua * 3 ; pen ua ) ; move ua + 4 , ul ) " () () -1
  0)
 (1281 equiv "( pen 4 + 2 ; move ua + ul , 3 - ua ; pen ua + ua ) " () () 97
  0)
 (1282 uniq "( ( pen 2 ; move 0 , 3 ; move ua , 4 ) ; move 4 , ul ) " 
  (2471) () -1 0)
 (1283 uniq "( move ul , ua * ua ; move ul , ul ; move ua + 2 , 4 ) " () ()
  -1 0)
 (1284 equiv "( move ua , ua ; move ua , 3 - ul ; v0 = ul + ul ) " () () 44
  0)
 (1285 uniq "( move ua , 4 + ul ; move 4 + ul , ul ; move ul , ua ) " () ()
  -1 0)
 (1286 equiv "( move ua , 0 ; ( pen 2 ; pen ua + 4 ) ; move 2 , 0 ) " () ()
  283 0)
 (1287 uniq "( v0 = 4 ; move v0 , v0 ; move ua , ul + v0 ) " (969) (1500) -1
  0)
 (1288 uniq "( move ua , 4 + ul ; move ul , ua * 4 ; move ua , ul ) " () ()
  -1 0)
 (1289 uniq "( move ul , ua ; move ua , 4 / ua ; move 4 - ul , ua ) " () ()
  -1 0)
 (1290 equiv "( move ua , ul / 3 ; move ua , ua + ul ; v0 = ul ) " (478) ()
  249 0)
 (1291 equiv "( ( move ua , ua ; move ul , ul - ua ) ; move ua , 4 ) " () ()
  2476 0)
 (1292 equiv "( ( pen ul - ua ; pen 4 + ul ) ; move ua - ul , 4 ) " () ()
  2754 0)
 (1293 uniq "( pen ua ; move ua , 3 + ul ; move 0 - ul , ul + ul ) " () () -1
  0)
 (1294 uniq "( move ua , 2 / ua ; v0 = 4 ; move ua + 2 , v0 ) " () () -1 0)
 (1295 uniq "( move ua , ul / 4 ; ( move ua , ul ; move ul , ua ) ) " () ()
  -1 0)
 (1296 uniq "( move ua - 2 , ua ; pen 4 + ul ; move ua , ua - ul ) " () () -1
  0)
 (1297 equiv "( v0 = ua + ul ; pen v0 ; move v0 + 2 , v0 ) " () () 99 0)
 (1298 uniq "( pen 2 ; ( move 2 , 2 ; pen 4 ) ; move 3 , ua * ua ) " () () -1
  0)
 (1299 uniq "( v0 = 4 * 2 ; move ua , v0 ; move 4 , ua + ul ) " () () -1 0)
 (1300 uniq "( pen ua + ul ; move ua - ul , 4 ; move ua + ul , 3 ) " () () -1
  0)
 (1301 equiv "( ( pen ua + ul ; move ua , ua ) ; move ul + ul , 0 ) " () ()
  1700 0)
 (1302 equiv "( move ua , ua + ul ; ( move ua , ul + ul ; pen 0 ) ) " () ()
  85 0)
 (1303 uniq "( pen 4 + 3 ; move ul , ua + ul ; move ua , ua - ul ) " 
  (357) () -1 0)
 (1304 uniq "( move ua + 2 , ua / 3 ; move ua , ua * ua ; pen ul ) " 
  (1842) () -1 0)
 (1305 equiv "( ( pen ua + ul ; move 3 , 3 ; move 3 , 4 ) ; pen 2 ) " 
  (1966) () 1966 0)
 (1306 equiv "( pen 2 ; ( move 3 - ua , ul ; pen 2 ; move 4 , 4 ) ) " 
  (3021) () 3021 0)
 (1307 equiv "( pen ua + ua ; move ul / 2 , ul + ul ; move 4 , ul ) "
  (1876 2618) () 2618 0)
 (1308 equiv "( v0 = ua ; ( move ua , ua * 3 ; move v0 , 3 ) ) " () () 45 0)
 (1309 equiv "( move ul , 3 ; ( v0 = 3 ; move ua + v0 , ul ) ) " () () 190 0)
 (1310 uniq "( pen 4 - ul ; move ua + ul , ul ; move ua - 4 , ul ) " () () -1
  0)
 (1311 uniq "( move ua - ul , ul / 4 ; pen ua - 2 ; move ua , ul ) " () () -1
  0)
 (1312 uniq "( pen ua ; ( move ua + 3 , ul ; move ua , ul + ul ) ) " 
  (1731) () -1 0)
 (1313 equiv "( v0 = ua - ul ; pen v0 * v0 ; move v0 , 3 ) " (1330) () 101 0)
 (1314 uniq "( move ua + ul , ua ; ( move ua + ul , 4 ; pen ul ) ) " 
  (690) () -1 0)
 (1315 uniq "( move ul , ua + ul ; ( pen 3 + ul ; move ua , ul ) ) "
  (1216 1248) () -1 0)
 (1316 equiv "( ( move ul , 0 ; move 0 , ua ) ; pen ua ; move 4 , 2 ) " () ()
  17 0)
 (1317 uniq "( move ua , ua * ua ; ( move ua , ul ; pen ua / 2 ) ) " () () -1
  0)
 (1318 uniq "( ( pen ua - ul ; move ua , ua ) ; move ul , 2 / ua ) " () () -1
  0)
 (1319 equiv "( ( pen ul ; move ua , 4 ) ; move ua + ul , ul + ul ) " () ()
  2139 0)
 (1320 equiv "( pen ua ; ( move ua , ul / 3 ; move ul , ua + ul ) ) " 
  (1688) () 1688 1)
 (1321 equiv "( move ua , ul ; move 0 , 2 ; ( move 4 , 2 ; pen ua ) ) " () ()
  58 0)
 (1322 uniq "( move 3 , ua ; move ua + ul , ua + ul ; move ul , ua ) " () ()
  -1 0)
 (1323 uniq "( move ua + ul , ua ; move ul , 4 ; move ua + ul , ua ) " 
  (662) () -1 0)
 (1324 uniq "( ( ( pen 4 ; move ul , 4 ) ; move 4 , ul ) ; pen 3 ) " () () -1
  0)
 (1325 uniq "( move 3 , ua ; ( pen ua ; move ul , 4 ; move 3 , 2 ) ) " 
  (1906) () -1 0)
 (1326 equiv "( move ua + 4 , ua - ul ; v0 = 3 ; pen 3 / v0 ) " () () 5 0)
 (1327 equiv "( v0 = ul - ua ; move v0 , v0 ; move ua , v0 ) " () () 278 0)
 (1328 uniq "( move 4 , ul ; move ul , ul ; move ua - ul , ua + ul ) " () ()
  -1 0)
 (1329 equiv "( ( move ua , 2 ; move ua , 4 ; pen ul ) ; v0 = 3 ) " () () 52
  1)
 (1330 uniq "( v0 = ua - ul ; move v0 , v0 ; move v0 , ul ) " (1313) () -1 0)
 (1331 uniq "( move ua - ul , ul ; move ul , ul ; move ua , ua / 3 ) " () ()
  -1 0)
 (1332 uniq "( ( move ul - ua , ua ; move ua , ul ) ; move ul , ul ) " () ()
  -1 0)
 (1333 equiv "( move ua - ul , 4 ; v0 = 2 ; move ua , v0 + ua ) " () () 479
  0)
 (1334 equiv "( move 4 , 0 ; move ua , 2 ; ( pen 2 - ua ; pen ul ) ) " () ()
  26 0)
 (1335 equiv "( move ua , 3 + ul ; v0 = ul - 3 ; move ua , v0 ) " () () 1792
  0)
 (1336 uniq "( move ua , ua + ua ; pen ua - ul ; move ua , ua - 4 ) " () ()
  -1 0)
 (1337 uniq "( pen 3 + ul ; move ul , ua * ua ; move ua + ul , ua ) " () ()
  -1 0)
 (1338 equiv "( move ua , 2 / ua ; move ua , ul + ul ; pen ua + ul ) " () ()
  1142 0)
 (1339 equiv "( pen ul / 4 ; ( pen 3 ; move ua , 0 ) ; move ua , 3 ) " () ()
  860 0)
 (1340 uniq "( ( move ua , 4 + 3 ; pen ua ) ; move ul , 3 ; pen 3 ) " () ()
  -1 0)
 (1341 uniq "( pen 4 ; ( move ua , 0 ; move ua / 4 , 2 ; pen ul ) ) " () ()
  -1 0)
 (1342 uniq "( move 0 - ua , ua ; move 4 , 0 ; move 3 - 2 , 2 - 3 ) " () ()
  -1 0)
 (1343 uniq "( move 2 , 2 + ul ; move 0 - 3 , 2 ; move ua , 2 - 3 ) " () ()
  -1 0)
 (1344 uniq "( move ul , ua / 4 ; pen ua ; move ua - ul , ua + ul ) " () ()
  -1 0)
 (1345 uniq "( ( pen 3 ; move ua , 3 ; pen ua / 2 ) ; move ul , 4 ) " () ()
  -1 0)
 (1346 equiv "( ( pen ua * ua ; move ua , ua ) ; move ul , ua + ul ) " 
  (385) () 1812 0)
 (1347 equiv "( move ua , ul ; ( move 0 , ul ; move 4 , ul ) ; pen 0 ) " ()
  () 54 0)
 (1348 uniq "( move 3 , 4 ; ( move ua , 0 ; pen ua ) ; move ul , ua ) " () ()
  -1 0)
 (1349 equiv "( move ua , 2 ; ( v0 = 0 ; pen ul ) ; move ua , ul ) " () () 87
  0)
 (1350 uniq "( v0 = ua ; pen 2 + v0 ; move 2 + v0 , 4 + 2 ) " () () -1 0)
 (1351 uniq "( ( pen ua ; move 2 , ua ) ; move 4 , ul ; move ua , 3 ) " () ()
  -1 0)
 (1352 uniq "( move 3 , ul ; move ul , 3 ; ( pen ua ; move 2 , ua ) ) " () ()
  -1 0)
 (1353 equiv "( ( move ua , ul ; move 4 , 4 ; pen ul ) ; move 0 , ul ) " ()
  () 58 0)
 (1354 uniq "( move 3 , ua ; ( move 2 , 4 ; pen ua ; move ul , ul ) ) " () ()
  -1 0)
 (1355 uniq "( pen 3 ; ( move 3 , 3 ; move ua , ul ) ; move ul , ua ) " () ()
  -1 0)
 (1356 uniq "( move 4 , 4 + 2 ; move ua + 4 , 4 ; v0 = ua + 4 ) " () () -1 0)
 (1357 equiv "( ( pen ua * ua ; v0 = 3 + ul ) ; move v0 , ua ) " () () 15 0)
 (1358 uniq "( ( pen 3 ; move ul , ua ) ; move 4 , ua ; move 4 , ul ) " () ()
  -1 0)
 (1359 uniq "( v0 = 3 ; ( pen ua ; move ul , ua ; move ua , 4 ) ) " () () -1
  0)
 (1360 equiv "( ( pen 3 ; move 4 , ua ) ; move ua , ul ; v0 = ua ) " () ()
  336 0)
 (1361 uniq "( move ul , ul / ua ; move ua , ul ; move ul - ua , ul ) "
  (1651 2062) () -1 0)
 (1362 uniq "( pen ua ; ( move ua , 2 ; pen 0 ) ; move ua , ua - 2 ) " 
  (2112) () -1 0)
 (1363 uniq "( move 4 , 3 ; ( pen ua ; v0 = ua ; move ul , ul ) ) " () () -1
  0)
 (1364 equiv "( ( v0 = 4 ; pen v0 ) ; move v0 , v0 * v0 ) " (1077) () 1077 0)
 (1365 equiv "( move ua , 4 ; v0 = ul ; ( pen ua ; move ul , 4 ) ) " () ()
  1672 0)
 (1366 uniq "( pen ua ; pen ua ; ( move ua + 2 , 2 ; move ul , 2 ) ) " () ()
  -1 0)
 (1367 equiv "( move ua + ul , ul ; v0 = ua + ul ; move v0 , 2 ) " (1060) ()
  848 0)
 (1368 uniq "( pen 2 ; ( move 4 + ul , ua ; move 3 + 2 , 0 - 3 ) ) " () () -1
  0)
 (1369 uniq "( v0 = ul - ua ; move ua , ua - 3 ; move v0 , ul ) " () () -1 0)
 (1370 equiv "( pen ua ; move 4 , 0 ; ( pen ua ; v0 = ul + ul ) ) " () () 15
  1)
 (1371 uniq "( pen 4 ; ( move ul , ua ; pen 4 ; move ua , ul - 2 ) ) " () ()
  -1 0)
 (1372 equiv "( pen ua ; move 4 , 2 ; ( v0 = 4 ; v1 = v0 ) ) " () () 17 0)
 (1373 equiv "( ( move ua , 0 ; v0 = 2 ) ; move ul + v0 , v0 ) " () () 24 0)
 (1374 uniq "( move 4 + 4 , 2 ; move 2 , 3 ; move ua + ul , 0 - ua ) " () ()
  -1 0)
 (1375 uniq "( move 3 + 2 , ul / 3 ; move 0 - ua , 4 ; move ul , 0 ) " () ()
  -1 0)
 (1376 uniq "( move 3 * 2 , 0 ; move 3 , ua + 4 ; move ua + ul , 4 ) " () ()
  -1 0)
 (1377 equiv "( move 0 , ua ; ( move ua , ul ; move ua , 2 ) ; pen ul ) " ()
  () 85 0)
 (1378 uniq "( move 2 , 2 ; move ua - ul , 4 * 3 ; move 3 , ua + 2 ) " () ()
  -1 0)
 (1379 uniq "( move ul , 4 + 3 ; move 3 * 3 , 2 - ua ; move ua , 2 ) " () ()
  -1 0)
 (1380 equiv "( ( move 0 , ul ; move ua , ua ; move 4 , ul ) ; pen ua ) "
  (659) () 93 0)
 (1381 uniq "( move 4 , ua * ua ; move ua , 2 ; move 3 - 4 , 4 + 2 ) " () ()
  -1 0)
 (1382 equiv "( ( move ul - ua , 0 ; move ua , 4 - 3 ) ; move 0 , 4 ) " () ()
  223 0)
 (1383 uniq "( move ua , 3 - ua ; move 4 + 3 , ua - 4 ; v0 = 3 ) " () () -1
  0)
 (1384 uniq "( move ul , ul / 3 ; move 4 + 3 , 3 ; move ua , 3 / 2 ) " () ()
  -1 0)
 (1385 uniq "( move 4 , 2 + ul ; ( move ul , 0 ; move ua , 4 * 4 ) ) " 
  (1973) () -1 0)
 (1386 equiv "( pen ua ; ( move ul , 3 ; move ua , ul ; v0 = ul ) ) " () ()
  560 0)
 (1387 equiv "( ( pen ua ; move 3 , ul ) ; move ua , ul ; v0 = ul ) " () ()
  1731 0)
 (1388 equiv "( ( move 3 , 0 ; move ua , 2 ; v0 = ua ) ; pen v0 ) " () ()
  2201 0)
 (1389 equiv "( v0 = 0 ; pen 4 ; ( move ua , ua ; move v0 , 2 ) ) " () () 16
  0)
 (1390 uniq "( v0 = 3 ; move ua , 3 ; ( pen v0 ; move ua , 2 ) ) " () () -1
  0)
 (1391 uniq "( pen ua ; ( pen ua ; move ua , 3 ; move ua , ua + 4 ) ) " () ()
  -1 0)
 (1392 equiv "( pen ua ; pen ua ; ( move ua , ul / ua ; v0 = 0 ) ) " () ()
  114 0)
 (1393 equiv "( move ua + ul , 0 ; move 0 , 4 + ul ; move 4 + 2 , ua ) "
  (1935) () 683 0)
 (1394 uniq "( v0 = ua + 2 ; move v0 , ul ; move v0 , ua - 2 ) " () () -1 0)
 (1395 uniq "( pen ua ; pen ua / 2 ; ( move ua , 4 ; move ul , ul ) ) " () ()
  -1 0)
 (1396 equiv "( pen 2 ; ( move ua , 0 ; v0 = 2 + ul ; pen v0 ) ) " () () 14
  0)
 (1397 uniq "( pen 3 ; move 4 + ul , ul ; ( pen ul ; move ul , ul ) ) " () ()
  -1 0)
 (1398 uniq "( ( move ua + 3 , 3 - ul ; move ua / 4 , 2 ) ; pen 3 ) " () ()
  -1 0)
 (1399 uniq "( v0 = ua + 3 ; move v0 , 2 / ua ; move ul , v0 ) " () () -1 0)
 (1400 uniq "( move 2 + ul , ul - 4 ; move 4 , 0 ; move ua , 2 - ua ) " () ()
  -1 0)
 (1401 uniq "( move 2 + ul , 3 * 3 ; ( pen 4 ; move ul , 4 + ul ) ) " () ()
  -1 0)
 (1402 uniq "( move 4 + ul , 3 - ul ; move 3 , 3 + ul ; move ua , 0 ) " () ()
  -1 0)
 (1403 uniq "( move ua - 3 , 2 - 4 ; move 2 , ua ; move ua , 3 + ul ) "
  (2568) () -1 0)
 (1404 uniq "( move 4 + 3 , ua * 2 ; move 3 , ul ; move ul - ua , 0 ) " () ()
  -1 0)
 (1405 equiv "( v0 = ua + 3 ; v1 = ul ; move v1 + v0 , ul ) " () () 1 0)
 (1406 uniq "( move 4 - ua , 2 ; move 4 , ul ; move 4 + ul , 0 - ua ) " () ()
  -1 0)
 (1407 equiv "( move ua , ul ; pen ul ; ( move 0 , ul ; move ua , ul ) ) " ()
  () 85 0)
 (1408 uniq "( move ul - 4 , 3 + ul ; move ua , 2 + ul ; move 3 , 4 ) " () ()
  -1 0)
 (1409 uniq "( ( move 3 , ua ; move 2 + ul , ul ) ; move ua , 0 - 4 ) " () ()
  -1 0)
 (1410 uniq "( move 4 + 3 , 2 * 2 ; move ul , ul / ua ; move ua , 2 ) " () ()
  -1 0)
 (1411 uniq "( move ua , ua ; ( move 4 , 2 + ul ; move 3 + ul , 2 ) ) " () ()
  -1 0)
 (1412 uniq "( ( move ua , 2 + ul ; move ua , 3 ) ; move 3 , ua + 4 ) " () ()
  -1 0)
 (1413 equiv "( ( pen 2 / 3 ; pen ua ; v0 = ua ) ; move 4 , v0 ) " () () 15
  0)
 (1414 equiv "( move 4 , 3 ; move ua + ul , ul - ua ; v0 = 2 * 2 ) " () ()
  2553 0)
 (1415 equiv "( move ua , ua ; ( move 3 , ul ; move ul , ua ) ; pen ul ) " ()
  () 51 0)
 (1416 uniq "( move ul , 0 ; ( move ua , ul ; move 3 * 3 , ua - 3 ) ) " () ()
  -1 0)
 (1417 uniq "( move 3 + ul , 3 + ul ; ( move 4 , ua ; move ua , 2 ) ) "
  (1766) () -1 0)
 (1418 uniq "( move 2 , ul / 4 ; move ua , 3 + ul ; move 2 , ua / 4 ) " () ()
  -1 0)
 (1419 uniq "( move ua , 4 ; ( move 3 - 4 , 2 ; move ua , ua + ul ) ) " () ()
  -1 0)
 (1420 uniq "( move 3 , 4 + ul ; ( move 3 , 2 ; move ua , ul + ul ) ) "
  (2762) () -1 0)
 (1421 uniq "( ( move 3 * 3 , ua ; move ua , 2 ) ; move 4 + ul , ul ) " () ()
  -1 0)
 (1422 uniq "( move 3 , 4 * 3 ; v0 = 3 ; move v0 * v0 , v0 ) " () () -1 0)
 (1423 equiv "( ( v0 = ua + ul ; pen v0 ) ; move v0 + ul , 0 ) " () () 1700
  0)
 (1424 equiv "( move ua , 0 ; ( v0 = 4 ; pen ua ) ; move v0 , ul ) " () ()
  1913 0)
 (1425 equiv "( pen ua ; ( v0 = ul ; move ua , 3 ; move 2 , v0 ) ) " () ()
  1816 0)
 (1426 uniq "( move ua , ul / 3 ; move 4 , ua / 4 ; v0 = 4 + ul ) " () () -1
  0)
 (1427 equiv "( v0 = ul ; ( move ul , 0 ; pen ua ) ; move 4 , v0 ) " () ()
  328 0)
 (1428 equiv "( move 4 , 4 ; ( move ua , ul + ul ; v0 = ul / 3 ) ) " () () 29
  0)
 (1429 uniq "( ( move 4 , 3 / ua ; move ua , ul ) ; v0 = 3 / ua ) " () () -1
  0)
 (1430 uniq "( pen ua ; ( move 3 + ul , ul ; pen ul ) ; move ua , ua ) " ()
  () -1 0)
 (1431 equiv "( pen ua + ul ; ( move 2 , 3 - ul ; move 2 + ul , 4 ) ) " () ()
  2715 0)
 (1432 equiv "( pen 2 ; ( v0 = ul ; v1 = ua ) ; move v1 , ua ) " () () 14 0)
 (1433 equiv "( pen ua + ul ; move ua , ul ; ( move 4 , ul ; pen ul ) ) " ()
  () 2009 0)
 (1434 equiv "( move ua , ul ; v0 = ua + ul ; move v0 , 3 - v0 ) " () () 1708
  0)
 (1435 uniq "( pen ua * 4 ; move ua , 4 + ul ; move 2 - 3 , ul / 4 ) " () ()
  -1 0)
 (1436 uniq "( move ua , 0 ; move 3 * 2 , ua * ua ; move ua , 2 + ul ) " ()
  () -1 0)
 (1437 uniq "( ( move 3 - ua , 4 * 3 ; pen 3 ) ; move ua , ul + ul ) " () ()
  -1 0)
 (1438 uniq "( move 4 - ul , ua + ul ; move ua , 0 ; move ul - 4 , 2 ) " ()
  () -1 0)
 (1439 uniq "( move 3 + ul , 3 ; move ul , 0 - ua ; move ua - ul , 4 ) " ()
  () -1 0)
 (1440 uniq "( move ul , 4 + ul ; move ua + ul , 3 / ua ; move 3 , 0 ) " ()
  () -1 0)
 (1441 equiv "( ( move 4 , ul ; move 0 , ua * ua ) ; move ua , 0 - ua ) " ()
  () 2724 0)
 (1442 uniq "( move 4 , 2 ; ( move ul - 3 , 2 ; pen 4 ) ; move 2 , 2 ) "
  (2926) () -1 0)
 (1443 uniq "( move ua , ul ; move ul / 3 , ul - ua ; move 4 , 0 - 2 ) " ()
  () -1 0)
 (1444 uniq "( move ul , ul ; move 3 - ua , ua ; move 3 * 2 , ul - 3 ) " ()
  () -1 0)
 (1445 uniq "( move ua , 3 / ua ; move ua - 3 , ul - ua ; move 4 , 2 ) "
  (1835) () -1 0)
 (1446 uniq "( move ua , 4 ; ( move 3 , ua + ul ; move ua , ua + 2 ) ) " ()
  () -1 0)
 (1447 uniq "( ( move 4 , 0 ; move ua + ul , ua * ua ) ; move 2 , ul ) " ()
  () -1 0)
 (1448 uniq "( ( move ua , 4 + 3 ; move ul , ua + ul ) ; move ua , 2 ) "
  (2269 2564) () -1 0)
 (1449 uniq "( move ua , ul - ua ; ( move ua , ua - 4 ; v0 = 0 ) ) " () () -1
  0)
 (1450 uniq "( move ul , ua ; ( move 4 + ul , 2 ; move ul - ua , 2 ) ) " ()
  () -1 0)
 (1451 uniq "( move 3 + ul , 4 - ul ; move ua , ua * ua ; v0 = 3 ) " () () -1
  0)
 (1452 uniq "( move ul , 4 / 3 ; move ua , ua / 2 ; move 3 , ua + ul ) " ()
  () -1 0)
 (1453 equiv "( pen ua / 4 ; pen ua ; ( pen ua + ul ; move ua , ul ) ) " ()
  () 22 0)
 (1454 equiv "( move ul - ua , ul ; move ua , 4 * 3 ; v0 = ul - 2 ) " 
  (2629) () 2629 0)
 (1455 uniq "( ( move ua , 3 + ul ; move 3 , ua ) ; move ul - 3 , ul ) " ()
  () -1 0)
 (1456 uniq "( ( move 4 , ua ; move ul , 4 ) ; move ua + ul , ua * 3 ) " ()
  () -1 0)
 (1457 equiv "( pen 3 * 3 ; ( move 4 , 2 ; v0 = ul ; v1 = 4 ) ) " () () 17 0)
 (1458 uniq "( move 4 + 2 , 3 + ul ; pen ua ; move 4 - ul , ul + ul ) "
  (1900 2608) () -1 0)
 (1459 equiv "( move 4 / 2 , ua ; ( pen ua ; move 0 , 0 ) ; move 2 , 0 ) " ()
  () 285 0)
 (1460 uniq "( move 3 , ul / ua ; pen ua + 3 ; move ua - ul , 4 * 3 ) " () ()
  -1 0)
 (1461 uniq "( move 2 + ul , ul / ua ; pen 3 ; move 4 - ul , 4 + ul ) " () ()
  -1 0)
 (1462 equiv "( v0 = ua ; ( v1 = ul ; pen ua ; move ua , v1 ) ) " () () 22 0)
 (1463 uniq "( move ua + 4 , ul ; ( pen 2 ; move ul - 4 , ua + ul ) ) " () ()
  -1 0)
 (1464 uniq "( move ul - ua , 0 ; move 2 + ul , ua - 2 ; move ua , ul ) " ()
  () -1 0)
 (1465 uniq "( move 4 - ul , ul ; pen 3 * 3 ; move ua - 2 , ul / ua ) "
  (2536) () -1 0)
 (1466 equiv "( move ul , 3 + 3 ; ( pen 4 + ul ; move ua , ul - ua ) ) "
  (2639) () 2639 0)
 (1467 uniq "( move ua , 4 / ua ; pen 4 * 3 ; move ua - ul , ul - 3 ) " () ()
  -1 0)
 (1468 uniq "( move ua + ul , ul ; ( pen ua ; move ua - 3 , 4 * 4 ) ) " () ()
  -1 0)
 (1469 uniq "( move ua , ul + ul ; move 4 , 2 + ul ; move 0 - ua , ul ) " ()
  () -1 0)
 (1470 equiv "( ( move 2 + ul , ua ; pen ua * 4 ) ; move 4 - ul , ul ) " ()
  () 1825 0)
 (1471 equiv "( move ua , 0 ; v0 = 2 ; move v0 + v0 , ul - v0 ) " () () 145
  0)
 (1472 uniq "( move 4 , ua ; ( move 2 * 2 , 0 ; pen 3 ) ; move ua , 3 ) " ()
  () -1 0)
 (1473 uniq "( move ua , 2 ; move ul - 3 , 2 + ul ; move ua , ul - ua ) " ()
  () -1 0)
 (1474 equiv "( ( pen 2 ; move 0 , ul ) ; move 2 * 2 , ul ; v0 = 2 ) " () ()
  13 0)
 (1475 uniq "( move ul , ul ; move 2 , ua + 2 ; move ua + ul , ul / 2 ) " ()
  () -1 0)
 (1476 equiv "( v0 = ua ; ( pen ua ; move ua + 3 , ul ) ; pen v0 ) " () () 99
  0)
 (1477 uniq "( ( pen 4 ; v0 = 3 ) ; move v0 , v0 ; move 4 , ul ) " (1521) ()
  -1 0)
 (1478 equiv "( ( pen 2 - ul ; pen ua ) ; v0 = ua ; move v0 , ul ) " () () 22
  0)
 (1479 uniq "( move 3 , ua ; move ua , 4 / ua ; move ul + ul , ua + 2 ) " ()
  () -1 0)
 (1480 uniq "( move ua + 3 , ua - ul ; move 4 , 3 ; move ua , ul + ul ) " ()
  () -1 0)
 (1481 uniq "( move 4 / 2 , ul ; move ua + ul , 2 ; move ul , ua + ua ) " ()
  () -1 0)
 (1482 equiv "( v0 = 2 * 2 ; move v0 + ul , v0 ; move ua , v0 ) " () () 396
  0)
 (1483 uniq "( move ul + ul , ul ; move ua + 3 , 4 ; move 4 - ua , ua ) " ()
  () -1 0)
 (1484 uniq "( move ua / 2 , ul ; move ua - ul , ua + 4 ; move ua , 3 ) " ()
  () -1 0)
 (1485 equiv "( ( move ul , ua + 4 ; move ua , ua ) ; move ua , ua + 2 ) " ()
  () 2755 0)
 (1486 equiv "( move ua , ul ; move 3 + 2 , ua - ul ; v0 = ua * ua ) " () ()
  427 0)
 (1487 equiv "( ( move ua , ua * 2 ; move 0 , ul ) ; move ua + ul , ul ) " ()
  () 163 0)
 (1488 equiv "( pen ul ; ( pen ua ; ( move 4 , 2 ; pen ua ) ; pen 2 ) ) " ()
  () 17 0)
 (1489 uniq "( ( move ul - ua , ul ; move 0 , ul ) ; move ua , ua + 4 ) " ()
  () -1 0)
 (1490 equiv "( move ua , 3 - ul ; move ul - ua , 3 + ul ; v0 = ul ) " () ()
  1273 0)
 (1491 uniq "( move 2 , ul ; move 3 * 2 , 4 ; ( pen ul ; move 4 , 3 ) ) " ()
  () -1 0)
 (1492 equiv "( move ul , ul - 4 ; ( move ua - ul , 0 ; move ua , ul ) ) " ()
  () 247 0)
 (1493 uniq "( ( move ua , 0 ; move ua , ua * ua ) ; move ul / 4 , ua ) " ()
  () -1 0)
 (1494 equiv "( ( v0 = 4 * 2 ; pen v0 ) ; move ua , v0 ; pen 0 ) " () () 1985
  0)
 (1495 uniq "( move 4 + ul , ua ; ( move ul , ul - 3 ; move ua , ua ) ) " ()
  () -1 0)
 (1496 uniq "( move ua , 4 ; ( move 3 , ua * ua ; move ua , ua * ua ) ) " ()
  () -1 0)
 (1497 uniq "( ( ( pen 3 ; move 2 , ul ) ; move 4 , ul ) ; v0 = 0 ) " () ()
  -1 0)
 (1498 equiv "( pen 2 ; ( move 4 + 2 , ua ; v0 = 4 ; v1 = ul ) ) " () () 14
  0)
 (1499 equiv "( ( v0 = 2 ; move ua , v0 * v0 ) ; move ua , v0 ) " () () 1650
  0)
 (1500 equiv "( ( v0 = 4 ; move v0 , v0 ) ; move ua , v0 + ul ) " (969) ()
  1287 0)
 (1501 uniq "( ( move 4 - ul , ua ; move ua - ul , ul ) ; move 3 , ul ) " ()
  () -1 0)
 (1502 uniq "( ( move 4 , ul - ua ; move ua , ua - ul ) ; v0 = ua ) " () ()
  -1 0)
 (1503 equiv "( move ul / 3 , 2 - ul ; v0 = 0 ; move ua + 4 , v0 ) " () () 1
  0)
 (1504 uniq "( ( pen 3 ; move 3 , ua + 2 ; move 4 , ul - 3 ) ; pen 0 ) " ()
  () -1 0)
 (1505 uniq "( ( move ua + ul , 4 ; move ua , 4 ) ; move ul , ul / ua ) " ()
  () -1 0)
 (1506 uniq "( ( move ua + ul , ua + ua ; pen ua ) ; move ua + 3 , 2 ) " ()
  () -1 0)
 (1507 uniq "( pen ua + ul ; move 2 * 2 , 4 ; move ua + ul , ul + ul ) " ()
  () -1 0)
 (1508 uniq "( pen 2 + ul ; ( move 4 , 3 ; pen 0 ) ; move 4 , 4 + ul ) " ()
  () -1 0)
 (1509 uniq "( pen ua ; ( move ul , ua + ul ; move 0 - ua , 4 - ua ) ) " ()
  () -1 0)
 (1510 equiv "( move ua , 0 ; ( v0 = ua ; pen v0 ) ; move v0 , 2 ) " () ()
  2356 0)
 (1511 uniq "( ( move ua - 2 , ua - 2 ; pen ul ) ; move ua , ua * ua ) " ()
  () -1 0)
 (1512 uniq "( ( move 0 , ul ; pen ua ) ; move ua - 3 , 0 ; move 2 , 2 ) "
  (1660 2709 2903) () -1 0)
 (1513 equiv "( ( move ua , ul ; pen ua + ul ) ; move 3 - ul , ua + 3 ) " ()
  () 2499 0)
 (1514 equiv "( ( v0 = ua ; move v0 , 0 ; move ua , 4 ) ; pen v0 ) " () () 46
  0)
 (1515 equiv "( ( move 4 , ua * 2 ; move ua + ul , ul ) ; pen ua + ul ) " ()
  () 175 0)
 (1516 equiv "( ( move ua , ua ; pen 2 ) ; v0 = 4 ; move v0 , v0 ) " () ()
  3092 0)
 (1517 uniq "( move 4 , 2 - ua ; pen ul ; ( move 2 , 2 ; move ua , 0 ) ) " ()
  () -1 0)
 (1518 uniq "( ( pen 2 ; move 2 , ua ; move 4 , ul ) ; move ua - 3 , 0 ) " ()
  () -1 0)
 (1519 equiv "( move 4 , 2 ; ( v0 = ul ; move ua , v0 ; pen v0 ) ) " () () 56
  0)
 (1520 equiv "( pen ua ; ( move 4 , ua + 2 ; v0 = ul ) ; move 0 , 2 ) " () ()
  17 0)
 (1521 equiv "( ( pen 4 ; v0 = ua ) ; move v0 , v0 ; move 3 , ul ) " 
  (1477) () 2542 0)
 (1522 uniq "( move 3 , 3 ; ( pen 4 ; move ua , ua - ul ; move 2 , 0 ) ) " ()
  () -1 0)
 (1523 uniq "( move ua + ul , ul ; move ul , ul - ua ; move ua + 3 , 2 ) "
  (2129 2962) () -1 0)
 (1524 uniq "( move 3 , ua ; move ul , ua * ua ; move ua + ul , ua + 3 ) " ()
  () -1 0)
 (1525 uniq "( pen ua ; ( move 4 , 2 ; move ul , ul ) ; move 2 , 3 + 2 ) "
  (2340) () -1 1)
 (1526 equiv "( v0 = ua ; move ua , ua + v0 ; move v0 , 3 + v0 ) " () () 45
  0)
 (1527 uniq "( move 2 , ua * ua ; move ua , ul / ua ; move ua + ul , 2 ) " ()
  () -1 0)
 (1528 uniq "( ( pen ua * 2 ; move ua , 4 ; move 4 , 3 ) ; move ul , 0 ) " ()
  () -1 0)
 (1529 equiv "( ( pen ul ; move ua , 3 + 2 ; v0 = 0 ) ; move 4 , ul ) " () ()
  806 0)
 (1530 uniq "( ( move 0 , ul ; move ua - ul , ua + ul ) ; move ua , ul ) " ()
  () -1 0)
 (1531 uniq "( pen ua * 2 ; move ul , 3 ; ( move 2 , 3 ; move 4 , ul ) ) " ()
  () -1 0)
 (1532 equiv "( ( pen 0 ; pen ua + 3 ) ; move 2 , ua ; move 2 , ua + 2 ) " ()
  () 2773 0)
 (1533 equiv "( pen 3 ; ( move ul , 3 ; move 2 , ul ; move 2 , ua * 4 ) ) "
  () () 2348 0)
 (1534 equiv "( ( v0 = ul ; pen ua ) ; move ua , ul / ua ; pen v0 ) " () ()
  114 0)
 (1535 uniq "( move 4 + ul , ul / ua ; move 3 , ua ; move ua , ua * ua ) " ()
  () -1 0)
 (1536 uniq "( move ul - ua , 3 / ua ; move ul , ul ; move 3 + ul , ul ) " ()
  () -1 0)
 (1537 uniq "( move ua - 4 , ua ; move ua , ul ; move ua - 4 , ul / ua ) " ()
  () -1 0)
 (1538 equiv "( ( pen ua ; move 4 , 0 ) ; move ul , ul ; v0 = 4 * 3 ) " () ()
  2185 0)
 (1539 uniq "( ( ( move ul , 4 ; pen 4 ) ; move ua , ul ) ; move 2 , 0 ) " ()
  () -1 0)
 (1540 uniq "( move 3 , ua ; ( move ua , ua - ul ; move ul , ua - ul ) ) " ()
  () -1 0)
 (1541 uniq "( move ua + ul , 0 ; v0 = 4 + ul ; move ua , v0 * 2 ) " () () -1
  0)
 (1542 uniq "( ( pen 2 ; move 4 , ul ; move ua , 4 / 2 ) ; v0 = ul ) " () ()
  -1 0)
 (1543 uniq "( ( move ul - 4 , ul + ul ; move ul , ul ) ; move ua , ua ) " ()
  () -1 0)
 (1544 uniq "( ( move 0 , ua ; move ua , 3 ; move ul , 2 ) ; move 3 , ul ) "
  () () -1 0)
 (1545 uniq "( pen 2 + ul ; ( move 4 , 0 ; pen 4 ; move ua , ua + 4 ) ) " ()
  () -1 0)
 (1546 equiv "( ( pen 4 * 2 ; move 4 , ua ; v0 = ua ) ; v1 = ul ) " () () 15
  0)
 (1547 uniq "( move 0 , ua ; ( move ul , 3 ; move ua , 4 ) ; move 3 , ul ) "
  () () -1 0)
 (1548 uniq "( move 4 + ul , ul ; ( pen 3 ; pen ua + 4 ) ; move 4 , 0 ) " ()
  () -1 0)
 (1549 equiv "( ( move 4 + ul , ua ; v0 = ua + 2 ) ; move ua , v0 ) " () ()
  523 0)
 (1550 uniq "( pen ul + ul ; move ua + ul , ul ; move ua + 3 , ul - 4 ) " ()
  () -1 0)
 (1551 uniq "( pen 3 + ul ; move ua / 4 , ua + ua ; move ua , ul + ul ) "
  (2065) () -1 0)
 (1552 uniq "( ( move ul + ul , ua ; pen ua + ul ) ; move ua + 2 , ul ) " ()
  () -1 0)
 (1553 uniq "( pen 4 + ul ; move ul + ul , ua + ul ; move ua , 3 / ua ) " ()
  () -1 0)
 (1554 uniq "( move ul , ua ; move 3 , 3 ; ( move 3 , ul ; move 4 , ua ) ) "
  () () -1 0)
 (1555 equiv "( move 0 , 4 ; ( move ua , 0 ; move ua + ul , 3 ) ; pen ua ) "
  () () 2842 0)
 (1556 uniq "( pen ua ; ( move ua , 4 ; ( pen ul - 3 ; move 3 , 2 ) ) ) " ()
  () -1 0)
 (1557 uniq "( ( pen ua ; move ua + ul , ul - 3 ) ; move ul / ua , ua ) " ()
  () -1 0)
 (1558 uniq "( ( move ua , 2 ; pen ua ; move 2 - 4 , ul ) ; move 0 , ua ) "
  () () -1 0)
 (1559 uniq "( ( move 2 , 3 + 2 ; move ua , ul ; pen ua ) ; move ua , 3 ) "
  () () -1 0)
 (1560 equiv "( ( v0 = 4 ; pen v0 ) ; move ul , v0 ; move ua , ua ) " () ()
  1663 0)
 (1561 equiv "( move ul , ua ; move ua + ul , ua + ul ; move ua , 3 - ua ) "
  (2712 2748 2775) () 2712 0)
 (1562 equiv "( move ua , ul ; move ua + ul , 3 + ul ; move ul , ua + ua ) "
  () () 1969 0)
 (1563 uniq "( move ul , 4 * 2 ; ( pen ua ; move ul , 0 ; move ua , 2 ) ) "
  () () -1 0)
 (1564 uniq "( pen 2 ; move ul , 2 ; ( move ua , ul ; move 3 - 2 , ua ) ) "
  () () -1 0)
 (1565 uniq "( ( move ul , 3 - ul ; pen 2 ) ; move ua , 0 ; move 3 , ul ) "
  () () -1 0)
 (1566 uniq "( pen 4 ; ( move ul , 3 ; move 3 , ua + ul ) ; move ua , 0 ) "
  () () -1 0)
 (1567 uniq "( ( move 3 , ul ; move ua , 0 - ua ) ; pen 3 ; move ua , 4 ) "
  () () -1 0)
 (1568 uniq "( pen 2 ; ( move 3 , ua ; move ul , 2 ; move 3 + ul , ua ) ) "
  () () -1 0)
 (1569 uniq "( move ua , 2 ; ( move 0 , 4 ; pen ua ) ; move ul , 4 + ul ) "
  () () -1 0)
 (1570 uniq "( pen ua ; ( move ua , ul ; move 3 , 3 ; move 4 + ul , 2 ) ) "
  () () -1 0)
 (1571 uniq "( ( move ul , ul ; pen 4 ) ; move 0 , ua ; move 4 , ua + 4 ) "
  () () -1 0)
 (1572 equiv "( ( move 3 , 0 ; pen ua + ul ) ; v0 = 3 ; move ul , ul ) " ()
  () 2770 0)
 (1573 uniq "( pen ua ; ( move 3 , 4 + ul ; move 4 , ul ) ; move ua , 2 ) "
  () () -1 0)
 (1574 uniq "( ( move ua , ul ; move ul , 4 ; move 4 , 2 ) ; pen 2 - ua ) "
  () () -1 0)
 (1575 uniq "( ( pen 3 ; move ua , 2 ) ; move 3 / 2 , ul ; move ul , ua ) "
  () () -1 0)
 (1576 uniq "( move 3 , ul ; move ul , ul ; ( pen ua + 4 ; move 2 , 4 ) ) "
  () () -1 0)
 (1577 equiv "( ( pen ua ; move ul - ua , 3 ; v0 = 0 ) ; v1 = ua ) " () ()
  101 0)
 (1578 equiv "( ( pen ua ; move 4 , ul ) ; move 2 , ul ; v0 = ua * 2 ) " ()
  () 2166 0)
 (1579 uniq "( ( move ua , ul + ul ; move ul - ua , ua ) ; move ua , ul ) "
  () () -1 0)
 (1580 equiv "( ( pen ua ; move ua , 4 ; move 2 , ul ) ; v0 = ul / 2 ) " ()
  () 2848 0)
 (1581 equiv "( pen ua - 3 ; ( pen 3 ; move ul , 0 ; move ua + ul , 0 ) ) "
  () () 1814 0)
 (1582 uniq "( move ua - ul , ua * 2 ; v0 = 0 - ul ; move ua , v0 ) " () ()
  -1 0)
 (1583 equiv "( ( v0 = ul ; pen v0 + 3 ) ; pen ua ; move ua , v0 ) " () () 22
  0)
 (1584 uniq "( ( pen ua ; move 3 , 0 ; pen 0 ) ; move ua / 3 , ua + ul ) " ()
  () -1 0)
 (1585 uniq "( move ul , 3 ; ( pen 4 ; move 4 + ul , 4 ; move ul , ul ) ) "
  (1647) () -1 0)
 (1586 equiv "( move ua , ua + ua ; v0 = ua - ul ; move 3 + v0 , 4 ) " () ()
  1889 0)
 (1587 uniq "( ( pen ua * ua ; move 2 , ua ) ; move 2 , 2 - 3 ; pen ua ) " ()
  () -1 0)
 (1588 uniq "( move 4 - ua , 0 ; ( pen ua ; pen ua ) ; move 3 , ua - 4 ) " ()
  () -1 0)
 (1589 equiv "( ( pen ul ; pen 3 / 4 ; pen ul / ua ) ; move 4 * 2 , 4 ) " ()
  () 0 0)
 (1590 uniq "( move 2 + 2 , ul ; ( pen ul ; pen 2 + ul ; move 4 , ul ) ) " ()
  () -1 0)
 (1591 uniq "( ( move ua , 0 ; pen 4 * 2 ) ; move ua , 4 + ul ; pen ul ) " ()
  () -1 0)
 (1592 equiv "( pen ul ; ( pen ua * 4 ; move 4 , 0 ) ; v0 = ua - ul ) " () ()
  15 0)
 (1593 uniq "( move 2 + ul , 0 ; move ua , ul ; ( pen ua ; move 0 , ul ) ) "
  () () -1 0)
 (1594 equiv "( pen ul / 3 ; ( pen 2 ; move ua , ua - 3 ) ; v0 = ul ) " () ()
  73 0)
 (1595 equiv "( ( ( pen ul ; move ul , 0 ) ; pen ua ) ; move 4 * 2 , ul ) "
  () () 921 0)
 (1596 uniq "( pen ua ; ( move ua , ua ; move 2 , ua - 3 ) ; move 2 , ul ) "
  (2408) () -1 0)
 (1597 equiv "( ( move ul , ua + ua ; move 3 , 0 ) ; pen ua ; move 4 , ul ) "
  () () 1923 0)
 (1598 equiv "( ( move ua , ul ; move 0 , 4 ) ; move ua , ua ; pen 3 + ul ) "
  () () 89 0)
 (1599 uniq "( move 2 , 0 ; ( move ul , ul ; pen ua ; move ua , ul - 3 ) ) "
  () () -1 0)
 (1600 equiv "( pen ua ; move ua , ua ; ( move ul , 2 - ul ; v0 = 0 ) ) " ()
  () 1812 0)
 (1601 uniq "( pen ua ; ( move ua , ul ; move ul , 0 ; move ua , 4 * 2 ) ) "
  () () -1 0)
 (1602 uniq "( move ul , ua ; move ua , 4 ; ( pen ua + 2 ; move ul , 2 ) ) "
  () () -1 0)
 (1603 uniq "( ( move 4 , 0 ; move ul , ua * ua ) ; move ua , 3 ; pen ua ) "
  () () -1 0)
 (1604 equiv "( pen ua ; move ua , ua ; ( v0 = ua + ua ; move 4 , 2 ) ) " ()
  () 2488 0)
 (1605 equiv "( pen ua ; move ua , ua ; ( move ua , 3 ; v0 = ua + 3 ) ) " ()
  () 351 1)
 (1606 equiv "( ( pen ul ; move ua , 3 + ul ) ; move 4 , ul ; move 0 , ul ) "
  () () 60 0)
 (1607 uniq "( move 2 , ul ; ( move ul , ul ; pen 2 ; move 3 + ul , ua ) ) "
  () () -1 0)
 (1608 uniq "( move ua , ua ; pen 3 ; ( move 2 , ul ; move ul , ua * 3 ) ) "
  () () -1 0)
 (1609 uniq "( move ul , 4 ; ( pen ua ; move 3 , ul ; move ul , ua + 2 ) ) "
  () () -1 0)
 (1610 uniq "( move 2 + ul , ul ; ( pen ua ; move 3 , ua ; move 4 , ul ) ) "
  () () -1 0)
 (1611 uniq "( move 4 , 2 ; ( move ul , ul ; pen ul ; move ua + ul , 2 ) ) "
  () () -1 0)
 (1612 uniq "( move 4 , ua ; ( move 2 , 3 + ul ; move ua , ul ) ; pen ul ) "
  () () -1 0)
 (1613 uniq "( pen ua ; ( move 4 , ul ; move ua / 2 , ul ; move ua , 2 ) ) "
  (2455 2466 3041) () -1 0)
 (1614 uniq "( ( move ua , 4 ; pen ul ) ; move ul , 4 ; move 2 - ua , ua ) "
  () () -1 0)
 (1615 uniq "( ( pen 3 ; move ua , ul ) ; move ul , 4 - ua ; move 3 , ul ) "
  (1777) () -1 0)
 (1616 uniq "( ( move 4 , ua * ua ; pen ua ; move 3 , 4 ) ; move ul , ua ) "
  () () -1 0)
 (1617 uniq "( ( move 4 , ua ; move 3 , ul ) ; pen ua ; move 4 - ua , ul ) "
  () () -1 0)
 (1618 uniq "( move 4 , 2 ; ( pen ua ; move ul , 3 - ul ) ; move ul , ul ) "
  () () -1 0)
 (1619 uniq "( move ua , 4 ; ( ( move ul , ul ; pen ua ) ; move 0 , ul ) ) "
  () () -1 0)
 (1620 uniq "( move ua , ul ; pen 3 + ul ; ( move ul - 4 , 2 ; pen ul ) ) "
  () () -1 0)
 (1621 uniq "( pen 4 - ul ; move 4 + ul , 2 ; ( move ua , ul ; pen ua ) ) "
  () () -1 0)
 (1622 uniq "( ( pen ua + 4 ; move 4 , ul ; pen 2 ) ; move ua - ul , ul ) "
  () () -1 0)
 (1623 uniq "( ( pen 3 ; move ul , 2 - ul ; move 4 , ul + ul ) ; pen ua ) "
  () () -1 0)
 (1624 uniq "( ( pen 2 ; move ua + ul , 4 ) ; move ul , 4 / ua ; pen ua ) "
  () () -1 0)
 (1625 equiv "( pen ul ; ( pen ua + ul ; move ua , 4 * 2 ; v0 = ul ) ) " ()
  () 1985 0)
 (1626 uniq "( move ua , ua * ua ; ( move 0 , ul ; pen ua ; move 2 , ua ) ) "
  () () -1 0)
 (1627 equiv
  "( ( pen ul ; move 0 , ul ; move ua , ua ) ; move 3 + ul , ul ) " () () 93
  0)
 (1628 uniq "( move ua , ul ; ( move ua , 4 - ul ; pen ua ; move 2 , ua ) ) "
  () () -1 0)
 (1629 uniq "( ( move ua , ua + 4 ; pen ua ) ; move 3 , ua ; move ul , ul ) "
  () () -1 0)
 (1630 equiv
  "( move 2 , ua ; ( pen ua ; move 3 - ul , ul ; move ul , ua ) ) " () ()
  1934 0)
 (1631 uniq "( pen ua ; ( move ul , ul ; move ul , 0 ) ; move ul - 4 , ul ) "
  () () -1 0)
 (1632 equiv "( ( pen ul ; pen 2 ; pen 3 - ul ) ; move ua - ul , ua + 4 ) "
  () () 216 0)
 (1633 uniq "( ( pen 3 - ul ; move 2 , ua ; move ua , ul ) ; move ul , ul ) "
  () () -1 0)
 (1634 uniq "( pen ua ; move ua , ul - 4 ; ( move 3 , ul ; move ul , ua ) ) "
  () () -1 0)
 (1635 uniq "( move ua , ul - 3 ; move 3 , ul ; ( pen ul ; move ul , ul ) ) "
  () () -1 0)
 (1636 equiv
  "( ( move 4 , ua - ul ; move ua , ua ) ; move ul , ul ; pen 4 ) " () () 392
  0)
 (1637 uniq "( move ul - 4 , ua ; pen ua ; ( move ul , ul ; move 4 , ul ) ) "
  () () -1 0)
 (1638 equiv "( move ua , ua ; ( move ua + ul , ua - 2 ; pen ul ; pen 0 ) ) "
  () () 2928 0)
 (1639 uniq "( move ul + ul , ul - 3 ; pen ul ; ( pen 2 ; move ua , ul ) ) "
  () () -1 0)
 (1640 equiv "( pen ua ; ( pen ua + ul ; move ua , ua - ul ) ; v0 = 4 ) " ()
  () 2232 0)
 (1641 uniq "( ( pen 3 + ul ; move ua , ul / ua ) ; pen 2 ; move ul , ul ) "
  () () -1 0)
 (1642 uniq "( move ua , ul / ua ; pen ul - ua ; ( pen 3 ; move 3 , ul ) ) "
  () () -1 0)
 (1643 uniq "( ( pen ua ; move ua , ua - ul ) ; pen 4 ; move 4 - ul , ul ) "
  () () -1 0)
 (1644 equiv "( pen ua ; pen ul / ua ; ( v0 = ul ; move ua , 3 - ul ) ) " ()
  () 0 0)
 (1645 uniq
  "( ( move ul , ua ; pen ua ) ; move ua + ul , 2 ; move ul , ua ) " () () -1
  0)
 (1646 equiv "( pen ua ; ( move ul , ua ; move ua , ul ) ; v0 = ua + ul ) "
  () () 348 0)
 (1647 uniq
  "( move ul , ua ; ( pen ua ; move ua + ul , 4 ; move ul , ul ) ) " 
  (1585) () -1 0)
 (1648 equiv "( pen ua ; ( move ul , ul + ul ; move ua , ul ; v0 = ul ) ) "
  () () 1654 0)
 (1649 equiv "( ( pen 0 - ul ; pen ua ) ; move ua , ua - ul ; pen ua * ua ) "
  () () 2232 0)
 (1650 uniq "( move ua , 4 ; move ua , 2 ) "
  (24 25 26 27 28 29 30 31 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
   84 85 86 87 88 89 90 91 92 93 103 108 137 179 287 395 397 400 431 483 608
   635 707 744 1666 1668 1684 1730 1754 1775 1792 1818 1886 2045 2098 2105
   2148 2191 2201 2228 2265 2269 2400 2441 2558 2675 2755 2842 2850 2910 2936
   2940 2947 3013)
  (287 483 635 1170 1499) -1 26)
 (1651 uniq "( move ul , ul / 2 ; move ua , ul ; move ul - ua , ul ) "
  (1361 2062) () -1 0)
 (1652 uniq "( move 7 , 2 / 4 ; pen ua ; move 3 , ul ) " (658 2813 2930 2974)
  () -1 0)
 (1653 uniq "( move 0 - ua , 0 ; move ua , ul ) "
  (183 223 224 227 274 275 278 379 407 1962 2069 2070 2262 2291 2585) 
  (407) -1 2)
 (1654 uniq "( pen ua + ua ; move ul , 2 ; move ua , ul ) "
  (111 560 566 580 615 667 689 721 1811 1894 2552 2815 2830) (1041 1648) -1
  0)
 (1655 uniq "( pen ua ; move ua , 4 / 3 ; move 4 , ul ) "
  (60 452 641 653 1662 1671 1685 1688 1694 1713 1716 1726 1733 1746 1752 1827
   1832 1845 1866 1867 1886 1904 1933 1978 1998 2033 2034 2072 2075 2083 2087
   2121 2145 2187 2204 2216 2236 2252 2297 2334 2335 2337 2364 2380 2393 2422
   2424 2427 2473 2474 2500 2502 2508 2523 2583 2593 2646 2647 2681 2697 2721
   2745 2751 2761 2763 2765 2794 2820 2826 2827 2869 2872 2889 2921 2940 2973
   2986 3034 3037 3062 3067 3068)
  () -1 0)
 (1656 uniq "( pen ua ; move ua , ul ; move ua , 4 ) "
  (22 89 290 296 320 322 325 326 331 332 333 337 348 350 351 356 357 361 364
   385 1657 1664 1674 1675 1683 1685 1691 1705 1707 1715 1720 1722 1729 1731
   1735 1767 1776 1778 1779 1789 1798 1800 1805 1809 1812 1813 1816 1828 1830
   1860 1864 1865 1876 1925 1928 1967 1972 1976 1993 1996 2001 2009 2038 2044
   2058 2082 2095 2100 2106 2111 2114 2155 2166 2189 2296 2329 2357 2425 2431
   2458 2488 2549 2602 2611 2640 2643 2670 2715 2741 2749 2756 2793 2829 2835
   2853 2856 2904 2906 2927 2991 3033 3071 3091)
  () -1 1)
 (1657 equiv "( pen ua ; move ua , 4 ; move 2 , ul ) "
  (22 268 293 296 320 322 325 326 331 333 337 338 340 348 351 356 364 385
   1656 1664 1673 1674 1675 1683 1685 1705 1707 1720 1722 1728 1729 1731 1735
   1760 1772 1776 1778 1779 1784 1789 1798 1800 1805 1809 1812 1813 1816 1828
   1860 1864 1865 1876 1879 1928 1933 1959 1967 1972 1976 1979 1996 2009 2037
   2038 2050 2058 2082 2083 2086 2093 2100 2106 2111 2114 2155 2158 2166 2177
   2180 2181 2182 2185 2189 2209 2231 2245 2252 2313 2331 2347 2357 2372 2412
   2424 2443 2448 2458 2472 2488 2506 2515 2519 2542 2567 2574 2581 2598 2602
   2619 2668 2670 2677 2690 2697 2722 2730 2741 2756 2777 2782 2787 2793 2798
   2800 2835 2845 2848 2865 2880 2911 2922 2943 2959 2987 2991 3014 3033 3055
   3071 3075 3091)
  () 2848 5)
 (1658 uniq "( pen ua ; move 3 , 0 ; move ua , ul - 2 ) "
  (76 98 320 455 616 669 1699 1765 1837 2035 2042 2092 2112 2137 2160 2201
   2328 2398 2540 2546 2844 3090)
  () -1 3)
 (1659 uniq "( pen ua ; move ua , ul ; move 3 , ua - ul ) "
  (112 557 627 643 669 687 1798 1872 2112 2223 2272 2328 2844) () -1 0)
 (1660 uniq "( ( move 2 , ul ; pen ua ) ; move ua - 3 , 0 ; move 2 , 2 ) "
  (1512 2709 2903) () -1 0)
 (1661 uniq "( move ua + ul , 3 ; pen 4 ; move ua , 2 * 2 ) "
  (915 1698 2171 2308 2486 2723 2755) () -1 0)
 (1662 uniq "( pen ua ; move 3 , 4 / ul ; move 4 , 4 ) "
  (582 584 1655 1715 1716 1733 1823 1829 1840 1886 1939 2072 2187 2204 2219
   2285 2376 2474 2597 2647 2696 2749 2763 2824 2917 2941 2948 2986 3028 3034
   3058 3062 3068)
  () -1 0)
 (1663 uniq "( pen 4 ; move ua + ul , 4 ) "
  (34 61 68 81 95 97 99 104 106 590 595 1678 1734 1740 1814 1908 2094)
  (340 554 595 1197 1560) -1 8)
 (1664 uniq "( pen ua ; move ua , ul ; move 2 , 4 ) "
  (22 296 322 325 326 331 337 351 356 361 364 385 1202 1656 1657 1675 1685
   1691 1705 1707 1720 1722 1728 1729 1731 1770 1776 1778 1779 1784 1789 1798
   1800 1812 1813 1816 1830 1864 1876 1879 1925 1928 1959 1967 1972 1979 1993
   1996 2001 2009 2038 2058 2082 2095 2100 2106 2111 2114 2155 2166 2180 2181
   2189 2209 2245 2296 2329 2357 2425 2431 2448 2458 2484 2488 2508 2519 2567
   2611 2619 2640 2670 2690 2715 2730 2741 2749 2756 2787 2793 2800 2835 2848
   2853 2880 2904 2906 2922 2927 2967 2991 3033 3071)
  () -1 0)
 (1665 uniq "( move ua , ua * ua ; move ua , 4 ) "
  (88 126 140 148 149 178 179 180 187 196 225 228 232 233 477 747 1741 1984
   2468 2953)
  () -1 1)
 (1666 uniq "( move ua , 0 ; move ua , 5 ) "
  (24 25 26 27 28 29 30 31 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
   84 85 86 87 88 89 90 91 92 93 1650 1668 1730 2045 2098 2191 2201 2400
   2558)
  (168) -1 6)
 (1667 uniq "( pen ua ; move ua , 9 ) "
  (13 14 15 16 17 18 19 20 21 22 1996 2100) (606) -1 0)
 (1668 uniq "( move ua , 3 ; move ua , 4 ) "
  (24 25 26 27 28 29 30 31 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
   84 85 86 87 88 89 90 91 92 93 148 149 195 196 202 526 558 564 585 1650
   1666 1730 1804 1820 1848 1863 1917 1918 1984 1991 2045 2051 2091 2098 2191
   2201 2327 2400 2469 2531 2558 2576 2855 2896 2953)
  (180 423 585 889) -1 6)
 (1669 uniq "( move ua , ul ; move ua + ul , 2 * 4 ) "
  (85 89 236 442 458 462 469 473 1708 2247 2265 2547 2842) () -1 0)
 (1670 uniq "( move ua , 2 ; move ua + 3 , 2 ) "
  (124 141 144 146 163 166 168 169 177 182 189 190 199 209 236 1708 1719 1747
   1794 1838 1848 1857 1889 1954 1969 2024 2091 2124 2390 2396 2470 2654 2752
   3051)
  () -1 1)
 (1671 uniq "( pen ua ; move ua , ul / 2 ; move ul , ul ) "
  (626 641 724 1655 1688 1694 1696 1713 1726 1746 1750 1761 1763 1791 1827
   1832 1833 1859 1867 1904 1911 1933 1978 1998 2034 2036 2059 2060 2067 2072
   2083 2087 2109 2115 2121 2123 2163 2187 2190 2200 2207 2210 2214 2222 2227
   2228 2236 2252 2261 2273 2300 2315 2316 2330 2334 2335 2337 2345 2364 2380
   2388 2393 2401 2402 2404 2422 2424 2427 2461 2473 2480 2489 2500 2502 2508
   2523 2562 2583 2593 2620 2622 2636 2646 2681 2688 2689 2693 2697 2721 2732
   2745 2751 2758 2812 2819 2820 2821 2826 2827 2869 2872 2889 2901 2907 2921
   2949 2960 2969 2973 2986 2998 3037 3057 3069 3077)
  () -1 0)
 (1672 uniq "( move ua , 4 ; pen ua ; move ul , 4 ) "
  (231 283 294 334 362 1725 1745 1748 1783 1786 1804 1855 1856 1913 1917 1932
   1945 1971 1974 1991 2023 2032 2048 2079 2132 2154 2202 2217 2220 2281 2327
   2349 2356 2430 2441 2496 2499 2649 2675 2679 2699 2703 2706 2710 2725 2731
   2737 2759 2776 2802 2806 2902 2919 2933 2983 3078)
  (1365) -1 1)
 (1673 uniq "( pen ua ; move 4 , 4 ; move 4 , ul ) "
  (268 270 271 293 295 320 331 333 336 337 338 348 356 364 385 1657 1674 1675
   1683 1685 1717 1722 1729 1731 1735 1772 1776 1778 1779 1784 1789 1798 1800
   1805 1809 1812 1813 1816 1828 1830 1860 1865 1876 1959 1967 1972 1976 1979
   1993 1996 2009 2038 2050 2058 2082 2086 2093 2100 2106 2116 2158 2166 2177
   2180 2181 2182 2185 2209 2231 2313 2322 2325 2329 2347 2348 2372 2378 2412
   2428 2443 2448 2458 2488 2506 2515 2519 2521 2566 2598 2602 2619 2668 2690
   2722 2741 2749 2774 2782 2793 2798 2800 2829 2835 2845 2848 2853 2865 2870
   2911 2922 2943 2959 2991 3014 3024 3033 3053 3064 3075 3091)
  () -1 0)
 (1674 uniq "( pen ua ; move 2 , 2 ; move ua , ul ) "
  (22 290 292 303 320 325 326 327 331 333 336 337 338 348 351 356 364 385 989
   1656 1657 1673 1675 1683 1685 1717 1722 1729 1731 1735 1760 1772 1776 1778
   1779 1784 1798 1800 1805 1809 1812 1813 1816 1828 1830 1831 1860 1865 1876
   1959 1972 1976 1979 1993 1996 2038 2044 2050 2056 2058 2086 2093 2106 2158
   2166 2177 2180 2182 2185 2189 2209 2231 2313 2325 2329 2357 2372 2378 2412
   2425 2431 2448 2458 2506 2515 2519 2566 2598 2602 2619 2640 2668 2690 2715
   2722 2729 2730 2741 2742 2777 2782 2793 2800 2825 2829 2835 2856 2865 2870
   2904 2911 2922 2943 2959 3014 3033 3075 3091)
  () -1 0)
 (1675 equiv "( pen ua ; move ua , 0 ; move 2 , ul ) "
  (22 270 271 292 293 296 320 322 325 326 331 333 338 348 351 356 364 385
   1251 1656 1657 1664 1673 1674 1683 1685 1705 1707 1720 1722 1728 1729 1731
   1735 1760 1763 1772 1776 1778 1779 1784 1788 1789 1798 1800 1805 1809 1812
   1813 1816 1828 1852 1860 1864 1865 1866 1876 1879 1928 1959 1967 1972 1976
   1979 1996 2009 2038 2050 2058 2082 2086 2093 2100 2106 2111 2114 2155 2158
   2166 2176 2177 2180 2181 2182 2185 2189 2209 2231 2245 2313 2322 2325 2357
   2372 2391 2412 2443 2448 2458 2488 2506 2515 2519 2542 2567 2574 2581 2598
   2602 2619 2668 2670 2677 2690 2722 2730 2741 2756 2772 2777 2782 2787 2793
   2798 2800 2829 2835 2838 2845 2848 2853 2865 2880 2893 2911 2922 2943 2987
   2991 3005 3014 3024 3033 3071 3075 3091)
  () 2567 2)
 (1676 uniq "( pen ua ; move ul - ua , ul ; move ua , ul ) "
  (278 670 1817 1852 1861 1881 1897 1911 1927 2043 2049 2069 2070 2107 2165
   2176 2239 2241 2242 2257 2270 2295 2307 2331 2379 2387 2433 2439 2453 2467
   2490 2510 2548 2573 2613 2614 2658 2663 2674 2682 2705 2717 2718 2727 2733
   2746 2816 2837 2843 2852 2942 2945 2967 2979 2982 2992 3005 3017 3038 3055
   3074 3076)
  () -1 0)
 (1677 uniq "( pen 2 + ul ; move ua / 3 , 4 ; move 0 - 2 , 2 ) "
  (1115 1751 2077 2333 2456 2836 3035) () -1 0)
 (1678 uniq "( pen 4 ; move ua + 4 , 4 ) "
  (34 61 95 97 99 104 106 159 1663 1734 1814) (158 159 268) -1 11)
 (1679 uniq "( move ua , ul / 3 ; pen ua + ul ; move 3 , ul ) "
  (1053 1878 2073 2101 2168 2202 2259 2395 2803) () -1 0)
 (1680 uniq "( pen ua ; move ua - ul , 5 ; move 2 , ul ) "
  (542 685 1687 1697 1702 1738 1749 1769 1770 1791 1833 1881 1897 1901 1909
   1911 1919 2037 2043 2075 2176 2224 2242 2300 2321 2345 2352 2379 2380 2417
   2424 2433 2447 2461 2483 2490 2510 2616 2641 2660 2682 2718 2791 2816 2837
   2847 2925 2979 3005 3019 3055)
  () -1 0)
 (1681 uniq "( move 4 , 3 ; pen ua ; move 4 , ul ) "
  (272 294 304 305 308 328 329 334 335 358 1725 1727 1745 1748 1759 1783 1786
   1825 1836 1855 1856 1895 1899 1913 1923 1932 1934 1945 1950 1974 1977 1980
   1991 1997 2023 2025 2026 2032 2079 2134 2154 2202 2217 2220 2230 2253 2268
   2324 2338 2344 2355 2423 2426 2496 2560 2577 2604 2699 2703 2706 2707 2710
   2731 2736 2776 2810 2833 2860 2895 3011 3022 3061)
  (864) -1 2)
 (1682 uniq "( move 3 - ua , ul ; pen 4 ; move 3 - ua , ul ) "
  (918 1712 1742 1822 2055 2144 2188 2342 2563 2783 2892 3047) () -1 0)
 (1683 uniq "( pen ua ; move 3 , 2 ; move ua , ul ) "
  (22 292 303 319 320 325 326 327 331 333 336 337 338 348 351 356 364 385
   1656 1657 1673 1674 1675 1685 1722 1729 1731 1735 1760 1765 1772 1776 1778
   1779 1784 1798 1800 1805 1809 1812 1813 1816 1828 1830 1831 1860 1865 1876
   1959 1972 1976 1979 1993 1996 2038 2044 2047 2050 2058 2086 2093 2106 2150
   2158 2166 2177 2180 2182 2185 2189 2209 2231 2245 2261 2301 2313 2347 2357
   2372 2378 2391 2412 2425 2428 2431 2448 2458 2506 2515 2519 2521 2566 2574
   2581 2598 2602 2619 2623 2640 2668 2690 2715 2722 2729 2730 2741 2749 2774
   2777 2782 2787 2793 2800 2825 2829 2835 2853 2856 2865 2870 2904 2906 2911
   2922 2927 2943 2959 2960 2987 3014 3024 3027 3033 3053 3075 3091)
  () -1 2)
 (1684 uniq "( pen ua ; move ua , 4 + ul ; move ua , 2 ) "
  (67 85 567 629 1650 1706 1715 1750 1803 1823 1829 1834 1840 1869 1886 1916
   1930 1939 1946 1952 1998 2208 2228 2326 2385 2518 2593 2597 2620 2700 2735
   2757 2767 2799 2822 2885 2915 2940 2979)
  () -1 0)
 (1685 uniq "( pen ua ; move ua , 4 ; move 4 , ul ) "
  (22 60 268 269 271 293 320 322 325 326 331 333 337 338 340 348 351 356 364
   385 1655 1656 1657 1664 1673 1674 1675 1683 1705 1707 1717 1720 1722 1728
   1729 1731 1735 1760 1772 1776 1778 1779 1784 1788 1789 1798 1800 1805 1809
   1812 1813 1816 1828 1860 1864 1865 1876 1879 1928 1959 1967 1972 1976 1978
   1979 1993 1996 2009 2038 2050 2058 2082 2086 2093 2100 2106 2111 2114 2116
   2155 2158 2166 2177 2180 2181 2182 2185 2189 2209 2231 2313 2325 2329 2347
   2348 2357 2372 2412 2428 2443 2448 2458 2488 2506 2515 2519 2521 2542 2566
   2567 2598 2602 2611 2614 2616 2619 2668 2670 2677 2690 2722 2730 2741 2749
   2756 2774 2777 2782 2793 2798 2800 2835 2845 2848 2853 2865 2880 2911 2922
   2943 2959 2991 3014 3024 3033 3053 3071 3075 3091)
  () -1 4)
 (1686 uniq "( move ua - ul , ua ; pen ua ; move 4 , ul ) "
  (91 639 696 702 1695 1736 1783 2238 2314 2708 2743 2938 3046) () -1 0)
 (1687 uniq "( pen ua ; move ua - ul , 0 ; move 5 , ul ) "
  (497 542 670 685 1680 1697 1702 1738 1749 1769 1791 1833 1881 1897 1901
   1911 1919 2034 2037 2075 2107 2176 2224 2242 2274 2300 2307 2321 2330 2345
   2352 2417 2447 2461 2483 2490 2616 2641 2660 2674 2718 2791 2843 2847 2925
   2979 3005)
  () -1 1)
 (1688 uniq "( pen ua ; move ua , ul / 3 ; move ul , ul ) "
  (641 724 1320 1655 1671 1694 1696 1713 1726 1750 1761 1803 1827 1832 1866
   1867 1904 1919 1933 1946 1978 1998 2031 2033 2034 2036 2064 2067 2072 2075
   2083 2087 2109 2123 2145 2149 2163 2187 2207 2216 2222 2227 2228 2236 2252
   2261 2298 2300 2315 2330 2334 2337 2364 2380 2388 2393 2401 2402 2404 2424
   2427 2473 2480 2489 2500 2502 2508 2523 2538 2583 2593 2620 2622 2636 2646
   2647 2681 2688 2693 2697 2721 2745 2761 2765 2794 2820 2821 2826 2827 2869
   2872 2889 2907 2921 2949 2973 2986 3037 3057 3062 3069 3087)
  (1320) -1 1)
 (1689 equiv "( pen ua * 2 ; move 3 , 0 ; move 4 , 4 ) "
  (419 545 580 1732 1744 1757 1873 1877 1983 2520 2533 2537 2853 2859) ()
  2853 0)
 (1690 uniq "( pen 3 ; move ul , 3 / ua ; move 4 , ul ) "
  (653 724 1733 1746 1752 1832 1845 1867 1926 1958 2013 2041 2104 2187 2315
   2348 2358 2370 2422 2445 2502 2630 2751 2824 2879 2884 2921 2935 2948 2977
   3034)
  () -1 0)
 (1691 uniq "( pen 4 ; move ua , ul ; move ua , 2 ) "
  (21 85 268 269 290 302 322 325 332 340 342 350 351 357 361 629 1656 1664
   1707 1720 1731 1760 1779 1788 1789 1798 1800 1830 1864 1925 1928 1967 1972
   2001 2009 2011 2044 2082 2095 2111 2114 2150 2189 2329 2357 2425 2431 2488
   2542 2611 2643 2651 2670 2735 2756 2793 2829 2856 2904 2906 2991 3007
   3071)
  (643) -1 0)
 (1692 uniq "( move ua , ua ; move ua , 9 * 3 ) "
  (86 145 164 168 170 176 193 222 229 230) () -1 0)
 (1693 equiv "( move 3 + 2 , ua ; move ua - ul , ul ) "
  (409 432 480 1149 2122 2339) () 2339 1)
 (1694 uniq "( pen ua ; move ua , 3 / 4 ; move ul , ul ) "
  (641 653 1655 1671 1688 1696 1726 1752 1761 1827 1845 1867 1904 1933 1978
   1998 2034 2067 2083 2087 2109 2123 2163 2207 2228 2252 2279 2297 2315 2316
   2337 2369 2380 2401 2402 2404 2422 2424 2427 2473 2523 2583 2636 2646 2662
   2689 2697 2742 2745 2751 2817 2826 2827 2832 2872 2874 2889 2907 2909 2960
   2973 2976 3037)
  () -1 0)
 (1695 uniq "( move ua - ul , 0 ; pen 4 ; move ua , ul ) "
  (224 696 702 1686 1736 2148 2238 2314 2708 2938 3046) (696) -1 0)
 (1696 equiv "( pen 4 ; move ua , 2 / ul ; move ul , ul ) "
  (1671 1688 1694 1715 1720 1733 1746 1760 1845 1904 1978 2204 2315 2474 2489
   2687 2735 2745 2827 2951)
  () 1760 0)
 (1697 uniq "( pen ua ; move ua - ul , 0 ; move 2 , 4 ) "
  (25 106 497 542 685 1680 1687 1702 1738 1749 1769 1770 1791 1833 1881 1897
   1911 1919 2037 2075 2176 2224 2242 2300 2321 2352 2447 2453 2454 2461 2490
   2508 2549 2616 2641 2660 2663 2705 2718 2791 2847 2952 2967 2979 3005)
  () -1 1)
 (1698 uniq "( move 4 + ul , 3 ; pen 4 ; move ua , ul * 2 ) "
  (915 1661 2171 2486 2723) () -1 0)
 (1699 uniq "( pen 7 ; move 3 , 0 ; move ua , ua - 2 ) "
  (455 616 669 1658 1837 1905 2035 2042 2112 2137 2160 2201 2328 2398 2844
   3090)
  () -1 0)
 (1700 uniq "( pen ua ; move 3 * 3 , 0 ) " (32 61 68 77 78 99)
  (61 77 78 95 161 211 219 454 664 732 882 1046 1080 1301 1423) -1 10)
 (1701 equiv "( move 4 , ua + ul ; pen ua + ul ; move 2 , 4 ) "
  (922 1802 2000 2079 2288 2310 2366 2384 2541 2592 2866 2920 3000) () 2866
  0)
 (1702 equiv "( pen ua ; move 4 + ul , 0 ; move 2 , ul ) "
  (542 575 1680 1687 1697 1703 1749 1769 1770 1791 1833 1852 1881 1909 1915
   1919 1987 2037 2159 2176 2242 2274 2321 2331 2345 2417 2472 2601 2746 2800
   2847 2907 2925 2946 2982 3005 3019 3040 3076)
  () 2690 0)
 (1703 equiv "( pen ua ; move 3 + ul , ul ; move 4 , ul ) "
  (543 582 678 1702 1738 1770 1833 1881 1896 1897 1901 1931 1955 2037 2072
   2075 2099 2103 2106 2108 2159 2173 2187 2224 2263 2274 2321 2345 2387 2417
   2454 2461 2467 2490 2549 2616 2637 2648 2658 2718 2746 2837 2915 2925 2946
   2952 2986 3040 3058 3088)
  () 3033 0)
 (1704 equiv "( move ua , ul ; pen ua + 4 ; move 3 , ul ) "
  (503 509 605 2202 2420 2478 2501) () 2202 0)
 (1705 uniq "( pen ua ; move ua , ua ; move 2 , 5 ) "
  (295 296 316 319 322 325 326 331 350 351 356 385 1656 1657 1664 1675 1685
   1707 1722 1728 1729 1772 1776 1778 1779 1784 1789 1798 1800 1805 1812 1813
   1816 1864 1879 1928 1959 1967 1972 1979 1996 2011 2038 2050 2058 2093 2100
   2111 2116 2155 2166 2180 2181 2189 2209 2245 2301 2357 2448 2458 2488 2519
   2521 2567 2598 2609 2619 2643 2670 2690 2730 2756 2787 2793 2800 2835 2848
   2880 2922 2987 2991 3027 3071)
  () -1 0)
 (1706 uniq "( pen ua ; move ua , ul + ul ; move ua , 3 ) "
  (97 629 1684 1715 1750 1803 1823 1834 1869 1886 1916 1930 1946 2039 2099
   2208 2228 2326 2330 2518 2549 2583 2593 2620 2622 2700 2735 2757 2767 2799
   2826 2885 2889 2915 2979 3077)
  () -1 0)
 (1707 uniq "( pen ua ; move ua , ul ; move 3 , 2 ) "
  (22 269 295 322 325 326 331 332 350 351 356 361 364 385 1656 1657 1664 1675
   1685 1691 1705 1720 1722 1729 1731 1776 1778 1779 1788 1789 1798 1800 1812
   1813 1816 1830 1864 1876 1925 1928 1955 1967 1972 1996 2009 2011 2038 2044
   2047 2058 2082 2095 2100 2106 2111 2114 2116 2155 2166 2177 2189 2222 2245
   2296 2301 2329 2347 2357 2391 2425 2428 2431 2447 2458 2488 2521 2542 2609
   2611 2623 2624 2643 2670 2677 2715 2722 2741 2749 2756 2777 2787 2793 2825
   2829 2835 2904 2911 2927 2943 2991 3007 3027 3033 3053 3071)
  (687) -1 2)
 (1708 uniq "( move ua , ul ; move ua + ul , 2 ) "
  (85 124 135 138 141 142 146 163 166 169 173 175 176 177 182 186 189 193 194
   199 236 240 244 253 277 458 460 461 462 744 1669 1670 1719 1747 1794 1838
   1848 1857 1889 1954 1969 2024 2091 2124 2139 2390 2396 2470 2553 2654
   2752)
  (458 460 1434) -1 14)
 (1709 uniq "( pen 3 ; move ua , ua / 4 ) "
  (65 70 72 73 76 82 107 112 114 315 1758 1903 1943 2306 2531 2576 2662 2832
   3043 3045)
  (315) -1 3)
 (1710 uniq "( move ua , ua ; move 4 , ul ; move 3 , ul / 2 ) " (960) () -1
  0)
 (1711 uniq "( move ul , ul ; move ua , 0 ; move ua , 2 ) "
  (44 456 523 601 1230 1818 2102 2136 2256 2399 2435 2883 3004) (1060) -1 0)
 (1712 uniq "( move 3 - ua , ul ; pen 4 ; move 0 - ua , ul ) "
  (918 1682 1822 1824 2055 2188 2342 2450 2563 2783 2892 3047) () -1 0)
 (1713 equiv "( pen ua ; move ua , ul - 3 ; move 3 , ul ) "
  (584 641 685 1655 1671 1688 1726 1763 1798 1803 1859 1866 1867 1897 1916
   1919 1946 2002 2020 2033 2034 2039 2072 2075 2109 2128 2131 2145 2149 2216
   2222 2236 2330 2334 2380 2393 2417 2424 2427 2480 2500 2508 2523 2562 2583
   2593 2636 2646 2681 2688 2721 2728 2745 2765 2794 2820 2826 2847 2872 2885
   2889 2969 2973 2998 3037 3069 3077)
  () 1859 0)
 (1714 uniq "( move 4 , 4 ; pen ua ; move ua , ua * ua ) "
  (2504 2672 2846 2863 3063) () -1 0)
 (1715 equiv "( pen ua ; move ua , 2 / ul ; move ua , 4 ) "
  (52 89 1656 1662 1684 1696 1706 1750 1823 1829 1834 1840 1886 1916 1936
   1939 1978 2161 2189 2204 2228 2298 2474 2508 2518 2549 2583 2593 2620 2622
   2667 2673 2735 2742 2745 2757 2763 2799 2826 2889 2917 2940 2941)
  () 2189 0)
 (1716 equiv "( pen ua ; move 3 , 4 / ul ; move 3 , ul ) "
  (517 584 641 1655 1662 1733 1823 1829 1840 1886 1933 1939 1990 2002 2072
   2131 2149 2159 2187 2204 2261 2285 2297 2388 2402 2404 2427 2474 2480 2500
   2523 2597 2636 2647 2688 2689 2693 2721 2722 2741 2745 2761 2763 2780 2827
   2941 2942 2951 2960 2986 3028 3034 3037)
  () 2722 0)
 (1717 equiv "( pen 3 ; move 2 , ua ; move 4 , ul ) "
  (271 292 293 296 303 336 356 385 1673 1674 1685 1722 1728 1729 1767 1772
   1778 1779 1784 1788 1805 1809 1813 1831 1865 1876 1879 1959 1979 2009 2047
   2050 2082 2093 2100 2106 2116 2158 2177 2181 2182 2231 2284 2313 2322 2325
   2329 2348 2378 2412 2443 2448 2458 2506 2515 2521 2566 2574 2575 2581 2598
   2609 2611 2624 2643 2668 2690 2729 2756 2774 2782 2798 2845 2856 2865 2870
   2880 2911 2959 2977 2987 3014 3024 3033 3075)
  () 2325 1)
 (1718 uniq "( move 2 , ul / 4 ; pen 2 ; move ua , ua ) "
  (579 1942 1988 2394 2603 2716) () -1 0)
 (1719 uniq "( move ua , 9 ; move ua + ul , 4 ) "
  (141 142 146 163 166 169 173 175 177 182 189 194 199 236 240 244 1670 1708
   1747 1794 1838 1848 1889 1954 1969 2024 2091 2390 2396 2400 2470 2553 2579
   2654 2752)
  () -1 3)
 (1720 uniq "( pen 4 ; move ua , ul ; move ul , ul ) "
  (268 269 270 290 293 302 326 331 338 340 342 356 361 364 385 1006 1049 1656
   1657 1664 1675 1685 1691 1696 1707 1722 1728 1729 1731 1760 1776 1778 1779
   1798 1800 1812 1813 1816 1876 1879 1925 1967 1972 1996 2009 2011 2038 2047
   2057 2058 2082 2095 2106 2111 2114 2150 2166 2181 2185 2322 2443 2458 2542
   2567 2611 2730 2741 2756 2777 2793 2798 2845 2848 2856 2865 2880 3014 3033
   3071)
  () -1 1)
 (1721 uniq "( move ua + ul , ul ; move 3 , 3 ; move ua , ul ) "
  (957 2126 2196 3023) () -1 0)
 (1722 uniq "( pen ua ; move ua , 5 ; move 4 , ul ) "
  (22 268 269 271 293 320 322 325 326 331 333 338 348 351 356 364 385 1656
   1657 1664 1673 1674 1675 1683 1685 1705 1707 1717 1720 1728 1729 1731 1735
   1760 1772 1776 1778 1779 1784 1788 1789 1798 1800 1805 1809 1812 1813 1816
   1828 1860 1864 1865 1876 1879 1928 1959 1967 1972 1976 1979 1993 1996 2009
   2038 2050 2058 2082 2086 2093 2100 2106 2111 2114 2116 2155 2158 2166 2177
   2180 2181 2182 2185 2189 2209 2231 2313 2325 2329 2348 2357 2372 2412 2428
   2443 2448 2458 2488 2506 2515 2519 2521 2542 2566 2567 2598 2602 2611 2619
   2668 2670 2677 2690 2722 2730 2741 2749 2756 2774 2777 2782 2793 2798 2800
   2835 2845 2848 2853 2865 2880 2911 2922 2943 2991 3014 3024 3033 3053 3071
   3075 3091)
  () -1 0)
 (1723 uniq "( move 3 + 2 , ul + ul ; move ua , 4 ) " (396 413 438) (718) -1
  0)
 (1724 uniq "( move ua , 4 / 3 ; move ua , 4 ; move 4 , 2 ) "
  (729 1737 1863 2309 2359 2512 2797 2805 2980 2990) () -1 1)
 (1725 uniq "( move 3 , 4 ; pen ua ; move 2 , ul ) "
  (267 283 285 288 291 294 305 308 328 329 334 335 358 1672 1681 1727 1745
   1748 1783 1825 1836 1856 1913 1923 1932 1934 1945 1974 1980 2023 2032 2079
   2134 2154 2168 2202 2217 2220 2230 2268 2293 2304 2317 2344 2355 2423 2426
   2441 2496 2497 2499 2577 2604 2649 2699 2703 2707 2710 2731 2776 2806 2810
   2833 2860 2919 2983 3022)
  () -1 0)
 (1726 equiv "( pen ua ; move ua , ul / 2 ; move 4 , ul ) "
  (55 93 641 653 656 724 1655 1671 1688 1694 1713 1733 1746 1750 1752 1761
   1763 1779 1791 1813 1827 1832 1833 1845 1859 1867 1904 1911 1933 1958 1978
   2034 2036 2060 2067 2072 2075 2083 2087 2109 2115 2121 2123 2163 2187 2190
   2200 2204 2207 2210 2216 2222 2224 2227 2228 2236 2252 2261 2273 2330 2334
   2335 2337 2345 2364 2376 2380 2388 2393 2401 2402 2404 2422 2424 2427 2461
   2473 2474 2480 2489 2490 2500 2502 2508 2523 2535 2562 2583 2593 2616 2620
   2622 2625 2636 2676 2681 2688 2689 2693 2697 2721 2732 2745 2751 2758 2765
   2794 2812 2819 2820 2821 2826 2827 2869 2872 2889 2901 2907 2921 2925 2960
   2969 2973 2986 2998 3034 3037 3042 3057 3062 3067 3069 3077 3088)
  () 1978 0)
 (1727 uniq "( move 3 , 2 ; pen ua ; move 4 , ul ) "
  (267 272 291 305 308 328 329 334 335 358 1681 1725 1745 1748 1759 1783 1786
   1825 1836 1855 1856 1895 1913 1923 1932 1934 1945 1974 1977 1980 2023 2026
   2032 2132 2134 2154 2202 2217 2220 2230 2268 2304 2317 2320 2324 2338 2344
   2355 2423 2426 2497 2560 2577 2604 2699 2703 2706 2707 2731 2736 2776 2810
   2833 2860 2895 2902 2919 2983 3022 3061)
  () -1 0)
 (1728 uniq "( pen 3 ; move ua , ua ; move 2 , ul ) "
  (271 292 293 296 303 316 322 331 336 350 351 356 385 1203 1657 1664 1675
   1685 1705 1717 1720 1722 1729 1760 1767 1772 1776 1778 1779 1784 1788 1798
   1800 1805 1812 1813 1816 1831 1864 1879 1928 1959 1972 1979 1996 2009 2011
   2038 2047 2050 2058 2082 2093 2100 2114 2155 2166 2180 2181 2209 2245 2284
   2296 2322 2325 2348 2357 2378 2443 2448 2458 2519 2542 2566 2567 2574 2575
   2581 2598 2609 2611 2619 2624 2643 2690 2729 2730 2756 2777 2793 2798 2800
   2845 2848 2865 2870 2880 2922 2987 3007 3014 3071)
  () -1 1)
 (1729 uniq "( pen ua ; move ua , 7 ; move 4 , ul ) "
  (22 268 269 271 293 320 322 325 326 331 333 338 348 351 356 364 385 1656
   1657 1664 1673 1674 1675 1683 1685 1705 1707 1717 1720 1722 1728 1731 1735
   1760 1772 1776 1778 1779 1784 1788 1789 1798 1800 1805 1809 1812 1813 1816
   1828 1860 1864 1865 1876 1879 1928 1959 1967 1972 1976 1979 1993 1996 2009
   2038 2044 2050 2058 2082 2086 2087 2093 2100 2106 2111 2114 2116 2155 2158
   2166 2177 2180 2181 2182 2185 2189 2209 2224 2231 2313 2325 2329 2348 2357
   2372 2412 2428 2443 2448 2458 2488 2506 2515 2519 2521 2542 2566 2567 2574
   2598 2602 2611 2619 2668 2670 2677 2690 2722 2730 2733 2741 2749 2756 2774
   2777 2782 2793 2798 2800 2835 2845 2848 2853 2865 2880 2911 2922 2925 2943
   2991 3014 3024 3033 3053 3071 3075 3091)
  () -1 2)
 (1730 uniq "( move ua , 7 ; move ua , 2 ) "
  (24 25 26 27 28 29 30 31 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
   84 85 86 87 88 89 90 91 92 93 1650 1666 1668 2045 2098 2191 2201 2400 2558
   2620 2654)
  () -1 7)
 (1731 uniq "( pen ua ; move 3 , ul ; move ua , ul ) "
  (22 290 292 303 319 320 325 327 331 332 333 336 337 338 348 351 356 357 361
   364 385 1312 1656 1657 1664 1673 1674 1675 1683 1685 1691 1707 1720 1722
   1729 1735 1772 1776 1778 1779 1784 1798 1800 1805 1809 1812 1813 1816 1828
   1830 1831 1860 1865 1876 1959 1967 1972 1976 1979 1996 2001 2009 2038 2044
   2047 2050 2058 2082 2086 2093 2106 2111 2114 2137 2150 2158 2166 2177 2180
   2182 2185 2189 2209 2231 2245 2261 2301 2313 2329 2347 2357 2372 2378 2391
   2402 2412 2425 2428 2431 2448 2458 2506 2515 2519 2521 2566 2574 2581 2598
   2602 2619 2623 2640 2668 2690 2721 2722 2729 2741 2749 2756 2774 2782 2787
   2793 2800 2825 2829 2853 2856 2870 2904 2906 2911 2922 2927 2942 2943 2959
   2965 2987 3024 3027 3033 3053 3071 3075 3091)
  (1387) -1 0)
 (1732 equiv "( pen ua * 2 ; move 3 , 0 ; move 4 , ul ) "
  (545 630 1689 1744 1757 1771 1799 1850 1871 1873 1877 1890 1894 1907 1957
   1983 2158 2407 2520 2537)
  () 3024 0)
 (1733 equiv "( pen 3 ; move ua , 4 / ul ; move 4 , ul ) "
  (60 93 567 1655 1662 1690 1696 1716 1726 1746 1827 1832 1845 1867 1886 1933
   1978 2082 2087 2123 2175 2204 2315 2337 2443 2474 2489 2597 2751 2827 2872
   2921 2973 2977 3057 3069)
  () 2443 0)
 (1734 uniq "( pen ua ; move ua + 2 , 4 ) "
  (34 36 61 68 77 95 97 99 104 106 210 1663 1678 1770 1814 2232 2754 3077)
  (210 793) -1 6)
 (1735 uniq "( pen ua ; move 3 , 4 ; move ua , ul ) "
  (22 292 303 319 320 325 327 331 333 336 337 338 348 351 356 364 385 862
   1656 1657 1673 1674 1675 1683 1685 1722 1729 1731 1772 1776 1778 1779 1784
   1798 1800 1805 1809 1812 1813 1816 1828 1830 1831 1860 1865 1876 1959 1972
   1976 1979 1996 2035 2038 2044 2047 2050 2058 2086 2093 2106 2150 2158 2166
   2177 2180 2181 2182 2185 2189 2192 2209 2231 2245 2301 2313 2347 2357 2372
   2378 2391 2402 2412 2425 2428 2431 2443 2448 2458 2506 2515 2519 2521 2566
   2574 2581 2598 2602 2619 2621 2623 2640 2668 2690 2722 2729 2741 2749 2774
   2779 2782 2787 2793 2800 2825 2829 2848 2853 2856 2870 2904 2906 2911 2922
   2927 2943 2959 2987 2991 3008 3024 3027 3033 3053 3075 3091)
  () -1 3)
 (1736 uniq "( move ua - ul , 0 ; pen 4 ; move 2 , ul ) "
  (696 702 1686 1695 2238 2314 2708 2938 3046) () -1 0)
 (1737 uniq "( move ua , ul / 3 ; move ua , 4 ; move 2 , 2 ) "
  (729 1724 2309 2318 2359 2512 2797 2805 2980 2990 3054) () -1 1)
 (1738 uniq "( pen ua ; move ua - ul , ul ; move 4 , 2 ) "
  (54 106 497 542 582 678 685 1680 1687 1697 1703 1749 1769 1770 1791 1869
   1881 1897 1911 1916 1919 1930 1931 1955 1967 2075 2099 2103 2173 2224 2242
   2300 2321 2326 2345 2352 2364 2393 2417 2447 2454 2461 2467 2490 2549 2562
   2616 2641 2648 2660 2718 2847 2915 2925 2952 2979 3058)
  () -1 0)
 (1739 uniq "( pen ua - 5 ; move 4 , 4 ; move 3 + ul , ul ) "
  (845 1796 1994 2172 2442 2887 2913 2934 3064) () -1 0)
 (1740 uniq "( pen ua ; move 4 , ul ; move ua + ul , 4 ) "
  (59 618 646 1663 2094 2343 2382 2587) () -1 0)
 (1741 uniq "( move ua , ua * ua ; move ua , 2 ) "
  (84 137 140 152 178 179 187 196 225 227 228 232 233 995 1665 1754 1984 2291
   2585 2931)
  () -1 0)
 (1742 uniq "( move ua , ul ; pen 4 ; move 3 - ua , ul ) "
  (484 642 1682 1824 1924 2450 2465 2586 2823 2954 2956 3065 3085) () -1 0)
 (1743 uniq "( move ua , ul / ua ; pen ua ; move 3 , 2 ) "
  (47 658 705 1942 1982 2394 2403 2603 2778 2813 2930 3013 3082) () -1 0)
 (1744 equiv "( pen ua * ul ; move 3 , 0 ; move 4 , 2 ) "
  (1689 1732 1757 1768 1771 1799 1850 1873 1877 1890 1894 2012 2028 2084 2271
   2432 2520 2533 2537 2655 2665 2788 2859)
  () 2521 0)
 (1745 uniq "( move ua , 4 ; pen ua ; move 2 , ul ) "
  (283 285 288 294 328 329 334 335 358 929 1672 1681 1725 1727 1748 1759 1783
   1786 1825 1836 1855 1856 1913 1923 1932 1934 1945 1950 1971 1974 1980 1991
   2003 2023 2032 2048 2079 2118 2132 2134 2154 2202 2217 2220 2230 2268 2281
   2293 2320 2324 2338 2344 2349 2355 2356 2423 2426 2430 2441 2496 2497 2499
   2577 2649 2675 2679 2699 2703 2706 2707 2710 2759 2776 2802 2806 2810 2833
   2876 2902 2919 3022 3078)
  () -1 2)
 (1746 equiv "( pen 3 ; move ua , 2 / 2 ; move 4 , ul ) "
  (55 641 1655 1671 1690 1696 1726 1733 1827 1832 1845 1867 1904 1978 2034
   2059 2087 2115 2121 2123 2204 2227 2315 2335 2337 2422 2445 2473 2474 2489
   2745 2751 2758 2765 2819 2821 2824 2869 2872 2901 2921 2973 2977 2986 3014
   3034 3057 3069 3088)
  () 2082 0)
 (1747 uniq "( move ua , ul ; move ua - ul , 2 ) "
  (85 138 141 146 163 166 169 176 177 186 189 193 194 199 236 240 248 277 679
   988 1670 1708 1719 1848 1954 1969 2390 2654 2752)
  (519 988 1062 1238) -1 4)
 (1748 uniq "( move ua , 4 ; pen ua ; move 4 , ul ) "
  (60 91 283 288 294 305 308 313 328 329 334 335 358 1672 1681 1725 1727 1745
   1759 1783 1786 1825 1836 1855 1856 1895 1913 1923 1932 1934 1945 1950 1971
   1974 1977 1980 1991 2003 2023 2026 2032 2048 2132 2134 2154 2156 2202 2217
   2220 2230 2253 2268 2281 2293 2320 2324 2338 2344 2349 2355 2356 2423 2426
   2430 2441 2496 2499 2560 2577 2604 2649 2675 2679 2699 2703 2706 2707 2731
   2736 2759 2776 2802 2806 2810 2833 2860 2876 2895 2902 2919 3061)
  () -1 2)
 (1749 uniq "( pen ua ; move ua - ul , 0 ; move 2 , 7 ) "
  (497 542 685 1680 1687 1697 1702 1738 1769 1770 1791 1833 1881 1897 1911
   1919 2037 2075 2176 2224 2242 2300 2321 2352 2447 2453 2461 2490 2616 2641
   2660 2663 2718 2791 2847 2979 3005)
  () -1 0)
 (1750 uniq "( pen ua ; move ua , ul / 2 ; move ua , 2 ) "
  (85 114 629 641 724 1671 1684 1688 1706 1715 1726 1803 1823 1827 1829 1832
   1840 1867 1869 1882 1886 1904 1911 1916 1929 1939 1946 1952 1963 1990 1998
   2013 2031 2034 2036 2039 2060 2064 2067 2096 2115 2121 2146 2149 2163 2190
   2200 2206 2207 2208 2210 2222 2227 2228 2244 2260 2261 2273 2298 2316 2332
   2364 2365 2380 2388 2393 2401 2402 2424 2427 2429 2462 2473 2480 2482 2505
   2508 2523 2535 2538 2557 2562 2583 2593 2620 2622 2673 2676 2693 2704 2721
   2726 2732 2750 2757 2801 2812 2819 2820 2821 2826 2869 2872 2885 2889 2894
   2915 2940 2944 2949 2960 2969 2976 2979 2986 3037 3057 3067 3069 3077)
  () -1 1)
 (1751 uniq "( pen ua + ul ; move ua / 2 , 4 ; move 0 - 2 , 2 ) "
  (1115 1677 2077 2333 2456 2836 3083) () -1 0)
 (1752 equiv "( pen ua ; move 2 , 3 / 0 ; move 4 , ul ) "
  (653 1655 1690 1694 1726 1827 1845 1867 1904 1952 1978 2072 2083 2087 2104
   2187 2204 2236 2279 2297 2334 2335 2412 2422 2474 2500 2502 2535 2625 2630
   2688 2689 2696 2742 2751 2773 2817 2820 2869 2872 2909 2935 2948 2960 2973
   2977 2986 3034 3062 3068)
  () 2412 0)
 (1753 uniq "( move 4 , 4 ; pen 3 + ul ; move 2 + 0 , ul ) "
  (927 1874 2138 2578 2786) () -1 0)
 (1754 equiv "( move ua , ul - 4 ; move ua , 2 ) "
  (85 137 139 148 149 178 179 191 228 243 247 249 276 1650 1741 1819 2755
   2931)
  () 2931 1)
 (1755 uniq "( move 4 + 4 , ul ; move ua , 2 ) "
  (117 143 198 354 2251 2254 2755 2978) () -1 0)
 (1756 uniq "( pen 4 ; move 4 , 3 / 0 ; move 3 , 2 ) "
  (430 1795 1929 1990 2290 2316 2358 2369 2482 2638 2689 2744 2970) () -1 0)
 (1757 uniq "( pen 3 * ul ; move 3 , 0 ; move 4 , 2 ) "
  (1689 1732 1744 1768 1873 1877 2012 2084 2271 2520 2537 2859) () -1 0)
 (1758 uniq "( pen 3 ; move ua , 3 + 2 ) "
  (18 34 38 65 67 69 70 72 76 82 98 107 1709 1943 1985 2213 2306) (588 607)
  -1 1)
 (1759 uniq "( move ua , ul ; pen 4 ; move 4 , ul ) "
  (60 93 288 305 308 328 329 335 1681 1727 1745 1748 1783 1786 1855 1856 1895
   1913 1923 1945 1950 1971 1974 1977 1980 2023 2025 2026 2032 2097 2154 2202
   2217 2220 2253 2268 2281 2293 2314 2320 2324 2327 2338 2344 2426 2499 2604
   2703 2706 2707 2731 2736 2776 2802 2833 2860 2895)
  (642) -1 0)
 (1760 uniq "( pen 4 ; move ua , 2 ; move ul , ul ) "
  (268 269 270 293 302 326 327 333 338 340 342 356 364 385 1135 1657 1674
   1675 1683 1685 1691 1696 1720 1722 1728 1729 1776 1778 1779 1798 1800 1812
   1813 1816 1879 1925 1972 1996 2009 2011 2038 2058 2082 2114 2150 2181 2182
   2185 2189 2231 2296 2322 2362 2378 2443 2542 2566 2567 2729 2730 2756 2777
   2793 2798 2825 2835 2845 2848 2865 2880 2911 2943 3007 3014 3071)
  (1696) -1 1)
 (1761 uniq "( pen ua ; move ua , 3 + 2 ; move ul , ul ) "
  (626 641 1671 1688 1694 1726 1763 1827 1859 1904 2034 2059 2083 2109 2214
   2315 2316 2326 2401 2422 2473 2646 2689 2751 2827 2960 3077)
  (1006) -1 0)
 (1762 uniq "( pen 3 - 0 ; move ua + ul , 2 + ul ; move 2 , ul ) "
  (1187 2756) () -1 0)
 (1763 uniq "( pen ua ; move ua , 0 - 2 ; move 2 , ul ) "
  (626 641 1671 1675 1713 1726 1761 1791 1827 1833 1859 1866 1904 1933 1970
   2017 2020 2027 2033 2034 2058 2059 2083 2109 2121 2128 2145 2214 2227 2237
   2252 2330 2380 2424 2473 2562 2642 2646 2693 2697 2728 2757 2765 2812 2821
   2969 2998)
  () -1 0)
 (1764 uniq "( pen 4 * 2 ; move ua , ul ; move 3 , 4 ) " (419 576 1793)
  (627 1202) -1 0)
 (1765 uniq "( pen ua ; move 3 , 2 ; move ua , ul / 2 ) "
  (1658 1683 2035 2092 2137 2398 2540) () -1 0)
 (1766 uniq "( move 4 + ul , 3 + ul ; ( move 4 , ua ; move ua , 2 ) ) "
  (1417) () -1 0)
 (1767 uniq "( pen 3 ; move ul , ua ; move ua , 4 ) "
  (292 296 303 332 336 337 348 350 351 357 361 1656 1717 1728 1805 1831 1851
   1993 2001 2155 2189 2284 2296 2348 2357 2378 2383 2425 2575 2609 2624 2640
   2643 2729 2771 2870 2906 2987 3009)
  () -1 0)
 (1768 uniq "( pen 3 * ul ; move 3 , 3 ; move 4 , 2 ) "
  (1744 1757 2520 2537 2859) () -1 0)
 (1769 uniq "( pen ua ; move ua - ul , 9 ; move 2 , ul ) "
  (542 685 1680 1687 1697 1702 1738 1749 1770 1791 1833 1881 1897 1901 1909
   1911 1919 1996 2037 2075 2176 2224 2242 2300 2321 2345 2352 2380 2417 2424
   2433 2447 2461 2483 2490 2510 2616 2641 2660 2682 2718 2791 2816 2837 2847
   2925 2979 3005 3019 3055)
  () -1 0)
 (1770 uniq "( pen ua ; move ua + ul , ul ; move 2 , 4 ) "
  (542 582 678 1664 1680 1697 1702 1703 1734 1738 1749 1769 1791 1833 1869
   1881 1896 1897 1909 1919 1931 1955 2037 2099 2103 2108 2159 2173 2321 2345
   2352 2417 2447 2454 2490 2508 2549 2637 2648 2660 2718 2746 2915 2925 2946
   2952 2967 2979 3019)
  () -1 0)
 (1771 equiv "( pen ua + ul ; move 3 , ul ; move 4 , ul ) "
  (504 624 665 689 721 1732 1744 1799 1811 1815 1849 1850 1871 1890 1894 1898
   1907 1957 2106 2157 2184 2373 2407 2533 2537 2655 2792 2807 2851 2950)
  () 2106 1)
 (1772 equiv "( pen ua ; move 4 , ua ; move 4 , ul ) "
  (20 22 270 271 293 295 319 320 322 331 333 336 338 348 351 356 364 385 1657
   1673 1674 1675 1683 1685 1705 1717 1722 1728 1729 1731 1735 1776 1778 1779
   1784 1789 1798 1800 1805 1809 1812 1813 1816 1828 1830 1860 1864 1865 1876
   1959 1967 1972 1976 1979 1993 1996 2009 2038 2050 2058 2082 2086 2093 2100
   2106 2116 2155 2158 2166 2177 2180 2182 2185 2209 2231 2245 2284 2301 2313
   2322 2325 2329 2348 2357 2372 2378 2412 2428 2443 2448 2458 2488 2506 2515
   2519 2521 2566 2575 2598 2602 2619 2635 2668 2690 2722 2741 2749 2774 2782
   2793 2798 2800 2829 2835 2845 2853 2865 2870 2911 2922 2943 2987 3014 3024
   3027 3033 3053 3075 3091)
  () 3075 1)
 (1773 uniq "( pen ua ; move 2 , ul / 4 ; move ua , 2 / 4 ) "
  (849 1774 1882 2021 2074 2267 2311 2451 2886 2904) () -1 0)
 (1774 uniq "( pen ua ; move 2 , ul / 4 ; move ua , 2 / ua ) "
  (849 946 1773 1882 2021 2074 2267 2311 2451 2904) () -1 1)
 (1775 uniq "( move ua , 4 / 3 ; pen 2 ; move ua , 2 ) "
  (48 579 1650 1806 1942 1982 1988 2394 2403 2603 2632 2716 2796 2850 3012
   3013 3032 3082)
  () -1 0)
 (1776 uniq "( pen ua ; move ua , 2 ; move 3 , ul ) "
  (22 269 270 293 295 320 322 325 326 327 331 333 338 348 351 356 364 385 641
   1656 1657 1664 1673 1674 1675 1683 1685 1705 1707 1720 1722 1728 1729 1731
   1735 1760 1772 1778 1779 1784 1789 1798 1800 1805 1809 1812 1813 1816 1828
   1859 1860 1864 1865 1876 1879 1928 1959 1967 1972 1976 1979 1993 1996 2009
   2038 2047 2050 2058 2082 2086 2093 2095 2100 2106 2111 2114 2155 2158 2166
   2177 2180 2181 2182 2185 2189 2209 2231 2296 2313 2357 2372 2378 2412 2443
   2448 2458 2488 2506 2515 2519 2542 2566 2567 2598 2602 2609 2619 2668 2670
   2677 2690 2715 2722 2729 2730 2741 2745 2756 2777 2782 2793 2798 2800 2825
   2835 2845 2848 2865 2880 2911 2922 2927 2943 2991 3007 3014 3027 3033 3071
   3074 3075 3091)
  () -1 1)
 (1777 uniq "( ( pen 3 ; move ua , ul ) ; move ul , 2 - ua ; move 3 , ul ) "
  (1615) () -1 0)
 (1778 uniq "( pen ua ; move ua , 0 ; move 4 , ul ) "
  (22 51 268 269 270 271 292 293 320 322 325 326 331 333 338 348 351 356 364
   385 1656 1657 1664 1673 1674 1675 1683 1685 1705 1707 1717 1720 1722 1728
   1729 1731 1735 1760 1772 1776 1779 1784 1788 1789 1798 1800 1805 1809 1812
   1813 1816 1828 1860 1864 1865 1876 1879 1928 1959 1967 1972 1976 1979 1993
   1996 2009 2038 2050 2058 2082 2086 2093 2100 2106 2111 2114 2116 2155 2158
   2166 2177 2180 2181 2182 2185 2189 2209 2231 2313 2322 2325 2329 2348 2357
   2372 2391 2412 2428 2443 2448 2458 2488 2506 2515 2519 2521 2542 2566 2567
   2598 2602 2611 2619 2668 2670 2674 2677 2690 2722 2730 2741 2749 2756 2774
   2777 2782 2787 2793 2798 2800 2829 2835 2845 2848 2853 2865 2880 2911 2922
   2943 2991 3014 3024 3033 3053 3071 3075 3091)
  (356) -1 2)
 (1779 equiv "( pen ua ; move ua , ul ; move 4 , ul ) "
  (22 93 268 269 271 293 320 322 325 326 331 333 338 348 351 356 361 364 385
   1656 1657 1664 1673 1674 1675 1683 1685 1691 1705 1707 1717 1720 1722 1726
   1728 1729 1731 1735 1760 1772 1776 1778 1784 1788 1789 1798 1800 1805 1809
   1812 1813 1816 1828 1830 1860 1864 1865 1867 1876 1879 1925 1928 1959 1967
   1972 1976 1979 1993 1996 2009 2038 2047 2050 2058 2082 2086 2093 2095 2100
   2106 2111 2114 2116 2150 2155 2158 2166 2177 2180 2181 2182 2185 2189 2209
   2231 2313 2325 2329 2348 2357 2372 2412 2425 2428 2431 2443 2448 2458 2467
   2488 2490 2506 2515 2519 2521 2542 2566 2567 2598 2602 2611 2619 2668 2670
   2677 2690 2722 2730 2741 2749 2756 2774 2777 2782 2793 2798 2800 2835 2845
   2848 2853 2856 2865 2872 2880 2904 2911 2922 2927 2943 2991 3014 3024 3033
   3053 3071 3075 3091)
  () 2009 1)
 (1780 uniq "( move 2 + 7 , 0 ; ( pen 4 ; move ua , 2 ) ) "
  (734 1801 1854 2153) () -1 0)
 (1781 uniq "( pen 4 ; move ua , ul / ua ; move 2 , 3 / 4 ) "
  (946 951 1910 2248 3031) () -1 0)
 (1782 uniq "( move 5 , 2 ; pen 3 + ul ; move 4 , ul ) "
  (489 569 625 1965 2449 2664 2808) () -1 0)
 (1783 equiv "( move ua , ua ; pen ua ; move 4 , ul ) "
  (91 283 285 288 305 308 328 329 334 335 358 1043 1672 1681 1686 1725 1727
   1745 1748 1759 1786 1804 1825 1836 1855 1856 1895 1913 1923 1932 1934 1945
   1950 1971 1974 1977 1980 1991 2003 2023 2026 2032 2048 2079 2132 2134 2154
   2156 2202 2211 2217 2220 2230 2253 2268 2281 2293 2320 2324 2338 2344 2349
   2355 2356 2375 2423 2426 2430 2441 2496 2499 2560 2577 2604 2649 2679 2699
   2703 2706 2707 2731 2736 2759 2776 2802 2806 2810 2833 2860 2876 2895 2902
   3011 3061)
  () 1913 2)
 (1784 equiv "( pen ua ; move 4 , ua ; move 2 , ul ) "
  (17 20 22 270 271 295 296 319 320 322 331 333 336 338 348 351 356 364 385
   1657 1664 1673 1674 1675 1683 1685 1705 1717 1722 1728 1729 1731 1735 1772
   1776 1778 1779 1798 1800 1805 1809 1812 1813 1816 1828 1830 1860 1864 1865
   1876 1879 1928 1959 1972 1976 1979 1996 2038 2050 2058 2086 2093 2100 2106
   2116 2155 2158 2166 2177 2180 2181 2182 2185 2209 2231 2245 2301 2313 2322
   2357 2372 2378 2412 2448 2458 2506 2515 2519 2521 2567 2574 2581 2598 2602
   2619 2668 2690 2722 2730 2741 2756 2782 2787 2793 2800 2829 2848 2864 2870
   2880 2908 2911 2922 2943 2987 3027 3033 3071 3075 3091)
  () 2800 0)
 (1785 equiv "( move ua , 2 ; ( pen 4 * 4 ; move 2 , ul ) ) " (749) () 2023
  0)
 (1786 uniq "( move ua , ul ; pen ua ; move 4 , 2 ) "
  (17 54 283 291 297 308 313 328 329 335 362 1672 1681 1727 1745 1748 1759
   1783 1855 1856 1899 1913 1923 1945 1971 1974 1980 1991 1997 2023 2025 2032
   2048 2097 2132 2154 2156 2202 2217 2220 2253 2268 2281 2293 2304 2317 2324
   2327 2338 2344 2349 2350 2356 2386 2409 2426 2430 2441 2496 2497 2499 2560
   2604 2649 2675 2679 2691 2703 2706 2707 2731 2759 2776 2802 2806 2833 2858
   2860 2902 2919 3022 3061)
  () -1 1)
 (1787 uniq "( move ua , 0 / ua ; move 2 , ul ; move 4 , ul ) "
  (870 883 2305 2414 2524) () -1 0)
 (1788 uniq "( pen 3 ; move ua , 0 ; move 4 , 2 ) "
  (17 268 269 271 280 292 293 296 322 332 350 356 1675 1685 1691 1707 1717
   1722 1728 1729 1778 1779 1789 1812 1813 1864 1879 1925 1928 1967 2009 2011
   2082 2095 2100 2116 2158 2181 2284 2296 2322 2325 2329 2348 2357 2391 2428
   2443 2488 2521 2542 2566 2567 2575 2609 2611 2624 2643 2670 2756 2787 2798
   2829 2835 2845 2853 2865 2880 2991 3007 3014 3024 3053 3075)
  () -1 2)
 (1789 uniq "( pen ua ; move ua , 3 ; move 4 , 2 ) "
  (17 268 269 293 295 322 325 326 350 351 356 385 1656 1657 1664 1673 1675
   1685 1691 1705 1707 1722 1729 1772 1776 1778 1779 1788 1798 1800 1809 1812
   1813 1816 1830 1864 1876 1879 1925 1928 1967 1972 1976 1979 1993 1996 2009
   2011 2038 2044 2058 2082 2093 2095 2100 2106 2111 2116 2155 2158 2177 2182
   2189 2231 2245 2301 2313 2326 2329 2347 2348 2357 2391 2393 2412 2428 2431
   2438 2443 2488 2506 2515 2521 2611 2623 2643 2651 2668 2670 2677 2749 2782
   2787 2793 2798 2825 2829 2835 2845 2853 2865 2904 2991 3007 3014 3027 3033
   3053 3075)
  () -1 0)
 (1790 uniq "( pen ua ; move 2 , 2 ; move 3 , ua / 4 ) "
  (557 2569 2596 2715 2878) () -1 0)
 (1791 uniq "( pen ua ; move ua - ul , 2 ; move 2 , ul ) "
  (542 641 685 1671 1680 1687 1697 1702 1726 1738 1749 1763 1769 1770 1817
   1833 1881 1897 1901 1909 1911 1919 2034 2037 2058 2075 2176 2224 2227 2242
   2300 2321 2345 2352 2380 2417 2424 2433 2447 2461 2473 2483 2490 2510 2573
   2616 2641 2660 2682 2693 2718 2791 2816 2821 2837 2847 2925 2979 3005 3019
   3055 3074 3088)
  () -1 2)
 (1792 uniq "( move ua , 4 ; move ua , ua - 2 ) "
  (134 136 164 168 170 171 172 176 181 193 202 226 230 237 239 242 1650 1905
   2030 3051)
  (1335) -1 0)
 (1793 equiv "( pen 4 * 2 ; move ua , ul ; move 3 , ul ) "
  (576 1764 1877 2114) () 1798 1)
 (1794 equiv "( move ua , ua ; move ua + 2 , 4 ) "
  (88 142 163 166 169 173 177 189 194 199 210 222 236 244 1670 1708 1719 1838
   1848 1889 1954 1969 2024 2091 2396 2470 2579 2654 2752)
  () 1889 0)
 (1795 equiv "( pen 4 ; move 4 , 3 / ul ; move ua , 2 ) "
  (28 430 629 1756 1823 1829 1840 1845 1886 1929 1939 1963 2013 2031 2041
   2096 2146 2190 2206 2208 2285 2290 2316 2369 2370 2385 2389 2429 2459 2462
   2482 2505 2597 2638 2651 2726 2735 2744 2750 2801 2884 2970 2976)
  () 2651 0)
 (1796 uniq "( pen ua - ul ; move 2 , 4 ; move 3 + ul , ul ) "
  (845 1739 1994 2172 2440 2442 2887 2913 2934 3064) () -1 0)
 (1797 uniq "( move ul , 4 ; move 4 , 2 ; move ua , ul ) "
  (56 486 534 601 1846 2105 2113 2136 2527 2570 2815 2936) () -1 0)
 (1798 uniq "( pen ua ; move ua , ul ; move 3 , ul ) "
  (22 270 293 295 320 322 325 326 331 333 338 348 351 356 361 364 385 627 641
   687 1015 1656 1657 1659 1664 1673 1674 1675 1683 1685 1691 1705 1707 1713
   1720 1722 1728 1729 1731 1735 1760 1772 1776 1778 1779 1784 1789 1800 1805
   1809 1812 1813 1816 1828 1830 1860 1864 1865 1876 1879 1897 1925 1928 1959
   1967 1972 1976 1979 1996 2009 2038 2047 2050 2058 2082 2086 2093 2095 2100
   2106 2111 2114 2150 2155 2158 2166 2177 2180 2181 2182 2185 2189 2209 2231
   2257 2296 2313 2329 2357 2372 2412 2417 2425 2427 2431 2443 2448 2458 2488
   2506 2515 2519 2523 2542 2567 2598 2602 2609 2611 2619 2668 2670 2677 2690
   2715 2722 2730 2741 2749 2756 2777 2782 2793 2798 2800 2835 2845 2848 2856
   2865 2880 2904 2911 2922 2927 2943 2991 3007 3014 3027 3033 3037 3071 3075
   3091)
  (1793) -1 4)
 (1799 equiv "( pen ua + ul ; move 3 , 7 ; move 4 , ul ) "
  (624 689 1732 1744 1771 1811 1815 1849 1850 1871 1890 1894 1898 1907 1957
   2090 2184 2373 2407 2533 2537 2655 2668 2792 2807 2851 2859)
  () 2774 0)
 (1800 equiv "( pen ua ; move ua , ul ; move 2 , ul ) "
  (22 293 296 320 322 325 326 331 333 338 348 351 356 361 364 385 652 1656
   1657 1664 1673 1674 1675 1683 1685 1691 1705 1707 1720 1722 1728 1729 1731
   1735 1760 1772 1776 1778 1779 1784 1789 1798 1805 1809 1812 1813 1816 1828
   1830 1860 1864 1865 1876 1879 1881 1925 1928 1959 1967 1972 1976 1979 1996
   2009 2020 2038 2047 2050 2058 2082 2086 2093 2095 2100 2106 2111 2114 2150
   2155 2158 2166 2177 2180 2181 2182 2185 2189 2209 2231 2245 2313 2321 2329
   2357 2372 2380 2412 2424 2425 2431 2443 2448 2458 2488 2506 2515 2519 2542
   2567 2574 2581 2598 2602 2611 2619 2668 2670 2677 2690 2722 2730 2741 2746
   2749 2756 2777 2782 2787 2793 2798 2800 2835 2837 2845 2848 2856 2865 2880
   2904 2911 2922 2927 2943 2987 2991 3014 3033 3071 3075 3091)
  () 3071 13)
 (1801 uniq "( move 2 + 2 , 4 ; ( pen 4 ; move ua , 2 ) ) "
  (734 1780 2153 2529) () -1 0)
 (1802 uniq "( move 4 , 3 + ul ; pen ua + ul ; move 2 , 4 ) "
  (922 1701 2000 2310 2366 2541 2592 2866 2920) () -1 0)
 (1803 uniq "( pen ua ; move ua , ul - 3 ; move ua , 2 ) "
  (48 85 98 573 629 1684 1688 1706 1713 1750 1823 1866 1869 1882 1886 1916
   1936 1946 2031 2033 2036 2039 2064 2067 2096 2145 2149 2163 2190 2207 2208
   2210 2216 2222 2228 2298 2330 2364 2393 2401 2427 2508 2538 2562 2583 2593
   2620 2622 2646 2721 2757 2765 2794 2820 2822 2826 2872 2885 2889 2915 2940
   2969 2979)
  () -1 0)
 (1804 uniq "( move ua , ua ; pen 3 ; move ua , 4 ) "
  (88 288 297 305 358 362 564 1668 1672 1783 1820 1855 1917 1964 1974 1991
   2048 2051 2079 2097 2253 2281 2320 2327 2349 2350 2356 2375 2409 2430 2441
   2556 2649 2675 2679 2706 2725 2759 2776 2802 2876)
  () -1 0)
 (1805 equiv "( pen ua ; move 2 , ua ; move ua , ul ) "
  (22 290 292 295 303 319 320 322 325 331 333 336 337 338 348 350 351 356 364
   385 1085 1656 1657 1673 1674 1675 1683 1685 1705 1717 1722 1728 1729 1731
   1735 1767 1772 1776 1778 1779 1784 1798 1800 1809 1812 1813 1816 1828 1830
   1831 1860 1864 1865 1876 1959 1972 1976 1979 1996 2038 2044 2050 2058 2086
   2093 2100 2106 2116 2155 2158 2166 2177 2180 2182 2185 2189 2209 2231 2245
   2301 2313 2325 2329 2357 2372 2378 2412 2425 2431 2448 2458 2506 2515 2519
   2521 2598 2602 2619 2640 2643 2668 2690 2715 2722 2729 2741 2782 2793 2800
   2829 2856 2870 2904 2909 2911 2922 2943 2959 2987 3027 3033 3075 3091)
  () 1865 1)
 (1806 uniq "( move ua , 2 - 3 ; pen ua ; move ua , 2 ) "
  (48 84 558 1775 1982 2089 2377 2550 2603 2632 2796 2850 3020 3032) () -1 0)
 (1807 equiv "( pen ua - ul ; move 2 , 0 ; move ua - 3 , ul ) "
  (899 1865 1883 1938 2929 3039) () 2929 0)
 (1808 uniq "( move 4 + 4 , ua ; move ua , 4 ; move ul , ul ) "
  (816 866 2195 2861) () -1 0)
 (1809 uniq "( pen ua ; move 2 , 3 ; move ua , ul ) "
  (22 290 292 303 320 325 331 333 336 337 338 348 351 356 364 385 1085 1656
   1657 1673 1674 1675 1683 1685 1717 1722 1729 1731 1735 1772 1776 1778 1779
   1784 1789 1798 1800 1805 1812 1813 1816 1828 1830 1831 1860 1865 1876 1879
   1959 1972 1976 1979 1996 2038 2044 2050 2058 2086 2093 2106 2158 2166 2177
   2180 2182 2185 2189 2209 2231 2279 2313 2325 2329 2348 2357 2372 2378 2412
   2425 2428 2431 2448 2458 2506 2515 2519 2598 2602 2619 2623 2640 2651 2668
   2677 2690 2715 2722 2729 2741 2782 2793 2798 2800 2820 2829 2856 2870 2904
   2911 2922 2943 2959 3033 3075 3091)
  (1085) -1 0)
 (1810 equiv "( move 3 , 3 ; ( pen ua + ul ; move 2 , 2 - ul ) ) "
  (1199 2230 3022) () 2230 0)
 (1811 equiv "( pen ua + ul ; move ua , 2 ; move 4 , ul ) "
  (55 111 534 624 667 689 1654 1771 1799 1813 1815 1849 1850 1871 1890 1894
   1898 1907 1957 2407 2432 2533)
  () 2865 0)
 (1812 uniq "( pen ua ; move ua , 0 ; move ul , ul ) "
  (22 270 271 292 293 319 320 322 325 326 327 331 333 338 340 348 351 356 364
   385 667 1194 1251 1656 1657 1664 1673 1674 1675 1683 1685 1705 1707 1720
   1722 1728 1729 1731 1735 1760 1772 1776 1778 1779 1784 1788 1789 1798 1800
   1805 1809 1813 1816 1828 1860 1864 1865 1876 1879 1928 1959 1967 1972 1976
   1979 1996 2009 2011 2038 2050 2058 2082 2086 2093 2100 2106 2111 2114 2155
   2158 2166 2177 2180 2181 2182 2185 2189 2209 2231 2301 2313 2322 2325 2347
   2357 2372 2391 2412 2443 2448 2458 2488 2506 2515 2519 2542 2567 2598 2602
   2619 2623 2668 2670 2677 2690 2722 2730 2741 2756 2777 2782 2787 2793 2798
   2800 2825 2829 2835 2845 2848 2853 2865 2880 2911 2922 2943 2991 3014 3024
   3033 3071 3075 3091)
  (385 667 1346 1600) -1 6)
 (1813 equiv "( pen ua ; move ua , 2 ; move 4 , ul ) "
  (22 55 268 269 271 293 320 322 325 326 327 331 333 338 348 351 356 364 385
   1656 1657 1664 1673 1674 1675 1683 1685 1705 1707 1717 1720 1722 1726 1728
   1729 1731 1735 1760 1772 1776 1778 1779 1784 1788 1789 1798 1800 1805 1809
   1811 1812 1816 1827 1828 1860 1864 1865 1876 1879 1928 1959 1967 1972 1976
   1978 1979 1993 1996 2009 2038 2050 2058 2082 2086 2093 2100 2106 2111 2114
   2116 2155 2158 2166 2177 2180 2181 2182 2185 2189 2209 2231 2296 2313 2325
   2329 2345 2348 2357 2372 2378 2387 2412 2428 2443 2448 2458 2461 2488 2493
   2506 2515 2519 2521 2542 2566 2567 2598 2602 2611 2619 2668 2670 2677 2690
   2715 2722 2729 2730 2741 2749 2756 2765 2774 2777 2782 2793 2798 2800 2825
   2835 2845 2848 2853 2865 2880 2911 2922 2943 2991 3007 3014 3024 3033 3053
   3071 3075 3091)
  () 2865 2)
 (1814 uniq "( pen 3 ; move ua + 2 , 0 ) "
  (34 36 61 95 97 99 104 1663 1678 1734 1943) (343 768 1214 1581) -1 1)
 (1815 equiv "( pen ua + ul ; move 3 , 4 ; move 2 , ul ) "
  (504 624 689 1771 1799 1811 1849 1850 1871 1890 1894 1898 1907 1957 2028
   2184 2199 2209 2407 2437 2440 2477 2533 2655)
  () 2209 0)
 (1816 uniq "( pen ua ; move ua , 3 ; move 2 , ul ) "
  (22 293 296 303 320 322 325 326 331 333 338 348 351 356 364 385 1656 1657
   1664 1673 1674 1675 1683 1685 1705 1707 1720 1722 1728 1729 1731 1735 1760
   1772 1776 1778 1779 1784 1789 1798 1800 1805 1809 1812 1813 1828 1860 1864
   1865 1866 1876 1879 1919 1928 1959 1967 1972 1976 1979 1996 2009 2038 2050
   2058 2082 2083 2086 2093 2100 2106 2111 2114 2155 2158 2166 2177 2180 2181
   2182 2185 2189 2209 2231 2245 2313 2348 2357 2372 2412 2428 2433 2443 2448
   2458 2488 2506 2515 2519 2542 2567 2574 2581 2598 2602 2619 2623 2668 2670
   2677 2690 2722 2730 2741 2756 2777 2782 2787 2793 2798 2800 2835 2845 2848
   2865 2880 2911 2922 2943 2982 2987 2991 3014 3033 3071 3075 3091)
  (1425) -1 4)
 (1817 uniq "( pen ua ; move ul - ua , 2 ; move 7 , ul ) "
  (670 1676 1791 1852 1911 1927 2043 2049 2107 2165 2176 2239 2241 2257 2263
   2270 2295 2307 2331 2379 2387 2406 2433 2453 2461 2467 2510 2548 2573 2614
   2658 2663 2674 2682 2705 2717 2727 2733 2746 2816 2837 2843 2945 2967 2982
   2992 3005 3017 3038 3055 3074 3076)
  () -1 0)
 (1818 uniq "( move ua , ul ; move 4 , ul ; move ua , 2 ) "
  (54 85 90 93 450 534 589 665 1650 1711 1821 1846 2061 2102 2105 2113 2136
   2157 2256 2269 2363 2399 2476 2481 2492 2527 2528 2564 2570 2572 2588 2606
   2702 2768 2788 2815 2857 2881 2883 2910 2912 2936 2950 2963 2972 3004 3018
   3030 3081)
  () -1 3)
 (1819 uniq "( move 4 , ul - 2 ; move ua , 4 ) "
  (30 59 148 149 151 174 184 191 203 228 243 247 1754 1981) (1069) -1 0)
 (1820 uniq "( move ua , ua - ul ; pen 3 ; move ua , 4 ) "
  (88 89 511 558 674 1668 1804 2051 2327 2377 2516 2550 2632 2719 2796) () -1
  0)
 (1821 uniq "( move ua , ul ; move 4 , 4 ; move 4 , 2 ) "
  (54 58 450 528 534 589 605 665 1818 1863 2010 2028 2157 2435 2501 2702 2883
   2910 2936 3030)
  () -1 0)
 (1822 uniq "( move 4 - ua , ul ; pen 2 ; move 3 - ua , ul ) "
  (918 1682 1712 2055 2144 2188 2342 2457 2511 2563 2783 2892 2954 3002 3047)
  () -1 0)
 (1823 equiv "( pen ua ; move 3 , ul / ul ; move ua , 2 ) "
  (629 724 1662 1684 1706 1715 1716 1750 1795 1803 1829 1840 1869 1882 1886
   1916 1939 1946 1952 1960 1963 1990 2013 2031 2036 2060 2064 2067 2072 2096
   2103 2146 2149 2163 2187 2190 2206 2207 2208 2210 2219 2222 2228 2244 2261
   2285 2298 2332 2364 2365 2376 2385 2388 2389 2393 2401 2402 2404 2429 2431
   2459 2462 2464 2498 2505 2535 2538 2557 2583 2593 2597 2617 2620 2622 2637
   2673 2688 2693 2704 2721 2750 2757 2763 2801 2820 2822 2826 2828 2834 2885
   2889 2894 2915 2940 2941 2942 2949 2960 2976 2979 2986 3028)
  () 2431 0)
 (1824 uniq "( move 3 , ul ; pen 4 ; move 0 - ua , ul ) "
  (484 1712 1742 1924 2450 2465 2586 2954 2956 3085) () -1 0)
 (1825 uniq "( move 3 , 0 ; pen ua ; move 3 , ul ) "
  (267 272 283 288 291 305 308 328 329 334 335 358 1681 1725 1727 1745 1748
   1783 1836 1856 1899 1913 1923 1932 1934 1945 1950 1974 1980 1997 2003 2023
   2032 2134 2154 2202 2217 2220 2230 2268 2304 2317 2344 2349 2355 2356 2423
   2426 2497 2577 2604 2679 2699 2703 2707 2710 2731 2759 2776 2806 2810 2833
   2860 2902 2919 2983 3011 3022)
  (1470) -1 0)
 (1826 uniq "( move 3 , 2 - ul ; move 2 , 4 ; move ua , ua * ua ) "
  (1166 2088 2764) () -1 0)
 (1827 uniq "( pen ua ; move ua , ua / 2 ; move 4 , ul ) "
  (55 91 356 626 641 653 1655 1671 1688 1694 1726 1733 1746 1750 1752 1761
   1763 1813 1832 1845 1859 1867 1904 1933 1970 1978 2020 2034 2059 2072 2083
   2087 2109 2115 2121 2187 2204 2214 2227 2236 2252 2260 2261 2335 2337 2345
   2364 2380 2387 2388 2393 2401 2422 2424 2427 2461 2473 2474 2480 2502 2523
   2562 2583 2646 2689 2693 2697 2728 2745 2751 2761 2765 2812 2821 2826 2827
   2869 2872 2889 2901 2909 2921 2960 2973 2986 2998 3034 3037 3067 3069)
  () -1 1)
 (1828 uniq "( pen ua ; move 3 , 7 ; move ua , ul ) "
  (22 292 303 319 320 325 327 331 333 336 337 338 348 351 356 364 385 1656
   1657 1673 1674 1675 1683 1685 1722 1729 1731 1735 1772 1776 1778 1779 1784
   1798 1800 1805 1809 1812 1813 1816 1830 1831 1860 1865 1876 1959 1972 1976
   1979 1996 2038 2044 2047 2050 2058 2086 2093 2106 2150 2158 2166 2177 2180
   2182 2185 2189 2209 2231 2245 2301 2313 2347 2357 2372 2378 2391 2412 2425
   2428 2431 2448 2458 2506 2515 2519 2521 2566 2574 2581 2598 2602 2619 2623
   2640 2668 2690 2722 2729 2741 2749 2774 2782 2787 2793 2800 2825 2829 2853
   2856 2870 2904 2906 2911 2922 2927 2943 2959 2987 3024 3027 3033 3053 3075
   3091)
  () -1 6)
 (1829 equiv "( pen ua ; move 3 , 4 / ul ; move ua , 2 ) "
  (584 1662 1684 1715 1716 1750 1795 1823 1834 1840 1882 1886 1916 1939 1952
   1990 1998 2013 2031 2064 2096 2146 2149 2190 2206 2208 2210 2228 2244 2261
   2285 2297 2332 2365 2385 2389 2402 2431 2459 2464 2498 2538 2557 2593 2597
   2620 2647 2704 2721 2757 2763 2801 2822 2834 2940 2941 2942 2960 2976
   3028)
  () 2655 0)
 (1830 uniq "( pen ua ; move 4 , ul ; move ua , 2 ) "
  (17 20 290 295 302 320 322 325 331 332 333 336 337 342 348 350 351 357 361
   364 1656 1664 1673 1674 1683 1691 1707 1731 1735 1772 1779 1784 1789 1798
   1800 1805 1809 1828 1860 1864 1865 1876 1925 1928 1967 1972 1976 2001 2031
   2044 2095 2096 2106 2111 2116 2166 2185 2189 2190 2208 2231 2245 2301 2329
   2347 2357 2378 2391 2425 2428 2431 2458 2488 2506 2521 2602 2611 2619 2623
   2640 2643 2651 2670 2741 2749 2787 2793 2800 2825 2829 2856 2870 2904 2906
   2927 2991 3027 3033 3053 3075 3091)
  (502) -1 0)
 (1831 uniq "( pen 3 ; move 3 , 9 ; move ua , ul ) "
  (271 292 293 303 320 331 332 333 336 338 348 357 1674 1683 1717 1728 1731
   1735 1767 1805 1809 1828 1860 1865 1879 1959 1972 1976 1996 2001 2044 2047
   2050 2082 2086 2093 2106 2150 2158 2180 2181 2182 2209 2284 2322 2325 2348
   2372 2378 2425 2431 2443 2506 2515 2519 2566 2574 2575 2581 2598 2602 2624
   2640 2643 2668 2722 2729 2741 2756 2774 2782 2793 2845 2856 2870 2880 2906
   2922 2943 2959 2987 3014 3024 3091)
  () -1 3)
 (1832 uniq "( pen 3 ; move ua , ul / 2 ; move 4 , ul ) "
  (55 93 641 1655 1671 1688 1690 1726 1733 1746 1750 1827 1845 1867 1904 1926
   1958 1963 1978 2034 2059 2072 2082 2087 2115 2121 2123 2187 2227 2236 2261
   2273 2315 2335 2337 2345 2364 2380 2388 2393 2401 2422 2424 2427 2461 2473
   2480 2489 2502 2523 2562 2583 2625 2650 2676 2681 2693 2732 2751 2758 2819
   2821 2826 2869 2872 2879 2889 2901 2921 2973 2977 2986 2998 3003 3014 3037
   3057 3069 3088)
  () -1 0)
 (1833 equiv "( pen ua ; move ua + ul , 2 ; move 2 , ul ) "
  (542 543 641 678 685 1671 1680 1687 1697 1702 1703 1726 1749 1763 1769 1770
   1791 1852 1881 1897 1909 1911 1915 1919 1955 2034 2037 2058 2075 2099 2159
   2224 2227 2242 2263 2274 2300 2321 2331 2345 2380 2387 2417 2424 2454 2461
   2472 2473 2490 2549 2616 2648 2660 2683 2693 2718 2746 2791 2816 2821 2847
   2915 2925 2952 2982 3017 3019 3040 3088)
  () 1909 0)
 (1834 uniq "( pen ua ; move ua , 4 + ul ; move ua , 3 ) "
  (97 567 629 1684 1706 1715 1829 1869 1886 1916 1930 1946 2039 2208 2326
   2518 2622 2700 2735 2757 2767 2799 2940)
  () -1 0)
 (1835 equiv "( move ua , ul / 0 ; move ua - 3 , ul - ua ; move 4 , 2 ) "
  (1445 2818) () 2818 0)
 (1836 uniq "( move 4 , 3 ; pen ua ; move 3 , ul ) "
  (231 267 272 294 304 328 329 334 335 358 1681 1725 1727 1745 1748 1783 1825
   1856 1895 1899 1913 1923 1932 1934 1945 1950 1974 1977 1980 1991 1997 2003
   2023 2026 2032 2079 2134 2154 2202 2217 2220 2230 2250 2268 2312 2324 2344
   2355 2386 2423 2426 2496 2560 2577 2679 2699 2703 2707 2710 2759 2776 2810
   2833 2895 2902 2983 3011 3022 3061 3084)
  () -1 0)
 (1837 uniq "( pen ua ; move 3 , 0 ; move ua , ua - 4 ) "
  (616 669 1658 1699 2035 2042 2112 2137 2160 2272 2306 2328 2398 2656 2844
   3090)
  () -1 0)
 (1838 uniq "( move 3 , ul ; move ua + 3 , 4 ) "
  (124 135 158 169 190 194 199 236 1670 1708 1719 1794 1848 1889 1969 2024
   2091 2124 2396 2470)
  () -1 0)
 (1839 uniq "( move ua , 4 / ua ; move 3 + 2 , ul ) " (365 435 2174) () -1 0)
 (1840 uniq "( pen ua ; move 3 , 5 / ul ; move ua , 2 ) "
  (1662 1684 1715 1716 1750 1795 1823 1829 1882 1886 1916 1939 1952 1990 2013
   2031 2064 2096 2146 2149 2190 2206 2208 2210 2228 2244 2261 2285 2332 2365
   2385 2389 2402 2431 2459 2464 2498 2538 2557 2593 2597 2620 2704 2721 2757
   2763 2801 2822 2834 2940 2941 2942 2960 2976 3028)
  () -1 0)
 (1841 uniq "( move ua , 4 ; move ua + 3 , ul - 3 ) " (381 436) () -1 0)
 (1842 uniq "( move ua , ua / 3 ; move ua , ua * ua ; ul ) " (1304 1947 2418)
  () -1 0)
 (1843 uniq "( move 4 , 3 + ul ; move 2 , move 3 + 2 , ul ) " () () -1 0)
 (1844 uniq "( pen 3 ; move ua - ul , ua ; move 3 , 3 - ul ) " (1267) () -1
  0)
 (1845 uniq "( pen 4 ; move ua , 3 / ul ; move 4 , ul ) "
  (93 653 1655 1690 1694 1696 1726 1733 1746 1752 1795 1827 1832 1867 1904
   1978 2083 2087 2104 2115 2204 2315 2326 2337 2422 2474 2489 2630 2751 2872
   2921 2951 2973 2977)
  () -1 0)
 (1846 uniq "( move ul , 4 ; move 4 , ul ; move ua , ul ) "
  (485 486 1797 1818 2113 2136 2269 2492 2527 2528 2570 2768 2910 2912 2936
   2950 2963)
  () -1 0)
 (1847 uniq "( pen 4 ; move ul , 3 / 2 ; move ua - 3 , ul ) " (773 3086) ()
  -1 0)
 (1848 uniq "( move ua , 3 ; move ua + ul , 4 ) "
  (141 142 146 163 166 169 173 175 177 182 189 190 194 199 202 217 236 240
   244 1668 1670 1708 1719 1747 1794 1838 1889 1954 1969 2024 2091 2390 2396
   2470 2553 2579 2654 2752)
  (526) -1 0)
 (1849 equiv "( pen 7 + ul ; move 3 , ul ; move 4 , ul ) "
  (504 624 1771 1799 1811 1815 1850 1871 1890 1894 1898 1907 1957 2184 2407
   2533 2792 2807 2851)
  () 2106 0)
 (1850 equiv "( pen ua + ul ; move 3 , 4 ; move 4 , ul ) "
  (624 689 1732 1744 1771 1799 1811 1815 1849 1871 1890 1894 1898 1907 1957
   2184 2199 2373 2407 2437 2440 2477 2515 2533 2537 2655 2792 2807 2851)
  () 2515 1)
 (1851 uniq "( pen 3 ; move 4 + ul , 2 / ua ; move ua , 4 ) "
  (853 1767 1868 1875 1912 1921 1944 1953 1989 1999 2014 2052 2053 2054 2078
   2081 2085 2110 2125 2127 2142 2161 2167 2169 2194 2205 2229 2275 2277 2286
   2323 2368 2381 2383 2444 2494 2503 2513 2525 2526 2534 2559 2582 2626 2784
   2789 2804 2811 2877 2890 2899 2905 2908 2916 2923 2988 3009 3059 3089)
  () -1 0)
 (1852 equiv "( pen ua ; move ul + ua , 0 ; move 2 , ul ) "
  (670 1675 1676 1702 1817 1833 1915 1927 1987 2037 2040 2107 2176 2239 2241
   2257 2263 2270 2274 2295 2307 2321 2331 2379 2387 2433 2453 2467 2472 2510
   2573 2601 2614 2658 2663 2674 2682 2705 2717 2727 2733 2746 2816 2837 2843
   2967 2982 3005 3017 3019 3038 3055 3074 3076)
  () 2601 1)
 (1853 uniq "( pen 3 ; move 3 , ul ; move 2 - ua , 4 ) "
  (498 2018 2063 2164 2343 2551 2555 2781 2965 3001) () -1 0)
 (1854 uniq "( move 7 , 0 ; ( pen 4 ; move ua , 2 ) ) " (1780 2529 2947) ()
  -1 0)
 (1855 uniq "( move ua , ua ; pen ua ; move 4 , 2 ) "
  (17 283 285 291 305 313 328 358 1672 1681 1727 1745 1748 1759 1783 1786
   1804 1856 1899 1913 1923 1945 1971 1974 1991 1997 2003 2023 2025 2032 2048
   2079 2097 2132 2134 2154 2156 2202 2211 2217 2220 2253 2268 2281 2304 2317
   2324 2338 2344 2349 2350 2356 2409 2426 2430 2441 2496 2497 2499 2560 2604
   2649 2675 2679 2703 2706 2731 2759 2776 2802 2806 2860 2876 2902 2919 3022
   3061)
  () -1 1)
 (1856 equiv "( move ua , 3 ; pen ua ; move 4 , ul ) "
  (91 283 288 304 305 308 328 329 334 335 358 1672 1681 1725 1727 1745 1748
   1759 1783 1786 1825 1836 1855 1895 1899 1913 1923 1932 1934 1945 1950 1971
   1974 1977 1980 1991 2003 2023 2026 2032 2048 2132 2134 2154 2156 2202 2217
   2220 2230 2253 2268 2281 2293 2320 2324 2338 2344 2349 2355 2356 2423 2426
   2430 2441 2496 2499 2560 2577 2604 2649 2679 2699 2703 2706 2707 2731 2736
   2759 2776 2802 2806 2810 2833 2860 2876 2895 2902 3022 3061)
  () 2324 0)
 (1857 uniq "( move ua , 4 ; move 4 + 4 , 2 ) "
  (124 141 142 146 155 163 166 177 186 199 703 1670 1708 1954 2124 2246 2579
   2654 2714 2752)
  () -1 0)
 (1858 uniq "( pen ua ; move 4 , ul / 2 ) "
  (17 33 40 43 67 68 69 75 76 98 107 114 507 1985 2031 2060 2096 2190 2200
   2480 2907 2949)
  (507) -1 5)
 (1859 uniq "( pen ua ; move ua , 0 - 2 ; move 3 , ul ) "
  (584 626 641 1671 1713 1726 1761 1763 1776 1827 1866 1904 1970 2002 2020
   2033 2034 2059 2109 2121 2128 2131 2145 2214 2330 2427 2473 2480 2523 2562
   2642 2646 2689 2728 2745 2757 2765 2969 2998 3037 3069 3077)
  (1713) -1 0)
 (1860 uniq "( pen ua ; move 3 , 8 ; move ua , ul ) "
  (22 292 303 319 320 325 327 331 333 336 337 338 348 351 356 364 385 1656
   1657 1673 1674 1675 1683 1685 1722 1729 1731 1735 1772 1776 1778 1779 1784
   1798 1800 1805 1809 1812 1813 1816 1828 1830 1831 1865 1876 1959 1972 1976
   1979 1996 2038 2044 2047 2050 2058 2086 2093 2106 2150 2158 2166 2177 2180
   2182 2185 2189 2209 2231 2245 2301 2313 2347 2357 2372 2378 2391 2412 2425
   2428 2431 2448 2458 2506 2515 2519 2521 2566 2574 2581 2598 2602 2619 2623
   2640 2668 2690 2722 2729 2741 2749 2774 2782 2787 2793 2800 2825 2829 2845
   2853 2856 2870 2904 2906 2911 2922 2927 2943 2959 2987 3024 3027 3033 3053
   3075 3091)
  () -1 1)
 (1861 uniq "( pen 4 ; move 0 - ua , ul ; move ua , ul ) "
  (517 670 1676 1927 1962 2049 2069 2070 2165 2239 2241 2257 2295 2406 2439
   2467 2548 2573 2613 2837 2852 2945 3055)
  () -1 1)
 (1862 equiv "( pen ua + 0 ; move 4 , ul ; move 0 - 3 , ul ) "
  (917 1986 2004 2151 2612 2839 2968) () 2612 0)
 (1863 uniq "( move ua , 3 ; move ua , 4 ; move 4 , 2 ) "
  (48 450 526 528 605 1668 1724 1821 2010 2435 2501 2512 2564 2702 2797 2896
   2910 3030 3081)
  () -1 0)
 (1864 equiv "( pen ua ; move ua , ua ; move 2 , 2 ) "
  (269 295 296 316 319 322 325 326 331 350 351 356 385 1656 1657 1664 1675
   1685 1691 1705 1707 1722 1728 1729 1772 1776 1778 1779 1784 1788 1789 1798
   1800 1805 1812 1813 1816 1830 1879 1925 1928 1959 1967 1972 1979 1996 2011
   2038 2044 2050 2058 2093 2095 2100 2111 2116 2155 2166 2180 2181 2189 2209
   2245 2301 2329 2347 2357 2391 2428 2431 2448 2458 2488 2519 2521 2567 2598
   2609 2611 2619 2623 2624 2643 2670 2690 2730 2756 2787 2793 2800 2825 2829
   2835 2848 2880 2904 2922 2987 2991 3007 3027 3053 3071)
  () 1928 0)
 (1865 uniq "( pen ua ; move 2 , 0 ; move ua , ul ) "
  (22 270 271 290 292 293 303 320 325 331 333 336 337 338 348 351 356 364 385
   899 1656 1657 1673 1674 1675 1683 1685 1717 1722 1729 1731 1735 1772 1776
   1778 1779 1784 1798 1800 1805 1807 1809 1812 1813 1816 1828 1830 1831 1860
   1876 1928 1938 1959 1972 1976 1979 1996 2038 2044 2050 2058 2086 2093 2106
   2158 2166 2177 2180 2182 2185 2189 2209 2231 2313 2322 2325 2329 2357 2372
   2378 2391 2412 2425 2431 2448 2458 2488 2506 2514 2515 2519 2542 2567 2598
   2602 2619 2640 2668 2670 2690 2715 2722 2729 2741 2782 2787 2793 2800 2829
   2853 2856 2870 2904 2911 2922 2929 2943 2959 3024 3033 3039 3075 3091)
  (1805) -1 2)
 (1866 equiv "( pen ua ; move ua , 0 - 3 ; move 2 , ul ) "
  (1655 1675 1688 1713 1763 1803 1816 1859 1919 1933 1970 2020 2033 2083 2109
   2128 2145 2216 2252 2330 2334 2380 2424 2427 2473 2508 2642 2646 2647 2681
   2697 2728 2757 2761 2765 2794 2872 2889 2973)
  () 2128 0)
 (1867 uniq "( pen ua ; move ua , ul / ua ; move 4 , ul ) "
  (91 93 114 356 641 653 656 685 724 1655 1671 1688 1690 1694 1713 1726 1733
   1746 1750 1752 1779 1827 1832 1845 1904 1926 1933 1958 1978 1998 2034 2036
   2039 2067 2072 2075 2083 2087 2096 2104 2115 2121 2123 2163 2187 2204 2207
   2216 2219 2222 2224 2227 2228 2236 2252 2261 2330 2334 2335 2337 2345 2364
   2376 2380 2388 2393 2401 2402 2404 2422 2424 2427 2461 2473 2474 2480 2489
   2490 2500 2502 2508 2523 2535 2562 2583 2593 2616 2620 2622 2625 2630 2636
   2673 2676 2681 2688 2693 2696 2697 2721 2745 2751 2765 2794 2820 2821 2826
   2827 2869 2872 2879 2889 2894 2901 2907 2917 2921 2925 2935 2939 2948 2949
   2973 2977 2986 2998 3003 3034 3037 3042 3057 3062 3067 3069)
  () -1 0)
 (1868 uniq "( pen 3 ; move 4 + 3 , 2 / ua ; move ua , 4 ) "
  (853 1851 1875 1912 1921 1944 1953 1989 1999 2014 2052 2053 2054 2078 2081
   2085 2110 2125 2127 2142 2161 2167 2169 2194 2205 2229 2275 2277 2286 2302
   2323 2368 2381 2383 2444 2494 2503 2513 2525 2526 2534 2559 2582 2667 2713
   2789 2804 2811 2877 2890 2899 2905 2916 2923 2988 3009 3059 3089)
  () -1 0)
 (1869 uniq "( pen ua ; move ua , ul + ul ; move 2 , 2 ) "
  (542 567 629 678 1684 1706 1738 1750 1770 1803 1823 1834 1881 1886 1916
   1930 1946 1955 2020 2036 2060 2067 2163 2207 2208 2222 2228 2321 2326 2330
   2364 2380 2393 2401 2424 2447 2489 2508 2518 2538 2562 2593 2620 2648 2735
   2757 2812 2885 2915 2969 2979 3028 3077)
  () -1 0)
 (1870 uniq "( move 3 + ul , 2 / 4 ; pen 4 ; move ul , ul ) "
  (1054 2019 2319) () -1 0)
 (1871 equiv "( pen ua + 3 ; move 3 , 4 ; move 4 , ul ) "
  (566 624 1732 1771 1799 1811 1815 1849 1850 1890 1894 1907 1957 2184 2373
   2407 2437 2477 2515 2533 2655 2851)
  () 2515 0)
 (1872 equiv "( pen ua ; move ua , ul ; move ua , 3 * ul ) "
  (627 643 687 1659 3070) () 2622 0)
 (1873 equiv "( pen ua * 9 ; move 3 , 0 ; move ul , 2 ) "
  (630 1689 1732 1744 1757 2012 2084 2271 2391 2537) () 2391 0)
 (1874 uniq "( move ua , 5 ; pen 3 + ul ; move 2 + ul , ul ) "
  (927 1753 2138) () -1 0)
 (1875 uniq "( pen 3 ; move 4 + ul , 2 / ua ; move 4 , 4 ) "
  (853 1851 1868 1912 1921 1944 1953 1989 1999 2014 2052 2053 2054 2078 2081
   2085 2110 2125 2127 2142 2167 2169 2205 2229 2275 2277 2286 2323 2368 2381
   2444 2494 2503 2513 2525 2526 2534 2582 2626 2633 2784 2789 2804 2811 2868
   2877 2890 2899 2905 2908 2916 2923 2988 3059 3089)
  () -1 0)
 (1876 uniq "( pen ua ; move 2 , ul ; move 4 , ul ) "
  (271 290 293 320 331 333 338 348 356 364 385 1307 1656 1657 1664 1673 1674
   1675 1683 1685 1707 1717 1720 1722 1729 1731 1735 1772 1776 1778 1779 1784
   1789 1798 1800 1805 1809 1812 1813 1816 1828 1830 1860 1865 1959 1967 1972
   1976 1979 1993 1996 2009 2038 2047 2050 2058 2082 2086 2093 2100 2106 2111
   2114 2116 2150 2158 2166 2177 2180 2182 2185 2209 2231 2236 2313 2325 2329
   2348 2372 2412 2425 2428 2431 2443 2448 2458 2474 2488 2502 2506 2515 2519
   2521 2566 2598 2602 2611 2618 2619 2668 2690 2715 2722 2729 2741 2749 2756
   2774 2782 2793 2798 2800 2835 2845 2853 2856 2865 2904 2911 2922 2927 2943
   2959 3014 3024 3033 3053 3071 3075 3091)
  () -1 0)
 (1877 equiv "( pen 4 * 2 ; move 3 , 0 ; move 4 , ul ) "
  (419 489 1689 1732 1744 1757 1793 2271 2520) () 3024 0)
 (1878 equiv "( move 3 , ul / 3 ; pen ua + ul ; move ua , ul ) "
  (1053 1679 1937 1980 2101 2168 2259 2395 2669 2803 2809 3006) () 2395 0)
 (1879 uniq "( pen 3 ; move ua , 3 ; move 2 , ul ) "
  (18 271 292 293 296 303 325 331 336 356 385 1657 1664 1675 1685 1705 1717
   1720 1722 1728 1729 1760 1776 1778 1779 1784 1788 1789 1798 1800 1809 1812
   1813 1816 1831 1864 1928 1959 1972 1976 1979 1996 2009 2038 2047 2058 2082
   2114 2166 2177 2180 2181 2209 2296 2322 2325 2348 2378 2412 2443 2448 2458
   2519 2542 2566 2567 2574 2581 2609 2611 2619 2643 2677 2690 2729 2730 2756
   2777 2791 2793 2798 2800 2845 2848 2865 2880 2922 2987 3007 3014 3071)
  () -1 1)
 (1880 uniq "( move ua , ul ; pen ua ; move ua , ua - 2 ) "
  (84 85 676 679 681 1922 2152 2281 2392 2504 2531 2691) () -1 1)
 (1881 uniq "( pen ua ; move ua - ul , ul ; move 2 , ul ) "
  (542 678 685 1676 1680 1687 1697 1702 1703 1738 1749 1769 1770 1791 1800
   1833 1869 1897 1901 1909 1911 1919 1955 2020 2037 2075 2099 2159 2176 2224
   2239 2242 2257 2295 2300 2321 2330 2345 2352 2380 2417 2424 2433 2447 2454
   2461 2467 2483 2489 2490 2510 2549 2613 2616 2641 2648 2660 2682 2718 2746
   2791 2816 2837 2847 2915 2925 2945 2952 2967 2979 3005 3019 3055)
  () -1 2)
 (1882 uniq "( pen ua ; move 2 , ul / 4 ; move ua , 2 ) "
  (656 724 849 1750 1773 1774 1803 1823 1829 1840 1886 1916 1939 1946 1952
   1963 2013 2031 2036 2060 2064 2066 2067 2096 2146 2149 2163 2190 2197 2206
   2207 2208 2210 2222 2228 2236 2244 2261 2279 2297 2298 2332 2334 2364 2365
   2393 2401 2402 2404 2424 2429 2462 2498 2500 2502 2505 2535 2538 2557 2583
   2593 2617 2620 2622 2625 2636 2650 2673 2704 2721 2742 2750 2773 2801 2820
   2826 2828 2885 2889 2894 2904 2907 2909 2924 2935 2940 2944 2949 2976 3037
   3042 3062)
  () -1 0)
 (1883 uniq "( pen ua - ul ; move 4 , 0 ; move ua - ul , ul ) "
  (899 1807 1938 2185 3039 3091) () -1 0)
 (1884 uniq "( move ua , 2 ; move ul , ul - 3 ; move 4 , ua ) " (967) () -1
  0)
 (1885 uniq "( move ua , ul + ul ; pen 3 ; move 3 , ua / 4 ) "
  (939 1920 2022 2299 2460 2661 2698 2957 2984) () -1 0)
 (1886 equiv "( pen ua ; move ua , 4 / ul ; move ua , 2 ) "
  (85 567 629 1650 1655 1662 1684 1706 1715 1716 1733 1750 1795 1803 1823
   1829 1834 1840 1869 1882 1916 1930 1933 1939 1946 1952 1998 2013 2031 2036
   2064 2067 2096 2121 2163 2175 2190 2206 2207 2208 2210 2222 2228 2244 2285
   2297 2326 2364 2365 2385 2389 2393 2401 2459 2557 2583 2593 2597 2620 2622
   2700 2735 2757 2763 2799 2812 2822 2826 2827 2885 2889 2915 2940 2976 2979
   3028 3067)
  () 2940 0)
 (1887 uniq "( pen 4 ; move 3 * 2 , ul / ua ; move 4 + ul , 2 ) "
  (1141 2221 2255 2491 2849) () -1 0)
 (1888 uniq "( move 3 , 2 / 4 ; move ua , 2 ; move 4 , 3 ) "
  (1076 1902 2178 2644 2720 2766) () -1 0)
 (1889 uniq "( move ua , 0 ; move ua + 2 , 4 ) "
  (25 46 142 163 165 166 169 173 175 189 194 199 210 236 1670 1708 1719 1794
   1838 1848 1954 1969 2024 2091 2396 2470 2579 2654 2752)
  (1586 1794) -1 0)
 (1890 equiv "( pen ua + ul ; move 3 , 5 ; move 4 , ul ) "
  (624 689 1732 1744 1771 1799 1811 1815 1849 1850 1871 1894 1898 1907 1957
   2184 2373 2407 2533 2537 2655 2792 2807 2851)
  () 2851 0)
 (1891 equiv "( pen 4 * 2 ; move 3 - ua , ul ; move 2 , ul ) "
  (847 2008 2410 2452 2509 2685) () 2837 0)
 (1892 uniq "( move ua + ul , ul ; move 2 , 0 ; move 4 , 2 + 2 ) "
  (1093 2264) (1108) -1 0)
 (1893 uniq "( move 7 , ua / 3 ; pen ua * 3 ; move 3 , 0 + ul ) "
  (1125 2600 2769) () -1 0)
 (1894 equiv "( pen ua + ul ; move 3 , 2 ; move 4 , ul ) "
  (534 624 689 1654 1732 1744 1771 1799 1811 1815 1849 1850 1871 1890 1898
   1907 1957 2182 2184 2373 2407 2533 2537 2655 2792 2807 2851)
  () 2182 4)
 (1895 equiv "( move 4 , 7 ; pen 9 ; move 4 , ul ) "
  (272 304 305 308 328 335 358 1681 1727 1748 1759 1783 1836 1856 1913 1923
   1977 2025 2026 2134 2154 2220 2268 2324 2338 2344 2355 2386 2426 2560 2577
   2703 2736 2895 3061)
  () 2026 0)
 (1896 uniq "( pen 3 ; move 3 + ul , ul ; move 4 , 4 ) "
  (582 1703 1770 1931 2099 2103 2108 2159 2173 2454 2549 2637 2946 2952 3021
   3040 3058 3088)
  () -1 0)
 (1897 uniq "( pen ua ; move ua - ul , ul ; move 3 , ul ) "
  (517 542 641 678 685 1676 1680 1687 1697 1703 1713 1738 1749 1769 1770 1791
   1798 1833 1881 1901 1911 1919 1955 2037 2043 2075 2099 2159 2224 2239 2242
   2257 2270 2300 2307 2321 2330 2345 2352 2379 2417 2427 2447 2454 2461 2467
   2483 2490 2523 2549 2616 2641 2648 2660 2717 2718 2791 2837 2847 2915 2925
   2945 2952 2979 3037 3074)
  () -1 0)
 (1898 equiv "( pen ua + ul ; move 2 , ul ; move 3 , ul ) "
  (457 566 624 689 721 1771 1799 1811 1815 1849 1850 1890 1894 1907 2157 2440
   2552)
  () 2780 0)
 (1899 uniq "( move 4 , 3 ; pen ua ; move 3 , 2 ) "
  (231 272 291 294 304 335 358 743 1681 1786 1825 1836 1855 1856 1923 1932
   1934 1950 1971 1991 1997 2025 2048 2079 2132 2134 2154 2202 2217 2230 2253
   2281 2304 2312 2317 2355 2356 2386 2426 2430 2441 2496 2497 2560 2577 2604
   2679 2710 2759 2806 2902 2919 2983 3011 3022 3061 3084)
  () -1 1)
 (1900 uniq "( move 4 + 3 , 3 + ul ; pen ua ; move 4 - ul , ul + 4 ) "
  (1458 2608) () -1 0)
 (1901 uniq "( pen ua ; move 3 - ul , 5 ; move 3 , ul ) "
  (517 685 1680 1687 1703 1769 1791 1881 1897 1911 1919 2043 2075 2159 2224
   2242 2257 2270 2300 2307 2352 2379 2417 2447 2461 2483 2490 2510 2616 2688
   2717 2718 2837 2847 3040 3074)
  () -1 0)
 (1902 uniq "( move 3 , 2 / 4 ; move ua , ua ; move ua , 3 ) "
  (1888 2178 2318 2720 3006) () -1 0)
 (1903 uniq "( pen 4 ; move ua , ua - 7 ) "
  (21 64 65 70 72 73 75 76 81 82 98 112 1709 1943 2017 2213 2232 2306) () -1
  0)
 (1904 uniq "( pen ua ; move ua , 3 / 2 ; move ul , ul ) "
  (626 641 653 1655 1671 1688 1694 1696 1726 1746 1750 1752 1761 1763 1827
   1832 1845 1859 1867 1933 1978 1990 1998 2034 2059 2083 2087 2109 2121 2163
   2207 2214 2227 2252 2261 2279 2315 2316 2335 2369 2380 2388 2401 2422 2424
   2427 2473 2480 2523 2583 2646 2689 2693 2697 2745 2751 2812 2817 2821 2826
   2827 2869 2872 2874 2889 2960 2973 2986 3037 3069)
  () -1 0)
 (1905 uniq "( move 3 , 0 ; move ua , ua - 2 ) "
  (134 136 164 170 172 181 1699 1792 2030 2042 2201 3051) () -1 0)
 (1906 uniq "( move 3 , 4 ; ( pen ua ; move ul , 4 ; move 3 , 2 ) ) " 
  (1325) () -1 0)
 (1907 equiv "( pen ua + 0 ; move 3 , ul ; move 4 , ul ) "
  (524 624 1732 1771 1799 1811 1815 1849 1850 1871 1890 1894 1898 1957 2106
   2184 2373 2407 2492 2533 2552 2851)
  () 2106 1)
 (1908 uniq "( move 4 , 4 ; pen 4 ; move ua + ul , 4 ) "
  (31 554 590 1663 2487) () -1 1)
 (1909 uniq "( pen 9 ; move ua + ul , 2 ; move 2 , ul ) "
  (1680 1702 1769 1770 1791 1833 1881 1911 1919 2037 2227 2321 2345 2417 2461
   2730 2791 2821 2925 3019 3088)
  (1833) -1 0)
 (1910 equiv "( pen ua ; move ua , ul / 4 ; move 2 , 3 / 3 ) " (849 946 1781)
  () 2424 0)
 (1911 uniq "( pen ua ; move ua - ul , 2 ; move ua , ul ) "
  (87 542 641 670 685 1671 1676 1680 1687 1697 1726 1738 1749 1750 1769 1791
   1817 1833 1881 1897 1901 1909 1919 1927 1972 2034 2037 2049 2075 2224 2241
   2242 2261 2300 2321 2345 2352 2417 2447 2461 2483 2490 2549 2573 2583 2616
   2641 2660 2718 2791 2816 2826 2847 2889 2915 2925 2945 2979 3074 3088)
  () -1 0)
 (1912 uniq "( pen 3 ; move 4 + 2 , 2 / ua ; move 4 , 4 ) "
  (853 1851 1868 1875 1921 1944 1953 1989 1999 2014 2052 2053 2054 2078 2081
   2085 2110 2125 2127 2142 2167 2169 2205 2229 2275 2277 2286 2323 2368 2381
   2444 2494 2503 2513 2525 2526 2534 2582 2633 2784 2789 2804 2811 2868 2877
   2899 2905 2916 2923 2988 3059 3089)
  () -1 1)
 (1913 uniq "( move ua , 0 ; pen ua ; move 4 , ul ) "
  (51 91 267 283 288 305 308 328 329 334 335 358 587 1672 1681 1725 1727 1745
   1748 1759 1783 1786 1825 1836 1855 1856 1895 1923 1932 1934 1945 1950 1971
   1974 1977 1980 1991 2003 2023 2026 2032 2048 2132 2134 2154 2156 2202 2217
   2220 2230 2253 2268 2281 2293 2304 2320 2324 2338 2344 2349 2350 2355 2356
   2423 2426 2430 2441 2496 2499 2560 2577 2604 2649 2679 2699 2703 2706 2707
   2710 2731 2736 2759 2776 2802 2806 2810 2833 2860 2876 2895 2902 3061)
  (587 1001 1424 1783) -1 3)
 (1914 uniq "( pen 3 ; ( move 4 , 3 * 3 ; move ua , 3 ) ) " (786 860) () -1
  0)
 (1915 uniq "( pen ua ; move 2 + 3 , 7 ; move 2 , ul ) "
  (1702 1833 1852 2037 2040 2321 2331 2448 2472 2519 2659 2682 2683 2746 2925
   2982 3005 3019)
  () -1 0)
 (1916 equiv "( pen ua ; move ua , ul - ul ; move ua , 2 ) "
  (85 98 629 678 1684 1706 1713 1715 1738 1750 1803 1823 1829 1834 1840 1869
   1882 1886 1930 1939 1946 1955 2020 2031 2036 2039 2064 2067 2096 2145 2163
   2190 2207 2208 2210 2222 2228 2326 2330 2364 2393 2401 2447 2549 2562 2583
   2593 2620 2622 2648 2735 2757 2822 2826 2834 2885 2889 2915 2940 2942 2969
   2979)
  () 2357 0)
 (1917 uniq "( move ua , 2 ; pen 3 ; move ua , 4 ) "
  (52 288 291 297 362 1668 1672 1804 1945 1964 1974 1991 2023 2048 2051 2097
   2132 2217 2253 2281 2312 2320 2327 2338 2349 2350 2356 2375 2409 2430 2441
   2556 2577 2649 2675 2679 2706 2725 2759 2776 2802 2810 2902 2983 3078
   3084)
  () -1 0)
 (1918 uniq "( move ul + ua , 3 ; move ua , 4 ) "
  (143 195 196 198 223 227 274 278 1668 2251 2254 2468 2522 2855) (1233) -1
  0)
 (1919 uniq "( pen ua ; move ua - ul , 3 ; move 2 , ul ) "
  (542 685 1680 1687 1688 1697 1702 1713 1738 1749 1769 1770 1791 1816 1833
   1866 1881 1897 1901 1909 1911 2037 2075 2176 2224 2241 2242 2300 2321 2334
   2345 2352 2380 2417 2424 2427 2433 2447 2461 2483 2490 2508 2510 2616 2641
   2660 2681 2682 2718 2791 2816 2837 2847 2872 2889 2925 2979 2982 3005 3019
   3040 3055)
  () -1 0)
 (1920 uniq "( move ua , ul + ul ; pen 3 ; move ua , ua / 4 ) "
  (202 939 1885 2022 2299 2327 2460 2469 2531 2698 2957 2971 2984) () -1 0)
 (1921 uniq "( pen 3 ; move 4 + ul , 2 / ua ; move 2 , 4 ) "
  (853 1851 1868 1875 1912 1944 1953 1989 1999 2014 2052 2053 2054 2078 2081
   2085 2110 2125 2127 2142 2167 2169 2205 2226 2229 2275 2277 2286 2302 2323
   2368 2381 2444 2494 2503 2513 2525 2526 2534 2582 2626 2713 2784 2789 2804
   2811 2877 2890 2899 2905 2908 2916 2923 2988 3059 3089)
  () -1 0)
 (1922 equiv "( move 3 , ul ; pen ua ; move ua , 3 - 2 ) "
  (50 619 1880 2317 2691) () 1980 0)
 (1923 uniq "( move 4 , ua ; pen ua ; move 4 , ul ) "
  (272 285 294 304 305 308 328 329 334 335 358 1681 1725 1727 1745 1748 1759
   1783 1786 1825 1836 1855 1856 1895 1899 1913 1932 1934 1945 1974 1977 1980
   1997 2003 2023 2025 2026 2032 2048 2079 2134 2154 2156 2202 2217 2220 2230
   2268 2288 2324 2338 2344 2355 2375 2423 2426 2560 2577 2604 2679 2699 2703
   2706 2707 2710 2731 2736 2776 2810 2833 2860 2876 2895 3011 3061)
  (1597) -1 1)
 (1924 uniq "( move ua , 3 ; pen 4 ; move 3 - ua , ul ) "
  (484 642 1742 1824 2292 2336 2450 2465 2823 2954 2956 3085) () -1 0)
 (1925 uniq "( pen 4 ; move ua , ul ; move 7 , 2 ) "
  (268 269 290 302 322 332 340 342 350 361 1656 1664 1691 1707 1720 1760 1779
   1788 1789 1798 1800 1830 1864 1928 1967 2009 2011 2082 2095 2111 2114 2150
   2329 2357 2431 2488 2542 2611 2643 2651 2670 2756 2904 2991 3007 3071)
  () -1 0)
 (1926 uniq "( pen 3 ; move ul , ul / ua ; move 7 , ul ) "
  (653 724 1690 1832 1867 1958 1960 2041 2104 2123 2187 2380 2445 2489 2502
   2630 2650 2652 2732 2758 2819 2879 2898 2921 2977 3003 3057 3069 3087)
  () -1 0)
 (1927 uniq "( pen ua ; move ul - ua , 4 ; move ua , ul ) "
  (592 670 1676 1817 1852 1861 1911 2043 2049 2069 2070 2107 2165 2176 2239
   2241 2242 2257 2270 2295 2307 2331 2379 2387 2433 2439 2453 2467 2472 2510
   2548 2573 2614 2616 2658 2663 2674 2682 2705 2717 2727 2733 2746 2754 2816
   2837 2843 2852 2891 2909 2945 2967 2982 2992 3005 3017 3038 3055 3074
   3076)
  () -1 0)
 (1928 uniq "( pen ua ; move ua , 0 ; move 2 , 2 ) "
  (269 293 295 296 320 322 325 326 331 348 350 351 356 385 537 542 1656 1657
   1664 1675 1685 1691 1705 1707 1722 1728 1729 1776 1778 1779 1784 1788 1789
   1798 1800 1812 1813 1816 1830 1864 1865 1879 1925 1959 1967 1972 1979 1996
   2011 2038 2044 2058 2086 2095 2100 2111 2116 2155 2158 2166 2180 2181 2185
   2189 2209 2245 2301 2329 2347 2357 2372 2391 2428 2431 2448 2453 2458 2488
   2519 2521 2542 2567 2611 2619 2623 2643 2670 2690 2730 2756 2787 2793 2800
   2825 2829 2835 2848 2853 2880 2904 2922 2991 3007 3027 3053 3071 3075
   3091)
  (537 1864) -1 0)
 (1929 uniq "( pen 4 ; move 4 , 7 / 2 ; move ua , 2 ) "
  (430 1750 1756 1795 1963 2031 2045 2060 2096 2115 2146 2190 2206 2210 2260
   2290 2316 2385 2389 2429 2459 2462 2482 2498 2505 2704 2726 2744 2750 2801
   2812 2819 2944)
  () -1 1)
 (1930 uniq "( pen ua ; move ua , 8 + ul ; move 4 , 2 ) "
  (54 567 629 1684 1706 1738 1834 1869 1886 1916 1946 1967 2121 2208 2326
   2364 2393 2518 2562 2735 2757 3067)
  () -1 0)
 (1931 uniq "( pen ua ; move 3 + ul , ul ; move 4 , 3 ) "
  (543 582 678 1703 1738 1770 1896 1955 2099 2103 2108 2159 2173 2274 2321
   2345 2417 2454 2490 2549 2637 2648 2915 2925 2946 2952 3040 3058)
  () -1 0)
 (1932 uniq "( move 3 , 4 ; pen ua ; move 3 , ul ) "
  (231 267 272 291 294 305 308 328 329 334 335 358 1672 1681 1725 1727 1745
   1748 1783 1825 1836 1856 1899 1913 1923 1934 1945 1950 1974 1980 1997 2003
   2023 2032 2134 2154 2202 2217 2220 2230 2268 2304 2317 2344 2355 2423 2426
   2441 2497 2577 2604 2649 2679 2699 2703 2707 2731 2759 2776 2810 2833 2860
   2902 2919 2983 3011 3022)
  () -1 0)
 (1933 uniq "( pen ua ; move ua , 4 / ua ; move 2 , ul ) "
  (641 653 724 1655 1657 1671 1688 1694 1716 1726 1733 1763 1827 1866 1867
   1886 1904 1978 1998 2020 2034 2036 2067 2083 2087 2123 2175 2187 2219 2222
   2227 2252 2297 2334 2364 2380 2424 2427 2445 2473 2489 2502 2508 2523 2583
   2647 2681 2693 2697 2728 2745 2761 2812 2817 2821 2826 2827 2872 2889 2907
   2940 2973 3003 3034 3037 3067)
  () -1 0)
 (1934 uniq "( move 2 , 0 ; pen ua ; move 3 , ul ) "
  (267 272 283 285 288 328 329 334 335 358 1681 1725 1727 1745 1748 1783 1825
   1836 1856 1899 1913 1923 1932 1945 1950 1974 1980 1997 2003 2023 2032 2134
   2154 2202 2217 2220 2230 2268 2304 2344 2349 2355 2356 2375 2423 2426 2577
   2679 2699 2703 2707 2710 2736 2759 2776 2806 2810 2833 2858 2895 2902 2983
   3011)
  (1630) -1 2)
 (1935 uniq "( move ua + ul , 0 ; move 0 , 4 + ul ; move 4 + 2 , 4 ) " 
  (1393) () -1 0)
 (1936 uniq "( pen ua ; move 2 , 2 - 3 ; move ua , 4 ) "
  (466 573 1715 1803 2145 2298 2673 2742 2763 2765 2820 3062 3068) () -1 0)
 (1937 uniq "( move 3 , 3 / 2 ; pen ua + ul ; move 7 , ul ) "
  (1878 1975 2073 2101 2168 2193 2669 2803) () -1 0)
 (1938 equiv "( pen ua - 0 ; move 2 , 0 ; move ua - ul , ul ) "
  (899 1807 1865 1883 2514 3039) () 2514 0)
 (1939 uniq "( pen ua ; move 3 , 2 / ul ; move ua , 2 ) "
  (1662 1684 1715 1716 1750 1795 1823 1829 1840 1882 1886 1916 1952 1990 2013
   2031 2064 2096 2131 2146 2149 2190 2204 2206 2208 2210 2228 2244 2261 2285
   2332 2365 2385 2389 2402 2431 2459 2464 2474 2498 2538 2557 2593 2597 2620
   2667 2704 2721 2735 2742 2757 2763 2801 2822 2834 2917 2940 2941 2942 2951
   2960 2976 3028 3034)
  () -1 0)
 (1940 uniq "( pen 7 ; move ua , ua - 2 ; move ul , 4 ) "
  (626 1970 2017 2027 2059 2109 2214 2642 2646 2662) (626) -1 0)
 (1941 uniq "( move ua , 2 ; move 0 , 4 + 3 ; move ua , 2 ) " (750) () -1 0)
 (1942 uniq "( move ua , ul / ua ; pen 2 ; move ua , 2 ) "
  (84 85 579 705 1718 1743 1775 1982 1988 2394 2403 2603 2716 2778 2796 2850
   3012 3013 3082)
  () -1 0)
 (1943 uniq "( pen 3 ; move ua , 2 - 3 ) "
  (18 64 65 70 73 76 79 81 82 98 112 1709 1758 1814 1903 2212 2213 2232 2306)
  (65 76 1120 1190) -1 1)
 (1944 uniq "( pen 3 ; move 4 + 3 , 2 / ua ; move 4 , 4 ) "
  (853 1851 1868 1875 1912 1921 1953 1989 1999 2014 2052 2053 2054 2078 2081
   2085 2110 2125 2127 2142 2167 2169 2205 2229 2275 2277 2284 2286 2302 2323
   2368 2381 2383 2444 2494 2503 2513 2525 2526 2534 2582 2633 2680 2713 2784
   2789 2804 2811 2824 2868 2877 2899 2905 2916 2923 2988 3059 3089)
  () -1 0)
 (1945 uniq "( move ua , 2 ; pen ua ; move ul , ul ) "
  (272 283 288 291 328 329 334 335 358 681 982 1005 1672 1681 1725 1727 1745
   1748 1759 1783 1786 1825 1836 1855 1856 1913 1917 1923 1932 1934 1950 1971
   1974 1977 1980 1991 2003 2006 2019 2023 2032 2048 2132 2134 2154 2202 2217
   2220 2230 2268 2281 2293 2319 2320 2324 2338 2344 2349 2355 2356 2423 2426
   2430 2441 2496 2499 2577 2649 2679 2699 2703 2706 2707 2759 2776 2802 2806
   2810 2833 2876 2902 2983 3061 3078)
  () -1 0)
 (1946 equiv "( pen ua ; move ua , ul + 3 ; move ua , 2 ) "
  (48 85 629 1684 1688 1706 1713 1750 1803 1823 1834 1869 1882 1886 1916 1930
   2031 2036 2039 2064 2067 2096 2145 2149 2163 2190 2207 2208 2210 2222 2228
   2298 2326 2364 2393 2401 2427 2508 2538 2562 2583 2593 2620 2622 2721 2735
   2757 2799 2820 2826 2872 2885 2889 2915 2940 2969 2979 3077)
  () 2940 0)
 (1947 uniq "( move ua , ul / 3 ; move ua , ua * ua ; ul ) " (249 1842 2418)
  () -1 0)
 (1948 uniq "( move ua , 0 ; pen 2 ; move 3 , 3 + ul ) " (553 2152) (553) -1
  0)
 (1949 equiv "( move ua , ua - 3 ; move ul , ul ; move ua , ul ) "
  (896 965 2133 2249 2280 2351 2507 2544 2580 2684 2831 2875 2888 2981 3010)
  () 2249 0)
 (1950 uniq "( move ua , 3 ; pen 2 ; move 3 , ul ) "
  (231 267 272 288 304 1681 1745 1748 1759 1783 1825 1836 1856 1899 1913 1932
   1934 1945 1974 1991 2003 2023 2032 2154 2202 2217 2230 2253 2293 2320 2324
   2338 2355 2426 2496 2679 2725 2759 2776 2895 2902 3084)
  () -1 0)
 (1951 equiv "( ( move 3 , 3 ; pen ua ) ; move 2 , ul ) "
  (476 522 587 598 654 660 2230) () 2230 0)
 (1952 uniq "( pen ua ; move 2 , 4 / 0 ; move ua , 2 ) "
  (1684 1750 1752 1823 1829 1840 1882 1886 1939 1998 2013 2031 2064 2096 2190
   2206 2210 2228 2244 2279 2297 2298 2332 2365 2385 2464 2535 2557 2593 2597
   2620 2622 2673 2742 2763 2773 2799 2820 2894 2909 2935 2940 2944 2976)
  () -1 0)
 (1953 uniq "( pen 3 ; move 4 + 0 , 2 / ua ; move 4 , 4 ) "
  (853 1851 1868 1875 1912 1921 1944 1989 1999 2014 2052 2053 2054 2078 2081
   2085 2110 2125 2127 2142 2167 2169 2194 2205 2229 2243 2275 2277 2286 2323
   2368 2381 2444 2494 2503 2513 2525 2526 2534 2559 2582 2633 2784 2789 2804
   2811 2868 2877 2899 2905 2916 2923 2988 3059 3089)
  () -1 0)
 (1954 uniq "( move ua , 2 ; move ua + ul , 2 ) "
  (124 141 142 146 163 166 169 173 175 177 182 186 189 194 199 236 240 244
   414 1670 1708 1719 1747 1794 1848 1857 1889 1969 2024 2091 2124 2390 2396
   2470 2553 2654 2752 3051 3056)
  (461 464 1042) -1 1)
 (1955 uniq "( pen ua ; move ua + ul , ul ; move 3 , 2 ) "
  (97 542 582 678 685 1703 1707 1738 1770 1833 1869 1881 1897 1916 1931 2037
   2099 2103 2159 2173 2222 2321 2345 2352 2417 2447 2454 2490 2549 2637 2641
   2648 2718 2847 2915 2925 2952 2979)
  () -1 0)
 (1956 equiv "( move ua , ua ; pen ua + ul ; move ua , 2 ) "
  (84 85 564 633 637 682 995 2048 2354 2420 2606 2808 2840) () 2356 2)
 (1957 equiv "( pen ua + 4 ; move 3 , 7 ; move 4 , ul ) "
  (624 1732 1771 1799 1811 1815 1849 1850 1871 1890 1894 1907 2090 2184 2373
   2407 2533 2537 2668 2851)
  () 2774 0)
 (1958 uniq "( pen 2 ; move ul , ul / 4 ; move 4 , ul ) "
  (653 656 724 1690 1726 1832 1867 1926 1978 2066 2072 2104 2123 2187 2197
   2236 2337 2402 2404 2424 2502 2583 2617 2625 2630 2636 2650 2676 2681 2732
   2751 2794 2821 2828 2869 2872 2901 2907 2921 2986 3037 3042)
  () -1 0)
 (1959 equiv "( pen ua ; move 3 , ua ; move 2 , ul ) "
  (22 292 295 296 303 319 320 322 327 331 333 336 338 348 351 356 364 385 624
   1657 1664 1673 1674 1675 1683 1685 1705 1717 1722 1728 1729 1731 1735 1772
   1776 1778 1779 1784 1798 1800 1805 1809 1812 1813 1816 1828 1831 1860 1864
   1865 1876 1879 1928 1972 1976 1979 1996 2038 2044 2047 2050 2058 2086 2093
   2100 2106 2116 2150 2155 2158 2164 2166 2177 2180 2181 2182 2185 2209 2231
   2245 2284 2301 2313 2347 2357 2372 2391 2412 2425 2428 2431 2448 2458 2506
   2515 2519 2521 2566 2567 2574 2575 2581 2598 2602 2619 2623 2624 2668 2690
   2722 2730 2741 2749 2756 2761 2774 2782 2787 2793 2800 2825 2848 2853 2870
   2880 2911 2922 2927 2943 2987 3024 3027 3033 3053 3071 3075 3091)
  () 2180 1)
 (1960 uniq "( pen 3 ; move 3 , ul / ua ; move ua , 4 ) "
  (724 853 1823 1926 1963 2041 2064 2096 2146 2161 2187 2210 2219 2244 2261
   2298 2332 2358 2376 2402 2429 2462 2498 2597 2617 2652 2667 2673 2686 2704
   2721 2763 2801 2819 2824 2828 2871 2879 2898 2917 2939 3003 3057 3072)
  () -1 0)
 (1961 equiv "( pen 4 + ul ; move 2 - ua , ua ; move 2 , ul ) "
  (847 2008 2029 2186 2233 2287 2410 2421 2615 2685 2772 2838 2864 2893 2918
   3079)
  () 3005 0)
 (1962 uniq "( move 0 - ua , ul ; move ua , ul ) "
  (183 223 224 227 274 275 278 1653 1861 2055 2144 2262 2291 2457 2585) () -1
  1)
 (1963 uniq "( pen 3 ; move 4 , ul / 2 ; move ua , 2 ) "
  (430 1750 1795 1823 1832 1882 1929 1960 2031 2041 2060 2064 2096 2115 2146
   2161 2190 2200 2206 2208 2210 2228 2260 2261 2290 2316 2389 2401 2429 2462
   2480 2482 2498 2505 2593 2597 2620 2686 2704 2726 2732 2744 2750 2758 2801
   2819 2944 2949 3057 3069 3072)
  () -1 0)
 (1964 uniq "( move 4 , ul ; pen 3 ; move ua , 0 ) "
  (49 294 297 304 335 358 362 1804 1917 1980 1997 2025 2097 2281 2312 2317
   2320 2327 2350 2375 2386 2409 2577 2675 2707 2802 2858)
  () -1 0)
 (1965 uniq "( move 4 , 2 ; pen 3 + ul ; move ua , 4 ) "
  (30 59 569 637 1782 2449 2588 2606 2664 2808 2866) () -1 0)
 (1966 uniq "( ( pen ua + ul ; move 3 , 3 ; move 3 , 4 ) ; pen 0 ) " 
  (1305) (1305) -1 0)
 (1967 uniq "( pen ua ; move ua , ul ; move 4 , 2 ) "
  (17 22 54 268 269 293 295 322 325 326 331 332 350 351 356 361 364 385 1656
   1657 1664 1673 1675 1685 1691 1705 1707 1720 1722 1729 1731 1738 1772 1776
   1778 1779 1788 1789 1798 1800 1812 1813 1816 1830 1864 1876 1925 1928 1930
   1972 1993 1996 2009 2011 2038 2044 2058 2082 2093 2095 2100 2106 2111 2114
   2116 2155 2158 2166 2182 2189 2231 2245 2301 2313 2326 2329 2347 2357 2364
   2391 2393 2412 2425 2428 2431 2443 2458 2488 2506 2515 2521 2562 2611 2623
   2643 2668 2670 2741 2749 2756 2782 2787 2793 2798 2825 2829 2835 2845 2853
   2865 2904 2927 2991 3007 3014 3027 3033 3053 3071 3075)
  () -1 0)
 (1968 equiv "( pen ua - 0 ; move ua , 4 ; move 4 / 2 , 4 ) "
  (855 2005 2117 2135) () 2135 0)
 (1969 uniq "( move ua , ul ; move ua + 2 , 4 ) "
  (89 135 138 142 163 166 169 173 176 189 194 199 210 236 240 1670 1708 1719
   1747 1794 1838 1848 1889 1954 2024 2091 2396 2470 2579 2654 2752)
  (1562) -1 2)
 (1970 uniq "( pen 2 ; move ua , ua - 2 ; move 2 , ul ) "
  (626 1763 1827 1859 1866 1940 2017 2020 2027 2059 2109 2128 2214 2227 2237
   2252 2473 2646 2681 2728 2751 2821 2882)
  () -1 0)
 (1971 uniq "( move ua , ul ; pen ua ; move 7 , 2 ) "
  (283 291 297 329 335 362 1672 1745 1748 1759 1783 1786 1855 1856 1899 1913
   1945 1974 1980 1991 1997 2023 2025 2032 2048 2097 2132 2154 2156 2202 2217
   2253 2281 2293 2304 2317 2327 2344 2349 2350 2356 2386 2409 2430 2441 2496
   2497 2499 2560 2604 2649 2675 2679 2706 2707 2731 2759 2776 2802 2806 2833
   2858 2860 2902 2919 3022)
  () -1 0)
 (1972 uniq "( pen ua ; move ua , 2 ; move ua , ul ) "
  (22 87 269 292 293 303 320 322 325 326 327 331 333 336 337 338 348 350 351
   356 361 364 377 385 989 1656 1657 1664 1673 1674 1675 1683 1685 1691 1705
   1707 1720 1722 1728 1729 1731 1735 1760 1772 1776 1778 1779 1784 1789 1798
   1800 1805 1809 1812 1813 1816 1828 1830 1831 1860 1864 1865 1876 1879 1911
   1928 1959 1967 1976 1979 1993 1996 2009 2038 2044 2050 2056 2058 2082 2086
   2093 2100 2106 2111 2114 2155 2158 2166 2177 2180 2181 2182 2185 2189 2209
   2231 2296 2313 2357 2372 2378 2412 2425 2431 2443 2448 2458 2488 2506 2515
   2519 2542 2566 2567 2573 2598 2602 2619 2640 2643 2668 2670 2677 2690 2715
   2722 2729 2730 2741 2756 2777 2782 2793 2798 2800 2825 2829 2835 2845 2848
   2856 2865 2870 2880 2904 2911 2922 2943 2959 2991 3007 3014 3033 3071 3075
   3091)
  () -1 1)
 (1973 uniq "( move 4 , 2 + ul ; ( move ul , 0 ; move ua , 4 * 2 ) ) " 
  (1385) () -1 0)
 (1974 uniq "( move ua , 2 ; pen ua ; move ua , ul ) "
  (22 87 272 283 288 291 294 304 328 329 334 335 358 362 1672 1681 1725 1727
   1745 1748 1759 1783 1786 1804 1825 1836 1855 1856 1913 1917 1923 1932 1934
   1945 1950 1971 1977 1980 1991 2003 2023 2032 2048 2097 2132 2134 2154 2202
   2217 2220 2230 2268 2281 2293 2304 2317 2320 2324 2327 2338 2344 2349 2350
   2355 2356 2375 2409 2423 2426 2430 2441 2496 2499 2556 2577 2649 2675 2679
   2699 2703 2706 2707 2759 2776 2802 2806 2810 2833 2858 2876 2902 2919 2983
   3061 3078)
  () -1 2)
 (1975 uniq "( move 3 , 3 ; pen ua + ul ; move 7 , ul ) "
  (508 625 633 1937 2354 2478 2770 2840) () -1 0)
 (1976 uniq "( pen ua ; move 3 , 3 ; move ua , ul ) "
  (22 292 303 319 320 325 327 331 333 336 337 338 348 351 356 364 385 1269
   1656 1657 1673 1674 1675 1683 1685 1722 1729 1731 1735 1772 1776 1778 1779
   1784 1789 1798 1800 1805 1809 1812 1813 1816 1828 1830 1831 1860 1865 1876
   1879 1959 1972 1979 1996 2038 2044 2047 2050 2058 2086 2093 2106 2150 2158
   2166 2177 2180 2182 2185 2189 2209 2231 2245 2301 2313 2347 2348 2357 2372
   2378 2391 2412 2425 2428 2431 2448 2458 2506 2515 2519 2521 2566 2574 2581
   2598 2602 2619 2623 2640 2651 2668 2677 2690 2721 2722 2729 2741 2749 2774
   2782 2787 2793 2798 2800 2825 2829 2853 2856 2870 2904 2906 2911 2922 2927
   2943 2959 2960 2987 3024 3027 3033 3053 3075 3091)
  () -1 2)
 (1977 uniq "( move 4 , 2 ; pen 4 ; move 4 , ul ) "
  (272 304 305 308 328 335 358 1681 1727 1748 1759 1783 1836 1856 1895 1913
   1923 1945 1974 2023 2025 2026 2134 2217 2220 2268 2312 2320 2324 2338 2344
   2355 2423 2426 2560 2577 2703 2736 2810 2895 3061 3084)
  () -1 0)
 (1978 uniq "( pen ua ; move ua , 2 / 4 ; move 4 , ul ) "
  (55 60 641 653 656 1655 1671 1685 1688 1694 1696 1715 1726 1733 1746 1752
   1813 1827 1832 1845 1867 1904 1933 1958 2034 2067 2072 2083 2087 2121 2123
   2187 2204 2207 2228 2236 2252 2279 2297 2315 2335 2337 2364 2380 2393 2402
   2404 2422 2424 2427 2473 2474 2502 2523 2583 2616 2625 2636 2697 2742 2745
   2751 2765 2817 2826 2827 2869 2872 2874 2889 2907 2909 2917 2921 2941 2973
   2986 3034 3037 3042 3067)
  (1726) -1 0)
 (1979 uniq "( pen ua ; move 2 , 3 ; move 2 , ul ) "
  (303 320 325 331 333 338 348 356 364 385 1657 1664 1673 1674 1675 1683 1685
   1705 1717 1722 1728 1729 1731 1735 1772 1776 1778 1779 1784 1789 1798 1800
   1805 1809 1812 1813 1816 1828 1860 1864 1865 1876 1879 1928 1959 1972 1976
   1996 2038 2050 2058 2086 2093 2106 2158 2166 2177 2180 2181 2182 2185 2209
   2231 2245 2313 2325 2329 2334 2348 2372 2412 2428 2448 2458 2506 2515 2519
   2567 2574 2581 2598 2602 2619 2623 2668 2677 2690 2715 2722 2729 2730 2741
   2756 2782 2787 2793 2798 2800 2848 2856 2880 2904 2911 2922 2943 2959 2987
   3033 3071 3075 3091)
  () -1 0)
 (1980 uniq "( move 3 , ul ; pen ua ; move ua , ul ) "
  (22 267 291 294 297 304 305 308 328 329 334 335 358 362 660 1086 1681 1725
   1727 1745 1748 1759 1783 1786 1825 1836 1856 1878 1913 1923 1932 1934 1945
   1964 1971 1974 1991 1997 2023 2032 2048 2097 2101 2134 2154 2202 2217 2220
   2230 2268 2281 2293 2304 2317 2320 2327 2344 2349 2355 2356 2375 2423 2426
   2430 2441 2497 2499 2577 2604 2649 2669 2699 2703 2706 2707 2731 2776 2802
   2810 2833 2858 2860 2876 2919 2983 3022)
  (660 1922) -1 5)
 (1981 uniq "( move 4 , ul / 3 ; move ua , ul ) "
  (151 184 203 243 247 249 276 443 1819) (443 1200) -1 4)
 (1982 equiv "( move ua , 0 / 3 ; pen ua ; move ua , 2 ) "
  (44 48 84 558 1743 1775 1806 1942 2356 2403 2603 2632 2778 2796 2850 3013
   3032 3082)
  () 2356 0)
 (1983 equiv "( pen ua * 2 ; move 4 , 0 ; move 2 , 4 ) "
  (545 630 1689 1732 2028 2080 2084 2199 2520) () 2288 0)
 (1984 uniq "( move ua , 2 * 3 ; move ua , 4 ) "
  (52 126 148 149 178 180 187 195 196 232 233 249 1665 1668 1741 2254 2931
   2953)
  () -1 0)
 (1985 uniq "( pen ua ; move ua , 4 * 2 ) "
  (33 38 40 67 69 72 75 76 79 82 98 107 112 114 1758 1858 2212 2213 2232 2353
   2438 2484 2485 2540 2958)
  (1494 1625) -1 0)
 (1986 equiv "( pen ua + ul ; move 4 , 4 ; move 0 - ua , ul ) "
  (917 1862 2004 2151 2192 2607 2621 2839 2968) () 2968 1)
 (1987 uniq "( pen 3 ; move ul + ua , 0 ; move 2 , ul ) "
  (670 1702 1852 2040 2107 2176 2295 2307 2331 2387 2433 2453 2472 2510 2601
   2658 2663 2674 2682 2746 2816 2843 2982 3005 3017 3076)
  () -1 1)
 (1988 uniq "( move 2 , 4 / ua ; pen 2 ; move ua , 2 ) "
  (579 1718 1775 1942 2394 2403 2603 2716 2850 3012 3013 3082) () -1 0)
 (1989 equiv "( pen 3 ; move 4 + 0 , 2 / ua ; move ua , 4 ) "
  (853 1851 1868 1875 1912 1921 1944 1953 1999 2014 2052 2053 2054 2078 2081
   2085 2110 2125 2127 2142 2161 2167 2169 2194 2205 2229 2243 2275 2277 2286
   2323 2368 2381 2383 2444 2494 2503 2513 2525 2526 2534 2559 2582 2789 2804
   2811 2877 2890 2899 2905 2916 2923 2988 3009 3059 3089)
  () 2161 0)
 (1990 uniq "( pen ua ; move 3 , 3 / 2 ; move 3 , 2 ) "
  (430 641 1716 1750 1756 1823 1829 1840 1904 1939 2013 2060 2064 2121 2149
   2190 2206 2210 2222 2244 2260 2261 2285 2290 2316 2365 2369 2388 2401 2422
   2464 2480 2482 2538 2557 2638 2688 2689 2693 2704 2812 2894 2935 2960 2970
   2976 2986 3028)
  () -1 0)
 (1991 uniq "( move ua , 3 ; pen ua ; move ua , 4 ) "
  (88 283 291 294 299 304 334 358 362 558 1668 1672 1681 1745 1748 1783 1786
   1804 1836 1855 1856 1899 1913 1917 1945 1950 1971 1974 1980 2023 2032 2048
   2051 2079 2097 2132 2154 2202 2217 2230 2253 2281 2304 2317 2320 2324 2327
   2349 2350 2356 2409 2426 2430 2441 2496 2499 2556 2560 2577 2649 2675 2679
   2699 2706 2707 2710 2725 2731 2759 2776 2802 2806 2810 2858 2876 2902 2919
   2983 3022 3078)
  () -1 1)
 (1992 equiv "( move ua , ul ; pen ua ; move 4 + ul , 3 ) "
  (554 612 642 679 686 719 2006 2215 2266 2586 3065) () 2266 0)
 (1993 uniq "( pen ua ; move ul , 2 ; move 4 , 4 ) "
  (269 326 327 333 337 348 356 580 1656 1664 1673 1674 1683 1685 1722 1729
   1767 1772 1776 1778 1779 1789 1813 1876 1967 1972 2001 2058 2093 2100 2106
   2116 2155 2158 2182 2189 2231 2284 2296 2313 2329 2348 2412 2425 2428 2488
   2506 2515 2521 2566 2640 2668 2715 2749 2782 2825 2835 2853 2865 2911 2943
   3014 3033 3053 3075)
  (580) -1 1)
 (1994 uniq "( pen ua - 2 ; move ua , 4 ; move 3 + 0 , ul ) "
  (845 1739 1796 2172 2442) () -1 0)
 (1995 uniq "( move ua + 2 , 7 / 4 ; pen 2 ; move ul , ul ) "
  (1054 2019 2319) () -1 0)
 (1996 uniq "( pen ua ; move ua , 9 ; move 2 , ul ) "
  (22 293 296 320 322 325 326 331 333 338 348 351 356 364 385 1656 1657 1664
   1667 1673 1674 1675 1683 1685 1705 1707 1720 1722 1728 1729 1731 1735 1760
   1769 1772 1776 1778 1779 1784 1789 1798 1800 1805 1809 1812 1813 1816 1828
   1831 1860 1864 1865 1876 1879 1928 1959 1967 1972 1976 1979 2009 2038 2050
   2058 2082 2086 2093 2100 2106 2111 2114 2155 2158 2166 2177 2180 2181 2182
   2185 2189 2209 2231 2245 2313 2357 2372 2412 2443 2448 2458 2488 2506 2515
   2519 2542 2567 2574 2581 2598 2602 2619 2640 2668 2670 2677 2690 2722 2730
   2741 2756 2777 2782 2787 2793 2798 2800 2835 2845 2848 2865 2880 2911 2922
   2943 2987 2991 3014 3033 3071 3075 3091)
  () -1 1)
 (1997 equiv "( move 4 , ul ; pen ua ; move 3 , 2 ) "
  (231 272 291 294 297 329 335 358 362 1681 1786 1825 1836 1855 1899 1923
   1932 1934 1964 1971 1980 2025 2032 2048 2079 2097 2132 2134 2154 2202 2217
   2281 2304 2312 2317 2344 2355 2356 2386 2430 2441 2496 2497 2499 2560 2577
   2604 2679 2706 2707 2710 2731 2759 2802 2806 2833 2858 2860 2902 2919 2983
   3011 3022 3061 3084)
  () 2386 0)
 (1998 uniq "( pen ua ; move ua , 4 / ua ; move ul , 2 ) "
  (567 1655 1671 1684 1688 1694 1750 1829 1867 1886 1904 1933 1952 2013 2036
   2067 2096 2121 2163 2175 2207 2222 2228 2244 2316 2364 2369 2380 2393 2401
   2464 2535 2593 2620 2638 2676 2812 2827 2832 2894 2935 2940 2949 3067)
  () -1 0)
 (1999 uniq "( pen 3 ; move 4 + 0 , 2 / ua ; move 3 , 4 ) "
  (853 1851 1868 1875 1912 1921 1944 1953 1989 2014 2052 2053 2054 2078 2081
   2085 2110 2125 2127 2142 2167 2169 2194 2205 2229 2243 2275 2277 2286 2323
   2368 2381 2444 2494 2503 2513 2525 2526 2534 2559 2582 2789 2804 2811 2877
   2899 2905 2916 2923 2988 3059 3089)
  () -1 0)
 (2000 equiv "( move 4 , 4 + ul ; pen ua + ul ; move 2 , 4 ) "
  (922 1701 1802 2310 2366 2541 2592 2866 2920) () 2541 0)
 (2001 uniq "( pen 3 ; move ul , ul ; move ua , 4 ) "
  (290 292 296 303 332 336 337 348 357 361 1656 1664 1691 1731 1767 1830 1831
   1993 2047 2082 2189 2284 2296 2348 2378 2425 2431 2611 2640 2643 2729 2749
   2756 2771 2856 2904 2906)
  () -1 0)
 (2002 uniq "( pen ua ; move 4 , 4 - ul ; move 3 , ul ) "
  (584 1713 1716 1859 2020 2033 2131 2204 2216 2330 2480 2636 2689 2942 2998)
  () -1 0)
 (2003 uniq "( move ua , ua * pen ua ; move 3 , ul ) "
  (358 1001 1745 1748 1783 1825 1836 1855 1856 1913 1923 1932 1934 1945 1950
   1974 2023 2032 2048 2134 2154 2156 2202 2211 2217 2355 2679 2759 2776 2876
   2902 3011)
  () -1 0)
 (2004 uniq "( pen ua + ul ; move 4 , 4 ; move 0 - 3 , ul ) "
  (917 1862 1986 2151 2192 2607 2621 2839 2968) () -1 1)
 (2005 uniq "( pen ua - ul ; move ua , 4 ; move 4 / 0 , 4 ) " (855 1968 2117)
  () -1 0)
 (2006 equiv "( move ua , 2 ; pen ua ; move ul + ul , ul ) "
  (612 623 642 681 686 719 1945 1992 2215 2266 2336 2586) () 2023 0)
 (2007 uniq "( pen ua ; move 3 , 3 ; move 4 , 2 * 2 ) "
  (418 2015 2092 2353 2428 2438 2485 2540 2653 3070) () -1 0)
 (2008 equiv "( pen 4 + 2 ; move ul - ua , ua ; move 2 , ul ) "
  (847 1891 1961 2029 2186 2287 2838 2864 2918) () 2176 0)
 (2009 uniq "( pen 5 ; move ua , ul ; move 4 , ul ) "
  (93 268 269 271 293 331 356 361 364 385 1656 1657 1664 1673 1675 1685 1691
   1707 1717 1720 1722 1728 1729 1731 1760 1772 1776 1778 1779 1788 1789 1798
   1800 1812 1813 1816 1876 1879 1925 1967 1972 1996 2038 2047 2058 2082 2093
   2095 2100 2106 2111 2114 2150 2158 2166 2181 2182 2231 2313 2325 2329 2348
   2412 2443 2458 2488 2506 2515 2542 2566 2567 2611 2668 2730 2741 2749 2756
   2774 2777 2782 2793 2798 2835 2845 2848 2856 2865 2880 3014 3024 3033 3071
   3075)
  (1433 1779) -1 0)
 (2010 uniq "( move 2 , ul ; move ua , 4 ; move 4 , ul ) "
  (60 450 534 604 605 665 891 1821 1863 2157 2435 2501 2896) (891) -1 0)
 (2011 uniq "( pen 4 ; move ua , ua ; move ul , 2 ) "
  (21 268 269 295 296 302 316 319 322 326 340 342 350 351 356 385 1691 1705
   1707 1720 1728 1760 1788 1789 1812 1864 1925 1928 1967 2038 2095 2100 2116
   2155 2245 2301 2347 2357 2391 2488 2521 2542 2609 2611 2623 2624 2643 2651
   2670 2825 2991 3007 3027)
  () -1 0)
 (2012 equiv "( pen ul * 9 ; move 3 , 0 ; move 2 , 2 ) "
  (1744 1757 1873 2084 2271) () 2787 0)
 (2013 equiv "( pen ua ; move ul , 3 / ua ; move ua , 2 ) "
  (105 653 724 1690 1750 1795 1823 1829 1840 1882 1886 1939 1952 1990 1998
   2031 2036 2041 2064 2096 2104 2190 2206 2210 2222 2228 2244 2279 2285 2316
   2364 2365 2369 2370 2385 2482 2535 2557 2593 2620 2630 2638 2673 2884 2894
   2935 2940 2948 2949 2960 2970 2976 3067)
  () 2884 0)
 (2014 uniq "( pen 3 ; move 4 + 2 , 2 / ua ; move 3 , 4 ) "
  (853 1851 1868 1875 1912 1921 1944 1953 1989 1999 2052 2053 2054 2078 2081
   2085 2110 2125 2127 2142 2167 2169 2205 2229 2243 2275 2277 2286 2323 2368
   2381 2444 2494 2503 2513 2525 2526 2534 2582 2633 2789 2804 2811 2868 2877
   2899 2905 2916 2923 2988 3059 3089)
  () -1 1)
 (2015 uniq "( pen ua ; move 4 , 3 ; move 4 , 2 * 2 ) "
  (418 574 2007 2092 2353 2438 3070) () -1 0)
 (2016 uniq "( move 4 - ul , 0 ; move ua + 2 , 2 ) " (26 321 324 352 2785)
  (449) -1 0)
 (2017 uniq "( pen 4 ; move ua , ua - 2 ; move 2 , 7 ) "
  (626 1763 1903 1940 1970 2020 2027 2059 2109 2214 2237 2473 2728) () -1 0)
 (2018 uniq "( pen 3 ; move 3 , ul ; move 2 - ua , ul ) "
  (498 1853 2063 2164 2436 2551 2555 2779 2965 3001 3008) () -1 0)
 (2019 uniq "( move ua + ul , 2 / 4 ; pen ua ; move ul , ul ) "
  (1054 1870 1945 1995 2319) () -1 0)
 (2020 uniq "( pen ua ; move ua , ua - ul ; move 2 , ul ) "
  (112 584 626 1713 1763 1800 1827 1859 1866 1869 1881 1916 1933 1970 2002
   2017 2027 2033 2059 2083 2087 2109 2128 2131 2145 2214 2252 2321 2330 2380
   2424 2473 2489 2646 2697 2728 2746 2757 2761 2765 2822 2837 2942 2973)
  () -1 0)
 (2021 uniq "( pen ua ; move 2 , 7 / 4 ; move ua , 2 / 4 ) "
  (849 1773 1774 2074 2267 2311 2451) () -1 1)
 (2022 uniq "( move 3 , ul + 2 ; pen 3 ; move 3 , ua / 4 ) "
  (939 1885 1920 2299 2957) () -1 0)
 (2023 uniq "( move ua , 2 ; pen ua ; move 2 , ul ) "
  (272 283 285 288 291 328 329 334 335 358 839 925 929 1672 1681 1725 1727
   1745 1748 1759 1783 1786 1825 1836 1855 1856 1913 1917 1923 1932 1934 1945
   1950 1971 1974 1977 1980 1991 2003 2032 2048 2079 2132 2134 2140 2154 2202
   2217 2220 2230 2268 2281 2293 2320 2324 2338 2344 2349 2355 2356 2423 2426
   2430 2441 2496 2497 2499 2577 2649 2679 2699 2703 2706 2707 2710 2759 2776
   2802 2806 2810 2833 2876 2902 2983 3022 3061 3078)
  (1785 2006) -1 0)
 (2024 uniq "( move ua , 5 ; move ua + 2 , 4 ) "
  (142 163 166 169 173 189 194 199 210 236 1670 1708 1719 1794 1838 1848 1889
   1954 1969 2091 2396 2470 2579 2654 2752)
  () -1 1)
 (2025 uniq "( move 4 , ul ; pen 9 ; move 4 , 2 ) "
  (297 308 335 1681 1759 1786 1855 1895 1899 1923 1964 1971 1977 1997 2026
   2097 2253 2281 2312 2317 2344 2386 2497 2560 2604 2706 2731 2860 3061)
  () -1 0)
 (2026 uniq "( move 4 , 7 ; pen 8 ; move 4 , ul ) "
  (272 304 305 308 328 335 358 1681 1727 1748 1759 1783 1836 1856 1895 1913
   1923 1977 2025 2134 2154 2220 2268 2324 2338 2344 2355 2426 2560 2577 2703
   2736 2895 3061)
  (1895) -1 0)
 (2027 uniq "( pen 4 ; move ua , ua - 2 ; move 2 , 2 ) "
  (626 1763 1940 1970 2017 2020 2059 2109 2115 2214 2237 2260 2473 2562 2728
   2812 2969)
  () -1 0)
 (2028 uniq "( pen ua * ul ; move 4 , 4 ; move 2 , 2 ) "
  (1744 1815 1821 1983 2080 2084 2199 2537 2655 2665 2788) () -1 0)
 (2029 equiv "( pen 4 + ul ; move 3 - ua , ua ; move ua , ul ) "
  (847 1961 2008 2186 2233 2287 2410 2421 2452 2605 2615 2685 2747 2864) ()
  2605 0)
 (2030 uniq "( move ua , 2 ; move ua , ua - 5 ) "
  (134 150 164 170 171 172 181 185 202 226 230 237 239 242 251 1792 1905
   3051)
  () -1 0)
 (2031 uniq "( pen ua ; move 4 , ul / 3 ; move ua , 2 ) "
  (28 724 1688 1750 1795 1803 1823 1829 1830 1840 1858 1882 1886 1916 1929
   1939 1946 1952 1963 2013 2036 2060 2064 2067 2072 2096 2146 2149 2163 2190
   2200 2206 2207 2208 2210 2216 2222 2228 2236 2244 2260 2261 2298 2316 2332
   2334 2364 2365 2369 2389 2393 2401 2402 2427 2429 2462 2480 2482 2500 2505
   2508 2535 2538 2557 2583 2593 2620 2622 2636 2638 2673 2704 2721 2726 2744
   2750 2763 2801 2819 2820 2826 2872 2885 2889 2894 2907 2939 2940 2949 2976
   3062 3072)
  () -1 0)
 (2032 equiv "( move ua , ul ; pen ua ; move 2 , ul ) "
  (283 285 288 308 328 329 334 335 358 362 654 994 1672 1681 1725 1727 1745
   1748 1759 1783 1786 1825 1836 1855 1856 1913 1923 1932 1934 1945 1950 1971
   1974 1980 1991 1997 2003 2023 2048 2079 2097 2132 2134 2154 2202 2217 2220
   2230 2268 2281 2293 2317 2320 2324 2327 2338 2344 2349 2355 2356 2423 2426
   2430 2441 2496 2497 2499 2577 2604 2649 2679 2699 2703 2706 2707 2708 2710
   2731 2759 2776 2802 2806 2810 2833 2858 2860 2876 2902 3022 3078)
  () 2293 0)
 (2033 uniq "( pen ua ; move ua , 0 - 3 ; move 3 , ul ) "
  (584 641 1655 1688 1713 1763 1803 1859 1866 2002 2020 2109 2128 2131 2145
   2216 2330 2427 2500 2523 2642 2646 2728 2745 2757 2765 2794 2872 2889 2973
   3037)
  () -1 0)
 (2034 uniq "( pen ua ; move ua , ul / 2 ; move 5 , ul ) "
  (641 724 1655 1671 1687 1688 1694 1713 1726 1746 1750 1761 1763 1791 1827
   1832 1833 1859 1867 1904 1911 1933 1978 2036 2060 2067 2072 2083 2087 2109
   2115 2121 2123 2163 2187 2190 2197 2200 2207 2210 2222 2227 2228 2236 2252
   2261 2273 2330 2334 2335 2337 2345 2364 2380 2388 2393 2401 2402 2404 2422
   2424 2427 2461 2473 2480 2489 2500 2502 2508 2523 2562 2583 2593 2620 2622
   2636 2681 2688 2689 2693 2697 2718 2721 2732 2745 2751 2758 2812 2819 2820
   2821 2826 2827 2869 2872 2889 2901 2907 2921 2960 2969 2973 2986 2998 3037
   3057 3069 3077)
  () -1 0)
 (2035 uniq "( pen ua ; move 3 , 4 ; move ua , ul - 2 ) "
  (76 98 455 669 1658 1699 1735 1765 1837 2042 2092 2112 2137 2160 2328 2398
   2540 2656 3090)
  () -1 0)
 (2036 uniq "( pen ua ; move ua , ul / ua ; move 5 , 2 ) "
  (114 641 724 1671 1688 1726 1750 1803 1823 1867 1869 1882 1886 1916 1933
   1946 1998 2013 2031 2034 2039 2060 2064 2067 2096 2115 2121 2149 2163 2175
   2187 2190 2207 2210 2219 2222 2228 2244 2330 2364 2369 2376 2380 2388 2393
   2401 2404 2424 2427 2502 2508 2523 2535 2538 2562 2583 2593 2620 2622 2638
   2673 2676 2812 2826 2827 2872 2885 2889 2894 2935 2939 2940 2949 2969 3003
   3037 3067)
  () -1 0)
 (2037 equiv "( pen ua ; move ua + ul , 4 ; move 2 , ul ) "
  (542 678 685 1657 1680 1687 1697 1702 1703 1749 1769 1770 1791 1833 1852
   1881 1897 1909 1911 1915 1919 1955 2067 2075 2083 2099 2123 2159 2224 2242
   2252 2274 2300 2321 2331 2345 2380 2417 2424 2454 2461 2472 2490 2549 2583
   2616 2648 2660 2683 2697 2718 2746 2791 2847 2907 2915 2925 2952 2982 3019
   3037 3040 3055 3088)
  () 2331 0)
 (2038 uniq "( pen ua ; move ua , 8 ; move ul , ul ) "
  (22 293 319 320 322 325 326 327 331 333 338 340 348 351 356 364 385 1656
   1657 1664 1673 1674 1675 1683 1685 1705 1707 1720 1722 1728 1729 1731 1735
   1760 1772 1776 1778 1779 1784 1789 1798 1800 1805 1809 1812 1813 1816 1828
   1860 1864 1865 1876 1879 1928 1959 1967 1972 1976 1979 1996 2009 2011 2050
   2058 2082 2086 2093 2100 2106 2111 2114 2155 2158 2166 2177 2180 2181 2182
   2185 2189 2209 2231 2301 2313 2322 2347 2357 2372 2391 2412 2443 2448 2458
   2488 2506 2515 2519 2542 2567 2598 2602 2619 2623 2668 2670 2677 2690 2722
   2730 2741 2756 2777 2782 2793 2798 2800 2825 2835 2845 2848 2865 2880 2911
   2922 2943 2991 3014 3033 3071 3075 3091)
  () -1 0)
 (2039 equiv "( pen ua ; move ua , ul - ua ; move ua , 3 ) "
  (86 101 351 724 1010 1706 1713 1750 1803 1834 1867 1916 1946 2036 2096 2145
   2222 2228 2330 2364 2380 2562 2583 2593 2620 2622 2673 2757 2826 2885 2889
   2969)
  () 2622 0)
 (2040 uniq "( pen 4 ; move ul + ua , 7 ; move 2 , ul ) "
  (1852 1915 1987 2165 2176 2295 2331 2387 2433 2439 2472 2510 2601 2613 2658
   2682 2733 2746 2816 2982 3017 3019 3076)
  () -1 1)
 (2041 uniq "( pen 3 ; move ul , 3 / ua ; move ua , 2 ) "
  (105 653 724 1690 1795 1926 1960 1963 2013 2096 2104 2161 2175 2244 2358
   2369 2370 2385 2389 2429 2462 2482 2498 2597 2630 2638 2667 2686 2884 2935
   2970 2976 2977)
  () -1 0)
 (2042 uniq "( pen 3 ; move 3 , 0 ; move ua , ua - 2 ) "
  (455 616 669 1658 1699 1837 1905 2035 2112 2137 2160 2201 2328 2398 2844
   3090)
  () -1 0)
 (2043 uniq "( pen ua ; move ul - 4 , 5 ; move 3 , ul ) "
  (517 670 685 1676 1680 1817 1897 1901 1927 2107 2176 2239 2241 2257 2270
   2307 2379 2433 2467 2510 2573 2614 2674 2682 2717 2733 2816 2843 2847 3038
   3074 3076)
  () -1 0)
 (2044 uniq "( pen ua ; move 3 , 7 ; move ua , 2 ) "
  (292 295 303 319 320 322 325 327 331 332 333 337 338 348 350 351 1656 1674
   1683 1691 1707 1729 1731 1735 1789 1805 1809 1828 1830 1831 1860 1864 1865
   1928 1959 1967 1972 1976 2050 2086 2093 2106 2116 2158 2180 2182 2189 2209
   2245 2301 2313 2329 2347 2357 2372 2391 2425 2428 2431 2448 2488 2515 2519
   2521 2574 2598 2602 2623 2624 2640 2643 2651 2668 2670 2722 2741 2749 2774
   2782 2787 2793 2825 2829 2853 2904 2906 2922 2927 2943 2991 3027 3053
   3091)
  () -1 1)
 (2045 uniq "( move 4 , 7 ; move ua , 2 ) "
  (24 26 27 28 29 30 31 44 45 46 47 48 49 50 52 53 54 56 57 59 84 85 86 87 88
   89 92 1650 1666 1668 1730 1929 2098 2191 2201 2400 2429 2558 2572)
  () -1 0)
 (2046 uniq "( move ua , ul ; pen ua ; move ul - 2 , 2 ) "
  (492 583 594 679 686 719 2215 2266 2292 2336 2586 2914 2956 3065) () -1 0)
 (2047 uniq "( pen 3 ; move 3 , ul ; move 3 , ul ) "
  (270 271 292 293 303 320 331 332 336 338 357 364 1683 1707 1717 1720 1728
   1731 1735 1776 1779 1798 1800 1828 1831 1860 1876 1879 1959 1976 2001 2009
   2050 2082 2086 2093 2095 2106 2111 2114 2150 2158 2166 2177 2180 2181 2182
   2209 2284 2296 2322 2325 2348 2372 2378 2425 2431 2443 2458 2515 2519 2542
   2566 2574 2575 2581 2598 2602 2609 2611 2624 2668 2722 2729 2741 2749 2756
   2771 2774 2777 2782 2845 2856 2880 2906 2911 2922 2927 2943 2987 3007 3014
   3024 3027 3033 3071)
  () -1 0)
 (2048 equiv "( move ua , ua ; pen ua ; move ua , 2 ) "
  (84 283 285 291 294 297 334 358 362 977 995 1672 1745 1748 1783 1786 1804
   1855 1856 1899 1913 1917 1923 1945 1956 1971 1974 1980 1991 1997 2003 2023
   2032 2051 2079 2097 2132 2134 2154 2156 2202 2211 2217 2253 2281 2304 2317
   2320 2327 2349 2350 2356 2371 2375 2409 2430 2441 2496 2497 2499 2560 2577
   2604 2632 2649 2675 2679 2699 2706 2707 2759 2776 2802 2806 2810 2858 2876
   2902 2919 3022)
  () 2356 4)
 (2049 uniq "( pen 4 ; move 0 - ua , 2 ; move ua , ul ) "
  (87 670 1676 1817 1861 1911 1927 2069 2070 2165 2241 2295 2406 2439 2573
   2613 2816 2852 2945 3055 3074)
  () -1 0)
 (2050 uniq "( pen ua ; move 3 , ua ; move 8 , ul ) "
  (22 292 295 303 319 320 322 327 331 333 336 338 348 351 356 364 385 1657
   1673 1674 1675 1683 1685 1705 1717 1722 1728 1729 1731 1735 1772 1776 1778
   1779 1784 1798 1800 1805 1809 1812 1813 1816 1828 1831 1860 1864 1865 1876
   1959 1972 1976 1979 1996 2038 2044 2047 2058 2086 2093 2100 2106 2116 2150
   2155 2158 2166 2177 2180 2182 2185 2209 2231 2245 2284 2301 2313 2347 2357
   2372 2391 2412 2425 2428 2431 2448 2458 2506 2515 2519 2521 2566 2574 2575
   2581 2598 2602 2619 2623 2624 2668 2690 2722 2741 2749 2774 2782 2787 2793
   2800 2825 2853 2870 2911 2922 2927 2943 2987 3024 3027 3033 3053 3075
   3091)
  () -1 0)
 (2051 uniq "( move ua , ua - pen 3 ; move ua , 4 ) "
  (88 1668 1804 1820 1917 1991 2048 2097 2320 2327 2349 2350 2375 2409 2649
   2675 2679 2802 2876)
  () -1 0)
 (2052 uniq "( pen 3 ; move 4 + 3 , 2 / ua ; move 3 , 4 ) "
  (853 1851 1868 1875 1912 1921 1944 1953 1989 1999 2014 2053 2054 2078 2081
   2085 2110 2125 2127 2142 2167 2169 2205 2229 2243 2275 2277 2286 2302 2323
   2368 2381 2383 2444 2494 2503 2513 2525 2526 2534 2582 2713 2789 2804 2811
   2877 2899 2905 2916 2923 2988 3059 3089)
  () -1 0)
 (2053 uniq "( pen 3 ; move 4 + 2 , 3 / ua ; move 4 , 4 ) "
  (853 1851 1868 1875 1912 1921 1944 1953 1989 1999 2014 2052 2054 2078 2081
   2110 2125 2127 2142 2167 2169 2205 2229 2243 2275 2277 2286 2302 2323 2368
   2494 2503 2525 2534 2582 2633 2784 2804 2811 2868 2877 2899 2905 2916 2923
   2988 3059 3089)
  () -1 0)
 (2054 uniq "( pen 3 ; move 4 + 0 , 0 / ua ; move 3 , 4 ) "
  (853 1851 1868 1875 1912 1921 1944 1953 1989 1999 2014 2052 2053 2078 2081
   2085 2110 2125 2127 2167 2169 2194 2205 2229 2243 2275 2277 2286 2323 2368
   2494 2503 2525 2534 2559 2582 2789 2804 2811 2868 2877 2890 2899 2905 2923
   2988 3059 3089)
  () -1 0)
 (2055 uniq "( move 0 - ua , ul ; pen 2 ; move 3 - ua , ul ) "
  (918 1682 1712 1822 1962 2144 2188 2342 2457 2511 2563 2783 2854 2892 3002
   3047 3080)
  () -1 0)
 (2056 uniq "( pen ua * 3 ; move 2 - ua , 2 ; move ua , ul ) "
  (989 1674 1972 2729) (989) -1 0)
 (2057 uniq "( pen 4 ; move ua , ua - ul ; move ul , ul + 4 ) "
  (1049 1720 2294) () -1 0)
 (2058 equiv "( pen ua ; move ua , 2 ; move 2 , ul ) "
  (22 269 293 296 320 322 325 326 327 331 333 338 348 351 356 364 385 1656
   1657 1664 1673 1674 1675 1683 1685 1705 1707 1720 1722 1728 1729 1731 1735
   1760 1763 1772 1776 1778 1779 1784 1789 1791 1798 1800 1805 1809 1812 1813
   1816 1828 1833 1860 1864 1865 1876 1879 1928 1959 1967 1972 1976 1979 1993
   1996 2009 2038 2050 2082 2086 2093 2100 2106 2111 2114 2155 2158 2166 2177
   2180 2181 2182 2185 2189 2209 2231 2245 2296 2313 2357 2372 2378 2412 2443
   2448 2458 2473 2488 2506 2515 2519 2542 2566 2567 2574 2581 2598 2602 2619
   2668 2670 2677 2690 2715 2722 2729 2730 2741 2756 2777 2782 2787 2793 2798
   2800 2816 2825 2835 2845 2848 2865 2880 2911 2922 2943 2987 2991 3007 3014
   3033 3071 3075 3091)
  () 2730 0)
 (2059 uniq "( pen 3 ; move ua , ua - 2 ; move ul , ul ) "
  (626 1671 1746 1761 1763 1827 1832 1859 1904 1940 1970 2017 2020 2027 2109
   2214 2315 2473 2646 2662 2728 2832 3069)
  () -1 0)
 (2060 uniq "( pen ua ; move 4 , ul / 2 ; move 2 , 2 ) "
  (430 641 1671 1726 1750 1823 1858 1869 1882 1929 1963 1990 2031 2034 2036
   2064 2067 2096 2115 2121 2149 2163 2190 2200 2206 2207 2208 2210 2219 2222
   2227 2228 2260 2261 2273 2290 2316 2334 2364 2369 2380 2388 2393 2401 2424
   2429 2446 2462 2473 2480 2482 2508 2535 2538 2562 2593 2620 2636 2638 2689
   2693 2704 2726 2750 2758 2773 2812 2817 2819 2821 2869 2894 2907 2939 2949
   2969 2986 2998 3028)
  () -1 0)
 (2061 uniq "( move ua , 0 ; move ul , ul ; move ua , 3 ) "
  (45 487 524 528 533 602 603 662 665 1818 2105 2113 2269 2363 2463 2476 2481
   2492 2528 2564 2768 2815 2857 2881 2883 2910 2936 2950 2963 2972 2993 3018
   3081)
  () -1 0)
 (2062 uniq "( move 0 , ul / ua ; move ua , ul ; move ul - ua , ul ) "
  (1361 1651) () -1 0)
 (2063 uniq "( pen 4 ; move 3 , ul ; move 2 - ua , 5 ) "
  (498 1853 2018 2164 2551 2965 3001) () -1 0)
 (2064 uniq "( pen ua ; move 3 , ul / 3 ; move ua , 2 ) "
  (724 1688 1750 1803 1823 1829 1840 1882 1886 1916 1939 1946 1952 1960 1963
   1990 2013 2031 2036 2060 2067 2072 2096 2146 2149 2163 2187 2190 2206 2207
   2208 2210 2219 2222 2228 2236 2244 2261 2285 2298 2332 2334 2364 2365 2376
   2388 2393 2401 2402 2404 2427 2429 2431 2462 2464 2498 2500 2505 2508 2535
   2538 2557 2583 2593 2597 2617 2620 2622 2647 2673 2688 2693 2704 2721 2744
   2750 2761 2763 2801 2820 2822 2826 2828 2872 2885 2889 2894 2940 2949 2960
   2976 2986 3028 3062)
  () -1 0)
 (2065 uniq "( pen 3 + ul ; move ua / 4 , ua + ua ; move ua , ul + ua ) "
  (1551) () -1 0)
 (2066 uniq "( pen 4 ; move 2 , ul / 4 ; move ua , ul ) "
  (512 724 1882 1958 2123 2146 2197 2228 2236 2261 2279 2297 2298 2334 2337
   2402 2404 2424 2462 2500 2502 2505 2583 2617 2625 2636 2650 2673 2721 2726
   2732 2742 2780 2801 2819 2820 2826 2828 2889 2907 2909 2924 3037 3057
   3087)
  () -1 0)
 (2067 uniq "( pen ua ; move ua , ul / 4 ; move 2 , 2 ) "
  (542 641 656 1671 1688 1694 1726 1750 1803 1823 1867 1869 1882 1886 1916
   1933 1946 1978 1998 2031 2034 2036 2037 2060 2064 2083 2096 2115 2121 2123
   2149 2163 2190 2200 2207 2210 2219 2222 2227 2228 2252 2260 2273 2334 2337
   2364 2365 2380 2393 2401 2402 2404 2424 2427 2462 2473 2489 2505 2508 2523
   2535 2538 2562 2583 2593 2620 2622 2636 2650 2676 2681 2693 2697 2745 2773
   2801 2812 2817 2821 2826 2832 2872 2874 2885 2889 2894 2907 2940 2949 2969
   2976 3003 3028 3037 3042 3043 3067)
  () -1 0)
 (2068 uniq "( move ua , 3 / 2 ; move ua , 2 ; move 2 + ul , 4 ) "
  (1101 2694 2997) () -1 0)
 (2069 uniq "( pen 4 ; move 0 - ua , 0 ; move ua , ul ) "
  (670 1653 1676 1861 1927 2049 2070 2107 2165 2176 2241 2242 2295 2307 2406
   2439 2573 2613 2674 2843 2852 2945 3005 3055)
  () -1 0)
 (2070 uniq "( pen 4 ; move 0 - ua , 0 ; move ua , ul ) "
  (670 1653 1676 1861 1927 2049 2069 2107 2165 2176 2241 2242 2295 2307 2406
   2439 2573 2613 2674 2843 2852 2945 3005 3055)
  () -1 1)
 (2071 uniq "( move 7 / ul , 3 ; pen ua + ul ; move 2 , ul ) " (925) () -1 0)
 (2072 equiv "( pen ua ; move 3 , ul / 3 ; move 4 , ul ) "
  (641 653 656 724 1655 1662 1671 1688 1703 1713 1716 1726 1752 1823 1827
   1832 1867 1958 1978 2031 2034 2064 2075 2087 2106 2149 2187 2204 2210 2216
   2219 2236 2261 2298 2332 2334 2335 2337 2364 2376 2380 2388 2393 2402 2404
   2422 2424 2427 2474 2480 2500 2502 2508 2523 2535 2538 2583 2593 2617 2625
   2636 2647 2681 2688 2693 2721 2761 2763 2765 2794 2820 2826 2869 2872 2879
   2882 2889 2901 2907 2917 2921 2941 2960 2973 2986 2998 3034 3037 3040 3042
   3062 3068 3087)
  () 3034 0)
 (2073 uniq "( move ua , 3 / 4 ; pen ua + ul ; move ul , ul ) "
  (1679 1937 2168) () -1 0)
 (2074 uniq "( pen ua ; move 2 , 7 / ul ; move ua , 2 / 4 ) "
  (849 1773 1774 2021 2267 2311 2451 2904) () -1 1)
 (2075 uniq "( pen ua ; move ua - ul , 3 ; move 4 , ul ) "
  (106 497 542 685 1655 1680 1687 1688 1697 1703 1713 1726 1738 1749 1769
   1791 1833 1867 1881 1897 1901 1911 1919 2037 2072 2099 2216 2224 2236 2241
   2242 2274 2300 2321 2345 2352 2393 2417 2427 2433 2447 2461 2467 2483 2490
   2614 2616 2641 2660 2674 2718 2733 2765 2791 2794 2847 2872 2889 2925 2946
   2952 2973 2979 3040 3088)
  () -1 0)
 (2076 uniq "( move ua + ul , ul ; move ua , 4 * 2 ) "
  (85 89 193 395 421 434 470) () -1 0)
 (2077 uniq "( pen 9 + ul ; move ua / 0 , ul ; move 0 - 2 , 2 ) "
  (1115 1677 1751 2333 2456) () -1 0)
 (2078 equiv "( pen 3 ; move 4 + 0 , 4 / ua ; move 3 , 4 ) "
  (853 1851 1868 1875 1912 1921 1944 1953 1989 1999 2014 2052 2053 2054 2081
   2085 2110 2125 2127 2167 2169 2194 2205 2229 2243 2275 2277 2286 2323 2368
   2494 2503 2525 2534 2559 2582 2789 2804 2811 2871 2877 2899 2905 2923 2988
   3059 3089)
  () 2871 0)
 (2079 equiv "( move 4 , ua ; pen ua ; move 2 , 4 ) "
  (231 283 285 294 329 335 358 362 1672 1681 1701 1725 1745 1783 1804 1836
   1855 1899 1923 1991 1997 2023 2032 2048 2134 2230 2288 2349 2355 2423 2496
   2497 2499 2560 2577 2649 2679 2706 2710 2731 2759 2802 2806 2833 2983 3011
   3022 3061 3078 3084)
  () 2710 1)
 (2080 uniq "( pen ua * ul ; move 4 , ul ; move 2 , 4 ) "
  (504 1983 2028 2084 2199 2665 2788) () -1 0)
 (2081 uniq "( pen 3 ; move 4 + 5 , 2 / ua ; move ua , 4 ) "
  (853 1851 1868 1875 1912 1921 1944 1953 1989 1999 2014 2052 2053 2054 2078
   2085 2110 2125 2127 2142 2161 2167 2169 2194 2205 2229 2275 2277 2286 2323
   2368 2381 2383 2444 2494 2503 2513 2525 2526 2534 2559 2582 2789 2804 2811
   2877 2890 2899 2905 2916 2923 2988 3009 3059 3089)
  () -1 0)
 (2082 uniq "( pen 3 ; move ua , ul ; move 4 , ul ) "
  (93 268 269 271 292 293 296 303 331 332 336 356 357 361 364 385 1656 1657
   1664 1673 1675 1685 1691 1707 1717 1720 1722 1728 1729 1731 1733 1760 1772
   1776 1778 1779 1788 1789 1798 1800 1812 1813 1816 1831 1832 1876 1879 1925
   1967 1972 1996 2001 2009 2038 2047 2058 2093 2095 2100 2106 2111 2114 2150
   2158 2166 2181 2182 2231 2284 2296 2313 2322 2325 2329 2348 2378 2412 2443
   2458 2488 2506 2515 2542 2566 2567 2574 2575 2581 2609 2611 2643 2668 2729
   2730 2741 2749 2756 2774 2777 2782 2793 2798 2835 2845 2848 2856 2865 2880
   2921 2987 3007 3014 3024 3033 3071 3075)
  (1746) -1 1)
 (2083 uniq "( pen ua ; move ua , 3 / 4 ; move 2 , ul ) "
  (641 653 1655 1657 1671 1688 1694 1726 1752 1761 1763 1816 1827 1845 1866
   1867 1904 1933 1978 2020 2034 2037 2067 2087 2123 2207 2227 2228 2252 2279
   2297 2315 2334 2337 2380 2402 2404 2422 2424 2427 2473 2489 2508 2523 2583
   2636 2647 2650 2681 2689 2693 2697 2728 2742 2745 2751 2761 2812 2817 2821
   2826 2827 2872 2874 2889 2907 2909 2960 2973 2976 3037)
  () -1 0)
 (2084 uniq "( pen ua * ul ; move 4 , 0 ; move 2 , 2 ) "
  (630 1744 1757 1873 1983 2012 2028 2080 2183 2199 2537 2665 2788) () -1 0)
 (2085 uniq "( pen 3 ; move 3 + 0 , 2 / ua ; move 3 , 4 ) "
  (1851 1868 1875 1912 1921 1944 1953 1989 1999 2014 2052 2054 2078 2081 2110
   2125 2127 2167 2205 2243 2275 2277 2323 2368 2444 2494 2525 2534 2582 2789
   2811 2899 2923 2988 3089)
  () -1 0)
 (2086 uniq "( pen ua ; move 3 , 0 ; move 9 , ul ) "
  (270 271 292 293 303 319 320 327 331 333 338 348 356 364 385 1657 1673 1674
   1675 1683 1685 1722 1729 1731 1735 1772 1776 1778 1779 1784 1798 1800 1805
   1809 1812 1813 1816 1828 1831 1860 1865 1876 1928 1959 1972 1976 1979 1996
   2038 2044 2047 2050 2058 2093 2106 2150 2158 2166 2177 2180 2182 2185 2209
   2231 2245 2301 2313 2322 2325 2347 2372 2391 2412 2425 2428 2431 2448 2458
   2488 2506 2515 2519 2521 2542 2566 2567 2574 2581 2598 2602 2619 2623 2668
   2670 2690 2722 2741 2749 2774 2782 2787 2793 2800 2825 2829 2853 2911 2922
   2927 2943 2987 3024 3027 3033 3053 3075 3091)
  () -1 1)
 (2087 uniq "( pen ua ; move ua , ua / 7 ; move 4 , ul ) "
  (91 356 641 653 1655 1671 1688 1694 1726 1729 1733 1746 1752 1827 1832 1845
   1867 1904 1933 1978 2020 2034 2072 2083 2109 2121 2163 2187 2204 2224 2236
   2252 2335 2337 2364 2380 2393 2422 2424 2427 2473 2474 2502 2523 2583 2620
   2646 2697 2728 2733 2745 2751 2761 2765 2826 2827 2869 2872 2889 2909 2921
   2925 2973 2986 3034 3037 3067)
  () -1 0)
 (2088 uniq "( move 3 , ua - ul ; move 2 , 4 ; move ua , 2 * ua ) "
  (1166 1826 2120 2764) () -1 0)
 (2089 uniq "( move 4 , ul - 3 ; pen 3 ; move ua , 2 ) "
  (28 511 1806 2516 2603 2632 2719 2796 3020 3032) () -1 0)
 (2090 uniq "( move ua , ua ; move 3 , 7 ; move 4 , ul ) "
  (91 489 524 534 604 665 1799 1957 2157 2492 2896 2950) () -1 0)
 (2091 uniq "( move ua , 3 ; move ua + 2 , 4 ) "
  (142 146 163 166 169 173 189 190 194 199 202 210 236 1668 1670 1708 1719
   1794 1838 1848 1889 1954 1969 2024 2390 2396 2470 2553 2579 2654 2752)
  () -1 0)
 (2092 uniq "( pen ua ; move 3 , 3 ; move ua , 2 * 2 ) "
  (418 1658 1765 2007 2015 2035 2137 2353 2398 2438 2485 2540 2653 3070) ()
  -1 0)
 (2093 equiv "( pen ua ; move 3 , ua ; move 4 , ul ) "
  (22 271 292 293 295 303 319 320 322 327 331 333 336 338 348 351 356 364 385
   1133 1657 1673 1674 1675 1683 1685 1705 1717 1722 1728 1729 1731 1735 1772
   1776 1778 1779 1784 1789 1798 1800 1805 1809 1812 1813 1816 1828 1831 1860
   1864 1865 1876 1959 1967 1972 1976 1979 1993 1996 2009 2038 2044 2047 2050
   2058 2082 2086 2100 2106 2116 2150 2155 2158 2166 2177 2180 2182 2185 2187
   2209 2231 2245 2284 2301 2313 2325 2329 2347 2348 2357 2372 2391 2412 2425
   2428 2431 2443 2448 2458 2488 2506 2515 2519 2521 2566 2574 2575 2581 2598
   2602 2619 2623 2624 2668 2690 2722 2741 2749 2774 2782 2787 2793 2798 2800
   2825 2835 2845 2853 2865 2870 2911 2922 2927 2943 2987 3014 3024 3027 3033
   3034 3053 3075 3091)
  () 3024 0)
 (2094 uniq "( pen ua ; move 4 , 0 ; move ua + ul , 4 ) "
  (646 1663 1740 2382 2514 2587) () -1 0)
 (2095 uniq "( pen 2 ; move ua , ul ; move 3 , 2 ) "
  (269 295 316 322 332 350 361 1656 1664 1691 1707 1720 1776 1779 1788 1789
   1798 1800 1830 1864 1925 1928 1967 2009 2011 2047 2082 2111 2114 2155 2296
   2329 2357 2431 2488 2542 2609 2611 2624 2643 2670 2741 2756 2777 2798 2856
   2904 2927 2991 3007 3027 3071)
  () -1 0)
 (2096 uniq "( pen ua ; move 4 , ul / ua ; move ua , 2 ) "
  (53 105 724 1750 1795 1803 1823 1829 1830 1840 1858 1867 1882 1886 1916
   1929 1939 1946 1952 1960 1963 1998 2013 2031 2036 2039 2041 2060 2064 2067
   2146 2149 2161 2163 2187 2190 2200 2206 2207 2208 2210 2219 2222 2228 2244
   2260 2261 2298 2316 2332 2364 2365 2369 2370 2376 2380 2389 2393 2401 2402
   2429 2462 2480 2482 2502 2505 2535 2538 2557 2583 2593 2620 2622 2636 2638
   2673 2676 2686 2704 2721 2726 2744 2750 2801 2819 2820 2826 2884 2885 2889
   2894 2907 2935 2939 2940 2949 2970 2976 3067 3072)
  () -1 0)
 (2097 uniq "( move ua , ul ; pen 3 ; move ua , 2 ) "
  (48 85 288 291 297 362 563 1759 1786 1804 1855 1917 1964 1971 1974 1980
   1991 1997 2025 2032 2048 2051 2132 2202 2253 2281 2293 2304 2312 2317 2320
   2327 2349 2350 2356 2375 2386 2409 2430 2441 2496 2497 2499 2604 2649 2675
   2706 2707 2776 2796 2802 2806 2858 2902 2919)
  () -1 0)
 (2098 uniq "( move ua , 2 ; move 5 , 2 ) "
  (24 25 26 27 28 29 30 44 45 46 47 48 50 51 52 53 54 55 56 57 58 60 84 85 86
   87 88 89 90 91 93 1650 1666 1668 1730 2045 2191 2201 2400 2558)
  (141) -1 0)
 (2099 uniq "( pen ua ; move ua + ul , ul ; move 4 , 3 ) "
  (97 582 678 1703 1706 1738 1770 1833 1881 1896 1897 1931 1955 2037 2075
   2103 2159 2173 2224 2274 2321 2345 2417 2447 2454 2461 2490 2549 2616 2637
   2641 2648 2718 2915 2925 2946 2952 2979 3040 3088)
  () -1 0)
 (2100 uniq "( pen ua ; move ua , ua ; move 4 , 9 ) "
  (268 269 293 295 296 316 319 322 325 326 350 351 356 385 1656 1657 1664
   1667 1673 1675 1685 1705 1707 1717 1722 1728 1729 1772 1776 1778 1779 1784
   1788 1789 1798 1800 1805 1812 1813 1816 1864 1876 1928 1959 1967 1972 1993
   1996 2009 2011 2038 2050 2058 2082 2093 2106 2111 2116 2155 2158 2182 2189
   2231 2245 2284 2301 2313 2329 2357 2412 2428 2443 2488 2506 2515 2521 2575
   2598 2609 2611 2643 2668 2670 2690 2749 2782 2793 2798 2835 2845 2853 2865
   2991 3014 3027 3033 3053 3075)
  () -1 0)
 (2101 uniq "( move 3 , ul / 2 ; pen ua + ul ; move ua , ul ) "
  (1053 1679 1878 1937 1980 2168 2193 2259 2395 2669 2803 2809 2810) () -1 0)
 (2102 uniq "( move 4 , ul ; move ul , 3 ; move ua , 2 ) "
  (28 450 487 523 1711 1818 2105 2256 2269 2363 2399 2463 2528 2564 2570 2572
   2588 2815 2883 2912 2972 3004)
  () -1 0)
 (2103 uniq "( pen ua ; move 3 + ul , ul ; move 4 , 2 ) "
  (68 543 582 678 1703 1738 1770 1823 1896 1931 1955 2099 2108 2159 2173 2274
   2321 2345 2417 2447 2454 2490 2549 2637 2641 2648 2915 2925 2946 2952 2979
   3040 3058)
  () -1 0)
 (2104 equiv "( pen 9 ; move ul , 3 / ua ; move 4 , ul ) "
  (653 724 1690 1752 1845 1867 1926 1958 2013 2041 2187 2370 2422 2502 2630
   2751 2884 2935 2948 2977 3034)
  () 2630 0)
 (2105 uniq "( move ua , 4 ; move ul , 2 ; move ua , 2 ) "
  (85 486 523 601 602 608 662 1650 1797 1818 2061 2102 2113 2136 2269 2363
   2476 2527 2528 2564 2570 2815 2857 2881 2883 2910 2936 3081)
  () -1 0)
 (2106 uniq "( pen ua ; move 3 , ul ; move 4 , ul ) "
  (271 292 293 303 319 320 327 331 333 338 348 356 364 385 935 1656 1657 1664
   1673 1674 1675 1683 1685 1703 1707 1717 1720 1722 1729 1731 1735 1771 1772
   1776 1778 1779 1784 1789 1798 1800 1805 1809 1812 1813 1816 1828 1830 1831
   1860 1865 1876 1907 1959 1967 1972 1976 1979 1993 1996 2009 2038 2044 2047
   2050 2058 2072 2082 2086 2093 2100 2111 2114 2116 2150 2158 2166 2177 2180
   2182 2185 2187 2209 2231 2245 2284 2301 2313 2325 2329 2347 2348 2372 2391
   2412 2425 2428 2431 2443 2448 2458 2488 2506 2515 2519 2521 2566 2574 2575
   2581 2598 2602 2611 2619 2623 2668 2690 2722 2741 2749 2756 2774 2782 2787
   2793 2798 2800 2825 2835 2845 2853 2856 2865 2904 2906 2911 2922 2927 2943
   2986 2987 3014 3024 3027 3033 3053 3071 3075 3091)
  (1771 1849 1907) -1 4)
 (2107 uniq "( pen ua ; move ul - ua , 0 ; move 7 , ul ) "
  (670 1676 1687 1817 1852 1927 1987 2043 2069 2070 2165 2176 2239 2241 2242
   2257 2270 2295 2307 2331 2379 2387 2406 2433 2453 2467 2510 2548 2573 2601
   2614 2658 2663 2674 2682 2705 2717 2727 2733 2746 2816 2837 2843 2847 2945
   2967 2982 2992 3005 3017 3038 3055 3074 3076)
  () -1 0)
 (2108 equiv "( pen ua ; move 3 + 0 , ul ; move ua , 4 ) "
  (582 1703 1770 1896 1931 2103 2143 2159 2425 2454 2549 2637 2915 2952 3058)
  () 2906 0)
 (2109 equiv "( pen ua ; move ua , ua - 2 ; move ul , ul ) "
  (112 385 626 641 1671 1688 1694 1713 1726 1761 1763 1827 1859 1866 1904
   1940 1970 2017 2020 2027 2033 2034 2059 2087 2145 2214 2252 2263 2330 2335
   2401 2473 2562 2642 2646 2728 2765 2827 2942 2969 2973 2998 3017)
  () 2214 0)
 (2110 uniq "( pen 3 ; move 4 + ul , 2 / ua ; move 7 , 4 ) "
  (853 1851 1868 1875 1912 1921 1944 1953 1989 1999 2014 2052 2053 2054 2078
   2081 2085 2125 2127 2142 2167 2169 2205 2229 2275 2277 2286 2323 2368 2381
   2444 2494 2503 2513 2525 2526 2534 2582 2626 2784 2789 2804 2811 2877 2890
   2898 2899 2905 2908 2916 2923 2988 3059 3089)
  () -1 0)
 (2111 uniq "( pen ua ; move ua , ul ; move 3 , 5 ) "
  (22 295 322 325 326 331 351 356 361 364 385 1656 1657 1664 1675 1685 1691
   1705 1707 1720 1722 1729 1731 1776 1778 1779 1789 1798 1800 1812 1813 1816
   1830 1864 1876 1925 1928 1967 1972 1996 2009 2038 2047 2058 2082 2095 2100
   2106 2114 2155 2166 2177 2189 2296 2329 2357 2425 2431 2458 2488 2542 2609
   2611 2670 2677 2715 2722 2741 2749 2756 2777 2793 2835 2904 2911 2927 2943
   2991 3007 3027 3033 3071)
  () -1 0)
 (2112 uniq "( pen ua ; move ua , 0 ; move ua , ua - 2 ) "
  (44 537 616 669 1362 1658 1659 1699 1837 2035 2042 2137 2160 2223 2272 2328
   2398 2546 2844 3070 3090)
  (669) -1 0)
 (2113 uniq "( move ua , 4 ; move 4 , 2 ; move ua , 3 ) "
  (486 534 608 1797 1818 1846 2061 2105 2136 2269 2481 2527 2570 2815 2910
   2936)
  () -1 0)
 (2114 uniq "( pen 2 ; move ua , ul ; move 3 , ul ) "
  (270 293 316 322 331 356 361 364 385 1656 1657 1664 1675 1685 1691 1707
   1720 1722 1728 1729 1731 1760 1776 1778 1779 1793 1798 1800 1812 1813 1816
   1876 1879 1925 1967 1972 1996 2009 2038 2047 2058 2082 2095 2106 2111 2150
   2155 2166 2177 2181 2296 2443 2458 2542 2567 2609 2611 2670 2677 2722 2730
   2741 2756 2777 2793 2798 2845 2848 2856 2865 2880 2911 2927 2943 2959 2991
   3007 3014 3033 3071)
  () -1 1)
 (2115 uniq "( pen 4 ; move ua , ul / 2 ; move 4 , 2 ) "
  (23 27 54 269 430 497 629 641 1671 1726 1746 1750 1827 1832 1845 1867 1929
   1963 2027 2034 2036 2060 2067 2121 2146 2163 2190 2207 2210 2222 2227 2228
   2273 2337 2364 2393 2401 2482 2505 2535 2562 2593 2620 2676 2704 2726 2750
   2751 2801 2812 2821 2869 2872 2901 2921 2969 2986 3067 3069)
  () -1 0)
 (2116 uniq "( pen ua ; move 4 , ua ; move 4 , 2 ) "
  (17 20 269 271 295 319 322 333 336 350 351 356 364 385 1673 1685 1705 1707
   1717 1722 1729 1772 1778 1779 1784 1788 1789 1805 1813 1830 1864 1876 1928
   1959 1967 1993 2011 2044 2050 2093 2100 2106 2155 2158 2166 2182 2185 2231
   2245 2284 2301 2313 2329 2347 2357 2391 2412 2428 2431 2488 2506 2515 2521
   2575 2598 2611 2619 2623 2624 2643 2651 2668 2670 2690 2749 2782 2787 2800
   2825 2829 2835 2853 2870 2904 2991 3027 3033 3053 3075 3091)
  () -1 0)
 (2117 uniq "( pen ua - 0 ; move 4 , 4 ; move 4 / 2 , 4 ) "
  (855 1968 2005 2913) () -1 0)
 (2118 uniq "( move ua , 9 / 4 ; pen ua ; move 2 , ua + ul ) " (929 1745) ()
  -1 0)
 (2119 uniq "( ( move 4 , 4 ; 3 ) ; pen 2 ; move 3 , ul ) " (1009) (1009) -1
  0)
 (2120 uniq "( move 3 , ua - ul ; move 2 , 4 ; move ua , 2 ) "
  (896 2088 2346 2996) () -1 0)
 (2121 equiv "( pen ua ; move ua , 0 / 2 ; move 4 , 2 ) "
  (27 641 1655 1671 1726 1746 1750 1763 1827 1832 1859 1867 1886 1904 1930
   1978 1990 1998 2034 2036 2060 2067 2087 2115 2163 2190 2206 2207 2210 2222
   2228 2244 2260 2316 2326 2335 2364 2393 2401 2422 2473 2488 2535 2562 2593
   2620 2642 2676 2751 2757 2812 2869 2872 2935 2940 2969 2973 2986 3067)
  () 2488 1)
 (2122 uniq "( move 4 + 4 , 2 ; move ua - ul , ul ) " (56 480 1693 2339) ()
  -1 0)
 (2123 uniq "( pen 3 ; move ua , ul / 4 ; move 2 , ul ) "
  (641 1671 1688 1694 1726 1733 1746 1832 1867 1926 1933 1958 1978 2034 2037
   2066 2067 2083 2181 2197 2207 2227 2228 2252 2273 2315 2334 2337 2380 2402
   2404 2424 2427 2445 2462 2473 2489 2508 2523 2583 2617 2625 2636 2650 2662
   2681 2693 2697 2745 2756 2758 2791 2817 2819 2821 2826 2832 2872 2879 2889
   2907 2921 3003 3037 3043 3057 3069)
  () -1 0)
 (2124 uniq "( move 7 , 4 ; move ua + 3 , 2 ) "
  (124 163 166 190 199 1670 1708 1838 1857 1954 2246 2390 2396 2470 2654
   2752)
  () -1 0)
 (2125 equiv "( pen 3 ; move 4 + 0 , 4 / ua ; move ua , 4 ) "
  (853 1851 1868 1875 1912 1921 1944 1953 1989 1999 2014 2052 2053 2054 2078
   2081 2085 2110 2127 2167 2169 2194 2205 2229 2243 2275 2277 2286 2323 2368
   2444 2494 2503 2525 2526 2534 2559 2582 2686 2789 2804 2811 2877 2890 2899
   2905 2923 2988 3059 3089)
  () 2686 0)
 (2126 uniq "( move ua + ul , ul ; move 2 , 3 ; move 7 , ul ) "
  (957 1721 2196 3023) () -1 0)
 (2127 equiv "( pen 3 ; move 4 + 0 , 3 / ua ; move 3 , 4 ) "
  (853 1851 1868 1875 1912 1921 1944 1953 1989 1999 2014 2052 2053 2054 2078
   2081 2085 2110 2125 2167 2169 2194 2205 2229 2243 2275 2277 2286 2302 2323
   2358 2368 2494 2503 2525 2534 2559 2582 2633 2789 2804 2811 2877 2899 2905
   2923 2988 3059 3089)
  () 2358 0)
 (2128 uniq "( pen 9 ; move ua , 0 - 3 ; move 2 , ul ) "
  (1713 1763 1859 1866 1970 2020 2033 2145 2567 2646 2681 2728 2765) 
  (1866) -1 0)
 (2129 uniq "( move ua + ul , ul ; move ul , ul - ua ; move ua + 2 , 2 ) "
  (1523 2962) () -1 0)
 (2130 uniq "( move 9 , 2 ; move ua + 2 , 4 ; move 0 , ua ) " (746) () -1 1)
 (2131 equiv "( pen ua ; move 3 , 2 - ul ; move 3 , ul ) "
  (584 1713 1716 1859 1939 2002 2020 2033 2159 2204 2330 2474 2518 2688 2741
   2745 2765 2822 2941 2942 2943 2951 3034)
  () 2741 0)
 (2132 uniq "( move ua , 2 ; pen ua ; move ul , 2 ) "
  (283 291 982 1672 1727 1745 1748 1783 1786 1855 1856 1899 1913 1917 1945
   1971 1974 1991 1997 2023 2032 2048 2097 2154 2156 2202 2215 2217 2253 2268
   2281 2304 2312 2317 2320 2338 2349 2350 2356 2409 2423 2430 2441 2496 2497
   2499 2560 2577 2604 2649 2675 2679 2706 2759 2776 2802 2806 2810 2902 2919
   2983 3022 3061 3078)
  () -1 2)
 (2133 equiv "( move ua , ul - 0 ; move ul , 2 ; move ua , ul ) "
  (965 1949 2249 2280 2351 2627 2684 2815 2888 3029) () 2815 0)
 (2134 uniq "( move 4 , ua ; pen ua ; move 2 , ul ) "
  (272 283 285 288 294 304 305 328 329 334 335 358 633 1681 1725 1727 1745
   1748 1783 1825 1836 1855 1856 1895 1899 1913 1923 1932 1934 1945 1974 1977
   1980 1997 2003 2023 2026 2032 2048 2079 2154 2202 2217 2220 2230 2268 2288
   2293 2344 2355 2367 2375 2423 2426 2496 2497 2499 2560 2577 2679 2699 2703
   2707 2710 2776 2806 2810 2833 2876 3011 3022 3061)
  (633) -1 0)
 (2135 uniq "( pen ua ; move ua , 4 ; move 4 / 2 , 4 ) "
  (855 1968 2484 2958 3083) (855 1968) -1 0)
 (2136 uniq "( move ul , 4 ; move 4 , ul ; move ua , 2 ) "
  (485 486 601 1711 1797 1818 1846 2105 2113 2256 2269 2399 2527 2528 2564
   2570 2572 2702 2857 2881 2910 2936 2972 3004 3030 3081)
  () -1 0)
 (2137 uniq "( pen ua ; move 3 , ul ; move ua , ul - 2 ) "
  (76 98 455 552 669 1658 1699 1731 1765 1837 2035 2042 2092 2112 2160 2328
   2382 2398 2431 2540 2653 3090)
  () -1 0)
 (2138 uniq "( move 4 , 5 ; pen 3 + ul ; move 2 + ul , ul ) "
  (927 1753 1874 2578 2786) () -1 0)
 (2139 uniq "( move ua , 3 + ul ; move ua + ul , 2 ) "
  (48 85 460 461 1708 2714 3056) (608 1319) -1 3)
 (2140 uniq "( move ua + 2 , 2 ; pen ua ; move 2 , ul ) "
  (639 839 2023 2238 2413 2708 2743) (839) -1 0)
 (2141 equiv "( pen ua ; move ua + 0 , ua ; move ua , ua - 4 ) "
  (1039 1046 2272) () 2272 0)
 (2142 uniq "( pen 3 ; move 4 + 3 , 2 / ua ; move 4 , ul ) "
  (853 1851 1868 1875 1912 1921 1944 1953 1989 1999 2014 2052 2053 2081 2110
   2167 2205 2229 2243 2275 2277 2286 2323 2368 2381 2444 2494 2566 2582 2626
   2713 2784 2804 2877 2908 2916)
  () -1 0)
 (2143 uniq "( pen ua ; move 3 + 0 , ua ; move ua , 4 ) "
  (582 2108 2244 2549 2637) () -1 0)
 (2144 uniq "( move 0 - ua , ul / pen 2 ; move 3 - ua , ul ) "
  (918 1682 1822 1962 2055 2188 2457 2511 2545 2589 2823 2854 2892 3002 3047
   3080)
  () -1 0)
 (2145 uniq "( pen ua ; move ua , 0 - 3 ; move ua , ul ) "
  (1655 1688 1713 1763 1803 1859 1866 1916 1936 1946 2020 2033 2039 2109 2128
   2216 2330 2427 2583 2593 2642 2646 2721 2728 2757 2765 2794 2820 2826 2872
   2885 2889 2942 2973)
  () -1 0)
 (2146 uniq "( pen 4 ; move 3 , ul / 7 ; move ua , 2 ) "
  (629 1750 1795 1823 1829 1840 1882 1929 1939 1960 1963 2031 2064 2066 2096
   2115 2149 2163 2190 2210 2228 2244 2261 2332 2365 2385 2402 2429 2459 2462
   2482 2498 2505 2538 2557 2593 2597 2617 2620 2704 2721 2726 2744 2750 2801
   2826 2828)
  () -1 0)
 (2147 uniq "( move 2 , 3 - 7 ; move 2 , 7 ; move ua , ul ) " () () -1 0)
 (2148 uniq "( move ua + ul , ul ; pen 4 ; move ua , 2 ) "
  (85 568 696 702 1650 1695 2238 2314 2755) () -1 0)
 (2149 uniq "( pen ua ; move 3 , ul / 3 ; move 3 , 2 ) "
  (641 1688 1713 1716 1750 1803 1823 1829 1840 1882 1939 1946 1990 2031 2036
   2060 2064 2067 2072 2096 2146 2163 2187 2190 2207 2210 2219 2222 2228 2236
   2244 2261 2285 2298 2332 2334 2364 2365 2376 2388 2393 2401 2402 2404 2427
   2464 2480 2500 2508 2523 2535 2538 2557 2593 2620 2636 2638 2647 2688 2693
   2704 2721 2761 2763 2801 2820 2872 2889 2894 2949 2986 3028 3037 3062)
  () -1 0)
 (2150 uniq "( pen 4 ; move 3 , ul ; move 7 , ul ) "
  (270 290 292 302 303 320 331 338 342 364 1683 1691 1720 1731 1735 1760 1779
   1798 1800 1828 1831 1860 1876 1925 1959 1976 2009 2047 2050 2082 2086 2093
   2106 2114 2158 2166 2180 2182 2209 2372 2425 2431 2458 2515 2519 2542 2566
   2574 2581 2598 2602 2668 2722 2741 2749 2756 2774 2782 2856 2906 2922 2927
   2943 2951 2987 3024 3033 3071)
  () -1 0)
 (2151 uniq "( pen ua + 2 ; move 4 , ul ; move 0 - ua , ul ) "
  (917 1862 1986 2004 2192 2607 2839 2968) (917) -1 0)
 (2152 uniq "( move ua , 0 ; pen ua ; move 3 , ua + 2 ) "
  (24 47 1880 1948 2392 2691) () -1 0)
 (2153 uniq "( move ua + 2 , 0 ; ( pen 4 ; move ua , 2 ) ) " (734 1780 1801)
  () -1 0)
 (2154 uniq "( move ua , 7 ; pen ua ; move 3 , ul ) "
  (267 272 283 288 328 329 334 335 358 1672 1681 1725 1727 1745 1748 1759
   1783 1786 1825 1836 1855 1856 1895 1899 1913 1923 1932 1934 1945 1950 1971
   1974 1980 1991 1997 2003 2023 2026 2032 2048 2132 2134 2202 2217 2220 2230
   2268 2281 2293 2320 2324 2338 2344 2349 2355 2356 2423 2426 2430 2441 2496
   2499 2577 2649 2679 2699 2703 2706 2707 2725 2736 2759 2776 2802 2806 2810
   2833 2876 2902 2983 3011)
  () -1 0)
 (2155 uniq "( pen ua ; move ua , ua ; move 3 , 4 ) "
  (295 296 316 319 322 325 326 337 350 351 356 361 385 1656 1657 1664 1675
   1685 1705 1707 1722 1728 1729 1767 1772 1776 1778 1779 1784 1789 1798 1800
   1805 1812 1813 1816 1864 1928 1959 1967 1972 1993 1996 2011 2038 2050 2058
   2093 2095 2100 2111 2114 2116 2177 2189 2245 2284 2289 2296 2301 2357 2425
   2488 2521 2542 2598 2609 2624 2640 2643 2670 2677 2690 2715 2722 2741 2749
   2771 2777 2793 2835 2853 2911 2927 2943 2991 3007 3027)
  () -1 0)
 (2156 uniq "( move ua , ua * pen ua ; move 4 , 2 ) "
  (17 1748 1783 1786 1855 1856 1913 1923 1971 2003 2048 2132 2211 2253 2281
   2356 2430 2441 2496 2560 2604 2679 2706 2806 2876 2902 3011)
  () -1 0)
 (2157 uniq "( move ua , ul ; move 2 , ul ; move 4 , ul ) "
  (55 93 489 524 533 534 605 665 1771 1818 1821 1898 2010 2090 2399 2481 2492
   2501 2702 2768 2815 2896 2912 2950 2963 2993 3018 3030)
  () -1 0)
 (2158 equiv "( pen ua ; move 3 , 0 ; move 4 , ul ) "
  (270 271 292 293 303 319 320 327 331 333 338 348 356 364 385 1119 1657 1673
   1674 1675 1683 1685 1717 1722 1729 1731 1732 1735 1772 1776 1778 1779 1784
   1788 1789 1798 1800 1805 1809 1812 1813 1816 1828 1831 1860 1865 1876 1928
   1959 1967 1972 1976 1979 1993 1996 2009 2038 2044 2047 2050 2058 2082 2086
   2093 2100 2106 2116 2150 2166 2177 2180 2182 2185 2209 2231 2245 2284 2301
   2313 2322 2325 2329 2347 2348 2372 2391 2412 2425 2428 2431 2443 2448 2458
   2488 2506 2515 2519 2521 2542 2566 2567 2574 2575 2581 2598 2602 2619 2623
   2668 2670 2690 2722 2741 2749 2774 2782 2787 2793 2798 2800 2825 2829 2835
   2845 2853 2865 2911 2922 2927 2943 2987 3014 3024 3027 3033 3053 3075
   3091)
  () 3024 1)
 (2159 uniq "( pen ua ; move 3 + ul , ul ; move 3 , ul ) "
  (517 543 575 582 584 678 685 1702 1703 1716 1770 1833 1881 1896 1897 1901
   1931 1955 2037 2099 2103 2108 2131 2173 2257 2263 2274 2321 2345 2417 2447
   2454 2490 2549 2637 2648 2658 2659 2688 2718 2741 2746 2837 2847 2915 2925
   2952 3040 3076)
  () -1 0)
 (2160 uniq "( pen ua ; move 3 , 4 ; move ua , ua - 4 ) "
  (616 669 1658 1699 1837 2035 2042 2112 2137 2272 2306 2328 2398 2656 3090)
  () -1 0)
 (2161 uniq "( pen 3 ; move 4 , 2 / ua ; move ua , 4 ) "
  (30 1715 1851 1868 1960 1963 1989 2041 2081 2096 2323 2358 2389 2429 2445
   2462 2652 2667 2673 2686 2819 2824 2871 2898 2917 2939 3003 3072)
  (1989) -1 0)
 (2162 equiv "( move ua , 0 ; pen ua + ul ; move ul + 2 , 4 ) "
  (983 2278 2517 2591 2628 2695 2737 2760 2933 2989 2999 3060) () 2759 0)
 (2163 uniq "( pen ua ; move ua , ul / 7 ; move ul , 2 ) "
  (641 678 1671 1688 1694 1726 1750 1803 1823 1867 1869 1882 1886 1904 1916
   1946 1998 2031 2034 2036 2060 2064 2067 2087 2096 2115 2121 2146 2149 2175
   2190 2207 2210 2222 2228 2316 2364 2369 2380 2393 2401 2424 2427 2429 2464
   2508 2523 2535 2538 2562 2583 2593 2620 2622 2641 2676 2812 2826 2827 2832
   2872 2885 2889 2894 2921 2940 2949 2969 3037 3067)
  () -1 0)
 (2164 uniq "( pen ua ; move 3 , ua ; move 2 - ua , ul ) "
  (498 1853 1959 2018 2063 2551 2779 2781 2965 3001 3008) () -1 0)
 (2165 uniq "( pen 4 ; move ul - ua , ul ; move 7 , ul ) "
  (517 670 1676 1817 1861 1927 2040 2049 2069 2070 2107 2176 2239 2241 2257
   2270 2295 2307 2379 2406 2433 2439 2467 2510 2548 2573 2613 2614 2658 2674
   2682 2717 2733 2746 2816 2837 2843 2852 2945 2967 3038 3074)
  () -1 0)
 (2166 uniq "( pen ua ; move 4 , ul ; move 2 , ul ) "
  (17 270 271 295 302 320 331 333 336 338 342 348 356 364 385 1656 1657 1664
   1673 1674 1675 1683 1685 1705 1707 1720 1722 1728 1729 1731 1735 1772 1776
   1778 1779 1784 1798 1800 1805 1809 1812 1813 1816 1828 1830 1860 1864 1865
   1876 1879 1928 1959 1967 1972 1976 1979 1996 2009 2038 2047 2050 2058 2082
   2086 2093 2106 2111 2114 2116 2150 2158 2177 2180 2181 2182 2185 2209 2231
   2245 2313 2322 2329 2372 2378 2412 2425 2431 2448 2458 2506 2515 2519 2567
   2574 2581 2598 2602 2619 2668 2690 2722 2730 2741 2749 2756 2782 2787 2793
   2800 2829 2848 2856 2870 2880 2904 2907 2911 2922 2927 2943 2987 3033 3071
   3075 3091)
  (1578) -1 1)
 (2167 uniq "( pen 3 ; move 4 + 3 , 4 / ua ; move 3 , 4 ) "
  (853 1851 1868 1875 1912 1921 1944 1953 1989 1999 2014 2052 2053 2054 2078
   2081 2085 2110 2125 2127 2142 2169 2194 2205 2229 2243 2277 2286 2302 2323
   2368 2444 2494 2503 2525 2534 2559 2582 2804 2811 2871 2877 2899 2905 2916
   2923 2988 3059 3089)
  () -1 0)
 (2168 uniq "( move 3 , ul / 4 ; pen ua + ul ; move 2 , ul ) "
  (1053 1679 1725 1878 1937 2073 2101 2259 2395 2478 2669 2803 2833) () -1 0)
 (2169 uniq "( pen 3 ; move 4 + 4 , ul / ua ; move 9 , 4 ) "
  (853 1851 1868 1875 1912 1921 1944 1953 1989 1999 2014 2052 2053 2054 2078
   2081 2110 2125 2127 2167 2205 2226 2229 2277 2286 2323 2368 2494 2503 2525
   2534 2582 2626 2740 2784 2804 2811 2877 2899 2905 2923 2988 3059 3089)
  () -1 0)
 (2170 uniq "( pen ua ; move ul , ua ; move 4 + ul , ul ) "
  (628 645 646 2493 2635 2961) () -1 0)
 (2171 uniq "( move 4 + 0 , 3 ; pen 4 ; move ua , ul * 2 ) "
  (1661 1698 2486 2723) () -1 1)
 (2172 equiv "( pen ua - ul ; move 2 , 4 ; move 3 + 0 , ul ) "
  (845 1739 1796 1994 2440 2442) () 2440 0)
 (2173 uniq "( pen ua ; move 0 + ul , ul ; move 4 , 2 ) "
  (582 678 1703 1738 1770 1896 1931 1955 2099 2103 2159 2274 2321 2345 2417
   2447 2454 2490 2549 2637 2641 2648 2915 2925 2946 2952 2979 3040)
  () -1 0)
 (2174 uniq "( move ua , ul / 3 ; move 3 + 2 , ul ) " (365 394 435 1839) ()
  -1 0)
 (2175 uniq "( pen 3 ; move ua , 4 / ua ; move ul , 2 ) "
  (567 1733 1886 1933 1998 2036 2041 2163 2207 2222 2315 2364 2369 2401 2597
   2662 2676 2686 2827 2832 2871 2940 2949 3003 3043 3067)
  () -1 0)
 (2176 uniq "( pen ua ; move ul - ua , 0 ; move 2 , ul ) "
  (542 670 1675 1676 1680 1687 1697 1702 1749 1769 1791 1817 1852 1881 1919
   1927 1987 2040 2043 2069 2070 2107 2165 2239 2241 2242 2257 2270 2295 2307
   2331 2379 2387 2433 2453 2467 2472 2510 2548 2573 2601 2613 2614 2658 2663
   2674 2682 2705 2717 2727 2733 2746 2816 2837 2843 2847 2891 2945 2967 2982
   2992 3005 3017 3038 3055 3074 3076)
  (2008) -1 0)
 (2177 uniq "( pen ua ; move 2 , 3 ; move 3 , ul ) "
  (270 295 303 320 322 325 331 333 338 348 356 364 385 1657 1673 1674 1675
   1683 1685 1707 1717 1722 1729 1731 1735 1772 1776 1778 1779 1784 1789 1798
   1800 1805 1809 1812 1813 1816 1828 1860 1865 1876 1879 1959 1972 1976 1979
   1996 2038 2047 2050 2058 2086 2093 2106 2111 2114 2155 2158 2166 2180 2182
   2185 2209 2231 2313 2325 2329 2348 2372 2412 2428 2448 2458 2500 2506 2515
   2519 2542 2598 2602 2619 2623 2668 2670 2677 2690 2715 2722 2729 2741 2777
   2782 2793 2798 2800 2856 2904 2911 2922 2927 2943 2959 2991 3027 3033 3075
   3091)
  () -1 0)
 (2178 uniq "( move 3 , ua / 4 ; move ua , 2 ; move 4 , 3 ) "
  (875 1888 1902 2644 2720) () -1 0)
 (2179 uniq "( pen 4 ; move ua , 3 - 2 ; move 4 - ul , ua - 8 ) " (1135 2362)
  () -1 0)
 (2180 uniq "( pen ua ; move 3 , 0 ; move 2 , ul ) "
  (270 271 292 293 303 319 320 327 331 333 338 348 356 364 385 1657 1664 1673
   1674 1675 1683 1685 1705 1722 1728 1729 1731 1735 1772 1776 1778 1779 1784
   1798 1800 1805 1809 1812 1813 1816 1828 1831 1860 1864 1865 1876 1879 1928
   1959 1972 1976 1979 1996 2038 2044 2047 2050 2058 2086 2093 2106 2150 2158
   2166 2177 2181 2182 2185 2209 2231 2245 2301 2313 2322 2325 2347 2372 2391
   2412 2425 2428 2431 2448 2458 2488 2506 2515 2519 2521 2542 2566 2567 2574
   2581 2598 2602 2619 2623 2668 2670 2690 2722 2730 2741 2749 2756 2774 2782
   2787 2793 2800 2825 2829 2848 2853 2880 2911 2922 2927 2943 2987 3024 3027
   3033 3053 3071 3075 3091)
  (624 1959) -1 2)
 (2181 uniq "( pen 3 ; move ua , 4 ; move 2 , ul ) "
  (268 271 292 293 296 303 331 336 338 340 356 385 1203 1657 1664 1673 1675
   1685 1705 1717 1720 1722 1728 1729 1735 1760 1776 1778 1779 1784 1788 1798
   1800 1812 1813 1816 1831 1864 1879 1928 1959 1972 1979 1996 2009 2038 2047
   2058 2082 2114 2123 2166 2180 2209 2296 2322 2325 2348 2378 2443 2448 2458
   2515 2519 2542 2566 2567 2574 2581 2609 2611 2619 2643 2690 2722 2729 2730
   2756 2777 2793 2798 2800 2845 2848 2865 2880 2922 2959 2987 2991 3007 3014
   3071)
  () -1 1)
 (2182 uniq "( pen ua ; move 3 , 2 ; move 4 , ul ) "
  (269 271 292 293 303 319 320 326 327 331 333 338 348 356 364 385 1657 1673
   1674 1675 1683 1685 1717 1722 1729 1731 1735 1760 1772 1776 1778 1779 1784
   1789 1798 1800 1805 1809 1812 1813 1816 1828 1831 1860 1865 1876 1894 1959
   1967 1972 1976 1979 1993 1996 2009 2038 2044 2047 2050 2058 2082 2086 2093
   2100 2106 2116 2150 2158 2166 2177 2180 2185 2189 2209 2231 2245 2284 2301
   2313 2325 2329 2347 2348 2372 2378 2391 2412 2425 2428 2431 2443 2448 2458
   2488 2506 2515 2519 2521 2566 2574 2575 2581 2598 2602 2619 2623 2668 2690
   2715 2722 2729 2730 2741 2749 2774 2777 2782 2787 2793 2798 2800 2825 2835
   2845 2853 2865 2911 2922 2927 2943 2986 2987 3014 3024 3027 3033 3034 3053
   3075 3091)
  (1894) -1 5)
 (2183 equiv "( pen ua ; ul ; move 4 , 0 ; move ua , ul ) "
  (630 689 721 2084 2199 2240 3091) () 3091 1)
 (2184 equiv "( pen 3 + 3 ; move 3 , 4 ; move 4 , ul ) "
  (1771 1799 1815 1849 1850 1871 1890 1894 1907 1957 2407 2437 2477 2851) ()
  2515 0)
 (2185 uniq "( pen ua ; move 4 , 0 ; move ul , ul ) "
  (15 270 271 292 293 295 301 302 319 320 326 327 331 333 336 338 342 348 356
   364 385 630 1657 1673 1674 1675 1683 1685 1720 1722 1729 1731 1735 1760
   1772 1776 1778 1779 1784 1798 1800 1805 1809 1812 1813 1816 1828 1830 1860
   1865 1876 1883 1928 1959 1972 1976 1979 1996 2038 2050 2058 2086 2093 2106
   2116 2158 2166 2177 2180 2182 2209 2231 2301 2313 2322 2325 2347 2372 2378
   2391 2412 2448 2458 2488 2506 2515 2519 2542 2567 2598 2602 2619 2623 2668
   2670 2690 2722 2741 2782 2787 2793 2800 2825 2829 2853 2870 2911 2922 2943
   3024 3033 3075 3091)
  (630 1538) -1 0)
 (2186 equiv "( pen 4 + ul ; move 2 - ua , ua ; move ul , ul ) "
  (1961 2008 2029 2233 2287 2410 2421 2615 2864 2918 3079) () 2615 1)
 (2187 uniq "( pen ua ; move 3 , ul / ua ; move 4 , ul ) "
  (641 653 656 724 1655 1662 1671 1688 1690 1703 1716 1726 1752 1823 1827
   1832 1867 1926 1933 1958 1960 1978 2034 2036 2064 2072 2087 2093 2096 2104
   2106 2149 2204 2210 2216 2219 2222 2236 2244 2261 2332 2334 2335 2337 2364
   2376 2380 2388 2393 2402 2404 2422 2424 2427 2474 2480 2500 2502 2523 2535
   2538 2583 2617 2625 2630 2636 2647 2673 2676 2688 2693 2696 2721 2761 2794
   2820 2824 2826 2827 2869 2872 2879 2889 2894 2901 2907 2917 2921 2935 2939
   2941 2948 2949 2960 2973 2977 2986 2998 3034 3037 3040 3042 3062 3067)
  () -1 0)
 (2188 uniq "( move 4 - ua , ul ; pen 2 ; move 0 - ua , ul ) "
  (918 1682 1712 1822 2055 2144 2457 2563 2783 2892 3047) () -1 0)
 (2189 uniq "( pen ua ; move ua , 2 ; move ua , 4 ) "
  (52 269 296 320 322 325 326 327 333 337 348 350 351 356 361 385 1656 1657
   1664 1674 1675 1683 1685 1691 1705 1707 1715 1722 1729 1731 1735 1760 1767
   1776 1778 1779 1789 1798 1800 1805 1809 1812 1813 1816 1828 1830 1860 1864
   1865 1928 1967 1972 1976 1993 1996 2001 2038 2044 2058 2100 2111 2155 2182
   2231 2296 2357 2378 2425 2431 2488 2602 2640 2643 2670 2715 2729 2730 2749
   2777 2793 2825 2829 2835 2853 2865 2904 2906 2911 2943 2991 3007 3014
   3091)
  (1715) -1 0)
 (2190 equiv "( pen ua ; move 4 , ul / 2 ; move ua , 2 ) "
  (430 641 724 1671 1726 1750 1795 1803 1823 1829 1830 1840 1858 1882 1886
   1916 1929 1939 1946 1952 1963 1990 2013 2031 2034 2036 2060 2064 2067 2096
   2115 2121 2146 2149 2163 2200 2206 2207 2208 2210 2222 2228 2244 2260 2261
   2290 2298 2316 2332 2364 2365 2369 2388 2389 2393 2401 2402 2429 2462 2480
   2482 2505 2535 2538 2557 2562 2583 2593 2620 2622 2636 2638 2673 2689 2693
   2704 2721 2726 2732 2744 2750 2758 2801 2812 2819 2820 2826 2869 2885 2889
   2894 2907 2939 2940 2944 2949 2960 2969 2976 2986 2998 3072)
  () 2750 0)
 (2191 uniq "( move ua , 5 ; move ua , 2 ) "
  (24 25 26 27 28 29 30 31 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
   84 85 86 87 88 89 90 91 92 93 1650 1666 1668 1730 2045 2098 2201 2400 2409
   2558 2885)
  () -1 2)
 (2192 uniq "( pen ua + ul ; move 3 , 4 ; move 0 - ua , ul ) "
  (917 1735 1986 2004 2151 2607 2621 2839 2968) () -1 0)
 (2193 uniq "( move 3 , 3 / 2 ; pen ua + 3 ; move 9 , ul ) " (1937 2101) ()
  -1 0)
 (2194 uniq "( pen 3 ; move 4 + 0 , 4 / ua ; move ua , 2 ) "
  (853 1851 1868 1953 1989 1999 2054 2078 2081 2125 2127 2167 2205 2229 2243
   2323 2534 2559 2899 2988)
  () -1 0)
 (2195 uniq "( move 4 + ul , ua ; move ua , 4 ; move 4 , ul ) "
  (816 866 1808 2861) () -1 0)
 (2196 uniq "( move ua + 0 , ul ; move 3 , 3 ; move ua , ul ) "
  (957 1721 2126 3023) () -1 0)
 (2197 uniq "( pen 4 ; move 2 , ul / 4 ; move 5 , ul ) "
  (512 1882 1958 2034 2066 2123 2236 2279 2297 2334 2337 2388 2402 2404 2424
   2500 2502 2505 2583 2617 2625 2636 2650 2742 2780 2801 2820 2907 2909 2924
   3037 3087)
  () -1 0)
 (2198 uniq "( move ua , 9 ; ( pen 2 ; move 4 , 4 ) ) " (482 2415 2599 3092)
  () -1 0)
 (2199 equiv "( pen ua * ul ; move 4 , 4 ; move 2 , ul ) "
  (624 630 1815 1850 1983 2028 2080 2084 2183 2240 2440 2619 2665 2788) ()
  2619 2)
 (2200 uniq "( pen ua ; move 4 , ul / 2 ; move 2 , 7 ) "
  (641 1671 1726 1750 1858 1963 2031 2034 2060 2067 2096 2190 2206 2210 2219
   2227 2260 2261 2273 2316 2332 2334 2380 2388 2401 2424 2446 2473 2480 2508
   2538 2636 2689 2693 2726 2750 2758 2812 2817 2819 2821 2869 2907 2939 2949
   2986 2998)
  () -1 0)
 (2201 uniq "( move 3 , 0 ; move ua , 2 ) "
  (24 25 26 27 28 29 30 31 44 45 46 47 48 49 50 51 52 53 54 56 57 59 84 85 86
   87 88 89 92 136 449 571 1650 1658 1666 1668 1699 1730 1905 2042 2045 2098
   2191 2244 2304 2400 2557 2558)
  (50 136 235 559 820 914 1270 1388) -1 14)
 (2202 uniq "( move ua , ul ; pen ua ; move 3 , ul ) "
  (267 272 283 288 308 328 329 334 335 358 362 1672 1679 1681 1704 1725 1727
   1745 1748 1759 1783 1786 1825 1836 1855 1856 1899 1913 1923 1932 1934 1945
   1950 1971 1974 1980 1991 1997 2003 2023 2032 2048 2097 2132 2134 2154 2217
   2220 2230 2268 2281 2293 2317 2320 2324 2327 2338 2344 2349 2355 2356 2386
   2423 2426 2430 2441 2496 2497 2499 2577 2604 2649 2679 2699 2703 2706 2707
   2725 2731 2759 2776 2802 2806 2810 2833 2858 2860 2876 2902 2983 3011)
  (1704) -1 0)
 (2203 uniq "( move 4 * 2 , ul ; move ua + ul , 2 ) " (324 352 399) () -1 0)
 (2204 equiv "( pen ua ; move 4 , 2 / ul ; move 4 , ul ) "
  (653 1655 1662 1696 1715 1716 1726 1733 1746 1752 1827 1845 1867 1939 1978
   2002 2072 2087 2131 2187 2216 2231 2236 2335 2422 2445 2474 2480 2502 2636
   2687 2689 2742 2745 2765 2817 2869 2872 2907 2917 2941 2951 2973 2986 2998
   3033 3034)
  () 2231 0)
 (2205 uniq "( pen 3 ; move 4 + 0 , 0 / ua ; move 4 , 4 ) "
  (853 1851 1868 1875 1912 1921 1944 1953 1989 1999 2014 2052 2053 2054 2078
   2081 2085 2110 2125 2127 2142 2167 2169 2194 2229 2243 2275 2277 2286 2323
   2368 2494 2503 2525 2534 2559 2582 2633 2784 2789 2804 2811 2868 2877 2890
   2899 2905 2916 2923 2988 3059 3089)
  () -1 0)
 (2206 equiv "( pen ua ; move 4 , 0 / 2 ; move ua , 2 ) "
  (26 430 1750 1795 1823 1829 1840 1882 1886 1929 1939 1952 1963 1990 2013
   2031 2060 2064 2096 2121 2190 2200 2208 2210 2228 2244 2260 2261 2290 2316
   2365 2369 2389 2401 2429 2462 2480 2482 2557 2593 2620 2638 2689 2704 2726
   2744 2750 2757 2812 2819 2829 2940 2944 2949 2960 2976)
  () 2829 0)
 (2207 uniq "( pen ua ; move ua , ul / 4 ; move ul , 2 ) "
  (641 656 678 1671 1688 1694 1726 1750 1803 1823 1867 1869 1882 1886 1904
   1916 1946 1978 1998 2031 2034 2036 2060 2064 2067 2083 2096 2115 2121 2123
   2149 2163 2175 2190 2210 2222 2228 2252 2315 2316 2337 2364 2365 2369 2380
   2393 2401 2402 2404 2424 2427 2462 2464 2505 2508 2523 2535 2538 2562 2583
   2593 2620 2622 2636 2662 2676 2697 2745 2801 2812 2826 2827 2832 2872 2874
   2885 2889 2894 2907 2940 2949 2969 2976 3037 3042 3043 3067)
  () -1 0)
 (2208 uniq "( pen ua ; move 4 , ul + ul ; move ua , 2 ) "
  (629 1684 1706 1750 1795 1803 1823 1829 1830 1834 1840 1869 1882 1886 1916
   1930 1939 1946 1963 2031 2060 2064 2096 2190 2206 2210 2228 2326 2389 2429
   2462 2593 2620 2735 2750 2757 2822 2885 2915 2949 2979)
  () -1 0)
 (2209 uniq "( pen ua ; move 3 , 4 ; move 2 , ul ) "
  (292 303 319 320 327 331 333 337 338 348 356 364 385 1657 1664 1673 1674
   1675 1683 1685 1705 1722 1728 1729 1731 1735 1772 1776 1778 1779 1784 1798
   1800 1805 1809 1812 1813 1815 1816 1828 1831 1860 1864 1865 1876 1879 1928
   1959 1972 1976 1979 1996 2038 2044 2047 2050 2058 2086 2093 2106 2150 2158
   2166 2177 2180 2181 2182 2185 2231 2245 2301 2313 2347 2372 2391 2412 2425
   2428 2431 2443 2448 2458 2506 2515 2519 2521 2566 2567 2574 2581 2598 2602
   2619 2623 2647 2668 2690 2722 2730 2741 2749 2756 2774 2782 2787 2793 2800
   2825 2848 2853 2880 2911 2922 2927 2943 2959 2987 2991 3024 3027 3033 3053
   3071 3075 3091)
  (1815) -1 0)
 (2210 equiv "( pen ua ; move 3 , ul / 2 ; move ua , 2 ) "
  (641 724 1671 1726 1750 1803 1823 1829 1840 1882 1886 1916 1929 1939 1946
   1952 1960 1963 1990 2013 2031 2034 2036 2060 2064 2067 2072 2096 2115 2121
   2146 2149 2163 2187 2190 2200 2206 2207 2208 2219 2222 2228 2244 2260 2261
   2285 2298 2316 2332 2364 2365 2376 2388 2393 2401 2402 2404 2429 2431 2462
   2464 2480 2482 2498 2505 2535 2538 2557 2562 2583 2593 2597 2617 2620 2622
   2673 2688 2693 2704 2721 2726 2732 2750 2763 2801 2812 2819 2820 2822 2826
   2828 2869 2885 2889 2894 2940 2944 2949 2960 2969 2976 2986 3028)
  () 2704 0)
 (2211 uniq "( move ua , ua * pen ua ; move 5 , 5 ) "
  (1783 1855 2003 2048 2156 2679 2876 3011) () -1 0)
 (2212 uniq "( pen 5 ; move ua , 4 * 3 ) "
  (38 67 70 72 73 79 81 82 1943 1985 2232) (79) -1 0)
 (2213 uniq "( pen 4 ; move ua , 0 - 2 ) "
  (16 33 38 40 64 65 67 72 73 75 76 81 82 98 112 1758 1903 1943 1985 2232
   2306 2546 2873)
  (81) -1 0)
 (2214 uniq "( pen 7 ; move ua , ua - 2 ; move ul , ul ) "
  (626 1671 1761 1763 1827 1859 1904 1940 1970 2017 2020 2027 2059 2109 2473
   2646 2728)
  (2109) -1 0)
 (2215 uniq "( move ua , 2 ; pen ua ; move ul + ul , 2 ) "
  (612 679 686 719 1992 2006 2046 2132 2266) () -1 1)
 (2216 uniq "( pen ua ; move 4 , ul - 3 ; move 4 , ul ) "
  (1655 1688 1713 1726 1803 1866 1867 2002 2031 2033 2072 2075 2145 2187 2204
   2236 2274 2330 2334 2393 2427 2480 2500 2502 2562 2636 2646 2721 2765 2794
   2820 2869 2872 2889 2907 2946 2973 2986 2998 3033 3040 3062)
  () -1 0)
 (2217 uniq "( move ua , 2 ; pen ua ; move 3 , ul ) "
  (267 272 283 288 291 328 329 334 335 358 1672 1681 1725 1727 1745 1748 1759
   1783 1786 1825 1836 1855 1856 1899 1913 1917 1923 1932 1934 1945 1950 1971
   1974 1977 1980 1991 1997 2003 2023 2032 2048 2132 2134 2154 2202 2220 2230
   2268 2281 2293 2312 2320 2324 2338 2344 2349 2355 2356 2423 2426 2430 2441
   2496 2499 2577 2649 2679 2699 2703 2706 2707 2725 2759 2776 2802 2806 2810
   2833 2876 2902 2930 2983 3011 3061 3078 3084)
  () -1 1)
 (2218 equiv "( move 4 , ua ; v0 = 2 ; move ul - ua , ul ) " (898 2397) ()
  2594 0)
 (2219 uniq "( pen ua ; move 3 , ul / ua ; move 2 , 4 ) "
  (724 1662 1823 1867 1933 1960 2036 2060 2064 2067 2072 2096 2149 2187 2200
   2210 2222 2244 2261 2273 2298 2332 2334 2364 2376 2380 2388 2402 2404 2424
   2502 2508 2535 2538 2647 2667 2673 2688 2693 2696 2721 2761 2763 2824 2828
   2879 2894 2907 2917 2939 2941 2948 2949 2986 3003 3028 3034 3062 3072)
  () -1 0)
 (2220 uniq "( move 2 , 4 ; pen ua ; move 4 , ul ) "
  (285 294 305 308 328 329 334 335 358 865 1672 1681 1725 1727 1745 1748 1759
   1783 1786 1825 1836 1855 1856 1895 1913 1923 1932 1934 1945 1974 1977 1980
   2023 2026 2032 2134 2154 2202 2217 2230 2268 2324 2338 2344 2355 2375 2423
   2426 2441 2560 2577 2604 2649 2699 2703 2706 2707 2731 2736 2776 2810 2833
   2858 2860 2895 2919 3061)
  () -1 0)
 (2221 uniq "( pen 4 ; move 3 * 2 , ul ; move 4 + ul , 2 ) " (1887) () -1 0)
 (2222 uniq "( pen ua ; move ua , ul / ua ; move 3 , 2 ) "
  (47 114 322 641 685 724 1671 1688 1707 1713 1726 1750 1803 1823 1867 1869
   1882 1886 1916 1933 1946 1955 1990 1998 2013 2031 2034 2036 2039 2060 2064
   2067 2096 2115 2121 2149 2163 2175 2187 2190 2207 2210 2219 2228 2244 2364
   2369 2376 2380 2393 2401 2424 2427 2447 2480 2500 2502 2508 2523 2535 2538
   2562 2583 2593 2620 2622 2636 2638 2673 2676 2688 2745 2812 2826 2827 2872
   2885 2889 2894 2935 2939 2940 2949 2969 2970 3003 3037 3043 3067 3069
   3077)
  () -1 1)
 (2223 uniq "( pen ua ; move ua , ua ; move 8 , ua - 2 ) "
  (537 669 1659 2112 2272 2844 3070) () -1 0)
 (2224 uniq "( pen ua ; move ua - ul , 7 ; move 4 , ul ) "
  (106 497 542 685 1680 1687 1697 1703 1726 1729 1738 1749 1769 1791 1833
   1867 1881 1897 1901 1911 1919 2037 2075 2087 2099 2242 2274 2300 2321 2345
   2352 2417 2447 2461 2467 2483 2490 2523 2614 2616 2641 2660 2674 2682 2683
   2718 2733 2791 2826 2847 2872 2921 2925 2952 2979 3019 3040 3088)
  () -1 0)
 (2225 uniq "( move 2 - ua , ua ; move ul , 0 ; move ua , 2 ) "
  (953 1205 2585) (1205) -1 0)
 (2226 uniq "( pen 3 ; move ul + 4 , ul / ua ; move 2 , 4 ) "
  (853 1921 2169 2302 2323 2368 2503 2626 2740 2877 2923 2988 3059 3089) ()
  -1 0)
 (2227 uniq "( pen 5 ; move ua , ul / 2 ; move 2 , ul ) "
  (641 1671 1688 1726 1746 1750 1763 1791 1827 1832 1833 1867 1904 1909 1933
   1970 2034 2060 2067 2083 2115 2123 2200 2252 2261 2273 2334 2337 2380 2388
   2401 2424 2427 2473 2480 2489 2508 2523 2583 2650 2681 2693 2697 2732 2750
   2751 2758 2812 2819 2821 2826 2869 2872 2889 2901 2907 2921 2986 3003 3037
   3057 3069)
  () -1 0)
 (2228 uniq "( pen ua ; move ua , ul / 4 ; move ua , 2 ) "
  (85 114 629 641 656 724 1650 1671 1684 1688 1694 1706 1715 1726 1750 1803
   1823 1829 1840 1867 1869 1882 1886 1916 1939 1946 1952 1963 1978 1998 2013
   2031 2034 2036 2039 2060 2064 2066 2067 2083 2096 2115 2121 2123 2146 2149
   2163 2190 2206 2207 2208 2210 2222 2244 2252 2261 2279 2297 2298 2332 2337
   2364 2365 2380 2393 2401 2402 2404 2424 2427 2429 2462 2498 2505 2508 2523
   2535 2538 2557 2562 2583 2593 2617 2620 2622 2636 2673 2676 2697 2704 2721
   2742 2745 2750 2757 2801 2812 2820 2826 2828 2832 2872 2874 2885 2889 2894
   2907 2909 2915 2940 2949 2969 2976 2979 3037 3042 3043 3057 3067)
  () -1 0)
 (2229 uniq "( pen 3 ; move 4 + 3 , 3 / ua ; move ua , 4 ) "
  (853 1851 1868 1875 1912 1921 1944 1953 1989 1999 2014 2052 2053 2054 2078
   2081 2110 2125 2127 2142 2167 2169 2194 2205 2243 2277 2286 2302 2323 2368
   2383 2444 2494 2503 2525 2526 2534 2559 2582 2633 2804 2811 2877 2890 2899
   2905 2916 2923 2988 3059 3089)
  () -1 0)
 (2230 uniq "( move 3 , 3 ; pen ua ; move 2 , ul ) "
  (267 283 285 288 291 304 305 308 328 329 334 335 358 1681 1725 1727 1745
   1748 1783 1810 1825 1836 1856 1899 1913 1923 1932 1934 1945 1950 1951 1974
   1980 1991 2023 2032 2079 2134 2154 2202 2217 2220 2268 2293 2304 2317 2324
   2344 2355 2423 2426 2496 2497 2499 2560 2577 2604 2699 2703 2707 2710 2731
   2776 2806 2810 2833 2860 2895 2919 2983 3022)
  (1810 1951) -1 0)
 (2231 uniq "( pen ua ; move 4 , 2 ; move 4 , ul ) "
  (17 269 270 271 293 295 306 320 326 327 331 333 336 338 348 356 364 385
   1657 1673 1674 1675 1683 1685 1717 1722 1729 1731 1735 1760 1772 1776 1778
   1779 1784 1789 1798 1800 1805 1809 1812 1813 1816 1828 1830 1860 1865 1876
   1959 1967 1972 1976 1979 1993 1996 2009 2038 2050 2058 2082 2086 2093 2100
   2106 2116 2158 2166 2177 2180 2182 2185 2189 2204 2209 2313 2322 2325 2329
   2348 2372 2378 2412 2428 2443 2448 2458 2488 2506 2515 2519 2521 2566 2598
   2602 2619 2668 2690 2715 2722 2729 2730 2741 2749 2774 2777 2782 2793 2798
   2800 2825 2829 2835 2845 2853 2865 2870 2911 2922 2943 2998 3014 3024 3033
   3053 3075 3091)
  (2204) -1 0)
 (2232 uniq "( pen ua ; move ua , 2 - 3 ) "
  (33 40 61 64 65 67 70 73 75 76 79 81 82 95 97 98 107 112 114 1734 1903 1943
   1985 2212 2213 2306 2765)
  (98 112 250 251 728 730 1250 1640 1649) -1 1)
 (2233 uniq "( pen 2 + ul ; move 3 - ua , ua ; move ua , ul ) "
  (913 1961 2029 2186 2410 2421 2452 2509 2605 2685 2747 2864) () -1 0)
 (2234 uniq "( move ua + ul , ul - 3 ; pen 2 ; move ua / 4 , 7 ) "
  (1185 1191) () -1 0)
 (2235 uniq "( pen 2 ; move ua , 3 - 2 ; move 4 - ul , ul / 3 ) "
  (1135 2362 2798) () -1 0)
 (2236 uniq "( pen ua ; move 2 , ul / 3 ; move 4 , ul ) "
  (641 653 656 724 1655 1671 1688 1713 1726 1752 1827 1832 1867 1876 1882
   1958 1978 2031 2034 2064 2066 2072 2075 2087 2149 2187 2197 2204 2216 2261
   2279 2297 2298 2334 2335 2337 2364 2376 2380 2388 2393 2402 2404 2412 2422
   2424 2427 2474 2480 2500 2502 2508 2523 2535 2538 2583 2593 2625 2636 2647
   2650 2673 2681 2688 2693 2696 2721 2742 2761 2765 2794 2820 2826 2869 2872
   2889 2894 2901 2907 2909 2921 2935 2948 2973 2977 2986 2998 3034 3037 3040
   3042 3062 3068 3087)
  () -1 0)
 (2237 uniq "( pen 4 ; move ua , 2 - 2 ; move 2 , 7 ) " (1763 1970 2017 2027)
  () -1 0)
 (2238 uniq "( move ua + ul , 2 ; pen 4 ; move 4 , ul ) "
  (55 60 696 702 1686 1695 1736 2140 2148 2314 2338 2413 2743) () -1 0)
 (2239 equiv "( pen ua ; move ul - ua , ul ; move ul , ul ) "
  (670 1676 1817 1852 1861 1881 1897 1927 2043 2107 2165 2176 2241 2257 2263
   2270 2295 2300 2307 2331 2379 2387 2433 2453 2467 2490 2510 2548 2573 2613
   2614 2658 2663 2674 2682 2705 2717 2718 2727 2733 2746 2816 2837 2843 2945
   2967 2982 2992 3005 3017 3038 3055 3074 3076)
  () 2548 0)
 (2240 uniq "( pen ua ; ul ; move 4 , 3 ; move ua , ul ) "
  (689 721 2183 2199) () -1 0)
 (2241 uniq "( pen ua ; move ul - ua , 3 ; move ua , ul ) "
  (101 670 1676 1817 1852 1861 1911 1919 1927 2043 2049 2069 2070 2075 2107
   2165 2176 2239 2242 2257 2270 2295 2307 2331 2379 2387 2433 2439 2453 2467
   2510 2548 2573 2614 2658 2663 2674 2682 2705 2717 2727 2733 2746 2816 2837
   2843 2852 2945 2967 2982 2992 3005 3017 3038 3055 3074 3076)
  () -1 0)
 (2242 uniq "( pen ua ; move ua - ul , 0 ; move ua , ul ) "
  (224 348 497 542 670 685 1676 1680 1687 1697 1702 1738 1749 1769 1791 1833
   1881 1897 1901 1911 1919 1927 2037 2069 2070 2075 2107 2176 2224 2241 2274
   2300 2307 2321 2345 2352 2417 2447 2461 2483 2490 2549 2573 2583 2616 2622
   2641 2660 2674 2718 2791 2826 2843 2847 2889 2915 2925 2945 2979 3005)
  () -1 0)
 (2243 uniq "( pen 3 ; move 4 + 0 , 3 / ua ; move 3 , ul ) "
  (1953 1989 1999 2014 2052 2053 2054 2078 2085 2125 2127 2142 2167 2194 2205
   2229 2277 2286 2381 2494 2525 2534 2559 2582 2626 2784 2811 2877 2899 2923
   2988 3089)
  () -1 0)
 (2244 equiv "( pen ua ; move 3 , 0 / ua ; move ua , 2 ) "
  (50 724 1750 1823 1829 1840 1882 1886 1939 1952 1960 1990 1998 2013 2031
   2036 2041 2064 2096 2121 2143 2146 2149 2187 2190 2201 2206 2210 2219 2222
   2228 2261 2285 2332 2364 2365 2369 2370 2376 2389 2402 2464 2498 2535 2538
   2557 2593 2597 2620 2638 2667 2673 2704 2721 2757 2763 2801 2822 2884 2894
   2917 2935 2940 2949 2960 2976 3028 3034 3067)
  () 2557 0)
 (2245 equiv "( pen ua ; move 3 , ua ; move 2 , 2 ) "
  (295 296 319 320 322 327 331 338 350 351 356 385 1657 1664 1675 1683 1705
   1707 1728 1731 1735 1772 1784 1789 1800 1805 1816 1828 1830 1860 1864 1928
   1959 1967 1976 1979 1996 2011 2044 2050 2058 2086 2093 2100 2106 2116 2155
   2158 2166 2180 2182 2209 2284 2301 2329 2347 2357 2372 2391 2425 2428 2431
   2448 2458 2488 2515 2519 2521 2574 2575 2581 2598 2602 2619 2623 2624 2643
   2668 2670 2690 2722 2741 2749 2782 2787 2800 2825 2829 2853 2904 2922 2927
   2943 2987 2991 3027 3053)
  () 2787 0)
 (2246 uniq "( move 3 , 4 ; move 4 + 4 , 2 ) " (124 141 146 177 1857 2124) ()
  -1 0)
 (2247 uniq "( move 4 , ul ; move ua + ul , 3 * 4 ) "
  (59 442 469 473 1669 2265 2547) () -1 0)
 (2248 uniq "( pen 4 ; move ua , ul / ua + move 2 , ua / 4 ) "
  (951 1781 3031) () -1 0)
 (2249 uniq "( move ua , 0 - 3 ; move ul , ul ; move ua , ul ) "
  (965 1949 2133 2280 2351 2507 2544 2580 2684 2831 2875 2888 2981 3010)
  (1949) -1 0)
 (2250 uniq "( move 4 , ua / 3 ; pen ua * 2 ; move 3 , ul ) "
  (950 1836 2367 2532) () -1 0)
 (2251 uniq "( move 4 + 4 , 4 ; move ua , 4 ) "
  (31 117 143 147 198 370 1755 1918 2468 2522 2755 2855) (370) -1 0)
 (2252 uniq "( pen ua ; move ua , ua / 4 ; move 2 , ul ) "
  (641 1655 1657 1671 1688 1694 1726 1763 1827 1866 1867 1904 1933 1970 1978
   2020 2034 2037 2067 2083 2087 2109 2123 2207 2227 2228 2260 2279 2297 2315
   2331 2334 2335 2337 2365 2380 2402 2404 2424 2427 2472 2473 2489 2508 2523
   2583 2636 2646 2647 2650 2662 2681 2693 2697 2728 2742 2745 2761 2773 2812
   2817 2821 2826 2827 2832 2872 2874 2882 2889 2907 2909 2924 2973 3037 3043
   3055)
  () -1 0)
 (2253 uniq "( move ua , 3 ; pen 3 ; move 4 , 2 ) "
  (288 297 305 1681 1748 1759 1783 1786 1804 1855 1856 1899 1913 1917 1950
   1971 1991 2025 2048 2097 2132 2156 2281 2312 2320 2324 2327 2338 2350 2356
   2409 2426 2430 2441 2496 2560 2604 2675 2706 2806 2895 2902 3022)
  () -1 0)
 (2254 uniq "( move ua + 2 , 3 ; move ua , 2 ) "
  (48 143 147 149 178 195 198 380 1755 1918 1984 2468 2522 2755 2855 2931
   2978)
  (380) -1 1)
 (2255 uniq "( pen 2 ; move 3 * 2 , ul / ua ; move 4 + ul , 2 ) "
  (1141 1887 2491 2849) () -1 0)
 (2256 uniq "( move 4 , ul ; move 3 , ul ; move ua , 2 ) "
  (28 450 485 489 523 1711 1818 2102 2136 2269 2399 2463 2481 2492 2527 2528
   2564 2570 2572 2588 2702 2857 2881 2883 2910 2912 2936 2950 2972 3004 3018
   3081)
  () -1 0)
 (2257 uniq "( pen ua ; move ul - ua , ul ; move 3 , ul ) "
  (101 517 670 685 1676 1798 1817 1852 1861 1881 1897 1901 1927 2043 2107
   2159 2165 2176 2239 2241 2270 2295 2307 2331 2379 2387 2417 2433 2447 2453
   2467 2490 2510 2548 2573 2613 2614 2658 2663 2674 2682 2705 2717 2718 2727
   2733 2746 2816 2837 2843 2847 2945 2967 2982 2992 3005 3017 3038 3055 3074
   3076)
  () -1 0)
 (2258 uniq "( move ul , 4 ; pen ua + ua ; move ua , ua * ua ) "
  (993 2539 2734) () -1 0)
 (2259 uniq "( move 0 , ul / 3 ; pen ua + ul ; move ua , ul ) "
  (1053 1679 1878 2101 2168 2395 2669 2803 2809) (1253) -1 0)
 (2260 uniq "( pen ua ; move 4 , ua / 2 ; move 2 , 2 ) "
  (430 1750 1827 1929 1963 1990 2027 2031 2060 2067 2096 2121 2190 2200 2206
   2210 2252 2290 2316 2335 2365 2369 2401 2446 2473 2480 2482 2538 2557 2638
   2689 2693 2750 2761 2773 2812 2817 2907 2949 3028)
  () -1 0)
 (2261 uniq "( pen ua ; move 3 , ul / 2 ; move ua , ul ) "
  (641 724 1671 1683 1688 1716 1726 1731 1750 1823 1827 1829 1832 1840 1867
   1882 1904 1911 1939 1960 1963 1990 2031 2034 2060 2064 2066 2072 2096 2146
   2149 2187 2190 2200 2206 2210 2219 2227 2228 2236 2244 2279 2297 2298 2332
   2334 2335 2365 2376 2380 2388 2401 2402 2404 2422 2424 2427 2473 2480 2500
   2502 2523 2538 2557 2583 2593 2617 2620 2622 2636 2647 2673 2688 2689 2693
   2704 2721 2726 2732 2742 2750 2758 2761 2763 2801 2819 2820 2821 2826 2828
   2869 2872 2879 2889 2901 2907 2909 2942 2960 2986 2998 3034 3037 3057
   3069)
  () -1 0)
 (2262 uniq "( move 0 - ua , 0 ; move 9 , ul ) "
  (183 223 224 274 278 1653 1962 2291) () -1 0)
 (2263 uniq "( pen ua ; move 3 + ua , 2 ; move ul , ul ) "
  (543 1703 1817 1833 1852 2109 2159 2239 2331 2345 2387 2472 2573 2658 2746
   2816 2837 2982 3017 3040 3074 3076)
  () -1 0)
 (2264 uniq "( move ua + ul , ul ; move 2 , 0 ; move 4 , 3 + 2 ) "
  (1093 1892) () -1 0)
 (2265 uniq "( move ua , 4 ; move ua + ul , 2 * 4 ) "
  (57 199 436 442 1650 1669 2247 2547 2842) () -1 0)
 (2266 uniq "( move ua , ul ; pen ua ; move ul + 4 , 3 ) "
  (594 612 686 719 1992 2006 2046 2215 2914 3065) (1992) -1 0)
 (2267 uniq "( pen ua ; move 2 , ul / ul ; move ua , 2 - 4 ) "
  (849 1773 1774 2021 2074 2311 2904) () -1 0)
 (2268 uniq "( move 2 , 2 ; pen ua ; move 4 , ul ) "
  (272 285 291 305 308 328 329 334 335 358 1681 1725 1727 1745 1748 1759 1783
   1786 1825 1836 1855 1856 1895 1913 1923 1932 1934 1945 1974 1977 1980 2023
   2026 2032 2132 2134 2154 2202 2217 2220 2230 2320 2324 2338 2344 2355 2375
   2423 2426 2560 2577 2604 2699 2703 2706 2707 2731 2736 2743 2776 2810 2833
   2858 2860 2895 2902 2983 3061)
  () -1 0)
 (2269 uniq "( move ua , 4 ; move ul , ul ; move ua , 2 ) "
  (85 485 523 533 602 603 662 665 1448 1650 1818 1846 2061 2102 2105 2113
   2136 2256 2363 2399 2476 2481 2492 2527 2528 2564 2570 2572 2702 2768 2815
   2857 2881 2883 2910 2936 2950 2963 2972 2993 3004 3018 3030 3081)
  () -1 4)
 (2270 equiv "( pen ua ; move ul - ua , ua ; move 3 , ul ) "
  (101 670 685 1676 1817 1852 1897 1901 1927 2043 2107 2165 2176 2239 2241
   2257 2295 2307 2331 2379 2387 2433 2453 2467 2510 2548 2573 2614 2658 2663
   2674 2682 2705 2717 2727 2733 2746 2816 2837 2843 2847 2945 2967 2982 2992
   3005 3017 3038 3055 3074 3076)
  () 2307 0)
 (2271 equiv "( pen 4 * 3 ; move 3 , 0 ; move 3 , 2 ) "
  (419 1744 1757 1873 1877 2012 2841) () 3027 0)
 (2272 uniq "( pen ua ; move ua , ua ; move ua , ua - 4 ) "
  (88 669 1039 1659 1837 2112 2141 2160 2223 2328 2434 2656 2844 3070 3090)
  (2141) -1 0)
 (2273 uniq "( pen 5 ; move ua , ul / 2 ; move 2 , 4 ) "
  (641 1671 1726 1750 1832 2034 2060 2067 2115 2123 2200 2219 2227 2380 2401
   2424 2446 2473 2489 2508 2681 2693 2750 2812 2821 3003 3069 3077)
  () -1 0)
 (2274 uniq "( pen ua ; move 4 + ul , 0 ; move 4 , ul ) "
  (575 582 1687 1702 1703 1833 1852 1931 2037 2075 2099 2103 2159 2173 2216
   2224 2242 2321 2345 2387 2417 2461 2490 2616 2674 2847 2925 2946 2952 2998
   3040 3075 3076 3088)
  () -1 0)
 (2275 uniq "( pen 3 ; move 2 + 0 , 2 / ua ; move 4 , 4 ) "
  (1851 1868 1875 1912 1921 1944 1953 1989 1999 2014 2052 2053 2054 2078 2081
   2085 2110 2125 2127 2142 2205 2286 2323 2368 2444 2494 2534 2633 2789 2804
   2868 2899 2916)
  () -1 0)
 (2276 equiv "( pen ua ; move 0 , ua ; move 4 + 4 , ul / 2 ) "
  (776 2739 2867 2932) () 2932 0)
 (2277 uniq "( pen 3 ; move 4 + 3 , 0 / ua ; move 3 , 4 ) "
  (853 1851 1868 1875 1912 1921 1944 1953 1989 1999 2014 2052 2053 2054 2078
   2081 2085 2110 2125 2127 2142 2167 2169 2205 2229 2243 2286 2302 2323 2368
   2444 2494 2503 2525 2534 2582 2804 2811 2868 2877 2890 2899 2905 2916 2923
   2988 3059 3089)
  () -1 0)
 (2278 uniq "( move ua , 0 ; pen ua + ul ; move ul + 4 , 4 ) "
  (983 2162 2517 2591 2628 2695 2737 2760 2933 2989 2999 3060) () -1 0)
 (2279 uniq "( pen ua ; move 2 , 3 / 4 ; move ua , ul ) "
  (653 724 1694 1752 1809 1882 1904 1952 1978 2013 2066 2083 2197 2228 2236
   2252 2261 2297 2298 2315 2334 2335 2365 2402 2404 2422 2424 2474 2500 2502
   2583 2617 2625 2636 2650 2673 2689 2697 2721 2742 2745 2780 2817 2820 2826
   2874 2889 2907 2909 2924 2935 2948 2960 2976 2977 3037)
  () -1 0)
 (2280 uniq "( move ua , ul - 3 ; move ul , ul ; move ua , ul ) "
  (965 1949 2133 2249 2351 2507 2544 2580 2684 2831 2875 2888 2981 3010 3029)
  () -1 0)
 (2281 uniq "( move ua , ul ; pen ua ; move ua , 2 ) "
  (84 85 283 291 294 297 329 334 335 358 362 679 1672 1745 1748 1759 1783
   1786 1804 1855 1856 1880 1899 1913 1917 1945 1964 1971 1974 1980 1991 1997
   2023 2025 2032 2048 2097 2132 2154 2156 2202 2217 2253 2293 2304 2317 2320
   2327 2344 2349 2350 2356 2386 2409 2430 2441 2496 2497 2499 2560 2577 2604
   2649 2675 2679 2699 2706 2707 2731 2759 2776 2802 2806 2810 2833 2858 2860
   2876 2902 2919 3022)
  (563) -1 0)
 (2282 uniq "( move 3 , 3 ; move 2 , 4 ; move ua , ua * ua ) " (1166 2711) ()
  -1 0)
 (2283 equiv "( move ul , 2 ; move ua , ua ; move 4 + 0 , 4 ) " (885) () 2341
  0)
 (2284 uniq "( pen 3 ; move 3 , ua ; move 4 , 4 ) "
  (271 292 293 296 303 319 336 356 1717 1728 1767 1772 1788 1831 1944 1959
   1993 2001 2047 2050 2082 2093 2100 2106 2116 2155 2158 2182 2245 2286 2296
   2301 2325 2348 2425 2428 2443 2515 2521 2566 2574 2575 2581 2598 2609 2611
   2624 2643 2668 2749 2771 2774 2782 2824 2835 2845 2853 2906 2987 3014 3024
   3027 3053)
  () -1 0)
 (2285 uniq "( pen ua ; move 3 , 3 / ul ; move 7 , 2 ) "
  (1662 1716 1795 1823 1829 1840 1886 1939 1990 2013 2064 2149 2210 2244 2316
   2326 2365 2369 2464 2538 2557 2597 2638 2822 2935 2941 2951 2960 2976
   3028)
  () -1 0)
 (2286 uniq "( pen 3 ; move 4 + 3 , 3 / ua ; move 4 , 4 ) "
  (853 1851 1868 1875 1912 1921 1944 1953 1989 1999 2014 2052 2053 2054 2078
   2081 2110 2125 2127 2142 2167 2169 2205 2229 2243 2275 2277 2284 2302 2323
   2368 2444 2494 2503 2525 2534 2582 2633 2784 2804 2811 2868 2877 2899 2905
   2916 2923 2988 3059 3089)
  () -1 0)
 (2287 equiv "( pen 4 + 2 ; move 2 - ua , ua ; move ul , ul ) "
  (1961 2008 2029 2186 2615 2838 2918 3079) () 2615 1)
 (2288 uniq "( move 4 , ua + pen ua ; move 2 , 4 ) "
  (285 335 358 1701 1923 2079 2134 2679 2710 3011 3078) (1983) -1 0)
 (2289 uniq "( pen ua ; move ua - 2 , ua + 3 ; move 3 , 4 ) " (818 2155) ()
  -1 0)
 (2290 uniq "( pen 2 ; move 4 , 3 / 2 ; move 3 , 2 ) "
  (430 1756 1795 1929 1963 1990 2060 2190 2206 2260 2316 2358 2369 2446 2480
   2482 2638 2689 2701 2750 2751 2944 2970)
  () -1 0)
 (2291 uniq "( move 0 - ua , ua ; move ua , 2 ) "
  (84 183 223 227 274 275 278 1653 1741 1962 2262 2585) () -1 0)
 (2292 uniq "( move ua , 3 ; pen ua ; move 0 - 2 , ul ) "
  (492 1924 2046 2336 2450 2586) () -1 0)
 (2293 uniq "( move ua , ul ; pen 5 ; move 2 , ul ) "
  (283 288 308 329 335 1725 1745 1748 1759 1783 1786 1856 1913 1945 1950 1971
   1974 1980 2023 2032 2097 2134 2154 2202 2217 2230 2281 2320 2324 2327 2338
   2344 2423 2496 2497 2499 2706 2707 2776 2802 2806 2833)
  (654 719 2032) -1 0)
 (2294 uniq "( pen 4 ; move ua , ua - ul ; move 3 , ul + ul ) " (1049 2057)
  () -1 0)
 (2295 uniq "( pen 4 ; move ul - ua , ul ; move 2 , ul ) "
  (517 670 1676 1817 1852 1861 1881 1927 1987 2040 2049 2069 2070 2107 2165
   2176 2239 2241 2257 2270 2307 2331 2379 2406 2433 2439 2453 2467 2510 2548
   2573 2601 2613 2614 2658 2663 2674 2682 2705 2717 2727 2733 2746 2816 2837
   2843 2852 2945 2967 2982 3005 3038 3055 3074)
  () -1 0)
 (2296 uniq "( pen 3 ; move ua , 2 ; move 3 , 4 ) "
  (18 269 293 296 322 326 361 1656 1664 1707 1728 1760 1767 1776 1788 1798
   1813 1879 1972 1993 2001 2047 2058 2082 2095 2111 2114 2155 2181 2189 2284
   2378 2443 2542 2566 2609 2611 2624 2643 2670 2715 2729 2730 2756 2771 2777
   2835 2845 2865 2880 2911 2943 2991 3007 3014)
  () -1 1)
 (2297 uniq "( pen ua ; move 2 , 4 / 4 ; move ua , ul ) "
  (724 1655 1694 1716 1752 1829 1882 1886 1933 1952 1978 2066 2083 2197 2228
   2236 2252 2261 2279 2298 2334 2335 2365 2402 2404 2422 2424 2474 2500 2502
   2583 2617 2625 2636 2647 2650 2673 2697 2721 2742 2745 2763 2780 2817 2820
   2826 2827 2889 2907 2909 2924 2940 2960 2976 3037)
  (1011) -1 0)
 (2298 uniq "( pen ua ; move 2 , ul / 3 ; move ua , 4 ) "
  (466 573 724 1688 1715 1750 1803 1823 1882 1936 1946 1952 1960 2031 2064
   2066 2072 2096 2149 2190 2210 2219 2228 2236 2261 2279 2297 2332 2334 2376
   2393 2402 2427 2500 2502 2508 2535 2538 2583 2593 2620 2622 2673 2696 2721
   2742 2763 2820 2826 2828 2872 2889 2894 2909 2939 2948 3062 3068 3072
   3087)
  () -1 0)
 (2299 uniq "( move ua , ul + 3 ; pen 3 ; move ua , ua / 4 ) "
  (202 939 1885 1920 2022 2327 2460 2469 2531 2576 2698 2957 2971 2984) () -1
  0)
 (2300 uniq "( pen ua ; move ua - ul , 9 ; move ul , ul ) "
  (542 678 685 1671 1680 1687 1688 1697 1738 1749 1769 1791 1833 1881 1897
   1901 1911 1919 2037 2075 2224 2239 2242 2321 2345 2352 2417 2447 2461 2483
   2490 2616 2641 2660 2718 2791 2847 2925 2979)
  () -1 1)
 (2301 equiv "( pen ua ; move 3 , ua ; move ul , 2 ) "
  (295 319 320 322 326 327 331 338 350 351 356 364 385 836 1683 1705 1707
   1731 1735 1772 1784 1789 1805 1812 1828 1830 1860 1864 1928 1959 1967 1976
   2011 2038 2044 2050 2086 2093 2100 2106 2116 2155 2158 2180 2182 2185 2209
   2245 2284 2329 2347 2357 2372 2391 2425 2428 2431 2488 2515 2519 2521 2575
   2598 2602 2623 2624 2643 2668 2670 2690 2722 2741 2749 2782 2787 2825 2829
   2853 2904 2922 2927 2943 2987 2991 3027 3053)
  () 2391 0)
 (2302 uniq "( pen 3 ; move 0 + 3 , 3 / ua ; move 2 , 4 ) "
  (853 1868 1921 1944 2052 2053 2127 2167 2226 2229 2277 2286 2368 2444 2582
   2633 2877 3059)
  () -1 0)
 (2303 uniq "( pen ua ; move 4 + ul , ua ; ul ; move 3 , 2 ) " (295) () -1 0)
 (2304 uniq "( move 3 , 0 ; pen ua ; move ua , 2 ) "
  (50 267 283 291 294 297 328 334 358 362 1725 1727 1786 1825 1855 1899 1913
   1932 1934 1971 1974 1980 1991 1997 2048 2097 2132 2201 2230 2281 2317 2349
   2350 2356 2409 2423 2426 2430 2441 2496 2497 2560 2577 2604 2649 2675 2699
   2703 2707 2710 2731 2759 2776 2802 2806 2810 2833 2858 2860 2902 2919 2983
   3022)
  () -1 0)
 (2305 uniq "( move ua , ul / ua ; move 2 , 2 ; move 4 , ul ) "
  (870 1787 2414 2524 2975 3048) () -1 0)
 (2306 uniq "( pen 3 ; move ua , ua - 4 ) "
  (64 65 70 72 73 75 76 81 82 98 112 1709 1758 1837 1903 1943 2160 2213 2232
   2328)
  () -1 0)
 (2307 uniq "( pen ua ; move ul - ua , 0 ; move 3 , ul ) "
  (101 670 685 1676 1687 1817 1852 1897 1901 1927 1987 2043 2069 2070 2107
   2165 2176 2239 2241 2242 2257 2270 2295 2331 2352 2379 2387 2433 2453 2467
   2510 2548 2573 2601 2614 2658 2663 2674 2682 2705 2717 2727 2733 2746 2816
   2837 2843 2847 2945 2967 2982 2992 3005 3017 3038 3055 3074 3076)
  (2270) -1 1)
 (2308 uniq "( move ua + ul , ua * pen 4 ; move ua , 4 * 2 ) "
  (915 1661 2468 2631 2755) () -1 0)
 (2309 uniq "( move ua , 4 / 3 ; move ua , 9 ; move 4 , 2 ) "
  (729 1724 1737 2359 2512 2797 2805 2980 2990) () -1 0)
 (2310 uniq "( move 4 , 3 + ul ; pen ua + ul ; move 4 , 4 ) "
  (1701 1802 2000 2366 2384 2541 2592 2666 2920 3000) () -1 0)
 (2311 uniq "( pen ua ; move 2 , 0 / 4 ; move ua , 2 / 4 ) "
  (849 1773 1774 2021 2074 2267 2451) () -1 0)
 (2312 uniq "( move 4 , 2 ; pen 3 ; move 3 , 2 ) "
  (231 272 291 297 1836 1899 1917 1964 1977 1997 2025 2097 2132 2217 2253
   2320 2350 2355 2386 2409 2560 2577 2675 2902 2983 3061 3084)
  () -1 1)
 (2313 uniq "( pen ua ; move 2 , 7 ; move 4 , ul ) "
  (271 293 320 331 333 338 348 356 364 385 1657 1673 1674 1675 1683 1685 1717
   1722 1729 1731 1735 1772 1776 1778 1779 1784 1789 1798 1800 1805 1809 1812
   1813 1816 1828 1860 1865 1876 1959 1967 1972 1976 1979 1993 1996 2009 2038
   2044 2050 2058 2082 2086 2093 2100 2106 2116 2158 2166 2177 2180 2182 2185
   2209 2231 2325 2329 2348 2372 2412 2428 2443 2448 2458 2488 2506 2515 2519
   2521 2566 2574 2598 2602 2619 2668 2690 2715 2722 2729 2741 2749 2774 2782
   2793 2798 2800 2835 2845 2853 2856 2865 2904 2911 2922 2943 2959 3014 3024
   3033 3053 3075 3091)
  () -1 0)
 (2314 uniq "( move ua - ul , ul ; pen 4 ; move 4 , ul ) "
  (60 93 696 702 1686 1695 1736 1759 2148 2238 2708 2938 3046) () -1 0)
 (2315 uniq "( pen 3 ; move ua , 3 / 4 ; move ul , ul ) "
  (1671 1688 1690 1694 1696 1733 1746 1761 1832 1845 1904 1978 2059 2083 2123
   2175 2207 2252 2279 2337 2424 2489 2583 2650 2662 2697 2745 2751 2817 2827
   2832 2874 2921 2977 3037 3043 3057 3069)
  () -1 0)
 (2316 uniq "( pen ua ; move 4 , 3 / 2 ; move ul , 2 ) "
  (430 1671 1694 1750 1756 1761 1795 1904 1929 1963 1990 1998 2013 2031 2060
   2096 2121 2163 2190 2200 2206 2207 2210 2260 2285 2290 2369 2401 2422 2446
   2464 2480 2482 2638 2689 2701 2750 2812 2817 2935 2949 2960 2970 2976)
  () -1 0)
 (2317 uniq "( move 3 , ul ; pen ua ; move ua , 2 ) "
  (50 291 294 297 308 329 334 335 358 362 1725 1727 1786 1825 1855 1899 1922
   1932 1964 1971 1974 1980 1991 1997 2025 2032 2048 2097 2132 2202 2230 2281
   2304 2327 2344 2349 2350 2356 2386 2409 2423 2426 2430 2441 2496 2497 2499
   2560 2577 2604 2649 2675 2699 2703 2706 2707 2731 2776 2802 2806 2810 2833
   2858 2860 2902 2919 2983 3022)
  () -1 1)
 (2318 uniq "( move 3 , ul / 3 ; move ua , 4 ; move ua , 3 ) "
  (1737 1902 2360 2512 3006 3054) () -1 0)
 (2319 uniq "( move ua + 3 , 2 / 4 ; pen ua ; move ul , ul ) "
  (1054 1870 1945 1995 2019) () -1 0)
 (2320 uniq "( move ua , 2 ; pen 3 ; move ua , ul ) "
  (87 272 288 291 297 304 305 334 358 1727 1745 1748 1759 1783 1804 1856 1913
   1917 1945 1950 1964 1974 1977 1980 1991 2023 2032 2048 2051 2097 2132 2154
   2202 2217 2253 2268 2281 2293 2312 2324 2327 2338 2349 2350 2356 2375 2409
   2423 2430 2441 2556 2577 2649 2675 2699 2707 2776 2802 2810 2876 2902)
  () -1 0)
 (2321 equiv "( pen ua ; move ua + ul , ul ; move 2 , ul ) "
  (542 582 678 685 1680 1687 1697 1702 1703 1738 1749 1769 1770 1791 1800
   1833 1852 1869 1881 1897 1909 1911 1915 1919 1931 1955 2020 2037 2075 2099
   2103 2159 2173 2224 2242 2274 2300 2330 2331 2345 2380 2417 2424 2447 2454
   2461 2472 2489 2490 2549 2616 2637 2648 2658 2660 2683 2718 2746 2791 2837
   2847 2915 2925 2952 2979 2982 3019 3040 3088)
  () 2746 0)
 (2322 uniq "( pen 3 ; move 4 , 0 ; move ul , ul ) "
  (270 271 292 293 302 303 320 333 336 338 342 348 364 385 1045 1130 1673
   1675 1717 1720 1728 1760 1772 1778 1784 1788 1812 1831 1865 1879 2038 2047
   2082 2086 2158 2166 2180 2181 2185 2231 2325 2348 2372 2378 2391 2443 2506
   2542 2566 2567 2574 2581 2584 2619 2729 2756 2800 2829 2845 2870 2880 2987
   3014 3024 3033 3075 3091)
  (1045) -1 0)
 (2323 uniq "( pen 3 ; move 4 + 4 , 2 / ua ; move ua , 4 ) "
  (853 1851 1868 1875 1912 1921 1944 1953 1989 1999 2014 2052 2053 2054 2078
   2081 2085 2110 2125 2127 2142 2161 2167 2169 2194 2205 2226 2229 2275 2277
   2286 2368 2381 2383 2444 2494 2503 2513 2525 2526 2534 2559 2582 2789 2804
   2811 2877 2890 2899 2905 2916 2923 2988 3009 3059 3089)
  () -1 0)
 (2324 uniq "( move ua , 3 ; pen 7 ; move 4 , ul ) "
  (288 304 305 308 328 1681 1727 1745 1748 1759 1783 1786 1836 1855 1856 1895
   1913 1923 1945 1950 1974 1977 1991 2023 2026 2032 2154 2202 2217 2220 2230
   2253 2268 2293 2320 2338 2344 2426 2496 2560 2703 2706 2736 2776 2895)
  (1856) -1 0)
 (2325 uniq "( pen 3 ; move 2 , 0 ; move 4 , ul ) "
  (270 271 292 293 303 320 336 348 356 1673 1674 1675 1685 1717 1722 1728
   1729 1772 1778 1779 1788 1805 1809 1812 1813 1831 1865 1876 1879 1979 2009
   2047 2082 2086 2093 2106 2158 2177 2180 2181 2182 2185 2231 2284 2313 2322
   2329 2348 2372 2378 2412 2443 2448 2458 2488 2506 2515 2542 2566 2567 2574
   2575 2581 2611 2668 2729 2756 2774 2782 2798 2800 2845 2853 2856 2865 2880
   2911 2959 2987 3014 3024 3033 3075 3091)
  (1717) -1 0)
 (2326 uniq "( pen ua ; move ua , 3 + ul ; move 4 , 2 ) "
  (54 68 567 629 1684 1706 1738 1761 1789 1834 1845 1869 1886 1916 1930 1946
   1967 2121 2208 2285 2364 2393 2518 2562 2735 2757 2935 3067)
  () -1 0)
 (2327 uniq "( move ua , ul ; pen 3 ; move ua , 4 ) "
  (89 288 297 362 1668 1672 1759 1786 1804 1820 1917 1920 1964 1971 1974 1980
   1991 2032 2048 2051 2097 2202 2253 2281 2293 2299 2317 2320 2349 2350 2356
   2375 2409 2430 2441 2499 2531 2556 2649 2675 2679 2706 2707 2725 2731 2759
   2776 2802 2858)
  () -1 0)
 (2328 uniq "( pen ua ; move 3 , ul ; move ua , ua - 4 ) "
  (616 669 1658 1659 1699 1837 2035 2042 2112 2137 2160 2272 2306 2382 2398
   2425 2656 3090)
  () -1 0)
 (2329 uniq "( pen ua ; move 2 , ul ; move 4 , 2 ) "
  (13 17 269 290 295 322 331 332 356 364 1656 1664 1673 1674 1685 1691 1707
   1717 1722 1729 1731 1772 1778 1779 1788 1789 1798 1800 1805 1809 1813 1830
   1864 1865 1876 1925 1928 1967 1979 1993 2009 2044 2082 2093 2095 2100 2106
   2111 2116 2158 2166 2177 2182 2231 2245 2301 2313 2325 2347 2357 2391 2412
   2425 2428 2431 2448 2458 2488 2506 2515 2521 2535 2611 2623 2668 2670 2715
   2741 2749 2782 2787 2825 2829 2835 2853 2856 2904 2911 2927 2991 3027 3033
   3053 3075)
  () -1 0)
 (2330 uniq "( pen ua ; move ua , ul - ul ; move 5 , ul ) "
  (584 641 1671 1687 1688 1706 1713 1726 1763 1803 1859 1866 1867 1869 1881
   1897 1916 2002 2020 2033 2034 2036 2039 2109 2131 2145 2216 2321 2380 2388
   2404 2417 2424 2427 2489 2490 2523 2562 2583 2646 2718 2728 2757 2765 2794
   2826 2872 2885 2889 2942 2969 2998 3037)
  () -1 0)
 (2331 uniq "( pen ua ; move ul + ua , 4 ; move 2 , ul ) "
  (592 670 1657 1676 1702 1817 1833 1852 1915 1927 1987 2037 2040 2107 2176
   2239 2241 2252 2257 2263 2270 2295 2307 2321 2379 2387 2433 2453 2467 2472
   2510 2573 2601 2614 2658 2663 2674 2682 2705 2717 2727 2733 2746 2816 2837
   2843 2891 2967 2982 3005 3017 3019 3038 3055 3074 3076)
  (2037) -1 1)
 (2332 uniq "( pen ua ; move 3 , ul / 0 ; move ua , 7 ) "
  (724 1750 1823 1829 1840 1882 1939 1952 1960 2031 2064 2072 2096 2146 2149
   2187 2190 2200 2210 2219 2228 2244 2261 2298 2365 2376 2388 2402 2404 2464
   2538 2557 2583 2593 2617 2620 2622 2673 2688 2693 2704 2721 2763 2801 2820
   2826 2828 2889 2940 2960 2986)
  () -1 0)
 (2333 equiv "( pen 4 + ul ; move ua / 3 , 4 ; move 0 - 2 , 2 ) "
  (1115 1677 1751 2077 2456 2836 3035) () 2836 0)
 (2334 uniq "( pen ua ; move 2 , ul / 3 ; move 2 , ul ) "
  (641 724 1655 1671 1688 1713 1726 1752 1866 1867 1882 1919 1933 1979 2031
   2034 2060 2064 2066 2067 2072 2083 2123 2149 2187 2197 2200 2216 2219 2227
   2236 2252 2261 2279 2297 2298 2335 2380 2388 2393 2402 2404 2422 2424 2427
   2458 2473 2474 2480 2489 2500 2502 2508 2523 2535 2538 2583 2593 2625 2636
   2647 2650 2673 2681 2688 2693 2697 2721 2742 2761 2773 2794 2817 2820 2821
   2826 2869 2872 2882 2889 2894 2907 2909 2973 2986 3037 3062 3068 3087)
  () -1 0)
 (2335 uniq "( pen ua ; move 2 , ua / 2 ; move 4 , ul ) "
  (512 641 653 1655 1671 1726 1746 1752 1827 1832 1867 1904 1978 2034 2072
   2087 2109 2121 2187 2204 2236 2252 2260 2261 2279 2297 2334 2387 2388 2422
   2473 2474 2480 2500 2502 2535 2625 2689 2693 2696 2742 2751 2761 2773 2820
   2869 2872 2901 2909 2924 2935 2948 2960 2973 2977 2986 2998 3034 3062
   3068)
  () -1 1)
 (2336 uniq "( move ua , 3 ; pen ua ; move ul - 2 , ul ) "
  (492 719 1924 2006 2046 2292 2465 2586 2914 2956) () -1 0)
 (2337 uniq "( pen 2 ; move ua , ul / 4 ; move 4 , ul ) "
  (60 93 641 656 1655 1671 1688 1694 1726 1733 1746 1827 1832 1845 1867 1958
   1978 2034 2066 2067 2072 2083 2087 2115 2123 2187 2197 2207 2227 2228 2236
   2252 2315 2364 2380 2393 2402 2404 2424 2427 2489 2502 2523 2583 2616 2617
   2625 2636 2650 2676 2681 2697 2732 2745 2751 2821 2826 2828 2869 2872 2889
   2901 2907 2921 2973 2986 3037 3042 3057 3069)
  () -1 0)
 (2338 uniq "( move ua , 2 ; pen 4 ; move 4 , ul ) "
  (55 60 272 288 305 308 328 1681 1727 1745 1748 1759 1783 1786 1855 1856
   1895 1913 1917 1923 1945 1950 1974 1977 2023 2026 2032 2132 2154 2202 2217
   2220 2238 2253 2268 2293 2320 2324 2344 2423 2426 2577 2703 2706 2736 2776
   2810 2895 2902 3061)
  (569) -1 1)
 (2339 uniq "( move 4 + ul , 0 ; move ua - ul , ul ) " (480 1693 2122)
  (480 1149 1693) -1 0)
 (2340 uniq "( pen ua ; ( move 4 , 2 ; move ul , ul ) ; move 2 , 3 + 0 ) "
  (1525) () -1 1)
 (2341 uniq "( move ua + ul , 2 ; move 4 , 4 ) "
  (192 195 198 391 2468 2522 2755 2978) (1091 2283) -1 0)
 (2342 uniq "( move 3 - 0 , ul ; pen 4 ; move 3 - ua , ul ) "
  (918 1682 1712 1822 2055 2563 2783 2892 3047) () -1 0)
 (2343 equiv "( pen ua ; move 3 , ul ; move 2 + 2 , 4 ) "
  (475 1740 1853 2382 2484 2530 2587 2781) () 2749 0)
 (2344 uniq "( move 2 , ul ; pen ua ; move 4 , ul ) "
  (285 305 308 328 329 334 335 358 362 1681 1725 1727 1745 1748 1759 1783
   1786 1825 1836 1855 1856 1895 1913 1923 1932 1934 1945 1971 1974 1977 1980
   1997 2023 2025 2026 2032 2134 2154 2202 2217 2220 2230 2268 2281 2293 2317
   2324 2338 2355 2375 2423 2426 2497 2499 2560 2577 2604 2699 2703 2706 2707
   2731 2736 2776 2802 2810 2833 2858 2860 2895 3061)
  () -1 0)
 (2345 equiv "( pen ua ; move ua + ul , 2 ; move 4 , ul ) "
  (55 543 582 641 678 685 1671 1680 1687 1702 1703 1726 1738 1769 1770 1791
   1813 1827 1832 1833 1867 1881 1897 1909 1911 1919 1931 1955 2034 2037 2075
   2099 2103 2159 2173 2224 2242 2263 2274 2300 2321 2387 2417 2454 2461 2490
   2549 2562 2616 2641 2648 2683 2718 2847 2869 2872 2915 2925 2946 2952 2986
   2998 3017 3019 3040 3088)
  () 2387 0)
 (2346 uniq "( move ua , 2 - ul ; move 2 , 4 ; move ua , 2 ) "
  (963 2120 2610 2831 2996) () -1 0)
 (2347 uniq "( pen ua ; move 3 , 4 ; move ul , 2 ) "
  (17 295 319 320 322 326 327 331 337 338 340 364 385 1657 1673 1683 1685
   1707 1731 1735 1789 1812 1828 1830 1860 1864 1928 1959 1967 1976 2011 2038
   2044 2050 2086 2093 2106 2116 2158 2180 2182 2185 2209 2245 2301 2329 2357
   2372 2391 2425 2428 2431 2488 2515 2519 2521 2598 2602 2619 2623 2624 2668
   2670 2722 2741 2749 2782 2787 2825 2829 2853 2904 2922 2927 2943 2991 3027
   3053)
  () -1 1)
 (2348 uniq "( pen 3 ; move ul , 3 ; move 4 , ul ) "
  (271 292 293 303 332 336 348 356 357 1673 1685 1690 1717 1722 1728 1729
   1767 1772 1778 1779 1788 1789 1809 1813 1816 1831 1876 1879 1976 1979 1993
   2001 2009 2047 2082 2093 2106 2158 2177 2181 2182 2231 2284 2313 2322 2325
   2378 2412 2428 2443 2506 2515 2566 2574 2575 2581 2611 2668 2729 2756 2774
   2782 2798 2845 2865 2880 2987 3014 3024 3033 3075)
  (1533) -1 0)
 (2349 uniq "( move ua , 0 ; pen ua ; move ua , 4 ) "
  (46 88 283 288 291 294 328 334 358 362 1672 1745 1748 1783 1786 1804 1825
   1855 1856 1913 1917 1934 1945 1971 1974 1980 1991 2023 2032 2048 2051 2079
   2097 2132 2154 2202 2217 2281 2304 2317 2320 2327 2350 2356 2409 2430 2441
   2496 2499 2556 2577 2591 2649 2675 2679 2699 2706 2707 2710 2725 2731 2759
   2776 2802 2806 2810 2858 2876 2902 2919 2983 3078)
  (564) -1 0)
 (2350 uniq "( move ua , 0 ; pen 3 ; move ua , 2 ) "
  (44 48 283 288 291 297 1786 1804 1855 1913 1917 1964 1971 1974 1991 2048
   2051 2097 2132 2253 2281 2304 2312 2317 2320 2327 2349 2356 2375 2409 2430
   2441 2496 2649 2675 2759 2776 2802 2806 2902 2919)
  () -1 0)
 (2351 uniq "( move ua , 2 - 3 ; move ul , ul ; move ua , ul ) "
  (963 965 1949 2133 2249 2280 2507 2544 2580 2684 2831 2875 2888 2975 2981
   3010)
  () -1 0)
 (2352 uniq "( pen ua ; move ua - ul , 0 ; move 3 , 4 ) "
  (106 497 542 685 1680 1687 1697 1738 1749 1769 1770 1791 1881 1897 1901
   1911 1919 1955 2075 2224 2242 2300 2307 2417 2447 2454 2461 2483 2490 2549
   2616 2641 2660 2663 2718 2847 2952 2979 3077)
  () -1 0)
 (2353 uniq "( pen ua ; move 3 , ua ; move 4 , 4 * 2 ) "
  (418 1985 2007 2015 2092 2438 2485 2521 2540 2653 3070) () -1 0)
 (2354 equiv "( move 3 , 4 ; pen ua + ul ; move ua , 2 ) "
  (50 637 1956 1975 2478 2527 2808 2840 2919 3004) () 2919 0)
 (2355 uniq "( move 4 , 7 ; pen ua ; move 3 , ul ) "
  (231 267 272 294 304 328 329 334 335 358 1681 1725 1727 1745 1748 1783 1825
   1836 1856 1895 1899 1913 1923 1932 1934 1945 1950 1974 1977 1980 1997 2003
   2023 2026 2032 2079 2134 2154 2202 2217 2220 2230 2268 2312 2344 2386 2423
   2426 2560 2577 2679 2699 2703 2707 2710 2736 2759 2776 2810 2833 2902 2983
   3011 3061 3084)
  () -1 0)
 (2356 uniq "( move ua , 0 ; pen ua ; move ua , 2 ) "
  (44 84 283 288 291 294 297 328 334 358 362 1672 1745 1748 1783 1786 1804
   1825 1855 1856 1899 1913 1917 1934 1945 1971 1974 1980 1982 1991 1997 2023
   2032 2048 2097 2132 2154 2156 2202 2217 2253 2281 2304 2317 2320 2327 2349
   2350 2409 2430 2441 2496 2497 2499 2560 2577 2604 2649 2675 2679 2699 2706
   2707 2710 2759 2776 2802 2806 2810 2858 2876 2902 2919 3022 3032)
  (995 1510 1956 1982 2048) -1 2)
 (2357 uniq "( pen ua ; move ua , ua ; move ua , 2 ) "
  (84 269 295 296 316 319 320 322 325 326 332 333 336 337 348 350 351 356 361
   385 669 1656 1657 1664 1674 1675 1683 1685 1691 1705 1707 1722 1728 1729
   1731 1735 1767 1772 1776 1778 1779 1784 1788 1789 1798 1800 1805 1809 1812
   1813 1816 1828 1830 1860 1864 1865 1925 1928 1959 1967 1972 1976 1996 2011
   2038 2044 2050 2058 2093 2095 2100 2111 2116 2155 2189 2245 2301 2329 2347
   2391 2425 2428 2431 2488 2521 2598 2602 2609 2611 2623 2624 2640 2643 2651
   2670 2690 2787 2793 2825 2829 2835 2870 2904 2991 3007 3027 3053 3070
   3091)
  (1916) -1 0)
 (2358 uniq "( pen 3 ; move 4 , 3 / ua ; move 3 , 4 ) "
  (430 1690 1756 1960 2041 2127 2161 2290 2369 2445 2446 2638 2652 2667 2686
   2689 2701 2824 2871 2898 2939 2948 2970 2977 3003 3072)
  (2127) -1 0)
 (2359 uniq "( move ua , 4 / 3 ; move ua , 4 ; move ul , 2 ) "
  (729 1724 1737 2309 2512 2797 2805 2980 2990) () -1 0)
 (2360 uniq "( move ua , 3 / ua ; move ua , 4 ; move ua , 3 ) "
  (2318 2990 3054) () -1 0)
 (2361 uniq "( move ua , 4 + ul ; move 3 , 4 ; move ua , ul ) " (963) () -1
  0)
 (2362 uniq "( pen 4 ; move ua , 3 - 2 ; move 4 - ul , ul / ua ) "
  (1135 1760 2179 2235) () -1 0)
 (2363 uniq "( move ua , ua ; move ul , 3 ; move ua , 2 ) "
  (47 48 84 85 523 601 602 662 1818 2061 2102 2105 2269 2476 2528 2564 2815
   2857 2881 2883 2910 2936 3081)
  () -1 1)
 (2364 uniq "( pen ua ; move ua , ul / ua ; move 4 , 2 ) "
  (54 114 641 653 656 724 1655 1671 1688 1726 1738 1750 1803 1823 1827 1832
   1867 1869 1882 1886 1916 1930 1933 1946 1967 1978 1998 2013 2031 2034 2036
   2039 2060 2064 2067 2072 2087 2096 2115 2121 2149 2163 2175 2187 2190 2207
   2210 2219 2222 2228 2236 2244 2326 2337 2369 2376 2380 2393 2401 2424 2427
   2502 2508 2523 2535 2538 2562 2583 2593 2620 2622 2638 2641 2673 2676 2696
   2812 2826 2827 2869 2872 2885 2889 2894 2917 2921 2935 2939 2940 2948 2949
   2969 2973 2986 3003 3034 3037 3042 3062 3067)
  () -1 0)
 (2365 uniq "( pen ua ; move 3 , ua / 4 ; move ua , 2 ) "
  (50 1750 1823 1829 1840 1882 1886 1939 1952 1990 2013 2031 2064 2067 2096
   2146 2149 2190 2206 2207 2210 2228 2244 2252 2260 2261 2279 2285 2297 2332
   2402 2404 2462 2464 2498 2505 2538 2557 2583 2593 2597 2617 2620 2704 2721
   2742 2761 2763 2773 2801 2822 2828 2832 2834 2909 2924 2940 2942 2960 2976
   3028 3043)
  () -1 0)
 (2366 equiv "( move 4 , 0 + ul ; pen ua + ul ; move 2 , 4 ) "
  (922 1701 1802 2000 2310 2541 2592 2710 2866 2920) () 2866 0)
 (2367 uniq "( move 4 , ua / 3 ; pen ua * 2 ; move 2 , ul ) "
  (950 2134 2250 2532) () -1 0)
 (2368 uniq "( pen 3 ; move 4 + 5 , 2 / ua ; move 2 , 4 ) "
  (853 1851 1868 1875 1912 1921 1944 1953 1989 1999 2014 2052 2053 2054 2078
   2081 2085 2110 2125 2127 2142 2167 2169 2205 2226 2229 2275 2277 2286 2302
   2323 2381 2444 2494 2503 2513 2525 2526 2534 2582 2626 2713 2789 2804 2811
   2877 2899 2905 2908 2916 2923 2988 3059 3089)
  () -1 0)
 (2369 uniq "( pen ua ; move 4 , 3 / ua ; move ul , 2 ) "
  (430 653 1694 1756 1795 1904 1990 1998 2013 2031 2036 2041 2060 2096 2163
   2175 2190 2206 2207 2222 2244 2260 2285 2290 2316 2358 2364 2370 2401 2464
   2482 2535 2638 2689 2817 2827 2884 2894 2935 2939 2948 2949 2970 2976
   3067)
  () -1 1)
 (2370 equiv "( pen 9 ; move ul , 3 / ua ; move ua , 2 ) "
  (105 653 724 1690 1795 2013 2041 2096 2104 2244 2369 2385 2482 2630 2638
   2884 2935 2970 2976)
  () 2884 0)
 (2371 uniq "( move ua - ul , ua ; pen ua * 2 ; move ua , 4 - 2 ) "
  (1262 2048) () -1 0)
 (2372 uniq "( pen ua ; move 3 , 0 ; move 7 , ul ) "
  (270 271 292 293 303 319 320 327 331 333 338 348 356 364 385 1657 1673 1674
   1675 1683 1685 1722 1729 1731 1735 1772 1776 1778 1779 1784 1798 1800 1805
   1809 1812 1813 1816 1828 1831 1860 1865 1876 1928 1959 1972 1976 1979 1996
   2038 2044 2047 2050 2058 2086 2093 2106 2150 2158 2166 2177 2180 2182 2185
   2209 2231 2245 2301 2313 2322 2325 2347 2391 2412 2425 2428 2431 2448 2458
   2488 2506 2515 2519 2521 2542 2566 2567 2574 2581 2598 2602 2619 2623 2668
   2670 2690 2722 2741 2749 2774 2782 2787 2793 2800 2825 2829 2853 2911 2922
   2927 2943 2987 3024 3027 3033 3053 3075 3091)
  () -1 0)
 (2373 uniq "( pen ua + 4 ; move 3 , 5 ; move 4 , 5 ) "
  (1771 1799 1850 1871 1890 1894 1907 1957 2407 2533 2792 2807 2851) () -1 0)
 (2374 uniq "( move 7 , ua - 4 ; v0 = ua ; move v0 , 2 ) " (1033) () -1 0)
 (2375 uniq "( move 2 , ua ; pen 3 ; move ua , ul ) "
  (285 288 297 299 304 305 329 334 358 1783 1804 1917 1923 1934 1964 1974
   1980 2048 2051 2097 2134 2220 2268 2320 2327 2344 2350 2409 2577 2675 2699
   2707 2736 2776 2810 2858 2876 2895)
  () -1 0)
 (2376 uniq "( pen ua ; move 3 , ul / ua ; move 4 , 4 ) "
  (582 653 656 724 1662 1726 1823 1867 1960 2036 2064 2072 2096 2149 2187
   2210 2219 2222 2236 2244 2261 2298 2332 2364 2380 2388 2393 2402 2404 2502
   2508 2535 2538 2667 2673 2676 2688 2693 2696 2721 2749 2763 2824 2828 2869
   2872 2879 2894 2917 2935 2939 2941 2948 2949 2986 3003 3034 3042 3062 3067
   3068 3072)
  () -1 0)
 (2377 uniq "( move ua , 4 - 7 ; pen ua ; move ua , 4 ) "
  (57 88 558 1806 1820 2550 2632 2649 3020 3032) () -1 0)
 (2378 uniq "( pen 3 ; move 4 , 2 ; move ua , ul ) "
  (56 270 271 292 293 303 320 332 333 336 348 357 364 940 1673 1674 1683 1717
   1728 1731 1735 1760 1767 1772 1776 1784 1805 1809 1813 1828 1830 1831 1860
   1865 1879 1972 1976 2001 2047 2058 2082 2166 2181 2182 2185 2189 2231 2296
   2322 2325 2348 2443 2506 2566 2574 2581 2602 2619 2643 2651 2729 2730 2756
   2777 2793 2800 2819 2829 2845 2856 2865 2870 2880 2911 2943 2959 2987 3007
   3014 3033 3075 3091)
  (913) -1 0)
 (2379 uniq "( pen ua ; move ul - ua , 5 ; move 3 , ul ) "
  (101 670 685 1676 1680 1817 1852 1897 1901 1927 2043 2107 2165 2176 2239
   2241 2257 2270 2295 2307 2331 2387 2433 2453 2467 2510 2548 2573 2614 2658
   2663 2674 2682 2705 2717 2727 2733 2746 2816 2837 2843 2847 2945 2967 2982
   2992 3005 3017 3038 3055 3074 3076)
  () -1 0)
 (2380 uniq "( pen ua ; move ua , ul / ua ; move 2 , ul ) "
  (114 641 653 685 724 1655 1671 1680 1688 1694 1713 1726 1750 1763 1769 1791
   1800 1827 1832 1833 1866 1867 1869 1881 1904 1919 1926 1933 1978 1998 2020
   2034 2036 2037 2039 2060 2067 2072 2083 2087 2096 2123 2163 2187 2200 2207
   2219 2222 2227 2228 2236 2252 2261 2273 2321 2330 2334 2337 2364 2376 2388
   2393 2401 2402 2404 2424 2427 2445 2473 2480 2489 2500 2502 2508 2523 2535
   2538 2583 2593 2620 2622 2636 2647 2650 2673 2676 2681 2688 2693 2697 2721
   2728 2745 2761 2812 2817 2820 2821 2826 2827 2869 2872 2879 2889 2894 2907
   2921 2939 2949 2973 2986 3003 3034 3037 3057 3067 3069)
  () -1 0)
 (2381 uniq "( pen 3 ; move 4 + ul , 2 / ua ; move 2 , ul ) "
  (1851 1868 1875 1912 1921 1944 1953 1989 1999 2014 2052 2081 2110 2142 2243
   2323 2368 2445 2494 2513 2526 2626 2713 2784 2811 2877 2905 2908 3059
   3089)
  () -1 0)
 (2382 uniq "( pen ua ; move 3 , ul ; move ua + ul , 4 ) "
  (618 646 1740 2094 2137 2328 2343 2425 2587 2781) () -1 0)
 (2383 uniq "( pen 3 ; move ul + 3 , 2 + ua ; move ua , 4 ) "
  (853 1767 1851 1868 1944 1989 2052 2081 2229 2323 2444 3009) () -1 0)
 (2384 uniq "( move 3 , ua - ul ; pen ua + ul ; move 4 , 4 ) "
  (769 922 1701 2310 2666 2731 3000) () -1 0)
 (2385 uniq "( pen 4 ; move ul , 4 / ul ; move ua , 2 ) "
  (629 1684 1795 1823 1829 1840 1886 1929 1939 1952 2013 2041 2146 2370 2389
   2459 2482 2505 2597 2735 2744 2801 2884 2940 2976)
  (648) -1 0)
 (2386 uniq "( move 4 , ul ; pen 9 ; move 3 , 2 ) "
  (231 272 297 335 1786 1836 1895 1899 1964 1971 1997 2025 2097 2202 2281
   2312 2317 2355 2497 2560 2604 2902 3084)
  (1997) -1 0)
 (2387 uniq "( pen ua ; move ul + ua , 2 ; move 4 , ul ) "
  (55 592 670 1676 1703 1813 1817 1827 1833 1852 1927 1987 2040 2107 2176
   2239 2241 2257 2263 2270 2274 2307 2331 2335 2345 2379 2433 2461 2467 2472
   2510 2573 2601 2614 2658 2674 2682 2717 2733 2746 2816 2843 2925 2982 2992
   3017 3038 3040 3074 3076 3088)
  (2345) -1 0)
 (2388 uniq "( pen ua ; move 3 , ul / 2 ; move 5 , ul ) "
  (641 724 1671 1688 1716 1726 1750 1823 1827 1832 1867 1904 1990 2034 2036
   2060 2064 2072 2149 2187 2190 2197 2200 2210 2219 2227 2236 2261 2330 2332
   2334 2335 2376 2380 2401 2402 2404 2422 2424 2427 2473 2480 2500 2502 2523
   2538 2583 2617 2636 2647 2688 2689 2693 2704 2721 2732 2758 2761 2819 2820
   2821 2826 2869 2872 2879 2889 2901 2907 2960 2986 2998 3034 3037 3069)
  () -1 0)
 (2389 uniq "( pen 3 ; move 4 , 0 / ul ; move ua , 2 ) "
  (26 1795 1823 1829 1840 1886 1929 1939 1963 2031 2041 2096 2161 2190 2206
   2208 2244 2385 2429 2459 2462 2482 2498 2597 2652 2686 2744 2750 2757
   2819)
  () -1 0)
 (2390 uniq "( move 4 , 3 ; move ua + ul , 2 ) "
  (28 124 141 146 163 166 169 175 177 190 199 236 244 248 1670 1708 1719 1747
   1848 1954 2091 2124 2553 2654 2752)
  (878) -1 0)
 (2391 uniq "( pen ua ; move 3 , 0 ; move ul , 2 ) "
  (292 295 319 320 322 326 327 331 338 348 364 385 1675 1683 1707 1731 1735
   1778 1788 1789 1812 1828 1830 1860 1864 1865 1873 1928 1959 1967 1976 2011
   2038 2044 2050 2086 2093 2106 2116 2158 2180 2182 2185 2209 2245 2301 2322
   2329 2347 2357 2372 2425 2428 2431 2464 2488 2515 2519 2521 2598 2602 2623
   2624 2668 2670 2722 2741 2749 2782 2787 2800 2825 2829 2853 2904 2922 2927
   2943 2991 3024 3027 3053 3075 3091)
  (1873 2301) -1 1)
 (2392 uniq "( move ua , ua ; pen ua ; move 3 , ua - 2 ) "
  (47 681 1880 2152 2691) () -1 1)
 (2393 uniq "( pen ua ; move ua , ul / 3 ; move 4 , 2 ) "
  (42 54 641 656 1655 1671 1688 1713 1726 1738 1750 1789 1803 1823 1827 1832
   1867 1869 1882 1886 1916 1930 1946 1967 1978 1998 2031 2034 2036 2060 2064
   2067 2072 2075 2087 2096 2115 2121 2149 2163 2187 2190 2207 2210 2216 2222
   2228 2236 2298 2326 2334 2337 2364 2376 2380 2401 2424 2427 2500 2502 2508
   2523 2535 2538 2562 2583 2593 2620 2622 2641 2676 2681 2721 2765 2794 2812
   2820 2826 2869 2872 2885 2889 2894 2921 2935 2940 2949 2969 2973 2986 3037
   3042 3062 3067 3068)
  () -1 0)
 (2394 uniq "( move 7 , ul / ua ; pen 2 ; move ua , 2 ) "
  (579 1718 1743 1775 1942 1988 2403 2603 2716 3012 3013 3082) () -1 0)
 (2395 uniq "( move 3 , ul / 3 ; pen 4 + ul ; move ua , ul ) "
  (1053 1679 1878 2101 2168 2259 2669 2803 2809) (1878) -1 0)
 (2396 uniq "( move ua , 2 ; move ua + 3 , 4 ) "
  (52 124 141 142 163 166 169 173 182 189 190 194 199 209 236 1670 1708 1719
   1794 1838 1848 1889 1954 1969 2024 2091 2124 2470 2579 2654 2752)
  (1105) -1 0)
 (2397 equiv "( move 4 , 0 ; v2 = 2 ; move ul - ua , ul ) " (898 2218) ()
  2594 0)
 (2398 equiv "( pen ua ; move 3 , ul ; move ua , ua + 2 ) "
  (537 552 616 669 1658 1699 1765 1837 2035 2042 2092 2112 2137 2160 2328
   2431 2540 2551 2653 2656 2878 3090)
  () 2431 0)
 (2399 uniq "( move 4 , ul ; move 2 , ul ; move ua , 2 ) "
  (450 523 1711 1818 2102 2136 2157 2256 2269 2463 2481 2527 2528 2564 2570
   2572 2588 2702 2768 2857 2881 2883 2910 2912 2936 2950 2963 2972 3004 3018
   3081)
  () -1 0)
 (2400 uniq "( move ua , 9 ; move ua , 4 ) "
  (24 25 26 27 28 29 30 31 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
   84 85 86 87 88 89 90 91 92 93 1650 1666 1668 1719 1730 2045 2098 2191 2201
   2558)
  () -1 1)
 (2401 uniq "( pen ua ; move ua , ul / 2 ; move ul , 2 ) "
  (626 641 678 1671 1688 1694 1726 1750 1761 1803 1823 1827 1832 1867 1869
   1882 1886 1904 1916 1946 1963 1990 1998 2031 2034 2036 2060 2064 2067 2096
   2109 2115 2121 2149 2163 2175 2190 2200 2206 2207 2210 2222 2227 2228 2260
   2261 2273 2316 2364 2369 2380 2388 2393 2424 2427 2464 2473 2480 2508 2523
   2535 2538 2562 2583 2593 2620 2622 2676 2693 2704 2750 2812 2821 2826 2827
   2832 2869 2872 2885 2889 2894 2940 2949 2969 2986 3037 3067 3069 3077)
  () -1 0)
 (2402 uniq "( pen ua ; move 3 , ul / 4 ; move ua , ul ) "
  (641 656 724 1671 1688 1694 1716 1726 1731 1735 1750 1823 1829 1840 1867
   1882 1939 1958 1960 1978 2031 2034 2064 2066 2067 2072 2083 2096 2123 2146
   2149 2187 2190 2197 2207 2210 2219 2228 2236 2244 2252 2261 2279 2297 2298
   2332 2334 2337 2365 2376 2380 2388 2404 2424 2427 2462 2480 2498 2500 2502
   2505 2523 2538 2557 2583 2593 2617 2620 2622 2625 2636 2647 2650 2673 2688
   2693 2697 2704 2721 2732 2742 2745 2761 2763 2801 2817 2819 2820 2826 2828
   2869 2872 2879 2889 2907 2909 2924 2942 2960 2976 2986 3034 3037 3042
   3057)
  () -1 0)
 (2403 uniq "( move 2 , 4 / ua ; pen ua ; move ua , 2 ) "
  (579 1743 1775 1942 1982 1988 2394 2603 2716 2778 2850 3012 3013 3082) ()
  -1 0)
 (2404 uniq "( pen ua ; move 3 , ul / 4 ; move 5 , ul ) "
  (641 656 724 1671 1688 1694 1716 1726 1823 1867 1882 1958 1978 2034 2036
   2064 2066 2067 2072 2083 2123 2149 2187 2197 2207 2210 2219 2228 2236 2252
   2261 2279 2297 2330 2332 2334 2337 2365 2376 2380 2388 2402 2424 2427 2480
   2500 2502 2523 2538 2583 2617 2625 2636 2647 2650 2688 2693 2697 2721 2742
   2745 2761 2801 2817 2820 2826 2828 2869 2872 2879 2889 2907 2909 2960 2986
   3034 3037 3042)
  () -1 0)
 (2405 uniq "( pen ua ; move ul , 7 ; move ua - 2 , ul ) " (684 2514 2929) ()
  -1 0)
 (2406 uniq "( pen 4 ; move 5 - ua , 2 ; move 7 , ul ) "
  (1817 1861 2049 2069 2070 2107 2165 2295 2439 2573 2613 2816 2852 3038
   3074)
  () -1 0)
 (2407 equiv "( pen ua + 4 ; move 3 , 5 ; move 4 , ul ) "
  (624 1732 1771 1799 1811 1815 1849 1850 1871 1890 1894 1907 1957 2184 2373
   2533 2792 2807 2851)
  () 2851 0)
 (2408 uniq "( pen ua ; ( move ua , ua ; move 2 , ua - 3 ) ; move 5 , ul ) "
  (1596) () -1 0)
 (2409 uniq "( move ua , 5 ; pen 3 ; move ua , 2 ) "
  (48 288 291 297 1786 1804 1855 1917 1964 1971 1974 1991 2048 2051 2097 2132
   2191 2253 2281 2304 2312 2317 2320 2327 2349 2350 2356 2375 2430 2441 2496
   2649 2675 2776 2802 2806 2902 2919)
  () -1 0)
 (2410 uniq "( pen 4 * ul ; move 3 - ua , ua ; move 3 , ul ) "
  (847 1891 1961 2029 2186 2233 2421 2452 2509 2685) () -1 0)
 (2411 uniq "( pen ua ; move 4 , 0 ; move 0 - 3 , ul ) "
  (551 2514 2612 2635 2929) () -1 0)
 (2412 uniq "( pen ua ; move 2 , 3 ; move 4 , ul ) "
  (271 293 303 320 325 331 333 338 348 356 364 385 926 1657 1673 1674 1675
   1683 1685 1717 1722 1729 1731 1735 1752 1772 1776 1778 1779 1784 1789 1798
   1800 1805 1809 1812 1813 1816 1828 1860 1865 1876 1879 1959 1967 1972 1976
   1979 1993 1996 2009 2038 2050 2058 2082 2086 2093 2100 2106 2116 2158 2166
   2177 2180 2182 2185 2209 2231 2236 2313 2325 2329 2348 2372 2422 2428 2443
   2448 2458 2488 2506 2515 2519 2521 2566 2598 2602 2619 2623 2668 2677 2690
   2715 2722 2729 2741 2749 2774 2782 2793 2798 2800 2835 2845 2853 2856 2865
   2904 2911 2922 2943 2959 3014 3024 3033 3053 3075 3091)
  (1752) -1 1)
 (2413 uniq "( move ua + 0 , 2 ; pen 4 ; move 5 , ul ) " (2140 2238 2743) ()
  -1 0)
 (2414 uniq "( move ua , 2 / ua ; move 2 , 2 ; move ua , ul ) "
  (1787 2305 2524 2975 3048) () -1 0)
 (2415 uniq "( move ua , ua ; ( pen 2 ; move 4 , 5 ) ) "
  (482 2198 2571 2599 3092) () -1 0)
 (2416 uniq "( move 4 , 0 ; pen ua - ul ; move ul - ua , ul ) " (1050 2594)
  (1050) -1 1)
 (2417 uniq "( pen ua ; move ua + ul , ul ; move 3 , ul ) "
  (97 99 575 582 641 678 685 1680 1687 1702 1703 1713 1738 1769 1770 1791
   1798 1833 1881 1897 1901 1909 1911 1919 1931 1955 2037 2075 2099 2103 2159
   2173 2224 2242 2257 2274 2300 2321 2330 2345 2352 2427 2447 2454 2461 2483
   2490 2523 2549 2616 2637 2648 2658 2659 2683 2718 2746 2847 2915 2925 2952
   2979 3019 3037 3040 3076 3088)
  () -1 0)
 (2418 uniq "( move ua , 4 / 3 ; move ua , ua * ua ; ul ) " (1842 1947 2495)
  () -1 0)
 (2419 equiv "( move 4 , 3 + ul ; move ul , ul ; move ua , 2 ) " (874) ()
  2528 0)
 (2420 equiv "( move ua , ul ; pen ua + ul ; move 2 , 3 ) "
  (503 633 637 979 1704 1956 2478 2499 2606 2664 2795 2866) () 2499 0)
 (2421 uniq "( pen ua + ul ; move 3 - ua , ua ; move 5 , ul ) "
  (1961 2029 2186 2233 2410 2598 2605 2685 2747 2864 2918 3079) () -1 0)
 (2422 uniq "( pen ua ; move 2 , 3 / 2 ; move 4 , ul ) "
  (641 653 1655 1671 1690 1694 1726 1746 1752 1761 1827 1832 1845 1867 1904
   1978 1990 2034 2072 2083 2087 2104 2121 2187 2204 2236 2261 2279 2297 2316
   2334 2335 2388 2412 2473 2474 2480 2500 2502 2535 2625 2630 2689 2693 2696
   2742 2751 2817 2820 2869 2872 2901 2909 2935 2948 2960 2973 2977 2986 2998
   3034 3062 3068)
  () -1 0)
 (2423 uniq "( move 3 , 2 ; pen ua ; move 2 , ul ) "
  (267 272 283 285 288 291 305 308 328 329 334 335 358 925 1681 1725 1727
   1745 1748 1783 1825 1836 1856 1913 1923 1932 1934 1945 1974 1977 1980 2023
   2032 2079 2132 2134 2154 2202 2217 2220 2230 2268 2293 2304 2317 2320 2338
   2344 2355 2426 2496 2497 2499 2577 2604 2699 2703 2707 2710 2731 2776 2806
   2810 2833 2860 2902 2919 2983 3022 3061 3078)
  () -1 0)
 (2424 uniq "( pen ua ; move ua , ul / 4 ; move 2 , ul ) "
  (641 656 724 1655 1657 1671 1680 1688 1694 1713 1726 1750 1763 1769 1791
   1800 1827 1832 1833 1866 1867 1869 1881 1882 1904 1919 1933 1958 1978 2020
   2034 2036 2037 2060 2066 2067 2072 2083 2087 2123 2163 2187 2197 2200 2207
   2219 2222 2227 2228 2236 2252 2261 2273 2279 2297 2315 2321 2330 2334 2337
   2364 2380 2388 2393 2401 2402 2404 2427 2473 2480 2489 2500 2502 2508 2523
   2538 2583 2593 2616 2617 2620 2622 2625 2636 2647 2650 2681 2688 2693 2697
   2721 2728 2742 2745 2761 2812 2817 2820 2821 2826 2827 2869 2872 2874 2889
   2907 2909 2921 2973 2986 3003 3037 3042 3057 3069)
  (1910) -1 0)
 (2425 equiv "( pen ua ; move 3 , ul ; move ua , 4 ) "
  (290 292 303 319 320 325 327 331 332 333 337 338 348 351 357 361 364 1656
   1664 1674 1683 1691 1707 1731 1735 1767 1779 1798 1800 1805 1809 1828 1830
   1831 1860 1865 1876 1959 1967 1972 1976 1993 2001 2044 2047 2050 2086 2093
   2106 2108 2111 2150 2155 2158 2166 2180 2182 2189 2209 2245 2284 2301 2328
   2329 2347 2357 2372 2382 2391 2428 2431 2458 2515 2519 2521 2598 2602 2623
   2637 2640 2668 2715 2722 2741 2749 2782 2787 2793 2825 2829 2835 2853 2856
   2904 2906 2922 2927 2943 3027 3033 3053 3091)
  () 2906 0)
 (2426 uniq "( move 3 , 3 ; pen ua ; move 4 , ul ) "
  (267 291 304 305 308 328 329 334 335 358 864 1681 1725 1727 1745 1748 1759
   1783 1786 1825 1836 1855 1856 1895 1899 1913 1923 1932 1934 1945 1950 1974
   1977 1980 1991 2023 2026 2032 2134 2154 2202 2217 2220 2230 2253 2268 2304
   2317 2324 2338 2344 2355 2423 2496 2497 2560 2577 2604 2699 2703 2706 2707
   2731 2736 2776 2810 2833 2860 2895 2919 2983 3022 3061)
  () -1 0)
 (2427 uniq "( pen ua ; move ua , ul / 3 ; move 3 , ul ) "
  (641 685 724 1655 1671 1688 1694 1713 1716 1726 1750 1798 1803 1827 1832
   1859 1866 1867 1897 1904 1919 1933 1946 1978 2031 2033 2034 2036 2064 2067
   2072 2075 2083 2087 2123 2145 2149 2163 2187 2207 2216 2222 2227 2228 2236
   2252 2261 2298 2330 2334 2337 2364 2380 2388 2393 2401 2402 2404 2417 2424
   2473 2480 2489 2500 2502 2508 2523 2538 2583 2593 2620 2622 2636 2646 2647
   2681 2688 2689 2693 2697 2721 2745 2761 2765 2794 2820 2821 2826 2827 2847
   2869 2872 2889 2894 2907 2921 2973 2986 3037 3057 3062 3069 3077 3087)
  () -1 0)
 (2428 uniq "( pen ua ; move 3 , 3 ; move 4 , 2 ) "
  (17 269 295 303 319 320 322 325 327 331 338 356 1673 1683 1685 1707 1722
   1729 1731 1735 1772 1778 1779 1788 1789 1809 1813 1816 1828 1830 1860 1864
   1876 1928 1959 1967 1976 1979 1993 2007 2044 2050 2086 2093 2100 2106 2116
   2158 2177 2180 2182 2209 2231 2245 2284 2301 2313 2329 2347 2348 2357 2372
   2391 2412 2425 2431 2488 2506 2515 2519 2521 2566 2575 2598 2602 2611 2623
   2624 2651 2668 2670 2722 2741 2749 2774 2782 2787 2798 2825 2829 2835 2853
   2904 2922 2927 2943 2991 3024 3027 3033 3053 3075)
  () -1 0)
 (2429 uniq "( pen 3 ; move 4 , ul / 7 ; move ua , 2 ) "
  (1750 1795 1823 1882 1929 1960 1963 2031 2041 2045 2060 2064 2096 2146 2161
   2163 2190 2206 2208 2210 2228 2389 2462 2482 2498 2505 2593 2597 2620 2686
   2704 2726 2744 2750 2758 2801 2819 2826 2921 2949 3057 3072)
  () -1 0)
 (2430 uniq "( move ua , 9 ; pen ua ; move ua , 2 ) "
  (84 283 291 294 297 334 358 362 1672 1745 1748 1783 1786 1804 1855 1856
   1899 1913 1917 1945 1971 1974 1980 1991 1997 2023 2032 2048 2097 2132 2154
   2156 2202 2217 2253 2281 2304 2317 2320 2327 2349 2350 2356 2409 2441 2496
   2497 2499 2560 2577 2604 2649 2675 2679 2699 2706 2707 2759 2776 2802 2806
   2810 2858 2876 2902 2919 3022)
  () -1 1)
 (2431 uniq "( pen ua ; move 3 , ul ; move ua , 2 ) "
  (290 292 295 303 319 320 322 325 327 331 332 333 337 338 348 350 351 357
   361 364 1656 1664 1674 1683 1691 1707 1731 1735 1779 1789 1798 1800 1805
   1809 1823 1828 1829 1830 1831 1840 1860 1864 1865 1876 1925 1928 1939 1959
   1967 1972 1976 2001 2044 2047 2050 2064 2086 2093 2095 2106 2111 2116 2137
   2150 2158 2166 2180 2182 2189 2209 2210 2245 2301 2329 2347 2357 2372 2391
   2398 2425 2428 2458 2488 2515 2519 2521 2551 2598 2602 2611 2623 2624 2640
   2643 2651 2668 2670 2722 2741 2749 2782 2787 2793 2822 2825 2829 2853 2856
   2904 2906 2922 2927 2943 2991 3027 3033 3053 3091)
  (1823 2398) -1 2)
 (2432 uniq "( pen ua / ul ; move ua , 0 ; move 4 , 3 ) " (545 1744 1811) ()
  -1 0)
 (2433 uniq "( pen ua ; move ul - ua , 3 ; move 2 , ul ) "
  (101 670 1676 1680 1769 1791 1816 1817 1852 1881 1919 1927 1987 2040 2043
   2075 2107 2165 2176 2239 2241 2257 2270 2295 2307 2331 2379 2387 2453 2467
   2472 2510 2548 2573 2601 2613 2614 2658 2663 2674 2682 2705 2717 2727 2733
   2746 2761 2791 2816 2837 2843 2852 2891 2945 2967 2982 2992 3005 3017 3038
   3055 3074 3076)
  () -1 1)
 (2434 uniq "( pen ua ; move ua + ul + ul , ua ; move ua , ua - 4 ) "
  (1039 2272) () -1 0)
 (2435 uniq "( move ul , 3 ; move ua , 4 ; move 4 , 2 ) "
  (450 526 601 1711 1821 1863 2010 2896 3030) () -1 0)
 (2436 uniq "( pen 3 ; move ua , 9 ; move 2 - ul , ul ) "
  (2018 2555 2645 2880 3001) () -1 0)
 (2437 equiv "( pen 3 + 9 ; move 3 , 4 ; move 3 , ul ) "
  (1815 1850 1871 2184 2477 2851) () 2722 0)
 (2438 uniq "( pen ua ; move ua , 3 ; move 4 , 2 * 2 ) "
  (418 1789 1985 2007 2015 2092 2353 2958 3070) () -1 0)
 (2439 uniq "( pen 4 ; move 2 - ua , 7 ; move ua , ul ) "
  (670 1676 1861 1927 2040 2049 2069 2070 2165 2241 2295 2406 2573 2613 2682
   2733 2852 2945 3005)
  () -1 0)
 (2440 uniq "( pen ua - ul ; move 2 , 4 ; move 3 , ul ) "
  (721 1796 1815 1850 1898 2172 2199 2442 2501) (2172) -1 0)
 (2441 uniq "( move ua , 4 ; pen ua ; move ua , 2 ) "
  (84 283 291 294 297 313 334 358 362 995 1212 1650 1672 1725 1745 1748 1783
   1786 1804 1855 1856 1899 1913 1917 1932 1945 1971 1974 1980 1991 1997 2023
   2032 2048 2097 2132 2154 2156 2202 2217 2220 2253 2281 2304 2317 2320 2327
   2349 2350 2356 2409 2430 2496 2497 2499 2560 2577 2604 2649 2675 2679 2699
   2703 2706 2707 2759 2776 2802 2806 2810 2858 2876 2902 2919 3022)
  () -1 0)
 (2442 uniq "( pen ua - ul ; move 2 , 4 ; move 3 + 2 , ul ) "
  (845 899 1739 1796 1994 2172 2440) () -1 0)
 (2443 uniq "( pen 3 ; move ua , 4 ; move 4 , ul ) "
  (60 268 269 271 292 293 296 303 336 338 340 356 385 1657 1673 1675 1685
   1717 1720 1722 1728 1729 1733 1735 1760 1772 1776 1778 1779 1788 1789 1798
   1800 1812 1813 1816 1831 1876 1879 1967 1972 1996 2009 2038 2047 2058 2082
   2093 2100 2106 2114 2158 2181 2182 2209 2231 2284 2296 2313 2322 2325 2348
   2378 2412 2488 2506 2515 2542 2566 2567 2574 2575 2581 2609 2611 2619 2643
   2668 2722 2729 2730 2756 2774 2777 2782 2793 2798 2835 2845 2848 2865 2880
   2959 2987 2991 3007 3014 3024 3033 3071 3075)
  (1733) -1 0)
 (2444 uniq "( pen 3 ; move 3 + 3 , 2 / ua ; move ua , 4 ) "
  (853 1851 1868 1875 1912 1921 1944 1953 1989 1999 2014 2052 2081 2085 2110
   2125 2142 2167 2229 2275 2277 2286 2302 2323 2368 2383 2494 2526 2582 2667
   2789 2877 2916 3009)
  () -1 0)
 (2445 uniq "( pen 3 ; move 4 , 2 / ua ; move 2 , ul ) "
  (1690 1746 1926 1933 2123 2161 2204 2358 2380 2381 2489 2650 2652 2667 2686
   2687 2758 2817 2819 2824 2871 2879 2898 2907 2977 3003 3034)
  () -1 0)
 (2446 uniq "( pen 2 ; move 4 , 3 / 2 ; move 2 , 4 ) "
  (430 2060 2200 2260 2273 2290 2316 2358 2482 2689 2701 2751 2817 2821 2970
   3072)
  () -1 0)
 (2447 uniq "( pen ua ; move ua - ul , ul ; move 3 , 2 ) "
  (497 542 678 685 1680 1687 1697 1707 1738 1749 1769 1770 1791 1869 1881
   1897 1901 1911 1916 1919 1955 2075 2099 2103 2159 2173 2222 2224 2242 2257
   2300 2321 2352 2417 2454 2461 2483 2490 2549 2616 2641 2648 2660 2718 2847
   2915 2952 2979)
  () -1 0)
 (2448 uniq "( pen ua ; move 2 , 7 ; move 2 , ul ) "
  (320 331 333 338 348 356 364 385 1657 1664 1673 1674 1675 1683 1685 1705
   1717 1722 1728 1729 1731 1735 1772 1776 1778 1779 1784 1798 1800 1805 1809
   1812 1813 1816 1828 1860 1864 1865 1876 1879 1915 1928 1959 1972 1976 1979
   1996 2038 2044 2050 2058 2086 2093 2106 2158 2166 2177 2180 2181 2182 2185
   2209 2231 2245 2313 2325 2329 2372 2412 2458 2506 2515 2519 2567 2574 2581
   2598 2602 2619 2668 2690 2715 2722 2729 2730 2741 2756 2774 2782 2787 2793
   2800 2848 2856 2880 2904 2911 2922 2943 2959 2987 3019 3033 3053 3071 3075
   3091)
  () -1 0)
 (2449 uniq "( move 5 , 2 ; pen 3 + ul ; move 2 , ul ) "
  (569 633 1782 1965 2478 2664 2795 2808) () -1 0)
 (2450 uniq "( move ua , ul ; pen 4 ; move 0 - ua , ul ) "
  (484 642 1712 1742 1824 1924 2292 2465 2563 2586 2783 2823 2954 2956 3065
   3085)
  () -1 0)
 (2451 uniq "( pen ua ; move 2 , 7 / 4 ; move ua , 2 / 2 ) "
  (849 1773 1774 2021 2074 2311) () -1 0)
 (2452 equiv "( pen 4 * 7 ; move 3 - ua , ua ; move ua , ul ) "
  (847 1891 2029 2233 2410 2509 2605 2685 2747) () 2605 0)
 (2453 uniq "( pen ua ; move ul - ua , 0 ; move 2 , 2 ) "
  (542 670 1676 1697 1749 1817 1852 1927 1928 1987 2107 2176 2239 2241 2257
   2270 2295 2307 2331 2379 2433 2467 2510 2573 2601 2614 2663 2674 2682 2705
   2717 2727 2733 2746 2773 2816 2837 2843 2891 2967 2982 3005 3038 3055 3074
   3076)
  () -1 1)
 (2454 uniq "( pen ua ; move ua + ul , ul ; move 3 , 4 ) "
  (97 192 582 678 685 1697 1703 1738 1770 1833 1881 1896 1897 1931 1955 2037
   2099 2103 2108 2159 2173 2321 2345 2352 2417 2447 2490 2518 2549 2637 2648
   2660 2718 2847 2915 2925 2946 2952 2979 3077)
  () -1 0)
 (2455 uniq "( pen ua ; ( move 4 , ul ; move ua / 2 , ul ; move 3 , 2 ) ) "
  (1613 2466 3041) () -1 0)
 (2456 uniq "( pen 2 + ul ; move ua / 3 , ul ; move 0 - 2 , 2 ) "
  (1115 1677 1751 2077 2333 2836 3035) () -1 0)
 (2457 uniq "( move 0 - ua , ul / pen 2 ; move 4 - ua , ul ) "
  (183 918 1822 1962 2055 2144 2188 2511 2854 2892 3002 3047 3080) () -1 0)
 (2458 uniq "( pen ua ; move 2 , ul ; move 2 , ul ) "
  (290 320 331 333 338 348 356 364 385 1656 1657 1664 1673 1674 1675 1683
   1685 1705 1707 1717 1720 1722 1728 1729 1731 1735 1772 1776 1778 1779 1784
   1798 1800 1805 1809 1812 1813 1816 1828 1830 1860 1864 1865 1876 1879 1928
   1959 1967 1972 1976 1979 1996 2009 2038 2047 2050 2058 2082 2086 2093 2106
   2111 2114 2150 2158 2166 2177 2180 2181 2182 2185 2209 2231 2245 2313 2325
   2329 2334 2372 2412 2425 2431 2448 2506 2515 2519 2567 2574 2581 2598 2602
   2619 2668 2690 2715 2722 2729 2730 2741 2749 2756 2782 2787 2793 2800 2848
   2856 2880 2904 2911 2922 2927 2943 2959 2987 3033 3071 3075 3091)
  () -1 0)
 (2459 uniq "( pen 4 ; move 7 , 5 / ul ; move ua , 2 ) "
  (629 1795 1823 1829 1840 1886 1929 1939 2146 2385 2389 2482 2505 2597 2735
   2744 2801)
  () -1 0)
 (2460 uniq "( move ua , 3 + 3 ; pen 3 ; move ua , ua / 4 ) "
  (202 1885 1920 2299 2576 2957 2971 2984) () -1 0)
 (2461 uniq "( pen ua ; move ua - ul , 2 ; move 4 , ul ) "
  (55 106 497 542 641 685 1671 1680 1687 1697 1703 1726 1738 1749 1769 1791
   1813 1817 1827 1832 1833 1867 1881 1897 1901 1909 1911 1919 2034 2037 2075
   2099 2224 2242 2274 2300 2321 2345 2352 2387 2417 2447 2467 2483 2490 2562
   2573 2614 2616 2641 2660 2674 2718 2733 2791 2816 2847 2869 2872 2925 2952
   2979 2986 2998 3040 3074 3088)
  () -1 0)
 (2462 uniq "( pen 3 ; move 4 , ul / 4 ; move ua , 2 ) "
  (29 1750 1795 1823 1882 1929 1960 1963 2031 2041 2060 2064 2066 2067 2096
   2123 2146 2161 2190 2206 2207 2208 2210 2228 2365 2389 2402 2429 2482 2498
   2505 2583 2593 2597 2617 2620 2636 2650 2686 2704 2726 2744 2750 2758 2801
   2819 2828 2832 2907 2949 2976 3043 3057 3072)
  () -1 0)
 (2463 uniq "( move 4 , ul ; move ul , 4 ; move ua , 3 ) "
  (450 487 523 662 2061 2102 2256 2399 2481 2528 2588 2815 2883 2912) () -1
  0)
 (2464 equiv "( pen ua ; move 3 , 2 / 0 ; move ul , 2 ) "
  (1823 1829 1840 1939 1952 1990 1998 2064 2149 2163 2207 2210 2244 2285 2316
   2332 2365 2369 2391 2401 2538 2557 2688 2773 2825 2917 2940 2941 2949 3028
   3034)
  () 2825 0)
 (2465 uniq "( move ua , ua ; pen 4 ; move ul - ua , ul ) "
  (484 1742 1824 1924 2336 2450 2956 3085) () -1 0)
 (2466 uniq "( pen ua ; ( move 0 , ul ; move ua / 2 , ul ; move 3 , 2 ) ) "
  (1613 2455 3041) () -1 0)
 (2467 uniq "( pen ua ; move ul - ua , ul ; move 4 , ul ) "
  (93 592 670 1676 1703 1738 1779 1817 1852 1861 1881 1897 1927 2043 2075
   2107 2165 2176 2224 2239 2241 2257 2270 2295 2307 2331 2379 2387 2433 2453
   2461 2490 2510 2548 2573 2613 2614 2616 2658 2663 2674 2682 2705 2717 2718
   2727 2733 2746 2754 2816 2837 2843 2945 2967 2982 2992 3005 3017 3021 3038
   3055 3058 3074 3076)
  () -1 0)
 (2468 equiv "( move ua + ul , ua ; move ua , 4 ) "
  (88 143 147 192 195 198 224 228 275 690 1039 1665 1918 2251 2254 2308 2341
   2522 2755 2855 2978)
  () 2522 0)
 (2469 uniq "( move ua , ul + 3 ; move ua , ua / 4 ) "
  (89 202 393 439 478 1668 1920 2299) () -1 0)
 (2470 uniq "( move ua , 0 ; move ua + 3 , 4 ) "
  (46 124 142 163 166 167 169 173 175 189 190 194 199 236 1670 1708 1719 1794
   1838 1848 1889 1954 1969 2024 2091 2124 2396 2579 2654 2752)
  () -1 0)
 (2471 uniq "( ( pen 2 ; move ul , 4 ; move ua , 4 ) ; move 4 , ul ) " 
  (1282) () -1 0)
 (2472 uniq "( pen ua ; move 2 + ua , 4 ; move 2 , ul ) "
  (1657 1702 1833 1852 1915 1927 1987 2037 2040 2176 2252 2263 2321 2331 2387
   2433 2510 2601 2614 2658 2659 2682 2705 2717 2727 2746 2816 2837 2891 2909
   2945 2982 3005 3017 3019 3038 3055 3076)
  () -1 0)
 (2473 uniq "( pen ua ; move ua , ua / 2 ; move 2 , ul ) "
  (626 641 1655 1671 1688 1694 1726 1746 1750 1761 1763 1791 1827 1832 1833
   1859 1866 1867 1904 1933 1970 1978 2017 2020 2027 2034 2058 2059 2060 2067
   2083 2087 2109 2121 2123 2200 2214 2227 2252 2260 2261 2273 2334 2335 2380
   2388 2401 2422 2424 2427 2480 2489 2508 2523 2583 2646 2647 2681 2689 2693
   2697 2728 2745 2751 2761 2773 2812 2816 2817 2821 2826 2827 2869 2872 2882
   2889 2907 2909 2960 2973 2986 3037 3069)
  () -1 0)
 (2474 equiv "( pen ua ; move 2 , 2 / ul ; move 4 , ul ) "
  (653 1655 1662 1696 1715 1716 1726 1733 1746 1752 1827 1845 1867 1876 1939
   1978 2072 2087 2131 2187 2204 2236 2279 2297 2334 2335 2422 2500 2502 2535
   2625 2687 2696 2742 2745 2765 2820 2869 2872 2909 2917 2935 2941 2948 2951
   2973 2977 2986 3034 3062 3068)
  () 2569 0)
 (2475 uniq "( move ua , ul / 4 ; move ua , 2 ; move ul , 0 ) " (875 2766) ()
  -1 0)
 (2476 uniq "( move ua , 0 ; move ul , ul ; move ua , 4 ) "
  (46 89 485 524 527 528 533 602 603 662 665 1818 2061 2105 2269 2363 2481
   2492 2528 2564 2588 2768 2815 2857 2881 2883 2910 2936 2950 2963 2972 2993
   3018 3081)
  (1291) -1 0)
 (2477 uniq "( pen 3 + 3 ; move 3 , 4 ; move 5 , ul ) "
  (1815 1850 1871 2184 2437 2851) () -1 0)
 (2478 equiv "( move 3 , ul ; pen ua + ul ; move 2 , ul ) "
  (625 633 1199 1704 1975 2168 2354 2420 2449 2770 2795 2833 2840 2866) ()
  2833 1)
 (2479 uniq "( move 2 + ua , 3 ; move ua , ua * ua ) " (429 470) () -1 0)
 (2480 uniq "( pen ua ; move 4 , ul / 2 ; move 3 , ul ) "
  (430 641 724 1671 1688 1713 1716 1726 1750 1827 1832 1858 1859 1867 1904
   1963 1990 2002 2031 2034 2060 2072 2096 2149 2187 2190 2200 2204 2206 2210
   2216 2222 2227 2236 2260 2261 2290 2316 2334 2335 2380 2388 2401 2402 2404
   2422 2424 2427 2473 2500 2502 2523 2583 2636 2638 2688 2689 2693 2721 2726
   2732 2745 2750 2758 2817 2819 2820 2821 2826 2869 2872 2889 2894 2901 2907
   2939 2949 2960 2986 2998 3037 3069 3077)
  () -1 0)
 (2481 uniq "( move ua , ul ; move 2 , ul ; move ua , 3 ) "
  (665 1818 2061 2113 2157 2256 2269 2399 2463 2476 2492 2564 2588 2610 2702
   2768 2815 2857 2881 2883 2910 2912 2936 2950 2963 3004 3018 3081)
  () -1 0)
 (2482 uniq "( pen 4 ; move 4 , 3 / 2 ; move ua , 2 ) "
  (28 430 1750 1756 1795 1929 1963 1990 2013 2031 2041 2060 2096 2115 2146
   2190 2206 2210 2260 2290 2316 2369 2370 2385 2389 2429 2446 2459 2462 2505
   2638 2651 2689 2701 2704 2726 2744 2750 2801 2819 2884 2944 2960 2970
   2976)
  () -1 0)
 (2483 uniq "( pen 3 ; move ua - ul , 9 ; move 3 , ul ) "
  (575 685 1680 1687 1769 1791 1881 1897 1901 1911 1919 2075 2224 2242 2300
   2352 2417 2447 2461 2490 2616 2718 2791 2847 3069 3088)
  () -1 1)
 (2484 uniq "( pen ua ; move ua , ul ; move 4 * 2 , 4 ) "
  (58 475 1664 1985 2135 2343 2530 2958) () -1 0)
 (2485 uniq "( pen ua ; move 3 , ua ; move 5 , 4 * 2 ) "
  (1985 2007 2092 2353 2540 2653 3070) () -1 0)
 (2486 equiv "( move 4 + 0 , 3 ; pen 4 ; move ua , 8 * 2 ) "
  (1661 1698 2171 2723 3050) () 3050 1)
 (2487 uniq "( move 4 , 0 ; pen 4 ; move ua + ul , ul ) "
  (175 554 590 623 642 919 1908) (919) -1 0)
 (2488 uniq "( pen ua ; move ua , 0 ; move 4 , 2 ) "
  (17 268 269 271 280 293 295 320 322 325 326 348 350 351 356 385 1656 1657
   1664 1673 1675 1685 1691 1705 1707 1722 1729 1772 1776 1778 1779 1788 1789
   1798 1800 1812 1813 1816 1830 1864 1865 1876 1925 1928 1967 1972 1993 1996
   2009 2011 2038 2044 2058 2082 2086 2093 2095 2100 2106 2111 2116 2121 2155
   2158 2180 2182 2185 2189 2231 2245 2301 2313 2325 2329 2347 2357 2372 2391
   2412 2428 2431 2443 2506 2515 2521 2542 2567 2611 2623 2643 2668 2670 2749
   2782 2787 2793 2798 2800 2825 2829 2835 2845 2853 2865 2904 2991 3007 3014
   3024 3027 3033 3053 3075 3091)
  (1604 2121) -1 2)
 (2489 equiv "( pen 3 ; move ua , ul / ul ; move 2 , ul ) "
  (641 1671 1688 1696 1726 1733 1746 1832 1845 1867 1869 1881 1926 1933 2020
   2034 2067 2083 2123 2227 2252 2273 2315 2321 2330 2334 2337 2380 2424 2427
   2445 2473 2508 2523 2583 2650 2681 2687 2693 2697 2756 2758 2791 2819 2821
   2826 2872 2879 2889 2907 2921 3003 3037 3057 3069)
  () 2756 0)
 (2490 uniq "( pen ua ; move ua - ul , ul ; move 4 , ul ) "
  (93 106 497 542 582 678 685 1676 1680 1687 1697 1703 1726 1738 1749 1769
   1770 1779 1791 1833 1867 1881 1897 1901 1911 1919 1931 1955 2037 2075 2099
   2103 2159 2173 2224 2239 2242 2257 2274 2300 2321 2330 2345 2352 2417 2447
   2454 2461 2467 2483 2549 2614 2616 2641 2648 2660 2674 2718 2733 2791 2837
   2847 2872 2915 2925 2945 2952 2979 3040 3058 3088)
  () -1 0)
 (2491 uniq "( pen ua ; move 3 * 2 , ul / ua ; move 4 + ul , 3 ) "
  (1141 1887 2255 2849) () -1 0)
 (2492 uniq "( move ua , 0 ; move 3 , ul ; move ua , ul ) "
  (485 489 524 603 665 1165 1818 1846 1907 2061 2090 2157 2256 2269 2476 2481
   2564 2572 2588 2768 2815 2857 2881 2910 2912 2936 2950 2963 2972 2993 3018
   3081)
  () -1 0)
 (2493 uniq "( pen ua ; move ua , 2 ; move 4 + ul , ul ) "
  (55 645 646 1813 2170 2635 2645) () -1 0)
 (2494 uniq "( pen 3 ; move 4 + ul , 2 / ua ; move 3 , 4 ) "
  (853 1851 1868 1875 1912 1921 1944 1953 1989 1999 2014 2052 2053 2054 2078
   2081 2085 2110 2125 2127 2142 2167 2169 2205 2229 2243 2275 2277 2286 2323
   2368 2381 2444 2503 2513 2525 2526 2534 2582 2626 2784 2789 2804 2811 2877
   2890 2899 2905 2908 2916 2923 2988 3059 3089)
  () -1 0)
 (2495 uniq "( move ua , 4 ; move ua , ua * ua ; ul ) " (2418) () -1 0)
 (2496 uniq "( move ua , 3 ; pen ua ; move 2 , 2 ) "
  (283 285 288 291 329 335 1672 1681 1725 1745 1748 1783 1786 1836 1855 1856
   1899 1913 1945 1950 1971 1974 1991 1997 2023 2032 2048 2079 2097 2132 2134
   2154 2156 2202 2217 2230 2253 2281 2293 2304 2317 2324 2349 2350 2356 2409
   2423 2426 2430 2441 2497 2499 2560 2604 2649 2675 2679 2706 2710 2759 2776
   2778 2802 2806 2833 2902 2919 3022 3078)
  () -1 0)
 (2497 uniq "( move 3 , ul ; pen ua ; move 2 , 2 ) "
  (283 285 291 297 308 329 335 362 1725 1727 1745 1786 1825 1855 1899 1932
   1971 1980 1997 2023 2025 2032 2048 2079 2097 2132 2134 2202 2230 2281 2293
   2304 2317 2344 2356 2386 2423 2426 2430 2441 2496 2499 2560 2604 2699 2703
   2706 2707 2710 2731 2802 2806 2810 2833 2858 2860 2902 2919 2983 3022)
  () -1 0)
 (2498 uniq "( pen 3 ; move 3 , 7 / 4 ; move ua , 2 ) "
  (1823 1829 1840 1882 1929 1939 1960 1963 2041 2064 2146 2210 2228 2244 2365
   2389 2402 2429 2462 2505 2557 2597 2617 2667 2704 2801 2828 2832 2944 2976
   3028 3043)
  () -1 0)
 (2499 uniq "( move ua , ul ; pen ua ; move 2 , 3 ) "
  (283 285 288 329 335 362 902 979 1672 1725 1745 1748 1759 1783 1786 1855
   1856 1913 1945 1971 1974 1980 1991 1997 2023 2032 2048 2079 2097 2132 2134
   2154 2202 2217 2230 2281 2293 2317 2327 2344 2349 2356 2420 2423 2430 2441
   2496 2497 2604 2649 2679 2706 2707 2710 2731 2759 2776 2802 2806 2833 2858
   2860 2902 3022 3061 3065 3078)
  (686 979 1513 2420) -1 0)
 (2500 uniq "( pen ua ; move 2 , ul / 3 ; move 3 , ul ) "
  (641 724 1655 1671 1688 1713 1716 1726 1752 1867 1882 2031 2033 2034 2064
   2066 2072 2149 2177 2187 2197 2216 2222 2236 2261 2279 2297 2298 2334 2335
   2380 2388 2393 2402 2404 2422 2424 2427 2474 2480 2502 2508 2523 2535 2538
   2583 2593 2625 2636 2647 2650 2673 2681 2688 2689 2693 2721 2742 2745 2761
   2780 2794 2820 2826 2869 2872 2889 2894 2907 2909 2973 2986 3037 3062 3068
   3069 3087)
  () -1 0)
 (2501 uniq "( move ua , ul ; move ua , 4 ; move 3 , ul ) "
  (89 93 526 534 605 665 1239 1704 1821 1863 2010 2157 2440 2815 2896 2950)
  () -1 0)
 (2502 uniq "( pen ua ; move 2 , ul / ua ; move 4 , ul ) "
  (641 653 656 724 1655 1671 1688 1690 1726 1752 1827 1832 1867 1876 1882
   1926 1933 1958 1978 2034 2036 2066 2072 2087 2096 2104 2187 2197 2204 2216
   2219 2222 2236 2261 2279 2297 2298 2334 2335 2337 2364 2376 2380 2388 2393
   2402 2404 2422 2424 2427 2474 2480 2500 2523 2535 2583 2625 2630 2636 2650
   2673 2676 2688 2693 2696 2721 2742 2794 2820 2826 2827 2869 2872 2879 2889
   2894 2901 2907 2909 2917 2921 2935 2939 2948 2949 2973 2977 2986 2998 3034
   3037 3042 3062 3067 3068 3087)
  () -1 0)
 (2503 uniq "( pen 3 ; move 4 + 4 , ul / ua ; move 0 , 4 ) "
  (853 1851 1868 1875 1912 1921 1944 1953 1989 1999 2014 2052 2053 2054 2078
   2081 2110 2125 2127 2167 2169 2205 2226 2229 2277 2286 2323 2368 2494 2525
   2534 2582 2626 2740 2784 2804 2811 2877 2899 2905 2923 2988 3059 3089)
  () -1 0)
 (2504 uniq "( move ua , 4 ; pen ua ; move ua , ua * ua ) "
  (1714 1880 2846 2863) () -1 0)
 (2505 uniq "( pen 4 ; move 5 , ul / 4 ; move ua , 2 ) "
  (629 1750 1795 1823 1882 1929 1963 2031 2064 2066 2067 2096 2115 2146 2190
   2197 2207 2210 2228 2365 2385 2402 2429 2459 2462 2482 2498 2583 2593 2617
   2620 2704 2726 2744 2750 2801 2828 2976)
  () -1 0)
 (2506 uniq "( pen ua ; move 4 , 9 ; move 4 , ul ) "
  (270 271 293 295 320 331 333 336 338 348 356 364 385 1657 1673 1674 1675
   1683 1685 1717 1722 1729 1731 1735 1772 1776 1778 1779 1784 1789 1798 1800
   1805 1809 1812 1813 1816 1828 1830 1831 1860 1865 1876 1959 1967 1972 1976
   1979 1993 1996 2009 2038 2050 2058 2082 2086 2093 2100 2106 2116 2158 2166
   2177 2180 2182 2185 2209 2231 2313 2322 2325 2329 2348 2372 2378 2412 2428
   2443 2448 2458 2488 2515 2519 2521 2566 2581 2598 2602 2619 2640 2668 2690
   2722 2741 2749 2774 2782 2793 2798 2800 2829 2835 2845 2853 2865 2870 2880
   2911 2922 2943 3014 3024 3033 3053 3075 3091)
  () -1 0)
 (2507 uniq "( move ua , ua - 3 ; move 3 , ul ; move ua , ul ) "
  (965 1949 2249 2280 2351 2544 2580 2831 2875 2888 2981 3010) () -1 0)
 (2508 uniq "( pen ua ; move ua , ul / 3 ; move 2 , 4 ) "
  (641 1655 1664 1671 1688 1697 1713 1715 1726 1750 1770 1803 1866 1867 1869
   1919 1933 1946 2031 2034 2036 2060 2064 2067 2072 2083 2123 2149 2163 2200
   2207 2219 2222 2227 2228 2236 2252 2273 2298 2334 2364 2376 2380 2393 2401
   2424 2427 2473 2489 2500 2523 2538 2583 2593 2620 2622 2647 2660 2673 2681
   2693 2697 2721 2761 2763 2812 2820 2821 2826 2872 2889 2907 2939 2973 3003
   3037 3062 3068 3077)
  () -1 0)
 (2509 uniq "( pen 2 * 4 ; move 3 - ua , ua ; move 2 , ul ) "
  (847 1891 2233 2410 2452 2605 2685 2747) (847) -1 0)
 (2510 uniq "( pen ua ; move ul - ua , 5 ; move 2 , ul ) "
  (670 1676 1680 1769 1791 1817 1852 1881 1901 1919 1927 1987 2040 2043 2107
   2165 2176 2239 2241 2257 2270 2295 2307 2331 2379 2387 2433 2453 2467 2472
   2548 2573 2601 2613 2614 2658 2663 2674 2682 2705 2717 2727 2733 2746 2816
   2837 2843 2891 2945 2967 2982 2992 3005 3017 3038 3055 3074 3076)
  () -1 0)
 (2511 uniq "( move 0 - ul , ul / pen 2 ; move 3 - ua , ul ) "
  (918 1822 2055 2144 2457 2545 2589 2854 3002 3047 3080) () -1 0)
 (2512 uniq "( move ua , ul / 3 ; move ua , 4 ; move 4 , 2 ) "
  (729 1724 1737 1863 2309 2318 2359 2797 2805 2980 2990 3054) () -1 0)
 (2513 uniq "( pen 3 ; move 4 + ul , 2 / 3 ; move 2 , 4 ) "
  (1851 1868 1875 1912 1921 1944 1953 1989 1999 2014 2052 2081 2110 2323 2368
   2381 2494 2526 2626 2811 2877 2890 2905 2908 3059 3089)
  () -1 0)
 (2514 uniq "( pen ua ; move 2 , 0 ; move ua - ul , ul ) "
  (684 1865 1938 2094 2405 2411 2587 2929 3036) (1938) -1 0)
 (2515 uniq "( pen ua ; move 3 , 4 ; move 4 , ul ) "
  (268 271 292 293 303 319 320 327 331 333 337 338 348 356 364 385 1133 1657
   1673 1674 1675 1683 1685 1717 1722 1729 1731 1735 1772 1776 1778 1779 1784
   1789 1798 1800 1805 1809 1812 1813 1816 1828 1831 1850 1860 1865 1871 1876
   1959 1967 1972 1976 1979 1993 1996 2009 2038 2044 2047 2050 2058 2082 2086
   2093 2100 2106 2116 2150 2158 2166 2177 2180 2181 2182 2185 2209 2231 2245
   2284 2301 2313 2325 2329 2347 2348 2372 2391 2412 2425 2428 2431 2443 2448
   2458 2488 2506 2519 2521 2566 2574 2575 2581 2598 2602 2619 2623 2668 2690
   2722 2741 2749 2774 2782 2787 2793 2798 2800 2825 2835 2845 2848 2853 2865
   2911 2922 2927 2943 2959 2987 2991 3014 3024 3027 3033 3053 3075 3091)
  (1850 1871 2184) -1 2)
 (2516 uniq "( move 4 , ua - ul ; pen 3 ; move ua , 4 ) "
  (59 511 1820 2089 2719 3020) () -1 0)
 (2517 uniq "( move ua , 3 ; pen ua + ul ; move ul + 2 , 4 ) "
  (983 2162 2278 2591 2628 2695 2737 2760 2933 2989 2999 3060) () -1 0)
 (2518 equiv "( pen ua ; move ua , 2 + ul ; move 3 , 4 ) "
  (1684 1706 1715 1834 1869 1930 2131 2326 2454 2735 2745 2799 2941 3077) ()
  3077 0)
 (2519 uniq "( pen ua ; move 3 , 7 ; move 2 , ul ) "
  (292 303 319 320 327 331 333 338 348 356 364 385 1657 1664 1673 1674 1675
   1683 1685 1705 1722 1728 1729 1731 1735 1772 1776 1778 1779 1784 1798 1800
   1805 1809 1812 1813 1816 1828 1831 1860 1864 1865 1876 1879 1915 1928 1959
   1972 1976 1979 1996 2038 2044 2047 2050 2058 2086 2093 2106 2150 2158 2166
   2177 2180 2181 2182 2185 2209 2231 2245 2301 2313 2347 2372 2391 2412 2425
   2428 2431 2448 2458 2506 2515 2521 2566 2567 2574 2581 2598 2602 2619 2623
   2668 2690 2722 2730 2741 2749 2756 2774 2782 2787 2793 2800 2825 2848 2853
   2880 2911 2922 2927 2943 2987 3024 3027 3033 3053 3071 3075 3091)
  () -1 2)
 (2520 equiv "( pen 3 * 2 ; move 3 , 0 ; move 4 , 4 ) "
  (419 1689 1732 1744 1757 1768 1877 1983 2859) () 2853 0)
 (2521 uniq "( pen ua ; move 3 , ua ; move 4 , 2 ) "
  (17 269 295 319 320 322 327 331 338 350 351 356 385 1673 1683 1685 1705
   1707 1717 1722 1729 1731 1735 1772 1778 1779 1784 1788 1789 1805 1813 1828
   1830 1860 1864 1876 1928 1959 1967 1976 1993 2011 2044 2050 2086 2093 2100
   2106 2116 2155 2158 2180 2182 2209 2231 2245 2284 2301 2313 2329 2347 2353
   2357 2372 2391 2412 2425 2428 2431 2488 2506 2515 2519 2566 2575 2598 2602
   2611 2623 2624 2643 2668 2670 2690 2722 2741 2749 2774 2782 2787 2825 2829
   2835 2853 2904 2922 2927 2943 2987 2991 3024 3027 3033 3053 3075)
  (1744) -1 0)
 (2522 uniq "( move ua + ul , 0 ; move ua , 4 ) "
  (46 117 143 147 192 195 198 224 275 412 1918 2251 2254 2341 2468 2755 2855
   2978)
  (412 602 690 2468) -1 2)
 (2523 uniq "( pen ua ; move ua , ul / 7 ; move 3 , ul ) "
  (641 685 724 1655 1671 1688 1694 1713 1716 1726 1750 1798 1827 1832 1859
   1867 1897 1904 1933 1978 2033 2034 2036 2067 2072 2083 2087 2123 2149 2163
   2187 2207 2222 2224 2227 2228 2236 2252 2261 2330 2334 2337 2364 2380 2388
   2393 2401 2402 2404 2417 2424 2427 2473 2480 2489 2500 2502 2508 2583 2593
   2620 2622 2636 2681 2688 2689 2693 2697 2721 2728 2745 2820 2821 2826 2827
   2847 2869 2872 2889 2894 2907 2921 2925 2973 2986 3037 3057 3069 3077)
  () -1 0)
 (2524 uniq "( move ua , 2 / ua ; move 2 , ul ; move 4 , ul ) "
  (870 883 1787 2305 2414 2975) () -1 0)
 (2525 uniq "( pen 3 ; move 4 + 2 , 0 / ua ; move 3 , 4 ) "
  (853 1851 1868 1875 1912 1921 1944 1953 1989 1999 2014 2052 2053 2054 2078
   2081 2085 2110 2125 2127 2167 2169 2205 2229 2243 2277 2286 2323 2368 2494
   2503 2534 2582 2633 2804 2811 2868 2877 2890 2899 2905 2923 2988 3059
   3089)
  () -1 0)
 (2526 uniq "( pen 3 ; move 4 + ul , 2 / 0 ; move ua , 4 ) "
  (853 1851 1868 1875 1912 1921 1944 1953 1989 1999 2014 2052 2081 2110 2125
   2229 2323 2368 2381 2444 2494 2513 2811 2890 2905 3089)
  () -1 0)
 (2527 uniq "( move 3 , 4 ; move 4 , ul ; move ua , 2 ) "
  (485 486 502 1797 1818 1846 2105 2113 2136 2256 2269 2354 2399 2528 2564
   2570 2572 2702 2857 2881 2910 2936 2972 3004 3030 3081)
  () -1 0)
 (2528 uniq "( move 4 , 4 ; move ul , ul ; move ua , 2 ) "
  (29 485 487 523 1818 1846 2061 2102 2105 2136 2256 2269 2363 2399 2463 2476
   2527 2564 2570 2572 2588 2857 2881 2883 2910 2912 2936 2972 3004 3081)
  (2419) -1 0)
 (2529 uniq "( move 2 , 4 ; ( pen 4 ; move ua , 2 ) ) " (649 1801 1854 2947)
  () -1 0)
 (2530 uniq "( pen 2 ; move 3 , ul ; move 4 * 2 , 4 ) " (475 2343 2484) () -1
  0)
 (2531 uniq "( move ua , ul ; pen 3 ; move ua , ua / 4 ) "
  (89 202 1668 1709 1880 1920 2299 2327 2576 2661 2672 3045 3049) () -1 0)
 (2532 uniq "( move 4 , 2 / 7 ; pen ua * 2 ; move 2 , ul ) " (950 2250 2367)
  () -1 0)
 (2533 equiv "( pen ua + ul ; move 3 , 5 ; move 4 , 4 ) "
  (504 624 1689 1744 1771 1799 1811 1815 1849 1850 1871 1890 1894 1907 1957
   2373 2407 2537 2655 2792 2807 2851 2859)
  () 2792 0)
 (2534 equiv "( pen 3 ; move 4 + 0 , 0 / ua ; move 7 , 4 ) "
  (853 1851 1868 1875 1912 1921 1944 1953 1989 1999 2014 2052 2053 2054 2078
   2081 2085 2110 2125 2127 2167 2169 2194 2205 2229 2243 2275 2277 2286 2323
   2368 2494 2503 2525 2559 2582 2652 2789 2804 2811 2868 2877 2890 2899 2905
   2923 2988 3059 3089)
  () 2652 0)
 (2535 uniq "( pen ua ; move 2 , ul / ua ; move 4 , 2 ) "
  (653 656 724 1726 1750 1752 1823 1867 1882 1952 1998 2013 2031 2036 2060
   2064 2067 2072 2096 2115 2121 2149 2163 2187 2190 2207 2210 2219 2222 2228
   2236 2244 2298 2329 2334 2335 2364 2369 2376 2380 2393 2401 2422 2474 2500
   2502 2538 2562 2593 2620 2625 2638 2673 2676 2696 2773 2820 2869 2872 2894
   2917 2935 2939 2948 2949 2977 2986 3034 3042 3062 3067 3068)
  () -1 0)
 (2536 uniq "( move 4 - ul , ul ; pen 3 * 3 ; move ua - 0 , 4 / ua ) " 
  (1465) () -1 0)
 (2537 equiv "( pen ua * ul ; move 3 , 7 ; move 4 , 2 ) "
  (1689 1732 1744 1757 1768 1771 1799 1850 1873 1890 1894 1957 2028 2084 2533
   2655 2665 2788 2859 3053)
  () 3053 0)
 (2538 uniq "( pen ua ; move 3 , ul / 3 ; move 2 , 2 ) "
  (1688 1750 1803 1823 1829 1840 1869 1882 1939 1946 1990 2031 2036 2060 2064
   2067 2072 2096 2146 2149 2163 2187 2190 2200 2207 2210 2219 2222 2228 2236
   2244 2260 2261 2285 2298 2332 2334 2364 2365 2376 2380 2388 2393 2401 2402
   2404 2424 2427 2464 2500 2508 2535 2557 2593 2620 2647 2681 2688 2693 2704
   2721 2761 2763 2773 2801 2812 2820 2872 2882 2889 2894 2907 2949 2986 3028
   3062)
  () -1 0)
 (2539 uniq "( move 2 , 2 ; pen ua + ua ; move ua , ua * ua ) "
  (993 2258 2734) () -1 0)
 (2540 uniq "( pen ua ; move 3 , ua ; move ua , 4 * 2 ) "
  (50 552 669 1658 1765 1985 2007 2035 2092 2137 2353 2398 2485 2653 3070) ()
  -1 0)
 (2541 uniq "( move 4 , 3 + 2 ; pen ua + ul ; move 2 , 4 ) "
  (1701 1802 2000 2310 2366 2592 2920) (2000) -1 0)
 (2542 uniq "( pen 4 ; move ua , 0 ; move 3 , ul ) "
  (16 268 269 270 271 292 293 320 322 340 348 356 385 1657 1675 1685 1691
   1707 1720 1722 1728 1729 1760 1776 1778 1779 1788 1798 1800 1812 1813 1816
   1865 1879 1925 1928 1972 1996 2009 2011 2038 2047 2058 2082 2086 2095 2111
   2114 2150 2155 2158 2177 2180 2181 2185 2296 2322 2325 2372 2443 2488 2546
   2567 2609 2670 2677 2722 2730 2741 2756 2777 2793 2798 2800 2845 2848 2865
   2880 2911 2943 2991 3007 3014 3024 3071 3075 3091)
  (1521) -1 1)
 (2543 uniq "( move 4 , ul - 2 ; move 3 , 4 ; move ua - 3 , ul ) "
  (1069 2966) () -1 0)
 (2544 uniq "( move ua , ua - 3 ; move 2 , ul ; move ua , 3 ) "
  (965 1949 2249 2280 2351 2507 2580 2610 2831 2875 2888 2981 3010) () -1 0)
 (2545 uniq "( move 7 - ul , ul / pen 3 ; move 3 - ua , ul ) "
  (2144 2511 2589 3002) () -1 0)
 (2546 uniq "( pen 4 ; move ua , 0 ; move 3 , ul - 2 ) "
  (24 455 1658 2112 2213 2542 2844) () -1 0)
 (2547 uniq "( move 3 , ul ; move ua + ul , 4 * 4 ) "
  (442 473 1669 2247 2265) () -1 0)
 (2548 uniq "( pen 5 ; move ul - ua , ul ; move ul , ul ) "
  (670 1676 1817 1861 1927 2107 2165 2176 2239 2241 2257 2270 2295 2307 2379
   2433 2467 2510 2573 2601 2613 2614 2658 2674 2682 2717 2733 2746 2816 2837
   2843 2945 2967 3017 3038 3074)
  (2239) -1 0)
 (2549 uniq "( pen ua ; move ua + ul , ul ; move ua , 4 ) "
  (89 582 678 1656 1697 1703 1706 1715 1738 1770 1833 1881 1896 1897 1911
   1916 1931 1955 2037 2099 2103 2108 2143 2159 2173 2242 2321 2345 2352 2417
   2447 2454 2490 2637 2648 2660 2718 2915 2925 2946 2952 2979)
  () -1 0)
 (2550 uniq "( move ua , 2 - 7 ; pen ua ; move ua , 4 ) "
  (52 88 558 1806 1820 2377 2632 3020 3032) () -1 0)
 (2551 uniq "( pen ua ; move 3 , ul ; move ul - ua , 2 ) "
  (498 1853 2018 2063 2164 2398 2431 2779 2900 2965 3008) () -1 0)
 (2552 uniq "( pen ua + 0 ; move ul , 3 ; move 3 , ul ) "
  (560 566 615 689 1654 1898 1907) (566) -1 0)
 (2553 uniq "( move 4 , 3 ; move ua + ul , ul ) "
  (146 163 169 175 182 190 199 236 240 244 245 248 1708 1719 1848 1954 2091
   2390 2752)
  (1414) -1 0)
 (2554 uniq "( pen ua ; move ul , 3 - 4 ; move 3 * 2 , ul ) " (858 2634) ()
  -1 0)
 (2555 uniq "( pen 3 ; move 3 , ul ; move 2 * ul , ul ) "
  (498 1853 2018 2436 2645 3001) () -1 0)
 (2556 uniq "( move 7 , 2 ; pen 2 ; move ua , 4 ) "
  (231 272 291 304 362 1804 1917 1974 1991 2320 2327 2349 2577 2649 2725 2802
   2810 2983 3084)
  () -1 0)
 (2557 uniq "( pen ua ; move 3 , ua / 0 ; move ua , 2 ) "
  (50 1750 1823 1829 1840 1882 1886 1939 1952 1990 2013 2031 2064 2096 2146
   2149 2190 2201 2206 2210 2228 2244 2260 2261 2285 2332 2365 2402 2464 2498
   2538 2593 2597 2620 2622 2688 2704 2721 2761 2763 2773 2801 2822 2834 2909
   2940 2942 2960 2976 3028)
  (2244) -1 0)
 (2558 uniq "( move ua , 0 ; move 5 , 2 ) "
  (24 25 26 27 28 29 44 45 46 47 48 50 51 52 53 54 55 57 58 60 84 85 86 87 88
   89 90 91 93 1650 1666 1668 1730 2045 2098 2191 2201 2400)
  (177 382 850) -1 0)
 (2559 uniq "( pen 3 ; move 4 + 0 , 4 / ua ; move ua , 3 ) "
  (853 1851 1868 1953 1989 1999 2054 2078 2081 2125 2127 2167 2194 2205 2229
   2243 2323 2534 2899 2988)
  () -1 0)
 (2560 uniq "( move 4 , 3 ; pen ua ; move 4 , 2 ) "
  (17 291 294 304 328 335 358 1681 1727 1748 1783 1786 1836 1855 1856 1895
   1899 1913 1923 1971 1977 1991 1997 2025 2026 2048 2079 2132 2134 2156 2220
   2230 2253 2268 2281 2304 2312 2317 2324 2344 2355 2356 2386 2426 2430 2441
   2496 2497 2577 2604 2703 2706 2710 2731 2806 2860 2895 2902 2919 3022
   3061)
  () -1 0)
 (2561 uniq "( move ul - ua , 2 ; pen ua ; move ul , 0 ) " (547 675 680 2964)
  (680) -1 0)
 (2562 uniq "( pen ua ; move ua , ul - 2 ; move 4 , 2 ) "
  (27 54 98 626 641 1671 1713 1726 1738 1750 1763 1803 1827 1832 1859 1867
   1869 1916 1930 1946 1967 2027 2034 2036 2039 2060 2067 2109 2115 2121 2163
   2190 2207 2210 2216 2222 2228 2326 2330 2345 2364 2393 2401 2461 2535 2593
   2620 2641 2642 2676 2757 2765 2794 2812 2869 2872 2885 2969 2986 2998 3067
   3077)
  () -1 0)
 (2563 uniq "( move 4 - ua , ul ; pen 4 ; move 0 - ua , ul ) "
  (918 1682 1712 1822 2055 2188 2342 2450 2783 2892) () -1 0)
 (2564 uniq "( move ua , 3 ; move ul , ul ; move ua , 2 ) "
  (48 85 487 523 527 533 602 603 662 665 1448 1818 1863 2061 2102 2105 2136
   2256 2269 2363 2399 2476 2481 2492 2527 2528 2570 2572 2702 2768 2815 2857
   2881 2883 2910 2936 2950 2963 2972 2993 3004 3018 3030 3081)
  () -1 0)
 (2565 uniq "( move 4 , 0 * 2 ; ( pen ua ; move 3 , 2 ) ) " (743 3073) 
  (1259) -1 0)
 (2566 uniq "( pen 3 ; move 3 , 2 ; move 4 , ul ) "
  (269 271 292 293 303 320 327 331 333 336 338 356 1673 1674 1683 1685 1717
   1722 1728 1729 1731 1735 1760 1772 1776 1778 1779 1788 1813 1828 1831 1860
   1876 1879 1959 1972 1976 1993 2009 2047 2050 2058 2082 2086 2093 2106 2142
   2150 2158 2180 2181 2182 2209 2231 2284 2296 2313 2322 2325 2348 2372 2378
   2412 2428 2443 2506 2515 2519 2521 2574 2575 2581 2598 2602 2611 2624 2668
   2722 2729 2730 2741 2749 2756 2774 2777 2782 2798 2825 2835 2845 2853 2865
   2880 2911 2922 2943 2987 3007 3014 3024 3033 3053 3075)
  () -1 0)
 (2567 uniq "( pen 9 ; move ua , 0 ; move 2 , ul ) "
  (270 271 292 293 296 320 331 348 356 385 1657 1664 1675 1685 1705 1720 1722
   1728 1729 1760 1776 1778 1779 1784 1788 1798 1800 1812 1813 1816 1864 1865
   1879 1928 1959 1972 1979 1996 2009 2038 2058 2082 2086 2114 2128 2158 2166
   2180 2181 2185 2209 2322 2325 2372 2443 2448 2458 2488 2519 2542 2574 2581
   2619 2670 2690 2730 2756 2774 2777 2787 2793 2798 2800 2845 2848 2865 2870
   2880 2922 2987 3014 3024 3071 3075 3091)
  (1675) -1 0)
 (2568 uniq "( move ua - 3 , 2 - 4 ; move 2 , ua / move ua , 3 + ul ) "
  (1403) () -1 0)
 (2569 uniq "( pen ua ; move 2 , 2 ; move 4 , ua + ul ) "
  (557 574 616 1790 2596 2878) (2474) -1 0)
 (2570 uniq "( move 4 , 4 ; move 4 , ul ; move ua , 2 ) "
  (29 450 485 486 523 1797 1818 1846 2102 2105 2113 2136 2256 2269 2399 2527
   2528 2564 2572 2588 2702 2857 2881 2910 2912 2936 2972 3004 3030 3081)
  () -1 0)
 (2571 equiv "( move ua , ua ; ( pen ua ; move 2 , 2 ) ) "
  (2415 2599 2947 3092) () 2806 0)
 (2572 uniq "( move 4 , 7 ; move 3 , ul ; move ua , 2 ) "
  (28 485 489 523 1818 2045 2102 2136 2256 2269 2399 2492 2527 2528 2564 2570
   2588 2857 2881 2910 2912 2936 2950 2972 3004 3081)
  () -1 0)
 (2573 uniq "( pen ua ; move ul - ua , 2 ; move ua , ul ) "
  (87 670 1676 1791 1817 1852 1861 1911 1927 1972 2043 2049 2069 2070 2107
   2165 2176 2239 2241 2242 2257 2263 2270 2295 2307 2331 2379 2387 2406 2433
   2439 2453 2461 2467 2510 2548 2614 2658 2663 2674 2682 2705 2717 2727 2733
   2746 2816 2837 2843 2852 2945 2967 2982 2992 3005 3017 3038 3055 3074
   3076)
  () -1 0)
 (2574 uniq "( pen 3 ; move 3 , 7 ; move 2 , ul ) "
  (271 292 293 296 303 320 331 336 338 1657 1675 1683 1717 1728 1729 1731
   1735 1784 1800 1816 1828 1831 1860 1879 1959 1976 1979 1996 2044 2047 2050
   2058 2082 2086 2093 2106 2150 2158 2166 2180 2181 2182 2209 2245 2284 2313
   2322 2325 2348 2372 2378 2443 2448 2458 2515 2519 2566 2567 2575 2581 2598
   2602 2619 2624 2668 2690 2722 2729 2730 2741 2756 2771 2774 2782 2787 2800
   2845 2848 2880 2922 2943 2987 3014 3024 3053 3071)
  () -1 0)
 (2575 uniq "( pen 3 ; move 3 , ua ; move 4 , 9 ) "
  (271 292 293 296 303 319 336 356 1717 1728 1767 1772 1788 1831 1959 2047
   2050 2082 2093 2100 2106 2116 2158 2182 2245 2284 2301 2325 2348 2428 2443
   2515 2521 2566 2574 2581 2598 2609 2611 2624 2643 2668 2749 2774 2782 2845
   2853 2987 3014 3024 3027 3053)
  () -1 1)
 (2576 uniq "( move ua , 3 ; pen 3 ; move ua , ua / 4 ) "
  (202 1668 1709 2299 2460 2531 2661 2672 2984 3045 3049) () -1 0)
 (2577 uniq "( move 4 , 2 ; pen ua ; move ua , ul ) "
  (22 56 272 291 294 304 328 329 334 335 358 362 1681 1725 1727 1745 1748
   1783 1825 1836 1856 1895 1899 1913 1917 1923 1932 1934 1945 1964 1974 1977
   1980 1991 1997 2023 2026 2032 2048 2079 2132 2134 2154 2202 2217 2220 2230
   2268 2281 2304 2312 2317 2320 2338 2344 2349 2355 2356 2375 2423 2426 2430
   2441 2556 2560 2649 2699 2703 2707 2710 2776 2802 2810 2833 2858 2876 2902
   2919 2983 3011 3061 3084)
  () -1 1)
 (2578 uniq "( move 4 , ul ; pen 4 + ul ; move 2 + 4 , ul ) "
  (1753 2138 2786) () -1 0)
 (2579 uniq "( move ua , ua ; move 4 + ua , 4 ) "
  (88 141 142 146 166 169 173 177 186 194 199 234 236 242 1719 1794 1848 1857
   1889 1969 2024 2091 2396 2470)
  (549 1132) -1 0)
 (2580 uniq "( move ua , 3 - 3 ; move 2 , ul ; move ua , 3 ) "
  (965 1949 2249 2280 2351 2507 2544 2610 2831 2875 2888 2981 3010) (959) -1
  0)
 (2581 uniq "( pen 3 ; move 3 , 9 ; move 2 , ul ) "
  (271 292 293 296 303 320 331 336 338 1657 1675 1683 1717 1728 1731 1735
   1784 1800 1816 1828 1831 1860 1879 1959 1976 1979 1996 2047 2050 2058 2082
   2086 2093 2106 2150 2158 2166 2180 2181 2182 2209 2245 2284 2322 2325 2348
   2372 2378 2443 2448 2458 2506 2515 2519 2566 2567 2574 2575 2598 2602 2619
   2624 2668 2690 2722 2729 2730 2741 2756 2774 2782 2787 2800 2845 2848 2880
   2922 2943 2987 3014 3024 3071)
  () -1 0)
 (2582 uniq "( pen 3 ; move 4 + 3 , ua / ua ; move 3 , 4 ) "
  (853 1851 1868 1875 1912 1921 1944 1953 1989 1999 2014 2052 2053 2054 2078
   2081 2085 2110 2125 2127 2142 2167 2169 2205 2229 2243 2277 2286 2302 2323
   2368 2444 2494 2503 2525 2534 2804 2811 2877 2899 2905 2916 2923 2988 3059
   3089)
  () -1 0)
 (2583 uniq "( pen ua ; move ua , ul / 4 ; move ua , ul ) "
  (114 641 656 724 1655 1671 1688 1694 1706 1713 1715 1726 1750 1803 1823
   1827 1832 1867 1882 1886 1904 1911 1916 1933 1946 1958 1978 2031 2034 2036
   2037 2039 2064 2066 2067 2072 2083 2087 2096 2123 2145 2163 2187 2190 2197
   2207 2210 2222 2227 2228 2236 2242 2252 2261 2279 2297 2298 2315 2330 2332
   2334 2337 2364 2365 2380 2388 2393 2401 2402 2404 2424 2427 2462 2473 2480
   2489 2500 2502 2505 2508 2523 2593 2616 2617 2620 2622 2625 2636 2650 2673
   2681 2688 2693 2697 2721 2732 2742 2745 2801 2817 2819 2820 2821 2826 2827
   2828 2869 2872 2874 2885 2889 2907 2909 2921 2924 2940 2960 2973 2976 2986
   3037 3042 3057 3069)
  () -1 0)
 (2584 uniq "( pen 3 ; move ul - 4 , 0 ; move ul , ul - 2 ) " (1130 2322)
  (1130) -1 0)
 (2585 uniq "( move 2 - ua , ua ; move ua , 2 ) "
  (84 223 227 274 275 278 1653 1741 1962 2225 2291 2855) () -1 0)
 (2586 uniq "( move ua , ul ; pen ua ; move 0 - ul , ul ) "
  (492 642 679 686 719 1742 1824 1992 2006 2046 2292 2336 2450 2914 2956
   3065)
  () -1 0)
 (2587 uniq "( pen ua ; move 2 , ul ; move ua + ul , 4 ) "
  (618 646 1740 2094 2343 2382 2514) () -1 0)
 (2588 uniq "( move 4 , ul ; move 3 , ul ; move ua , 4 ) "
  (59 485 489 527 1818 1965 2102 2256 2399 2463 2476 2481 2492 2528 2570 2572
   2857 2881 2912 2950 2972 3004 3018 3081)
  () -1 0)
 (2589 uniq "( move ua - ul , ul / pen 3 ; move 3 - ua , ul ) "
  (249 2144 2511 2545 3002) () -1 0)
 (2590 equiv "( pen ua ; ( move ul , ul ; move ua , ul ) ) " (514 652 1057)
  () 2830 0)
 (2591 uniq "( move ua , 0 ; pen ua + ul ; move ul + ua , 4 ) "
  (233 983 2162 2278 2349 2517 2628 2695 2737 2760 2933 2989 2999 3060)
  (1122) -1 0)
 (2592 uniq "( move 4 , 7 + ul ; pen ua + ul ; move 2 , 4 ) "
  (922 1701 1802 2000 2310 2366 2541 2866 2920) () -1 0)
 (2593 uniq "( pen ua ; move ua , ul / 3 ; move ua , 2 ) "
  (48 85 114 629 641 724 1655 1671 1684 1688 1706 1713 1715 1726 1750 1803
   1823 1829 1840 1867 1869 1882 1886 1916 1939 1946 1952 1963 1998 2013 2031
   2034 2036 2039 2060 2064 2067 2072 2096 2115 2121 2145 2146 2149 2163 2190
   2206 2207 2208 2210 2222 2228 2236 2244 2261 2298 2332 2334 2364 2365 2380
   2393 2401 2402 2424 2427 2429 2462 2500 2505 2508 2523 2535 2538 2557 2562
   2583 2620 2622 2673 2676 2681 2704 2721 2744 2750 2757 2763 2801 2812 2820
   2826 2872 2885 2889 2894 2915 2940 2949 2969 2973 2976 2979 3037 3057 3062
   3067)
  () -1 0)
 (2594 uniq "( move 4 , 0 ; ul ; move ul - ua , ul ) " (2416)
  (898 1148 2218 2397) -1 0)
 (2595 equiv "( move 0 + ul , 4 / ua ; move ua + 3 , 4 / 2 ) " (1017 3026) ()
  3026 0)
 (2596 equiv "( pen ua ; move 2 , 2 ; move 3 , ua / ua ) "
  (557 1790 2569 2878) () 2911 0)
 (2597 uniq "( pen 3 ; move 3 , 4 / ul ; move ua , 2 ) "
  (567 1662 1684 1716 1733 1795 1823 1829 1840 1886 1939 1952 1960 1963 2041
   2064 2146 2175 2210 2244 2285 2365 2385 2389 2429 2459 2462 2498 2557 2667
   2686 2704 2763 2801 2822 2834 2940 3028)
  () -1 0)
 (2598 uniq "( pen ua ; move 3 , ua ; move 5 , ul ) "
  (22 292 295 303 319 320 322 327 331 333 336 338 348 351 356 364 385 1657
   1673 1674 1675 1683 1685 1705 1717 1722 1728 1729 1731 1735 1772 1776 1778
   1779 1784 1798 1800 1805 1809 1812 1813 1816 1828 1831 1860 1864 1865 1876
   1959 1972 1976 1979 1996 2038 2044 2047 2050 2058 2086 2093 2100 2106 2116
   2150 2155 2158 2166 2177 2180 2182 2185 2209 2231 2245 2284 2301 2313 2347
   2357 2372 2391 2412 2421 2425 2428 2431 2448 2458 2506 2515 2519 2521 2566
   2574 2575 2581 2602 2619 2623 2624 2668 2690 2722 2741 2749 2774 2782 2787
   2793 2800 2825 2853 2870 2911 2922 2927 2943 2987 3024 3027 3033 3053 3075
   3091)
  () -1 0)
 (2599 uniq "( move ua , 2 ; ( pen ua ; move 4 , 2 ) ) "
  (27 482 2198 2415 2571 2947 3092) (749) -1 0)
 (2600 uniq "( move 3 , ua / 3 ; pen ua * 3 ; move 3 , 7 + ul ) "
  (1125 1893 2769) () -1 0)
 (2601 uniq "( pen 5 ; move ul + ua , 0 ; move 2 , ul ) "
  (670 1702 1852 1987 2040 2107 2176 2295 2307 2331 2387 2433 2453 2472 2510
   2548 2658 2663 2674 2682 2746 2816 2843 2982 3005 3017 3076)
  (1852) -1 0)
 (2602 uniq "( pen ua ; move 3 , 5 ; move ua , ul ) "
  (22 292 303 319 320 325 327 331 333 336 337 338 348 351 356 364 385 1656
   1657 1673 1674 1675 1683 1685 1722 1729 1731 1735 1772 1776 1778 1779 1784
   1798 1800 1805 1809 1812 1813 1816 1828 1830 1831 1860 1865 1876 1959 1972
   1976 1979 1996 2038 2044 2047 2050 2058 2086 2093 2106 2150 2158 2166 2177
   2180 2182 2185 2189 2209 2231 2245 2301 2313 2347 2357 2372 2378 2391 2412
   2425 2428 2431 2448 2458 2506 2515 2519 2521 2566 2574 2581 2598 2619 2623
   2640 2668 2690 2722 2729 2741 2749 2774 2782 2787 2793 2800 2825 2829 2853
   2856 2870 2904 2906 2911 2922 2927 2943 2959 2987 3024 3027 3033 3053 3075
   3091)
  () -1 0)
 (2603 uniq "( move 2 , ul / 3 ; pen ua ; move ua , 2 ) "
  (1718 1743 1775 1806 1942 1982 1988 2089 2394 2403 2632 2716 2796 2850 3020
   3032)
  () -1 0)
 (2604 uniq "( move 3 , ul ; pen ua ; move 4 , 2 ) "
  (17 291 297 305 308 328 329 335 362 1681 1725 1727 1748 1759 1783 1786 1825
   1855 1856 1899 1913 1923 1932 1971 1980 1997 2025 2032 2048 2097 2132 2156
   2202 2220 2230 2253 2268 2281 2304 2317 2344 2356 2386 2423 2426 2430 2441
   2496 2497 2499 2560 2699 2703 2706 2707 2731 2802 2806 2810 2833 2858 2860
   2902 2919 2983 3022 3061)
  () -1 0)
 (2605 uniq "( pen 2 + 3 ; move 3 - ua , ua ; move ua , ul ) "
  (2029 2233 2421 2452 2509 2685 2747) (2029 2452) -1 0)
 (2606 equiv "( move ua , ul ; pen 4 + ul ; move ua , 4 ) "
  (57 89 564 637 1818 1956 1965 2420 2795 2808 2866 3018 3066) () 2802 0)
 (2607 uniq "( pen ul + ul ; move 4 , 4 ; move 0 - ua , ul ) "
  (917 1986 2004 2151 2192 2621 2839 2968) () -1 0)
 (2608 uniq "( move 4 + 2 , 3 + ul ; pen ua ; move 4 - ul , ul + 3 ) "
  (1458 1900) () -1 0)
 (2609 uniq "( pen 3 ; move ua , ua ; move 3 , 5 ) "
  (18 293 295 296 316 322 336 350 351 356 385 1705 1707 1717 1728 1767 1776
   1788 1798 1864 1879 2011 2047 2082 2095 2100 2111 2114 2155 2181 2284 2296
   2357 2443 2542 2575 2611 2624 2643 2670 2756 2771 2777 2845 2880 2987 2991
   3007 3014 3027)
  () -1 0)
 (2610 uniq "( move ua , 3 - ul ; move 2 , ul ; move ua , 3 ) "
  (965 2346 2481 2544 2580 2831 2875 2981) () -1 0)
 (2611 uniq "( pen 3 ; move ua , ul ; move 4 , 2 ) "
  (17 54 268 269 271 293 296 322 332 350 356 357 361 1656 1664 1685 1691 1707
   1717 1720 1722 1728 1729 1778 1779 1788 1789 1798 1800 1813 1830 1864 1876
   1879 1925 1928 1967 2001 2009 2011 2047 2082 2095 2100 2106 2111 2114 2116
   2181 2284 2296 2325 2329 2348 2357 2428 2431 2443 2488 2521 2566 2575 2609
   2624 2643 2670 2749 2756 2798 2835 2845 2865 2880 2904 2991 3007 3014 3033
   3053 3071)
  () -1 0)
 (2612 uniq "( pen ua ; move 4 , ul ; move 0 - 3 , ul ) "
  (551 646 684 1862 2411 2635 2929 2965) (1862) -1 0)
 (2613 uniq "( pen 4 ; move 0 - ua , ul ; move 2 , ul ) "
  (517 1676 1861 1881 2040 2049 2069 2070 2165 2176 2239 2257 2295 2406 2433
   2439 2467 2510 2548 2682 2746 2816 2837 2852 2945 2967 3005 3055)
  () -1 0)
 (2614 uniq "( pen ua ; move ul - ua , 4 ; move 4 , ul ) "
  (60 592 670 1676 1685 1817 1852 1927 2043 2075 2107 2165 2176 2224 2239
   2241 2257 2270 2295 2307 2331 2379 2387 2433 2453 2461 2467 2472 2490 2510
   2548 2573 2616 2658 2663 2674 2682 2705 2717 2727 2733 2746 2754 2816 2837
   2843 2891 2945 2967 2982 2992 3005 3017 3038 3055 3074 3076)
  () -1 0)
 (2615 uniq "( pen 4 + ul ; move 2 - ua , 0 ; move ul , ul ) "
  (841 1961 2029 2186 2287 2772 2838 2893) (2186 2287) -1 0)
 (2616 uniq "( pen ua ; move ua - ul , 4 ; move 4 , ul ) "
  (60 106 497 542 685 1680 1685 1687 1697 1703 1726 1738 1749 1769 1791 1833
   1867 1881 1897 1901 1911 1919 1927 1978 2037 2075 2099 2224 2242 2274 2300
   2321 2337 2345 2352 2417 2424 2447 2461 2467 2483 2490 2583 2614 2641 2660
   2674 2717 2718 2733 2791 2847 2872 2925 2952 2979 3037 3038 3040 3055
   3088)
  () -1 0)
 (2617 uniq "( pen 2 ; move 3 , ul / 4 ; move ua , ul ) "
  (724 1823 1882 1958 1960 2064 2066 2072 2123 2146 2187 2197 2210 2228 2261
   2279 2297 2332 2337 2365 2388 2402 2404 2424 2462 2498 2505 2583 2625 2636
   2650 2681 2688 2693 2704 2721 2732 2742 2801 2819 2820 2821 2826 2828 2879
   2882 2889 2907 2909 2924 2960 2986 3037 3057 3072)
  () -1 0)
 (2618 uniq "( pen ua ; move ul / 2 , ul + ul ; move 4 , ul ) " (1307 1876)
  (1307) -1 0)
 (2619 uniq "( pen ua ; move 4 , 4 ; move 2 , ul ) "
  (17 270 271 295 320 331 333 336 337 338 348 356 364 385 1657 1664 1673 1674
   1675 1683 1685 1705 1722 1728 1729 1731 1735 1772 1776 1778 1779 1784 1798
   1800 1805 1809 1812 1813 1816 1828 1830 1860 1864 1865 1876 1879 1928 1959
   1972 1976 1979 1996 2038 2050 2058 2086 2093 2106 2116 2158 2166 2177 2180
   2181 2182 2185 2199 2209 2231 2245 2313 2322 2347 2372 2378 2412 2443 2448
   2458 2506 2515 2519 2567 2574 2581 2598 2602 2668 2690 2722 2730 2741 2756
   2782 2787 2793 2800 2817 2829 2848 2870 2880 2907 2911 2922 2943 2959 2987
   2991 3033 3071 3075 3091)
  (2199) -1 1)
 (2620 uniq "( pen ua ; move ua , ul / 7 ; move ua , 2 ) "
  (85 114 629 641 724 1671 1684 1688 1706 1715 1726 1730 1750 1803 1823 1829
   1840 1867 1869 1882 1886 1916 1939 1946 1952 1963 1998 2013 2031 2034 2036
   2039 2060 2064 2067 2087 2096 2115 2121 2146 2149 2163 2190 2206 2207 2208
   2210 2222 2228 2244 2261 2298 2332 2364 2365 2380 2393 2401 2402 2424 2427
   2429 2462 2505 2508 2523 2535 2538 2557 2562 2583 2593 2622 2641 2673 2676
   2704 2721 2750 2757 2801 2812 2820 2826 2872 2885 2889 2894 2915 2921 2940
   2949 2969 2976 2979 3037 3057 3067)
  () -1 0)
 (2621 equiv "( pen ua + ul ; move 3 , 4 ; move ul - ua , ul ) "
  (338 1735 1986 2004 2192 2607 2839 2968 3008) () 3008 0)
 (2622 uniq "( pen ua ; move ua , ul / 0 ; move ua , 3 ) "
  (45 114 641 724 1671 1688 1706 1715 1726 1750 1803 1823 1834 1867 1882 1886
   1916 1946 1952 2031 2034 2036 2039 2064 2067 2096 2163 2190 2207 2210 2222
   2228 2242 2261 2298 2332 2364 2380 2393 2401 2402 2424 2427 2508 2523 2557
   2583 2593 2620 2673 2688 2721 2726 2767 2799 2820 2826 2872 2874 2885 2889
   2940 3037 3057)
  (1010 1872 2039) -1 0)
 (2623 uniq "( pen ua ; move 3 , 3 ; move ul , 2 ) "
  (295 303 319 320 322 325 326 327 331 338 364 385 1683 1707 1731 1735 1789
   1809 1812 1816 1828 1830 1860 1864 1928 1959 1967 1976 1979 2011 2038 2044
   2050 2086 2093 2106 2116 2158 2177 2180 2182 2185 2209 2245 2301 2329 2347
   2357 2372 2391 2412 2425 2428 2431 2488 2515 2519 2521 2598 2602 2624 2651
   2668 2670 2722 2741 2749 2782 2787 2825 2829 2853 2904 2922 2927 2943 2991
   3027 3053)
  () -1 1)
 (2624 uniq "( pen 3 ; move 3 , ua ; move 3 , 2 ) "
  (292 295 296 303 319 322 332 336 350 1707 1717 1728 1767 1788 1831 1864
   1959 2011 2044 2047 2050 2093 2095 2116 2155 2245 2284 2296 2301 2347 2357
   2391 2428 2431 2521 2566 2574 2575 2581 2598 2609 2611 2623 2643 2670 2722
   2741 2771 2787 2825 2927 2943 2987 2991 3007 3027 3053)
  () -1 0)
 (2625 uniq "( pen 2 ; move 2 , ul / 4 ; move 4 , ul ) "
  (512 656 1726 1752 1832 1867 1882 1958 1978 2066 2072 2123 2187 2197 2236
   2279 2297 2334 2335 2337 2402 2404 2422 2424 2474 2500 2502 2535 2583 2617
   2636 2650 2676 2681 2732 2742 2751 2780 2820 2821 2828 2869 2872 2901 2907
   2909 2921 2924 2977 2986 3037 3042 3062 3087)
  () -1 0)
 (2626 uniq "( pen 3 ; move 4 + ul , ul / ua ; move 2 , ul ) "
  (853 1851 1875 1921 2110 2142 2169 2226 2243 2368 2381 2494 2503 2513 2713
   2740 2784 2811 2877 2905 2908 2923 3059 3089)
  () -1 0)
 (2627 uniq "( move ua , 3 - 4 ; move ul , 2 ; move 7 , ul ) "
  (807 2133 2684) () -1 0)
 (2628 uniq "( move ua , 0 ; pen ua + ul ; move ul + 0 , 4 ) "
  (983 2162 2278 2517 2591 2695 2737 2760 2933 2989 2999 3060) (1128) -1 0)
 (2629 uniq "( move ul - ua , ul ; move ua , 4 * 3 ; v0 = ul ) " (1454)
  (1454) -1 0)
 (2630 uniq "( pen 6 ; move ul , 3 / ua ; move 4 , ul ) "
  (653 724 1690 1752 1845 1867 1926 1958 2013 2041 2104 2187 2370 2422 2502
   2751 2884 2901 2935 2948 2977 3034)
  (653 2104) -1 0)
 (2631 uniq "( move ua + ul , ua * pen 4 ; move ua , 7 * 3 ) "
  (915 2308 2862) () -1 0)
 (2632 equiv "( move ua , ua - 3 ; pen ua ; move ua , 2 ) "
  (48 84 558 674 1775 1806 1820 1982 2048 2089 2377 2550 2603 2796 2850 3020
   3032)
  () 3032 0)
 (2633 uniq "( pen 3 ; move ua + 2 , 3 / ua ; move 4 , 4 ) "
  (1875 1912 1944 1953 2014 2053 2127 2205 2229 2275 2286 2302 2525 2804 2868
   2877)
  () -1 0)
 (2634 uniq "( pen 4 ; move ul , ul - 4 ; move 2 * 2 , ul ) " (858 2554) ()
  -1 0)
 (2635 uniq "( pen ua ; move 4 , ua ; move 4 + 3 , ul ) "
  (99 551 645 646 1772 2170 2411 2493 2612) () -1 0)
 (2636 uniq "( pen ua ; move 4 , ul / 4 ; move 3 , ul ) "
  (641 656 724 1671 1688 1694 1713 1716 1726 1867 1882 1958 1978 2002 2031
   2034 2060 2066 2067 2072 2083 2096 2123 2149 2187 2190 2197 2200 2204 2207
   2216 2222 2228 2236 2252 2261 2279 2297 2334 2337 2380 2388 2402 2404 2424
   2427 2462 2480 2500 2502 2523 2583 2617 2625 2638 2650 2688 2689 2693 2697
   2721 2742 2745 2758 2780 2817 2819 2820 2826 2869 2872 2889 2894 2907 2909
   2939 2949 2986 2998 3037 3042 3069)
  () -1 0)
 (2637 uniq "( pen ua ; move 3 + ul , ul ; move ua , 4 ) "
  (543 582 678 1703 1770 1823 1896 1931 1955 2099 2103 2108 2143 2159 2173
   2321 2417 2425 2454 2549 2648 2915 2946 2952 2979 3040 3058)
  () -1 0)
 (2638 uniq "( pen ua ; move 4 , 3 / ua ; move 3 , 2 ) "
  (295 430 653 1756 1795 1990 1998 2013 2031 2036 2041 2060 2096 2149 2190
   2206 2222 2244 2260 2285 2290 2316 2358 2364 2369 2370 2480 2482 2535 2636
   2689 2817 2871 2884 2894 2935 2939 2948 2949 2970 2976 3067)
  () -1 0)
 (2639 uniq "( move ul , 3 + 3 ; pen 4 + ul ; move ua , ul - ua ) "
  (1466 2790) (1466) -1 1)
 (2640 uniq "( pen ua ; move 7 , 9 ; move ua , 4 ) "
  (320 325 333 337 348 351 361 1656 1664 1674 1683 1731 1735 1767 1805 1809
   1828 1830 1831 1860 1865 1972 1976 1993 1996 2001 2044 2155 2189 2357 2425
   2431 2506 2602 2715 2749 2782 2793 2829 2835 2853 2904 2906 2922 3091)
  () -1 0)
 (2641 uniq "( pen ua ; move ua - ul , 7 ; move 4 , 2 ) "
  (106 497 542 678 685 1680 1687 1697 1738 1749 1769 1791 1881 1897 1911 1919
   1955 2075 2099 2103 2163 2173 2224 2242 2300 2345 2352 2364 2393 2447 2461
   2490 2562 2616 2620 2648 2660 2718 2733 2847 2915 2925 2952 2979)
  () -1 0)
 (2642 uniq "( pen ua ; move ua , 0 - 2 ; move 7 , 4 ) "
  (626 1763 1859 1866 1940 2033 2109 2121 2145 2562 2757 2969 3077) () -1 0)
 (2643 uniq "( pen 3 ; move ua , ua ; move ua , 2 ) "
  (84 269 292 293 295 296 303 311 316 322 325 332 336 350 351 356 357 361 385
   1656 1691 1705 1707 1717 1728 1767 1788 1789 1805 1830 1831 1864 1879 1925
   1928 1967 1972 2001 2011 2044 2082 2095 2100 2116 2155 2181 2189 2245 2284
   2296 2301 2357 2378 2431 2443 2488 2521 2575 2609 2611 2624 2651 2670 2729
   2756 2793 2829 2845 2870 2880 2904 2987 2991 3007 3014 3027)
  () -1 0)
 (2644 uniq "( move ul , ua / 4 ; move ua , 2 ; move 4 , ul ) "
  (875 1888 2178 2720) () -1 0)
 (2645 uniq "( pen 3 ; move ua , 9 ; move 2 + ul , ul ) "
  (104 2436 2493 2555 2880) () -1 0)
 (2646 uniq "( pen ua ; move ua , ua - 3 ; move ul , ul ) "
  (112 385 626 1655 1671 1688 1694 1713 1761 1763 1803 1827 1859 1866 1904
   1940 1970 2020 2033 2059 2087 2109 2128 2145 2214 2216 2252 2330 2427 2473
   2728 2761 2765 2794 2827 2872 2889 2942 2973)
  () -1 0)
 (2647 uniq "( pen ua ; move 3 , 4 / 3 ; move 2 , ul ) "
  (584 1655 1662 1688 1716 1829 1866 1933 2064 2072 2083 2149 2187 2209 2219
   2236 2252 2261 2297 2334 2380 2388 2402 2404 2424 2427 2473 2500 2508 2538
   2681 2688 2693 2697 2721 2761 2763 2817 2820 2827 2872 2882 2889 2907 2960
   2973 2986 3028 3034)
  () -1 0)
 (2648 uniq "( pen ua ; move ua + ul , ul ; move 7 , 2 ) "
  (542 582 678 1703 1738 1770 1833 1869 1881 1897 1916 1931 1955 2037 2099
   2103 2159 2173 2321 2345 2417 2447 2454 2490 2549 2637 2641 2718 2915 2925
   2952 2969 2979)
  () -1 0)
 (2649 uniq "( move ua , 4 ; pen ua ; move ua , 4 ) "
  (57 88 231 283 291 294 334 358 362 637 1672 1725 1745 1748 1783 1786 1804
   1855 1856 1913 1917 1932 1945 1971 1974 1980 1991 2023 2032 2048 2051 2079
   2097 2132 2154 2202 2217 2220 2281 2304 2317 2320 2327 2349 2350 2356 2377
   2409 2430 2441 2496 2499 2556 2577 2675 2679 2699 2703 2706 2707 2710 2725
   2731 2759 2776 2802 2806 2810 2858 2876 2902 2919 2933 2983 3078)
  (637) -1 0)
 (2650 uniq "( pen 3 ; move 2 , ul / 4 ; move 2 , ul ) "
  (1832 1882 1926 1958 2066 2067 2083 2123 2197 2227 2236 2252 2279 2297 2315
   2334 2337 2380 2402 2404 2424 2445 2462 2489 2500 2502 2583 2617 2625 2636
   2681 2693 2697 2742 2758 2780 2817 2819 2820 2821 2879 2907 2909 2921 2924
   2977 3003 3037 3057 3069 3087)
  () -1 0)
 (2651 uniq "( pen 4 ; move 4 , 3 ; move ua , 2 ) "
  (28 269 270 290 295 302 303 325 332 333 336 342 350 1691 1789 1795 1809
   1830 1925 1976 2011 2044 2116 2357 2378 2428 2431 2482 2623 2643 2744 2829
   2870 2904 3091)
  (1795) -1 0)
 (2652 uniq "( pen 3 ; move 4 , 0 / ua ; move 7 , 4 ) "
  (1926 1960 2161 2358 2389 2445 2534 2667 2686 2701 2758 2824 2871 2898 2939
   3003 3072)
  (2534) -1 0)
 (2653 uniq "( pen ua ; move 3 , ul ; move 7 , 4 * 2 ) "
  (552 2007 2092 2137 2353 2398 2485 2540) () -1 0)
 (2654 uniq "( move ua , 7 ; move ua + 2 , 2 ) "
  (124 138 141 146 163 166 169 176 177 199 236 1670 1708 1719 1730 1747 1794
   1848 1857 1889 1954 1969 2024 2091 2124 2390 2396 2470 2752)
  () -1 0)
 (2655 uniq "( pen ua + ul ; move 3 , 4 ; move ua , 2 ) "
  (624 689 1744 1771 1799 1815 1850 1871 1890 1894 2028 2533 2537) (1829) -1
  0)
 (2656 uniq "( pen ua ; move 3 , 4 ; move ua , ua + 4 ) "
  (616 1837 2035 2160 2272 2328 2398 3090) () -1 0)
 (2657 equiv "( move ua , 4 ; ( pen 3 + 2 ; move ua + ul , 4 ) ) " (1122) ()
  2933 0)
 (2658 uniq "( pen ua ; move ul + ua , ul ; move ul , ul ) "
  (670 678 1676 1703 1817 1852 1927 1987 2040 2107 2159 2165 2176 2239 2241
   2257 2263 2270 2295 2307 2321 2331 2379 2387 2417 2433 2467 2472 2510 2548
   2573 2601 2614 2674 2682 2717 2733 2746 2816 2837 2843 2945 2967 2982 3017
   3038 3074 3076)
  () -1 0)
 (2659 uniq "( pen ua ; move 2 + 3 , 7 ; move 3 , ul ) "
  (1915 2159 2417 2472 2683 2925 3019 3076) () -1 0)
 (2660 uniq "( pen ua ; move ua - ul , 7 ; move 2 , 4 ) "
  (106 542 685 1680 1687 1697 1738 1749 1769 1770 1791 1833 1881 1897 1911
   1919 2037 2075 2224 2242 2300 2321 2352 2447 2454 2461 2490 2508 2549 2616
   2641 2663 2682 2705 2718 2791 2847 2925 2952 2967 2979 3019)
  () -1 0)
 (2661 uniq "( move ua , ul ; pen 3 ; move 3 , ua / 4 ) "
  (1885 2531 2576 3045 3049) () -1 0)
 (2662 uniq "( pen 3 ; move ua , ua / 4 ; move ul , 4 ) "
  (626 1694 1709 1940 2059 2123 2175 2207 2252 2315 2832 3003 3043) () -1 0)
 (2663 uniq "( pen ua ; move ul - ua , 0 ; move 2 , 4 ) "
  (25 542 670 1676 1697 1749 1817 1852 1927 1987 2107 2176 2239 2241 2257
   2270 2295 2307 2331 2352 2379 2433 2453 2467 2510 2573 2601 2614 2660 2674
   2682 2705 2717 2727 2733 2746 2754 2816 2837 2843 2891 2967 2982 3005 3038
   3055 3074 3076)
  () -1 1)
 (2664 uniq "( move ua , 2 ; pen 3 + ul ; move 4 , 3 ) "
  (569 1782 1965 2420 2449 2808) () -1 0)
 (2665 uniq "( pen ua * ul ; move ua , 5 ; move 2 , 2 ) "
  (1744 2028 2080 2084 2199 2537 2788) () -1 0)
 (2666 equiv "( move 3 , 2 - ul ; pen ua + ul ; move 4 , 4 ) "
  (922 2310 2384 2731 3000) () 2731 0)
 (2667 uniq "( pen 3 ; move 3 , 2 / ua ; move ua , 4 ) "
  (1715 1868 1939 1960 2041 2161 2219 2244 2358 2376 2444 2445 2498 2597 2652
   2673 2686 2763 2824 2828 2871 2879 2898 2917 2941 3003 3034 3072)
  () -1 0)
 (2668 equiv "( pen ua ; move 3 , 7 ; move 4 , ul ) "
  (271 292 293 303 319 320 327 331 333 338 348 356 364 385 1657 1673 1674
   1675 1683 1685 1717 1722 1729 1731 1735 1772 1776 1778 1779 1784 1789 1798
   1799 1800 1805 1809 1812 1813 1816 1828 1831 1860 1865 1876 1957 1959 1967
   1972 1976 1979 1993 1996 2009 2038 2044 2047 2050 2058 2082 2086 2093 2100
   2106 2116 2150 2158 2166 2177 2180 2182 2185 2209 2231 2245 2284 2301 2313
   2325 2329 2347 2348 2372 2391 2412 2425 2428 2431 2443 2448 2458 2488 2506
   2515 2519 2521 2566 2574 2575 2581 2598 2602 2619 2623 2690 2722 2741 2749
   2774 2782 2787 2793 2798 2800 2825 2835 2845 2853 2865 2911 2922 2927 2943
   2987 3014 3024 3027 3033 3053 3075 3091)
  () 2774 0)
 (2669 equiv "( move 3 , ul * 2 ; pen ua + ul ; move ua , ul ) "
  (1053 1878 1937 1980 2101 2168 2259 2395 2803 2810) () 2810 0)
 (2670 uniq "( pen ua ; move ua , 0 ; move 3 , 2 ) "
  (24 269 270 293 295 320 322 325 326 348 350 351 356 385 1656 1657 1664 1675
   1685 1691 1705 1707 1722 1729 1776 1778 1779 1788 1789 1798 1800 1812 1813
   1816 1830 1864 1865 1925 1928 1967 1972 1996 2011 2038 2044 2058 2086 2095
   2100 2111 2114 2116 2155 2158 2177 2180 2185 2189 2245 2296 2301 2329 2347
   2357 2372 2391 2428 2431 2488 2521 2542 2567 2609 2611 2623 2624 2643 2677
   2715 2722 2741 2777 2787 2793 2800 2825 2829 2835 2844 2853 2904 2911 2927
   2943 2991 3007 3027 3053 3075 3091)
  (322 1084) -1 0)
 (2671 uniq "( move 4 , 3 ; move 4 , ul ; move 2 , 4 + ul ) " (755 800) () -1
  0)
 (2672 uniq "( move 4 , 4 ; pen 2 ; move ua , ua / 4 ) "
  (30 31 1714 2531 2576 3045 3063) () -1 0)
 (2673 uniq "( pen ua ; move 2 , ul / ua ; move ua , 4 ) "
  (724 1715 1750 1823 1867 1882 1936 1952 1960 2013 2031 2036 2039 2064 2066
   2096 2161 2187 2190 2210 2219 2222 2228 2236 2244 2261 2279 2297 2298 2332
   2334 2364 2376 2380 2402 2500 2502 2508 2535 2583 2593 2620 2622 2667 2686
   2696 2721 2742 2763 2820 2826 2828 2889 2894 2909 2917 2935 2939 2948 2949
   3003 3062 3068 3072)
  () -1 0)
 (2674 uniq "( pen ua ; move ul - ua , 0 ; move 4 , ul ) "
  (51 592 670 1676 1687 1778 1817 1852 1927 1987 2043 2069 2070 2075 2107
   2165 2176 2224 2239 2241 2242 2257 2270 2274 2295 2307 2331 2379 2387 2433
   2453 2461 2467 2490 2510 2548 2573 2601 2614 2616 2658 2663 2682 2705 2717
   2727 2733 2746 2754 2816 2837 2843 2847 2945 2967 2982 2992 3005 3017 3038
   3055 3074 3076)
  () -1 0)
 (2675 uniq "( move ua , 4 ; pen 3 ; move ua , 2 ) "
  (48 288 291 294 297 334 1212 1650 1672 1745 1748 1786 1804 1855 1917 1964
   1971 1974 1991 2048 2051 2097 2132 2253 2281 2304 2312 2317 2320 2327 2349
   2350 2356 2375 2409 2430 2441 2496 2649 2699 2776 2802 2806 2902 2919)
  () -1 0)
 (2676 uniq "( pen 2 ; move ua , ul / ua ; move 4 , 2 ) "
  (54 1726 1750 1832 1867 1958 1998 2036 2067 2096 2115 2121 2163 2175 2187
   2207 2222 2228 2337 2364 2376 2380 2393 2401 2502 2535 2562 2593 2620 2625
   2681 2751 2821 2872 2894 2921 2935 2949 2970 3003 3067 3072)
  () -1 0)
 (2677 uniq "( pen ua ; move ua , 3 + move 3 , ul ) "
  (22 99 322 325 356 385 1657 1675 1685 1707 1722 1729 1776 1778 1779 1789
   1798 1800 1809 1812 1813 1816 1879 1972 1976 1979 1996 2038 2058 2111 2114
   2155 2177 2412 2542 2670 2722 2741 2777 2793 2798 2911 2943 2991)
  () -1 0)
 (2678 uniq "( move ua , 0 ; pen ua + ul ; move 2 , 4 + ul ) " (979 994) ()
  -1 0)
 (2679 equiv "( move ua , ua ; pen ua ; move 3 , 4 ) "
  (231 283 285 358 362 1672 1745 1748 1783 1786 1804 1825 1836 1855 1856 1899
   1913 1917 1923 1932 1934 1945 1950 1971 1974 1991 1997 2003 2023 2032 2048
   2051 2079 2132 2134 2154 2156 2202 2211 2217 2281 2288 2327 2349 2355 2356
   2430 2441 2496 2499 2649 2706 2710 2725 2731 2759 2776 2802 2806 2876 2902
   2983 3011 3078 3084)
  () 2759 1)
 (2680 uniq "( 3 ; move 4 + 3 , 2 / ua ; move 4 , 4 ) " (1944) () -1 0)
 (2681 uniq "( pen 2 ; move ua , ul / 3 ; move 2 , ul ) "
  (641 1655 1671 1688 1713 1726 1832 1866 1867 1919 1933 1958 1970 2034 2067
   2072 2083 2123 2128 2227 2236 2252 2273 2334 2337 2380 2393 2424 2427 2473
   2489 2500 2508 2523 2538 2583 2593 2617 2625 2647 2650 2676 2687 2693 2697
   2721 2732 2751 2761 2791 2820 2821 2826 2872 2882 2889 2907 2921 2973 3003
   3037 3057 3069 3087)
  () -1 0)
 (2682 uniq "( pen ua ; move ul - ua , 7 ; move 2 , ul ) "
  (670 1676 1680 1769 1791 1817 1852 1881 1915 1919 1927 1987 2040 2043 2107
   2165 2176 2224 2239 2241 2257 2270 2295 2307 2331 2379 2387 2433 2439 2453
   2467 2472 2510 2548 2573 2601 2613 2614 2658 2660 2663 2674 2705 2717 2727
   2728 2733 2746 2816 2837 2843 2891 2945 2967 2982 2992 3005 3017 3019 3038
   3055 3074 3076)
  () -1 0)
 (2683 uniq "( pen ua ; move ua + 4 , 7 ; move 0 , ul ) "
  (1833 1915 2037 2224 2321 2345 2417 2659 2925 3019) (1198) -1 0)
 (2684 uniq "( move ua , ul - 2 ; move ul , 2 ; move ua , ul ) "
  (965 1949 2133 2249 2280 2351 2627 2815 2888 2966 3029) () -1 0)
 (2685 uniq "( pen 2 * ul ; move 3 - ua , ua ; move 2 , ul ) "
  (847 1891 1961 2029 2233 2410 2421 2452 2509 2605 2747 2864) () -1 0)
 (2686 uniq "( pen 3 ; move 4 , 4 / ua ; move ua , 4 ) "
  (31 1960 1963 2041 2096 2125 2161 2175 2358 2389 2429 2445 2462 2597 2652
   2667 2673 2763 2819 2824 2871 2898 2939 3003 3072)
  (2125) -1 0)
 (2687 uniq "( pen 2 ; move 7 , 2 / ul ; move 2 , ul ) "
  (1696 2204 2445 2474 2489 2681 2821 2882 2951) () -1 0)
 (2688 equiv "( pen ua ; move 3 , ul / 0 ; move 3 , ul ) "
  (584 641 724 1671 1688 1713 1716 1726 1752 1823 1867 1901 1990 2034 2064
   2072 2131 2149 2159 2187 2210 2219 2222 2236 2261 2332 2334 2376 2380 2388
   2402 2404 2424 2427 2464 2480 2500 2502 2523 2538 2557 2583 2617 2622 2636
   2647 2689 2693 2721 2741 2745 2761 2820 2826 2847 2869 2872 2879 2889 2894
   2907 2960 2986 3034 3037 3069)
  () 2741 0)
 (2689 uniq "( pen ua ; move 4 , 3 / 2 ; move 3 , ul ) "
  (430 641 653 1671 1694 1716 1726 1752 1756 1761 1827 1859 1904 1990 2002
   2034 2060 2083 2190 2200 2204 2206 2260 2261 2279 2290 2316 2335 2358 2369
   2388 2422 2427 2446 2473 2480 2482 2500 2523 2636 2638 2688 2693 2701 2745
   2751 2758 2817 2819 2869 2907 2960 2970 2986 2998 3037 3069)
  () -1 0)
 (2690 uniq "( pen ua ; move 5 , ua ; move 2 , ul ) "
  (22 295 296 319 320 322 331 333 336 338 348 351 356 364 385 1657 1664 1673
   1674 1675 1683 1685 1705 1717 1722 1728 1729 1731 1735 1772 1776 1778 1779
   1784 1798 1800 1805 1809 1812 1813 1816 1828 1860 1864 1865 1876 1879 1928
   1959 1972 1976 1979 1996 2038 2050 2058 2086 2093 2100 2106 2116 2155 2158
   2166 2177 2180 2181 2182 2185 2209 2231 2245 2301 2313 2357 2372 2412 2448
   2458 2506 2515 2519 2521 2567 2574 2581 2598 2602 2619 2668 2722 2730 2741
   2756 2782 2787 2793 2800 2848 2870 2880 2911 2922 2943 2987 3027 3033 3071
   3075 3091)
  (1702) -1 0)
 (2691 uniq "( move ua , ul ; pen ua ; move 4 , ua - 2 ) "
  (54 75 90 501 681 1786 1880 1922 2152 2392) () -1 0)
 (2692 uniq "( move 4 , ua - ul ; pen 4 + 2 ; move ua , ul ) " (184 769) ()
  -1 0)
 (2693 uniq "( pen ua ; move 3 , ul / 2 ; move 2 , ul ) "
  (331 641 724 1671 1688 1716 1726 1750 1763 1791 1823 1827 1832 1833 1867
   1904 1933 1990 2034 2060 2064 2067 2072 2083 2123 2149 2187 2190 2200 2210
   2219 2227 2236 2252 2260 2261 2273 2332 2334 2335 2376 2380 2388 2401 2402
   2404 2422 2424 2427 2473 2480 2489 2500 2502 2508 2523 2538 2583 2617 2636
   2647 2650 2681 2688 2689 2697 2704 2721 2732 2758 2761 2812 2817 2819 2820
   2821 2826 2869 2872 2879 2882 2889 2901 2907 2960 2986 2998 3028 3034 3037
   3069)
  () -1 0)
 (2694 uniq "( move ua , 3 / 2 ; move ua , 2 ; move 3 + ul , 4 ) "
  (1101 2068 2997) () -1 0)
 (2695 uniq "( move ua , 0 ; pen ua + ul ; move ul + 3 , 4 ) "
  (983 2162 2278 2517 2591 2628 2737 2759 2760 2933 2989 2999 3060) () -1 0)
 (2696 uniq "( pen ua ; move 2 , 7 / ua ; move 4 , 4 ) "
  (653 1662 1752 1867 2187 2219 2236 2298 2335 2364 2376 2422 2474 2502 2535
   2673 2824 2894 2917 2935 2939 2941 2948 2977 3034 3062 3067 3068)
  () -1 0)
 (2697 uniq "( pen ua ; move ua , 7 / 4 ; move 2 , ul ) "
  (641 1655 1657 1671 1688 1694 1726 1763 1827 1866 1867 1904 1933 1978 2020
   2034 2037 2067 2083 2087 2123 2207 2227 2228 2252 2279 2297 2315 2334 2337
   2380 2402 2404 2424 2427 2473 2489 2508 2523 2583 2636 2647 2650 2681 2693
   2728 2742 2745 2761 2812 2817 2821 2826 2827 2872 2874 2889 2907 2909 2973
   3028 3037 3067)
  () -1 0)
 (2698 uniq "( move ua , ul + ul ; pen 3 ; move 4 , ua / 3 ) "
  (939 1885 1920 2299) () -1 0)
 (2699 uniq "( move 3 , 4 ; pen ua ; move ua , ul ) "
  (22 267 291 294 297 304 305 308 328 329 334 335 358 362 1672 1681 1725 1727
   1745 1748 1783 1825 1836 1856 1913 1923 1932 1934 1945 1974 1980 1991 2023
   2032 2048 2134 2154 2202 2217 2220 2230 2268 2281 2304 2317 2320 2344 2349
   2355 2356 2375 2423 2426 2430 2441 2497 2577 2604 2649 2675 2703 2707 2731
   2776 2802 2810 2833 2858 2860 2876 2919 2983 3022)
  () -1 0)
 (2700 uniq "( pen 2 ; move ua , 4 + ul ; move ua , 3 ) "
  (71 567 629 1684 1706 1834 1886 2735 2767 2799) () -1 0)
 (2701 uniq "( pen 2 ; move 4 , 3 / 2 ; move 7 , 4 ) "
  (430 2290 2316 2358 2446 2482 2652 2689 2751 2758 2898 2970 3072) () -1 0)
 (2702 uniq "( move ua , ul ; move 4 , ul ; move 4 , 2 ) "
  (54 58 93 450 533 534 589 665 1818 1821 1863 2136 2157 2256 2269 2399 2481
   2527 2564 2570 2788 2857 2881 2883 2910 2936 2950 3004 3018 3030 3081)
  () -1 0)
 (2703 uniq "( move 3 , 4 ; pen ua ; move 4 , ul ) "
  (267 291 294 305 308 328 329 334 335 358 1672 1681 1725 1727 1745 1748 1759
   1783 1786 1825 1836 1855 1856 1895 1913 1923 1932 1934 1945 1974 1977 1980
   2023 2026 2032 2134 2154 2202 2217 2220 2230 2268 2304 2317 2324 2338 2344
   2355 2423 2426 2441 2497 2560 2577 2604 2649 2699 2706 2707 2731 2736 2776
   2810 2833 2860 2895 2919 2983 3022 3061)
  (865) -1 1)
 (2704 uniq "( pen 7 ; move 3 , ul / 2 ; move ua , 2 ) "
  (1750 1823 1829 1840 1882 1929 1939 1960 1963 1990 2031 2060 2064 2096 2115
   2146 2149 2190 2206 2210 2228 2244 2261 2332 2365 2388 2401 2402 2429 2462
   2482 2498 2505 2538 2557 2593 2597 2617 2620 2693 2721 2726 2732 2750 2801
   2819 2828 2944 2960 2986)
  (2210) -1 0)
 (2705 uniq "( pen ua ; move ul - ua , 4 ; move 2 , 4 ) "
  (592 670 1676 1697 1817 1852 1927 2107 2176 2239 2241 2257 2270 2295 2307
   2331 2379 2433 2453 2467 2472 2510 2573 2614 2660 2663 2674 2682 2717 2727
   2733 2746 2754 2816 2837 2843 2891 2967 2982 3005 3038 3055 3074)
  () -1 0)
 (2706 uniq "( move ua , ul ; pen ua ; move 4 , 4 ) "
  (58 283 308 328 329 335 362 1672 1681 1727 1745 1748 1759 1783 1786 1804
   1855 1856 1913 1917 1923 1945 1971 1974 1980 1991 1997 2023 2025 2032 2048
   2079 2097 2132 2154 2156 2202 2217 2220 2253 2268 2281 2293 2317 2324 2327
   2338 2344 2349 2356 2426 2430 2441 2496 2497 2499 2560 2604 2649 2679 2703
   2707 2710 2725 2731 2759 2776 2802 2806 2833 2858 2860 2902 2983 3061
   3078)
  () -1 0)
 (2707 uniq "( move 2 , ul ; pen ua ; move ua , ul ) "
  (22 285 291 294 297 299 304 308 328 329 334 335 358 362 676 1036 1681 1725
   1727 1745 1748 1759 1783 1786 1825 1836 1856 1913 1923 1932 1934 1945 1964
   1971 1974 1980 1991 1997 2023 2032 2048 2097 2134 2154 2202 2217 2220 2230
   2268 2281 2293 2304 2317 2320 2327 2344 2349 2355 2356 2375 2423 2426 2430
   2441 2497 2499 2577 2604 2649 2699 2703 2706 2731 2736 2776 2802 2810 2833
   2858 2860 2876 2895 2919)
  (676 1036) -1 2)
 (2708 uniq "( move ua - ul , ul ; pen ua ; move 2 , ul ) "
  (577 639 696 702 1686 1695 1736 2032 2140 2314 2938 3046) () -1 0)
 (2709 uniq "( ( move 2 , ul ; pen ua ) ; move ua - 3 , 0 ; move 2 , 7 ) "
  (1512 1660 2903) () -1 0)
 (2710 uniq "( move 4 , 0 ; pen ua ; move 2 , 4 ) "
  (231 283 285 288 294 328 329 335 358 362 1672 1681 1725 1745 1825 1836 1899
   1913 1923 1934 1991 1997 2023 2032 2079 2134 2230 2288 2304 2349 2355 2356
   2366 2423 2496 2497 2499 2560 2577 2649 2679 2706 2731 2759 2802 2806 2833
   2983 3022 3061 3078 3084)
  (2079) -1 0)
 (2711 uniq "( move 3 , ul ; move 4 , 4 ; move ua , ua * ua ) " (2282) () -1
  0)
 (2712 uniq "( move ul , 0 ; move ua + ul , ua + ul ; move ua , 3 - ua ) "
  (1561 2748 2775) (1561) -1 0)
 (2713 uniq "( pen 4 ; move 4 + 3 , 2 / ua ; move 2 , ul ) "
  (1868 1921 1944 2052 2142 2368 2381 2626 2877 2908 2916) () -1 0)
 (2714 uniq "( move ua , 4 + ul ; move 4 + 4 , 2 ) "
  (54 389 395 461 703 1857 2139) () -1 0)
 (2715 uniq "( pen ua ; move 2 , 2 ; move 3 , 4 ) "
  (295 322 326 327 333 337 1656 1664 1674 1683 1707 1776 1790 1798 1805 1809
   1813 1865 1876 1972 1979 1993 2058 2111 2155 2177 2182 2189 2231 2296 2313
   2329 2412 2425 2448 2458 2640 2670 2722 2729 2741 2749 2771 2777 2825 2835
   2853 2904 2911 2927 2943 2991 3007 3027)
  (457 1431) -1 0)
 (2716 uniq "( move 2 , ul / 4 ; pen 2 ; move ua , 2 ) "
  (579 1718 1775 1942 1988 2394 2403 2603 3012 3013 3082) () -1 0)
 (2717 uniq "( pen ua ; move ul - ua , 4 ; move 3 , ul ) "
  (101 592 670 685 1676 1817 1852 1897 1901 1927 2043 2107 2165 2176 2239
   2241 2257 2270 2295 2307 2331 2379 2387 2433 2453 2467 2472 2510 2548 2573
   2614 2616 2658 2663 2674 2682 2705 2727 2733 2746 2754 2816 2837 2843 2847
   2891 2945 2967 2982 2992 3005 3017 3038 3055 3074 3076)
  () -1 0)
 (2718 uniq "( pen ua ; move ua - ul , ul ; move 5 , ul ) "
  (542 678 685 1676 1680 1687 1697 1703 1738 1749 1769 1770 1791 1833 1881
   1897 1901 1911 1919 1955 2034 2037 2075 2099 2159 2224 2239 2242 2257 2300
   2321 2330 2345 2352 2417 2447 2454 2461 2467 2483 2490 2549 2616 2641 2648
   2660 2791 2837 2843 2847 2915 2925 2945 2952 2979)
  () -1 0)
 (2719 uniq "( move 4 , ua - 2 ; pen 3 ; move ua , 4 ) "
  (30 511 1820 2089 2516 3020) (511) -1 0)
 (2720 uniq "( move 4 , 2 / 4 ; move ua , 2 ; move 4 , 3 ) "
  (1888 1902 2178 2644 2766) (1076) -1 0)
 (2721 uniq "( pen ua ; move 3 , ul / 3 ; move ua , ul ) "
  (641 724 1655 1671 1688 1713 1716 1726 1731 1750 1803 1823 1829 1840 1867
   1882 1939 1946 1960 1976 2031 2034 2064 2066 2072 2096 2145 2146 2149 2187
   2190 2210 2216 2219 2228 2236 2244 2261 2279 2297 2298 2332 2334 2365 2376
   2380 2388 2393 2402 2404 2424 2427 2480 2500 2502 2508 2523 2538 2557 2583
   2593 2617 2620 2622 2636 2647 2673 2681 2688 2693 2704 2732 2742 2761 2763
   2794 2801 2819 2820 2826 2828 2869 2872 2879 2882 2889 2907 2909 2942 2960
   2973 2986 3034 3037 3040 3057 3062 3087)
  () -1 0)
 (2722 uniq "( pen ua ; move 3 , 4 ; move 3 , ul ) "
  (270 292 295 303 319 320 322 327 331 333 337 338 348 356 364 385 584 862
   1133 1657 1673 1674 1675 1683 1685 1707 1716 1722 1729 1731 1735 1772 1776
   1778 1779 1784 1798 1800 1805 1809 1812 1813 1816 1828 1831 1860 1865 1876
   1959 1972 1976 1979 1996 2038 2044 2047 2050 2058 2086 2093 2106 2111 2114
   2150 2155 2158 2166 2177 2180 2181 2182 2185 2209 2231 2245 2301 2313 2347
   2372 2391 2412 2425 2428 2431 2443 2448 2458 2506 2515 2519 2521 2542 2566
   2574 2581 2598 2602 2619 2623 2624 2668 2670 2677 2690 2715 2741 2749 2774
   2777 2779 2782 2787 2793 2800 2825 2848 2853 2911 2922 2927 2943 2959 2987
   2991 3024 3027 3033 3053 3075 3091)
  (1716 2437) -1 0)
 (2723 uniq "( move 4 + 2 , 3 ; pen 4 ; move ua , 5 * 2 ) "
  (1661 1698 2171 2486) () -1 0)
 (2724 uniq "( move 3 + ul , ul ; move ua , ua * ua ; ul ) " (1048)
  (1048 1441) -1 0)
 (2725 uniq "( move ua , 8 ; pen 2 ; move 3 , 4 ) "
  (231 267 272 1672 1804 1917 1950 1991 2154 2202 2217 2327 2349 2556 2649
   2679 2706 2759 2776 2802 2902 2983 3084)
  () -1 0)
 (2726 uniq "( pen 4 ; move 4 , ul / 2 ; move ua , 3 ) "
  (430 1750 1795 1929 1963 2031 2060 2066 2096 2115 2146 2190 2200 2206 2210
   2261 2429 2462 2480 2482 2505 2622 2704 2732 2744 2750 2758 2801 2819
   3072)
  () -1 0)
 (2727 uniq "( pen ua ; move ul - ua , 4 ; move 2 , 5 ) "
  (592 670 1676 1817 1852 1927 2107 2176 2239 2241 2257 2270 2295 2307 2331
   2379 2433 2453 2467 2472 2510 2573 2614 2663 2674 2682 2705 2717 2733 2746
   2754 2816 2837 2843 2891 2967 2982 3005 3038 3055 3074)
  () -1 0)
 (2728 uniq "( pen ua ; move ua , ua - 7 ; move 2 , ul ) "
  (112 626 1713 1763 1827 1859 1866 1933 1970 2017 2020 2027 2033 2059 2083
   2087 2109 2128 2145 2214 2252 2330 2380 2424 2473 2523 2646 2682 2697 2761
   2765 2826 2942 2973 3019)
  () -1 0)
 (2729 uniq "( pen 3 ; move 2 , 2 ; move ua , ul ) "
  (271 290 292 293 303 320 332 333 336 348 357 1674 1683 1717 1728 1731 1735
   1760 1767 1776 1805 1809 1813 1828 1831 1860 1865 1876 1879 1972 1976 1979
   2001 2047 2056 2058 2082 2177 2181 2182 2189 2231 2296 2313 2322 2325 2348
   2378 2412 2443 2448 2458 2566 2574 2581 2602 2643 2715 2730 2756 2777 2793
   2845 2856 2865 2870 2880 2904 2911 2943 2959 2987 3007 3014 3091)
  () -1 1)
 (2730 uniq "( pen 9 ; move ua , 2 ; move 2 , ul ) "
  (269 293 296 326 331 333 356 385 1657 1664 1674 1675 1683 1685 1705 1720
   1722 1728 1729 1760 1776 1778 1779 1784 1798 1800 1812 1813 1816 1864 1879
   1909 1928 1959 1972 1979 1996 2009 2038 2058 2082 2114 2166 2180 2181 2182
   2189 2209 2231 2296 2378 2443 2448 2458 2519 2542 2566 2567 2574 2581 2619
   2690 2729 2756 2774 2777 2793 2798 2800 2835 2845 2848 2865 2870 2880 2911
   2922 2943 2987 3007 3014 3024 3071)
  (2058) -1 0)
 (2731 uniq "( move 3 , ul ; pen ua ; move 4 , 4 ) "
  (291 297 305 308 328 329 335 362 1672 1681 1725 1727 1748 1759 1783 1786
   1825 1855 1856 1913 1923 1932 1971 1980 1991 1997 2025 2032 2079 2202 2220
   2230 2268 2281 2304 2317 2327 2344 2349 2384 2423 2426 2497 2499 2560 2604
   2649 2666 2679 2699 2703 2706 2707 2710 2759 2802 2810 2833 2858 2860 2919
   2983 3022 3061)
  (2666) -1 0)
 (2732 uniq "( pen 2 ; move ul , ul / 2 ; move ua , ul ) "
  (573 641 724 1671 1726 1750 1832 1926 1958 1963 2034 2066 2190 2210 2227
   2261 2337 2388 2402 2480 2583 2617 2625 2681 2693 2704 2721 2726 2750 2751
   2758 2819 2820 2821 2826 2828 2869 2889 2901 2944 2960 2986 3057 3069
   3072)
  () -1 0)
 (2733 uniq "( pen ua ; move ul - ua , 7 ; move 4 , ul ) "
  (592 670 1676 1729 1817 1852 1927 2040 2043 2075 2087 2107 2165 2176 2224
   2239 2241 2257 2270 2295 2307 2331 2379 2387 2433 2439 2453 2461 2467 2490
   2510 2548 2573 2614 2616 2641 2658 2663 2674 2682 2705 2717 2727 2746 2754
   2816 2837 2843 2925 2945 2967 2982 2992 3005 3017 3038 3055 3074 3076)
  () -1 0)
 (2734 uniq "( move 4 , 0 ; pen ua + ul ; move ua , ua * ua ) "
  (993 2258 2539) () -1 0)
 (2735 uniq "( pen 4 ; move ua , 2 + ul ; move ua , 2 ) "
  (85 567 629 1684 1691 1696 1706 1715 1795 1834 1869 1886 1916 1930 1939
   1946 2208 2326 2385 2459 2518 2700 2757)
  () -1 0)
 (2736 uniq "( move 2 , 7 ; pen 4 ; move 4 , ul ) "
  (299 305 308 328 329 334 1681 1727 1748 1759 1783 1856 1895 1913 1923 1934
   1977 2026 2154 2220 2268 2324 2338 2344 2355 2375 2426 2703 2707 2895)
  () -1 0)
 (2737 uniq "( move ua , 4 ; pen ua + ul ; move ul + 4 , 4 ) "
  (983 1672 2162 2278 2517 2591 2628 2695 2760 2933 2989 2999 3060) () -1 0)
 (2738 uniq "( move ua , 4 + ul ; move ua , 3 + ul ) " (395 423 439) () -1 0)
 (2739 uniq "( pen ua ; move 0 , ua ; move 4 + 4 , ul / 4 ) "
  (776 2276 2867 2932) () -1 0)
 (2740 uniq "( pen 3 ; move ul + 4 , ul / ua ; move 2 , 2 ) "
  (2169 2226 2503 2626 2923 3059) () -1 0)
 (2741 uniq "( pen ua ; move 3 , ul ; move 3 , ul ) "
  (270 292 295 303 319 320 322 327 331 333 338 348 356 364 385 584 935 1656
   1657 1664 1673 1674 1675 1683 1685 1707 1716 1720 1722 1729 1731 1735 1772
   1776 1778 1779 1784 1798 1800 1805 1809 1812 1813 1816 1828 1830 1831 1860
   1865 1876 1959 1967 1972 1976 1979 1996 2009 2038 2044 2047 2050 2058 2082
   2086 2093 2095 2106 2111 2114 2131 2150 2155 2158 2159 2166 2177 2180 2182
   2185 2209 2231 2245 2301 2313 2329 2347 2372 2391 2412 2425 2428 2431 2448
   2458 2506 2515 2519 2521 2542 2566 2574 2581 2598 2602 2619 2623 2624 2668
   2670 2677 2688 2690 2715 2722 2749 2756 2774 2777 2782 2787 2793 2800 2825
   2853 2856 2904 2906 2911 2922 2927 2943 2987 2991 3024 3027 3033 3053 3071
   3075 3091)
  (2131 2688) -1 0)
 (2742 uniq "( pen ua ; move 2 , 2 / 4 ; move ua , ul ) "
  (724 1674 1694 1715 1752 1882 1936 1939 1952 1978 2066 2083 2197 2204 2228
   2236 2252 2261 2279 2297 2298 2334 2335 2365 2402 2404 2422 2424 2474 2500
   2502 2583 2617 2625 2636 2650 2673 2697 2721 2745 2780 2817 2820 2826 2889
   2907 2909 2924 2960 2976 3034 3037)
  () -1 0)
 (2743 uniq "( move ua + 2 , 2 ; pen ua ; move 4 , ul ) "
  (55 91 639 1686 2140 2238 2268 2413) () -1 0)
 (2744 uniq "( pen 4 ; move 4 , 8 / 3 ; move ua , 2 ) "
  (28 430 1756 1795 1929 1963 2031 2064 2096 2146 2190 2206 2385 2389 2429
   2459 2462 2482 2505 2593 2651 2726 2750 2801)
  () -1 0)
 (2745 uniq "( pen ua ; move ua , 2 / 4 ; move 3 , ul ) "
  (641 1655 1671 1688 1694 1696 1713 1715 1716 1726 1746 1776 1827 1859 1867
   1904 1933 1978 2033 2034 2067 2083 2087 2123 2131 2204 2207 2222 2228 2252
   2279 2297 2315 2337 2380 2402 2404 2424 2427 2473 2474 2480 2500 2518 2523
   2583 2636 2688 2689 2697 2742 2765 2780 2817 2826 2827 2872 2874 2889 2907
   2909 2973 3034 3037 3043 3069)
  (641) -1 0)
 (2746 uniq "( pen ua ; move ul + ua , ul ; move 2 , ul ) "
  (670 1676 1702 1703 1770 1800 1817 1833 1852 1881 1915 1927 1987 2020 2037
   2040 2107 2159 2165 2176 2239 2241 2257 2263 2270 2295 2307 2321 2331 2379
   2387 2417 2433 2453 2467 2472 2510 2548 2573 2601 2613 2614 2658 2663 2674
   2682 2705 2717 2727 2733 2816 2837 2843 2945 2967 2982 3005 3017 3019 3038
   3055 3074 3076)
  (2321) -1 0)
 (2747 uniq "( pen 2 + 7 ; move 3 - ua , ua ; move 4 , ul ) "
  (2029 2233 2421 2452 2509 2605 2685 2918) () -1 0)
 (2748 equiv "( move ul , 0 ; move ua + ul , ua + ul ; move ua , 3 - 7 ) "
  (1561 2712 2775) () 2775 0)
 (2749 uniq "( pen ua ; move 3 , ul ; move 4 , 4 ) "
  (319 320 327 331 337 338 356 361 364 582 1656 1662 1664 1673 1683 1685 1707
   1722 1729 1731 1735 1772 1778 1779 1789 1798 1800 1813 1828 1830 1860 1876
   1959 1967 1976 1993 2001 2009 2044 2047 2050 2082 2086 2093 2100 2106 2111
   2116 2150 2155 2158 2166 2180 2182 2189 2209 2231 2245 2284 2301 2313 2329
   2347 2372 2376 2391 2412 2425 2428 2431 2458 2488 2506 2515 2519 2521 2566
   2575 2598 2602 2611 2623 2640 2668 2715 2722 2741 2774 2782 2787 2825 2835
   2853 2904 2906 2922 2927 2941 2943 3024 3027 3033 3053 3058 3075)
  (2343) -1 0)
 (2750 uniq "( pen 5 ; move 4 , ul / 2 ; move ua , 2 ) "
  (430 1750 1795 1823 1882 1929 1963 2031 2060 2064 2096 2115 2146 2190 2200
   2206 2208 2210 2227 2228 2260 2261 2273 2290 2316 2389 2401 2429 2462 2480
   2482 2505 2593 2620 2704 2726 2732 2744 2758 2801 2819 2944 2949 3072)
  (2190) -1 0)
 (2751 uniq "( pen 2 ; move ua , 3 / 2 ; move 4 , ul ) "
  (55 641 653 1655 1671 1690 1694 1726 1733 1746 1752 1761 1827 1832 1845
   1867 1904 1958 1970 1978 2034 2083 2087 2104 2115 2121 2227 2290 2315 2335
   2337 2422 2446 2473 2625 2630 2676 2681 2689 2701 2732 2798 2821 2869 2872
   2901 2921 2960 2973 2977 2986 3069)
  () -1 0)
 (2752 uniq "( move ua , 3 ; move ua + 2 , 2 ) "
  (48 124 138 141 146 163 166 169 172 176 177 190 199 236 1670 1708 1719 1747
   1794 1848 1857 1889 1954 1969 2024 2091 2124 2390 2396 2470 2553 2654)
  () -1 0)
 (2753 uniq "( pen 9 ; move 3 * 3 , ua + 4 ; move 4 / 9 , ul ) " (1133) () -1
  0)
 (2754 uniq "( pen ua ; move ul - ua , 4 ) "
  (32 35 101 106 1734 1927 2467 2614 2663 2674 2705 2717 2727 2733 2967 2992
   3038)
  (106 264 378 593 852 1019 1025 1278 1292) -1 0)
 (2755 uniq "( move ua + ul , 4 ; move ua , 2 ) "
  (147 179 192 195 198 224 228 247 275 915 1650 1661 1754 1755 2148 2251 2254
   2308 2341 2468 2522 2978)
  (1485) -1 0)
 (2756 uniq "( pen 3 ; move ua , ul ; move 2 , ul ) "
  (271 292 293 296 303 331 332 336 356 357 361 364 385 1656 1657 1664 1675
   1685 1691 1705 1707 1717 1720 1722 1728 1729 1731 1760 1762 1776 1778 1779
   1784 1788 1798 1800 1812 1813 1816 1831 1864 1876 1879 1925 1928 1959 1967
   1972 1979 1996 2001 2009 2038 2047 2058 2082 2095 2106 2111 2114 2123 2150
   2166 2180 2181 2209 2296 2322 2325 2348 2378 2443 2448 2458 2489 2519 2542
   2566 2567 2574 2581 2609 2611 2619 2643 2690 2729 2730 2741 2777 2793 2798
   2800 2845 2848 2856 2865 2880 2922 2987 3007 3014 3033 3071)
  (2489) -1 1)
 (2757 uniq "( pen ua ; move ua , 0 - ul ; move ua , 2 ) "
  (44 85 629 1684 1706 1715 1750 1763 1803 1823 1829 1834 1840 1859 1866 1869
   1886 1916 1930 1939 1946 2020 2033 2039 2121 2145 2206 2208 2228 2244 2326
   2330 2389 2562 2593 2620 2642 2735 2822 2834 2885 2915 2940 2942 2969
   2979)
  () -1 0)
 (2758 uniq "( pen 3 ; move 4 , ul / 2 ; move 7 , ul ) "
  (641 1671 1726 1746 1832 1926 1963 2034 2060 2123 2190 2200 2227 2261 2388
   2429 2445 2462 2480 2489 2636 2650 2652 2689 2693 2701 2726 2732 2750 2819
   2821 2869 2879 2898 2901 2907 2921 2986 2998 3057 3069 3087)
  () -1 0)
 (2759 uniq "( move ua , 0 ; pen ua ; move 3 , 4 ) "
  (231 267 283 288 328 362 1672 1745 1748 1783 1786 1804 1825 1836 1855 1856
   1899 1913 1917 1932 1934 1945 1950 1971 1974 1991 1997 2003 2023 2032 2048
   2079 2132 2154 2202 2217 2281 2304 2327 2349 2350 2355 2356 2430 2441 2496
   2499 2649 2679 2695 2706 2710 2725 2731 2776 2802 2806 2902 2983 3078
   3084)
  (2162 2679) -1 1)
 (2760 uniq "( move ua , 0 ; pen ua + ul ; move ul + 9 , 4 ) "
  (983 2162 2278 2517 2591 2628 2695 2737 2933 2989 2999 3060) () -1 0)
 (2761 uniq "( pen ua ; move 3 , ua / 3 ; move 2 , ul ) "
  (1655 1688 1716 1827 1866 1933 1959 2020 2064 2072 2083 2087 2149 2187 2219
   2236 2252 2260 2261 2334 2335 2365 2380 2388 2402 2404 2424 2427 2433 2473
   2500 2508 2538 2557 2646 2647 2681 2688 2693 2697 2721 2728 2763 2773 2817
   2820 2837 2872 2882 2889 2907 2909 2942 2960 2973 2982 2986 3028 3034)
  () -1 0)
 (2762 uniq "( move 3 , 4 ; ( move 3 , 2 ; move ua , ul + ul ) ) " (1420) ()
  -1 0)
 (2763 uniq "( pen ua ; move 3 , 4 / 3 ; move ua , 4 ) "
  (466 1655 1662 1715 1716 1823 1829 1840 1886 1936 1939 1952 1960 2031 2064
   2072 2149 2210 2219 2244 2261 2297 2298 2332 2365 2376 2402 2508 2538 2557
   2593 2597 2647 2667 2673 2686 2721 2761 2799 2820 2828 2889 2917 2940 2941
   2960 3062 3068)
  () -1 0)
 (2764 uniq "( move 3 , 0 - ul ; move 2 , 4 ; move ua , ua * ua ) "
  (1166 1826 2088) () -1 0)
 (2765 uniq "( pen ua ; move ua , 2 - 3 ; move 4 , ul ) "
  (55 1655 1688 1713 1726 1746 1763 1803 1813 1827 1859 1866 1867 1936 1978
   2020 2033 2072 2075 2087 2109 2128 2131 2145 2204 2216 2232 2236 2330 2393
   2427 2474 2562 2646 2728 2745 2794 2872 2889 2973 2998 3034)
  () -1 0)
 (2766 uniq "( move 4 , 2 / 4 ; move ua , 2 ; move ul , 7 ) "
  (875 1888 2475 2720) () -1 0)
 (2767 uniq "( pen 2 ; move ua , 4 + 0 ; move ua , 3 ) "
  (45 1684 1706 1834 2622 2700 2799 2940) () -1 0)
 (2768 uniq "( move ua , 3 ; move 2 , ul ; move ua , ul ) "
  (87 524 527 665 1818 1846 2061 2157 2269 2399 2476 2481 2492 2564 2815 2857
   2881 2896 2910 2912 2936 2950 2963 2981 2993 3018 3030 3081)
  () -1 0)
 (2769 uniq "( move 3 , ua / 3 ; pen ua * 3 ; move 3 , ul + ul ) "
  (1125 1893 2600) () -1 0)
 (2770 uniq "( move 3 , ua ; pen 4 + ul ; move ul , ul ) "
  (633 1975 2478 2840) (1572) -1 0)
 (2771 uniq "( pen 3 ; move 8 , 7 ; move 3 , 4 ) "
  (296 1767 2001 2047 2155 2284 2296 2574 2609 2624 2715 3007) () -1 0)
 (2772 equiv "( pen ua + 4 ; move 2 - ua , 0 ; move 2 , ul ) "
  (1675 1961 2615 2838 2864 2893 2918 3005 3079) () 3005 0)
 (2773 uniq "( pen ua ; move 2 , ua / 0 ; move 2 , 2 ) "
  (1752 1882 1952 2060 2067 2252 2260 2334 2335 2365 2453 2464 2473 2535 2538
   2557 2761 2812 2894 2909 2935 2940 3005 3028)
  (1532) -1 0)
 (2774 uniq "( pen 9 ; move 3 , 7 ; move 4 , ul ) "
  (271 292 293 303 320 331 338 356 1673 1683 1685 1717 1722 1729 1731 1735
   1772 1778 1779 1813 1828 1831 1860 1876 1959 1976 2009 2044 2047 2050 2082
   2086 2093 2106 2150 2158 2180 2182 2209 2231 2284 2313 2325 2348 2372 2412
   2428 2443 2448 2506 2515 2519 2521 2566 2567 2574 2575 2581 2598 2602 2668
   2722 2730 2741 2749 2782 2798 2845 2848 2853 2865 2870 2906 2922 2943 2987
   3014 3024 3033 3053 3075)
  (1799 1957 2668) -1 0)
 (2775 uniq "( move ul , 0 ; move ua + ul , ua + ul ; move ua , 2 - 6 ) "
  (1561 2712 2748) (2748) -1 0)
 (2776 uniq "( move ua , 8 ; pen ua ; move ua , ul ) "
  (22 283 288 291 294 304 328 329 334 335 358 362 1672 1681 1725 1727 1745
   1748 1759 1783 1786 1804 1825 1836 1855 1856 1913 1917 1923 1932 1934 1945
   1950 1971 1974 1980 1991 2003 2023 2032 2048 2097 2132 2134 2154 2202 2217
   2220 2230 2268 2281 2293 2304 2317 2320 2324 2327 2338 2344 2349 2350 2355
   2356 2375 2409 2423 2426 2430 2441 2496 2499 2577 2649 2675 2679 2699 2703
   2706 2707 2725 2759 2802 2806 2810 2833 2858 2876 2902 2919)
  () -1 0)
 (2777 uniq "( pen 2 ; move ua , 2 ; move 3 , ul ) "
  (269 270 293 316 322 326 333 356 385 1657 1674 1675 1683 1685 1707 1720
   1722 1728 1729 1760 1776 1778 1779 1798 1800 1812 1813 1816 1879 1972 1996
   2009 2038 2047 2058 2082 2095 2111 2114 2155 2177 2181 2182 2189 2231 2296
   2378 2443 2542 2566 2567 2609 2670 2677 2715 2722 2729 2730 2741 2756 2793
   2798 2835 2845 2848 2856 2865 2880 2911 2943 2959 2991 3007 3014 3071)
  () -1 1)
 (2778 uniq "( move ua , 3 / ua ; pen ua ; move 2 , 2 ) "
  (1743 1942 1982 2403 2496 3013 3082) () -1 0)
 (2779 uniq "( pen ua ; move 3 , 4 ; move 3 - ua , ul ) "
  (474 862 1735 2018 2164 2551 2722 2965 3001 3008) (862) -1 0)
 (2780 uniq "( pen 7 ; move 2 , 4 / 4 ; move 3 , ul ) "
  (1716 2066 2197 2279 2297 2500 2625 2636 2650 2742 2745 2909 2924 3037)
  (1898) -1 0)
 (2781 uniq "( pen ua ; move 3 , ua ; move 2 + ua , 4 ) "
  (1853 2164 2343 2382) () -1 0)
 (2782 uniq "( pen ua ; move 3 , 9 ; move 4 , ul ) "
  (271 292 293 303 319 320 327 331 333 338 348 356 364 385 1657 1673 1674
   1675 1683 1685 1717 1722 1729 1731 1735 1772 1776 1778 1779 1784 1789 1798
   1800 1805 1809 1812 1813 1816 1828 1831 1860 1865 1876 1959 1967 1972 1976
   1979 1993 1996 2009 2038 2044 2047 2050 2058 2082 2086 2093 2100 2106 2116
   2150 2158 2166 2177 2180 2182 2185 2209 2231 2245 2284 2301 2313 2325 2329
   2347 2348 2372 2391 2412 2425 2428 2431 2443 2448 2458 2488 2506 2515 2519
   2521 2566 2574 2575 2581 2598 2602 2619 2623 2640 2668 2690 2722 2741 2749
   2774 2787 2793 2798 2800 2825 2835 2845 2853 2865 2880 2911 2922 2927 2943
   2987 3014 3024 3027 3033 3053 3075 3091)
  () -1 0)
 (2783 uniq "( move 5 - ua , ul ; pen 4 ; move 0 - ua , ul ) "
  (918 1682 1712 1822 2055 2188 2342 2450 2563 2892) () -1 0)
 (2784 uniq "( pen 3 ; move 4 + ul , ul / ua ; move 4 , ul ) "
  (853 1851 1875 1912 1921 1944 1953 2053 2110 2142 2169 2205 2243 2286 2381
   2494 2503 2626 2804 2811 2905 2908 2923 3059 3089)
  () -1 0)
 (2785 uniq "( move ul - 4 , 0 ; move ua + 3 , 2 ) " (26 321 324 2016) 
  (717) -1 0)
 (2786 uniq "( move 4 , 4 ; pen 4 + ul ; move 2 + 4 , ul ) "
  (927 1753 2138 2578) () -1 0)
 (2787 uniq "( pen ua ; move 3 , 0 ; move 2 , 2 ) "
  (292 295 319 320 322 327 331 338 348 1657 1664 1675 1683 1705 1707 1731
   1735 1778 1784 1788 1789 1800 1812 1816 1828 1830 1860 1864 1865 1928 1959
   1967 1976 1979 1996 2044 2050 2058 2086 2093 2106 2116 2158 2166 2180 2182
   2185 2209 2245 2301 2329 2347 2357 2372 2391 2425 2428 2431 2448 2458 2488
   2515 2519 2521 2567 2574 2581 2598 2602 2619 2623 2624 2668 2670 2690 2722
   2741 2749 2782 2800 2825 2829 2853 2904 2922 2927 2943 2987 2991 3024 3027
   3053 3075 3091)
  (2012 2245) -1 0)
 (2788 uniq "( pen ua * ul ; move 4 , ul ; move 9 , 2 ) "
  (1744 1818 2028 2080 2084 2199 2537 2665 2702) () -1 0)
 (2789 uniq "( pen 3 ; move 2 + 0 , 2 / ua ; move 7 , 4 ) "
  (1851 1868 1875 1912 1921 1944 1953 1989 1999 2014 2052 2054 2078 2081 2085
   2110 2125 2127 2205 2275 2323 2368 2444 2494 2534 2899)
  () -1 0)
 (2790 uniq "( move ua , 3 + 3 ; pen 4 + ul ; move ua , ul - 2 ) " (2639) ()
  -1 1)
 (2791 uniq "( pen 3 ; move ua - ul , 3 ; move 2 , ul ) "
  (542 685 1680 1687 1697 1749 1769 1791 1833 1879 1881 1897 1909 1911 1919
   2037 2075 2123 2224 2242 2300 2321 2433 2461 2483 2489 2490 2616 2660 2681
   2718 2847 3088)
  () -1 0)
 (2792 uniq "( pen 4 + ul ; move 3 , 5 ; move 4 , 4 ) "
  (457 504 1771 1799 1849 1850 1890 1894 2373 2407 2533 2807 2851 2859)
  (2533) -1 0)
 (2793 uniq "( pen ua ; move ua , 5 ; move ua , ul ) "
  (22 292 293 303 320 322 325 326 331 333 336 337 338 348 350 351 356 361 364
   385 1656 1657 1664 1673 1674 1675 1683 1685 1691 1705 1707 1720 1722 1728
   1729 1731 1735 1760 1772 1776 1778 1779 1784 1789 1798 1800 1805 1809 1812
   1813 1816 1828 1830 1831 1860 1864 1865 1876 1879 1928 1959 1967 1972 1976
   1979 1996 2009 2038 2044 2050 2058 2082 2086 2093 2100 2106 2111 2114 2155
   2158 2166 2177 2180 2181 2182 2185 2189 2209 2231 2313 2357 2372 2378 2412
   2425 2431 2443 2448 2458 2488 2506 2515 2519 2542 2567 2598 2602 2619 2640
   2643 2668 2670 2677 2690 2722 2729 2730 2741 2756 2777 2782 2798 2800 2829
   2835 2845 2848 2856 2865 2870 2880 2904 2911 2922 2943 2959 2991 3014 3033
   3071 3075 3091)
  () -1 0)
 (2794 uniq "( pen ua ; move ul , ul - 3 ; move 4 , ul ) "
  (573 653 656 724 1655 1688 1713 1726 1803 1866 1867 1958 2033 2072 2075
   2145 2187 2216 2236 2330 2334 2393 2427 2500 2502 2562 2646 2721 2765 2820
   2869 2872 2889 2973 2986 2998 3040 3042 3062)
  () -1 0)
 (2795 uniq "( move 5 , ul ; pen ua + ul ; move 2 , 4 ) "
  (633 637 2420 2449 2478 2606 2866) () -1 0)
 (2796 uniq "( move ua , ul - 3 ; pen 3 ; move ua , 2 ) "
  (48 85 511 558 1775 1806 1820 1942 1982 2089 2097 2603 2632 2850 3020 3032)
  () -1 0)
 (2797 uniq "( move ua , 2 / 3 ; move ua , 4 ; move 4 , 2 ) "
  (729 1724 1737 1863 2309 2359 2512 2805 2980 2990) () -1 0)
 (2798 uniq "( pen 2 ; move ua , 3 ; move 4 , ul ) "
  (268 269 271 293 303 316 325 356 385 1657 1673 1675 1685 1717 1720 1722
   1728 1729 1760 1772 1776 1778 1779 1788 1789 1798 1800 1809 1812 1813 1816
   1876 1879 1967 1972 1976 1979 1996 2009 2038 2058 2082 2093 2095 2100 2106
   2114 2158 2177 2181 2182 2231 2235 2313 2325 2348 2412 2428 2443 2488 2506
   2515 2542 2566 2567 2611 2668 2677 2730 2751 2756 2774 2777 2782 2793 2835
   2845 2848 2856 2865 2880 2959 3014 3024 3033 3071 3075)
  () -1 0)
 (2799 uniq "( pen ua ; move ua , 4 + 0 ; move ua , 4 ) "
  (46 57 1684 1706 1715 1834 1886 1946 1952 2518 2622 2700 2763 2767 2940
   3077)
  () -1 0)
 (2800 uniq "( pen ua ; move 4 , 0 ; move 2 , ul ) "
  (15 17 270 271 292 293 295 301 320 331 333 336 338 348 356 364 385 1657
   1664 1673 1674 1675 1683 1685 1702 1705 1722 1728 1729 1731 1735 1772 1776
   1778 1779 1784 1798 1800 1805 1809 1812 1813 1816 1828 1830 1860 1864 1865
   1876 1879 1928 1959 1972 1976 1979 1996 2038 2050 2058 2086 2093 2106 2116
   2158 2166 2177 2180 2181 2182 2185 2209 2231 2245 2313 2322 2325 2372 2378
   2391 2412 2448 2458 2488 2506 2515 2519 2542 2567 2574 2581 2598 2602 2619
   2668 2670 2690 2722 2730 2741 2756 2782 2787 2793 2829 2848 2853 2870 2880
   2911 2922 2943 2987 3024 3033 3071 3075 3091)
  (1784) -1 0)
 (2801 uniq "( pen 4 ; move 3 , ul / 4 ; move ua , 2 ) "
  (629 1750 1795 1823 1829 1840 1882 1929 1939 1960 1963 2031 2064 2066 2067
   2096 2115 2146 2149 2190 2197 2207 2210 2228 2244 2261 2332 2365 2385 2402
   2404 2429 2459 2462 2482 2498 2505 2538 2557 2583 2593 2597 2617 2620 2704
   2721 2726 2744 2750 2828 2976)
  () -1 0)
 (2802 uniq "( move ua , ul ; pen ua ; move ua , 4 ) "
  (88 89 283 291 294 297 329 334 335 358 362 657 1257 1672 1745 1748 1759
   1783 1786 1804 1855 1856 1913 1917 1945 1964 1971 1974 1980 1991 1997 2023
   2032 2048 2051 2079 2097 2132 2154 2202 2217 2281 2293 2304 2317 2320 2327
   2344 2349 2350 2356 2409 2430 2441 2496 2497 2499 2556 2577 2604 2649 2675
   2679 2699 2706 2707 2710 2725 2731 2759 2776 2806 2810 2833 2858 2860 2876
   2902 2919 2983 3078)
  (657 2606) -1 0)
 (2803 uniq "( move 3 , ua / 3 ; pen ua + ul ; move ua , ul ) "
  (1053 1679 1878 1937 2101 2168 2259 2395 2669 2809) () -1 0)
 (2804 uniq "( pen 3 ; move 4 + 2 , 0 / ua ; move 4 , 4 ) "
  (853 1851 1868 1875 1912 1921 1944 1953 1989 1999 2014 2052 2053 2054 2078
   2081 2110 2125 2127 2142 2167 2169 2205 2229 2275 2277 2286 2323 2368 2494
   2503 2525 2534 2582 2633 2784 2811 2868 2877 2890 2899 2905 2916 2923 2988
   3059 3089)
  () -1 0)
 (2805 uniq "( move ua , 3 / 3 ; move ua , 9 ; move 4 , 2 ) "
  (152 729 1724 1737 2309 2359 2512 2797 2980 2990) () -1 0)
 (2806 uniq "( move ua , 0 ; pen ua ; move 2 , 2 ) "
  (283 285 288 291 328 329 335 1672 1725 1745 1748 1783 1786 1825 1855 1856
   1899 1913 1934 1945 1971 1974 1991 1997 2023 2032 2048 2079 2097 2132 2134
   2154 2156 2202 2217 2230 2253 2281 2293 2304 2317 2349 2350 2356 2409 2423
   2430 2441 2496 2497 2499 2560 2604 2649 2675 2679 2706 2710 2759 2776 2802
   2833 2902 2919 3022 3078)
  (2571) -1 0)
 (2807 uniq "( pen 2 + ul ; move 3 , 5 ; move 4 , 4 ) "
  (504 1771 1799 1849 1850 1890 1894 2373 2407 2533 2792 2851 2859) () -1 0)
 (2808 equiv "( move ua , 2 ; pen 3 + ul ; move ua , 2 ) "
  (48 85 563 569 637 1782 1956 1965 2354 2449 2606 2664 2857 2881 3081) ()
  2947 0)
 (2809 uniq "( move 3 , 5 / 3 ; pen 4 + ul ; move ua , ul ) "
  (1053 1878 2101 2259 2395 2803) () -1 0)
 (2810 uniq "( move 3 , 2 ; pen ua ; move ua , ul ) "
  (22 267 272 291 294 297 304 305 308 328 329 334 335 358 362 1086 1681 1725
   1727 1745 1748 1783 1825 1836 1856 1913 1917 1923 1932 1934 1945 1974 1977
   1980 1991 2023 2032 2048 2101 2132 2134 2154 2202 2217 2220 2230 2268 2281
   2304 2317 2320 2338 2344 2349 2355 2356 2375 2423 2426 2430 2441 2497 2556
   2577 2604 2649 2669 2699 2703 2707 2731 2776 2802 2833 2858 2860 2876 2902
   2919 2983 3022 3061)
  (1086 2669) -1 0)
 (2811 uniq "( pen 3 ; move 4 + ul , 0 / ua ; move 3 , 4 ) "
  (853 1851 1868 1875 1912 1921 1944 1953 1989 1999 2014 2052 2053 2054 2078
   2081 2085 2110 2125 2127 2167 2169 2205 2229 2243 2277 2286 2323 2368 2381
   2494 2503 2513 2525 2526 2534 2582 2626 2784 2804 2868 2877 2890 2899 2905
   2923 2988 3059 3089)
  () -1 0)
 (2812 uniq "( pen ua ; move ua , 7 / 2 ; move 2 , 2 ) "
  (641 1671 1726 1750 1763 1827 1869 1886 1904 1929 1933 1990 1998 2027 2034
   2036 2060 2067 2083 2115 2121 2163 2190 2200 2206 2207 2210 2222 2227 2228
   2252 2260 2273 2316 2364 2380 2393 2401 2424 2473 2508 2538 2562 2593 2620
   2693 2697 2773 2821 2940 2944 2969 3028 3067)
  () -1 0)
 (2813 uniq "( move 4 , ul / 2 ; pen ua ; move 3 , ul ) "
  (658 1652 1743 2930) () -1 0)
 (2814 uniq "( move 9 , ua + 2 ; pen ua ; move ul , 4 ) " (666) () -1 0)
 (2815 uniq "( move ua , ul ; move ul , 2 ; move ua , ul ) "
  (87 534 602 605 662 665 689 721 1654 1797 1818 2061 2102 2105 2113 2133
   2157 2269 2363 2463 2476 2481 2492 2501 2564 2684 2768 2883 2912 2950 2963
   2993 3018)
  (2133) -1 1)
 (2816 uniq "( pen ua ; move ul - ua , 2 ; move 2 , ul ) "
  (670 1676 1680 1769 1791 1817 1833 1852 1881 1911 1919 1927 1987 2040 2043
   2049 2058 2107 2165 2176 2239 2241 2257 2263 2270 2295 2307 2331 2379 2387
   2406 2433 2453 2461 2467 2472 2473 2510 2548 2573 2601 2613 2614 2658 2663
   2674 2682 2705 2717 2727 2733 2746 2837 2843 2891 2945 2967 2982 2992 3005
   3017 3038 3055 3074 3076)
  () -1 0)
 (2817 uniq "( pen ua ; move 4 , 3 / 4 ; move 2 , ul ) "
  (653 1694 1752 1904 1933 1978 2060 2067 2083 2123 2200 2204 2252 2260 2279
   2297 2315 2316 2334 2369 2380 2402 2404 2422 2424 2445 2446 2473 2480 2583
   2619 2636 2638 2647 2650 2689 2693 2697 2742 2745 2761 2874 2907 2909 2960
   2976 3037)
  () -1 0)
 (2818 uniq "( move ua , ul ; move ua - 3 , ul - ua ; move 4 , 2 ) " 
  (1835) (1835) -1 0)
 (2819 uniq "( pen 3 ; move 4 , ul / 2 ; move ua , ul ) "
  (56 641 724 940 1671 1726 1746 1750 1832 1926 1929 1960 1963 2031 2034 2060
   2066 2096 2123 2161 2190 2200 2206 2210 2227 2261 2378 2388 2389 2402 2429
   2445 2462 2480 2482 2489 2583 2617 2636 2650 2686 2689 2693 2704 2721 2726
   2732 2750 2758 2820 2821 2826 2869 2879 2889 2901 2907 2921 2960 2986 2998
   3057 3069 3072)
  () -1 0)
 (2820 uniq "( pen ua ; move 2 , ul / 3 ; move ua , ul ) "
  (641 724 1655 1671 1688 1713 1726 1750 1752 1803 1809 1823 1867 1882 1936
   1946 1952 2031 2034 2064 2066 2072 2096 2145 2149 2187 2190 2197 2210 2216
   2228 2236 2261 2279 2297 2298 2332 2334 2335 2380 2388 2393 2402 2404 2422
   2424 2427 2474 2480 2500 2502 2508 2523 2535 2538 2583 2593 2617 2620 2622
   2625 2636 2647 2650 2673 2681 2688 2693 2721 2732 2742 2761 2763 2794 2819
   2826 2869 2872 2889 2894 2907 2909 2924 2960 2973 2986 3037 3057 3062 3068
   3087)
  () -1 0)
 (2821 uniq "( pen 2 ; move ua , ul / 2 ; move 2 , ul ) "
  (641 1671 1688 1726 1746 1750 1763 1791 1827 1832 1833 1867 1904 1909 1933
   1958 1970 2034 2060 2067 2083 2115 2123 2200 2227 2252 2261 2273 2334 2337
   2380 2388 2401 2424 2427 2446 2473 2480 2489 2508 2523 2583 2617 2625 2650
   2676 2681 2687 2693 2697 2732 2751 2758 2812 2819 2826 2869 2872 2882 2889
   2901 2907 2921 2986 3003 3037 3057 3069)
  () -1 0)
 (2822 equiv "( pen ua ; move 3 , ua - ul ; move ua , 2 ) "
  (50 584 1684 1803 1823 1829 1840 1886 1916 1939 2020 2064 2131 2208 2210
   2244 2285 2365 2431 2557 2597 2757 2834 2885 2942 3028)
  () 2834 0)
 (2823 uniq "( move ua , ul / pen 2 ; move 3 - ua , ul ) "
  (87 1742 1924 2144 2450 2954 2956 3085) () -1 0)
 (2824 uniq "( pen 3 ; move 3 , 2 / ua ; move 4 , 4 ) "
  (1662 1690 1746 1944 1960 2161 2187 2219 2284 2358 2376 2445 2652 2667 2686
   2696 2871 2879 2898 2917 2941 2948 2977 3003 3034)
  () -1 0)
 (2825 uniq "( pen ua ; move 3 , 2 ; move ul , 2 ) "
  (269 295 319 320 322 326 327 331 333 338 364 385 1674 1683 1707 1731 1735
   1760 1776 1789 1812 1813 1828 1830 1860 1864 1928 1959 1967 1972 1976 1993
   2011 2038 2044 2050 2058 2086 2093 2106 2116 2158 2180 2182 2185 2189 2209
   2231 2245 2301 2329 2347 2357 2372 2391 2425 2428 2431 2464 2488 2515 2519
   2521 2566 2598 2602 2623 2624 2668 2670 2715 2722 2741 2749 2782 2787 2829
   2835 2853 2904 2911 2922 2927 2943 2991 3007 3027 3053)
  (2464) -1 0)
 (2826 uniq "( pen ua ; move ua , ul / 7 ; move ua , ul ) "
  (114 641 724 1655 1671 1688 1694 1706 1713 1715 1726 1750 1803 1823 1827
   1832 1867 1882 1886 1904 1911 1916 1933 1946 1978 2031 2034 2036 2039 2064
   2066 2067 2072 2083 2087 2096 2123 2145 2146 2163 2187 2190 2207 2210 2222
   2224 2227 2228 2236 2242 2252 2261 2279 2297 2298 2330 2332 2334 2337 2364
   2380 2388 2393 2401 2402 2404 2424 2427 2429 2473 2480 2489 2500 2502 2508
   2523 2583 2593 2617 2620 2622 2636 2673 2681 2688 2693 2697 2721 2728 2732
   2742 2745 2819 2820 2821 2827 2869 2872 2885 2889 2907 2909 2921 2925 2940
   2960 2973 2986 3037 3057 3069)
  () -1 0)
 (2827 uniq "( pen ua ; move ua , 4 / ua ; move ul , ul ) "
  (385 641 653 724 1655 1671 1688 1694 1696 1716 1726 1733 1761 1827 1867
   1886 1904 1933 1978 1998 2034 2036 2083 2087 2109 2163 2175 2187 2207 2222
   2252 2297 2315 2364 2369 2380 2401 2424 2427 2473 2502 2523 2583 2646 2647
   2697 2745 2826 2872 2889 2940 2949 2973 3034 3037 3067)
  () -1 0)
 (2828 uniq "( pen 2 ; move 3 , ul / 4 ; move ua , 4 ) "
  (573 1823 1882 1958 1960 2064 2066 2146 2210 2219 2228 2261 2298 2332 2337
   2365 2376 2402 2404 2462 2498 2505 2583 2617 2625 2667 2673 2704 2721 2732
   2763 2801 3072)
  () -1 0)
 (2829 uniq "( pen ua ; move 4 , 0 ; move ua , 2 ) "
  (15 17 20 26 270 271 292 295 320 322 325 332 333 336 337 348 350 351 364
   1656 1673 1674 1675 1683 1691 1707 1731 1735 1772 1778 1784 1788 1789 1805
   1809 1812 1828 1830 1860 1864 1865 1928 1967 1972 1976 2044 2086 2116 2158
   2166 2180 2185 2189 2206 2231 2245 2301 2322 2329 2347 2357 2372 2378 2391
   2425 2428 2431 2488 2506 2521 2602 2619 2623 2640 2643 2651 2670 2787 2793
   2800 2825 2853 2870 2904 2991 3027 3033 3053 3075 3091)
  (2206) -1 0)
 (2830 uniq "( pen 3 + 2 ; move ul , ul ; move ua , ul ) "
  (74 502 560 689 721 1654) (721 1057 2590) -1 0)
 (2831 uniq "( move ua , 2 - 3 ; move 2 , ul ; move ua , 3 ) "
  (965 1949 2249 2280 2346 2351 2507 2544 2580 2610 2875 2888 2975 2981 3010)
  () -1 0)
 (2832 uniq "( pen 3 ; move ua , ua / 4 ; move ul , 2 ) "
  (567 1694 1709 1998 2059 2067 2123 2163 2175 2207 2228 2252 2315 2365 2401
   2462 2498 2662 3043)
  () -1 0)
 (2833 uniq "( move 3 , ul ; pen ua ; move 2 , ul ) "
  (267 283 285 288 291 297 305 308 328 329 334 335 358 362 1199 1681 1725
   1727 1745 1748 1759 1783 1786 1825 1836 1856 1913 1923 1932 1934 1945 1971
   1974 1980 1997 2023 2032 2079 2134 2154 2168 2202 2217 2220 2230 2268 2281
   2293 2304 2317 2344 2355 2423 2426 2478 2496 2497 2499 2577 2604 2699 2703
   2706 2707 2710 2731 2776 2802 2806 2810 2858 2860 2919 2983 3022)
  (997 2478) -1 1)
 (2834 uniq "( pen 5 ; move 3 , ua - ul ; move ua , 2 ) "
  (50 1823 1829 1840 1916 1939 2365 2557 2597 2757 2822 2942) (2822) -1 0)
 (2835 uniq "( pen ua ; move ua , 2 ; move 4 , 4 ) "
  (268 269 293 296 322 325 326 327 333 337 351 356 361 385 1656 1657 1664
   1673 1674 1675 1683 1685 1705 1707 1722 1729 1760 1772 1776 1778 1779 1788
   1789 1798 1800 1812 1813 1816 1864 1876 1928 1967 1972 1993 1996 2009 2038
   2058 2082 2093 2100 2106 2111 2116 2155 2158 2182 2189 2231 2284 2296 2313
   2329 2357 2412 2425 2428 2443 2488 2506 2515 2521 2566 2611 2640 2668 2670
   2715 2730 2749 2777 2782 2793 2798 2825 2845 2853 2865 2911 2943 2991 3007
   3014 3033 3053 3075)
  () -1 0)
 (2836 uniq "( pen 4 + 3 ; move ua / 3 , 4 ; move 0 - 2 , 2 ) "
  (1115 1677 1751 2333 2456 3035) (1115 2333) -1 0)
 (2837 uniq "( pen ua ; move 3 - ua , ul ; move 2 , ul ) "
  (331 517 670 1676 1680 1703 1769 1791 1800 1817 1852 1861 1881 1897 1901
   1919 1927 2020 2107 2159 2165 2176 2239 2241 2257 2263 2270 2295 2307 2321
   2331 2379 2433 2453 2467 2472 2490 2510 2548 2573 2613 2614 2658 2663 2674
   2682 2705 2717 2718 2727 2733 2746 2761 2816 2843 2891 2942 2945 2967 2982
   3005 3021 3038 3055 3058 3074)
  (1891) -1 0)
 (2838 equiv "( pen ua + 2 ; move 2 - ua , 0 ; move 2 , ul ) "
  (1675 1961 2008 2287 2615 2772 2864 2893 2918 3005 3079) () 3005 0)
 (2839 equiv "( pen ua + 3 ; move 4 , 4 ; move 0 - ua , ul ) "
  (917 1862 1986 2004 2151 2192 2607 2621 2968) () 2968 0)
 (2840 uniq "( move 3 , 4 ; pen ua + ul ; move ul , 2 ) "
  (637 1956 1975 2354 2478 2770) () -1 0)
 (2841 uniq "( pen 4 + 4 ; move 3 , 0 ; move 3 , 7 ) " (419 2271) () -1 0)
 (2842 uniq "( move ua , 4 ; move ua + ul , 2 + ul ) "
  (398 436 458 464 469 471 519 744 1650 1669 2265) (1037 1555) -1 0)
 (2843 uniq "( pen ua ; move ul - ua , 0 ; move 5 , ul ) "
  (670 1676 1687 1817 1852 1927 1987 2043 2069 2070 2107 2165 2176 2239 2241
   2242 2257 2270 2295 2307 2331 2379 2387 2433 2453 2467 2510 2548 2573 2601
   2614 2658 2663 2674 2682 2705 2717 2718 2727 2733 2746 2816 2837 2847 2945
   2967 2982 2992 3005 3017 3038 3055 3074 3076)
  () -1 0)
 (2844 uniq "( pen ua ; move ua , 0 ; move 3 , ua - 2 ) "
  (24 455 537 669 1658 1659 1699 1837 2042 2112 2223 2272 2546 2670 2878
   3090)
  () -1 0)
 (2845 uniq "( pen 3 ; move ua , 8 ; move 4 , ul ) "
  (268 269 271 292 293 296 303 336 356 385 1657 1673 1675 1685 1717 1720 1722
   1728 1729 1760 1772 1776 1778 1779 1788 1789 1798 1800 1812 1813 1816 1831
   1860 1876 1879 1967 1972 1996 2009 2038 2047 2058 2082 2093 2100 2106 2114
   2158 2181 2182 2231 2284 2296 2313 2322 2325 2348 2378 2412 2443 2488 2506
   2515 2542 2566 2567 2574 2575 2581 2609 2611 2643 2668 2729 2730 2756 2774
   2777 2782 2793 2798 2835 2848 2865 2880 2987 3007 3014 3024 3033 3071
   3075)
  () -1 0)
 (2846 uniq "( move 3 , 0 ; pen ua ; move ua , ua * ua ) " (1714 2504 2863)
  () -1 0)
 (2847 uniq "( pen ua ; move ua - ul , 0 ; move 3 , ul ) "
  (497 542 641 670 685 1680 1687 1697 1702 1713 1738 1749 1769 1791 1833 1881
   1897 1901 1911 1919 1955 2037 2043 2075 2107 2159 2176 2224 2242 2257 2270
   2274 2300 2307 2321 2345 2352 2379 2417 2427 2447 2454 2461 2483 2490 2523
   2616 2641 2660 2674 2688 2717 2718 2791 2843 2925 2979 3005 3037 3074
   3076)
  (685) -1 0)
 (2848 uniq "( pen 9 ; move ua , 4 ; move 2 , ul ) "
  (268 293 296 331 338 340 356 385 1657 1664 1673 1675 1685 1705 1720 1722
   1728 1729 1735 1760 1776 1778 1779 1784 1798 1800 1812 1813 1816 1864 1879
   1928 1959 1972 1979 1996 2009 2038 2058 2082 2114 2166 2180 2181 2209 2443
   2448 2458 2515 2519 2542 2567 2574 2581 2619 2690 2722 2730 2756 2774 2777
   2793 2798 2800 2845 2865 2870 2880 2922 2959 2987 2991 3014 3024 3071)
  (1580 1657) -1 0)
 (2849 uniq "( pen 4 ; move 3 * 2 , ul / ua ; move 4 + ul , ul ) "
  (1141 1887 2255 2491) () -1 0)
 (2850 uniq "( move ua , 4 / 3 ; pen 4 ; move ua , 2 ) "
  (48 1650 1775 1806 1942 1982 1988 2403 2603 2632 2796 3012 3013 3032 3082)
  () -1 0)
 (2851 uniq "( pen 3 + ua ; move 3 , 5 ; move 4 , ul ) "
  (1771 1799 1849 1850 1871 1890 1894 1907 1957 2184 2373 2407 2437 2477 2533
   2792 2807)
  (1890 2407) -1 0)
 (2852 uniq "( pen 4 ; move 2 - ua , 3 ; move ua , ul ) "
  (670 1676 1861 1927 2049 2069 2070 2165 2241 2295 2406 2433 2439 2573 2613
   2945 3005)
  () -1 0)
 (2853 uniq "( pen ua ; move 3 , 0 ; move 4 , 4 ) "
  (271 292 293 319 320 327 331 337 338 348 356 1119 1656 1664 1673 1675 1683
   1685 1689 1722 1729 1731 1735 1772 1778 1779 1788 1789 1812 1813 1828 1860
   1865 1876 1928 1959 1967 1976 1993 2044 2050 2086 2093 2100 2106 2116 2155
   2158 2180 2182 2185 2189 2209 2231 2245 2284 2301 2313 2325 2329 2347 2372
   2391 2412 2425 2428 2431 2488 2506 2515 2519 2521 2566 2575 2598 2602 2623
   2640 2668 2670 2715 2722 2741 2749 2774 2782 2787 2800 2825 2829 2835 2906
   2922 2927 2943 3024 3027 3033 3053 3075 3091)
  (1689 2520) -1 0)
 (2854 uniq "( move 0 - 3 , ul / pen 2 ; move 4 - ua , ul ) "
  (2055 2144 2457 2511 3002 3080) () -1 0)
 (2855 uniq "( move 2 + ua , 3 ; move ua , 4 ) "
  (143 195 196 198 1668 1918 2251 2254 2468 2522 2585) () -1 0)
 (2856 uniq "( pen 2 ; move 2 , ul ; move ua , ul ) "
  (290 292 303 320 331 332 333 336 348 357 361 364 1656 1674 1683 1691 1717
   1720 1731 1735 1779 1798 1800 1805 1809 1828 1830 1831 1860 1865 1876 1972
   1976 1979 2001 2009 2047 2082 2095 2106 2114 2150 2166 2177 2313 2325 2329
   2378 2412 2425 2431 2448 2458 2602 2729 2741 2756 2777 2793 2798 2870 2904
   2906 2911 2959 3033 3071 3091)
  (1044) -1 0)
 (2857 uniq "( move ua , 0 ; move 3 , ul ; move ua , 2 ) "
  (24 44 48 85 456 485 524 603 1818 2061 2105 2136 2256 2269 2363 2399 2476
   2481 2492 2527 2528 2564 2570 2572 2588 2702 2768 2808 2881 2883 2910 2912
   2936 2950 2963 2972 2993 3004 3018 3030 3081)
  () -1 0)
 (2858 uniq "( move 2 , ul ; pen ua ; move ua , ua ) "
  (285 291 294 297 299 329 334 335 358 362 649 676 1036 1786 1934 1964 1971
   1974 1980 1991 1997 2032 2048 2097 2202 2220 2268 2281 2304 2317 2327 2344
   2349 2356 2375 2430 2441 2497 2499 2577 2604 2649 2699 2706 2707 2731 2776
   2802 2810 2833 2860 2919)
  (649) -1 0)
 (2859 uniq "( pen 3 * ul ; move 3 , 7 ; move 4 , 4 ) "
  (504 1689 1744 1757 1768 1799 2520 2533 2537 2792 2807) () -1 0)
 (2860 uniq "( move 3 , ul ; pen ua ; move 4 , ua ) "
  (20 291 297 305 308 328 329 335 362 941 1681 1725 1727 1748 1759 1783 1786
   1825 1855 1856 1913 1923 1932 1971 1980 1997 2025 2032 2202 2220 2230 2268
   2281 2304 2317 2344 2423 2426 2497 2499 2560 2604 2699 2703 2706 2707 2731
   2802 2810 2833 2858 2919 2983 3022 3061)
  () -1 0)
 (2861 uniq "( move 4 + ul , 9 ; move ua , 4 ; move 2 , ul ) "
  (816 866 1808 2195) () -1 0)
 (2862 uniq "( move ua , ua * pen 4 ; move ua , 7 * 3 ) " (86 2631) () -1 0)
 (2863 uniq "( move ua , 0 ; pen 4 ; move ua , ua * ua ) " (1714 2504 2846)
  () -1 0)
 (2864 uniq "( pen ua + ul ; move 4 - ua , ua ; move 2 , ul ) "
  (1784 1961 2008 2029 2186 2233 2421 2685 2772 2838 2893 2918 3079) () -1 0)
 (2865 uniq "( pen 7 ; move ua , 2 ; move 4 , ul ) "
  (55 268 269 271 293 326 333 356 385 1657 1673 1674 1675 1683 1685 1717 1720
   1722 1728 1729 1760 1772 1776 1778 1779 1788 1789 1798 1800 1812 1813 1816
   1876 1879 1967 1972 1993 1996 2009 2038 2058 2082 2093 2100 2106 2114 2158
   2181 2182 2189 2231 2296 2313 2325 2348 2378 2412 2443 2488 2506 2515 2542
   2566 2567 2611 2668 2729 2730 2756 2774 2777 2782 2793 2798 2835 2845 2848
   2880 2911 2943 3007 3014 3024 3033 3071 3075)
  (1811 1813) -1 0)
 (2866 uniq "( move 4 , ul ; pen ua + ul ; move 2 , 4 ) "
  (633 637 1701 1802 1965 2000 2366 2420 2478 2592 2606 2795) (1701 2366) -1
  0)
 (2867 uniq "( pen ua ; move 0 , ua ; move 4 + 4 , ul / ua ) "
  (776 2276 2739 2932) () -1 0)
 (2868 uniq "( pen 3 ; move 7 + 2 , 0 / ua ; move 4 , 4 ) "
  (1875 1912 1944 1953 2014 2053 2054 2205 2275 2277 2286 2525 2534 2633 2804
   2811 2899)
  () -1 0)
 (2869 equiv "( pen ua ; move 7 , ul / 2 ; move 4 , ul ) "
  (641 653 656 724 1655 1671 1688 1726 1746 1750 1752 1827 1832 1867 1904
   1958 1978 2034 2060 2072 2087 2115 2121 2187 2190 2200 2204 2210 2216 2227
   2236 2261 2334 2335 2337 2345 2364 2376 2380 2388 2393 2401 2402 2404 2422
   2424 2427 2461 2473 2474 2480 2500 2502 2523 2535 2562 2583 2625 2636 2688
   2689 2693 2721 2732 2751 2758 2794 2819 2820 2821 2826 2872 2889 2901 2907
   2921 2960 2973 2986 2998 3034 3037 3042 3062 3069)
  () 2901 0)
 (2870 equiv "( pen 9 ; move 4 , ua ; move ua , ul ) "
  (22 270 271 292 295 303 320 333 336 348 350 351 356 364 385 1673 1674 1683
   1717 1728 1731 1735 1767 1772 1784 1805 1809 1828 1830 1831 1860 1865 1959
   1972 1976 2050 2093 2116 2166 2185 2231 2322 2357 2378 2506 2567 2598 2602
   2619 2643 2651 2690 2729 2730 2774 2793 2800 2829 2848 2856 2906 2959 2987
   3024 3033 3075 3091)
  () 3091 0)
 (2871 uniq "( pen 3 ; move 4 , 4 / ua ; move 3 , 4 ) "
  (1960 2078 2161 2167 2175 2358 2445 2638 2652 2667 2686 2824 2898 2939 2970
   2988 3003 3072)
  (2078) -1 0)
 (2872 uniq "( pen ua ; move ua , ul / 3 ; move 4 , ul ) "
  (93 641 653 656 724 1655 1671 1688 1694 1713 1726 1733 1746 1750 1752 1779
   1803 1827 1832 1845 1866 1867 1904 1919 1933 1946 1958 1978 2031 2033 2034
   2036 2064 2067 2072 2075 2083 2087 2115 2121 2123 2145 2149 2163 2187 2204
   2207 2216 2222 2224 2227 2228 2236 2252 2261 2298 2330 2334 2335 2337 2345
   2364 2376 2380 2388 2393 2401 2402 2404 2422 2424 2427 2461 2473 2474 2480
   2489 2490 2500 2502 2508 2523 2535 2538 2562 2583 2593 2616 2620 2622 2625
   2636 2646 2647 2676 2681 2688 2693 2697 2721 2745 2751 2761 2765 2794 2820
   2821 2826 2827 2869 2889 2901 2907 2921 2925 2973 2986 2998 3034 3037 3040
   3042 3057 3062 3067 3068 3069 3087)
  () -1 0)
 (2873 uniq "( move pen 3 , 4 ; move ua , 0 - 2 ) " (16 2213) () -1 0)
 (2874 uniq "( pen ua ; move ua , 3 / 4 ; move 0 , 3 ) "
  (1694 1904 1978 2067 2083 2207 2228 2252 2279 2315 2424 2583 2622 2697 2745
   2817 2976 3037)
  () -1 0)
 (2875 uniq "( move ua , ua - 3 ; move ul , ul ; move ua , 3 ) "
  (965 1949 2249 2280 2351 2507 2544 2580 2610 2831 2888 2981) () -1 0)
 (2876 uniq "( move ua , ua * pen ua ; move ua , ul ) "
  (22 334 358 1745 1748 1783 1804 1855 1856 1913 1923 1945 1974 1980 1991
   2003 2023 2032 2048 2051 2134 2154 2156 2202 2211 2217 2281 2320 2349 2356
   2375 2430 2441 2577 2649 2679 2699 2707 2776 2802 2810 3011)
  () -1 0)
 (2877 uniq "( pen 3 ; move 4 + 3 , 3 / ua ; move 2 , 4 ) "
  (853 1851 1868 1875 1912 1921 1944 1953 1989 1999 2014 2052 2053 2054 2078
   2081 2110 2125 2127 2142 2167 2169 2205 2226 2229 2243 2277 2286 2302 2323
   2368 2381 2444 2494 2503 2513 2525 2534 2582 2626 2633 2713 2804 2811 2899
   2905 2916 2923 2988 3059 3089)
  () -1 0)
 (2878 uniq "( pen ua ; move 4 , 2 ; move 3 , ua + 2 ) "
  (69 537 557 574 1790 2398 2569 2596 2844) () -1 0)
 (2879 uniq "( pen 3 ; move 3 , ul / ua ; move 8 , ul ) "
  (724 1690 1832 1867 1926 1960 2072 2123 2187 2219 2261 2376 2380 2388 2402
   2404 2445 2489 2502 2617 2650 2667 2688 2693 2721 2758 2819 2824 2921 2939
   2977 2986 3003 3034 3057 3069)
  () -1 0)
 (2880 uniq "( pen 3 ; move ua , 9 ; move 2 , ul ) "
  (271 292 293 296 303 331 336 356 385 1657 1664 1675 1685 1705 1717 1720
   1722 1728 1729 1760 1776 1778 1779 1784 1788 1798 1800 1812 1813 1816 1831
   1864 1879 1928 1959 1972 1979 1996 2009 2038 2047 2058 2082 2114 2166 2180
   2181 2209 2296 2322 2325 2348 2378 2436 2443 2448 2458 2506 2519 2542 2566
   2567 2574 2581 2609 2611 2619 2643 2645 2690 2729 2730 2756 2777 2782 2793
   2798 2800 2845 2848 2865 2922 2987 3007 3014 3071)
  () -1 0)
 (2881 uniq "( move ua , 2 ; move 3 , ul ; move ua , 2 ) "
  (48 85 485 489 524 533 1818 2061 2105 2136 2256 2269 2363 2399 2476 2481
   2492 2527 2528 2564 2570 2572 2588 2702 2768 2808 2857 2883 2910 2912 2936
   2950 2963 2972 3004 3018 3030 3081)
  () -1 0)
 (2882 uniq "( pen 2 ; move 3 , ua / 3 ; move 2 , ul ) "
  (1970 2072 2252 2334 2473 2538 2617 2647 2681 2687 2693 2721 2761 2821
   2973)
  () -1 0)
 (2883 uniq "( move ua , ul ; move ul , 3 ; move ua , 2 ) "
  (48 85 523 563 602 662 665 689 1711 1818 1821 2061 2102 2105 2256 2269 2363
   2399 2463 2476 2481 2528 2564 2702 2815 2857 2881 2910 2936 2950 3004 3018
   3081)
  () -1 0)
 (2884 uniq "( pen 6 ; move ul , 3 / ua ; move ua , 2 ) "
  (105 653 724 1690 1795 2013 2041 2096 2104 2244 2369 2370 2385 2482 2630
   2638 2935 2970 2976)
  (2013 2370) -1 0)
 (2885 uniq "( pen ua ; move ua , ul - 5 ; move ua , 2 ) "
  (85 98 629 1684 1706 1713 1750 1803 1823 1869 1882 1886 1916 1946 2031 2036
   2039 2064 2067 2096 2145 2163 2190 2191 2207 2208 2210 2222 2228 2330 2364
   2393 2401 2562 2583 2593 2620 2622 2757 2822 2826 2889 2915 2940 2969 2979
   3057)
  () -1 0)
 (2886 uniq "( pen ua ; move 3 , ul / 4 ; move 3 , ua / 4 ) " (876 1773) ()
  -1 0)
 (2887 uniq "( pen ua - 3 ; move 4 , 4 ; move 3 / ul , ul ) "
  (845 1739 1796 2913 2934 3064) () -1 0)
 (2888 equiv "( move ua , ul - 3 ; move 0 , ul ; move ua , ul ) "
  (958 965 974 1949 2133 2249 2280 2351 2507 2544 2580 2684 2831 2875 2981
   3010 3029)
  () 3044 0)
 (2889 uniq "( pen ua ; move ua , ul / 3 ; move ua , ul ) "
  (114 249 641 724 1655 1671 1688 1694 1706 1713 1715 1726 1750 1803 1823
   1827 1832 1866 1867 1882 1886 1904 1911 1916 1919 1933 1946 1978 2031 2033
   2034 2036 2039 2064 2066 2067 2072 2075 2083 2087 2096 2123 2145 2149 2163
   2187 2190 2207 2210 2216 2222 2227 2228 2236 2242 2252 2261 2279 2297 2298
   2330 2332 2334 2337 2364 2380 2388 2393 2401 2402 2404 2424 2427 2473 2480
   2489 2500 2502 2508 2523 2538 2583 2593 2617 2620 2622 2636 2646 2647 2673
   2681 2688 2693 2697 2721 2732 2742 2745 2761 2763 2765 2794 2819 2820 2821
   2826 2827 2869 2872 2885 2907 2909 2921 2940 2960 2973 2986 3037 3057 3062
   3069 3087)
  () -1 0)
 (2890 uniq "( pen 3 ; move 4 + ul , 0 / 0 ; move ua , 4 ) "
  (853 1851 1868 1875 1921 1989 2054 2081 2110 2125 2205 2229 2277 2323 2494
   2513 2525 2526 2534 2804 2811 2899 2905 3089)
  () -1 0)
 (2891 uniq "( pen ua ; move 2 - ua , 4 ; move 2 , 5 ) "
  (1927 2176 2331 2433 2453 2472 2510 2614 2663 2682 2705 2717 2727 2816 2837
   2945 2967 3005 3038 3055)
  () -1 0)
 (2892 uniq "( move 3 - ua , ul ; pen 2 ; move 0 - ua , ul ) "
  (918 1682 1712 1822 2055 2144 2188 2342 2457 2563 2783 3047) () -1 0)
 (2893 equiv "( pen ua + 0 ; move 2 - ua , 0 ; move 2 , ul ) "
  (1675 1961 2615 2772 2838 2864 2918 3005 3079) () 3005 0)
 (2894 uniq "( pen ua ; move 2 , ul / ua ; move 3 , 2 ) "
  (641 724 1750 1823 1867 1882 1952 1990 1998 2013 2031 2036 2060 2064 2067
   2096 2149 2163 2187 2190 2207 2210 2219 2222 2228 2236 2244 2298 2334 2364
   2369 2376 2380 2393 2401 2427 2480 2500 2502 2523 2535 2538 2593 2620 2636
   2638 2673 2676 2688 2696 2773 2820 2935 2939 2948 2949 2970 3037 3062
   3067)
  () -1 0)
 (2895 uniq "( move 2 , 3 ; pen 4 ; move 4 , ul ) "
  (299 304 305 308 328 329 334 1681 1727 1748 1759 1783 1836 1856 1895 1913
   1923 1934 1950 1977 2026 2220 2230 2253 2268 2324 2338 2344 2375 2426 2560
   2703 2707 2736)
  () -1 0)
 (2896 uniq "( move ua , 3 ; move ua , 9 ; move 4 , ul ) "
  (91 526 534 604 605 665 1668 1863 2010 2090 2157 2435 2501 2768 3030) () -1
  0)
 (2897 uniq "( pen 3 ; move 3 , 3 / ua ; move ua , ul + ul ) " (235 303 937)
  () -1 0)
 (2898 uniq "( pen 3 ; move 4 , 2 / ua ; move 7 , 4 ) "
  (1926 1960 2110 2161 2358 2445 2652 2667 2686 2701 2758 2824 2871 2917 2939
   3003 3072)
  () -1 0)
 (2899 uniq "( pen 3 ; move 4 + 0 , 0 / ua ; move 8 , 4 ) "
  (853 1851 1868 1875 1912 1921 1944 1953 1989 1999 2014 2052 2053 2054 2078
   2081 2085 2110 2125 2127 2167 2169 2194 2205 2229 2243 2275 2277 2286 2323
   2368 2494 2503 2525 2534 2559 2582 2789 2804 2811 2868 2877 2890 2905 2923
   2988 3059 3089)
  () -1 0)
 (2900 uniq "( pen 3 ; move 2 , ua ; move ul - ua , 2 ) " (498 2551 3036) ()
  -1 0)
 (2901 uniq "( pen 6 ; move 7 , ul / 2 ; move 4 , ul ) "
  (641 1671 1726 1746 1827 1832 1867 1958 2034 2072 2115 2187 2227 2236 2261
   2335 2337 2388 2422 2480 2502 2625 2630 2693 2732 2751 2758 2819 2821 2869
   2872 2921 2986 2998 3069)
  (2869) -1 0)
 (2902 uniq "( move ua , 2 ; pen ua ; move 3 , 2 ) "
  (47 272 283 291 1672 1727 1745 1748 1783 1786 1825 1836 1855 1856 1899 1913
   1917 1932 1934 1945 1950 1971 1974 1991 1997 2003 2023 2032 2048 2097 2132
   2154 2156 2202 2217 2253 2268 2281 2304 2312 2317 2320 2338 2349 2350 2355
   2356 2386 2409 2423 2430 2441 2496 2497 2499 2560 2577 2604 2649 2675 2679
   2706 2725 2759 2776 2802 2806 2810 2919 2983 3022 3061 3078 3084)
  () -1 0)
 (2903 uniq "( ( move ul , ul ; pen ua ) ; move ua - 3 , 0 ; move 2 , 2 ) "
  (1512 1660 2709) () -1 0)
 (2904 uniq "( pen ua ; move 2 , ul ; move ua , 2 ) "
  (290 295 320 322 325 331 332 333 337 348 350 351 357 361 364 552 849 1656
   1664 1674 1683 1691 1707 1731 1735 1773 1774 1779 1789 1798 1800 1805 1809
   1828 1830 1860 1864 1865 1876 1882 1925 1928 1967 1972 1976 1979 2001 2044
   2074 2095 2106 2111 2116 2166 2177 2189 2245 2267 2301 2313 2329 2347 2357
   2391 2412 2425 2428 2431 2448 2458 2488 2521 2602 2611 2623 2640 2643 2651
   2670 2715 2729 2741 2749 2787 2793 2825 2829 2856 2906 2911 2927 2959 2991
   3027 3033 3053 3091)
  () -1 0)
 (2905 uniq "( pen 3 ; move 4 + ul , 7 / ua ; move 9 , 4 ) "
  (853 1851 1868 1875 1912 1921 1944 1953 1989 1999 2014 2052 2053 2054 2078
   2081 2110 2125 2127 2167 2169 2205 2229 2277 2286 2323 2368 2381 2494 2503
   2513 2525 2526 2534 2582 2626 2784 2804 2811 2877 2890 2899 2923 2988 3059
   3089)
  () -1 0)
 (2906 uniq "( pen 9 ; move 3 , ul ; move ua , 4 ) "
  (290 292 303 320 331 332 337 357 361 1656 1664 1683 1691 1731 1735 1767
   1828 1830 1831 1860 1976 2001 2044 2047 2106 2150 2189 2284 2425 2431 2602
   2640 2741 2749 2774 2853 2856 2870 2904 2927 3024)
  (2108 2425) -1 0)
 (2907 uniq "( pen ua ; move 4 , ul / 4 ; move 2 , ul ) "
  (641 656 724 1671 1688 1694 1702 1726 1858 1867 1882 1933 1958 1978 2031
   2034 2037 2060 2066 2067 2072 2083 2096 2123 2166 2187 2190 2197 2200 2204
   2207 2216 2219 2227 2228 2236 2252 2260 2261 2279 2297 2334 2337 2380 2388
   2402 2404 2424 2427 2445 2462 2473 2480 2489 2500 2502 2508 2523 2538 2583
   2617 2619 2625 2636 2647 2650 2681 2688 2689 2693 2697 2721 2742 2745 2758
   2761 2817 2819 2820 2821 2826 2869 2872 2889 2909 2939 2949 2986 2998 3037
   3042)
  () -1 0)
 (2908 uniq "( pen ua ; move 4 + ul , 2 / ua ; move 2 , ul ) "
  (1784 1851 1875 1921 2110 2142 2368 2381 2494 2513 2626 2713 2784) () -1 0)
 (2909 equiv "( pen ua ; move 2 , ua / 4 ; move ua , ul ) "
  (512 724 1694 1752 1805 1827 1882 1927 1952 1978 2066 2083 2087 2197 2228
   2236 2252 2261 2279 2297 2298 2334 2335 2365 2402 2404 2422 2424 2472 2473
   2474 2500 2502 2557 2583 2617 2625 2636 2650 2673 2697 2721 2742 2745 2761
   2773 2780 2817 2820 2826 2889 2907 2924 2942 2945 2960 2973 2976 3037)
  () 2924 0)
 (2910 uniq "( move ua , 3 ; move 4 , ul ; move ua , 2 ) "
  (48 85 502 527 1650 1818 1821 1846 1863 2061 2105 2113 2136 2256 2269 2363
   2399 2476 2481 2492 2527 2528 2564 2570 2572 2702 2768 2857 2881 2883 2936
   2950 2963 2972 3004 3018 3030 3081)
  () -1 0)
 (2911 uniq "( pen ua ; move 2 , 2 ; move 3 , ul ) "
  (270 295 320 322 326 327 331 333 338 348 356 364 385 1657 1673 1674 1675
   1683 1685 1707 1717 1722 1729 1731 1735 1760 1772 1776 1778 1779 1784 1798
   1800 1805 1809 1812 1813 1816 1828 1860 1865 1876 1959 1972 1976 1979 1993
   1996 2038 2047 2050 2058 2086 2093 2106 2111 2114 2155 2158 2166 2177 2180
   2182 2185 2189 2209 2231 2296 2313 2325 2329 2372 2378 2412 2448 2458 2506
   2515 2519 2542 2566 2598 2602 2619 2668 2670 2677 2690 2715 2722 2729 2730
   2741 2777 2782 2793 2800 2825 2835 2856 2865 2904 2922 2927 2943 2959 2991
   3007 3014 3027 3033 3075 3091)
  (2596) -1 0)
 (2912 uniq "( move 4 , ul ; move 3 , ul ; move ua , ul ) "
  (485 489 524 665 1243 1818 1846 2102 2157 2256 2399 2463 2481 2492 2528
   2570 2572 2588 2768 2815 2857 2881 2950 2963 2972 3004 3018 3081)
  () -1 0)
 (2913 uniq "( pen ua - 0 ; move 4 , 4 ; move 3 / ul , ul ) "
  (845 1739 1796 2117 2887 2934 3064) () -1 0)
 (2914 uniq "( move 4 , ul ; pen ua ; move ul - 4 , ul ) "
  (583 594 719 2046 2266 2336 2586 2954 2956) () -1 0)
 (2915 uniq "( pen ua ; move ua + ul , ul ; move ua , 2 ) "
  (85 542 582 629 678 1684 1703 1706 1738 1750 1770 1803 1823 1833 1869 1881
   1886 1897 1911 1916 1931 1946 1955 2037 2099 2103 2108 2159 2173 2208 2228
   2242 2321 2345 2417 2447 2454 2490 2549 2593 2620 2637 2641 2648 2718 2757
   2885 2925 2952 2979)
  () -1 0)
 (2916 uniq "( pen 7 ; move 4 + 3 , 2 / ua ; move 4 , 4 ) "
  (853 1851 1868 1875 1912 1921 1944 1953 1989 1999 2014 2052 2053 2081 2110
   2142 2167 2205 2229 2275 2277 2286 2323 2368 2444 2494 2582 2713 2804
   2877)
  () -1 0)
 (2917 uniq "( pen ua ; move 3 , 2 / ua ; move 4 , 4 ) "
  (653 1662 1715 1867 1939 1960 1978 2072 2161 2187 2204 2219 2244 2364 2376
   2464 2474 2502 2535 2667 2673 2696 2763 2824 2898 2935 2939 2941 2948 2986
   3034 3062 3067 3068)
  () -1 0)
 (2918 uniq "( pen ua + 2 ; move 2 - ua , ua ; move 4 , ul ) "
  (356 1961 2008 2186 2287 2421 2747 2772 2838 2864 2893 3079) () -1 0)
 (2919 uniq "( move 3 , 4 ; pen ua ; move ua , 2 ) "
  (50 291 294 297 334 358 362 1672 1725 1727 1745 1748 1786 1825 1855 1899
   1932 1971 1974 1980 1991 1997 2048 2097 2132 2220 2230 2281 2304 2317 2349
   2350 2354 2356 2409 2423 2426 2430 2441 2496 2497 2560 2577 2604 2649 2675
   2699 2703 2707 2731 2776 2802 2806 2810 2833 2858 2860 2902 2983 3022)
  (2354) -1 1)
 (2920 uniq "( move 4 , 3 + 3 ; pen ua + ul ; move 2 , 4 ) "
  (1701 1802 2000 2310 2366 2541 2592) () -1 0)
 (2921 uniq "( pen 3 ; move ua , ul / 7 ; move 4 , ul ) "
  (93 641 1655 1671 1688 1690 1726 1733 1746 1827 1832 1845 1867 1926 1958
   1978 2034 2072 2082 2087 2115 2123 2163 2187 2224 2227 2236 2315 2337 2364
   2380 2393 2424 2427 2429 2489 2502 2523 2583 2620 2625 2650 2676 2681 2751
   2758 2819 2821 2826 2869 2872 2879 2889 2901 2925 2973 2977 2986 3003 3037
   3057 3069 3088)
  () -1 0)
 (2922 uniq "( pen ua ; move 3 , 9 ; move 2 , ul ) "
  (292 303 319 320 327 331 333 338 348 356 364 385 1657 1664 1673 1674 1675
   1683 1685 1705 1722 1728 1729 1731 1735 1772 1776 1778 1779 1784 1798 1800
   1805 1809 1812 1813 1816 1828 1831 1860 1864 1865 1876 1879 1928 1959 1972
   1976 1979 1996 2038 2044 2047 2050 2058 2086 2093 2106 2150 2158 2166 2177
   2180 2181 2182 2185 2209 2231 2245 2301 2313 2347 2372 2391 2412 2425 2428
   2431 2448 2458 2506 2515 2519 2521 2566 2567 2574 2581 2598 2602 2619 2623
   2640 2668 2690 2722 2730 2741 2749 2756 2774 2782 2787 2793 2800 2825 2848
   2853 2880 2911 2927 2943 2987 3024 3027 3033 3053 3071 3075 3091)
  () -1 0)
 (2923 uniq "( pen 3 ; move 4 + 4 , ul / ua ; move 3 , 4 ) "
  (853 1851 1868 1875 1912 1921 1944 1953 1989 1999 2014 2052 2053 2054 2078
   2081 2085 2110 2125 2127 2167 2169 2205 2226 2229 2243 2277 2286 2323 2368
   2494 2503 2525 2534 2582 2626 2740 2784 2804 2811 2877 2899 2905 2988 3059
   3089)
  () -1 0)
 (2924 uniq "( pen 7 ; move 2 , ua / 4 ; move ua , ul ) "
  (512 1882 2066 2197 2252 2279 2297 2335 2365 2402 2583 2617 2625 2650 2742
   2780 2820 2909)
  (2909) -1 0)
 (2925 uniq "( pen ua ; move ua + ul , 7 ; move 4 , ul ) "
  (582 678 685 1680 1687 1702 1703 1726 1729 1738 1769 1770 1791 1833 1867
   1881 1897 1909 1911 1915 1919 1931 1955 2037 2075 2087 2099 2103 2159 2173
   2224 2242 2274 2300 2321 2345 2387 2417 2454 2461 2490 2523 2549 2616 2641
   2648 2659 2660 2683 2718 2733 2826 2847 2872 2915 2921 2946 2952 3019 3040
   3088)
  () -1 0)
 (2926 uniq "( move 4 , 2 ; ( move 0 - 3 , 2 ; pen 4 ) ; move 2 , 2 ) "
  (1442) () -1 0)
 (2927 uniq "( pen ua ; move 3 , ul ; move 3 , 7 ) "
  (295 319 320 322 327 331 338 364 1656 1664 1683 1707 1731 1735 1776 1779
   1798 1800 1828 1830 1860 1876 1959 1967 1976 2044 2047 2050 2086 2093 2095
   2106 2111 2114 2150 2155 2158 2166 2177 2180 2182 2209 2245 2301 2329 2347
   2372 2391 2425 2428 2431 2458 2515 2519 2521 2598 2602 2623 2624 2668 2670
   2715 2722 2741 2749 2782 2787 2825 2853 2904 2906 2911 2922 2943 2991 3027
   3033 3053)
  () -1 1)
 (2928 uniq "( move ua , ua ; move ua + ul , ua - 2 ) "
  (84 436 458 462 467 471) (1638) -1 0)
 (2929 uniq "( pen ua ; move 2 , 0 ; move ua - 3 , ul ) "
  (684 1807 1865 2405 2411 2514 2612 3036) (1807) -1 0)
 (2930 uniq "( move ua , 2 / 4 ; pen ua ; move 3 , ul ) "
  (639 658 1652 1743 2217 2813 2974) () -1 0)
 (2931 uniq "( move ua , 0 - 3 ; move ua , 2 ) "
  (44 48 137 148 149 178 179 187 191 196 228 247 249 1741 1754 1984 2254 2953
   3032)
  (1754) -1 1)
 (2932 uniq "( pen ua ; move 0 , ua ; move 4 + 4 , 2 / 4 ) "
  (776 2276 2739 2867) (2276) -1 0)
 (2933 uniq "( move ua , 4 ; pen ua + ul ; move ul + ua , 4 ) "
  (233 637 983 1672 2162 2278 2517 2591 2628 2649 2695 2737 2760 2989 2999
   3060)
  (2657) -1 0)
 (2934 uniq "( pen ua - 3 ; move 4 , 4 ; move 5 + ul , ul ) "
  (845 1739 1796 2887 2913 3064) () -1 0)
 (2935 uniq "( pen ua ; move 2 , 3 / ua ; move 4 , 2 ) "
  (653 1690 1752 1867 1882 1952 1990 1998 2013 2036 2041 2096 2104 2121 2187
   2222 2236 2244 2279 2285 2316 2326 2335 2364 2369 2370 2376 2393 2422 2474
   2502 2535 2630 2638 2673 2676 2696 2773 2884 2894 2917 2948 2949 2970 2976
   2977 3034 3062 3067 3068)
  () -1 0)
 (2936 uniq "( move ua , 4 ; move 4 , ul ; move ua , 2 ) "
  (60 85 485 486 596 1650 1797 1818 1821 1846 2061 2105 2113 2136 2256 2269
   2363 2399 2476 2481 2492 2527 2528 2564 2570 2572 2702 2768 2857 2881 2883
   2910 2950 2963 2972 3004 3018 3030 3081)
  () -1 0)
 (2937 uniq "( move 3 , ua * ua ; move 5 , 2 ; move ua , 2 ) " (877) () -1 0)
 (2938 uniq "( move ua - ul , 0 ; pen 2 ; move 3 , ul ) "
  (696 702 1686 1695 1736 2314 2708 3046) () -1 0)
 (2939 uniq "( pen ua ; move 4 , ul / ua ; move 8 , 4 ) "
  (724 1867 1960 2031 2036 2060 2096 2161 2187 2190 2200 2219 2222 2298 2358
   2364 2369 2376 2380 2480 2502 2508 2535 2636 2638 2652 2673 2686 2696 2871
   2879 2894 2898 2907 2917 2948 2949 3003 3062 3072)
  () -1 0)
 (2940 uniq "( pen ua ; move ua , 4 / 0 ; move ua , 2 ) "
  (44 1650 1655 1684 1715 1750 1803 1823 1829 1834 1840 1882 1886 1916 1933
   1939 1946 1952 1998 2013 2031 2036 2064 2067 2096 2121 2163 2175 2190 2206
   2207 2210 2222 2228 2244 2297 2332 2364 2365 2385 2393 2401 2464 2557 2583
   2593 2597 2620 2622 2757 2763 2767 2773 2799 2812 2826 2827 2885 2889 2976
   3067)
  (1886 1946) -1 0)
 (2941 uniq "( pen ua ; move 3 , 2 / ul ; move 4 , 4 ) "
  (582 1662 1715 1716 1823 1829 1840 1939 1978 2072 2131 2187 2204 2219 2285
   2376 2464 2474 2518 2667 2696 2749 2763 2824 2917 2948 2951 2986 3028 3034
   3058 3062 3068)
  () -1 0)
 (2942 uniq "( pen ua ; move 3 , ua - ul ; move ua , ul ) "
  (584 1676 1716 1731 1823 1829 1840 1916 1939 2002 2020 2109 2131 2145 2261
   2330 2365 2402 2557 2646 2721 2728 2757 2761 2822 2834 2837 2909 2945
   2960)
  () -1 0)
 (2943 uniq "( pen ua ; move 3 , 2 ; move 3 , ul ) "
  (270 292 295 303 319 320 322 326 327 331 333 338 348 356 364 385 1657 1673
   1674 1675 1683 1685 1707 1722 1729 1731 1735 1760 1772 1776 1778 1779 1784
   1798 1800 1805 1809 1812 1813 1816 1828 1831 1860 1865 1876 1959 1972 1976
   1979 1993 1996 2038 2044 2047 2050 2058 2086 2093 2106 2111 2114 2131 2150
   2155 2158 2166 2177 2180 2182 2185 2189 2209 2231 2245 2296 2301 2313 2347
   2372 2378 2391 2412 2425 2428 2431 2448 2458 2506 2515 2519 2521 2542 2566
   2574 2581 2598 2602 2619 2623 2624 2668 2670 2677 2690 2715 2722 2729 2730
   2741 2749 2774 2777 2782 2787 2793 2800 2825 2835 2853 2865 2911 2922 2927
   2987 2991 3007 3014 3024 3027 3033 3053 3075 3091)
  () -1 0)
 (2944 uniq "( pen 2 ; move 2 , 7 / 2 ; move ua , 2 ) "
  (1750 1882 1929 1952 1963 2190 2206 2210 2290 2482 2498 2704 2732 2750
   2812)
  () -1 0)
 (2945 uniq "( pen ua ; move 2 - ua , ul ; move ua , ul ) "
  (670 1676 1817 1861 1881 1897 1911 1927 2049 2069 2070 2107 2165 2176 2239
   2241 2242 2257 2270 2295 2307 2379 2433 2439 2467 2472 2490 2510 2548 2573
   2613 2614 2658 2674 2682 2717 2718 2733 2746 2816 2837 2843 2852 2891 2909
   2942 2967 2979 3005 3038 3055 3074)
  () -1 0)
 (2946 uniq "( pen ua ; move 4 + ul , 3 ; move 4 , 4 ) "
  (582 797 1702 1703 1770 1896 1931 2075 2099 2103 2173 2216 2274 2345 2454
   2549 2637 2925 2952 3040 3062)
  (797) -1 0)
 (2947 uniq "( move ua , 2 ; ( pen 4 ; move ua , 2 ) ) "
  (1650 1854 2529 2571 2599) (2808) -1 0)
 (2948 uniq "( pen ua ; move 2 , 3 / ua ; move 4 , 4 ) "
  (653 1662 1690 1752 1867 2013 2104 2187 2219 2236 2279 2298 2335 2358 2364
   2369 2376 2422 2474 2502 2535 2630 2638 2673 2696 2824 2894 2917 2935 2939
   2941 2977 3034 3062 3067 3068)
  () -1 0)
 (2949 uniq "( pen ua ; move 4 , ul / ua ; move ul , 2 ) "
  (724 1671 1688 1750 1823 1858 1867 1882 1963 1998 2013 2031 2036 2060 2064
   2067 2096 2149 2163 2175 2187 2190 2200 2206 2207 2208 2210 2219 2222 2228
   2244 2260 2316 2364 2369 2376 2380 2393 2401 2429 2462 2464 2480 2502 2535
   2538 2593 2620 2636 2638 2673 2676 2750 2827 2894 2907 2935 2939 2970 3067
   3072)
  () -1 0)
 (2950 uniq "( move ua , ul ; move 3 , ul ; move ua , ul ) "
  (485 489 524 534 605 665 721 1771 1818 1846 2061 2090 2157 2256 2269 2399
   2476 2481 2492 2501 2564 2572 2588 2702 2768 2815 2857 2881 2883 2910 2912
   2936 2963 2972 2993 3004 3018 3081)
  () -1 0)
 (2951 uniq "( pen 4 ; move 3 , 2 / ul ; move 7 , ul ) "
  (1696 1716 1845 1939 2131 2150 2204 2285 2474 2687 2941 3034 3087) () -1 0)
 (2952 uniq "( pen ua ; move ua + ul , ul ; move 4 , 4 ) "
  (58 582 678 1697 1703 1738 1770 1833 1881 1896 1897 1931 1955 2037 2075
   2099 2103 2108 2159 2173 2224 2274 2321 2345 2352 2417 2447 2454 2461 2490
   2549 2616 2637 2641 2648 2660 2718 2915 2925 2946 2979 3040 3058 3088)
  () -1 0)
 (2953 uniq "( move ua , 4 + 3 ; move ua , 4 ) "
  (57 126 137 148 149 178 180 187 191 195 196 198 203 225 233 249 276 564
   1665 1668 1984 2931)
  () -1 0)
 (2954 uniq "( move 4 , ul ; pen 2 ; move 3 - ua , ul ) "
  (56 1742 1822 1824 1924 2450 2823 2914 2956 3085) () -1 0)
 (2955 uniq "( move 0 - ua , 2 ; move ul - ua , ul / 2 ; ul ) " (437 1260)
  (1260) -1 0)
 (2956 uniq "( move ua , ul ; pen 4 ; move ul - ua , ul ) "
  (484 642 719 1742 1824 1924 2046 2336 2450 2465 2586 2823 2914 2954 3065
   3085)
  () -1 0)
 (2957 equiv "( move 2 , ul + 2 ; pen 3 ; move ua , ua / 4 ) "
  (1885 1920 2022 2299 2460 2971 2984) () 3045 0)
 (2958 uniq "( pen ua ; move ua , 3 ; move 4 * 2 , 3 ) "
  (79 1985 2135 2438 2484) () -1 0)
 (2959 uniq "( pen 2 ; move 2 , 4 ; move ua , ul ) "
  (290 292 303 320 333 336 337 338 348 1657 1673 1674 1683 1685 1717 1731
   1735 1805 1809 1828 1831 1860 1865 1876 1972 1976 1979 2114 2177 2181 2209
   2313 2325 2378 2412 2443 2448 2458 2515 2602 2619 2722 2729 2777 2793 2798
   2848 2856 2870 2904 2911 3091)
  () -1 0)
 (2960 uniq "( pen ua ; move 3 , 3 / 2 ; move ua , ul ) "
  (641 653 724 1671 1683 1694 1716 1726 1750 1752 1761 1823 1827 1829 1840
   1904 1939 1976 1990 2013 2034 2064 2072 2083 2187 2190 2206 2210 2244 2261
   2279 2285 2297 2316 2332 2335 2365 2388 2402 2404 2422 2473 2480 2482 2557
   2583 2617 2647 2688 2689 2693 2704 2721 2732 2742 2751 2761 2763 2817 2819
   2820 2826 2869 2889 2909 2942 2976 2986 3034)
  () -1 0)
 (2961 uniq "( pen 4 ; move ul , ua ; move ua + ul , ul ) "
  (628 645 648 2170 3025) () -1 0)
 (2962 uniq "( move ua + ul , ul ; move ul , 7 - ua ; move ua + 2 , 2 ) "
  (1523 2129) () -1 0)
 (2963 uniq "( move ua , 0 ; move 2 , ul ; move ua , ul ) "
  (87 524 603 665 1818 1846 2061 2157 2269 2399 2476 2481 2492 2564 2768 2815
   2857 2881 2910 2912 2936 2950 2972 2993 3018 3081)
  () -1 0)
 (2964 uniq "( move 0 - ua , 3 ; pen ua ; move ul , ul ) "
  (490 547 639 675 680 2561 3046) () -1 0)
 (2965 uniq "( pen ua ; move 3 , ul ; move ul - ua , ul ) "
  (498 684 1731 1853 2018 2063 2164 2551 2612 2779 3001 3008) () -1 0)
 (2966 uniq "( move 4 , ul - 2 ; move 3 , 4 ; move ua , ul ) "
  (815 2543 2684) () -1 0)
 (2967 uniq "( pen ua ; move ul - ua , ul ; move 2 , 4 ) "
  (670 1664 1676 1697 1770 1817 1852 1881 1927 2107 2165 2176 2239 2241 2257
   2270 2295 2307 2331 2379 2433 2453 2467 2510 2548 2573 2613 2614 2658 2660
   2663 2674 2682 2705 2717 2727 2733 2746 2754 2816 2837 2843 2891 2945 2982
   3005 3021 3038 3055 3058 3074)
  () -1 0)
 (2968 uniq "( pen ua + 0 ; move 4 , 4 ; move 0 - ua , ul ) "
  (917 1862 1986 2004 2151 2192 2607 2621 2839) (1986 2839) -1 0)
 (2969 uniq "( pen ua ; move ua , ul - 2 ; move 7 , 2 ) "
  (98 626 641 1671 1713 1726 1750 1763 1803 1859 1869 1916 1946 2027 2034
   2036 2039 2060 2067 2109 2115 2121 2163 2190 2207 2210 2222 2228 2330 2364
   2393 2401 2562 2593 2620 2642 2648 2757 2812 2885 2998 3077)
  () -1 0)
 (2970 uniq "( pen 2 ; move 4 , 3 / ua ; move 3 , 2 ) "
  (430 1756 1795 1990 2013 2041 2096 2222 2290 2316 2358 2369 2370 2446 2482
   2638 2676 2689 2701 2871 2884 2894 2935 2949 3072)
  () -1 0)
 (2971 uniq "( move 2 , 3 + 3 ; pen 3 ; move ua , ua / 4 ) "
  (1920 2299 2460 2957 2984 3045) () -1 0)
 (2972 uniq "( move 4 , 0 ; move 3 , ul ; move ua , 2 ) "
  (26 28 456 485 489 523 524 1818 2061 2102 2136 2256 2269 2399 2476 2492
   2527 2528 2564 2570 2572 2588 2857 2881 2910 2912 2936 2950 2963 3004
   3081)
  () -1 0)
 (2973 uniq "( pen ua ; move ua , ua / 3 ; move 4 , ul ) "
  (91 356 641 653 1655 1671 1688 1694 1713 1726 1733 1746 1752 1827 1832 1845
   1866 1867 1904 1933 1978 2020 2033 2034 2072 2075 2083 2087 2109 2121 2145
   2187 2204 2216 2236 2252 2334 2335 2337 2364 2380 2393 2422 2424 2427 2473
   2474 2500 2502 2508 2523 2583 2593 2646 2647 2681 2697 2721 2728 2745 2751
   2761 2765 2794 2820 2826 2827 2869 2872 2882 2889 2909 2921 2986 3034 3037
   3062 3067 3068)
  () -1 0)
 (2974 uniq "( move 7 , 2 / 4 ; pen 3 ; move 4 , ul ) " (1652 2930) () -1 0)
 (2975 uniq "( move ua , 2 / 3 ; move 2 , 2 ; move ua , ul ) "
  (2305 2351 2414 2524 2831 2981 3048) () -1 0)
 (2976 uniq "( pen ua ; move ul , 3 / 4 ; move ua , 2 ) "
  (653 656 724 1694 1750 1795 1823 1829 1840 1882 1886 1939 1952 1990 2013
   2031 2041 2064 2067 2083 2096 2190 2206 2207 2210 2228 2244 2279 2285 2297
   2316 2365 2369 2370 2385 2402 2462 2482 2498 2505 2557 2583 2593 2620 2638
   2742 2801 2817 2874 2884 2909 2935 2940 2960 3042)
  () -1 0)
 (2977 uniq "( pen 3 ; move 2 , 3 / ua ; move 4 , ul ) "
  (653 1690 1717 1733 1746 1752 1832 1845 1867 1926 2041 2104 2187 2236 2279
   2315 2335 2358 2422 2445 2474 2502 2535 2625 2630 2650 2696 2751 2824 2879
   2921 2935 2948 3034)
  () -1 0)
 (2978 uniq "( move ua + 3 , 2 ; move ua , 2 ) "
  (137 147 148 198 1755 2254 2341 2468 2522 2755) () -1 0)
 (2979 uniq "( pen ua ; move ua - ul , ul ; move ua , 2 ) "
  (85 497 542 629 678 685 1676 1680 1684 1687 1697 1706 1738 1749 1750 1769
   1770 1791 1803 1823 1869 1881 1886 1897 1911 1916 1919 1946 1955 2075 2099
   2103 2173 2208 2224 2228 2242 2300 2321 2352 2417 2447 2454 2461 2490 2549
   2593 2616 2620 2637 2641 2648 2660 2718 2757 2847 2885 2915 2945 2952)
  () -1 0)
 (2980 uniq "( move ua , ul / 3 ; move ua , 9 ; move 4 , 2 ) "
  (729 1724 1737 2309 2359 2512 2797 2805 2990) () -1 0)
 (2981 uniq "( move ua , ua - 3 ; move 2 , ul ; move ua , ul ) "
  (965 1949 2249 2280 2351 2507 2544 2580 2610 2768 2831 2875 2888 2975 3010)
  () -1 0)
 (2982 uniq "( pen ua ; move ul + ua , 3 ; move 2 , ul ) "
  (670 1676 1702 1816 1817 1833 1852 1915 1919 1927 1987 2037 2040 2107 2176
   2239 2241 2257 2263 2270 2295 2307 2321 2331 2379 2387 2433 2453 2467 2472
   2510 2573 2601 2614 2658 2663 2674 2682 2705 2717 2727 2733 2746 2761 2816
   2837 2843 2967 3005 3017 3019 3038 3040 3055 3074 3076)
  () -1 0)
 (2983 uniq "( move 3 , 2 ; pen ua ; move 3 , 4 ) "
  (231 267 272 291 362 1672 1725 1727 1825 1836 1899 1917 1932 1934 1945 1974
   1980 1991 1997 2023 2079 2132 2154 2202 2217 2230 2268 2304 2312 2317 2349
   2355 2423 2426 2497 2556 2577 2604 2649 2679 2699 2703 2706 2710 2725 2731
   2759 2802 2810 2833 2860 2902 2919 3022 3061 3078 3084)
  () -1 0)
 (2984 uniq "( move ua , 5 + 3 ; pen 3 ; move ua , ua / 4 ) "
  (202 1885 1920 2299 2460 2576 2957 2971) () -1 0)
 (2985 uniq "( move 4 , ua + ul ; move 4 , 3 ; move 4 , 0 - ul ) " (1154) ()
  -1 0)
 (2986 uniq "( pen ua ; move 3 , ul / 2 ; move 4 , ul ) "
  (641 653 656 724 1655 1662 1671 1688 1703 1716 1726 1746 1750 1752 1823
   1827 1832 1867 1904 1958 1978 1990 2034 2060 2064 2072 2087 2106 2115 2121
   2149 2182 2187 2190 2200 2204 2210 2216 2219 2227 2236 2261 2332 2334 2335
   2337 2345 2364 2376 2380 2388 2393 2401 2402 2404 2422 2424 2427 2461 2473
   2474 2480 2500 2502 2523 2535 2538 2562 2583 2617 2625 2636 2647 2688 2689
   2693 2704 2721 2732 2751 2758 2761 2794 2819 2820 2821 2826 2869 2872 2879
   2889 2901 2907 2917 2921 2941 2960 2973 2998 3034 3037 3040 3042 3062
   3069)
  () -1 0)
 (2987 uniq "( pen 3 ; move 3 , ua ; move 2 , ul ) "
  (271 292 293 296 303 319 320 331 336 338 356 385 1657 1675 1683 1705 1717
   1728 1731 1735 1767 1772 1784 1800 1805 1816 1828 1831 1860 1864 1879 1959
   1976 1979 1996 2047 2050 2058 2082 2086 2093 2106 2150 2158 2166 2180 2181
   2182 2209 2245 2284 2301 2322 2325 2348 2372 2378 2443 2448 2458 2515 2519
   2521 2566 2567 2574 2575 2581 2598 2602 2609 2619 2624 2643 2668 2690 2722
   2729 2730 2741 2756 2774 2782 2787 2800 2845 2848 2870 2880 2922 2943 3014
   3024 3027 3071)
  () -1 1)
 (2988 uniq "( pen 3 ; move 4 + 4 , 4 / ua ; move 3 , 4 ) "
  (853 1851 1868 1875 1912 1921 1944 1953 1989 1999 2014 2052 2053 2054 2078
   2081 2085 2110 2125 2127 2167 2169 2194 2205 2226 2229 2243 2277 2286 2323
   2368 2494 2503 2525 2534 2559 2582 2804 2811 2871 2877 2899 2905 2923 3059
   3089)
  () -1 0)
 (2989 uniq "( move ua , 7 ; pen ua + ul ; move ul + 4 , 4 ) "
  (983 2162 2278 2517 2591 2628 2695 2737 2760 2933 2999 3060) () -1 0)
 (2990 uniq "( move ua , 3 / 3 ; move ua , 9 ; move ua , 2 ) "
  (1724 1737 2309 2359 2360 2512 2797 2805 2980) () -1 0)
 (2991 uniq "( pen ua ; move ua , 4 ; move 3 , 2 ) "
  (17 268 269 295 322 325 326 337 338 340 350 351 356 385 1656 1657 1664 1673
   1675 1685 1691 1705 1707 1722 1729 1735 1776 1778 1779 1788 1789 1798 1800
   1812 1813 1816 1830 1864 1925 1928 1967 1972 1996 2011 2038 2044 2058 2095
   2100 2111 2114 2116 2155 2177 2181 2189 2209 2245 2296 2301 2329 2347 2357
   2391 2428 2431 2443 2488 2515 2521 2542 2609 2611 2619 2623 2624 2643 2670
   2677 2715 2722 2741 2777 2787 2793 2825 2829 2835 2848 2904 2911 2927 2943
   3007 3027 3053)
  () -1 0)
 (2992 uniq "( pen ua ; move ul - ua , ua + move 4 , ul ) "
  (670 1676 1817 1927 2107 2176 2239 2241 2257 2270 2307 2379 2387 2433 2467
   2510 2573 2614 2674 2682 2717 2733 2754 2816 2843 3038 3074)
  () -1 0)
 (2993 uniq "( move ua , 0 ; move ul , ul ; move 7 , ul ) "
  (524 528 533 603 665 2061 2157 2269 2476 2492 2564 2768 2815 2857 2950
   2963)
  () -1 0)
 (2994 uniq "( move ua , 4 ; move ua , ul - 3 ; move ul , ul ) " (1024) () -1
  0)
 (2995 uniq "( move 4 , 3 ; pen ua * ua ; move 2 , ul ) " (633 682) () -1 0)
 (2996 uniq "( move 2 , ua - ul ; move 3 , 4 ; move ua , 2 ) " (2120 2346) ()
  -1 0)
 (2997 uniq "( move ua , 3 / 2 ; move ua , 2 ; move 2 + ul , 0 ) "
  (1101 2068 2694) () -1 0)
 (2998 uniq "( pen ua ; move 4 , ul - 2 ; move 4 , ul ) "
  (641 1671 1713 1726 1763 1827 1832 1859 1867 2002 2034 2060 2072 2109 2187
   2190 2200 2204 2216 2231 2236 2261 2274 2330 2335 2345 2388 2422 2461 2480
   2502 2562 2636 2689 2693 2758 2765 2794 2819 2869 2872 2901 2907 2969 2986
   3033)
  () -1 0)
 (2999 uniq "( move ua , 5 ; pen ua + ul ; move ul + 2 , 4 ) "
  (983 2162 2278 2517 2591 2628 2695 2737 2760 2933 2989 3060) () -1 0)
 (3000 uniq "( move 2 , ua - ul ; pen ua + ul ; move 4 , 4 ) "
  (922 1701 2310 2384 2666) () -1 0)
 (3001 uniq "( pen 3 ; move 3 , 0 ; move 2 - ua , ul ) "
  (292 498 1853 2018 2063 2164 2436 2555 2779 2965 3008) () -1 0)
 (3002 uniq "( move 0 - 5 , ul / pen 2 ; move 3 - ua , ul ) "
  (918 1822 2055 2144 2457 2511 2545 2589 2854 3047 3080) () -1 0)
 (3003 uniq "( pen 3 ; move ua , ul / ua ; move 2 , 4 ) "
  (296 1832 1867 1926 1933 1960 2036 2067 2123 2161 2175 2219 2222 2227 2273
   2358 2364 2376 2380 2424 2445 2489 2508 2650 2652 2662 2667 2673 2676 2681
   2686 2821 2824 2871 2879 2898 2921 2939 3057 3069 3072)
  () -1 0)
 (3004 uniq "( move 3 , ul ; move ua , ul ; move ua , 2 ) "
  (50 85 456 527 601 1711 1818 2102 2136 2256 2269 2354 2399 2481 2527 2528
   2564 2570 2572 2588 2702 2857 2881 2883 2910 2912 2936 2950 2972 3018
   3081)
  () -1 0)
 (3005 uniq "( pen ua ; move 2 - ua , 0 ; move 2 , ul ) "
  (542 670 1675 1676 1680 1687 1697 1702 1749 1769 1791 1817 1852 1881 1915
   1919 1927 1987 2069 2070 2107 2176 2239 2241 2242 2257 2270 2295 2307 2331
   2379 2433 2439 2453 2467 2472 2510 2573 2601 2613 2614 2663 2674 2682 2705
   2717 2727 2733 2746 2772 2773 2816 2837 2838 2843 2847 2852 2891 2893 2945
   2967 2982 3038 3055 3074 3076)
  (1961 2772 2838 2893) -1 0)
 (3006 uniq "( move 3 , ul / 3 ; move ua , ul ; move ua , 3 ) "
  (965 1878 1902 2318 3054) () -1 0)
 (3007 uniq "( pen 3 ; move ua , 2 ; move 3 , 2 ) "
  (18 269 293 295 296 322 326 332 350 1691 1707 1728 1760 1776 1788 1789 1798
   1813 1864 1879 1925 1928 1967 1972 2011 2047 2058 2082 2095 2111 2114 2155
   2181 2189 2296 2357 2378 2443 2488 2542 2566 2609 2611 2624 2643 2670 2715
   2729 2730 2756 2771 2777 2825 2835 2845 2865 2880 2911 2943 2991 3014
   3027)
  () -1 0)
 (3008 uniq "( pen ua ; move 3 , 4 ; move ul - ua , ul ) "
  (338 1735 2018 2164 2551 2621 2779 2965 3001) (2621) -1 0)
 (3009 uniq "( pen 3 ; move ul + ua , 2 + ua ; move ua , 4 ) "
  (1767 1851 1868 1989 2081 2323 2383 2444) () -1 0)
 (3010 uniq "( move ua , 4 - 3 ; move 2 , ul ; move 7 , ul ) "
  (1949 2249 2280 2351 2507 2544 2580 2831 2888 2981) () -1 0)
 (3011 uniq "( move 4 , ua * pen ua ; move 3 , ul ) "
  (272 335 358 1681 1783 1825 1836 1899 1923 1932 1934 1997 2003 2079 2134
   2154 2156 2202 2211 2217 2288 2355 2577 2679 2876)
  () -1 0)
 (3012 uniq "( move 3 , 4 / ua ; pen 2 ; move ua , 2 ) "
  (50 579 1775 1942 1988 2394 2403 2716 2850 3013 3082) () -1 0)
 (3013 uniq "( move ua , 4 / ua ; pen 2 ; move ua , 2 ) "
  (84 579 1650 1743 1775 1942 1982 1988 2394 2403 2716 2778 2850 3012 3082)
  () -1 0)
 (3014 uniq "( pen 3 ; move ua , 2 ; move 4 , ul ) "
  (55 268 269 271 292 293 296 303 326 333 336 356 385 1657 1673 1674 1675
   1683 1685 1717 1720 1722 1728 1729 1746 1760 1772 1776 1778 1779 1788 1789
   1798 1800 1812 1813 1816 1831 1832 1876 1879 1967 1972 1993 1996 2009 2038
   2047 2058 2082 2093 2100 2106 2114 2158 2181 2182 2189 2231 2284 2296 2313
   2322 2325 2348 2378 2412 2443 2488 2506 2515 2542 2566 2567 2574 2575 2581
   2609 2611 2643 2668 2729 2730 2756 2774 2777 2782 2793 2798 2835 2845 2848
   2865 2880 2911 2943 2987 3007 3024 3033 3071 3075 3088)
  () -1 0)
 (3015 uniq "( move ul - 4 , ul ; move 3 , 4 + 0 ; move ua , ul ) " (1243) ()
  -1 0)
 (3016 uniq "( pen ua ; move 2 , 4 ; move ua , 2 / 3 ) " (849) () -1 0)
 (3017 uniq "( pen ua ; move ul + ua , 2 ; move ul , ul ) "
  (670 1676 1817 1833 1852 1927 1987 2040 2107 2109 2176 2239 2241 2257 2263
   2270 2307 2331 2345 2379 2387 2433 2467 2472 2510 2548 2573 2601 2614 2658
   2674 2682 2717 2733 2746 2816 2843 2982 3038 3074 3076)
  () -1 0)
 (3018 uniq "( move ua , ul ; move 2 , ul ; move ua , 4 ) "
  (52 89 485 527 533 602 665 1818 2061 2157 2256 2269 2399 2476 2481 2492
   2564 2588 2606 2702 2768 2815 2857 2881 2883 2910 2912 2936 2950 2963 3004
   3081)
  () -1 0)
 (3019 uniq "( pen ua ; move ua + 2 , 7 ; move 2 , ul ) "
  (1680 1702 1769 1770 1791 1833 1852 1881 1909 1915 1919 2037 2040 2224 2321
   2331 2345 2417 2448 2472 2659 2660 2682 2683 2728 2746 2925 2982)
  () -1 0)
 (3020 uniq "( move 4 , ul - 3 ; pen ua ; move ua , 4 ) "
  (59 511 558 1806 2089 2377 2516 2550 2603 2632 2719 2796 3032) () -1 0)
 (3021 uniq "( pen 2 ; move 3 - ua , ul ; move 4 , 4 ) "
  (58 582 1306 1896 2467 2837 2967 3058) (1306) -1 0)
 (3022 uniq "( move 3 , 3 ; pen ua ; move 2 , 2 ) "
  (283 285 291 297 329 335 1681 1725 1727 1745 1786 1810 1825 1836 1855 1856
   1899 1932 1971 1980 1991 1997 2023 2032 2048 2079 2132 2134 2230 2253 2281
   2304 2317 2356 2423 2426 2430 2441 2496 2497 2499 2560 2604 2699 2703 2710
   2731 2806 2810 2833 2860 2902 2919 2983)
  () -1 0)
 (3023 uniq "( move ua + 3 , ul ; move 3 , 3 ; move ua , ul ) "
  (957 1721 2126 2196) () -1 0)
 (3024 uniq "( pen 9 ; move 3 , 0 ; move 4 , ul ) "
  (270 271 292 293 303 320 331 338 348 356 1673 1675 1683 1685 1717 1722 1729
   1731 1735 1772 1778 1779 1788 1812 1813 1828 1831 1860 1865 1876 1959 1976
   2009 2047 2050 2082 2086 2093 2106 2150 2158 2180 2182 2185 2209 2231 2284
   2313 2322 2325 2348 2372 2391 2412 2428 2443 2488 2506 2515 2519 2521 2542
   2566 2567 2574 2575 2581 2598 2602 2668 2722 2730 2741 2749 2774 2782 2787
   2798 2800 2845 2848 2853 2865 2870 2906 2922 2943 2987 3014 3033 3053 3075
   3091)
  (1732 1877 2093 2158) -1 0)
 (3025 uniq "( pen 4 ; move ul , 3 ; move ua + ul , 2 ) " (628 2961) () -1 0)
 (3026 uniq "( move ul , 4 / ua ; move ua + 3 , 4 / 2 ) " (1017 2595) 
  (2595) -1 0)
 (3027 uniq "( pen ua ; move 3 , ua ; move 3 , 2 ) "
  (295 319 320 322 327 331 338 350 351 356 385 1683 1705 1707 1731 1735 1772
   1776 1784 1789 1798 1805 1828 1830 1860 1864 1928 1959 1967 1976 2011 2044
   2047 2050 2086 2093 2095 2100 2106 2111 2116 2155 2158 2177 2180 2182 2209
   2245 2284 2301 2329 2347 2357 2372 2391 2425 2428 2431 2488 2515 2519 2521
   2575 2598 2602 2609 2623 2624 2643 2668 2670 2690 2715 2722 2741 2749 2782
   2787 2825 2829 2853 2904 2911 2922 2927 2943 2987 2991 3007 3053)
  (2271) -1 0)
 (3028 uniq "( pen ua ; move 3 , 7 / ul ; move 2 , 2 ) "
  (1662 1716 1823 1829 1840 1869 1886 1939 1990 2060 2064 2067 2149 2210 2219
   2244 2260 2285 2365 2464 2498 2538 2557 2597 2647 2693 2697 2761 2773 2812
   2822 2941 3067)
  () -1 0)
 (3029 uniq "( move ua , ul - 0 ; move 4 , 2 ; move ua , ul ) "
  (247 2133 2280 2684 2888) () -1 0)
 (3030 uniq "( move ua , 3 ; move 4 , ul ; move 4 , 2 ) "
  (54 450 533 534 589 665 1818 1821 1863 2136 2157 2269 2435 2527 2564 2570
   2702 2768 2857 2881 2896 2910 2936 3081)
  () -1 0)
 (3031 uniq "( pen 4 ; move ua , 4 / ua ; move 2 , 3 / 4 ) " (951 1781 2248)
  () -1 0)
 (3032 uniq "( move ua , 0 - 3 ; pen ua ; move ua , 2 ) "
  (44 48 84 550 558 1775 1806 1982 2089 2356 2377 2550 2603 2632 2796 2850
   2931 3020)
  (2632) -1 0)
 (3033 uniq "( pen ua ; move 4 , ul ; move 4 , ul ) "
  (270 271 293 295 302 320 331 333 336 338 342 348 356 364 385 646 1656 1657
   1664 1673 1674 1675 1683 1685 1707 1717 1720 1722 1729 1731 1735 1772 1776
   1778 1779 1784 1789 1798 1800 1805 1809 1812 1813 1816 1828 1830 1860 1865
   1876 1959 1967 1972 1976 1979 1993 1996 2009 2038 2047 2050 2058 2082 2086
   2093 2100 2106 2111 2114 2116 2150 2158 2166 2177 2180 2182 2185 2204 2209
   2216 2231 2313 2322 2325 2329 2348 2372 2378 2412 2425 2428 2431 2443 2448
   2458 2488 2506 2515 2519 2521 2566 2598 2602 2611 2619 2668 2690 2722 2741
   2749 2756 2774 2782 2793 2798 2800 2829 2835 2845 2853 2856 2865 2870 2904
   2911 2922 2927 2943 2998 3014 3024 3053 3071 3075 3091)
  (1703) -1 0)
 (3034 uniq "( pen ua ; move 3 , 2 / ua ; move 4 , ul ) "
  (653 724 1655 1662 1690 1716 1726 1746 1752 1827 1867 1933 1939 1978 2072
   2087 2093 2104 2131 2182 2187 2204 2219 2236 2244 2261 2335 2364 2376 2380
   2388 2402 2404 2422 2445 2464 2474 2502 2535 2630 2647 2667 2688 2693 2696
   2721 2742 2745 2761 2765 2824 2827 2869 2872 2879 2917 2935 2941 2948 2951
   2960 2973 2977 2986 3067)
  (2072) -1 0)
 (3035 uniq "( pen 4 + 3 ; move ua / 3 , 3 ; move 0 - 2 , 2 ) "
  (1115 1677 2333 2456 2836) () -1 0)
 (3036 uniq "( pen 3 ; move 2 , 0 ; move ua - ul , 2 ) " (2514 2900 2929) ()
  -1 0)
 (3037 uniq "( pen ua ; move ua , ul / 4 ; move 3 , ul ) "
  (641 656 685 724 1655 1671 1688 1694 1713 1716 1726 1750 1798 1827 1832
   1859 1867 1882 1897 1904 1933 1958 1978 2033 2034 2036 2037 2066 2067 2072
   2083 2087 2123 2149 2163 2187 2197 2207 2222 2227 2228 2236 2252 2261 2279
   2297 2315 2330 2334 2337 2364 2380 2388 2393 2401 2402 2404 2417 2424 2427
   2473 2480 2489 2500 2502 2508 2523 2583 2593 2616 2617 2620 2622 2625 2636
   2650 2681 2688 2689 2693 2697 2721 2742 2745 2780 2817 2820 2821 2826 2827
   2847 2869 2872 2874 2889 2894 2907 2909 2921 2973 2986 3042 3043 3057 3069
   3077)
  () -1 0)
 (3038 uniq "( pen ua ; move ul - ua , 4 ; move 7 , ul ) "
  (592 670 1676 1817 1852 1927 2043 2107 2165 2176 2239 2241 2257 2270 2295
   2307 2331 2379 2387 2406 2433 2453 2467 2472 2510 2548 2573 2614 2616 2658
   2663 2674 2682 2705 2717 2727 2733 2746 2754 2816 2837 2843 2891 2945 2967
   2982 2992 3005 3017 3055 3074 3076)
  () -1 0)
 (3039 uniq "( pen ua - 0 ; move 2 , 0 ; move ua - 2 , ul ) "
  (899 1807 1865 1883 1938) (899) -1 0)
 (3040 uniq "( pen ua ; move 3 + ul , 3 ; move 4 , ul ) "
  (543 582 1702 1703 1833 1896 1901 1919 1931 2037 2072 2075 2099 2103 2159
   2173 2187 2216 2224 2236 2263 2274 2321 2345 2387 2417 2461 2490 2616 2637
   2721 2794 2872 2925 2946 2952 2982 2986 3088)
  (574) -1 0)
 (3041 uniq "( pen ua ; ( move 4 , ul ; move ua / 2 , ul ; move 3 , 0 ) ) "
  (1613 2455 2466) () -1 0)
 (3042 uniq "( pen ua ; move ul , ul / 4 ; move 4 , 0 ) "
  (653 656 724 1726 1867 1882 1958 1978 2067 2072 2187 2207 2228 2236 2337
   2364 2376 2393 2402 2404 2424 2502 2535 2583 2625 2636 2794 2869 2872 2907
   2976 2986 3037 3062)
  (656) -1 0)
 (3043 uniq "( pen 3 ; move ua , ua / 4 ; move 3 , 2 ) "
  (47 1709 2067 2123 2175 2207 2222 2228 2252 2315 2365 2462 2498 2662 2745
   2832 3037 3069)
  () -1 0)
 (3044 uniq "( move ua , ul - 3 ; ul ; move ua , 2 ) " (48 85) (2888) -1 0)
 (3045 uniq "( move 2 , 3 ; pen 3 ; move ua , ua / 4 ) "
  (1709 2531 2576 2661 2672 2971 3049) (2957) -1 0)
 (3046 uniq "( move ua - ul , 3 ; pen ua ; move 3 , ul ) "
  (577 639 696 702 1686 1695 1736 2314 2708 2938 2964) () -1 0)
 (3047 uniq "( move 3 - ua , ul * pen 2 ; move 3 - ua , ul ) "
  (918 1682 1712 1822 2055 2144 2188 2342 2457 2511 2892 3002) () -1 0)
 (3048 uniq "( move ua , 4 / 5 ; move 2 , 2 ; move ua , ul ) "
  (2305 2414 2975) () -1 0)
 (3049 uniq "( move ua , 7 ; pen 3 ; move 3 , ua / 4 ) "
  (2531 2576 2661 3045) () -1 0)
 (3050 uniq "( move 4 , 3 ; pen 4 ; move ua , 8 * 2 ) " (28 29 2486) 
  (2486) -1 0)
 (3051 uniq "( move ua , 2 ; move ua , ua - 2 ) "
  (134 136 150 164 168 170 171 172 176 181 185 193 202 226 230 237 239 242
   251 1670 1792 1905 1954 2030)
  () -1 0)
 (3052 uniq "( move 2 + 2 , ua / 3 ; move ua , ua * ua ; ul ) " () () -1 0)
 (3053 uniq "( pen ua ; move 3 , 7 ; move 4 , 2 ) "
  (17 269 295 319 320 322 327 331 338 356 1673 1683 1685 1707 1722 1729 1731
   1735 1772 1778 1779 1788 1789 1813 1828 1830 1860 1864 1876 1928 1959 1967
   1976 1993 2044 2050 2086 2093 2100 2106 2116 2158 2180 2182 2209 2231 2245
   2284 2301 2313 2329 2347 2357 2372 2391 2412 2425 2428 2431 2448 2488 2506
   2515 2519 2521 2537 2566 2574 2575 2598 2602 2611 2623 2624 2668 2670 2722
   2741 2749 2774 2782 2787 2825 2829 2835 2853 2904 2922 2927 2943 2991 3024
   3027 3033 3075)
  (2537) -1 0)
 (3054 uniq "( move 4 , ul / 3 ; move ua , 4 ; move ua , 3 ) "
  (801 1737 2318 2360 2512 3006) () -1 0)
 (3055 uniq "( pen ua ; move 0 - ua , 4 ; move 2 , ul ) "
  (670 1657 1676 1680 1769 1791 1817 1852 1861 1881 1919 1927 2037 2049 2069
   2070 2107 2176 2239 2241 2252 2257 2270 2295 2307 2331 2379 2433 2453 2467
   2472 2510 2573 2613 2614 2616 2663 2674 2682 2705 2717 2727 2733 2746 2816
   2837 2843 2891 2945 2967 2982 3005 3038 3074)
  () -1 0)
 (3056 uniq "( move ua , ua - 2 ; move ua + ul , 2 ) "
  (84 414 460 461 1954 2139) () -1 0)
 (3057 uniq "( pen 3 ; move ua , ul / 5 ; move ua , ul ) "
  (641 724 1671 1688 1726 1733 1746 1750 1832 1867 1926 1960 1963 2034 2066
   2123 2227 2228 2261 2315 2337 2380 2402 2424 2427 2429 2462 2489 2523 2583
   2593 2617 2620 2622 2650 2681 2721 2732 2758 2819 2820 2821 2826 2872 2879
   2885 2889 2921 3003 3037 3069)
  () -1 0)
 (3058 uniq "( pen ua ; move 3 - 8 , ul ; move 4 , 4 ) "
  (582 1662 1703 1738 1896 1931 2103 2108 2467 2490 2637 2749 2837 2941 2952
   2967 3021)
  () -1 0)
 (3059 uniq "( pen 3 ; move 4 + 4 , ul / ua ; move 2 , 4 ) "
  (853 1851 1868 1875 1912 1921 1944 1953 1989 1999 2014 2052 2053 2054 2078
   2081 2110 2125 2127 2167 2169 2205 2226 2229 2277 2286 2302 2323 2368 2381
   2494 2503 2513 2525 2534 2582 2626 2740 2784 2804 2811 2877 2899 2905 2923
   2988 3089)
  () -1 0)
 (3060 equiv "( move ua , 0 ; pen ul + ul ; move ul + 3 , 4 ) "
  (983 2162 2278 2517 2591 2628 2695 2737 2760 2933 2989 2999) () 3092 0)
 (3061 uniq "( move 4 , 2 ; pen ua ; move 4 , 3 ) "
  (272 291 294 328 335 358 1681 1727 1748 1783 1786 1836 1855 1856 1895 1899
   1913 1923 1945 1974 1977 1997 2023 2025 2026 2079 2132 2134 2217 2220 2268
   2312 2338 2344 2355 2423 2426 2499 2560 2577 2604 2703 2706 2710 2731 2810
   2860 2902 2983 3084)
  () -1 0)
 (3062 uniq "( pen ua ; move 2 , ul / 3 ; move 4 , 4 ) "
  (656 1655 1662 1688 1726 1752 1867 1882 1936 2031 2064 2072 2149 2187 2216
   2219 2236 2298 2334 2335 2364 2376 2393 2422 2427 2474 2500 2502 2508 2535
   2538 2593 2625 2673 2696 2721 2763 2794 2820 2869 2872 2889 2894 2917 2935
   2939 2941 2946 2948 2973 2986 3042 3068 3087)
  () -1 0)
 (3063 uniq "( move 4 , 4 ; pen ua ; move 4 , ua / 4 ) " (1714 2672) () -1 0)
 (3064 uniq "( pen ua - 3 ; move 4 , 4 ; move 4 + ul , ul ) "
  (845 1673 1739 1796 2887 2913 2934) () -1 0)
 (3065 uniq "( move ua , ul ; pen ua ; move 2 - ua , 3 ) "
  (86 492 679 686 1742 1992 2046 2266 2450 2499 2586 2956) () -1 0)
 (3066 uniq "( move ua , ul ; pen 4 + 3 ; move ul , 0 ) " (564 2606)
  (666 901) -1 0)
 (3067 uniq "( pen ua ; move ua , 7 / ua ; move 4 , 2 ) "
  (653 1655 1726 1750 1827 1867 1886 1930 1933 1978 1998 2013 2036 2067 2087
   2096 2115 2121 2163 2175 2187 2207 2222 2228 2244 2326 2364 2369 2376 2380
   2393 2401 2502 2535 2562 2593 2620 2638 2676 2696 2697 2812 2827 2872 2894
   2917 2935 2940 2948 2949 2973 3028 3034 3068)
  () -1 0)
 (3068 uniq "( pen ua ; move 2 , 7 / 3 ; move 4 , 4 ) "
  (1655 1662 1752 1936 2072 2236 2298 2334 2335 2376 2393 2422 2474 2500 2502
   2508 2535 2673 2696 2763 2820 2872 2917 2935 2941 2948 2973 3062 3067)
  () -1 0)
 (3069 uniq "( pen 3 ; move ua , ul / 2 ; move 3 , ul ) "
  (641 1671 1688 1713 1726 1733 1746 1750 1827 1832 1859 1867 1904 1926 1963
   2034 2059 2115 2123 2222 2227 2261 2273 2315 2337 2380 2388 2401 2424 2427
   2473 2480 2483 2489 2500 2523 2583 2636 2650 2681 2688 2689 2693 2732 2745
   2751 2758 2819 2821 2826 2869 2872 2879 2889 2901 2921 2986 3003 3037 3043
   3057 3077 3088)
  () -1 0)
 (3070 uniq "( pen ua ; move ua , ua ; move ua , 2 * 2 ) "
  (84 669 1872 2007 2015 2092 2112 2223 2272 2353 2357 2438 2485 2540) () -1
  0)
 (3071 uniq "( pen 7 ; move ua , ul ; move 2 , ul ) "
  (293 296 331 356 361 364 385 1656 1657 1664 1675 1685 1691 1705 1707 1720
   1722 1728 1729 1731 1760 1776 1778 1779 1784 1798 1800 1812 1813 1816 1864
   1876 1879 1925 1928 1959 1967 1972 1979 1996 2009 2038 2047 2058 2082 2095
   2106 2111 2114 2150 2166 2180 2181 2209 2443 2448 2458 2519 2542 2567 2574
   2581 2611 2619 2690 2730 2741 2756 2777 2793 2798 2800 2845 2848 2856 2865
   2880 2922 2987 3014 3033)
  (652 1800) -1 0)
 (3072 uniq "( pen 2 ; move 4 , ul / ua ; move ua , 4 ) "
  (59 573 724 1960 1963 2031 2096 2161 2190 2219 2298 2358 2376 2429 2446
   2462 2617 2652 2667 2673 2676 2686 2701 2726 2732 2750 2819 2828 2871 2898
   2939 2949 2970 3003)
  () -1 0)
 (3073 uniq "( move 4 , 3 * 2 ; ( pen ua ; move 3 , ua ) ) " (743 2565) () -1
  0)
 (3074 uniq "( pen ua ; move ul - ua , 2 ; move 3 , ul ) "
  (101 670 685 1676 1776 1791 1817 1852 1897 1901 1911 1927 2043 2049 2107
   2165 2176 2239 2241 2257 2263 2270 2295 2307 2331 2379 2387 2406 2433 2453
   2461 2467 2510 2548 2573 2614 2658 2663 2674 2682 2705 2717 2727 2733 2746
   2816 2837 2843 2847 2945 2967 2982 2992 3005 3017 3038 3055 3076)
  () -1 0)
 (3075 uniq "( pen ua ; move 4 , 0 ; move 4 , ul ) "
  (15 270 271 292 293 295 301 320 331 333 336 338 348 356 364 385 1657 1673
   1674 1675 1683 1685 1717 1722 1729 1731 1735 1772 1776 1778 1779 1784 1788
   1789 1798 1800 1805 1809 1812 1813 1816 1828 1830 1860 1865 1876 1928 1959
   1967 1972 1976 1979 1993 1996 2009 2038 2050 2058 2082 2086 2093 2100 2106
   2116 2158 2166 2177 2180 2182 2185 2209 2231 2274 2313 2322 2325 2329 2348
   2372 2378 2391 2412 2428 2443 2448 2458 2488 2506 2515 2519 2521 2542 2566
   2567 2598 2602 2619 2668 2670 2690 2722 2741 2749 2774 2782 2787 2793 2798
   2800 2829 2835 2845 2853 2865 2870 2911 2922 2943 3014 3024 3033 3053
   3091)
  (1772) -1 0)
 (3076 uniq "( pen ua ; move ul + ua , 0 ; move 3 , ul ) "
  (670 1676 1702 1817 1852 1927 1987 2040 2043 2107 2159 2176 2239 2241 2257
   2263 2270 2274 2307 2331 2379 2387 2417 2433 2453 2467 2472 2510 2573 2601
   2614 2658 2659 2663 2674 2682 2717 2733 2746 2816 2843 2847 2982 3005 3017
   3038 3074)
  () -1 0)
 (3077 uniq "( pen ua ; move ua , ul + 2 ; move 3 , 4 ) "
  (626 641 1671 1706 1713 1726 1734 1750 1761 1859 1869 1946 2034 2222 2273
   2352 2401 2427 2454 2480 2508 2518 2523 2562 2642 2799 2969 3037 3069)
  (2518) -1 0)
 (3078 uniq "( move ua , 2 + pen ua ; move 2 , 4 ) "
  (283 1257 1672 1745 1917 1945 1974 1991 2023 2032 2079 2132 2217 2288 2349
   2423 2496 2499 2649 2679 2706 2710 2759 2802 2806 2902 2983)
  () -1 0)
 (3079 uniq "( pen ua + 0 ; move 2 - ua , ua ; move 3 , ul ) "
  (1961 2186 2287 2421 2772 2838 2864 2893 2918) () -1 0)
 (3080 uniq "( move 0 - 5 , ul / pen 2 ; move ul - ua , ul ) "
  (2055 2144 2457 2511 2854 3002) () -1 0)
 (3081 uniq "( move ua , 3 ; move 3 , ul ; move ua , 2 ) "
  (48 85 485 524 527 1818 1863 2061 2105 2136 2256 2269 2363 2399 2476 2481
   2492 2527 2528 2564 2570 2572 2588 2702 2768 2808 2857 2881 2883 2910 2912
   2936 2950 2963 2972 3004 3018 3030)
  () -1 0)
 (3082 uniq "( move ua , 3 / ua ; pen 2 ; move ua , 2 ) "
  (48 84 579 1743 1775 1942 1982 1988 2394 2403 2716 2778 2850 3012 3013) ()
  -1 0)
 (3083 uniq "( pen ua ; move ua , 4 ; move 0 - 2 , 2 ) " (1115 1751 2135) ()
  -1 0)
 (3084 uniq "( move 4 , 2 ; pen 2 ; move 3 , 4 ) "
  (231 267 272 304 1836 1899 1917 1950 1977 1997 2079 2217 2312 2355 2386
   2556 2577 2679 2710 2725 2759 2902 2983 3061)
  () -1 0)
 (3085 uniq "( move ua , 2 ; pen 4 ; move 3 - ua , ul ) "
  (87 484 642 1742 1824 1924 2450 2465 2823 2954 2956) () -1 0)
 (3086 uniq "( pen 4 ; move ul , 3 / 2 ; move ua - 0 , ul ) " (773 1847) ()
  -1 0)
 (3087 uniq "( pen 4 ; move 2 , ul / 3 ; move 7 , ul ) "
  (1688 1926 2066 2072 2197 2236 2298 2334 2427 2500 2502 2625 2650 2681 2721
   2758 2820 2872 2889 2951 3062)
  () -1 0)
 (3088 uniq "( pen 3 ; move ua + ul , 2 ; move 4 , ul ) "
  (55 104 575 1703 1726 1746 1791 1832 1833 1896 1909 1911 2037 2075 2099
   2224 2274 2321 2345 2387 2417 2461 2483 2490 2616 2791 2921 2925 2952 3014
   3040 3069)
  () -1 0)
 (3089 uniq "( pen 3 ; move 4 + ul , ul / ua ; move 3 , 4 ) "
  (853 1851 1868 1875 1912 1921 1944 1953 1989 1999 2014 2052 2053 2054 2078
   2081 2085 2110 2125 2127 2167 2169 2205 2226 2229 2243 2277 2286 2323 2368
   2381 2494 2503 2513 2525 2526 2534 2582 2626 2784 2804 2811 2877 2890 2899
   2905 2923 2988 3059)
  () -1 0)
 (3090 uniq "( pen ua ; move 3 , 0 ; move ua , ua - 7 ) "
  (616 669 1658 1699 1837 2035 2042 2112 2137 2160 2272 2328 2398 2656 2844)
  () -1 0)
 (3091 uniq "( pen ua ; move 4 , 0 ; move ua , ul ) "
  (15 20 22 270 271 292 293 295 301 303 320 325 331 333 336 337 338 348 351
   356 364 385 936 1656 1657 1673 1674 1675 1683 1685 1722 1729 1731 1735
   1772 1776 1778 1779 1784 1798 1800 1805 1809 1812 1813 1816 1828 1830 1831
   1860 1865 1876 1883 1928 1959 1972 1976 1979 1996 2038 2044 2050 2058 2086
   2093 2106 2116 2158 2166 2177 2180 2182 2183 2185 2189 2209 2231 2313 2322
   2325 2357 2372 2378 2391 2412 2425 2431 2448 2458 2488 2506 2515 2519 2542
   2567 2598 2602 2619 2640 2651 2668 2670 2690 2722 2729 2741 2782 2787 2793
   2800 2829 2853 2856 2870 2904 2911 2922 2943 2959 3024 3033 3075)
  (981 1012 2183 2870) -1 0)
 (3092 uniq "( move ua , ua ; ( pen 2 ; move 4 , 4 ) ) "
  (482 2198 2415 2571 2599) (1516 3060) -1 0)
 (3093 uniq "( move 4 , 0 ; ( pen 2 ; move 0 , 4 ) ; move ua , 3 ) " 
  (1275) () -1 0))
>>>>>>> ed099240b5cd49e2a48c00f8e9af8812f42f4eda
