12288
[0] 
[1] move 4 , ul 
[2] move 4 , 0 
[3] loop 0 , 7 , move ul , v0 
[4] move 4 , 2 
[5] move ua , 3 
[6] move ua , 0 - 3 
[7] move ua , 3 + 2 
[8] loop 0 , 4 , move v0 , v0 + ul 
[9] move 4 , 4 
[10] ( move 0 - ua , ul ; move 4 , ul ) 
[11] ( move 4 , ul ; move ul , ul ) 
[12] ( move ul , 2 ; move ua , 2 ) 
[13] move ua , 4 
[14] loop 0 , 3 , move 2 , ua - v0 
[15] loop 0 , 6 , move v0 , ul 
[16] loop 0 , 2 , move 3 , v0 
[17] loop 0 , 4 , move 3 , ul 
[18] move ua , ul 
[19] loop 0 , 2 , move 3 , 3 
[20] move ua , 4 * 4 
[21] move 4 , 2 - 3 
[22] move 4 , 2 / 4 
[23] loop 0 , 5 , move v0 , ul + v0 
[24] loop 0 , 7 , move 4 , v0 
[25] loop 0 , 3 , move 3 , v0 
[26] ( move 4 , 2 ; move ua , ul ) 
[27] loop 0 , 3 , move 4 , v0 
[28] ( move ul - 4 , 2 ; move ua , 4 ) 
[29] ( move ua , 0 ; move ua , 3 ) 
[30] move 4 , 0 - 4 
[31] loop 0 , 4 , move v0 , ul / v0 
[32] loop 0 , 3 , move v0 - ua , 2 
[33] ( move ul , ul ; move ua , 4 ) 
[34] loop 0 , 4 , move ul , ul 
[35] ( move 3 , ua / 4 ; move ul , 2 ) 
[36] ( move ua , 0 ; move ul , 4 ) 
[37] ( move ua , 0 ; move ul , 2 ) 
[38] move 4 , 0 - 2 
[39] move 4 , 3 + 3 
[40] move ua , 4 + 3 
[41] loop 0 , 6 , move 4 , v0 
[42] loop 0 , 3 , move 3 , ul - v0 
[43] move 4 , 4 + 4 
[44] move 4 , 4 * 4 
[45] loop 0 , 4 , move v0 , ul 
[46] loop 0 , ul , loop 1 , 4 , move v1 + 2 , ua - 4 
[47] loop 0 , 7 , move v0 , 2 
[48] ( move ua , ul ; loop 0 , 6 , move v0 , v0 ) 
[49] ( move ul , 0 ; move 4 , ul ) 
[50] loop 0 , 4 , move v0 , ul / ua 
[51] loop 0 , 5 , move v0 , ua / v0 
[52] loop 0 , 4 , move v0 , v0 * 2 
[53] loop 0 , 4 , move 4 / v0 , ul 
[54] ( move 3 , ul / ua ; move 2 , 2 ) 
[55] ( move 4 , 0 ; move 2 , 2 ) 
[56] loop 0 , 5 , move v0 , v0 
[57] ( move ua , ul ; move 2 , 4 ) 
[58] loop 0 , 6 , move v0 , 3 
[59] loop 0 , 3 , move 4 + v0 , v0 
[60] loop 0 , 7 , move 3 , v0 
[61] loop 0 , 7 , move 2 - 3 , v0 
[62] move 4 , 3 * 3 
[63] loop 0 , 7 , move v0 , 3 
[64] loop 0 , 4 , move v0 , 2 
[65] move 4 , 4 * 3 
[66] ( move 2 , 2 ; move 4 , ul ) 
[67] loop 0 , 5 , move v0 , 4 
[68] ( move ul , 0 ; move ua , ul ) 
[69] loop 0 , 4 , move 3 , 2 * v0 
[70] ( move ul , ul ; move 3 , ul ) 
[71] loop 0 , 7 , move v0 - 4 , ul 
[72] loop 0 , 7 , move 3 , v0 * 3 
[73] loop 0 , 6 , move v0 , v0 
[74] loop 0 , 6 , move v0 , 2 * v0 
[75] ( move 3 , 2 ; move ua , 2 ; move 2 , ua - ul ) 
[76] loop 0 , 7 , move 3 , 4 / v0 
[77] loop 0 , 3 , move ua / v0 , 2 
[78] loop 0 , 4 , move 2 , v0 / 2 
[79] move ua , 2 / 4 
[80] loop 0 , 6 , move v0 , 2 
[81] loop 0 , 3 , move 2 , v0 
[82] ( move ua + ul , 2 + ul ; move ua , 3 ) 
[83] loop 0 , 3 , move ua - ul , 2 
[84] ( move 0 , 2 ; move ua , ua / 4 ) 
[85] move 4 , 4 + 3 
[86] move ua , 4 + 4 
[87] loop 0 , 5 , move v0 , v0 * v0 
[88] loop 0 , 5 , move v0 * 2 , 2 
[89] ( move ua , ul ; move 0 - 4 , 3 ) 
[90] loop 0 , 6 , move 3 , v0 
[91] ( move ua , ul ; move 2 , 3 / 4 ) 
[92] loop 0 , 7 , move ul - ua , 4 
[93] move 4 , 4 / 3 
[94] ( move 3 , ul ; move ua , 2 ) 
[95] ( move ua , 3 ; move ul , 4 ) 
[96] loop 0 , 5 , move 4 , ul 
[97] loop 0 , 5 , move v0 , ul 
[98] loop 0 , 3 , ( move v0 , ul ; move ua , v0 ) 
[99] loop 0 , 4 , move v0 + 2 , 4 
[100] loop 0 , 3 , move 2 , 3 - v0 
[101] ( move ua , ul ; move ul , ul ) 
[102] ( move ul , ul ; move ua , ul ) 
[103] loop 0 , 4 , move 3 , ua / v0 
[104] loop 0 , 2 , move ua - 4 , 4 
[105] loop 0 , 5 , move ua - v0 , ul + v0 
[106] ( move 2 , 2 ; loop 0 , 6 , move v0 , ul ) 
[107] ( move 3 + ul , ua ; move ua , ua * ua ; move 2 , ua ) 
[108] loop 0 , 2 , move 2 , ul 
[109] ( move 3 , ul ; move ua , ul ) 
[110] loop 0 , 4 , move 3 / v0 , v0 - ul 
[111] loop 0 , 5 , loop 1 , ul , move v1 - v0 , ua - ul 
[112] loop 0 , 5 , move v0 , ua - v0 
[113] move 4 * 2 , 4 
[114] loop 0 , 2 , move ua , 2 
[115] loop 0 , 6 , move v0 , ul + v0 
[116] move ua , 2 
[117] loop 0 , 7 , move ua , 3 
[118] ( move 4 , 0 ; move ua , ul ) 
[119] loop 0 , 7 , move ul , v0 + ul 
[120] ( move ua , ul ; move 4 , ul ) 
[121] ( move 2 , ua * ua ; move ul - ua , ul ) 
[122] loop 0 , 2 , move v0 + 4 , v0 
[123] loop 0 , 3 , move 4 * v0 , v0 
[124] ( move ua , ul / ua ; move ul , 2 ) 
[125] ( move ua , 4 ; move 3 , 3 ) 
[126] loop 0 , 3 , move ua , 3 - v0 
[127] loop 0 , 5 , move v0 , 2 
[128] move 3 * 3 , ul 
[129] loop 0 , 3 , move ua , ua / 3 
[130] loop 0 , 2 , move 4 - ua , 4 
[131] loop 0 , 2 , move 3 , 4 - v0 
[132] ( move ua , 2 ; move 0 - 3 , ul ) 
[133] ( move 3 , 0 ; move ul , 4 ) 
[134] loop 0 , 6 , move 3 , ul 
[135] ( move 2 , 0 ; move 2 , 2 ) 
[136] loop 0 , 2 , move 4 , v0 
[137] ( move 3 , ua - 3 ; move 3 , 4 ) 
[138] ( move 3 , 3 ; move 3 , 4 ) 
[139] ( move 2 , ul ; ( move 4 - ul , 4 ; move ua , 2 - ua ) ) 
[140] ( move 3 , 0 ; move 4 , ul ) 
[141] loop 0 , 5 , move v0 , v0 - ul 
[142] loop 0 , 4 , move v0 + 2 , v0 + v0 
[143] ( move ua , ul ; move 2 , 0 - ul ) 
[144] ( move ua , 0 - ul ; move 2 , 2 ) 
[145] loop 0 , 2 , move 3 , ul / ua 
[146] loop 0 , 2 , move 0 - ua , 2 
[147] loop 0 , 4 , move ul + v0 , ul 
[148] ( move 3 , ul ; move ul , ul ) 
[149] loop 0 , 7 , move v0 - ul , ul 
[150] loop 0 , 4 , move 2 * v0 , ul 
[151] ( move 2 , ul ; move ul - ua , 4 ) 
[152] ( move ua + 2 , ul ; move ul , 0 - ul ) 
[153] loop 0 , 5 , move v0 , ul - v0 
[154] loop 0 , 4 , move 2 - ua , 3 
[155] loop 0 , 7 , move v0 , 3 + v0 
[156] loop 0 , 6 , move v0 , 4 
[157] loop 0 , 3 , move 4 , 4 
[158] loop 0 , 3 , move ua , ul + v0 
[159] loop 0 , 5 , move v0 , ul / v0 
[160] ( move ua / 2 , ul ; v0 = 4 ; move v0 , v0 * 4 ) 
[161] ( move 0 - ua , ua ; move 4 , 3 + ul ) 
[162] ( move 4 + 3 , ua ; move ua , 4 ) 
[163] ( move ua , 3 ; move 2 , ul ) 
[164] move ua , 0 
[165] ( move ul , ul ; move 4 , ul ) 
[166] move ua , 4 * 3 
[167] loop 0 , 5 , move 2 , v0 * 2 
[168] ( move 3 , 0 ; move ul , 2 ) 
[169] ( move ua , 0 ; move ua + ul , 4 ) 
[170] loop 0 , 5 , move ul , v0 / ua 
[171] loop 0 , 6 , move ul - v0 , ul 
[172] ( move ua , ua * ua ; move ua + ul , 3 ) 
[173] loop 0 , 2 , move 2 , v0 
[174] ( move 4 , ul ; move ul - 4 , ul ) 
[175] loop 0 , 6 , move ul - ua , 3 
[176] ( move ul , 3 ; move 3 , ul ) 
[177] loop 0 , 3 , move 4 , 2 * v0 
[178] loop 0 , 6 , move v0 , ul - v0 
[179] move ua , 0 - 2 
[180] loop 0 , 3 , move ua , 3 
[181] ( move 2 , 2 ; move ua , ul ) 
[182] ( move ul , 2 ; move 4 , ul ) 
[183] ( loop 0 , 5 , move v0 , v0 ; move 3 , ul ) 
[184] ( move 2 , 0 ; move 3 , ul ) 
[185] loop 0 , 4 , move v0 , v0 - ul 
[186] loop 0 , 4 , move v0 , ua - v0 
[187] ( move ul - ua , ul ; move ua , ul ) 
[188] move ua , 2 / 3 
[189] ( move 3 , ua / 2 ; move ua + ul , ul ; move ul , ul ) 
[190] loop 0 , 2 , move 4 , ul 
[191] loop 0 , 6 , move 4 , 3 
[192] ( move 3 , 0 ; move 2 , 2 ) 
[193] loop 0 , 5 , move v0 * 2 , v0 
[194] ( move ul , 4 + 3 ; move ua , 4 ) 
[195] loop 0 , 5 , move 2 * v0 , v0 * v0 
[196] loop 0 , 5 , move v0 , 2 * v0 
[197] loop 0 , 3 , move 4 , ul 
[198] ( move ua , 0 ; move 3 + 2 , 4 ) 
[199] ( move ua , ul ; move 2 , ul ) 
[200] ( move ua , 0 ; move ua , 2 ) 
[201] loop 0 , 4 , move v0 + 2 , 3 
[202] ( move ua , ua / 3 ; move ua , 4 ; move 3 / ua , ul ) 
[203] ( loop 0 , 5 , move v0 , v0 ; move 4 , ua ) 
[204] loop 0 , 6 , move v0 - ul , ul 
[205] ( move 4 , 0 ; move ul , 4 ) 
[206] move ua , 2 - 3 
[207] ( move ul , 0 ; move ua , 4 / ua ) 
[208] ( move ul , ua ; move 4 , ul ; move ul , 4 + 4 ) 
[209] loop 0 , 7 , move 4 , 3 
[210] ( move ul / ua , 4 + 2 ; loop 0 , 5 , move v0 , ul ) 
[211] loop 0 , 3 , move 4 - ua , v0 
[212] loop 0 , 7 , move ul , 3 / v0 
[213] loop 0 , 6 , move v0 , v0 * 3 
[214] loop 0 , 7 , move 2 - v0 , 3 
[215] loop 0 , 6 , move v0 , ua / v0 
[216] ( move 4 + ul , 0 ; move 2 , ul ) 
[217] loop 0 , 4 , move 2 , ul 
[218] ( move ua , ul ; move ua , 2 ) 
[219] loop 0 , 4 , move v0 , v0 * v0 
[220] loop 0 , 7 , move v0 , v0 * v0 
[221] loop 0 , 6 , move 2 , 2 * v0 
[222] ( move 0 - ul , 0 ; move ua , 2 ) 
[223] loop 0 , 5 , move v0 - 3 , ul 
[224] ( loop 0 , 6 , move ul , v0 ; move ua , v0 * v0 ) 
[225] loop 0 , 3 , move ua , 2 
[226] ( move ul , 2 / ua ; move 3 , ul ) 
[227] loop 0 , 4 , move v0 * v0 , 4 
[228] loop 0 , 5 , move 3 , v0 
[229] ( move ua , 0 ; move 2 , 2 ) 
[230] loop 0 , 5 , move ul , v0 - 4 
[231] loop 0 , 7 , move 2 , v0 
[232] ( move 2 - ua , 0 ; move ua + ul , ul ) 
[233] loop 0 , 6 , move ul , v0 * v0 
[234] move 4 , 3 + 2 
[235] loop 0 , 7 , move ul - v0 , ul 
[236] loop 0 , 4 , move 2 , v0 * 2 
[237] loop 0 , 5 , move v0 + 4 , ua / 3 
[238] loop 0 , 3 , move 2 , ul / v0 
[239] ( move ul , 2 ; loop 0 , 2 , move 4 , ul / v0 ) 
[240] ( move 3 , 4 ; move ua , ul ) 
[241] move ua , ua * ua 
[242] ( move 2 , 2 ; move 4 , 4 ) 
[243] loop 0 , 3 , move 4 , v0 * v0 
[244] ( move ul , 3 ; move ua , ul / 2 ) 
[245] loop 0 , 3 , move ua , 4 
[246] loop 0 , 5 , move 4 , 2 
[247] loop 0 , 5 , move 4 , 4 
[248] loop 0 , 4 , move ul , 2 / 4 
[249] loop 0 , 6 , move v0 + ul , v0 
[250] loop 0 , 4 , move v0 , 3 / 4 
[251] loop 0 , 4 , move v0 + 4 , v0 
[252] ( move ua , 2 ; move ua , ul ) 
[253] ( move ua , ua ; move ua / 4 , 0 - 4 ) 
[254] loop 0 , 2 , move ua , 3 
[255] loop 0 , 5 , move 4 , 3 
[256] ( move 4 , ua - 3 ; move ul , ul ) 
[257] ( move ua , 0 ; move 2 , ul ) 
[258] ( move 2 , ua ; move 2 , 0 - 2 ) 
[259] loop 0 , 5 , move 3 , 2 * v0 
[260] loop 0 , 6 , move 2 , v0 / 3 
[261] loop 0 , 6 , move 3 , v0 * 2 
[262] loop 0 , 4 , move v0 , 4 - v0 
[263] ( move ua , ua * ua ; move ua , 2 ) 
[264] ( move ua , 3 ; move 3 , ul ) 
[265] ( move ua , ul ; move 3 - ua , 2 - ua ) 
[266] ( move ua + ul , ul ; move ua + ul , ua * ua ) 
[267] loop 0 , 4 , move 4 , 3 
[268] loop 0 , 4 , move v0 * v0 , v0 
[269] loop 0 , 6 , move v0 , v0 * v0 
[270] loop 0 , 2 , move v0 + 4 , ul 
[271] loop 0 , 2 , move ua , 4 
[272] ( move 3 , 4 ; move 2 , ul ) 
[273] ( move 4 , 0 ; move ua + ul , ul ) 
[274] loop 0 , 7 , move ul , ul / ua 
[275] ( move ua , 3 ; move ul - ua , ul ) 
[276] ( move 4 - ua , ua * 3 ; move 4 , 2 ) 
[277] loop 0 , 5 , move v0 + 4 , v0 
[278] loop 0 , 5 , move v0 , 3 
[279] ( move 0 - ul , ul + ul ; move ua , 2 ) 
[280] loop 0 , 6 , move ul - ua , 2 
[281] ( move 2 , 0 ; move ua , ua - 3 ) 
[282] ( move ul - 3 , ul ; move ua + ul , ul ) 
[283] loop 0 , 7 , move 0 - 4 , ul 
[284] ( loop 0 , 5 , move 0 - ua , 3 ; v1 = 3 ) 
[285] loop 0 , 5 , move ua , 3 
[286] loop 0 , 2 , move 3 + 2 , ul 
[287] ( move 0 , 2 ; loop 0 , 6 , move v0 , v0 ) 
[288] loop 0 , 6 , move 2 , v0 * v0 
[289] loop 0 , 4 , move 2 , ul - v0 
[290] loop 0 , 4 , move v0 , 2 - 3 
[291] loop 0 , 2 , move v0 - 3 , v0 
[292] loop 0 , 5 , move v0 , v0 / ua 
[293] loop 0 , 4 , move v0 + 4 , 3 
[294] loop 0 , 5 , move 3 + 2 , v0 
[295] loop 0 , 4 , move 4 , ul 
[296] loop 0 , 3 , move 3 + v0 , v0 
[297] loop 0 , 4 , move v0 , v0 + 4 
[298] ( move ul , ua / 4 ; move ua , 3 ) 
[299] ( move 3 , ua - 4 ; move ul , 2 ) 
[300] ( move ua , 2 ; move ul , ul ) 
[301] ( move ua - ul , ua ; move ua , 4 + ul ) 
[302] ( move ua , ul ; move ua - ul , 0 - ul ) 
[303] ( move ua , 2 ; move 2 , 4 + 3 ) 
[304] ( loop 0 , 6 , move ul , ul ; move ua , ua ) 
[305] ( move ua + ul , 2 ; move 2 , 2 ) 
[306] loop 0 , 6 , move ul , v0 / ua 
[307] ( move ua , 2 ; move 2 , ul ) 
[308] ( move 3 + ul , ua - ul ; move ua , ua * ua ) 
[309] loop 0 , 4 , move ua , 4 
[310] loop 0 , 3 , move v0 * 2 , 4 * v0 
[311] loop 0 , 5 , move ua , 2 - 4 
[312] move ua , 3 * 3 
[313] loop 0 , 7 , move v0 + 2 , 2 
[314] loop 0 , 6 , move v0 , v0 + 3 
[315] ( move ua , 4 ; move ul - 3 , 2 ) 
[316] ( move ul , 4 ; move 3 , 2 ) 
[317] ( move 2 , 2 ; move ua , 2 ) 
[318] loop 0 , 3 , loop 1 , 2 , move v1 + ul , v1 
[319] loop 0 , 4 , move ua , 0 - 3 
[320] ( move 2 , 4 + 3 ; loop 0 , 4 , move v0 , v0 - 3 ) 
[321] loop 0 , 3 , move 3 , ul 
[322] loop 0 , 6 , move ul - v0 , v0 
[323] ( move ua , 0 ; move ua , 4 ) 
[324] loop 0 , 5 , move ua , 4 
[325] loop 0 , 4 , move v0 , 2 + v0 
[326] loop 0 , 4 , move ul , v0 + 4 
[327] ( move ua , ul ; move 2 , 2 ) 
[328] loop 0 , 4 , move v0 , 4 + 2 
[329] loop 0 , 5 , move v0 + ul , v0 
[330] ( move ua , 0 ; move ul , ul ; move ua , ul ) 
[331] ( move ul , ul ; move ua , ul ; move ua , 2 ) 
[332] ( move 0 , ul ; loop 0 , 6 , move v0 , ul ) 
[333] ( move ua , 0 ; move 2 , 3 ) 
[334] loop 0 , 2 , move ua , 2 - 4 
[335] ( move 2 , ul - 2 ; move 4 , ul ) 
[336] loop 0 , 5 , move ul , ul / 4 
[337] ( move ua , 3 ; move 2 , 3 / ua ) 
[338] ( move ul , 4 * 4 ; move ua , 3 - 4 ) 
[339] loop 0 , 3 , loop 1 , 2 , move ul + v1 , ul 
[340] ( move 0 - 3 , 2 ; move ua , ul ) 
[341] loop 0 , 4 , move v0 , 2 - v0 
[342] ( move ua , 0 ; move 3 , ua * ua ) 
[343] loop 0 , 5 , move 2 , v0 / 4 
[344] ( move 2 , 4 ; move 3 , ul ) 
[345] loop 0 , 6 , move ul , 2 / 4 
[346] ( move ul - ua , 0 - ul ; move 3 + ul , ua * ua ) 
[347] ( move 4 , 0 ; move 2 , ul ) 
[348] loop 0 , 5 , move v0 , ul / ua 
[349] ( move ua , ul ; move 4 , 4 * 2 ) 
[350] ( move 0 , ul ; loop 0 , 5 , move v0 , ul ) 
[351] loop 0 , 4 , move 2 , 0 - ul 
[352] ( loop 0 , 6 , move 2 , v0 ; move v0 , v0 ) 
[353] loop 0 , 4 , move v0 + ul , 2 * v0 
[354] ( move 3 , 2 ; move ua , ul ) 
[355] ( move 2 , ul ; move ua , ul ; move ua , ul ) 
[356] loop 0 , 2 , move 2 , 2 
[357] ( move ua , ul ; move 4 , 2 ) 
[358] loop 0 , 4 , move ua , 3 
[359] loop 0 , 3 , move ua , ua - 3 
[360] ( move 4 + ul , 0 ; move 4 , ul ) 
[361] loop 0 , 3 , move ua - v0 , 2 
[362] loop 0 , 3 , move ua - 2 , ul 
[363] ( move ua , ua - 2 ; move 3 , ul / 4 ) 
[364] ( move ua , 4 ; move 3 , ul ) 
[365] loop 0 , 6 , move v0 + ul , ua * ua 
[366] loop 0 , 5 , move v0 , 4 / v0 
[367] loop 0 , 3 , move 4 + 3 , 2 
[368] loop 0 , 6 , move 0 - ul , 4 * v0 
[369] loop 0 , 4 , move ua , ua * ua 
[370] loop 0 , 6 , move 4 + v0 , 4 
[371] loop 0 , 7 , move ua , ua * ua 
[372] loop 0 , 5 , move 4 + 4 , 3 
[373] ( move ul , 0 - ul ; move 4 * 2 , ul ) 
[374] ( move 2 , 0 ; move ua + ul , ul ) 
[375] ( move 4 , ul ; move 4 , 2 ) 
[376] loop 0 , 7 , move v0 , ua / v0 
[377] ( move ua + ul , 3 * 3 ; move ua , 2 ) 
[378] ( loop 0 , 5 , move ul , ul ; move ul , 4 ) 
[379] loop 0 , 6 , move 2 , ul 
[380] loop 0 , 3 , move ua - v0 , 3 
[381] ( move 2 , ul ; loop 0 , 3 , move ul , ul ) 
[382] ( move ua , ul ; move 3 , ul ) 
[383] ( move ul - ua , ul / ua ; move ua , ul ) 
[384] loop 0 , 3 , move ua - 2 , v0 
[385] loop 0 , 4 , move 2 , v0 * 4 
[386] ( move ua , 2 ; move ul - ua , ul ) 
[387] ( move ua , ua - 4 ; move 2 , 3 ) 
[388] ( move ul , ul ; move 4 , 2 - 4 ) 
[389] loop 0 , 5 , move v0 - 3 , v0 
[390] ( move ua - 2 , 0 ; move ua + 2 , ul ) 
[391] loop 0 , 4 , move v0 , ua / v0 
[392] loop 0 , 4 , move 2 * v0 , ua - v0 
[393] loop 0 , 2 , loop 1 , 3 , move v1 + ul , 4 + 3 
[394] loop 0 , 3 , move ua / v0 , ua - 2 
[395] loop 0 , 6 , move 2 , v0 
[396] ( move 2 - ua , ua + 3 ; move 3 , ua - 2 ) 
[397] loop 0 , 2 , loop 1 , ul , loop 2 , 2 , move v2 + 4 , 3 
[398] ( move ua , ua ; move 3 , 0 - 2 ) 
[399] loop 0 , 6 , move 2 - 4 , 4 
[400] loop 0 , 3 , move 2 , v0 + 4 
[401] ( move ua , 0 ; move 4 , 4 ) 
[402] ( move ua , ua ; move 3 * 3 , 2 ) 
[403] loop 0 , 4 , move v0 , ul - v0 
[404] loop 0 , 5 , move v0 , 4 - v0 
[405] move ua , 3 / 2 
[406] loop 0 , 7 , move ul , ul / v0 
[407] ( move ua , 0 ; loop 0 , 6 , move v0 , ul ) 
[408] move ua , ua / 3 
[409] loop 0 , 3 , move 4 , 2 
[410] loop 0 , 7 , move v0 , v0 / 2 
[411] ( loop 0 , 4 , move v0 , ul ; move ua , 3 ) 
[412] loop 0 , 4 , move ua - v0 , 2 
[413] ( move ul , 0 ; move 4 + 4 , ul ) 
[414] loop 0 , 6 , move v0 , v0 - 2 
[415] loop 0 , 6 , move 4 , ul 
[416] loop 0 , 2 , loop 1 , 3 , move v1 + v1 , v0 
[417] loop 0 , 4 , move 4 , v0 + ul 
[418] ( move 3 , ul ; move ul , ul ; move ua , ul ) 
[419] ( loop 0 , 5 , move ul , v0 ; move v0 , 2 ) 
[420] loop 0 , 7 , move v0 , 4 + v0 
[421] ( loop 0 , 6 , move ul , v0 ; move ua , ul ) 
[422] ( move 2 , 2 ; move 4 , ul / 3 ) 
[423] loop 0 , 5 , move 4 , v0 - ul 
[424] loop 0 , 6 , move v0 , 4 + v0 
[425] loop 0 , 7 , move ul - v0 , ua - ul 
[426] loop 0 , 5 , move ul , v0 * 2 
[427] ( move 0 - 3 , ul ; move ua , ul ) 
[428] ( move 2 , ul ; move 3 , ul ) 
[429] loop 0 , 6 , move 4 , 2 
[430] ( move 3 , ua + 3 ; move ua + 3 , ua - ul ; v0 = ua ) 
[431] loop 0 , 6 , move v0 , 4 * 4 
[432] loop 0 , 2 , move ua - v0 , 4 
[433] loop 0 , 4 , move v0 , 4 
[434] loop 0 , 5 , move ul + v0 , ul 
[435] ( move ua , ul ; move 2 , 3 ) 
[436] loop 0 , 5 , move 2 , v0 + 3 
[437] ( move 4 - ul , 2 ; move ul - ua , 4 ) 
[438] loop 0 , 6 , move 2 * v0 , 3 
[439] ( move ua , ul ; move 0 - 3 , ul ) 
[440] ( move 3 , 0 ; move 2 , ul ) 
[441] ( move ua , 4 ; move 4 , ul ) 
[442] ( move ul , 4 ; move ua , ul ) 
[443] ( move 3 + 2 , ul ; move ua , 4 ) 
[444] loop 0 , 6 , move ua , 4 
[445] ( move ua , 2 ; move ua , 4 ; move 3 , ua ) 
[446] ( move ua , ua - 4 ; move 2 , 2 ) 
[447] loop 0 , 4 , move ul + v0 , 4 
[448] loop 0 , 5 , move ul , 4 - v0 
[449] loop 0 , 5 , move v0 , 2 - 3 
[450] loop 0 , 2 , ( move 3 + v0 , 2 ; move ua , v0 + 2 ) 
[451] ( move ua , 0 ; move 3 , ul ) 
[452] loop 0 , 4 , move 2 * v0 , v0 
[453] loop 0 , 4 , move v0 * v0 , 2 
[454] ( move ul , ul ; move ua , 0 - 2 ) 
[455] ( move 4 , ua ; move 4 , 4 ) 
[456] loop 0 , 4 , move 3 / v0 , ul 
[457] ( move ua , 2 / 4 ; move ul , ul ) 
[458] loop 0 , 4 , move v0 , v0 - 2 
[459] loop 0 , 7 , move v0 , 0 - 2 
[460] loop 0 , 5 , move v0 * 2 , ul - v0 
[461] loop 0 , 4 , move v0 + 3 , v0 
[462] loop 0 , 4 , move 3 , 0 - ul 
[463] ( move ua + ul , ul + ul ; move 2 , 3 + 2 ) 
[464] ( move ua , ul ; move ul - ua , ul ) 
[465] ( move ul - 4 , 2 ; move ua , ua * ua ) 
[466] loop 0 , 5 , move 4 , v0 
[467] ( move ua , 0 ; move 4 , ul ) 
[468] loop 0 , 3 , move v0 + 3 , ul 
[469] ( move 3 , ul ; ( move 2 , ul ; move 4 , ul ) ) 
[470] ( move ua , 4 * 3 ; move ul , ul ) 
[471] ( move ul , ua ; move 3 , 4 + 2 ) 
[472] loop 0 , 4 , move v0 + ua , 4 
[473] ( move ul - ua , 3 ; move 3 , ul ; move ul , 2 ) 
[474] loop 0 , 7 , move ul , ul / 4 
[475] loop 0 , 6 , move ua , 2 
[476] ( move ua - ul , ul ; move 4 , 4 ) 
[477] ( loop 0 , 8 , v1 = v0 ; loop 2 , 6 , move v1 , 2 ) 
[478] ( move 2 , 0 ; move 4 , ul ) 
[479] loop 0 , 5 , move ua , 2 
[480] loop 0 , 4 , move v0 - ua , 4 
[481] ( move 3 , 0 ; move 3 , 2 ) 
[482] ( move 4 , ul ; move 4 + ul , 4 ) 
[483] loop 0 , 6 , move ua + v0 , 3 
[484] ( move 3 , ul ; move 4 + ul , ul ) 
[485] ( move ua , 3 / 4 ; move 2 / 3 , 2 ) 
[486] ( move 2 , ul ; move ua , 0 - 2 ) 
[487] move ua , 2 / ua 
[488] loop 0 , 6 , move v0 , v0 - ul 
[489] ( move ua , 0 ; move 3 , 2 ) 
[490] loop 0 , 7 , move 4 + 3 , 3 
[491] loop 0 , 7 , move v0 , 2 - v0 
[492] ( move ua , ua * ua ; move ua , ul ) 
[493] ( move 2 , 4 ; move 4 , 2 ) 
[494] loop 0 , 3 , move 2 , ul 
[495] loop 0 , 4 , move v0 * 2 , 4 
[496] ( move ul - 3 , ul ; move 4 , ul ) 
[497] loop 0 , 7 , move v0 - ul , v0 * 2 
[498] ( move ul - ua , ul ; move 4 , ul ) 
[499] loop 0 , 7 , move v0 , 0 - 4 
[500] move ua , 4 + 2 
[501] loop 0 , 2 , move 3 , ul 
[502] ( move ua , 3 ; move 2 - ua , 2 ) 
[503] ( move ul , 0 ; move ua + ul , ul ; move ul , ul ) 
[504] ( move ua , 2 ; move 4 , ul ) 
[505] ( move ul , ul ; move 4 * 2 , 2 ) 
[506] loop 0 , 3 , ( move 4 + ul , ul ; move v0 , ul ) 
[507] ( move ul , ua ; move 3 , 4 * 3 ) 
[508] ( move ua , 4 ; move 4 , ul / ua ) 
[509] loop 0 , 5 , move v0 , v0 / 3 
[510] loop 0 , 4 , move ua , v0 + ul 
[511] loop 0 , 3 , ( move 2 , ua - ul ; move v0 , v0 ) 
[512] loop 0 , 2 , move 4 + ul , ul + v0 
[513] ( move 3 , 0 ; move ua , ul ) 
[514] ( loop 0 , 5 , move ua , ua * ua ; move v0 / 4 , v0 ) 
[515] loop 0 , 7 , move v0 - ul , 4 
[516] loop 0 , 4 , move v0 * 3 , ul - v0 
[517] loop 0 , 6 , move v0 , v0 / 2 
[518] ( move 3 , ua ; move 4 , 2 ) 
[519] loop 0 , 6 , move ul , ua / v0 
[520] ( move ua , 0 ; move ua , 0 - 4 ) 
[521] ( move ua , 4 / 2 ; move 4 , 3 * 3 ; move 4 , 4 / ua ) 
[522] loop 0 , 2 , ( move 2 , 0 ; move v0 , ul ) 
[523] loop 0 , 3 , move 3 , 2 
[524] loop 0 , 2 , move 3 , ul / 4 
[525] loop 0 , 2 , move ua - v0 , 3 
[526] ( move 3 - ua , 3 ; move ua , ul ) 
[527] ( loop 0 , 4 , move ul , v0 ; move v0 , v0 * v0 ) 
[528] loop 0 , 6 , move v0 , v0 / 3 
[529] loop 0 , 4 , move 3 , v0 - ul 
[530] ( move 2 , 0 ; move ua , ul ) 
[531] ( loop 0 , 3 , move v0 , ul ; move ua , v0 ) 
[532] ( loop 0 , 5 , move v0 , v0 ; move ul , ul ) 
[533] loop 0 , 5 , move v0 - 2 , v0 
[534] ( loop 0 , 3 , move 3 , v0 ; move 4 , ul ) 
[535] ( move 3 + 2 , 0 ; move ua , ul ) 
[536] loop 0 , 5 , move 3 - v0 , ul 
[537] loop 0 , 4 , move 2 + v0 , 2 
[538] loop 0 , 7 , move v0 , ul - v0 
[539] loop 0 , 4 , move v0 + 2 , ul 
[540] loop 0 , 5 , move ul + v0 , 0 - ul 
[541] loop 0 , 5 , move v0 - ul , ul 
[542] loop 0 , 7 , move v0 / 2 , ul 
[543] ( move ua , 4 ; move ua - ul , ul + ul ) 
[544] ( move 2 , 3 ; move 3 , 4 ) 
[545] ( move 3 , 4 ; move ua , 2 ) 
[546] loop 0 , 2 , move 0 - 3 , 2 
[547] ( move ua , 0 ; move 4 , 3 ) 
[548] ( move ua , 3 + 2 ; move ul , ul ) 
[549] loop 0 , 4 , move v0 + 3 , v0 - ul 
[550] ( move ua , ul ; move 0 - 3 , ul ; move ua , ua ) 
[551] ( move 2 , 0 ; move 3 , 2 ) 
[552] ( move 3 , 2 ; move ul , ul ) 
[553] loop 0 , 3 , move ua + ul , 2 
[554] loop 0 , 7 , move ul - v0 , v0 - 3 
[555] loop 0 , 7 , move ul , ua / v0 
[556] loop 0 , 4 , move v0 - 4 , ul 
[557] loop 0 , 7 , move ul - v0 , v0 
[558] loop 0 , 3 , move 2 , 2 * v0 
[559] ( move 0 , ul ; loop 0 , 4 , move v0 , ul ) 
[560] loop 0 , 4 , move v0 - 4 , ul / v0 
[561] ( move ul , 3 / ua ; move ua , 2 - 3 ) 
[562] loop 0 , 4 , move ua / 2 , ul 
[563] ( loop 0 , 6 , move v0 - 4 , 3 + v0 ; v1 = v0 ) 
[564] ( move 2 , ul ; move 3 , 4 ) 
[565] loop 0 , 3 , move 3 , v0 * v0 
[566] loop 0 , 7 , move v0 - 2 , v0 / ua 
[567] loop 0 , 2 , move 4 + 3 , 3 
[568] ( move 4 , 2 ; move ul , 3 / ua ) 
[569] loop 0 , 3 , move 4 - v0 , 4 + v0 
[570] ( loop 0 , 6 , move ul , ul ; move 3 , v0 ) 
[571] ( move 3 , ul ; move 3 , 2 ) 
[572] ( move 3 , ua ; move ua , ul ; move ul , ul ) 
[573] loop 0 , 7 , move 4 , v0 - ul 
[574] loop 0 , 4 , move 3 / v0 , v0 * v0 
[575] ( move 4 , 4 * 4 ; move ul , ul ) 
[576] ( move ua , ul ; move ua , ua / 4 ) 
[577] move ua , 4 / 3 
[578] loop 0 , 2 , move 4 , 2 
[579] ( move ua , ua ; move 2 , 0 - 3 ) 
[580] ( move ua + ul , 4 ; move 3 , 4 + ul ) 
[581] loop 0 , 4 , move v0 , 4 / ua 
[582] ( move ua , 0 ; loop 0 , 5 , move v0 , v0 ) 
[583] move ua , 0 - 4 
[584] loop 0 , 2 , ( move v0 , 3 ; move ua , 2 - v0 ) 
[585] ( move ul , 3 ; move 0 - 3 , 2 ) 
[586] ( move ua , ul ; move 0 - ul , 2 ) 
[587] ( move 2 , ul ; move 3 , ul / 2 ) 
[588] loop 0 , 5 , move v0 + ua , 3 
[589] ( move ua , 3 ; move ua - ul , ua * ua ) 
[590] loop 0 , 6 , move ua - ul , v0 
[591] loop 0 , 3 , move 0 - 2 , v0 
[592] loop 0 , 3 , move 2 , v0 * 3 
[593] loop 0 , 7 , move ua , 4 
[594] loop 0 , 3 , move 3 - ua , ul - 3 
[595] ( move ua + ul , ua - 4 ; move ua + ul , 3 ) 
[596] ( move ua , 0 ; move 2 , 4 ) 
[597] loop 0 , 2 , move ua , v0 - 2 
[598] ( move 2 , 3 ; loop 0 , 4 , move v0 , v0 ) 
[599] ( move 4 , 4 + ul ; ( move 4 , ul ; move 2 , ua + ul ) ) 
[600] ( move ua , ul ; move ua + ul , 2 ) 
[601] loop 0 , 4 , move v0 * 2 , 2 
[602] ( move 2 , 0 ; move ua , 4 + ul ) 
[603] ( move 2 , 3 ; move ua , ul ) 
[604] ( move 4 * 2 , ul ; move ul , 4 ) 
[605] ( loop 0 , 4 , move ul , 2 ; move ua , ua ) 
[606] loop 0 , 7 , move 2 - v0 , ul 
[607] ( move ul , 4 ; loop 0 , 5 , move ua , 2 ; v1 = v0 ) 
[608] ( move 2 , 4 ; move 3 , 4 ) 
[609] ( move 4 , ul ; loop 0 , 5 , move v0 , 3 ) 
[610] ( move 4 + ul , ua ; move ua , 2 ) 
[611] ( move 2 , ua ; move 3 + 2 , ul ) 
[612] ( move ul , 4 ; move ua , 2 ) 
[613] loop 0 , 4 , move v0 - ul , v0 - ul 
[614] loop 0 , 3 , ( move v0 , 3 ; move 2 , ul ) 
[615] loop 0 , 4 , move 3 , ul - v0 
[616] ( move 4 , ul ; move ua , 2 ) 
[617] ( move ua , ul ; move ua , 4 ) 
[618] ( loop 0 , 4 , move v0 , 2 ; move ua , ul ) 
[619] loop 0 , 3 , move 0 - 3 , v0 
[620] ( move ua - ul , 0 ; move 2 , 4 ) 
[621] loop 0 , 4 , move ul , ul / 4 
[622] ( move ua + ul , ul ; move ua , 2 ) 
[623] loop 0 , 6 , move v0 , ua - v0 
[624] ( move 3 , ul ; move 4 , 2 ) 
[625] ( move 4 - ua , 4 ; move ua , 2 ) 
[626] loop 0 , 4 , move ul + v0 , v0 
[627] loop 0 , 2 , move ua , ua * ua 
[628] loop 0 , 3 , move 3 , v0 + 2 
[629] ( move ua / 4 , ua ; move 4 , ul ) 
[630] loop 0 , 5 , move ul - ua , v0 
[631] ( move 0 , 3 * 3 ; move ua + 3 , ul ) 
[632] loop 0 , 4 , move v0 , v0 / 2 
[633] ( move 3 , 2 ; move ua + ul , 2 ) 
[634] loop 0 , 7 , move v0 , v0 - ul 
[635] loop 0 , 4 , move ua - v0 , 0 - 2 
[636] ( move 2 , 4 ; move 2 - ua , ul - ua ) 
[637] loop 0 , 3 , ( move 3 / v0 , v0 ; move 2 , ul ) 
[638] ( move ul - 4 , ua ; move ua + 2 , ua - 4 ) 
[639] ( move ua , ua ; move ul - 4 , ua * ua ; move ul , 2 ) 
[640] loop 0 , 6 , move 3 / 2 , v0 
[641] ( move 3 , ul ; move ua + ul , ul - 2 ) 
[642] ( move 2 , ua + ul ; move ua + ul , 3 / 4 ) 
[643] ( move 2 , ul ; move 4 + ul , ul ) 
[644] move 4 + 4 , 0 - 3 
[645] loop 0 , 4 , move ua - ul , v0 
[646] loop 0 , 2 , move 2 , ua - 2 
[647] ( move ua + ul , 0 ; move 2 , 4 ) 
[648] ( move ul , 3 ; move 4 , 4 + 3 ) 
[649] loop 0 , 3 , move ua / v0 , 4 
[650] loop 0 , 3 , move ua - 3 , v0 
[651] loop 0 , 6 , move 2 - ua , ul 
[652] loop 0 , 4 , move ul , v0 * 4 
[653] loop 0 , 7 , move ua - 4 , ul + v0 
[654] loop 0 , 5 , move ul , v0 / 4 
[655] ( move ua , ul ; move ua , 0 - 2 ) 
[656] loop 0 , 3 , move 2 , v0 - 2 
[657] loop 0 , 7 , move 3 , 2 * v0 
[658] move 4 + 4 , 2 - 3 
[659] ( move ul - ua , ua ; move ua + 2 , 3 + 2 ) 
[660] ( loop 0 , 3 , move 2 , ul ; move v0 + ul , 4 ) 
[661] loop 0 , 5 , move 3 , 4 
[662] ( move 4 + ul , 2 ; move ul , ul ) 
[663] ( move 2 , ul ; move 4 , ul ) 
[664] loop 0 , 7 , move ua , 2 
[665] loop 0 , ul , loop 1 , 7 , move v0 - v1 , ua / 4 
[666] loop 0 , 5 , move 3 / v0 , ul / ua 
[667] loop 0 , 6 , move ua - 4 , ul 
[668] ( move ul , ul ; move 3 , 2 / ua ) 
[669] ( move 2 , 3 ; move ul - ua , ul ) 
[670] loop 0 , 7 , move ul , v0 * 4 
[671] ( move ul - ua , 4 ; move 3 + ul , ul ) 
[672] ( move 3 , ul ; move 2 , ul ) 
[673] loop 0 , 6 , move v0 , 4 + 4 
[674] move ua , ul / 4 
[675] move ua , ua / 4 
[676] loop 0 , 4 , move 3 * v0 , v0 
[677] move 4 , 3 / 2 
[678] loop 0 , 2 , move 2 - ua , v0 
[679] loop 0 , 7 , move 3 / 2 , v0 
[680] loop 0 , 7 , move v0 , 4 
[681] loop 0 , 3 , move 3 / 2 , ul 
[682] ( move ul - 3 , ul ; move 4 , 2 ) 
[683] ( move 2 , 3 ; move 2 , ul ) 
[684] loop 0 , 5 , move ul + v0 , 2 
[685] ( ( move ua , 2 ; move 4 + ul , ul - 4 ) ; move ua , ul ) 
[686] ( move ua , ua * ua ; move ul , 2 ) 
[687] ( move ua , 0 ; move 0 - 3 , 2 / 3 ) 
[688] loop 0 , 5 , move 3 + v0 , v0 
[689] ( move 3 , ul ; move 4 , 4 + 3 ) 
[690] ( move ul - 3 , ul ; move ul - ua , ul ) 
[691] ( move 4 , ua * ua ; move 2 , 4 ) 
[692] loop 0 , 3 , move ua + ul , 4 
[693] ( move ul , ua ; loop 0 , 5 , move v0 , v0 / ua ) 
[694] ( move 4 , 3 ; move ua , 4 ) 
[695] loop 0 , 3 , move ul + v0 , ul 
[696] ( move ul , ua ; move 2 , ul ; move ul , 0 - ul ) 
[697] ( move ua , 2 / 4 ; move ul , 2 ) 
[698] ( move 4 + ul , 4 ; move ua - ul , ul ) 
[699] ( move 3 , ul ; move 4 , 4 ) 
[700] loop 0 , 5 , move v0 - ul , 2 * v0 
[701] loop 0 , 3 , ( move v0 , ul / ua ; move 4 - ul , v0 ) 
[702] loop 0 , 7 , move ul + v0 , 4 
[703] ( ( move 4 , ul ; move ul , ua ) ; move ua , ua - ul ) 
[704] loop 0 , 3 , move 2 , ua * ua 
[705] loop 0 , 3 , ( move 2 , ul ; move ul , 3 - 2 ) 
[706] ( move ua , 3 ; move ua + 2 , 3 - ul ) 
[707] ( move ua - ul , 0 ; move ua - ul , ua - 2 ) 
[708] ( move ua , 3 ; move 4 + ul , 4 ) 
[709] ( loop 0 , 2 , move v0 + 3 , v0 ; move ul , ul ) 
[710] ( move ua , ul ; move ua , 0 - 4 ) 
[711] loop 0 , 5 , move 2 + v0 , v0 
[712] ( move 2 , ul ; move ul , 4 ; move ul , ul ) 
[713] loop 0 , 7 , move ul - v0 , 2 
[714] ( move ua , 0 - 3 ; move ua , ul ) 
[715] loop 0 , 6 , move ua , 0 - 3 
[716] loop 0 , 4 , move 2 , 4 + v0 
[717] loop 0 , 6 , move v0 - 3 , v0 
[718] ( loop 0 , 5 , move v0 , v0 ; move 3 , ua ) 
[719] ( move 0 - ul , 3 ; move 4 , 2 ) 
[720] ( move ua + 2 , ua ; move 3 , 2 ) 
[721] loop 0 , 5 , move 2 * v0 , 3 
[722] loop 0 , 6 , move v0 - 2 , v0 
[723] ( move 2 , ul ; move ua , ul ) 
[724] loop 0 , 4 , move ua - 3 , ul 
[725] loop 0 , 5 , move 2 , 4 
[726] ( move ua , 4 ; move 3 , 2 ) 
[727] loop 0 , 6 , move v0 - ul , 4 * v0 
[728] loop 0 , 5 , move v0 , 4 / ua 
[729] ( move 4 , 0 ; move ul - ua , 2 ) 
[730] loop 0 , 3 , move v0 + 4 , ul 
[731] ( loop 0 , 5 , move v0 , 4 / v0 ; move v0 , ua ) 
[732] loop 0 , 6 , move ua , 4 * 2 
[733] ( move ul , 2 ; move ua + 2 , ua * ua ) 
[734] ( move 2 + ul , 2 ; move ua + ul , ua - ul ) 
[735] ( move 4 , 0 ; move 4 , 2 ) 
[736] ( move 2 , 4 ; move ua , ul - 2 ) 
[737] ( move ul , ua * ua ; move 3 , 2 ) 
[738] loop 0 , 2 , move 3 , 2 / ua 
[739] ( move ul - 3 , 3 / ua ; move 3 , ul ) 
[740] ( move 4 , 0 ; move 3 , ul ) 
[741] ( move 3 + 2 , ul ; move 4 , ul ) 
[742] ( loop 0 , 5 , move v0 , v0 + v0 ; move v0 , ul ) 
[743] loop 0 , 3 , loop 1 , 2 , move v0 , ul 
[744] ( loop 0 , 6 , move ul , v0 ; move v0 , v0 ) 
[745] loop 0 , 3 , move 4 / v0 , 2 
[746] ( move ua , 3 ; move 4 , 3 ) 
[747] loop 0 , 4 , move 4 - ua , 3 
[748] loop 0 , 3 , move 4 / v0 , v0 
[749] loop 0 , 6 , move v0 , 3 + 2 
[750] ( move 4 , 3 ; move ua + ul , ul ) 
[751] loop 0 , 5 , move 4 , v0 / 2 
[752] loop 0 , 4 , move ul , v0 - 2 
[753] loop 0 , 5 , move v0 , ua / 3 
[754] loop 0 , 2 , move 4 , 4 
[755] loop 0 , 6 , move v0 , 3 * 3 
[756] ( loop 0 , 4 , move ul , ul ; move v0 , 3 ) 
[757] loop 0 , 2 , move 4 , ul / ua 
[758] ( move 2 , ua ; loop 0 , 5 , move v0 , v0 + v0 ) 
[759] ( move 4 , ul ; loop 0 , 3 , move 2 , ul ) 
[760] ( move ul , 4 + 3 ; move ua + ul , 2 ) 
[761] loop 0 , 3 , move v0 + ul , 4 
[762] loop 0 , 2 , move v0 + ua , 2 
[763] ( move ua , 0 ; move ua - ul , ul - 4 ) 
[764] loop 0 , 5 , move v0 , v0 - 4 
[765] loop 0 , 2 , ( move v0 , v0 ; move 3 , v0 ) 
[766] loop 0 , 2 , move 4 , 2 - 3 
[767] ( v0 = ul ; move 3 , ul ; loop 1 , 3 , move 2 , v0 ) 
[768] ( move ua , ua * ua ; move 4 , ua + 4 ) 
[769] ( move ul , 2 ; move ua + 4 , 2 ) 
[770] ( move 2 , 3 ; move ul - ua , 4 - ua ) 
[771] loop 0 , 3 , move 2 + v0 , v0 - 3 
[772] ( move ul - ua , 2 ; move 3 , 3 ) 
[773] ( move 3 , ul ; move 2 , 2 ) 
[774] ( move ua , 3 ; move 4 , ua * ua ) 
[775] loop 0 , 3 , move 4 , ua - v0 
[776] loop 0 , 4 , move ua , ua / 4 
[777] loop 0 , 3 , move ua , 2 + v0 
[778] loop 0 , 5 , move 4 , ul - v0 
[779] loop 0 , 5 , move 2 , ul / ua 
[780] loop 0 , 3 , move 4 / v0 , 4 
[781] loop 0 , 4 , move v0 * 2 , ua / v0 
[782] loop 0 , 2 , move ua - ul , v0 
[783] ( move ua , 4 ; move ua , ua * ua ) 
[784] ( move 2 - ua , ul ; move 2 , 3 ) 
[785] loop 0 , 3 , move 3 , v0 * 2 
[786] loop 0 , 7 , move ul - v0 , 4 
[787] loop 0 , 2 , move 4 , v0 + 4 
[788] ( move 4 , ul ; move 3 , ul ) 
[789] loop 0 , 6 , move 2 - v0 , v0 
[790] ( move ua , 4 ; ( move 3 , ul ; move ua , 2 ) ; move ul , 2 ) 
[791] ( move ul , ua ; loop 0 , 4 , move v0 , v0 - ul ) 
[792] ( move ua - 3 , ul ; move ua , 0 - 4 ) 
[793] ( loop 0 , 3 , move 2 , v0 ; move ua , v0 ) 
[794] loop 0 , 5 , move ul - ua , 2 
[795] loop 0 , 3 , loop 1 , 2 , move v1 + v0 , ul 
[796] ( move ua , 3 ; ( move ul / 2 , ua * ua ; move 4 , ua ) ) 
[797] ( move 0 , 2 ; loop 0 , 4 , move v0 , 4 ) 
[798] ( move ua + ul , 0 ; move 3 , 4 + ul ) 
[799] ( move 3 - ua , 4 ; move 3 + ul , ul ) 
[800] loop 0 , 5 , move v0 , v0 * 4 
[801] loop 0 , 3 , move ul - ua , 4 
[802] loop 0 , 4 , move ul , v0 * 2 
[803] ( move 3 - ua , 3 ; move ua , 4 ) 
[804] loop 0 , 6 , move v0 , v0 - 3 
[805] ( move ua , 4 ; move ua , 3 ) 
[806] loop 0 , 2 , move 2 - ua , v0 + v0 
[807] loop 0 , 6 , move 4 , v0 * v0 
[808] loop 0 , 5 , move 3 - v0 , v0 
[809] ( move 3 , 3 ; move ua , 2 ) 
[810] ( move ua , 4 ; move ul , 2 ) 
[811] ( move 3 , 0 ; move ua + 2 , 2 ) 
[812] loop 0 , 3 , move ua - v0 , 4 
[813] ( move ua , 4 ; move ul , ul ) 
[814] ( move 3 , 0 ; move ua - ul , ul ) 
[815] loop 0 , 7 , move ul , 2 * v0 
[816] ( move 3 , ul ; move ua + ul , 2 ) 
[817] loop 0 , 6 , move ua - v0 , 4 + ul 
[818] loop 0 , 6 , move ua + 2 , 4 
[819] ( move 2 , 3 ; move ua - 2 , 4 / 2 ) 
[820] loop 0 , 7 , move 3 - v0 , 3 
[821] loop 0 , 4 , move 3 , 3 
[822] ( move 2 , ua ; move ul , ul ; move 4 , 4 ) 
[823] ( move 4 , ua * ua ; move 2 + ul , ul ) 
[824] loop 0 , 3 , move v0 - ua , 4 + ul 
[825] loop 0 , 3 , move ul - 4 , ul / 2 
[826] ( move 4 , 2 ; move 2 , 4 ) 
[827] ( move 3 + 2 , 0 ; move ul - ua , ul ) 
[828] ( loop 0 , 3 , move v0 - ul , ul ; move 3 , v0 ) 
[829] loop 0 , 4 , move 4 , v0 / 2 
[830] ( move ul , ua ; move ua , 4 / 3 ) 
[831] loop 0 , 4 , move 3 , 4 / v0 
[832] loop 0 , 7 , move v0 , v0 - 2 
[833] loop 0 , 4 , move v0 , v0 
[834] ( move ul , ul ; move ua , ua / 4 ) 
[835] ( move ua + ul , ul ; move ul - ua , ul ) 
[836] loop 0 , 6 , move ua , 3 
[837] loop 0 , 2 , move ul - ua , v0 + 3 
[838] loop 0 , 6 , move 2 , 2 
[839] loop 0 , 2 , move v0 + ua , 4 
[840] ( move 4 , 0 ; move 3 , 2 ) 
[841] ( loop 0 , 5 , move v0 , ul ; move v0 , 4 ) 
[842] ( move 2 , 4 ; move 2 , 2 ) 
[843] loop 0 , 3 , move 3 , v0 - ul 
[844] loop 0 , 7 , move v0 , 3 + 2 
[845] ( loop 0 , 4 , move v0 , ul + v0 ; move ua , 0 ) 
[846] loop 0 , 3 , move 3 , v0 / ua 
[847] ( move ua , ua ; move ua - 3 , ul ; move ua , 2 ) 
[848] move 4 * 2 , 4 * 3 
[849] ( move 3 , 2 ; move ul , 2 ) 
[850] loop 0 , 3 , move 4 + 2 , 3 / v0 
[851] loop 0 , 2 , move ul - 4 , 4 
[852] loop 0 , 3 , move 3 , 4 + v0 
[853] ( move 3 , 4 ; move 3 , ul ) 
[854] loop 0 , 3 , move 3 - ua , v0 
[855] loop 0 , 6 , move 3 + v0 , 3 
[856] ( move ua , 2 ; move 4 , 2 ) 
[857] ( move ua , 3 - 4 ; move 2 , ul ) 
[858] loop 0 , 5 , move 3 , v0 / 3 
[859] ( move ua , 2 - 4 ; move ua , 4 ) 
[860] ( move ua , ul ; move ua , 0 - 3 ) 
[861] loop 0 , 4 , move ul + v0 , 2 
[862] loop 0 , 6 , move 4 , ua - v0 
[863] loop 0 , 4 , move ul , 2 - v0 
[864] loop 0 , 5 , move v0 , ua * ua 
[865] loop 0 , 7 , move v0 , ua * ua 
[866] ( move 4 - ua , 3 ; ( move ul , ul ; move ua - ul , ul ) ) 
[867] ( move 4 , ul ; move 2 , ul ) 
[868] ( move ua - ul , 4 ; move ua + 3 , 2 ) 
[869] loop 0 , 4 , move ua , 2 
[870] ( move ua + ul , 0 ; loop 0 , 4 , move v0 , ul ) 
[871] ( move 2 , 4 ; move ua , ul ) 
[872] ( move ua , ua - ul ; move ul - 4 , 3 - ul ) 
[873] loop 0 , 2 , move 4 , ua / 3 
[874] loop 0 , 7 , move 4 , 4 
[875] ( move ua , ul ; move ua + ul , ua * ua ) 
[876] loop 0 , 6 , move v0 , ua * ua 
[877] loop 0 , 2 , move ul - ua , 2 
[878] loop 0 , 5 , move v0 + 2 , ul - v0 
[879] loop 0 , 3 , ( move v0 , ul ; move 2 , v0 - ul ) 
[880] loop 0 , 5 , move v0 , v0 * 3 
[881] ( move 3 , ul ; move ul - ua , ul ) 
[882] ( move 4 / ua , ul ; move 3 , ul ; move ua , ua + ul ) 
[883] ( move ul - ua , 0 ; move 2 , ul ) 
[884] ( move 3 , 4 ; move 4 , 2 ) 
[885] loop 0 , 6 , move 3 , v0 * v0 
[886] ( loop 0 , 6 , move v0 , v0 ; move v0 , v0 ) 
[887] loop 0 , 5 , move v0 , 3 * 3 
[888] loop 0 , 2 , move ul - ua , v0 
[889] loop 0 , 4 , move v0 , 0 - 2 
[890] ( move ua + ul , 2 ; move ua , 3 ) 
[891] ( move 3 , 2 ; move ua , ua - ul ) 
[892] ( move ul , 2 ; move 2 , ul ; move ua , ul ) 
[893] loop 0 , 4 , move 0 - 2 , ul 
[894] ( move ul , 3 * 2 ; move ua + 2 , 4 ) 
[895] ( move ua , 3 ; loop 0 , 6 , move v0 , v0 - ul ) 
[896] loop 0 , 6 , move 4 , 3 + 2 
[897] ( move ul - ua , ua ; move ua + ul , ul ) 
[898] loop 0 , 4 , move v0 , 2 / 4 
[899] ( move 3 , 3 ; move 2 , ul ) 
[900] loop 0 , 6 , move v0 - ul , 4 
[901] loop 0 , 4 , move v0 * 2 , v0 * v0 
[902] ( move ul , 0 ; move ua , 2 / ua ) 
[903] ( move ua + ul , ul ; move ua , 4 ) 
[904] ( move ua , 2 ; move ua + ul , 4 ) 
[905] ( move ua , 2 ; move 2 , 2 ) 
[906] ( move ul - 3 , ul ; move ua , 3 ) 
[907] ( move 3 , 3 ; v0 = 4 ; move v0 , 3 + v0 ) 
[908] ( move ua - 4 , 0 ; move 4 , 2 ) 
[909] ( move ua , ua ; move ul / ua , 2 ; loop 0 , 5 , move ul , 2 ) 
[910] ( move 4 + 4 , ul ; move ul , ul ) 
[911] ( move ua , 0 ; move 4 + ul , ul ) 
[912] ( move 4 , ua + 3 ; ( move 3 , ua * ua ; v0 = ul ) ) 
[913] loop 0 , 3 , move ua , 3 / v0 
[914] ( move 4 , 3 ; move ua , ul ; move ul , ul ) 
[915] ( move ua , 0 ; move 3 , 4 ) 
[916] loop 0 , 4 , move v0 + ul , 2 + v0 
[917] loop 0 , 4 , move 4 + ul , 4 
[918] loop 0 , 3 , move v0 - ua , 4 
[919] ( loop 0 , 4 , move v0 , v0 ; move ua , 3 ) 
[920] ( move 4 + 4 , 0 ; move ul , 2 ) 
[921] ( move ua , 0 - ul ; move ul , 2 ) 
[922] ( move ua , ua - ul ; move 3 , ua * ua ) 
[923] ( move ul , ul + ul ; loop 0 , 3 , move ua , 4 ) 
[924] ( move ua + 3 , ul ; move 3 , 4 ) 
[925] loop 0 , 3 , move 4 - v0 , v0 
[926] ( move ul , 4 * 2 ; move ua , ul ) 
[927] ( move ua , 4 * 2 ; move 4 - ua , 3 + ul ; move ul , ul ) 
[928] loop 0 , 6 , move 3 , 4 * v0 
[929] loop 0 , 2 , move v0 - ua , 2 
[930] loop 0 , 4 , move 3 , v0 * v0 
[931] loop 0 , 5 , move ul , v0 + 3 
[932] loop 0 , 6 , move ul , 2 / ua 
[933] ( move ua , ul ; move ua , 0 - 4 ; move ua + ul , 3 ) 
[934] ( move 3 , 0 ; move 3 , 4 ) 
[935] loop 0 , 7 , move 4 - v0 , v0 
[936] loop 0 , 2 , move v0 - ua , v0 + ul 
[937] loop 0 , 3 , move ul + v0 , 2 / 4 
[938] loop 0 , 4 , move ul - 3 , v0 * 4 
[939] ( move 3 , ul ; move ua , 2 / ua ) 
[940] loop 0 , 3 , move ua - ul , v0 
[941] ( move ua , ua ; loop 0 , 4 , move v0 , 4 ) 
[942] ( move 3 , 2 ; move ua , 2 ) 
[943] move 4 , 3 
[944] ( move ua - 2 , ul ; ( move 2 , 3 ; move ua + ul , ul ) ) 
[945] ( move ua , ul ; move 3 , ua - 2 ) 
[946] ( move ul , ul ; move ua , ul / ua ; move 3 , ua + 4 ) 
[947] loop 0 , 5 , move v0 + ul , ul - v0 
[948] ( move ua , ua ; move 4 , 4 / 3 ) 
[949] ( move ua , 0 ; move ua + ul , 2 ) 
[950] loop 0 , 5 , move v0 , ua / 4 
[951] ( move 0 - ua , 2 - 4 ; move 4 , 2 ) 
[952] loop 0 , 2 , move v0 + 4 , v0 + v0 
[953] ( move 2 , ul ; move 4 + 3 , ul ) 
[954] ( move ul - ua , 3 ; move ua , 2 ) 
[955] ( loop 0 , 5 , move ul , 2 ; move ua , v0 ) 
[956] ( move ua , 3 + 2 ; move 4 , ul ) 
[957] ( move 3 , ua ; move ua + 3 , ul ) 
[958] ( move ua - 4 , ul ; loop 0 , 2 , move 3 + 3 , ua - 2 ) 
[959] ( move ua , 3 ; loop 0 , 3 , move v0 , ul ) 
[960] loop 0 , 2 , move v0 - 4 , v0 
[961] loop 0 , 7 , move 2 - v0 , 4 
[962] loop 0 , 5 , move 2 , v0 / ua 
[963] ( move ua , ul ; move ua + 3 , 4 ) 
[964] ( move 3 , 0 ; move ua , 2 ) 
[965] loop 0 , 2 , move 2 - ua , v0 / ua 
[966] ( move 4 , ul ; move ul - ua , ul ) 
[967] ( loop 0 , 4 , move v0 , ul ; move ua , 3 * v0 ) 
[968] ( move 3 , ul - 3 ; move 2 , 4 ) 
[969] ( move ul - 3 , 4 ; loop 0 , 4 , move v0 , 2 * v0 ) 
[970] loop 0 , 6 , ( v1 = 3 / v0 ; move v1 , 4 + v1 ) 
[971] ( move 4 + 4 , 2 ; move ul , ul ) 
[972] ( move ua , ul ; loop 0 , 4 , move v0 , ul ) 
[973] ( move ul - ua , 0 ; move ua , ul ) 
[974] ( loop 0 , 4 , move v0 , v0 ; move ua , ul ) 
[975] ( move 2 , 3 ; move 4 , ul ) 
[976] ( move 4 , 0 ; move 4 * 2 , ul ) 
[977] loop 0 , 7 , move ul , 2 / 4 
[978] loop 0 , 5 , move 2 - v0 , ul 
[979] loop 0 , 3 , move v0 + ua , 3 
[980] loop 0 , 6 , move v0 - ul , v0 / ua 
[981] loop 0 , 6 , move 2 - ua , v0 
[982] loop 0 , 2 , move 3 + v0 , 2 
[983] loop 0 , 6 , move 3 , 2 
[984] ( move 3 , ul ; move 4 * 2 , ua + 4 ) 
[985] loop 0 , 6 , move v0 - 3 , v0 * v0 
[986] loop 0 , 3 , move 2 , v0 / ua 
[987] ( move 3 , ul ; move ua / 2 , 2 ; move ua , ua - ul ) 
[988] ( move 4 , ul ; move 2 - 3 , 2 ) 
[989] ( move 4 + 3 , ua ; move 3 , ul ) 
[990] ( move 2 , 2 ; move 3 , ul ) 
[991] ( move 2 , 4 ; move 2 , ul ) 
[992] ( move 3 , 2 / 4 ; move 2 , 2 - ua ) 
[993] ( move ua , 4 - 3 ; v0 = ul ; move ua - 3 , 4 + v0 ) 
[994] loop 0 , 2 , loop 1 , 3 , move v1 , 2 
[995] ( move 3 + 2 , 2 ; move ua , ul ) 
[996] loop 0 , 4 , move ua + 2 , v0 + ul 
[997] ( move ua , 4 * 2 ; move ua , 3 ) 
[998] loop 0 , 3 , move 3 , 3 
[999] ( move ul , ua ; move ul , ua * ua ; move 4 , 4 ) 
[1000] loop 0 , 7 , move v0 - 4 , v0 
[1001] ( loop 0 , 4 , move v0 , ul ; move ua - 2 , ul / v0 ) 
[1002] ( move ua + ul , 0 ; move 2 , ul - 2 ) 
[1003] ( move ul , ul ; loop 0 , 4 , move 2 , ul ) 
[1004] ( move ua , ul ; move ua , 4 + 4 ) 
[1005] loop 0 , 5 , move 2 , 2 + v0 
[1006] ( move ul , ul ; move 0 - ua , 4 ) 
[1007] ( move ul , ua ; loop 0 , 6 , move ul , v0 / ua ) 
[1008] ( move 3 , 0 ; move 4 , 4 ) 
[1009] loop 0 , 3 , move ua - 4 , v0 
[1010] ( move ul + ul , ua ; move 4 , ua / 4 ) 
[1011] ( loop 0 , 5 , move v0 , v0 ; move ua , 0 ) 
[1012] loop 0 , 4 , move v0 , 3 + v0 
[1013] ( move 4 + ul , 0 ; move 3 , ul ) 
[1014] ( loop 0 , 5 , move ul / v0 , v0 ; move v0 , v0 ) 
[1015] ( move 0 , ua ; move 3 - ua , ua ; loop 0 , 3 , move ul , ul ) 
[1016] loop 0 , 2 , ( move ul , v0 ; move 4 , ul ) 
[1017] ( move ua , 4 ; move ul , ul ; move ua , ul ) 
[1018] loop 0 , 5 , move ua , ua - 3 
[1019] loop 0 , 4 , move v0 + 2 , v0 
[1020] ( move 3 + 2 , ul ; move 2 , ul ) 
[1021] ( move ua + ul , ua ; loop 0 , 4 , move v0 , 4 ) 
[1022] loop 0 , 6 , move 3 , 0 - ul 
[1023] loop 0 , 6 , move 2 , 2 / v0 
[1024] ( loop 0 , 6 , move v0 , ul ; move ul - ua , ul + v0 ) 
[1025] ( loop 0 , 5 , move ul , v0 ; move 3 + 2 , v0 ) 
[1026] loop 0 , 3 , move 2 , 4 + ul 
[1027] loop 0 , 3 , ( move v0 , ul ; move ul , 2 ) 
[1028] loop 0 , 4 , move v0 , v0 * 4 
[1029] ( move 3 - ua , ua ; move ua - ul , ul ) 
[1030] ( loop 0 , 5 , move 3 , 2 ; move v0 , v0 ) 
[1031] ( move ul , 2 ; move ua , 3 + 2 ) 
[1032] loop 0 , 2 , move 3 , 4 
[1033] ( move 3 , 3 ; move ua , ul ) 
[1034] ( move ua , 2 ; move ua , ul - 4 ) 
[1035] loop 0 , 5 , move v0 , v0 + 2 
[1036] loop 0 , 3 , move ul - ua , v0 
[1037] loop 0 , 3 , move v0 - ua , 3 
[1038] loop 0 , 3 , move v0 + ul , ua * ua 
[1039] ( loop 0 , 3 , move ua , v0 + ul ; move v0 , v0 ) 
[1040] ( loop 0 , 5 , move 3 , v0 ; move 4 , v0 ) 
[1041] ( move ul , ua ; ( move ul - ua , 4 * 3 ; move ua , ul ) ) 
[1042] loop 0 , 2 , move ua - ul , 4 + v0 
[1043] ( move ua + ul , ul ; move ua , ua - 2 ) 
[1044] ( move ua , ul ; move ua - ul , ua * ua ) 
[1045] ( move ua , 3 ; move 3 , 2 ) 
[1046] ( move 4 , ul ; loop 0 , 3 , move v0 * v0 , 2 ) 
[1047] ( move ua + ul , ua ; move 3 , ua * ua ) 
[1048] loop 0 , 2 , move ua - 2 , v0 
[1049] ( move 0 , ul ; loop 0 , 5 , move v0 , v0 ) 
[1050] ( move ua , 0 ; move 2 / 3 , ul ) 
[1051] loop 0 , 3 , move v0 + v0 , 3 + 2 
[1052] ( move ul , ul ; move ua , ua * ua ; move ua , 4 ) 
[1053] loop 0 , 4 , move ua + ul , 4 
[1054] loop 0 , 6 , move v0 / 2 , ul 
[1055] loop 0 , 6 , move v0 , 3 - v0 
[1056] ( loop 0 , 3 , move 4 , v0 ; move v0 , 4 ) 
[1057] loop 0 , 7 , move ul , 2 / ua 
[1058] loop 0 , 4 , move 3 * v0 , 4 
[1059] loop 0 , 7 , move ul - v0 , ua / v0 
[1060] loop 0 , 4 , move 4 / v0 , v0 * v0 
[1061] loop 0 , 2 , move ul - ua , 4 
[1062] ( loop 0 , 6 , move 3 , ul ; move ul , ua ) 
[1063] ( move ul , 2 / 4 ; move ua , 2 ) 
[1064] loop 0 , 6 , move ua - 3 , v0 
[1065] loop 0 , 4 , move ua , 2 + v0 
[1066] ( move 0 , ul ; loop 0 , 6 , move v0 , v0 ) 
[1067] ( move ul , ul ; loop 0 , 2 , move ua , ul ) 
[1068] loop 0 , 4 , move v0 , ua * ua 
[1069] ( loop 0 , 4 , move ul , ul ; move ul , ua ; move ua , ul ) 
[1070] loop 0 , 6 , ( v1 = ul - v0 ; move v1 , 4 / v0 ) 
[1071] loop 0 , 2 , move 3 , 0 - ul 
[1072] ( move 2 + ul , 2 ; move 2 , ul ; move ua , ua - ul ) 
[1073] ( move ua + ul , ul ; move ul - 4 , 2 ) 
[1074] ( move ul , 4 ; move 4 , ua * ua ) 
[1075] ( move ua , 0 ; loop 0 , 4 , move v0 , ul ) 
[1076] loop 0 , 3 , move ua - 2 , 2 
[1077] ( move 3 , 0 - 2 ; move ua , ul ) 
[1078] ( move ua , 4 + ul ; move 3 , ul ) 
[1079] loop 0 , 7 , move v0 / 4 , ul 
[1080] loop 0 , 3 , move 2 - ua , v0 
[1081] ( loop 0 , 5 , move v0 , v0 ; move ul , 0 ) 
[1082] loop 0 , 5 , move v0 + ul , v0 - ul 
[1083] loop 0 , 4 , move ua - ul , 2 
[1084] loop 0 , 4 , move 3 , 4 
[1085] loop 0 , 7 , move ul , v0 * 3 
[1086] ( loop 0 , 5 , move ul , v0 ; move 4 , 3 ) 
[1087] ( move ul - ua , ul - 4 ; move ua - 2 , 4 / ua ) 
[1088] ( move 4 + 3 , 3 ; move 4 + 3 , ua * ua ) 
[1089] ( move 2 , ua * ua ; move ua , ul ) 
[1090] ( move 2 , ua ; loop 0 , 4 , move ul , ul ) 
[1091] ( move 2 , 4 + 3 ; move 3 , 2 ) 
[1092] loop 0 , 4 , move ul , v0 / 3 
[1093] ( move ua , ul ; move 4 , 3 ) 
[1094] ( move ul , ul - ua ; move 3 , 4 ; move ua , ul ) 
[1095] ( ( move ua - ul , ul ; move ul , ua + ul ) ; move 4 , 3 ) 
[1096] ( move ua , 4 ; move ua , 2 ) 
[1097] ( move ua + 2 , 2 ; move 3 - ua , 4 ) 
[1098] ( move ua , 4 * 2 ; move 3 , 3 ) 
[1099] ( move ua , 2 ; move ua / 4 , ul ) 
[1100] loop 0 , 2 , loop 1 , 3 , move ul + v1 , v0 + ul 
[1101] loop 0 , 6 , move ul + v0 , 2 
[1102] loop 0 , 5 , ( move ua - 4 , ul - v0 ; v1 = v0 ) 
[1103] loop 0 , 3 , move 3 - ua , 4 
[1104] ( move ua , 3 ; move 4 , ul ) 
[1105] loop 0 , 7 , move v0 - 2 , v0 
[1106] ( move 3 - ua , 2 ; move ua , ul ) 
[1107] loop 0 , 6 , move v0 , 2 - v0 
[1108] ( loop 0 , 5 , move ul , v0 ; move v0 , ua / v0 ) 
[1109] ( move ua , 0 - 2 ; move 3 , ul ) 
[1110] ( move ul , 3 / ua ; move ua - 2 , 2 ) 
[1111] loop 0 , 5 , move v0 - ua , ul + v0 
[1112] loop 0 , 7 , move 3 , 4 
[1113] loop 0 , 4 , move ul - ua , v0 
[1114] loop 0 , 6 , move v0 , 2 - 3 
[1115] loop 0 , 3 , move v0 * 2 , v0 + 4 
[1116] ( move 4 , 0 ; move ua - ul , 2 ) 
[1117] ( move 4 , ul ; move ua , 4 ) 
[1118] ( loop 0 , 4 , move v0 , v0 ; move 3 , ul ) 
[1119] loop 0 , 6 , move v0 - 2 , 2 + v0 
[1120] ( move 3 , 0 ; move ua , 3 - 4 ) 
[1121] ( move ua , ua ; move 4 + 3 , 4 ) 
[1122] ( move ua + ul , 0 ; move 2 , ul ) 
[1123] ( move 4 , 4 ; move 3 , ul ) 
[1124] ( move 3 , ul - 2 ; move ua , 4 ) 
[1125] loop 0 , 3 , move ua + v0 , v0 + ul 
[1126] loop 0 , 7 , move 2 , ul + v0 
[1127] loop 0 , 5 , move ua - 3 , v0 
[1128] ( move 4 , ul ; move ul - ua , 2 / ua ) 
[1129] ( move 4 / 3 , 0 ; move ua - ul , ua + ul ) 
[1130] ( move 3 , ua ; move 4 + ul , 2 ) 
[1131] ( loop 0 , 4 , move ul , v0 ; move 2 , ul ) 
[1132] ( loop 0 , 5 , move ul , v0 ; move ua , ul ) 
[1133] ( move 3 , ul ; move 4 , 4 ; move ul , 3 / 2 ) 
[1134] loop 0 , 5 , move ul , v0 + 2 
[1135] ( loop 0 , 5 , move v0 , 4 * v0 ; move v0 , v0 ) 
[1136] ( move 2 , 2 ; loop 0 , 4 , move v0 , v0 ) 
[1137] loop 0 , 4 , move 4 , 4 
[1138] loop 0 , 6 , move v0 , v0 / 4 
[1139] ( move 2 , ul ; move ua , ua / 4 ) 
[1140] loop 0 , 3 , move 4 , ua - 2 
[1141] loop 0 , 3 , move 4 - v0 , ul 
[1142] ( move ua - ul , ua ; move ua , 4 * 2 ) 
[1143] ( move ua , 2 ; move 4 , 4 ) 
[1144] ( move 4 , ua ; move 3 - ua , 2 ) 
[1145] loop 0 , 5 , move v0 + ul , 4 
[1146] ( move 4 , ua * ua ; move ua , ul ) 
[1147] ( loop 0 , 3 , move 2 , v0 + v0 ; move ul , v0 ) 
[1148] loop 0 , 3 , move 2 , ul - v0 
[1149] move 3 * 3 , 0 - 4 
[1150] ( move 2 , ul ; move ua , 4 + 4 ) 
[1151] ( move ua + ul , ul / ua ; move 3 , ul ) 
[1152] ( move ua + ul , ul ; move ul - 4 , ul ; move ua , ul ) 
[1153] loop 0 , 7 , move v0 - 3 , 3 
[1154] loop 0 , 5 , move v0 , v0 + 4 
[1155] ( move ul , 3 - ua ; move ua , ul ; move 4 , 4 ) 
[1156] loop 0 , 4 , move v0 * v0 , ul - v0 
[1157] ( loop 0 , 4 , move ul , ul ; move ua , v0 ) 
[1158] ( move 2 , 2 ; move 4 , ul / ua ) 
[1159] ( move ua + ul , ua ; move ua , ua / 3 ) 
[1160] loop 0 , 3 , move v0 + ul , 2 
[1161] loop 0 , 5 , loop 1 , ul , move v1 - v0 , v0 
[1162] loop 0 , 6 , move v0 - ul , ua - v0 
[1163] ( move ua , ul ; move 2 , ua / 4 ) 
[1164] loop 0 , 3 , move 2 , v0 - ul 
[1165] ( move ua , 2 + ul ; move ul - ua , ua + ua ; move ua , ul ) 
[1166] ( move 2 - ua , 4 ; move 2 , ua + 4 ) 
[1167] ( loop 0 , 6 , move v0 , v0 ; move v0 , 3 ) 
[1168] loop 0 , 3 , ( move v0 , v0 ; move 3 + 2 , v0 ) 
[1169] loop 0 , 3 , ( move 4 , 3 - v0 ; move v0 , 3 ) 
[1170] ( move ul , 0 ; move ua + 2 , ua - ul ) 
[1171] loop 0 , 2 , move 4 + ul , 4 
[1172] loop 0 , 2 , move 3 + 2 , v0 
[1173] loop 0 , 3 , move v0 - 4 , v0 * v0 
[1174] ( move 3 , 2 ; move ua / 4 , ul ) 
[1175] ( move ul , ua - 4 ; move ua , 4 / ua ) 
[1176] loop 0 , 5 , move 2 , ua / v0 
[1177] loop 0 , 6 , move ul - ua , v0 
[1178] ( move ua + ul , ul ; move ua , ua * ua ) 
[1179] loop 0 , 4 , move ua - 4 , ul 
[1180] ( move ua + 3 , 4 ; loop 1 , 6 , move v1 , ua + v1 ) 
[1181] ( move 4 + 3 , 2 ; move 2 , ul ) 
[1182] ( move 3 , ul ; move 0 - 4 , ul ) 
[1183] loop 0 , 7 , move v0 + 2 , 3 
[1184] ( move 3 , ua ; move 3 + 2 , 0 - ul ) 
[1185] ( move ua , 0 ; move ul - ua , ul ) 
[1186] loop 0 , 2 , move ua - 3 , v0 
[1187] ( move 3 , ul ; move 4 , ul ) 
[1188] ( move ul , 2 ; move 4 , 4 + 3 ) 
[1189] ( loop 0 , 5 , move 3 + ul , ul ; move ul + ul , v0 ) 
[1190] ( move 4 + 3 , ua ; move ua , 2 ) 
[1191] loop 0 , 5 , move v0 , 3 + 2 
[1192] ( move ua - ul , ua / 3 ; move ua + 2 , ua * ua ) 
[1193] ( move 2 , 3 ; move 4 , 4 + ul ; v0 = 2 - ul ) 
[1194] ( loop 0 , 5 , move v0 , v0 ; move v0 , 2 ) 
[1195] ( move ua , ul / ua ; move ua , 3 + 2 ) 
[1196] loop 0 , 4 , move v0 + ua , ul + v0 
[1197] ( move ul , 2 ; loop 0 , 6 , move 3 , ul ) 
[1198] ( loop 0 , 5 , move ul , 4 ; move v0 , 4 + 3 ) 
[1199] ( move ua + ul , 2 ; move 3 , ul ) 
[1200] move 3 * 3 , 4 
[1201] ( move ua , ul - 3 ; move 3 , 2 ) 
[1202] loop 0 , 6 , move v0 + 3 , ul - v0 
[1203] ( move ua , 0 - 3 ; v0 = 4 ; move v0 , 4 ) 
[1204] move 3 * 3 , 4 + 3 
[1205] ( move 4 , 4 ; move ua + ul , ua + 4 ) 
[1206] loop 0 , 2 , move 4 , v0 / 2 
[1207] ( move 2 , ul ; move ua , ul / ua ) 
[1208] loop 0 , 6 , move 4 - v0 , ul 
[1209] ( move ua , 2 ; move 3 , ul ) 
[1210] loop 0 , 3 , move 3 , ua - v0 
[1211] ( move ua + 4 , ua - 4 ; move ul , ul ) 
[1212] loop 0 , 3 , move 4 / v0 , v0 - ul 
[1213] loop 0 , 2 , move 4 , 2 / ua 
[1214] loop 0 , 4 , move v0 , 3 * v0 
[1215] loop 0 , 6 , move ul + ul , ul / 4 
[1216] ( move ul , ua - 4 ; move 4 , ua ; move ua , 4 * 2 ) 
[1217] ( move ua , ua ; move ua , 3 * 3 ) 
[1218] ( loop 0 , 6 , move 3 , ua + 2 ; move v0 , v0 ) 
[1219] loop 0 , 3 , move 2 , 2 / ua 
[1220] ( move 4 , ul - 2 ; move 4 , ul ) 
[1221] loop 0 , 5 , move ua + ul , 4 
[1222] ( move 4 , 0 ; move 3 , 4 ) 
[1223] loop 0 , 4 , move v0 , 3 / v0 
[1224] ( move ua , ua * ua ; move ua + ul , ul ) 
[1225] ( move ul , 0 - 3 ; move ua , ul ) 
[1226] ( move 4 , 2 ; move 2 , 2 ) 
[1227] loop 0 , 2 , move 3 + 2 , 3 - v0 
[1228] ( move 2 , 0 ; move ua + 2 , ul ) 
[1229] ( loop 0 , 6 , move ul , v0 / 4 ; move v0 , ua - ul ) 
[1230] ( move 4 , 3 ; move 4 , ua * ua ) 
[1231] ( move 3 , 0 ; move ua + ul , ul ) 
[1232] move 4 * 2 , 2 / 3 
[1233] ( move ua , 2 / ua ; move 3 , ul ) 
[1234] ( move ua , ua ; loop 0 , 5 , move 3 , 3 ) 
[1235] ( move ul , ul ; loop 0 , 3 , move 3 , 4 ; move v0 , 2 ) 
[1236] loop 0 , 7 , move 2 , ua / v0 
[1237] ( move ul - ua , 4 ; move 2 , 2 ) 
[1238] loop 0 , 4 , move 2 * v0 , 2 * v0 
[1239] loop 0 , 6 , move ua - ul , ua - v0 
[1240] ( move ua , ul ; move 3 , 2 - ua ; move ua , ul ) 
[1241] loop 0 , 6 , move ul - v0 , ul + v0 
[1242] ( move 3 + 2 , 3 ; move 3 , ul ) 
[1243] ( move ul - ua , ul ; move 3 - ua , ul ) 
[1244] loop 0 , 3 , move 2 , v0 * v0 
[1245] ( loop 0 , 4 , move ul , ua / v0 ; move v0 + v0 , ul ) 
[1246] ( move ua , 0 ; move 4 , ua * ua ) 
[1247] ( move ul , ua / 3 ; move ua , 0 - 4 ) 
[1248] ( move ua , 2 ; move ua + ul , ua * ua ) 
[1249] ( move 3 , 2 ; move ua , 4 ) 
[1250] ( move ul / ua , 3 ; move 3 , ul ; move ua , ul / 3 ) 
[1251] loop 0 , 6 , move 4 + 3 , 4 
[1252] ( move ua , 0 ; move ua , ua / 3 ) 
[1253] loop 0 , 5 , move ua / v0 , 3 / v0 
[1254] loop 0 , 3 , ( move ul + v0 , v0 ; move ua , ul ) 
[1255] ( move ul , ua * ua ; move ua , ul ) 
[1256] ( loop 0 , 2 , move 3 , 2 ; move v0 , ul ) 
[1257] ( move 4 * 2 , ua - ul ; move ul , ul ) 
[1258] loop 0 , 4 , move 2 * v0 , v0 + 2 
[1259] ( move ua , 4 + 4 ; move 2 , 4 - 2 ) 
[1260] loop 0 , 6 , move ua , ua * ua 
[1261] ( move 2 , 3 ; move 3 , ul ) 
[1262] loop 0 , 6 , move v0 , 0 - 2 
[1263] loop 0 , 3 , move ua + 2 , ua / 3 
[1264] ( move ua , 0 ; move ul - 4 , 4 ) 
[1265] loop 0 , 5 , move ul + v0 , v0 * 4 
[1266] loop 0 , 7 , move 4 , v0 * v0 
[1267] ( loop 0 , 6 , move ul , ul ; move ul + v0 , v0 * 3 ) 
[1268] ( move ul , 4 ; loop 0 , 4 , move ua - 2 , ul ) 
[1269] loop 0 , 3 , ( move ul , 0 ; move 4 , v0 ) 
[1270] ( move ul - ua , ua ; move 2 , 3 + 2 ) 
[1271] ( loop 0 , 5 , move 2 , v0 / ua ; move ul , ul ) 
[1272] ( move 3 / 2 , ua ; loop 0 , 4 , move v0 , v0 - 3 ) 
[1273] ( move 4 , 2 ; move 3 , 2 ) 
[1274] loop 0 , 5 , move v0 - 2 , 4 
[1275] loop 0 , 3 , move 3 + 2 , v0 
[1276] ( move 2 , 4 ; move ua , 4 ) 
[1277] ( move 0 - ua , ul ; move ua , ul ) 
[1278] loop 0 , 4 , move 4 , ua * ua 
[1279] ( move 4 , 3 ; move ua , ua * ua ) 
[1280] ( move ua , ul ; move ul , 2 ; move 3 , ul ) 
[1281] ( move 2 , ul ; move ua , 4 ) 
[1282] ( move ua , 4 ; loop 0 , 4 , move v0 , v0 ) 
[1283] loop 0 , 4 , move ul - ua , 4 
[1284] ( move ua + ul , 0 ; loop 0 , 5 , move v0 , v0 ) 
[1285] loop 0 , 6 , move ua + ul , 2 
[1286] loop 0 , 7 , move 3 / v0 , 2 + v0 
[1287] ( move ul , 3 ; loop 0 , 6 , move 2 , v0 ) 
[1288] ( move ua , 0 ; move ul , 3 + 2 ) 
[1289] ( move 4 , 3 ; move ul , 2 ) 
[1290] loop 0 , 3 , move 3 , v0 - 4 
[1291] ( loop 0 , 2 , move 4 , v0 ; move ul , ul ) 
[1292] ( move 3 , 4 ; move 2 , 2 ) 
[1293] loop 0 , 5 , move v0 , ul / 4 
[1294] loop 0 , 3 , move 2 + v0 , v0 + v0 
[1295] loop 0 , 7 , move 4 - ua , ua * ua 
[1296] ( move ua , ul - ua ; loop 0 , 4 , move 2 , 2 - v0 ) 
[1297] ( move ua , ul ; move 4 , 4 ) 
[1298] ( move ua , ua ; loop 0 , 4 , move 4 / v0 , 3 - ul ) 
[1299] ( move 4 , ua - ul ; move ua , 4 ) 
[1300] loop 0 , 5 , move ul , ul / v0 
[1301] ( move ua , ul ; move ul - ua , 2 ) 
[1302] ( move ul + ul , ua / 4 ; move ua , 3 ; move ua / 3 , 2 ) 
[1303] loop 0 , 2 , loop 1 , 3 , move 2 , v1 
[1304] ( move ua , ul ; move ua , 3 ) 
[1305] ( move 2 , 0 ; move ua , 3 ) 
[1306] loop 0 , 3 , move 3 , ua * ua 
[1307] ( move 0 - ua , ul ; move 3 , 3 ) 
[1308] ( move 3 , 0 ; move ua + ul , 4 ) 
[1309] loop 0 , 5 , move 0 - 3 , ua / v0 
[1310] ( move ua , 0 - 2 ; move ul , ul ) 
[1311] ( loop 0 , 5 , move v0 , v0 ; move v0 , 4 ) 
[1312] ( move ua - 2 , ua ; move ua + ul , ul ) 
[1313] loop 0 , 3 , move 0 - ua , 3 
[1314] ( move ul - ua , ul ; move ul , 3 + 3 ; move 2 , 4 + ul ) 
[1315] ( move ua , ul / ua ; move ua , 2 ) 
[1316] ( move ua , 2 ; move ul , 2 ) 
[1317] loop 0 , 6 , move v0 - ul , 2 * v0 
[1318] loop 0 , 4 , move 2 / v0 , ul 
[1319] ( move ua , 2 ; move 3 , ul / 4 ) 
[1320] ( move ul , 0 ; loop 0 , 6 , move 3 , ua / v0 ) 
[1321] ( v0 = 4 / ua ; move ua , ul + ul ; move ua , v0 + ul ) 
[1322] ( move ua , ul / 4 ; move ul , 4 + 3 ) 
[1323] ( move ua , ua - 2 ; move 4 + ul , ua * ua ) 
[1324] ( move ua , ua ; loop 0 , 3 , move v0 , 2 ) 
[1325] loop 0 , 6 , move 3 + v0 , v0 / 2 
[1326] loop 0 , 3 , move 2 , 2 
[1327] ( move ua , 4 * 2 ; move ua , ul ) 
[1328] ( move 2 , 4 ; move ua , ul - 3 ) 
[1329] ( move 3 , 2 ; move 2 , ul ) 
[1330] ( move ua , ua - 2 ; move 3 , 4 ) 
[1331] loop 0 , 6 , move 3 , v0 - 3 
[1332] ( move ua , 2 ; move ua , 4 ) 
[1333] ( loop 0 , 4 , move 2 , v0 * v0 ; move ua , ul ) 
[1334] loop 0 , 6 , move v0 + ul , 4 
[1335] ( move 4 , 2 ; move ua - ul , ul ) 
[1336] ( move 4 + ul , ul ; move 2 , 2 ) 
[1337] ( move ua , 0 ; loop 0 , 3 , move ul , ul ) 
[1338] ( move ua , ul ; loop 0 , 2 , move ua , 2 ) 
[1339] loop 0 , 6 , move v0 + 2 , 3 
[1340] loop 0 , 4 , move 4 , v0 + 2 
[1341] ( move ul , 3 ; move 4 * 2 , ul ) 
[1342] ( move ul , ul ; move ua , 4 + ul ; move ua + ul , ul + ul ) 
[1343] ( loop 2 , 2 , move 2 , 4 ; move 2 , v2 ) 
[1344] loop 0 , 5 , move v0 - 4 , 2 / 4 
[1345] loop 0 , 6 , move 3 / v0 , v0 + ul 
[1346] loop 0 , 5 , move v0 , 3 / v0 
[1347] ( move 0 , 3 ; loop 0 , 3 , move 3 , v0 ) 
[1348] ( move 3 + ul , ul ; move ul - ua , 2 ) 
[1349] ( move 2 / ua , 3 ; move ua , 4 + 3 ; move ua , 4 / 2 ) 
[1350] loop 0 , 6 , move ua / 3 , v0 + 4 
[1351] ( move 2 , ul / ua ; move ua , ul ) 
[1352] ( move ul , 4 * 3 ; move ua , 4 ) 
[1353] ( move ul , ua - ul ; move ua , ua * ua ) 
[1354] ( move ul - ua , 0 ; move 3 , 4 ) 
[1355] loop 0 , 2 , move 4 , 3 
[1356] ( move 2 , ul ; move ua , 3 ) 
[1357] loop 0 , 3 , move 2 , ua / 3 
[1358] move 3 * 3 , 3 
[1359] ( move 3 / 2 , 4 - ul ; move 4 , ul ) 
[1360] loop 0 , 5 , move ul , 4 * 3 
[1361] loop 0 , 5 , move ua - ul , v0 
[1362] loop 0 , 2 , move 0 - 3 , v0 
[1363] ( move ua , ua * ua ; move ua , 4 ) 
[1364] loop 0 , 3 , ( move v0 , v0 * v0 ; move v0 , v0 ) 
[1365] ( move ua , 2 ; loop 0 , 2 , move 4 , ua * ua ) 
[1366] ( move ua , ua - ul ; move 4 , ua - ul ) 
[1367] loop 0 , 4 , move v0 , 2 / v0 
[1368] ( move ua , 3 / ua ; move 3 , ul + ul ) 
[1369] loop 0 , 2 , move v0 - 3 , v0 + 3 
[1370] loop 0 , 2 , move 0 - 4 , ul 
[1371] loop 0 , 2 , move ua - v0 , ua * ua 
[1372] ( loop 0 , 6 , move ua , 3 ; move v0 , v0 ) 
[1373] loop 0 , 5 , move 3 / v0 , ul - v0 
[1374] ( move ua , 2 ; move ua , 3 ) 
[1375] ( move ua + ul , 4 ; move ua + ul , 2 ) 
[1376] ( move ua + 2 , ul ; move 0 - 2 , 4 ) 
[1377] ( move 4 , 0 ; move 4 , 2 / 3 ) 
[1378] ( move ua , 3 ; move ua , ua * ua ) 
[1379] ( move ua , ua * 3 ; move ul , 2 ; move ua + ul , ul ) 
[1380] ( loop 0 , 3 , move v0 , v0 + v0 ; move v0 , v0 ) 
[1381] loop 0 , 3 , loop 1 , 2 , move v1 + 3 , v0 
[1382] ( move ul - 4 , 3 ; move ua - ul , 4 + 3 ) 
[1383] ( move ua , ua - 2 ; move 4 , 4 ) 
[1384] ( move ul , 2 ; move ua , ul ) 
[1385] loop 0 , 6 , move 3 - v0 , v0 
[1386] loop 0 , 3 , move v0 + 4 , ul + v0 
[1387] ( move ua , ua - 2 ; move ul , 4 ) 
[1388] ( move 0 , ul ; loop 0 , 6 , move v0 , 2 ) 
[1389] ( move 2 , ul ; move 4 , 2 ) 
[1390] ( move 3 , 3 ; move 2 , 2 ) 
[1391] ( move ua - ul , ul ; move 3 - ua , 2 ) 
[1392] loop 0 , 2 , move ua + v0 , 3 - v0 
[1393] loop 0 , 5 , move ul - v0 , ul + v0 
[1394] ( move ua + ul , ua ; move ua - 4 , ul ) 
[1395] ( move ul , 4 ; move ua , ua + ul ; move 4 , 2 ) 
[1396] ( move 4 / 3 , ua ; move ua , ua - ul ) 
[1397] ( move ul , 3 ; move ua , ua * ua ) 
[1398] loop 0 , 7 , move 2 - v0 , v0 
[1399] loop 0 , 6 , move 4 - ua , v0 + v0 
[1400] loop 0 , 3 , ( move ul , ul ; move ua , v0 ) 
[1401] loop 0 , 4 , move 2 , v0 - 2 
[1402] ( move ua / 2 , ua ; move 2 , ul ; move 4 , ul - ua ) 
[1403] loop 0 , 3 , move v0 * 2 , ul / ua 
[1404] loop 0 , 7 , move 3 , ua / v0 
[1405] ( move ua , 4 / ua ; move ua , 2 ) 
[1406] ( move ua , ua ; move ua , 0 - 3 ) 
[1407] loop 0 , 3 , move v0 * 4 , 3 
[1408] ( move ua , 3 * 3 ; move 3 , ul ) 
[1409] loop 0 , 6 , move 3 , ua / v0 
[1410] ( loop 0 , 6 , move 2 , ul ; move ua , ul ) 
[1411] ( move ul , 4 / ua ; move ua , ul ) 
[1412] loop 0 , 2 , loop 1 , 2 , move 4 - ua , v0 
[1413] ( move ua + ul , 0 - ul ; move ua , 3 ) 
[1414] ( move ua , ul ; move 4 + ul , 4 ) 
[1415] loop 0 , 3 , ( move v0 , ua ; move 0 - 3 , ul ) 
[1416] loop 0 , 2 , move v0 - ua , v0 * 4 
[1417] ( move 3 , 3 ; move ul , 2 ) 
[1418] ( move ul , ul / 3 ; ( move ul , 0 ; move ua + ul , ul ) ) 
[1419] ( move ua , 3 ; move ul , 2 ; move 2 , 2 ) 
[1420] loop 0 , 6 , move ua - ul , 2 
[1421] loop 0 , 4 , move 2 , 0 - 2 
[1422] ( move ul - ua , ul ; move 3 + 3 , 2 / 3 ) 
[1423] loop 0 , 5 , move ul , v0 * v0 
[1424] ( move 3 , 4 ; move 2 , 3 ) 
[1425] ( move ua + ul , 0 ; move 4 , 2 ) 
[1426] loop 0 , 2 , loop 1 , 3 , move v1 - ua , 2 
[1427] loop 0 , 2 , move 4 + 4 , 2 
[1428] ( move 4 , 3 ; move 4 - 2 , 0 - ul ) 
[1429] loop 0 , 2 , move v0 + 3 , v0 - 2 
[1430] ( move ua , 2 / ua ; move ua , ul ) 
[1431] ( move 3 , 4 ; move ua , 4 ) 
[1432] ( loop 0 , 6 , move 2 , v0 ; move ul , v0 ) 
[1433] ( move ua , 4 / ua ; move 2 , ul ) 
[1434] loop 0 , 2 , move 0 - 4 , v0 
[1435] ( move ua - ul , 2 ; move 4 , ul ) 
[1436] ( loop 0 , 5 , move v0 , ua - v0 ; move v0 , v0 ) 
[1437] ( move 4 , 4 ; move ua , 4 ) 
[1438] ( move ua , 4 ; move 2 , ul ) 
[1439] ( move ul , 4 ; move ua , 4 ) 
[1440] ( move ul - ua , ua ; move ua - ul , ua / 4 ) 
[1441] ( move 3 , 3 ; move ua + ul , ua - ul ) 
[1442] loop 0 , 5 , move ua - v0 , 4 / v0 
[1443] ( move 2 , ua ; move ua , 4 / ua ) 
[1444] loop 0 , 3 , ( move ua , v0 + v0 ; move ul , ul ) 
[1445] ( loop 0 , 6 , move ua / 4 , v0 ; move ul , ul ) 
[1446] loop 0 , 7 , move 0 - 2 , v0 
[1447] ( move 0 , ul ; loop 0 , 5 , move 2 , ul ; move ul , ua ) 
[1448] loop 0 , 4 , move 0 - ul , ul - v0 
[1449] ( loop 0 , 5 , move 4 , v0 ; move 4 , v0 ) 
[1450] loop 0 , 3 , move v0 + 2 , 4 
[1451] ( move 4 + ul , ua ; loop 0 , 4 , move v0 , v0 - ul ) 
[1452] ( move 2 , 0 ; move ua , ul - 2 ) 
[1453] loop 0 , 4 , move v0 , v0 - 3 
[1454] loop 0 , 3 , ( move v0 / ua , ul ; move 2 + v0 , ua ) 
[1455] ( loop 0 , 6 , move ul , 0 ; move v0 , v0 ) 
[1456] ( loop 0 , 6 , move v0 , v0 - ul ; move 3 , ua - v0 ) 
[1457] ( move 2 - ua , ul ; move ua , ua + 3 ) 
[1458] ( move 2 , ul ; loop 0 , 4 , move ul , v0 ) 
[1459] ( move ua , ua * ua ; loop 0 , 3 , move 2 , v0 ) 
[1460] ( move 3 , ua - 2 ; move ul - ua , ul ) 
[1461] loop 0 , 5 , move 2 - v0 , 4 
[1462] ( move ua , 4 / ua ; move 4 , 4 ) 
[1463] loop 0 , 7 , ( loop 1 , 8 , v2 = v0 ; move v1 , 2 ) 
[1464] ( loop 0 , 6 , move v0 , ul ; move 2 , 0 ) 
[1465] ( move 4 , ul - 4 ; move 3 , ul - ua ; move ul , 3 / ua ) 
[1466] loop 0 , 5 , move v0 , v0 - 3 
[1467] ( move 0 - 4 , ul ; move ua , ul ) 
[1468] ( move 2 , ul ; loop 0 , 3 , move v0 + ul , v0 ) 
[1469] loop 0 , 3 , ( move ua + v0 , 2 ; move ul , v0 ) 
[1470] loop 0 , 5 , move v0 , v0 + 3 
[1471] ( move ul - ua , 0 ; move ua , 2 ) 
[1472] loop 0 , 7 , move v0 , v0 / 3 
[1473] loop 0 , 2 , loop 1 , 3 , move v1 + v0 , v1 
[1474] ( move 4 , 3 ; move ul - 4 , 4 * 3 ) 
[1475] ( loop 0 , 4 , move v0 , 2 ; move v0 , 0 ) 
[1476] ( move ul , 4 ; move 4 , 2 ) 
[1477] loop 0 , 4 , move v0 * v0 , v0 - ul 
[1478] ( move ul - ua , 2 / 4 ; move ua , ua - ul ) 
[1479] loop 0 , 2 , move 4 , v0 / 4 
[1480] ( move ua , ul ; move 2 - ua , ul ) 
[1481] ( move 3 * 3 , ul ; move ua , 4 ) 
[1482] loop 0 , 3 , move 4 , v0 / 2 
[1483] ( move ua - ul , 0 ; move ua , ul ; move ul , ul ) 
[1484] loop 0 , 4 , move v0 - ul , 4 / v0 
[1485] loop 0 , 2 , move 3 , 2 
[1486] loop 0 , 2 , move ua - v0 , 2 
[1487] loop 0 , 7 , move 3 + v0 , 2 
[1488] loop 0 , 3 , ( move v0 , v0 * 3 ; move v0 , v0 ) 
[1489] loop 0 , 3 , move 3 / v0 , ul 
[1490] ( loop 0 , 6 , move 4 , v0 ; move ul , 0 ) 
[1491] ( move 3 + 2 , 4 ; move 4 , 2 ) 
[1492] loop 0 , 3 , move v0 - 3 , 2 * v0 
[1493] ( move 4 , 0 ; move 2 , 4 ) 
[1494] loop 0 , 3 , move 2 , 2 / v0 
[1495] ( move ua , 0 ; move 3 + 2 , 2 ) 
[1496] loop 0 , 4 , move 2 , v0 / ua 
[1497] loop 0 , 4 , move ua / 3 , ul 
[1498] ( move ul , 4 ; v0 = 2 ; loop 1 , 4 , move 4 , ul ) 
[1499] ( move 2 , ua - 2 ; move ua , ul ) 
[1500] ( move 4 , 3 ; move ua , ul ) 
[1501] ( move ua + 4 , ul ; move 3 , 4 ) 
[1502] ( move ua , 4 ; move 4 , 4 ) 
[1503] ( move ua , 2 / ua ; move 2 + 2 , 4 ) 
[1504] loop 0 , 2 , move v0 - 3 , 2 
[1505] ( move ua / 4 , 0 ; move 3 , ul ) 
[1506] ( loop 0 , 4 , move v0 , ul ; move ua , 0 ) 
[1507] loop 0 , 4 , move v0 + ul , v0 * v0 
[1508] ( move 4 , 3 ; move ua , 2 ; move ua , ul ) 
[1509] ( loop 0 , 4 , move v0 , ul ; move ul , ul ; move ua , v0 ) 
[1510] ( ( move 4 , ua ; move ua - ul , 2 ) ; move ua , ul ) 
[1511] ( move ul , 2 ; move 3 , 2 ) 
[1512] ( move 4 - ua , ua ; move ua , 4 ) 
[1513] ( move ua , ul ; move 0 - ua , ul ) 
[1514] loop 0 , 3 , move ua + v0 , 4 
[1515] loop 0 , 5 , move v0 - ul , v0 - 4 
[1516] ( move ul + ul , 3 / ua ; move 4 , 4 ; move ua , ul ) 
[1517] ( move ua , ul ; move ul , ul ; move ua , ul ) 
[1518] loop 0 , ul , loop 1 , 4 , move ua , 4 * 4 
[1519] ( v0 = 4 ; move v0 , v0 ; move v0 , ua / v0 ) 
[1520] loop 0 , 4 , move 3 + 2 , v0 
[1521] ( move ua + 2 , 2 ; move 4 , ul + ul ) 
[1522] loop 0 , 5 , move ul - v0 , ul 
[1523] loop 0 , 3 , move ua - v0 , 2 * v0 
[1524] ( move 2 - ua , 2 ; move ua , ul / 2 ) 
[1525] loop 0 , 6 , move ua / 3 , v0 * v0 
[1526] ( move ul , 2 ; loop 0 , 2 , move 3 , 4 ) 
[1527] ( move ua , 3 ; move ua , 2 - 3 ) 
[1528] loop 0 , 6 , move v0 - 2 , v0 * v0 
[1529] ( move ul , 4 ; move ua + ul , ul ; move ul , ul ) 
[1530] ( move 3 , ul ; move ua , 3 + 2 ) 
[1531] ( move 3 , 3 ; move ul - ua , 2 ) 
[1532] ( move 2 - ua , ua - 2 ; move ul - ua , ul ) 
[1533] ( move 0 - 4 , ua / 2 ; move ua + ul , ul / 3 ) 
[1534] ( loop 0 , 6 , move v0 , v0 ; move v0 , 0 - ul ) 
[1535] loop 0 , 3 , loop 1 , 2 , move ua - v1 , 3 
[1536] loop 0 , 7 , move v0 - 3 , ul 
[1537] ( move 4 , 2 ; move ul , ul ) 
[1538] ( loop 0 , 5 , move v0 , 2 ; move v0 , v0 ) 
[1539] ( move ul - ua , 0 ; move 3 , ul ) 
[1540] ( loop 0 , 6 , move ul , v0 ; move ua , v0 ) 
[1541] ( move 3 , 4 ; move 3 , 2 ) 
[1542] loop 0 , 3 , move 3 , 3 + 2 
[1543] loop 0 , 3 , move 3 , 4 - v0 
[1544] loop 0 , 6 , move ul - v0 , ul - v0 
[1545] ( loop 0 , 6 , move v0 , v0 ; move ul - v0 , v0 ) 
[1546] loop 0 , 5 , move 2 , 4 + 4 
[1547] loop 0 , 5 , move ul + v0 , 3 - v0 
[1548] loop 0 , 3 , move ua / v0 , 2 + v0 
[1549] ( move ua + 2 , ua + 3 ; move ua , ul + ul ) 
[1550] loop 0 , 3 , move 3 , 4 / v0 
[1551] ( move ul , 4 + ul ; move 2 , ul ; move ua , ul ) 
[1552] ( move 2 , 2 ; move ua , 4 + ul ) 
[1553] loop 0 , 6 , move 3 , 3 
[1554] ( move ua - ul , ua ; move 4 , 2 ) 
[1555] loop 0 , 4 , move 2 , 2 + v0 
[1556] loop 0 , 3 , move 3 - ua , ul 
[1557] ( move ua , 3 ; move 2 , 3 / 4 ) 
[1558] loop 0 , 5 , move 3 , v0 * v0 
[1559] ( move ul , 3 ; loop 0 , 4 , move ua , v0 + ul ) 
[1560] ( move ua + ul , 4 ; move ua , 4 + 4 ) 
[1561] loop 0 , 6 , move ul - v0 , v0 / ua 
[1562] ( move 3 + ul , ua - ul ; loop 0 , 6 , move v0 , ul ) 
[1563] ( move ul , ul - 2 ; move ua , ul / ua ) 
[1564] ( move 4 , 2 ; move ua , 2 ) 
[1565] ( move 3 - ua , ul ; move ua , 2 ; move 2 , ua * ua ) 
[1566] ( move 4 + ul , ul ; move 4 , 4 / ua ) 
[1567] loop 0 , 2 , move 4 + 4 , 4 - v0 
[1568] ( move 2 , ul ; move 4 + 3 , 2 ) 
[1569] loop 0 , 4 , move v0 , ua / 4 
[1570] loop 0 , 5 , move 4 , v0 + ul 
[1571] loop 0 , 2 , loop 1 , 2 , move ul , v1 - v0 
[1572] loop 0 , 3 , move 3 , v0 - 2 
[1573] loop 0 , 3 , ( move ua , ua * 3 ; move ul / v0 , 4 ) 
[1574] loop 0 , 5 , move ul , 3 + 3 
[1575] loop 0 , 3 , ( move 4 / v0 , ul ; move ul / 3 , v0 ) 
[1576] loop 0 , 3 , move 4 , ul - v0 
[1577] ( move 0 - ua , 3 ; move ua , ul ) 
[1578] ( move 4 * 2 , 0 ; move ul , ul ) 
[1579] ( move ua + ul , ul ; move 2 , ul ) 
[1580] ( move 3 , ul ; move ua + ul , ua / 3 ) 
[1581] loop 0 , 6 , move ul - v0 , 3 / ua 
[1582] loop 0 , 7 , move v0 , v0 - 3 
[1583] ( move 2 , ul ; loop 0 , 6 , move v0 , v0 + ul ) 
[1584] loop 0 , 2 , move v0 - ua , 2 - v0 
[1585] loop 0 , 4 , move v0 - ua , 0 - 3 
[1586] ( move 4 , 2 - ul ; loop 0 , 6 , move ul , ul ) 
[1587] loop 0 , 7 , move ua - v0 , ul + v0 
[1588] ( loop 0 , 3 , move ua , 4 ; v1 = 2 ; move v1 , ul ) 
[1589] ( move ul , 0 ; move 0 - ua , 4 ) 
[1590] loop 0 , 7 , move 2 , 2 * v0 
[1591] ( move ul , ua - 4 ; loop 0 , 5 , move ul , ul / v0 ) 
[1592] ( move ua , ul ; move 2 , 4 + ul ) 
[1593] ( move 3 , ua ; move ua , 4 + ul ) 
[1594] ( move ua + ul , ua - 2 ; move 3 , 0 - ul ) 
[1595] loop 0 , 4 , move v0 * v0 , v0 * v0 
[1596] loop 0 , 7 , move ua , 4 * 2 
[1597] loop 0 , 6 , move v0 - 4 , ul 
[1598] loop 0 , 2 , ( move 3 , 2 ; move ua , v0 ; v1 = ul ) 
[1599] ( move 0 , ul ; loop 0 , 4 , move ua , 2 ) 
[1600] loop 0 , 4 , move 3 / 2 , ul 
[1601] ( move ua , 0 - ul ; move 3 , ul / ua ) 
[1602] ( loop 0 , 5 , move v0 , v0 - 3 ; move v0 , v0 ) 
[1603] ( move ul , 0 - ul ; move ua , 2 ) 
[1604] ( move ul , 3 ; move ua , ul ) 
[1605] loop 0 , 6 , move 0 - 2 , v0 
[1606] ( loop 0 , 5 , move ul , v0 ; move v0 , 4 ) 
[1607] ( move 3 , 3 ; move 3 , ul ) 
[1608] ( move ul - ua , ua - ul ; move ua - 2 , ua - ul ) 
[1609] loop 0 , 2 , move ua + 2 , 4 
[1610] ( move ul , ua / 3 ; move ul - ua , ul ) 
[1611] ( move ul , ul ; loop 0 , 5 , move 4 , ul ) 
[1612] ( move 3 - ua , ul ; loop 0 , 4 , move v0 , ul + v0 ) 
[1613] loop 0 , 3 , move ua , 4 * v0 
[1614] loop 0 , 6 , move v0 - 3 , 4 
[1615] loop 0 , 5 , move 4 , 4 / v0 
[1616] ( move ua , ua - 4 ; move ul , ul ) 
[1617] loop 0 , 4 , move 2 , v0 - ul 
[1618] ( move 2 , 4 ; move 4 , 3 / ua ) 
[1619] ( move 3 , 4 + ul ; loop 0 , 4 , move v0 , v0 ) 
[1620] ( v0 = 2 / 3 ; loop 1 , 6 , move v0 - ua , 2 ) 
[1621] ( move ul - ua , ul ; move 3 , ul ) 
[1622] ( move 4 + 3 , ul ; move 3 , ul ) 
[1623] ( move ua , 0 ; move ul - ua , 4 + ul ) 
[1624] ( move ul , 4 ; loop 0 , 2 , move ua , ul ) 
[1625] loop 0 , 4 , move 4 * 2 , 3 
[1626] loop 0 , 4 , move ul + v0 , 4 + v0 
[1627] loop 0 , 6 , move v0 , 4 * v0 
[1628] loop 0 , 7 , move ul - v0 , v0 * v0 
[1629] ( move 3 , 3 + 2 ; move ua , ul ) 
[1630] loop 0 , 7 , move 0 - ul , v0 / 3 
[1631] ( move ua + ul , ul ; move 4 , 4 ) 
[1632] ( move 2 , ul ; move ua , ul / 2 ) 
[1633] loop 0 , 2 , loop 1 , 2 , move 2 , v1 
[1634] loop 0 , 6 , move v0 , 0 - 4 
[1635] ( move 3 , ul - 4 ; move ua , 0 - ul ; move ul , 2 ) 
[1636] loop 0 , 3 , move 4 , 2 / v0 
[1637] loop 0 , 3 , ( move v0 , ul ; move ua , v0 + ul ) 
[1638] loop 0 , 6 , move v0 - 3 , ul 
[1639] ( move ua + 2 , ul ; move ua , 2 ) 
[1640] loop 0 , 3 , ( move v0 , 4 ; move 3 * v0 , ua / v0 ) 
[1641] ( move ua + 2 , 3 + ul ; move ul , 2 ) 
[1642] loop 0 , 2 , loop 1 , 3 , move v1 , v0 
[1643] ( move ua - ul , 4 ; move 3 , ul ) 
[1644] loop 0 , 6 , move ul , 4 - v0 
[1645] ( move ua , 0 - ul ; move ua , 4 ) 
[1646] loop 0 , 4 , move 2 , v0 + 3 
[1647] loop 0 , 3 , move 4 , 3 - v0 
[1648] loop 0 , 6 , move ul - v0 , v0 * v0 
[1649] loop 0 , 2 , move ua + ul , ul + v0 
[1650] ( move ul + ul , ua - ul ; move ua , ul / 2 ) 
[1651] loop 0 , 2 , move 4 , ua - 2 
[1652] loop 0 , 5 , move v0 + ul , ua / v0 
[1653] loop 0 , 6 , move 3 - v0 , ul 
[1654] loop 0 , 7 , move v0 / 3 , v0 + ul 
[1655] loop 0 , 7 , move ua + ul , 4 
[1656] ( move ua , ul ; move ua , ua / 3 ) 
[1657] loop 0 , 7 , move 4 - ua , v0 
[1658] ( move ul - ua , ul ; move ua , ua * ua ) 
[1659] loop 0 , 5 , move ua , 0 - 4 
[1660] loop 0 , 7 , move ua - 4 , 2 + v0 
[1661] ( move ua , 4 ; loop 0 , 4 , move v0 + ul , v0 ) 
[1662] ( move 0 - ua , 0 ; move ua , ul ) 
[1663] loop 0 , 6 , move 3 - v0 , 4 
[1664] ( move ua , 3 ; move ul + ul , 3 / 2 ) 
[1665] ( move 4 , 2 / ua ; move ua , 4 + ul ) 
[1666] ( move ua - ul , ua ; move ua , ua + 4 ; move 4 , ua + 4 ) 
[1667] ( move 4 + 3 , 0 ; move ul , ul ) 
[1668] loop 0 , 2 , move 0 - 3 , ul 
[1669] ( move 3 , 0 ; move 2 - ua , ul ) 
[1670] loop 0 , 3 , move v0 - 4 , ul + v0 
[1671] loop 0 , 5 , move 4 , 4 * 2 
[1672] ( move ua , ua ; loop 0 , 2 , loop 1 , 3 , move v1 , ul ) 
[1673] ( move 4 , 4 + ul ; move ua , 4 ) 
[1674] ( move 3 , 4 ; move ua , 3 ) 
[1675] ( move ul , 2 ; move ul - ua , 4 ) 
[1676] ( move ua - ul , ua ; move 4 , 4 ) 
[1677] ( move ua , ul ; move 3 , 4 ) 
[1678] loop 0 , 6 , move v0 - 2 , 4 
[1679] ( move 4 , ua * ua ; move 2 , 0 - ul ) 
[1680] ( loop 0 , 5 , move 3 , ul ; move ua - v0 , v0 ) 
[1681] ( move 2 + ul , 2 ; loop 0 , 3 , move v0 + v0 , v0 ) 
[1682] loop 0 , 5 , move ul - ua , 4 
[1683] loop 0 , 6 , move 2 - v0 , 2 
[1684] ( move ua , ua ; move ua - 2 , 4 ; move ul , ul ) 
[1685] ( move 4 , 2 ; move 2 , ul ) 
[1686] loop 0 , 4 , move ua + v0 , 3 
[1687] loop 0 , 3 , move 0 - 2 , 4 / ua 
[1688] loop 0 , 2 , move ua + ul , 2 * v0 
[1689] loop 0 , 7 , move 4 , 3 / 2 
[1690] ( move 4 , 0 ; move ua , 3 ) 
[1691] ( move ua + 2 , 3 ; move ua + ul , 4 ) 
[1692] loop 0 , 4 , move ul + v0 , 4 * v0 
[1693] ( move ua - 2 , ul ; move 0 , ul ; move ua , ul / ua ) 
[1694] ( move ua + ul , ul ; move 2 , 4 ) 
[1695] ( move ua , ua ; move 4 , 0 - 2 ) 
[1696] ( move 3 , 0 - 3 ; move ua , ul ) 
[1697] ( move ua , 3 ; move ua + ul , 4 ) 
[1698] ( move ul - ua , ua ; move ua - 2 , 4 ) 
[1699] ( move 4 - ua , 2 ; move 3 , 3 * 2 ) 
[1700] loop 0 , 3 , ( move 2 , v0 ; move v0 + v0 , v0 ) 
[1701] ( move ua , ua ; move ua - ul , 3 ; move ua , 3 ) 
[1702] loop 0 , 4 , move 2 , ul / v0 
[1703] ( move 2 , 2 ; move ua , ul - 3 ) 
[1704] ( move ua , 4 / ua ; move 3 , ul ) 
[1705] ( move 3 , ul ; move ua , 3 ) 
[1706] ( move 3 , 0 ; move ua - ul , 4 ) 
[1707] ( move ua , 0 ; move ua , ua * ua ) 
[1708] ( move 2 , 2 ; move ua , ua - ul ) 
[1709] ( move 3 , 4 / 3 ; move ua + ul , ul ) 
[1710] ( move 4 , ua / 3 ; move ua , 2 ) 
[1711] ( move 3 - ua , 3 ; move 4 , ua + 4 ) 
[1712] loop 0 , 3 , ( move v0 + ul , v0 ; move ul , 4 ) 
[1713] loop 0 , 3 , move ua , 0 - 2 
[1714] ( move 4 , ul / ua ; move ua , ua - 4 ) 
[1715] ( move 4 , 3 ; move 3 , 2 ) 
[1716] loop 0 , 6 , move 0 - ua , 2 
[1717] ( move ua , 0 ; move 2 , ul ; move 4 , ul ) 
[1718] ( move ua + 2 , ua ; move ul + ul , ul + ul ) 
[1719] ( move ul - ua , 4 + ul ; move ul - 3 , 2 ) 
[1720] ( move 3 , 2 ; move ua , ua * ua ) 
[1721] loop 0 , 6 , move ul , 4 + 2 
[1722] ( move 4 , ul / ua ; move ul , 2 ; move ua - 2 , ul + ul ) 
[1723] ( loop 0 , 4 , move v0 , ul ; move ua , ul ) 
[1724] ( loop 0 , 4 , move v0 , v0 * v0 ; move 3 , ua ) 
[1725] loop 0 , 6 , move ul , ul 
[1726] ( loop 0 , 3 , move 2 , v0 ; move 4 , ul ) 
[1727] ( move ua , 3 ; move 3 , 4 ) 
[1728] loop 0 , 4 , move 3 , 3 + v0 
[1729] ( move 3 , ul ; move 0 - ua , ul ) 
[1730] loop 0 , 5 , move v0 , 0 - 4 
[1731] ( move 4 , 0 ; move 3 , 4 * 3 ) 
[1732] ( move 2 , 0 ; move ua , ul / ua ) 
[1733] loop 0 , 4 , move v0 , 3 * 3 
[1734] ( loop 0 , 6 , move v0 , ul ; move 4 , ul ) 
[1735] loop 0 , 3 , ( move v0 * 4 , 0 ; move v0 , v0 ) 
[1736] ( move ul - ua , 4 ; move ua , 4 + ul ) 
[1737] loop 0 , 4 , move 3 - ua , ul 
[1738] loop 0 , 2 , loop 1 , 2 , move 2 , v0 
[1739] ( ( v0 = 4 ; move ua , v0 ) ; move v0 , v0 + ul ) 
[1740] ( move 4 * 2 , ul ; loop 0 , 4 , move v0 , v0 ) 
[1741] loop 0 , 5 , move 3 / v0 , v0 / 3 
[1742] ( move ua , ul / ua ; move ua - ul , 4 ) 
[1743] ( move 3 , ul / 3 ; move ua , ul ) 
[1744] ( move 3 , ul ; move 4 - 2 , 4 ) 
[1745] loop 0 , 7 , move v0 / 3 , ul 
[1746] loop 0 , 6 , move v0 / 2 , v0 
[1747] loop 0 , 3 , move 3 , 3 - v0 
[1748] ( move ua , ul ; move ul , 4 ) 
[1749] ( v0 = 3 + 2 ; loop 1 , 6 , move v0 , v0 ) 
[1750] loop 0 , 2 , move 2 - ua , v0 + 3 
[1751] ( move ua , ua ; move 4 / ua , ul ; move ul - ua , ul ) 
[1752] ( move 3 , 3 * 2 ; move ua / 3 , ul ) 
[1753] ( move 0 , 2 ; move ua , 3 / ua ) 
[1754] ( move 3 , 4 ; move ul , 4 ) 
[1755] ( move ua + ul , 3 ; move 2 , 4 ) 
[1756] loop 0 , 2 , ( move ul , ul ; move 2 , ua - v0 ) 
[1757] ( move ua , 0 ; move 4 , 2 ) 
[1758] loop 0 , 5 , move 0 - ul , 2 + v0 
[1759] loop 0 , 6 , move 2 , ul / 2 
[1760] ( move ua , 4 * 4 ; move 4 , ul ) 
[1761] loop 0 , 7 , move 2 , v0 * 4 
[1762] ( move 3 , ul ; move ua , ul - 3 ) 
[1763] ( move 3 , ua ; move ua + 4 , ul ) 
[1764] loop 0 , 4 , move ul - v0 , ul 
[1765] loop 0 , 4 , move 2 * v0 , ua * ua 
[1766] ( move 2 , ua - 4 ; move ua , ul ) 
[1767] loop 0 , 6 , move ua - 2 , v0 
[1768] loop 0 , 5 , move ul - v0 , v0 + v0 
[1769] ( move ua , 4 + ul ; move ua , 3 ) 
[1770] ( move ua , 3 ; move ua , 2 ) 
[1771] ( move ua , ua ; move 4 , 4 ; move ua + ul , 4 ) 
[1772] loop 0 , 6 , move 2 - v0 , ul 
[1773] ( move ua - ul , 0 ; move ua - 2 , ul ) 
[1774] ( move 2 , ul ; move 4 , ul / 2 ) 
[1775] ( move 3 , 3 ; move ua + ul , 4 ) 
[1776] ( move 3 + 2 , 3 ; move 4 , ul ) 
[1777] ( move 4 + ul , ul - 4 ; move ua , ul ) 
[1778] ( move ua - 4 , 0 ; move ua , 2 - 3 ; move 3 , ua + 2 ) 
[1779] loop 0 , 2 , move ua - ul , 3 / 2 
[1780] loop 0 , 6 , move ul + v0 , v0 / 3 
[1781] ( move ua , 0 ; move ua + ul , ua / 4 ) 
[1782] loop 0 , 7 , move 2 / v0 , ul - 2 
[1783] ( move 4 + 4 , 0 ; ( move ua , 2 ; move ua , ua + 2 ) ) 
[1784] loop 0 , 5 , move 3 , ua / v0 
[1785] ( move ul - ua , 2 ; move 2 + ul , 4 ) 
[1786] ( move 3 , ul - 4 ; move 4 , 3 - ul ) 
[1787] ( move 4 , ul ; move 3 , 4 ) 
[1788] loop 0 , 2 , loop 1 , 3 , move v0 + 2 , v1 
[1789] ( move ua + 3 , 4 ; move 2 , ul ) 
[1790] ( loop 0 , 6 , move ul - v0 , ul ; move ua , v0 ) 
[1791] loop 0 , 6 , move ul - v0 , 4 
[1792] ( move ul , 4 ; move ua + 2 , ul ) 
[1793] loop 0 , 4 , move 2 , v0 - 3 
[1794] ( move ul - ua , 3 ; move 2 , 2 ) 
[1795] loop 0 , 7 , move 0 - ul , 4 / ua 
[1796] loop 0 , 5 , move v0 , 4 + 2 
[1797] ( move ua - ul , ua ; move 3 , 2 ) 
[1798] ( v0 = 3 + 2 ; loop 1 , 4 , move v1 + v0 , v1 ) 
[1799] ( move ul , 4 ; move ua , 4 + 4 ) 
[1800] ( move 4 + ul , ul ; loop 0 , 5 , move v0 , ul ) 
[1801] ( move ua , ul ; move 3 , 3 + 2 ) 
[1802] ( move 4 + ul , ul ; move 3 , ul ) 
[1803] ( move 4 , 3 ; move 2 , ul ) 
[1804] ( move 2 , ul ; move ua , 4 + 3 ) 
[1805] ( move ua + 2 , ul ; move 4 , 3 ) 
[1806] ( v0 = 4 ; move v0 , ua - 3 ; move ul + v0 , ul ) 
[1807] ( loop 0 , 2 , move ua , ua / 3 ; move v0 , ua ) 
[1808] ( move ul - ua , 3 ; move ua , ul ) 
[1809] loop 0 , 7 , move ul , 2 / v0 
[1810] ( move ua + 4 , ul ; move ul , 4 ) 
[1811] ( move 3 , ul ; move ua , 0 - ul ) 
[1812] ( move 4 , ul ; move ua + ul , 4 * 3 ) 
[1813] ( move ua / 2 , ua ; move 4 , ua / 3 ) 
[1814] ( loop 0 , 6 , move v0 , v0 ; move ul , 0 ) 
[1815] loop 0 , 5 , move v0 , v0 / 2 
[1816] loop 0 , 4 , move v0 + ul , v0 / 2 
[1817] ( move ua + ul , ua + 4 ; move ua , ul - 4 ) 
[1818] loop 0 , 2 , move 3 , v0 / 3 
[1819] ( move 3 , ua ; move 2 , 4 ) 
[1820] loop 0 , 4 , move ul - 3 , 4 + v0 
[1821] loop 0 , 2 , move v0 - 4 , 2 
[1822] ( move ua , 3 ; move 2 , 2 ) 
[1823] loop 0 , 5 , move ua , 4 * 4 
[1824] loop 0 , 6 , move ua - 3 , ul 
[1825] ( move ua + ul , 2 ; move ua , 2 ) 
[1826] loop 0 , 7 , move 4 , ul 
[1827] ( move ua - ul , 2 ; loop 0 , 5 , move ul , ul ) 
[1828] ( move 3 - ua , 4 ; move 4 , 3 ) 
[1829] loop 0 , 4 , move ul + v0 , 4 / ua 
[1830] loop 0 , 5 , move 3 , ul 
[1831] ( loop 0 , 5 , move ul , v0 ; move 3 , ua ) 
[1832] loop 0 , 2 , move v0 - 4 , ul 
[1833] loop 0 , 5 , move v0 , v0 / 4 
[1834] loop 0 , 4 , move v0 + 4 , 4 
[1835] loop 0 , 4 , move 4 , ul - v0 
[1836] ( move 2 - ua , ul ; move 4 , 3 ) 
[1837] loop 0 , 7 , move 0 - 4 , v0 
[1838] ( loop 0 , 2 , move ua , 4 ; move v0 + ul , v0 - ua ) 
[1839] ( move 3 , 3 ; loop 0 , 6 , v1 = v0 ; move 4 , v1 ) 
[1840] ( loop 0 , 5 , move v0 , ul ; move ul + v0 , v0 ) 
[1841] loop 0 , 6 , move v0 + 3 , ua / 4 
[1842] ( loop 0 , 5 , move v0 , v0 ; move ua , 4 ) 
[1843] ( move ul - ua , 2 + ul ; move 3 , ua + 2 ) 
[1844] ( loop 0 , 4 , move ul , ul ; move ua , 0 ) 
[1845] ( move 3 , 3 ; move ua , ua * ua ) 
[1846] ( move ua , ua / 4 ; move 4 , ul ) 
[1847] ( move ul , ua - 4 ; move ua , 2 ) 
[1848] ( move ua / 2 , ul ; move ua + 3 , 4 ) 
[1849] ( move 2 , 0 ; move 2 , 4 ) 
[1850] ( move 0 , 2 / ua ; move ua + 3 , 4 / ua ) 
[1851] loop 0 , 3 , move 4 / v0 , ul 
[1852] loop 0 , 7 , move v0 - 2 , ul 
[1853] ( move 4 + ul , ul / ua ; move ua , 3 - ul ) 
[1854] loop 0 , 5 , move 3 - v0 , 4 / v0 
[1855] ( move ua , ua ; loop 0 , 3 , move 4 , ul ) 
[1856] ( move ua , 4 ; move ul - ua , ul ) 
[1857] loop 0 , 3 , move 4 , ua * ua 
[1858] loop 0 , 5 , move 3 - ua , v0 
[1859] ( move 2 - ua , 4 ; move ua , 3 + 2 ) 
[1860] ( move ua - ul , ul / 4 ; move ua , 3 + ul ) 
[1861] loop 0 , 6 , move v0 , ua / 4 
[1862] loop 0 , 3 , move ua - v0 , 4 + ul 
[1863] loop 0 , 7 , move ua + ul , 2 
[1864] ( loop 0 , 4 , move v0 , 3 * v0 ; move v0 , ul ) 
[1865] loop 0 , 6 , move ul - ua , 4 
[1866] loop 0 , 7 , move 4 / 3 , v0 
[1867] loop 0 , 2 , move 3 + 2 , 2 
[1868] ( move ua , 3 + 2 ; move ua , ul ) 
[1869] ( move ua , 0 ; move 2 , ul ; move ua , ul ) 
[1870] loop 0 , 2 , move 4 + v0 , 4 
[1871] ( loop 0 , 6 , move v0 , ul - v0 ; move v0 , ul ) 
[1872] loop 0 , 4 , move ua - v0 , 4 
[1873] ( move 4 , 0 - ua ; move ua , 2 ; move 4 , ul ) 
[1874] loop 0 , 4 , move 4 , 0 - ul 
[1875] loop 0 , 6 , move ua + ul , 3 
[1876] ( move ul , 3 ; v0 = ua ; loop 1 , 6 , move v1 , 4 ) 
[1877] ( move 3 , ua - 4 ; move ul + ul , 2 ) 
[1878] loop 0 , 2 , move ua + 2 , ul + v0 
[1879] ( move 2 + ul , 4 ; move 2 + ul , ul ; move ua , ul + ul ) 
[1880] ( move 2 , 4 ; move 4 , ul ) 
[1881] ( move 0 - ua , 4 ; move ua , ul ) 
[1882] loop 0 , 4 , move v0 - 2 , v0 
[1883] ( loop 0 , 3 , move v0 , v0 - 3 ; move ua , v0 ) 
[1884] loop 0 , 4 , move 0 - 3 , ul 
[1885] loop 0 , 7 , move v0 / 2 , ul - v0 
[1886] loop 0 , 6 , move ua + ul , ua - 3 
[1887] loop 0 , 5 , move v0 - ul , 2 
[1888] ( move 4 , 2 ; move ua , 4 + ul ) 
[1889] loop 0 , 3 , loop 1 , 2 , move 2 , v1 
[1890] ( move ua , 0 ; move ul - ua , 2 ) 
[1891] loop 0 , 3 , move v0 + v0 , ua - 2 
[1892] ( move 3 , ul ; move ua , ul / 2 ) 
[1893] ( move ua , 4 ; move 2 , 4 ) 
[1894] loop 0 , 3 , move 0 - 4 , v0 
[1895] ( move 3 , 3 ; move ua + ul , ul ) 
[1896] ( move 0 , 2 ; loop 0 , 6 , move 3 , v0 ) 
[1897] ( move ua , 3 ; move 3 - ua , ul ) 
[1898] ( move ua - ul , 4 / ua ; ( move 4 , 2 ; v0 = ua ) ) 
[1899] ( move 4 , 4 ; ( move ua / 3 , ul ; move ul + ul , ul ) ) 
[1900] ( move 4 , 3 ; move 2 , ua + 2 ) 
[1901] loop 0 , 2 , move v0 - 3 , 4 
[1902] ( move 4 , 2 ; move ua , 4 ) 
[1903] ( move ua , 0 ; move ua , 3 + 2 ) 
[1904] ( move ul - ua , ua ; move ua + 2 , ul ) 
[1905] ( move ua , 4 ; move ua , ua / 4 ) 
[1906] ( move 2 , ua - 4 ; move ua , 2 ) 
[1907] loop 0 , 7 , move v0 - ul , 2 
[1908] loop 0 , 6 , move ul + v0 , ul - v0 
[1909] ( move 4 , ua ; move ua - 4 , 2 ) 
[1910] loop 0 , 2 , move ua , v0 - 4 
[1911] ( move ul , ul ; move ua , 2 / 4 ) 
[1912] ( move ua , ua ; v0 = ua ; move ul - v0 , ua / 4 ) 
[1913] ( move 4 , ua - 2 ; move ua + ul , ua * ua ) 
[1914] ( move 3 - ua , ua ; move ua , 4 + ul ) 
[1915] ( move ul , 3 * 3 ; move ua , 2 ) 
[1916] loop 0 , 3 , ( move 3 , v0 ; move v0 , v0 ) 
[1917] ( move ua , 2 ; move ua , 0 - 2 ) 
[1918] ( loop 0 , 6 , move v0 - ul , v0 ; move ul , v0 ) 
[1919] loop 0 , 4 , move ul , v0 - 3 
[1920] ( move ua , 3 - 4 ; move 4 , ul ) 
[1921] ( move ul , ul / 2 ; loop 0 , 4 , move v0 , 2 ) 
[1922] loop 0 , 3 , move 4 , v0 - ul 
[1923] ( move 4 + 2 , 3 ; move ua , ua - ul ) 
[1924] loop 0 , 5 , move 2 , v0 * v0 
[1925] ( move 4 + ul , 3 ; move 2 , ul ) 
[1926] ( move 4 , ul / 2 ; move ua , ul ) 
[1927] ( move ua + ul , 0 ; move 4 , 4 ) 
[1928] ( move ua + ul , ul + ul ; move ul - 4 , 4 ) 
[1929] ( move ul , ul / 3 ; loop 0 , 5 , move v0 , ul ) 
[1930] ( ( move 0 , 0 ; move 2 , ul ) ; loop 1 , 3 , move ua , 3 ) 
[1931] ( move 3 , ua * ua ; move 4 , ul ) 
[1932] ( loop 0 , 6 , move v0 , 3 ; move ua , v0 + v0 ) 
[1933] loop 0 , 7 , move v0 - ul , v0 + 4 
[1934] loop 0 , 6 , move v0 + 2 , 4 
[1935] ( move ul , 0 ; loop 0 , 4 , move 4 , v0 ) 
[1936] ( move ua + ul , 0 ; move 3 , ua - ul ) 
[1937] ( loop 0 , 6 , move v0 , 4 ; move ul , ul ) 
[1938] loop 0 , 7 , move 3 - v0 , v0 
[1939] loop 0 , 7 , move ua / v0 , v0 + ul 
[1940] ( v0 = 4 ; move 2 * v0 , v0 ; move v0 , v0 ) 
[1941] loop 0 , 5 , move 2 * v0 , v0 - ul 
[1942] ( move 4 , ul ; move ua + 3 , 4 ) 
[1943] loop 0 , 3 , move ua , ua * ua 
[1944] ( move ua , 3 ; move ua , 4 ) 
[1945] ( move 4 , 4 * 2 ; move ua , 3 ) 
[1946] ( v0 = ua - ul ; ( move v0 , v0 ; move v0 , 2 ) ) 
[1947] ( loop 0 , 4 , move 4 , v0 ; move v0 , ua ) 
[1948] ( move ua , ul ; move ua + 3 , 3 ) 
[1949] loop 2 , 7 , move 4 * 2 , 3 
[1950] loop 0 , 4 , move v0 * 2 , v0 / 2 
[1951] ( loop 0 , 6 , move v0 , ul ; move 2 , v0 / ua ) 
[1952] loop 0 , 7 , move v0 - 3 , v0 
[1953] loop 0 , 5 , move v0 + v0 , ul - 4 
[1954] loop 0 , 6 , move v0 - ul , ul - v0 
[1955] ( move ua , 0 ; move 2 , ua * ua ) 
[1956] ( move ua + 3 , 0 - ul ; move ua - 4 , ul ) 
[1957] ( move 4 , ua ; move ua , ul ; move 2 , ua * ua ) 
[1958] loop 0 , 3 , move 4 , 4 * v0 
[1959] loop 0 , 4 , move v0 , 3 + 2 
[1960] ( move 4 , 0 ; move ua , ul - 2 ) 
[1961] loop 0 , 3 , ( v1 = ul ; move 3 - ua , 4 + 3 ) 
[1962] ( move 3 + 2 , ul ; move ua , 2 ) 
[1963] loop 0 , 6 , move ua , 0 - 2 
[1964] ( move 3 , 0 ; move ul - ua , 3 ) 
[1965] ( move 3 * 3 , 4 ; move ul , ul ) 
[1966] loop 0 , 2 , move v0 - ua , 3 
[1967] ( move ul , ua ; ( move ua , ul ; move ul + ul , ul / ua ) ) 
[1968] loop 0 , 2 , loop 1 , 3 , move v1 * 3 , v0 
[1969] ( loop 0 , 6 , move v0 , v0 ; move ul , v0 ) 
[1970] ( move 3 , ul ; move ua , 4 ) 
[1971] ( loop 0 , 3 , move ua , 4 ; move v0 , v0 ) 
[1972] loop 0 , 5 , move 3 + v0 , 3 
[1973] ( move ua , ul ; move 0 - 2 , 3 ) 
[1974] ( loop 0 , 5 , move v0 , v0 ; move v0 , 4 + v0 ) 
[1975] loop 0 , 2 , move v0 - ua , 4 
[1976] ( move 2 , ul ; loop 0 , 3 , move v0 , v0 ) 
[1977] ( move 4 , 0 ; move ua + ul , 2 ) 
[1978] ( move ul , 3 ; loop 0 , 3 , move 4 , ul ) 
[1979] ( move 0 , ul ; loop 0 , 3 , move 3 , ua + v0 ) 
[1980] ( move 3 , ul ; move ua + ul , 4 ) 
[1981] ( move 4 , 2 ; move ua , 2 - 4 ) 
[1982] ( move ua , ul ; move 4 + ul , 2 ) 
[1983] loop 0 , 4 , move v0 , 4 / v0 
[1984] loop 0 , 4 , move 4 , ua / v0 
[1985] loop 0 , 7 , move v0 , v0 / 4 
[1986] ( loop 0 , 5 , move v0 , ul ; move ul , 0 ) 
[1987] loop 0 , 5 , move 2 - ua , ul 
[1988] ( loop 0 , 4 , move ul , v0 ; move ua , v0 ) 
[1989] ( move 2 , 0 ; move ul - ua , 2 ) 
[1990] move 4 * 2 , ua * ua 
[1991] loop 0 , 4 , move v0 + ul , 3 / ua 
[1992] loop 0 , 3 , move 4 - v0 , 4 
[1993] ( loop 0 , 5 , move ul - v0 , v0 ; move ul , v0 - ul ) 
[1994] loop 0 , 6 , move ua , 4 * 4 
[1995] ( move ul , 3 / 2 ; move 4 , ul ) 
[1996] ( move ua + 3 , 4 + 3 ; move ul , ul ) 
[1997] ( loop 0 , 3 , move 3 , v0 * v0 ; move ul , 2 ) 
[1998] ( move 4 , ul ; move ul , ul ; move 3 - ul , ul ) 
[1999] loop 0 , 4 , move v0 , 0 - 4 
[2000] loop 0 , 4 , move 3 , 2 - v0 
[2001] loop 0 , 7 , move v0 - 2 , 3 
[2002] ( move 0 - 2 , 4 ; move 4 , ul ) 
[2003] ( move 3 , ul ; move ua , ul ; move 3 , 4 ) 
[2004] loop 0 , 3 , move 4 - v0 , v0 * v0 
[2005] ( move 4 + ul , 3 ; move ua , ua * ua ) 
[2006] loop 0 , 7 , move ua - ul , 4 + ul 
[2007] loop 0 , 3 , ( move v0 , ua - v0 ; move 3 , 4 - v0 ) 
[2008] loop 0 , 6 , move ul , 4 / v0 
[2009] ( move ua , ul ; move 4 + 3 , 4 ) 
[2010] ( move ua , 4 + 3 ; move 2 , 2 ) 
[2011] ( move 4 , 3 ; loop 0 , 4 , move v0 , v0 ) 
[2012] ( move ua , 3 - ul ; move 4 , ua * ua ) 
[2013] ( move 3 * 3 , 2 ; move ul , ul ) 
[2014] ( move ua , ua / 4 ; move 4 , ua - 3 ; move ua , ul - ua ) 
[2015] ( move ua , 4 / 3 ; move 4 , ul + ul ; move 3 , 0 ) 
[2016] ( move 3 , 4 ; move ua , 3 - 4 ) 
[2017] ( loop 0 , 6 , move ul , ul ; move v0 , v0 * v0 ) 
[2018] loop 0 , 6 , move ul + v0 , v0 - ul 
[2019] loop 0 , 3 , move v0 - ua , 2 * v0 
[2020] ( move 3 , 4 ; move ul - ua , ul ) 
[2021] ( move 3 , ul / ua ; move ua , ul ) 
[2022] loop 0 , 2 , move ua , 4 * 2 
[2023] loop 0 , 7 , move 0 - 3 , v0 
[2024] loop 0 , 4 , move 4 , v0 * v0 
[2025] loop 0 , 2 , ( move v0 , v0 ; move ua - ul , 3 ) 
[2026] loop 0 , 4 , move v0 - ua , ua * ua 
[2027] loop 0 , 5 , move 2 , ul / 4 
[2028] ( move ul - ua , 0 ; move ua , ua / 3 ) 
[2029] loop 0 , 5 , move ua - 2 , ul 
[2030] ( move 2 , ua + ul ; move ua + 3 , 4 ) 
[2031] ( move ul - 4 , ul ; move 4 , ul ) 
[2032] loop 0 , 7 , move 2 , ul - 2 
[2033] ( move ul , 3 ; move 2 - ua , 4 ) 
[2034] ( move 2 , ul ; move 3 , ul / 3 ) 
[2035] ( move ua , ul ; loop 0 , 3 , move ul + v0 , v0 - ul ) 
[2036] ( loop 0 , 4 , move ul , ul ; move v0 , ua - ul ) 
[2037] ( move ua , ul ; move ul , 3 ; move 4 , 2 ) 
[2038] ( move 2 , ul ; loop 0 , 5 , move v0 , v0 + v0 ) 
[2039] ( ( move ua , ul ; move ul , ul ) ; move ua , 3 ) 
[2040] ( v0 = 3 * 2 ; loop 1 , 6 , move v1 , v0 / v1 ) 
[2041] ( loop 0 , 5 , move v0 , ul ; move ua , ul ) 
[2042] loop 0 , 5 , move ul - ua , 3 
[2043] ( move 4 , ul ; move 3 , 2 ) 
[2044] ( move ua , 3 + 2 ; move ul - ua , ul ) 
[2045] loop 0 , 7 , move v0 - ua , v0 + ul 
[2046] ( move 0 - ua , ua ; move 2 , 2 ) 
[2047] ( move ul - ua , ul ; move 4 + ul , ul ) 
[2048] loop 0 , 6 , move ua / 2 , ul 
[2049] ( move 4 , 4 / ua ; move ua , 4 ) 
[2050] loop 0 , 4 , move 4 - v0 , v0 + v0 
[2051] ( move 4 , 0 ; move ul , 4 + 2 ) 
[2052] loop 0 , 4 , move v0 * v0 , ul + v0 
[2053] loop 0 , 5 , move ua - ul , v0 + ul 
[2054] loop 0 , 5 , move ua , ua * ua 
[2055] ( loop 0 , 5 , move ul , ul ; move 4 , v0 ) 
[2056] loop 0 , 5 , move ua - 2 , v0 
[2057] ( move ua , 2 ; move ua , 0 - 4 ) 
[2058] ( move ul , 2 ; move ua + ul , 2 ) 
[2059] ( move 3 , ul ; move ua , 4 / ua ) 
[2060] ( move 3 , 2 ; move 2 , 2 ) 
[2061] ( ( move ua , ua ; move ul , 2 ) ; move 4 , ul ) 
[2062] ( loop 0 , 5 , move 3 , v0 ; move v0 , ul ) 
[2063] ( move 3 * 3 , ul ; move 2 , 2 ) 
[2064] ( move 3 , 0 ; move ua , ul - 3 ) 
[2065] ( move ua , ua - 4 ; move ua , ul + ul ) 
[2066] ( v0 = 4 + ul ; move v0 , 0 ; move v0 , v0 ) 
[2067] ( move ua , 0 - 3 ; move ua - 4 , ul ) 
[2068] ( move 2 , ul ; loop 0 , 5 , move v0 + ul , v0 ) 
[2069] loop 0 , 5 , move ul + v0 , v0 * 2 
[2070] loop 0 , 2 , move ul - ua , v0 * 4 
[2071] loop 0 , 3 , move ua , 4 - v0 
[2072] ( move 2 - 4 , 4 ; move ua , 4 ) 
[2073] loop 0 , 2 , move 3 , v0 / 2 
[2074] ( move 2 , 2 + ul ; move 4 , ul - 2 ) 
[2075] ( v0 = 3 + 2 ; loop 1 , 7 , move v1 , ua - v0 ) 
[2076] ( move 3 , 4 ; move 4 , ul ) 
[2077] loop 0 , 4 , move ul + v0 , v0 - ul 
[2078] loop 0 , 3 , move v0 + ul , 4 / v0 
[2079] ( move ua + 2 , 0 ; move ul + ul , 4 ) 
[2080] ( move 3 , 3 + ul ; move ua , 3 / ua ) 
[2081] ( move ul , ul ; move ua + ul , ua ; move ua , ua - 2 ) 
[2082] loop 0 , 2 , move 4 + ul , ua * ua 
[2083] loop 0 , 4 , move 4 - v0 , v0 * 3 
[2084] ( loop 0 , 5 , move v0 + v0 , v0 ; move v0 , 2 ) 
[2085] ( move ua , 0 ; loop 0 , 6 , move v0 , ua - v0 ) 
[2086] loop 0 , 6 , move 3 - ua , v0 
[2087] ( move ul - ua , ua ; move ua , ul / 3 ; move ua , 3 ) 
[2088] ( move ul - ua , 0 ; move 3 + 2 , ul ) 
[2089] ( move ua , 3 ; move 2 , 0 - 2 ) 
[2090] ( loop 0 , 4 , move 2 , v0 ; move v0 , v0 ) 
[2091] loop 0 , 4 , move 4 - ua , ul 
[2092] loop 0 , 2 , move 2 - ua , 4 
[2093] ( loop 0 , 4 , move v0 * v0 , v0 ; move v0 , 4 ) 
[2094] ( v0 = 0 ; loop 1 , 5 , move ua - 2 , v0 - v1 ) 
[2095] ( move ul - 4 , 2 ; move 4 , 4 ) 
[2096] ( move ua , ul - 2 ; loop 0 , 4 , move 3 , v0 ) 
[2097] ( move 4 , 0 ; move ua , ul ; move ul , ul ) 
[2098] ( move ua , ua * ua ; move ua , ul - 3 ) 
[2099] loop 0 , 5 , move 4 / 3 , 2 - v0 
[2100] loop 0 , 3 , move 4 + ul , 2 + v0 
[2101] ( loop 0 , 3 , move 2 , ul ; move ua - ul , v0 ) 
[2102] ( move ua + ul , 4 ; move ua , 4 ) 
[2103] loop 0 , 5 , move v0 , 2 / v0 
[2104] ( move ua + ul , ul ; move 3 , 2 ) 
[2105] loop 0 , 3 , ( move ua / v0 , ua + 3 ; move v0 , ua ) 
[2106] ( loop 0 , 5 , move ua - 2 , 3 ; move ua , 2 ; v4 = ua ) 
[2107] loop 0 , 6 , ( v1 = v0 / ua ; move ul / v1 , v0 ) 
[2108] loop 0 , 3 , move 2 * v0 , v0 * 3 
[2109] loop 0 , 5 , move 4 , 2 - 3 
[2110] ( loop 0 , 3 , move v0 , 4 ; move v0 , ul ; move ul , ul ) 
[2111] ( move 2 , 4 * 4 ; move ua + ul , ul ) 
[2112] ( move 2 , ul ; move ua , 0 - ul ) 
[2113] loop 0 , 4 , move ul , 3 - v0 
[2114] ( move ua , ua ; move 3 , ul ; move ua , ul ) 
[2115] loop 0 , 7 , move v0 / 2 , v0 
[2116] ( move ua , ua ; move ua - 4 , 3 + ul ; move 3 , 2 ) 
[2117] ( move ua , ua / 3 ; move ua , ua * ua ) 
[2118] loop 0 , 3 , ( move v0 , 2 - v0 ; move v0 + ul , ul ) 
[2119] ( v0 = 4 ; move 2 + v0 , ua + 3 ; move ua , 2 ) 
[2120] loop 0 , 2 , move v0 + 2 , 4 * 2 
[2121] ( move ul - ua , 3 + ul ; move ua , ua - ul ) 
[2122] ( move ua , ua - ul ; move 4 - ua , 2 ) 
[2123] ( move 3 , ul - 2 ; move ua - ul , 4 ) 
[2124] loop 0 , 4 , move ul , ul / ua 
[2125] loop 0 , 4 , move 4 + ul , ul + v0 
[2126] ( move 3 , 4 ; move ua - ul , ul ) 
[2127] loop 0 , 7 , ( v1 = 4 - v0 ; move ul , v1 * v1 ) 
[2128] ( move ua , 4 / ua ; move ua , ua * ua ) 
[2129] ( loop 0 , 4 , move v0 - 3 , v0 ; move v0 , v0 ) 
[2130] ( move 0 - ua , ua - ul ; move 3 , 3 ) 
[2131] loop 0 , 6 , move 2 - 4 , v0 + v0 
[2132] move 4 + 4 , 0 - 2 
[2133] ( move ua , ul / ua ; move 4 - ua , 0 - 2 ) 
[2134] ( move ua , ul ; loop 0 , 5 , move v0 , v0 ) 
[2135] ( move 4 , 3 / 2 ; move 2 , ul ) 
[2136] loop 0 , 3 , move 2 + v0 , ul 
[2137] ( v0 = 0 - 4 ; move v0 , ua ; move ua , 2 ) 
[2138] ( move 2 , ul ; move 4 + ul , 4 ) 
[2139] loop 0 , 5 , move v0 , 0 - 2 
[2140] ( move ul , 2 ; loop 0 , 2 , move v0 - ua , ua * ua ) 
[2141] ( loop 0 , 6 , move v0 , ul - 2 ; move ul + ul , ua ) 
[2142] ( move ul , 3 ; move 3 , 4 * 3 ) 
[2143] ( move 4 , 4 ; move ua , 4 ; move ul , ua + ul ) 
[2144] ( move ul - ua , ul ; loop 0 , 6 , move v0 , 4 ) 
[2145] ( move ua , 3 / 2 ; move ul , ua - ul ; move ul , ul ) 
[2146] loop 0 , 4 , move ul - v0 , ul - v0 
[2147] ( loop 0 , 4 , move ul , ul ; move 2 , v0 ) 
[2148] ( move 2 , ua ; move ua + 2 , 0 - ul ) 
[2149] loop 0 , 4 , move 3 , 2 + v0 
[2150] loop 0 , 3 , ( move 2 , v0 ; move ua , 2 - v0 ) 
[2151] loop 0 , 4 , move v0 + ul , 2 / ua 
[2152] loop 0 , 7 , move 2 , ua - v0 
[2153] loop 0 , 7 , move 0 - 4 , ua - 4 
[2154] ( move ua , ua ; move ul , 2 ; move ua , ul ) 
[2155] loop 0 , 2 , move 2 , 4 / ua 
[2156] loop 0 , 7 , move v0 / 3 , v0 
[2157] ( move 0 , ul ; loop 0 , 4 , move 4 , ul ) 
[2158] ( loop 0 , 5 , move v0 , ua - v0 ; move ua + 3 , v0 ) 
[2159] ( move ul - ua , 2 - ua ; move ua , ua * ua ) 
[2160] ( move 2 , ua ; move 4 , 2 - 3 ) 
[2161] ( move 2 , ua / 4 ; move ua , ul + ul ) 
[2162] ( move 4 , ul ; move 3 , 0 - 4 ) 
[2163] loop 0 , 5 , move ua , 4 * 2 
[2164] ( move 4 , ul ; move ua , 2 - 3 ) 
[2165] ( move ua , ua - ul ; loop 1 , 4 , move v1 , 4 - ul ) 
[2166] loop 0 , 2 , ( move ua + v0 , 3 ; move ul , ul ) 
[2167] ( move ul - 4 , ua ; move 4 , ul / 2 ) 
[2168] ( move ua , ua - ul ; move 3 , ua - ul ) 
[2169] ( move ul - ua , 0 ; move ua - 2 , 0 - ul ) 
[2170] loop 0 , 3 , move ua + ul , ua * ua 
[2171] ( move ua , ul ; loop 0 , 6 , move 4 , 2 ) 
[2172] ( move 3 , 4 ; loop 1 , 3 , move ul , ul ) 
[2173] ( move 2 , ul ; move ul , ul ; move ua , ul ) 
[2174] loop 0 , 7 , move ul + v0 , v0 / 2 
[2175] ( move ul + ul , ul / 4 ; move ua , ul ) 
[2176] ( loop 0 , 6 , move v0 - ul , 4 ; move v0 , ul ) 
[2177] ( loop 0 , 4 , move v0 , 4 ; move ua , 0 ) 
[2178] ( move ua , 3 ; move 4 , 2 ) 
[2179] loop 0 , 4 , move 2 , 2 - v0 
[2180] ( loop 0 , 6 , move v0 , v0 ; move ua , v0 ) 
[2181] loop 0 , 5 , move v0 * 2 , 4 
[2182] loop 0 , 5 , move v0 + 2 , v0 - ul 
[2183] ( move 3 , ul ; loop 0 , 5 , move ul - v0 , ul ) 
[2184] loop 0 , 4 , move v0 * v0 , ua / 4 
[2185] ( move ul , 0 - 3 ; move ua , ua / 3 ) 
[2186] ( move 2 , 2 ; move ua , ul / ua ) 
[2187] ( move ul - 3 , 2 ; move ua - ul , 4 ) 
[2188] loop 0 , 4 , move v0 + ul , 2 / v0 
[2189] loop 0 , 3 , loop 1 , 2 , move v0 , v0 * 4 
[2190] loop 0 , 7 , move ul + v0 , ua * ua 
[2191] loop 0 , 5 , move ul - v0 , ul / 2 
[2192] loop 0 , 4 , move ul , ul / 3 
[2193] loop 0 , 4 , move ul + v0 , ul / v0 
[2194] ( move 4 , ul ; move 3 , ul - 2 ) 
[2195] loop 0 , 5 , move ul + ul , 3 / ua 
[2196] ( move ua , ul ; loop 0 , 6 , move ul , v0 * v0 ) 
[2197] loop 0 , 2 , move ua , v0 - 3 
[2198] loop 0 , 2 , ( move ua , 4 * 3 ; move ul - ua , ua ) 
[2199] ( move ua , 4 + 2 ; move ua , 4 ) 
[2200] ( move ua , ul - 3 ; move 2 , ul ) 
[2201] ( move ua , ul ; move ua , 2 ; move ua + ul , ua + 2 ) 
[2202] loop 0 , 6 , move 3 + 2 , ua * ua 
[2203] ( move ua , ul / ua ; move 3 , 4 / ua ) 
[2204] move 4 * 2 , ul 
[2205] loop 0 , 7 , move 4 + ul , 4 
[2206] loop 0 , 5 , move 2 , v0 - 3 
[2207] ( move ua - ul , ul ; move ul - ua , 2 ) 
[2208] ( move 3 , 2 - 4 ; move ul , ul ) 
[2209] ( move 4 , ul / 4 ; move ua , ua + ul ) 
[2210] move 4 * 2 , 3 + 2 
[2211] ( move 4 , 2 - ua ; loop 0 , 6 , move ul , ul ) 
[2212] move 3 * 3 , 4 / ua 
[2213] loop 0 , 4 , move ua - ul , 4 / v0 
[2214] ( move 3 , 2 ; move 3 , ul - 3 ) 
[2215] ( move ua + ul , 3 ; move 2 , ul ) 
[2216] loop 0 , 7 , move v0 - ul , v0 * v0 
[2217] loop 0 , 3 , move 2 + v0 , v0 * v0 
[2218] ( loop 0 , 4 , move 2 , v0 ; move v0 , 0 ) 
[2219] ( move 3 , 2 ; move ul , 3 * 2 ) 
[2220] ( move 4 , ul ; loop 0 , 5 , move v0 , ul / v0 ) 
[2221] move ua , 3 / 4 
[2222] ( loop 0 , 4 , move v0 , v0 + v0 ; move 3 , ul + ul ) 
[2223] ( move ua , ua ; move 4 + 3 , 2 ) 
[2224] ( move ua - ul , ua ; loop 0 , 6 , move v0 , ul ) 
[2225] ( move ua - 3 , 0 ; move ua , 0 - 4 ; move 4 + ul , ua ) 
[2226] loop 0 , 7 , move ua , ua - 4 
[2227] loop 0 , ul , loop 1 , 4 , move v0 - v1 , ul 
[2228] ( move ul - ua , 0 ; move 4 , ul ) 
[2229] ( move ua - ul , ul ; move 4 , 2 ) 
[2230] ( move 0 - ua , ul ; move 2 , ul ; move ua + ul , ua ) 
[2231] ( move 4 , 3 ; move ul , 4 ) 
[2232] ( move 4 , ul - 3 ; move ua , 4 ) 
[2233] loop 0 , 5 , move 3 , ul - v0 
[2234] ( move ul - 4 , ua * ua ; move ua - 3 , ul ) 
[2235] ( move 0 , ua / 3 ; move ua , 3 ) 
[2236] loop 0 , 2 , ( move ul , v0 ; move ua - ul , v0 ) 
[2237] ( move ua + 2 , ua ; move 2 , 3 ) 
[2238] loop 0 , 3 , move 4 - v0 , ul - v0 
[2239] loop 0 , 6 , move v0 , 0 - 3 
[2240] ( move 4 , 0 ; move ua , 2 ) 
[2241] ( move ua , 4 ; move 4 , 4 * 3 ) 
[2242] ( move 4 , ul ; move 0 - ua , ul ) 
[2243] loop 0 , 2 , loop 1 , 2 , move ul , v0 
[2244] loop 0 , 3 , move 4 * 2 , 3 
[2245] loop 0 , 2 , ( v1 = ua - ul ; move v1 , ua * ua ) 
[2246] ( loop 0 , 4 , move 2 , v0 / 2 ; move 3 , v0 ) 
[2247] ( move ua + ul , 2 ; move ua - ul , ul ) 
[2248] loop 0 , 2 , move ua , ua / 4 
[2249] ( move 4 , ul ; move ua , 4 ; move 2 , ul ) 
[2250] ( move ua , ua - ul ; move 4 , 4 ) 
[2251] ( move 3 , ul ; move ua + 3 , ua * ua ) 
[2252] loop 0 , 4 , move 3 / v0 , 3 / v0 
[2253] loop 0 , 2 , loop 1 , 2 , move v0 + 2 , v0 
[2254] ( move ua , ul ; move 2 , ul ; move ua , 3 ) 
[2255] loop 0 , 3 , ( move 3 , v0 * v0 ; move ul + ul , 4 ) 
[2256] ( move ua , 4 ; ( move 2 , 4 ; move ua , ul / 4 ) ) 
[2257] ( move 4 , 4 ; move 2 , 4 ) 
[2258] ( move 3 , 4 ; move 4 , 4 ) 
[2259] loop 0 , 5 , move 4 , 0 - 2 
[2260] loop 0 , 3 , move 3 / 2 , v0 
[2261] ( loop 0 , 5 , move ul , ul ; move v0 , v0 * v0 ) 
[2262] ( move ul , ul ; move ua , 4 / 3 ) 
[2263] loop 0 , 6 , move 4 , 4 / v0 
[2264] ( move ua - ul , ul ; loop 0 , 4 , move v0 , 3 ) 
[2265] ( move ua , 0 - 3 ; move 3 , ul ) 
[2266] loop 0 , 3 , move ua , 0 - 4 
[2267] ( loop 0 , 6 , move ul , v0 ; move v0 , v0 + ul ) 
[2268] ( move ua , ul - 3 ; move 3 , ul - 3 ) 
[2269] loop 0 , 7 , move 3 / v0 , ul / v0 
[2270] ( move ul - ua , ua ; move 4 , 2 ) 
[2271] loop 0 , 3 , ( move v0 , v0 ; move ua , 3 ) 
[2272] ( v0 = ua + 3 ; loop 1 , 6 , move ua , 2 ; move 2 , 0 ) 
[2273] loop 0 , 4 , move v0 * 3 , v0 * v0 
[2274] ( move ul , 4 ; move 0 - ua , ul ) 
[2275] ( move ul , ul ; loop 0 , 6 , move v0 , 3 ) 
[2276] loop 0 , 4 , move v0 * v0 , 3 
[2277] ( move 4 , 0 ; move ua , ua * ua ) 
[2278] ( move 4 , ul / ua ; move ua , ul ) 
[2279] ( move ua , ul / 4 ; move ua , 2 ) 
[2280] loop 0 , 7 , move 3 , 4 + 3 
[2281] loop 0 , 7 , move v0 - 4 , 3 + v0 
[2282] ( move 2 , 0 ; move ua , ua * ua ) 
[2283] loop 0 , 3 , ( move v0 , ul + v0 ; move ua - 4 , v0 ) 
[2284] ( move ua + ul , 3 ; move 2 , ua / 4 ) 
[2285] ( move ul , ul ; move ua + 2 , 4 ) 
[2286] ( loop 0 , 4 , move ul , v0 - 3 ; move v0 , 0 - 4 ) 
[2287] ( move 3 , 4 ; move ul , 2 ) 
[2288] ( move ua , ul ; move 2 , ul ; move ua - ul , ul ) 
[2289] loop 0 , 4 , move 2 - v0 , ul + v0 
[2290] loop 0 , 6 , move ua , 3 * 3 
[2291] loop 0 , 4 , move v0 , 2 / ua 
[2292] loop 0 , 5 , move 2 - v0 , ua - v0 
[2293] ( move 3 , ul ; move ua , 4 * 2 ) 
[2294] loop 0 , 3 , ( move v0 , ul ; move ul , ul ) 
[2295] ( move 0 , 4 + ul ; move ua - 2 , 2 ; move 2 , ul ) 
[2296] loop 0 , 2 , move ua - ul , ua - v0 
[2297] loop 0 , 4 , move v0 + 3 , 4 
[2298] ( move 4 , 0 ; move ul - ua , ul ) 
[2299] loop 0 , 3 , move 4 + v0 , v0 * v0 
[2300] ( move 3 , 0 ; move 4 + 3 , ua - ul ) 
[2301] ( move 4 , 4 ; move 2 , ul ) 
[2302] loop 0 , 7 , move 4 , ua - v0 
[2303] ( move ul , ul ; move ua + 2 , ua * ua ) 
[2304] ( move ua , ul - ua ; move ul , ul ; move 4 , 4 + ul ) 
[2305] ( loop 0 , 6 , move v0 , 2 ; move 4 , ul ; v1 = v0 ) 
[2306] ( move 3 + 2 , 0 ; move ua + ul , ul ) 
[2307] ( move ua , ul ; loop 0 , 6 , move ua / v0 , 3 ) 
[2308] ( move 4 + ul , ua * ua ; move ua , ul ) 
[2309] ( move 4 , 0 ; move ul , ul ) 
[2310] ( move ua , ua / 3 ; move ul + ul , ua * ua ) 
[2311] loop 0 , 5 , move v0 , 4 * 4 
[2312] ( move 4 , 2 ; move 3 , ul ) 
[2313] ( move ua - ul , 2 ; ( move ua , ua * ua ; v0 = ua ) ) 
[2314] ( move ul , 0 ; loop 0 , 6 , move 3 , v0 ) 
[2315] loop 0 , 6 , move 3 , ua - v0 
[2316] ( move ul - ua , ul ; move 2 , 4 ) 
[2317] ( move 3 , ua + ul ; move ul - ua , 4 ) 
[2318] loop 0 , 5 , move v0 , 3 / ua 
[2319] ( ( move ua , 0 ; move ua + 2 , 4 + ul ) ; move ul , v1 ) 
[2320] loop 0 , 6 , move v0 - ua , 3 + 2 
[2321] loop 0 , 4 , move 3 , ul / v0 
[2322] ( loop 0 , 6 , move ul , v0 ; move v0 , ul ) 
[2323] loop 0 , 5 , move 0 - ua , 2 
[2324] ( move 4 , ul ; move 3 , ul ; move ua , ul - ua ) 
[2325] loop 0 , 4 , move ul , 2 / v0 
[2326] loop 0 , 7 , move 3 , 3 + 2 
[2327] loop 0 , 7 , move ua - 2 , ul - v0 
[2328] ( v0 = 4 + ul ; move v0 , v0 ; move v0 , ul ) 
[2329] ( move ua + ul , 0 ; move 2 , 2 ) 
[2330] ( move 4 , ul - 3 ; move ua , ul ) 
[2331] loop 0 , 7 , move ul , 4 * 3 
[2332] ( move 2 , ul ; loop 0 , 4 , move v0 , v0 ) 
[2333] ( move ua , 4 + 3 ; move ua , 3 ) 
[2334] ( move ul + ul , ul ; loop 0 , 3 , move v0 * 2 , 3 ) 
[2335] loop 0 , 6 , move 2 , v0 - 4 
[2336] ( loop 0 , 3 , move 4 - v0 , v0 / 3 ; move ua , v0 ) 
[2337] ( move 4 , 0 ; move ul , 2 ) 
[2338] ( move ua , 2 ; move 3 , 0 - ul ) 
[2339] ( loop 0 , 6 , move ua , 3 ; move v0 , 0 ) 
[2340] ( move ua , ul ; loop 1 , 6 , move v1 - 2 , v1 ) 
[2341] loop 0 , 4 , move v0 + ul , 4 - v0 
[2342] loop 0 , 4 , move v0 * 2 , ul - v0 
[2343] ( move ua - ul , ua ; move 3 , ua + 4 ) 
[2344] ( move ul , ul ; move ua + ul , ua + ul ; move ul , ul ) 
[2345] ( move ua , ul ; loop 0 , 5 , move v0 , ul ) 
[2346] ( ( move 3 , ul ; move ul - 4 , 3 ) ; move 3 , 4 * 2 ) 
[2347] ( loop 0 , 4 , move ul + v0 , ul ; move ua , v0 ) 
[2348] loop 0 , 4 , move 2 - ua , ul - 4 
[2349] loop 0 , 3 , move v0 + 2 , ul / v0 
[2350] ( move ua + ul , ua ; loop 0 , 4 , move 2 , ul ) 
[2351] ( move ul - ua , 3 / 2 ; move ua , ul ) 
[2352] loop 0 , 7 , move ul , v0 + 2 
[2353] ( move 4 , 0 ; move 2 - ua , ul ) 
[2354] loop 0 , 7 , move 3 - ua , v0 
[2355] ( move 0 - ua , ua ; move ua , ua * ua ) 
[2356] loop 0 , 2 , move 4 , v0 / 3 
[2357] loop 0 , 3 , move ua - ul , ul + v0 
[2358] ( move ul , ul ; move 3 * 3 , 2 ) 
[2359] loop 0 , 4 , move v0 + ul , ua - v0 
[2360] ( move ua - ul , 3 ; move 2 , 4 ) 
[2361] ( move ua , 0 ; move 4 + 4 , 3 ) 
[2362] ( move 3 , 0 ; move ua + 2 , ul ) 
[2363] ( move ul , ul ; ( move ua , ul ; move 4 , ul ; move 2 , ul ) ) 
[2364] ( loop 0 , 5 , move v0 , v0 + v0 ; move v0 , 4 ) 
[2365] ( move ua , 0 ; loop 0 , 2 , move 2 , ul ) 
[2366] move 4 * 2 , 2 
[2367] loop 0 , 7 , move 4 , ul - v0 
[2368] ( move 4 , 4 ; move ul , ul ) 
[2369] ( move ua , 0 ; move 4 , ul - 2 ) 
[2370] ( move 4 , 4 ; move 4 , ul ) 
[2371] ( move ul , ua ; move 4 , 4 / 3 ) 
[2372] ( move ua + ul , ua - ul ; move ul , ua ; move ua - ul , 4 ) 
[2373] loop 0 , 6 , move ul - v0 , 2 
[2374] ( move 4 , 3 - ua ; move 2 - ua , 2 ; v0 = ua ) 
[2375] ( loop 0 , 3 , move v0 + ul , ul ; move v0 , ul ) 
[2376] ( move ua + ul , ua * ua ; move 4 , ul ) 
[2377] loop 0 , 2 , ( move 3 , ul ; move v0 , ul ) 
[2378] loop 0 , 2 , loop 1 , 3 , move 4 + v0 , 4 
[2379] loop 0 , 5 , move v0 + 4 , 4 
[2380] loop 0 , 5 , move 2 - ua , v0 
[2381] ( loop 0 , 5 , move ul , ua / v0 ; move v0 , v0 ) 
[2382] ( move 4 , ua ; loop 0 , 5 , move ul , ul ) 
[2383] loop 0 , 7 , move ua - ul , 4 
[2384] loop 0 , 5 , move 2 , v0 - 2 
[2385] ( loop 0 , 9 , v1 = v0 ; loop 2 , 3 , move v0 , 2 ) 
[2386] loop 0 , 3 , ( move v0 , v0 ; move 3 , ul ) 
[2387] loop 0 , 4 , move 3 , ua - 3 
[2388] ( move ul - ua , ua - 2 ; move ua , ul ; move ul , ua ) 
[2389] ( move 4 + ul , 2 ; move 3 , ul ) 
[2390] loop 0 , 2 , move v0 + 4 , 2 
[2391] loop 0 , 7 , move v0 , 4 * 4 
[2392] loop 0 , 6 , move 2 , v0 / ua 
[2393] ( move ua , 0 ; v0 = 3 - ua ; move v0 , v0 * ua ) 
[2394] ( move 4 * 2 , ul - ua ; move 4 , ua * ua ) 
[2395] ( move 0 - ua , 4 ; move ua , 3 ) 
[2396] ( move 4 , ul ; loop 0 , 3 , move ul - 4 , v0 ) 
[2397] ( move ul , 0 - 4 ; loop 0 , 4 , move 3 , ul ) 
[2398] loop 0 , 6 , move v0 / 2 , ul + v0 
[2399] ( move ua , ul / 3 ; move 2 , ua + ul ) 
[2400] ( move 4 + ul , ul ; move 2 - ua , 4 ) 
[2401] ( move 3 , ul ; move 3 , ua * ua ) 
[2402] loop 0 , 3 , move 3 , v0 - 3 
[2403] ( move 4 , ua * ua ; loop 0 , 4 , move v0 , v0 + v0 ) 
[2404] loop 0 , 7 , move 2 , 4 / v0 
[2405] ( move 3 , ua * ua ; v0 = ul ; move 4 , 2 ) 
[2406] loop 0 , 3 , move ua , ua / 4 
[2407] ( move ul - ua , 4 ; move ua , ul ) 
[2408] loop 0 , 5 , move v0 - 2 , ul + v0 
[2409] ( move ua , ua ; move 3 , 3 / 2 ) 
[2410] loop 0 , 6 , move v0 - 2 , ul 
[2411] ( move ua , ul / 4 ; move ul , 2 ) 
[2412] loop 0 , 7 , move 2 - v0 , v0 / ua 
[2413] ( loop 0 , 4 , move v0 , v0 * v0 ; move 3 , ul ) 
[2414] ( move ul , 4 ; move 4 * 2 , 2 ) 
[2415] ( move 2 , ua - ul ; move ua + ul , ua * ua ) 
[2416] ( move 3 , 4 ; loop 0 , 4 , move v0 + ul , v0 ) 
[2417] ( move ul - ua , 2 / ua ; move 4 , ul ) 
[2418] ( move 2 , 0 ; move 4 , 2 ) 
[2419] loop 0 , 3 , move v0 + v0 , 3 / v0 
[2420] ( loop 0 , 5 , move ul , ul ; move ul + v0 , v0 ) 
[2421] loop 0 , 5 , move 2 / v0 , ul / v0 
[2422] ( move 3 , 4 * 3 ; move ul , ul ) 
[2423] ( move 2 , 3 ; move ua , 4 ) 
[2424] loop 0 , 4 , move v0 , 4 * 2 
[2425] loop 0 , 4 , move 0 - 4 , ul 
[2426] loop 0 , 3 , move 3 , 2 - 4 
[2427] ( move 4 , 4 ; move 2 , 4 / ua ) 
[2428] ( move ul - ua , 3 - ua ; move ua + ul , 4 + ul ) 
[2429] ( move ua , 2 ; loop 0 , 4 , move v0 , v0 ) 
[2430] ( move 3 , ul ; loop 0 , 5 , move ul , v0 ; move ua , 0 ) 
[2431] loop 0 , 4 , move ul + v0 , ul - v0 
[2432] ( move ua , ul ; move 2 , ul / ua ) 
[2433] loop 0 , 3 , move 3 , ul / v0 
[2434] ( loop 0 , 5 , move v0 , ul + ul ; move 2 , 2 ) 
[2435] loop 0 , 5 , move ua - v0 , 2 + v0 
[2436] ( move ua , ul ; move ul , 3 ; move ua , 3 ) 
[2437] loop 0 , 3 , ( v1 = ua - v0 ; move v1 - ul , v1 ) 
[2438] ( move ul + ul , ua ; move 4 , ul - 3 ) 
[2439] loop 0 , 5 , move 0 - 3 , v0 
[2440] ( move 4 , 3 ; move ua - ul , ul ) 
[2441] ( move 4 , 2 ; move 4 , ul ) 
[2442] ( move 2 , ua * ua ; move 4 , ul ) 
[2443] ( move 4 , 4 ; loop 0 , 3 , move v0 + ul , ul ) 
[2444] ( move 3 * 2 , ul + ul ; move ua , 2 ) 
[2445] ( move ul - ua , 2 ; move ua , ul ) 
[2446] ( move 0 - ua , ul ; move ul , 3 ) 
[2447] ( move ul - ua , ua ; move ua , ua - 2 ) 
[2448] ( loop 0 , 4 , move 3 , v0 ; move ul , 0 ) 
[2449] ( move ua + ul , 0 - ul ; move ua , 2 ) 
[2450] ( move ua , 4 ; loop 0 , 5 , move v0 , ul / 2 ) 
[2451] loop 0 , 3 , move 4 , v0 - 4 
[2452] ( move ua + 3 , ul ; move ul , 3 ; move ua , ua + ul ) 
[2453] loop 0 , 2 , ( move 4 , 3 ; move ul , 4 ) 
[2454] loop 0 , 5 , move 3 , v0 - 3 
[2455] ( move 3 , 4 ; move ul , ul ) 
[2456] ( move ul , 4 ; move 3 , ul ) 
[2457] ( move ua , 4 + 2 ; move 2 , ul ) 
[2458] ( move 0 - ua , 0 ; move ul , ul ) 
[2459] ( move ua , ul ; move ua + 2 , 2 ) 
[2460] loop 0 , 3 , ( move ul , v0 ; move 2 , ua - 2 ) 
[2461] loop 0 , 2 , ( move ua , ul ; move ul , 2 ) 
[2462] ( move ul , 4 ; move 0 - ua , 2 ) 
[2463] ( move ul - ua , ua ; move 2 , 4 ) 
[2464] loop 0 , 5 , move 2 , 2 / 4 
[2465] ( move ua , ua / 3 ; move 0 - 3 , ul - ua ) 
[2466] loop 0 , 4 , move v0 * v0 , ua - v0 
[2467] move ua + 4 , 4 
[2468] ( loop 0 , 4 , move 3 - v0 , v0 ; move v0 , v0 ) 
[2469] ( loop 0 , 6 , move v0 , ua + 4 ; move ua , v0 ) 
[2470] loop 0 , 5 , move 2 , ul / v0 
[2471] loop 0 , 2 , move 3 , 4 / ua 
[2472] ( move ua , ul ; move ul - ua , ua - ul ) 
[2473] ( move 2 , 0 ; move ul - ua , ua * ua ) 
[2474] ( move ul , 4 + 3 ; move 4 - ul , ul ; move 3 , 2 ) 
[2475] ( move ua , ua ; move 3 , ul ; move ua , 3 ) 
[2476] ( move 3 , ul ; move 4 , 3 + 2 ) 
[2477] loop 0 , 7 , move v0 , 3 - v0 
[2478] ( move ua , 2 - ua ; move ua + ul , ul - 3 ) 
[2479] ( move ua , ul ; v0 = 3 ; loop 1 , 5 , move v0 , 4 ) 
[2480] ( move 4 - ua , ua ; move ua + ul , ua - 4 ) 
[2481] ( move ul - ua , ua ; move 2 , ul - 2 ) 
[2482] ( move ua , 2 ; move ua , 2 ; move ul , ua - ul ) 
[2483] loop 0 , 5 , move 0 - ul , ul / v0 
[2484] loop 0 , 5 , move 3 , ua - v0 
[2485] ( move ul - 4 , ua ; move 3 , ua * ua ) 
[2486] loop 0 , 7 , move 4 / v0 , v0 * 2 
[2487] move 4 * 2 , 4 + 2 
[2488] ( move ua , 2 ; move 3 , 2 ) 
[2489] ( move 4 + ul , 3 ; move ul + ul , 2 ) 
[2490] ( move 4 + ul , ua + ua ; move 4 , 2 ) 
[2491] ( loop 0 , 6 , move ul , v0 + v0 ; move v0 , ua ) 
[2492] ( move ul , ul ; move ua , ul ; move 3 , ul + ul ) 
[2493] loop 0 , 3 , move ul - ua , 3 / v0 
[2494] ( move 4 , ul ; move 4 + 2 , ul ) 
[2495] loop 0 , 4 , move v0 + ul , v0 / ua 
[2496] ( move ua , 4 ; move ul - ua , 2 / 3 ) 
[2497] loop 0 , 5 , move 3 / v0 , 4 - v0 
[2498] ( move ua - ul , 2 ; move ua , 4 ) 
[2499] ( move ua , 0 ; move 2 , ua - 4 ) 
[2500] ( move ul , ul ; ( move ua , 2 ; move 3 , 4 / ua ) ) 
[2501] loop 0 , 7 , move v0 , ua / 3 
[2502] ( move 0 , ul / 3 ; loop 0 , 6 , move v0 , ul ) 
[2503] ( move ua , ul ; move ul + ul , 4 ; move ua , 4 / ua ) 
[2504] loop 0 , 3 , ( move ul , v0 ; move ua , ul ) 
[2505] ( loop 0 , 5 , move 2 , 3 ; move v0 , v0 ) 
[2506] loop 0 , 5 , move ul + v0 , 4 + ul 
[2507] loop 0 , 4 , move v0 , v0 / 3 
[2508] loop 0 , 7 , move 3 - v0 , ul 
[2509] loop 0 , 6 , move 2 , ul / v0 
[2510] loop 0 , 2 , ( move ua , v0 ; move ua , 2 ) 
[2511] ( move 2 - ua , ul ; move 3 , 4 ) 
[2512] ( loop 0 , 4 , move v0 , v0 ; move 3 , v0 * 3 ) 
[2513] ( move 4 , 4 ; move 3 + ul , ua - 4 ) 
[2514] ( loop 0 , 5 , move v0 , v0 ; move ul , 4 * 3 ) 
[2515] ( loop 0 , 5 , move ul , v0 ; move v0 , ul ) 
[2516] ( loop 0 , 6 , move v0 , 4 ; move v0 , v0 ) 
[2517] ( loop 0 , 4 , move ua - v0 , 4 ; move v0 , ul ) 
[2518] loop 0 , 3 , move v0 + v0 , 4 - v0 
[2519] ( move ul , ul / 4 ; move ua , ul ) 
[2520] ( move 4 , ul ; move ua + ul , 2 ) 
[2521] ( move 4 , ul ; loop 0 , 6 , move v0 , 2 ) 
[2522] loop 0 , 3 , move ua , v0 - 4 
[2523] loop 0 , 4 , move 2 , 4 / v0 
[2524] ( move 4 , 4 + ul ; move 2 , ul ) 
[2525] loop 0 , 3 , move 4 / v0 , ua - v0 
[2526] loop 0 , 4 , move 4 - ua , v0 + v0 
[2527] ( move ua - 2 , ul / 3 ; loop 0 , 2 , move 2 , 2 ) 
[2528] ( loop 0 , 3 , move ua , 3 / 2 ; v1 = v0 ) 
[2529] loop 0 , 5 , loop 1 , ul , move v1 - v0 , 4 
[2530] loop 0 , 2 , ( move ul , ua ; move 4 - v0 , ul ) 
[2531] loop 0 , 4 , move v0 + 3 , ul - v0 
[2532] ( move ua , 4 ; move 3 * 3 , 3 - ua ) 
[2533] ( move ua , ua ; move 4 + ul , ua - 4 ) 
[2534] loop 0 , 6 , move v0 - 2 , 2 
[2535] loop 0 , 4 , move 3 - ua , v0 / 2 
[2536] loop 0 , 2 , loop 1 , 2 , move v0 + ul , v1 
[2537] ( move ua , ua ; move 3 , 3 ; move ua , ul ) 
[2538] loop 0 , 2 , ( move 2 , v0 ; move ul , ul ) 
[2539] ( move ua , 0 ; move ul - 3 , ul ; move ua , ul ) 
[2540] loop 0 , 2 , loop 1 , 3 , move 2 - v0 , v1 
[2541] loop 0 , 6 , move v0 - ul , ul / ua 
[2542] ( move 2 , ul ; move 4 + 4 , 2 ) 
[2543] ( move ua + ul , 4 ; move ua , 2 ) 
[2544] ( move 3 , ua ; move 2 + ul , ua / 4 ) 
[2545] ( move ua , ul - 2 ; move ua , 2 ) 
[2546] loop 0 , 6 , move 4 + ul , 3 
[2547] ( loop 0 , 5 , move 3 , v0 ; move ua , v0 ) 
[2548] ( move 4 , ua ; move ul - ua , 4 ) 
[2549] loop 0 , 2 , ( move 3 , ul ; move v0 - 2 , ua ) 
[2550] ( move 4 , ul ; ( move ul , 2 ; move 4 + ul , ul ) ) 
[2551] ( move 3 , ua ; loop 0 , 5 , move v0 , v0 ) 
[2552] ( loop 0 , 6 , move 3 , ul ; move v0 - ul , ua ) 
[2553] loop 0 , 4 , move 2 , 2 / ua 
[2554] ( move ua , ul ; move ul - 4 , ul / 2 ) 
[2555] ( move 2 - ua , ul ; move 4 , ul / ua ) 
[2556] loop 0 , 3 , move v0 + ua , 2 
[2557] ( move 3 , 2 ; move 4 , ul ) 
[2558] ( loop 0 , 3 , move 3 / v0 , v0 ; move ua , v0 + ua ) 
[2559] ( move 2 , 4 / 2 ; ( move 3 , ul ; move ul + ul , 4 ) ) 
[2560] ( move ua - 2 , ul - 4 ; move ua , 0 - 2 ; move 0 , 0 ) 
[2561] ( move ua - ul , ua ; move 2 , ua / 3 ) 
[2562] ( move 4 , 4 / 3 ; move 2 , 4 ) 
[2563] ( loop 0 , 5 , move v0 , ul ; move 3 , v0 ) 
[2564] ( move 4 , 0 ; move 3 , ul - 2 ) 
[2565] loop 0 , 4 , move ua , 4 * 2 
[2566] ( move ua / 4 , 3 ; move 4 , ua / 4 ; v0 = ul ) 
[2567] loop 0 , 2 , move 4 , ua - v0 
[2568] loop 0 , 2 , ( move v0 , v0 ; move 4 + v0 , v0 ) 
[2569] ( move 2 , ul ; move ul , ua / 3 ; loop 0 , 4 , move 2 , 4 ) 
[2570] ( move ua + 2 , ua + ua ; move ul , 4 ; move ua + ul , ua ) 
[2571] ( move 0 , ul ; loop 0 , 5 , move v0 , 2 ) 
[2572] loop 0 , 4 , move 2 , ua / v0 
[2573] ( move ul , ul ; loop 0 , 5 , move ua , 4 ) 
[2574] loop 0 , 3 , ( move v0 , v0 ; move ua , ul ) 
[2575] loop 0 , 5 , move 2 - v0 , v0 
[2576] loop 0 , 6 , move v0 - ul , 3 - 4 
[2577] ( move ua - ul , ul ; move 0 - ua , ul ) 
[2578] ( move 3 * 3 , ul ; move 2 , 4 ) 
[2579] ( loop 0 , 9 , v1 = 2 ; move v0 , ua - v0 ) 
[2580] ( move ua , ua * ua ; move ul - 4 , ul ) 
[2581] ( loop 0 , 5 , move v0 , v0 ; move v0 + ul , 4 ) 
[2582] loop 0 , 7 , move 3 , ua - v0 
[2583] loop 0 , 3 , ( v1 = 2 / v0 ; move v1 + ua , 2 ) 
[2584] ( move ua , ua / 4 ; move ul - 4 , ul ) 
[2585] loop 0 , 2 , loop 1 , 3 , move v1 , 4 
[2586] loop 0 , 5 , move v0 + ul , ua * ua 
[2587] ( move ua + 2 , ua + 4 ; move 2 , ul ) 
[2588] ( move 3 , 3 + ul ; move 2 , ua * ua ) 
[2589] ( move ua , 0 - ul ; move 3 , 2 ) 
[2590] ( move 2 , 0 - 3 ; move ua , ul ) 
[2591] loop 0 , 5 , move 3 , 2 - v0 
[2592] ( move ua , ul / 2 ; move ul , 2 ; move ua , ul ) 
[2593] ( move ul - 4 , 2 ; move ua , 2 ) 
[2594] ( move ua , 4 / ua ; move ul + ul , 4 + 3 ) 
[2595] ( move ul + ul , ul ; move 0 - ua , 4 ) 
[2596] ( move 3 , 3 ; move 4 , ul ) 
[2597] ( move ua + ul , ua ; move ua - ul , ua * ua ) 
[2598] ( move ua - ul , 0 ; move ua , 2 ) 
[2599] loop 0 , 3 , move ua / v0 , ul + v0 
[2600] ( move ua - ul , ua ; ( move ua , ul ; move ua , 2 ) ) 
[2601] loop 0 , 3 , move v0 - 4 , v0 
[2602] loop 0 , 5 , move ul - 3 , 2 / v0 
[2603] loop 0 , 3 , move 2 + v0 , ul - v0 
[2604] ( move 2 , 3 ; loop 0 , 4 , move v0 , ul ) 
[2605] loop 0 , 4 , move 2 * v0 , v0 + ul 
[2606] loop 0 , 4 , move 4 , 2 
[2607] loop 0 , 4 , move 4 , v0 * 3 
[2608] ( move ua , ua - 3 ; move 3 , 3 ) 
[2609] loop 0 , 3 , move v0 + v0 , v0 - 4 
[2610] ( move ul - ua , ua * ua ; move ul , 4 + ul ) 
[2611] loop 0 , 3 , move ua + 2 , 4 
[2612] loop 0 , 3 , move ul - ua , 4 / v0 
[2613] ( move 2 , ua ; move ua , ul ; move ul - 3 , 4 ) 
[2614] ( move ua , ul / 3 ; move 2 , 2 ) 
[2615] ( move ua , 0 ; loop 0 , 6 , move v0 , ul + v0 ) 
[2616] ( move ua , ul / ua ; move ua , ua / 4 ) 
[2617] loop 0 , 3 , move 3 , 3 + v0 
[2618] ( move 4 , 0 - ul ; move 4 / 3 , ua + ul ) 
[2619] ( move 2 , ua ; move ua + 4 , ul ) 
[2620] loop 0 , 4 , ( move 2 + v0 , 3 + v0 ; v1 = v0 ) 
[2621] ( move ua , 3 ; move 2 , 3 + 2 ) 
[2622] ( move ul , ua + 3 ; loop 0 , 4 , move 4 , ul ) 
[2623] loop 0 , 7 , move v0 - ul , ua * ua 
[2624] ( move ul , ua * ua ; loop 0 , 3 , loop 1 , ul , move ua , 3 ) 
[2625] ( loop 0 , 6 , move 2 , v0 ; move ua , 0 ) 
[2626] ( move ua , 3 - 4 ; move ua , 3 ) 
[2627] loop 0 , 3 , loop 1 , 2 , move 2 , v0 
[2628] ( loop 0 , 5 , move ua - 4 , ua / v0 ; v2 = 4 ) 
[2629] ( move ul , ua + ua ; loop 0 , 2 , move 4 - v0 , ul ) 
[2630] ( move 4 , ua ; loop 0 , 6 , move v0 , 4 ) 
[2631] ( move 2 , ua ; loop 0 , 6 , move v0 , ul ) 
[2632] ( move 4 , ul ; move 4 * 2 , 3 ) 
[2633] loop 0 , 7 , move v0 - 4 , v0 + 4 
[2634] ( loop 0 , 5 , move v0 , ua / v0 ; move ul , 0 ) 
[2635] ( move ua + ul , 3 ; move ua - ul , 4 ) 
[2636] loop 0 , 2 , ( move ul , v0 ; move v0 - ua , ul ) 
[2637] loop 0 , 5 , move ua - ul , 4 
[2638] loop 0 , 7 , move 3 , v0 / 4 
[2639] ( move 4 , 2 ; move ua , 0 - 3 ) 
[2640] ( move 0 , ua * ua ; loop 0 , 5 , move v0 , ul ) 
[2641] ( move 2 , ua ; loop 0 , 6 , move v0 , 4 ) 
[2642] ( move ua + 2 , ua ; move ua + ul , ua * ua ) 
[2643] ( move 2 , 0 ; move ua + 3 , ul ) 
[2644] ( move 2 , 3 ; move ua + ul , ul ) 
[2645] ( move ua , ul ; ( move 3 , ul ; move ua , ul - 3 ) ) 
[2646] ( loop 0 , 6 , move v0 , v0 ; move 4 , v0 ) 
[2647] loop 0 , 5 , move ul - v0 , 4 
[2648] loop 0 , 4 , move v0 + v0 , v0 / ua 
[2649] ( move 3 / 2 , ua ; move ua , ul ; move 2 + ul , ua ) 
[2650] loop 0 , 5 , move 2 + v0 , 4 
[2651] ( move 4 , ul ; move ul , ua ; move ua / 4 , 4 + ul ) 
[2652] ( move 3 , 3 / 2 ; v0 = ul ; move ua - v0 , ul ) 
[2653] ( move ua + ul , ua + ul ; loop 0 , 3 , move v0 , ul ) 
[2654] loop 0 , 3 , move 4 , v0 + 3 
[2655] loop 0 , 2 , loop 1 , 3 , move 2 / v1 , v0 
[2656] loop 0 , 5 , move ua + ul , 2 
[2657] loop 0 , 4 , move ua - 4 , 3 - v0 
[2658] ( move ul , 3 ; move ua - 2 , ua / 3 ; move ua - ul , ul ) 
[2659] ( loop 0 , 6 , move 2 - v0 , v0 ; move ua , ua ) 
[2660] ( loop 0 , 2 , move v0 + 3 , 4 ; move 3 , ul ) 
[2661] ( move ua , ul / ua ; move 2 , 2 ) 
[2662] ( loop 0 , 6 , move v0 , ul ; move ul , ua ) 
[2663] ( loop 0 , 4 , move v0 , ul ; move v0 , 0 ; move ua , 2 ) 
[2664] ( loop 0 , 6 , move v0 , v0 ; move ua , 3 ) 
[2665] loop 0 , 5 , move v0 , 2 / 4 
[2666] ( move ul - ua , 3 ; move 3 , ul ) 
[2667] loop 0 , 6 , ( move 2 - ua , ul - 2 ; v1 = v0 ) 
[2668] ( move 2 , 3 / ua ; loop 0 , 5 , move v0 , v0 ) 
[2669] ( move ul - ua , ua ; loop 0 , 3 , move v0 , v0 * v0 ) 
[2670] ( move 3 - ua , 4 ; move ua , ul ) 
[2671] ( move ua , 3 ; move ua - ul , 2 ) 
[2672] loop 0 , 6 , move ul - v0 , 2 * v0 
[2673] ( loop 0 , 5 , move v0 + v0 , 3 ; move ul , ul ) 
[2674] ( move ua , 2 ; move ua , ul ; move ul , 3 + ul ) 
[2675] ( move ua + 3 , ua / 3 ; move ua + ul , 2 + ul ) 
[2676] ( move ua , 0 ; loop 0 , 6 , move v0 , v0 * v0 ) 
[2677] loop 0 , 3 , move 4 , v0 + 2 
[2678] ( move 4 , 3 ; move 4 , 4 ) 
[2679] ( move ua , ua - 3 ; move 3 , 2 - 3 ) 
[2680] ( move ua , 3 ; move 4 , ua - ul ) 
[2681] ( move 2 - 4 , 0 ; move 3 , ul ) 
[2682] loop 0 , 4 , move ul - 4 , 3 + v0 
[2683] ( move 4 , 0 ; move 4 + ul , 4 ) 
[2684] ( move 3 / 2 , 0 ; move ua , ul ) 
[2685] loop 0 , 5 , move 3 , v0 / 2 
[2686] ( move ul - 4 , ul ; move 4 , ua - 4 ) 
[2687] ( move ul - 4 , 2 ; move 2 , 3 + ul ) 
[2688] loop 0 , 6 , move v0 / 2 , v0 - ul 
[2689] ( loop 0 , 4 , move 3 , ua / v0 ; move v0 + ua , v0 ) 
[2690] loop 0 , 2 , loop 1 , 3 , move v1 * v1 , ul 
[2691] ( loop 0 , 3 , move 0 - ul , ul ; move ua / v0 , ua ) 
[2692] ( move ua + ul , 3 ; move ua , 4 ) 
[2693] ( move 3 , 2 ; loop 0 , 3 , move v0 , ul - v0 ) 
[2694] ( move ua + ul , 3 / 4 ; move ua , ua * ua ) 
[2695] loop 0 , 4 , move v0 + 2 , ua * ua 
[2696] ( move 3 , ul ; move ua - ul , ua - ul ) 
[2697] ( loop 0 , 6 , move 2 , v0 ; move v0 , ua ) 
[2698] loop 0 , 4 , move ul - 4 , v0 * v0 
[2699] ( v0 = 2 ; loop 1 , 4 , move 4 + 3 , v0 ) 
[2700] move 3 * 3 , 4 * 4 
[2701] ( move ua - ul , ul ; move ua + 2 , 2 ) 
[2702] ( move 4 , 4 ; loop 0 , 6 , move v0 , v0 ) 
[2703] ( move 0 - 4 , ua ; move ua , ul ) 
[2704] ( move 4 , ul ; loop 0 , 4 , move v0 + v0 , 4 ) 
[2705] ( move ul , 2 ; move ua - ul , ua * ua ) 
[2706] ( move ul , 4 ; move ua , ul / 2 ) 
[2707] loop 0 , 3 , move v0 + 4 , 2 
[2708] loop 0 , 3 , move ua , v0 - 3 
[2709] loop 0 , 5 , move ul + v0 , v0 - 3 
[2710] loop 0 , 3 , ( move 2 * v0 , v0 ; move ua , v0 ) 
[2711] ( move 2 + ul , 3 ; loop 0 , 3 , loop 1 , ul , move 2 , ul ) 
[2712] loop 0 , 2 , move ul - ua , v0 + ul 
[2713] ( move ua , ul ; loop 0 , 4 , move v0 , 3 ) 
[2714] loop 0 , 2 , move 4 + 3 , 4 
[2715] ( move 3 , 0 ; move ul , ul ; move ua , ul ) 
[2716] ( move ua - ul , ul / ua ; move 3 , ul ) 
[2717] ( move ua - ul , 3 - ul ; move 4 , 3 - 4 ) 
[2718] ( move ul , 4 + ul ; loop 0 , 6 , move v0 , v0 ) 
[2719] loop 0 , 7 , move v0 , 0 - 3 
[2720] loop 0 , 3 , ( move 4 , 3 ; move ul , 4 + 2 ) 
[2721] loop 0 , 6 , move 2 , ua - v0 
[2722] ( move 4 + 3 , ua ; move ul - ua , ul ) 
[2723] ( move ua , 2 ; move ua + ul , 3 ) 
[2724] ( move ua , 3 ; move 2 , 4 ) 
[2725] loop 0 , 3 , move 4 * v0 , ul / v0 
[2726] ( loop 0 , 6 , move ul , v0 + ul ; move v0 / 2 , ul ) 
[2727] ( move ua + 4 , ul ; move ul - 4 , ul ; move 0 , ua ) 
[2728] ( move ul , ua * ua ; move ua , ul / 3 ) 
[2729] ( loop 0 , 4 , move ul , 2 / v0 ; move v0 , ul ) 
[2730] ( ( move 0 , ul / 2 ; move 4 , ua - 4 ) ; move ua , 3 ) 
[2731] loop 0 , 5 , move 2 * v0 , ua / 3 
[2732] ( loop 0 , 5 , move ul + ul , v0 ; move ua - v0 , v0 ) 
[2733] loop 0 , 7 , move v0 + ul , 2 
[2734] ( move 3 , 0 ; move 4 , ua - ul ) 
[2735] ( move ul , ua ; move ua , ul ; move 2 , 2 ) 
[2736] ( move 3 , 2 ; loop 0 , 4 , move ul , ul ; move v0 , v0 ) 
[2737] loop 0 , 3 , loop 1 , 2 , move 2 , v1 + v0 
[2738] ( loop 0 , 4 , move ul , v0 ; move v0 , 2 / ua ) 
[2739] ( move ua , ul ; loop 0 , 5 , move v0 , ul + v0 ) 
[2740] loop 0 , 2 , ( move ul , v0 ; move ua , v0 ) 
[2741] ( move ul , ul / ua ; loop 0 , 6 , move v0 , 0 - ul ) 
[2742] ( move ua + ul , 4 ; move 2 , ul ) 
[2743] loop 0 , 3 , move ua - 4 , 2 
[2744] loop 0 , 3 , move ua - 4 , ul - v0 
[2745] loop 0 , 4 , move ua , 0 - 2 
[2746] ( move ua , 2 ; loop 0 , 2 , move ul - ua , v0 ) 
[2747] ( move ul , ua / 4 ; move ua + 2 , ua - ul ) 
[2748] ( move ua + 3 , ul ; loop 0 , 4 , move v0 , ul ) 
[2749] ( move 2 , 4 - ua ; move ua , 2 ) 
[2750] loop 0 , 3 , move v0 - ua , 2 + v0 
[2751] loop 0 , 4 , move ua + ul , ul + v0 
[2752] loop 0 , 5 , move ua / 2 , v0 + v0 
[2753] ( move ua , ua ; move ul , ul ; move ua + ul , ul ) 
[2754] loop 0 , 5 , move 4 , 4 / 3 
[2755] ( move ul , 4 ; move ua , 4 + 3 ) 
[2756] ( move 3 - ua , ul ; loop 0 , 2 , move ul , ul ) 
[2757] ( move ul , ua ; move ua - ul , 4 + 4 ) 
[2758] ( move ua , 0 ; move ul , ul ; move ua , 3 ) 
[2759] ( move 3 , 2 ; move ua - 2 , 4 ) 
[2760] loop 0 , 2 , ( move v0 - ua , 2 ; move v0 + ul , 0 ) 
[2761] ( loop 0 , 5 , move 2 , ul ; move ul , v0 ) 
[2762] ( move ua + ul , ul ; move ul - 3 , ul ; move ua , ua + ul ) 
[2763] ( move 3 , 4 + 2 ; move 2 - ua , ul ) 
[2764] ( move ua , 0 ; move ua , ua - 2 ) 
[2765] ( move ul - ua , ul ; move ua , ul ; move ul , ul ) 
[2766] ( loop 0 , 5 , move 3 , v0 ; move ul , ul ) 
[2767] loop 0 , 2 , move v0 - ua , v0 - 2 
[2768] loop 0 , 3 , ( move ua , 3 ; move v0 , v0 ) 
[2769] ( move ul , ul ; loop 0 , 5 , move v0 * 2 , v0 ) 
[2770] loop 0 , 5 , move 4 , ua * ua 
[2771] loop 0 , 7 , move 2 , v0 + 2 
[2772] ( move ua , 0 - 3 ; move ul , 2 ) 
[2773] ( loop 0 , 5 , move v0 , 4 ; move ul , ua ) 
[2774] loop 0 , 3 , ( v1 = v0 - ul ; move v1 - 4 , ul ) 
[2775] ( move ua , ul / 4 ; move ul , 2 - 3 ) 
[2776] ( move ua , 4 ; move ua + ul , ua * ua ) 
[2777] ( move 4 , ua ; move 3 , ul - 3 ) 
[2778] ( move ua - 2 , ul ; move ua , 2 ) 
[2779] loop 0 , 5 , move v0 - ul , 4 / v0 
[2780] loop 0 , 5 , move 2 , 3 - v0 
[2781] ( move ua - ul , 3 ; move 4 , 4 ) 
[2782] loop 0 , 5 , move ul + v0 , v0 * 3 
[2783] ( move 3 + 2 , ua ; move 2 , 2 ) 
[2784] ( move ua , ul / 3 ; move 4 , 3 ) 
[2785] loop 0 , ul , loop 1 , 7 , move v1 - 3 , ul - v1 
[2786] ( move ua , 2 * 2 ; move 2 , 4 / 3 ) 
[2787] ( loop 0 , 5 , move ul , ul ; move ul , 0 ) 
[2788] loop 0 , 2 , ( move v0 , ul ; move ua , 3 ) 
[2789] loop 0 , ul , loop 1 , 5 , move v0 - v1 , v0 - v1 
[2790] ( move 3 , ul / ua ; move 3 , ul ; move ua , ul ) 
[2791] ( move ua - ul , 0 ; move 3 + ul , 4 / 3 ) 
[2792] ( ( move ua , ul ; move ul , ua / 4 ) ; move 4 + ul , 3 ) 
[2793] ( move 4 , ul ; move ua , 4 + 4 ) 
[2794] ( move 2 , 4 ; loop 0 , 6 , move ul , ul ) 
[2795] ( loop 0 , 5 , move v0 , ul ; move 2 , v0 ) 
[2796] ( move ua , ua ; move 2 - ua , 2 ) 
[2797] ( move 4 , 3 ; move 3 , ul ) 
[2798] ( loop 0 , 3 , move v0 , v0 + v0 ; move 4 , ul ) 
[2799] loop 0 , 2 , move ua , 0 - 3 
[2800] ( move ua , ua - ul ; move ul , ul ; move 3 , 4 + 3 ) 
[2801] ( move ua , ul ; move 3 , 4 * 4 ) 
[2802] loop 0 , 5 , move 2 , v0 * 3 
[2803] ( move ul , 0 ; move 4 , 2 / ua ) 
[2804] ( move ul , ul ; move ua / 2 , 2 ; move ua , 3 + ul ) 
[2805] ( move ua + 2 , ul ; move ua , ua / 3 ) 
[2806] ( loop 0 , 5 , move ul , v0 ; move ua , v0 ) 
[2807] loop 0 , 4 , move 2 * v0 , v0 * 3 
[2808] ( move 4 , ul ; loop 1 , 6 , move 2 , v1 * v1 ) 
[2809] loop 0 , 6 , move 3 / v0 , ul / ua 
[2810] ( move ul - ua , 3 ; move 3 + ul , ul ) 
[2811] loop 0 , 2 , move ul - ua , ua - v0 
[2812] loop 0 , 3 , ( move ua , v0 ; move ul , ul ) 
[2813] loop 0 , 3 , ( move v0 , v0 ; move ul - 4 , 4 ) 
[2814] ( loop 0 , 6 , move v0 - 3 , ul / v0 ; v1 = v0 ) 
[2815] ( loop 0 , 5 , move v0 + 2 , v0 ; move 2 , ua ) 
[2816] loop 0 , 3 , move 2 - ua , ul 
[2817] ( move 3 , ul ; move ua , 4 * 3 ) 
[2818] ( move ua , 4 + ul ; v0 = 4 ; move v0 , 2 ) 
[2819] loop 0 , 5 , move ul - v0 , ua * ua 
[2820] loop 0 , 3 , ( move v0 , ua * ua ; move 3 - ua , ua ) 
[2821] ( move ul - ua , 0 ; move ul , ul ; move ua + ul , ul ) 
[2822] ( move ul , ul ; move 4 , 4 ) 
[2823] ( move ua + 4 , ul ; move ul , 2 ) 
[2824] ( loop 0 , 4 , move v0 + 2 , v0 ; move v0 / 4 , ul ) 
[2825] ( move ua + ul , ua / 2 ; move ua , ua * ua ) 
[2826] ( move ua , ua ; ( move ul , 2 ; move ul - ua , ul / ua ) ) 
[2827] loop 0 , 3 , ( move v0 , v0 ; move ua , v0 ) 
[2828] loop 0 , 3 , move ua / v0 , 2 * v0 
[2829] ( move ul - ua , 3 ; move ua , 2 / ua ) 
[2830] ( move ua , ua ; move ua / 4 , 4 ) 
[2831] loop 0 , 3 , ( move 4 / v0 , ul ; move v0 , v0 ) 
[2832] ( move 4 , ul ; move ul / ua , ul ; move ua , 4 - ul ) 
[2833] loop 0 , 4 , move 3 + v0 , 2 
[2834] ( move ul , ua - 4 ; move ua / 2 , 4 / 2 ; move ua , 0 ) 
[2835] loop 0 , 5 , move ul , 3 - v0 
[2836] ( move 2 , ua ; move ua , 3 + 3 ) 
[2837] ( move ua , ua * ua ; move 3 , ul ) 
[2838] ( move ul - ua , ul ; loop 0 , 4 , move 4 , v0 ) 
[2839] ( move ua + 2 , 3 ; move ua , 4 ) 
[2840] loop 0 , 7 , move ul - v0 , v0 * 2 
[2841] ( move ul - ua , ul ; move ua , 0 - ul ) 
[2842] loop 0 , 4 , move v0 , ul / 4 
[2843] ( move 3 , 4 - ul ; move ul - ua , ua * ua ) 
[2844] ( move 2 , ul ; loop 0 , 2 , move 4 , ul ) 
[2845] ( move ua , 3 ; move 4 , 4 ) 
[2846] loop 0 , 2 , loop 1 , 2 , move v1 - 4 , v1 
[2847] ( move 3 , 3 * 3 ; move 4 , 4 ) 
[2848] ( move ua + 3 , 4 ; move 2 , 4 ) 
[2849] ( move 4 , 3 - 4 ; move 3 , ul ) 
[2850] ( loop 0 , 2 , move 3 , ul ; move ua , ul ) 
[2851] ( move 4 , ua / 4 ; move ua , ul ) 
[2852] loop 0 , 3 , move 3 + v0 , 2 
[2853] ( loop 0 , 6 , move ul , v0 * v0 ; move ua , v0 ) 
[2854] loop 0 , 6 , move 4 - ua , ul 
[2855] loop 0 , 2 , move 4 , ua * ua 
[2856] ( move ul - ua , ua ; move 2 , ua - 4 ) 
[2857] ( move 4 , 2 + ul ; move ua , ul + ul ; move ul , ul ) 
[2858] ( move ua , 3 / ua ; loop 0 , 4 , move v0 , v0 ) 
[2859] loop 0 , 5 , move 3 , 2 + v0 
[2860] loop 0 , 3 , move 2 , 3 / 2 
[2861] ( loop 0 , 5 , move v0 + v0 , 2 - v0 ; move ul , ua ) 
[2862] loop 0 , 4 , move v0 , 4 / 3 
[2863] ( move 4 , 2 ; move ua + ul , ul ) 
[2864] loop 0 , 2 , move ua - ul , v0 * 2 
[2865] ( move ul , 4 + ul ; loop 0 , 4 , move v0 , ul ) 
[2866] loop 0 , 3 , ( move ul , v0 ; move ul - ua , v0 ) 
[2867] ( move ul , 4 ; loop 0 , 4 , move v0 , v0 ) 
[2868] loop 0 , 7 , move 2 - v0 , ua * ua 
[2869] ( move 4 , ul / 3 ; move ua , 2 ) 
[2870] ( move ua , 3 ; move ua + ul , ua * ua ) 
[2871] loop 0 , 4 , move 0 - 4 , 4 
[2872] ( move ua / 3 , ul ; move ua + ul , ua / 4 ) 
[2873] ( move ua , 2 / ua ; move ua + ul , 3 ) 
[2874] ( loop 0 , 9 , v1 = 4 ; loop 2 , 4 , move v0 , v0 ) 
[2875] ( move ua , ul - 2 ; loop 0 , 5 , move v0 + ul , ul ) 
[2876] ( v0 = 2 - ua ; move v0 , ua ; move 4 + ul , v0 ) 
[2877] loop 0 , 2 , loop 1 , 3 , move v1 , v0 + ul 
[2878] ( move ua + 2 , ul ; loop 0 , 5 , move 2 , ua - v0 ) 
[2879] loop 0 , 4 , move v0 , 4 * 3 
[2880] ( move ua , ul ; loop 0 , 2 , move 4 , 2 ) 
[2881] ( move ua , ul ; loop 0 , ul , loop 1 , 6 , move 3 , 3 ) 
[2882] ( move 3 , 0 - ul ; move 3 , ul ) 
[2883] ( move 4 , 4 + 4 ; move ul , ul ) 
[2884] ( v0 = ua - ul ; move v0 , ua - 2 ; move v0 , v0 ) 
[2885] ( move 2 , 2 / 4 ; move ua , ul ) 
[2886] ( move ua , ua + ul ; ( move 2 , ul ; move 4 , 2 ) ) 
[2887] loop 0 , 3 , move 3 / v0 , 4 
[2888] ( move ul - 4 , ua ; move 4 + ul , 4 ) 
[2889] loop 0 , 4 , move 3 * v0 , ul + v0 
[2890] loop 0 , 5 , move 3 + 2 , v0 + ul 
[2891] ( move 3 - ua , ul ; move ul - ua , ul ) 
[2892] ( move ua + ul , ul / ua ; move 4 + ul , 4 ) 
[2893] loop 0 , 2 , loop 1 , 3 , move 2 / v0 , v0 / v1 
[2894] ( move ua + ul , 3 ; loop 0 , 6 , move v0 , v0 ) 
[2895] loop 0 , 2 , ( move v0 , v0 + v0 ; move ul - ua , 3 ) 
[2896] ( move 4 , 4 ; move ua - ul , 0 - ul ) 
[2897] loop 0 , 2 , loop 1 , 2 , move 4 , 3 * v1 
[2898] loop 0 , 2 , move v0 - ua , v0 - 4 
[2899] ( v0 = ul + ul ; move ua , v0 ; move ua , v0 * 4 ) 
[2900] ( loop 0 , 4 , move ua - 3 , ul ; move v0 , ua ) 
[2901] loop 0 , 2 , move 3 * 3 , 3 
[2902] ( move 4 , 4 ; loop 0 , 3 , move v0 , ul ) 
[2903] loop 0 , 7 , move v0 / 3 , 2 / ua 
[2904] ( move 2 , 3 + ul ; loop 0 , 5 , move v0 + v0 , v0 ) 
[2905] ( loop 0 , 3 , move 3 , v0 ; move ua , 2 ) 
[2906] loop 0 , 3 , loop 1 , 2 , move v0 , 2 
[2907] loop 0 , 3 , move 2 , 0 - ul 
[2908] ( move 3 , 3 ; move ua , ua - ul ) 
[2909] ( move ul , 3 ; v0 = ul ; loop 1 , 5 , move ua + ul , 2 ) 
[2910] loop 0 , 3 , ( move ua , ul ; move v0 , ul ) 
[2911] ( move ua + ul , ul ; move 2 , 2 ) 
[2912] ( move ul , ul / ua ; move ua , ul ) 
[2913] loop 0 , 7 , move v0 - ul , ul - v0 
[2914] ( loop 0 , 6 , move 4 , v0 ; move ul , v0 ) 
[2915] ( move 2 * 2 , 2 ; move 2 - ua , ul ) 
[2916] ( move 0 - ua , ul / 2 ; move 4 , ul ) 
[2917] loop 0 , 5 , move 3 , v0 - ul 
[2918] loop 0 , 2 , loop 1 , 3 , move v1 , ul 
[2919] ( move 4 , 3 ; move ua , 2 ) 
[2920] loop 0 , 2 , ( move v0 , ul ; move 4 + ul , v0 + v0 ) 
[2921] ( move ul - ua , 3 ; loop 0 , 4 , move 4 , v0 ) 
[2922] ( loop 0 , 4 , move v0 + ul , v0 ; move ua , ul ) 
[2923] ( move ua , ul / 4 ; move 3 , 3 ) 
[2924] ( move 2 , 2 ; ( move ul - ua , ua * ua ; v0 = ua ) ) 
[2925] ( move ua , ua ; move ua , 2 ; move ua , ul ) 
[2926] loop 0 , 3 , ( v1 = 3 ; move 2 - ua , v0 + v1 ) 
[2927] ( move 3 , ua ; loop 0 , 6 , move 2 , v0 ) 
[2928] ( move ua + ul , ul ; loop 0 , 5 , move 2 , ua - v0 ) 
[2929] ( move ul - ua , 0 - ul ; move ua , ul ) 
[2930] ( move ua , 3 ; move 0 , 4 ; move ua , 4 ) 
[2931] ( v0 = ua - ul ; move 2 , v0 ; move ua , v0 ) 
[2932] ( move ul , ul ; move ua , 4 ; loop 0 , 5 , move ul , ul ) 
[2933] ( move ua + ul , 3 ; move ul - ua , ul ) 
[2934] ( move ua , 2 ; move ua , ua * ua ) 
[2935] ( move ua + ul , ul / ua ; move 2 + ul , ua + 4 ) 
[2936] loop 0 , 5 , move 4 , 3 / v0 
[2937] loop 0 , 3 , loop 1 , 2 , move v0 - ua , 2 
[2938] ( move 3 , 4 * 2 ; move ul , ul ) 
[2939] ( move ul , 2 ; ( move ua + ul , 4 / 2 ; move 2 , ul ) ) 
[2940] ( loop 0 , 6 , move ul , ul ; move v0 , ul ) 
[2941] ( move ua , 3 ; loop 0 , 6 , move v0 , v0 ) 
[2942] ( move 4 + ul , ul ; move 2 , 4 ) 
[2943] loop 0 , 6 , move 3 - v0 , ua - ul 
[2944] ( move ua , ul ; move 0 , ul ; move ua - ul , 4 ) 
[2945] ( move ua - ul , 3 - ua ; move 4 , 2 ) 
[2946] loop 0 , 5 , move v0 - ul , 4 
[2947] ( move ul , ua * ua ; loop 1 , 3 , move ua , 2 ) 
[2948] loop 0 , 4 , move 4 - v0 , ul 
[2949] ( move 3 , ul ; move 4 + ul , ua / 3 ) 
[2950] loop 0 , 6 , move 0 - 3 , v0 
[2951] ( move ul , ul ; loop 0 , 5 , move 3 / v0 , ul ) 
[2952] ( move 4 , ul ; move ua , 0 - 4 ) 
[2953] ( move 4 , 3 ; move 4 , ul ) 
[2954] ( move 4 , ul ; move 2 , 4 ) 
[2955] loop 0 , 7 , move v0 + 4 , ua / 3 
[2956] loop 0 , 3 , move v0 - 4 , ul 
[2957] ( move 3 , ua - ul ; move 3 , ul ; loop 0 , ul , move ua , 2 ) 
[2958] loop 0 , 4 , move 2 + v0 , ul - 3 
[2959] ( move 3 - ul , 3 ; move ua , ua * 3 ; move 4 , 2 ) 
[2960] ( move 4 , ul ; move ua , 2 ; move 4 , ul ) 
[2961] ( move 4 , ua ; move ul - 4 , 4 ) 
[2962] ( move ua + ul , 3 - ua ; move ua - 2 , 0 - 4 ) 
[2963] loop 0 , 6 , ( v1 = 2 ; move 0 - 4 , v1 ) 
[2964] ( loop 0 , 3 , move ua , 4 ; move v0 , ua ) 
[2965] ( move ua , 4 ; loop 0 , 5 , move v0 , ul ) 
[2966] ( move 3 , 4 * 3 ; move ua , 3 / ua ) 
[2967] ( move ua + ul , 4 + ul ; move 2 , ul ) 
[2968] ( ( move ul , 2 ; move ua , ul ) ; move ua - 3 , 3 - ul ) 
[2969] loop 0 , 2 , loop 1 , 3 , move 0 - 2 , v1 * v1 
[2970] ( move 3 , 2 - 3 ; move 4 , ul ) 
[2971] loop 0 , 4 , move 2 , v0 / 3 
[2972] loop 0 , 2 , ( move ua , v0 ; move v0 , ul / 2 ) 
[2973] loop 0 , 2 , move 3 , 3 - v0 
[2974] ( v0 = ua - 2 ; move v0 , v0 + ul ; move ua , v0 ) 
[2975] ( move ul , 2 ; move 4 , 2 ) 
[2976] loop 0 , 6 , move 3 , 4 
[2977] loop 0 , 4 , move ul + v0 , 3 - 4 
[2978] ( loop 0 , 5 , move ul , v0 ; move 3 , ul ; move v0 , 0 ) 
[2979] ( move ul , ul ; loop 0 , 5 , move v0 , v0 / 4 ) 
[2980] ( move ua + ul , ua - ul ; loop 0 , 5 , move v0 , v0 ) 
[2981] ( move ul , ul ; move 3 , 4 + ul ; move ua , ul ) 
[2982] ( move ua , 0 ; move ul , 4 + ul ; move 4 - ua , 2 ) 
[2983] loop 0 , 7 , move 2 , v0 * 3 
[2984] loop 0 , 5 , move 3 , v0 - 4 
[2985] ( move 0 , ul ; loop 0 , 4 , move 3 , ul ) 
[2986] loop 0 , 3 , move 3 , ul / ua 
[2987] ( move ul - ua , 2 ; move 4 + ul , ul ) 
[2988] ( move 2 , 3 ; move 4 , ua * ua ) 
[2989] loop 0 , 7 , move v0 - 2 , 4 
[2990] ( move 4 , ul ; move 4 + 3 , 3 - ul ; move ua , 4 ) 
[2991] ( move ua , 0 ; move 3 , 0 - ul ) 
[2992] ( move 3 , 4 ; loop 0 , 5 , move v0 , v0 ) 
[2993] loop 0 , 3 , move 3 , 4 / ua 
[2994] loop 0 , 7 , move 4 + v0 , 3 
[2995] ( move 4 , 2 ; move ua + 2 , 4 ) 
[2996] ( move ua , 2 ; v0 = ua ; move v0 , ua / 3 ) 
[2997] ( move 3 , 3 ; move 4 + ul , ul ) 
[2998] ( move 0 - 2 , 0 ; loop 0 , 6 , move v0 , v0 ) 
[2999] ( loop 0 , 2 , move 2 / v0 , ul / ua ; move ua , v0 ) 
[3000] ( move ua , 0 ; loop 0 , 5 , move v0 , 4 ) 
[3001] move 3 * 3 , 2 - 3 
[3002] ( move ua / 4 , ua + 3 ; move 0 - ua , 4 - ua ) 
[3003] ( move 3 , ul + ul ; move 4 , ul - 3 ) 
[3004] ( move 4 , ua * ua ; move 2 , ul ) 
[3005] ( move ua + 3 , ul ; move ua + 2 , 2 ) 
[3006] ( move 4 , ua * 3 ; move ua , ul ; move ua + ul , 2 ) 
[3007] ( move 3 , 3 ; move ua , ul ; move ul , ua + ul ) 
[3008] loop 0 , 5 , move ul - v0 , ua - v0 
[3009] ( move 4 , ul / 4 ; move ua , 2 ) 
[3010] ( move ua - ul , 0 ; move ul + ul , ul ; move ua , 2 - ua ) 
[3011] ( move ul - ua , 0 ; move ua + 2 , ua * ua ) 
[3012] ( move ua , ua ; move ua + ul , 0 - 2 ) 
[3013] loop 0 , 7 , move ul , 4 + 2 
[3014] ( move ua , ua ; move ul , 2 ; move 2 , 4 ) 
[3015] ( move ua , 3 ; move 3 , 2 - 3 ) 
[3016] ( loop 0 , 5 , move ul , ul ; move 4 , 0 ) 
[3017] loop 0 , 5 , move v0 , 4 * 3 
[3018] ( move 4 , 3 ; loop 0 , 6 , move 2 , v0 ) 
[3019] ( move ua , 0 ; move 3 , 4 + ul ) 
[3020] ( v0 = ul ; move ul , ul ; loop 1 , 5 , move 2 , ua * ua ) 
[3021] loop 0 , 4 , move 3 , ul + v0 
[3022] loop 0 , 6 , move 2 , 3 / v0 
[3023] ( move ua , 0 ; move ua + 3 , 4 ) 
[3024] loop 0 , 2 , move 3 + 2 , 2 * v0 
[3025] ( move 4 , 2 / ua ; move ua , ua * ua ; v0 = ul ) 
[3026] ( move ul , ua - 3 ; move ua , ul - 2 ) 
[3027] ( move ul , 2 ; loop 0 , 4 , move v0 , v0 ) 
[3028] ( move ua / 4 , ul ; move 4 , 4 ) 
[3029] ( move 3 , 2 ; move 2 , 3 ) 
[3030] loop 0 , 7 , move v0 / 2 , 4 
[3031] ( move 4 , 3 / ua ; move ua , 2 + ul ) 
[3032] loop 0 , 3 , move v0 * 2 , 2 + v0 
[3033] loop 0 , 6 , move ua , ua - 4 
[3034] ( move ul , ua + ul ; move 2 , 3 + 2 ; move ua , 2 ) 
[3035] ( move 4 , 2 ; move ua , ua * ua ) 
[3036] loop 0 , 3 , loop 1 , 2 , move v0 * v0 , 2 
[3037] loop 0 , 6 , move 3 + 2 , v0 
[3038] loop 0 , 2 , ( move ul , 3 - v0 ; move 3 , v0 ) 
[3039] ( move 3 , ul ; move ua + 4 , ul - 3 ; v0 = ua + ul ) 
[3040] ( move ua , 0 ; move 3 - ua , ul ) 
[3041] loop 0 , 5 , move v0 , 3 - v0 
[3042] ( move ua , ul / ua ; move 4 , 2 ) 
[3043] ( move 3 - ua , ul ; loop 0 , 3 , move v0 , ul ) 
[3044] loop 0 , 5 , move 3 , ua - 3 
[3045] loop 0 , 2 , move ua , ua - 4 
[3046] ( move ua , ul ; move 3 , 4 + 2 ) 
[3047] loop 0 , 5 , move 4 , 3 * v0 
[3048] loop 0 , 3 , move v0 + 3 , v0 + v0 
[3049] ( move 3 , 4 + ul ; move ua , ul / 3 ) 
[3050] ( move ua / 4 , 3 ; move ua , ul ) 
[3051] loop 0 , 3 , move 2 * v0 , ua * ua 
[3052] ( move ua + 2 , ul ; move 4 , ua - 2 ) 
[3053] ( move 4 + ul , ul ; move ua , 2 - 4 ) 
[3054] loop 0 , 6 , move ul + v0 , ua - v0 
[3055] loop 0 , 3 , move ua / 4 , v0 - ul 
[3056] loop 0 , 6 , move 2 - v0 , ua * ua 
[3057] loop 0 , 3 , ( move v0 , 0 ; move 3 , v0 ) 
[3058] loop 0 , 3 , loop 1 , 2 , move v0 + v0 , v0 
[3059] ( move 2 - 4 , 2 ; move 3 , ul ) 
[3060] ( move 4 , 4 ; move ua , 2 ) 
[3061] ( move ua , ua - ul ; move ua , 4 ; move ua / 4 , ul ) 
[3062] loop 0 , 3 , move v0 + ul , 2 * v0 
[3063] ( move 2 , 4 ; move 4 + ul , ul ) 
[3064] loop 0 , 3 , move 4 + v0 , 3 / v0 
[3065] ( move 4 + 4 , 4 ; move ul , ul ) 
[3066] loop 1 , 3 , move ua - v1 , 0 - 4 
[3067] ( move ua , 3 ; loop 0 , 4 , move v0 , 2 ) 
[3068] loop 0 , 3 , move v0 - 4 , 2 * v0 
[3069] ( move ua , 3 ; move ua , ua / 3 ) 
[3070] loop 0 , 6 , move v0 - 2 , v0 * 3 
[3071] ( move ul , 2 ; move ua , 2 / ua ) 
[3072] ( loop 0 , 5 , move v0 + ul , 2 ; move v0 + ul , v0 ) 
[3073] ( move ua + ul , 2 ; move ua + ul , ua * ua ; move ul , ul ) 
[3074] loop 0 , 3 , ( move 2 , 2 + v0 ; move v0 , v0 ) 
[3075] loop 0 , 4 , move 2 , 3 / v0 
[3076] loop 0 , 2 , move v0 + ua , ua * ua 
[3077] ( move ul , 4 ; move ua , ul ; loop 0 , 2 , move 2 , ul ) 
[3078] loop 0 , 4 , move ua / v0 , 4 / v0 
[3079] ( v0 = ua / 4 ; move v0 , ua ; move ua , v0 ) 
[3080] ( move 0 , 2 ; loop 1 , 4 , move ua , v1 ) 
[3081] ( loop 0 , 9 , v1 = v0 ; loop 2 , 3 , move ua , v1 ) 
[3082] ( loop 0 , 5 , move 4 , v0 ; move ua , v0 ) 
[3083] loop 0 , 3 , ( move ul , v0 ; move 3 , 2 ) 
[3084] ( loop 0 , 5 , move v0 , v0 + 4 ; move ul , ua ) 
[3085] loop 0 , 3 , ( move v0 , ul ; move 4 , 3 + ul ) 
[3086] loop 0 , 6 , move ul - v0 , ul / ua 
[3087] ( loop 0 , 4 , move ua , 4 ; move ua , v0 ; v1 = ul ) 
[3088] loop 0 , 5 , move 2 - v0 , v0 / ua 
[3089] ( move ul , ul ; loop 0 , 4 , move v0 , v0 / ua ) 
[3090] ( move ul , ul / ua ; move ua + 2 , ul ) 
[3091] loop 0 , 6 , move 0 - 3 , ua - 4 
[3092] ( move 3 , ul ; v0 = 4 ; move ul + v0 , v0 * v0 ) 
[3093] ( move ua , 0 ; loop 0 , 6 , move 2 , ul ; v1 = ul ) 
[3094] ( move 2 , ua + ul ; move ua , ul ; move ul , ul ) 
[3095] loop 0 , 4 , move 3 , ua / 3 
[3096] ( move 3 , ul ; loop 0 , 6 , move ua , 4 ) 
[3097] ( move 2 * 2 , ul ; move ul - 3 , 2 ) 
[3098] ( move 4 , 0 ; move 3 - ua , ul ) 
[3099] ( move ua , ul / 2 ; move 2 , ul ) 
[3100] ( move 0 , ul - 4 ; move ua + 3 , ua - 2 ) 
[3101] ( loop 0 , 5 , move v0 , ul + v0 ; move 3 , v0 ) 
[3102] ( move 4 - ul , ul / 3 ; loop 0 , 3 , move ul , ul ) 
[3103] ( loop 0 , 4 , move ua , 3 ; v1 = v0 ; move v1 , ul ) 
[3104] loop 0 , 7 , move v0 - ul , v0 / ua 
[3105] ( move ua , ul ; move ua + ul , 0 - 2 ) 
[3106] loop 0 , 2 , loop 1 , 3 , move 2 , v1 * v1 
[3107] loop 0 , 7 , move ua - 4 , v0 
[3108] loop 0 , 3 , move 2 , 4 / v0 
[3109] ( move 3 , ua + ul ; move ua , ul ; move ua , 4 - ul ) 
[3110] loop 0 , 7 , move v0 , ua / 4 
[3111] ( move 4 , ua * ua ; move ua , 4 ) 
[3112] ( move ua , ul ; loop 0 , 5 , move ul - v0 , 4 + 2 ) 
[3113] ( move 4 , ua - 4 ; move ua , 2 ) 
[3114] ( move ua - ul , 2 + ul ; move ul - ua , ul ) 
[3115] ( loop 0 , 4 , move 3 / v0 , 2 ; move 4 , 3 ) 
[3116] ( move ua , ua ; loop 0 , 2 , move ua - v0 , ua * ua ) 
[3117] ( move 2 , 4 / ua ; move 4 + ul , 4 - ua ; move 4 , ul ) 
[3118] ( move ua + ul , 3 ; loop 0 , 3 , move 2 , ul ) 
[3119] loop 0 , 7 , move 4 * 2 , 4 
[3120] loop 0 , 5 , move 4 , v0 * v0 
[3121] loop 0 , 3 , move 2 - 4 , ul 
[3122] ( move ua + 2 , ua ; move ua , ua * ua ) 
[3123] ( move ua , ul ; move 3 , ul ; move 3 , ul ) 
[3124] loop 0 , 6 , move 2 , 4 / v0 
[3125] ( move ua , ul ; move ul , 3 + 2 ; move ua , 4 ) 
[3126] ( move ua , 4 ; move 3 - ua , 4 + ul ) 
[3127] loop 0 , 4 , move 3 + 2 , 2 
[3128] ( move 0 - 3 , ua ; move 4 , ua + ul ; move 3 , ul ) 
[3129] ( move 0 - 4 , ul ; move ua - ul , ul ) 
[3130] loop 0 , 3 , ( v1 = ul ; move v0 , ul ; move 4 , v1 ) 
[3131] ( move ua , ul ; loop 0 , 6 , move ua , 2 ) 
[3132] loop 0 , 3 , move 4 , 0 - ul 
[3133] ( move 3 , 3 ; move ua , 4 + ul ) 
[3134] loop 0 , 6 , move 2 - v0 , 4 
[3135] ( move ul , 0 ; move ua , 2 / 4 ) 
[3136] loop 0 , 6 , move 0 - 3 , ul 
[3137] loop 0 , 4 , move 4 - v0 , ul / v0 
[3138] ( move 2 , 2 ; move ua + ul , 2 - ua ) 
[3139] ( move ua , ua - 4 ; loop 0 , 4 , move v0 , ua - ul ) 
[3140] ( loop 0 , 3 , move 3 , v0 ; move ua , ul ) 
[3141] ( move ul , ul / ua ; loop 0 , 5 , move 2 , v0 + v0 ) 
[3142] ( move 3 , 2 ; move ua + ul , ul ) 
[3143] ( move ua , 0 ; move 2 - ua , ul ) 
[3144] ( move ua , ua ; move 2 - ul , 3 ; move ua , ul ) 
[3145] ( loop 0 , 6 , move v0 , ul ; move ul , 4 ) 
[3146] ( move 2 , 4 * 2 ; loop 0 , 4 , move v0 , ul ) 
[3147] loop 0 , 2 , ( move v0 + ul , v0 + 3 ; move ul , v0 ) 
[3148] ( move 2 , ul ; move 3 , 2 ) 
[3149] ( move ul , ul ; move ua + 2 , ul ; move ul , ul ) 
[3150] ( move 0 , 4 / ua ; loop 0 , 4 , move v0 , ul ) 
[3151] ( move ua , 3 + 2 ; move ua , 4 ) 
[3152] ( move ul - ua , 4 ; move ua , ua * ua ) 
[3153] ( move ul , 0 ; move 2 , 3 ; move 4 * 2 , 2 ) 
[3154] loop 0 , 3 , ( move ul , v0 ; move 4 , ul ) 
[3155] ( move 4 , ua ; loop 0 , 4 , move v0 , v0 - ul ) 
[3156] ( move 4 , 4 ; loop 0 , 4 , move ua + ul , 2 ) 
[3157] ( move 2 , 3 ; move ua - ul , 4 ) 
[3158] ( move 4 , 2 ; move ua + ul , 4 ) 
[3159] loop 0 , 3 , ( move 4 , 3 ; move v0 , v0 ) 
[3160] loop 0 , 2 , ( move ua , ul ; move v0 , ul ) 
[3161] loop 0 , 3 , loop 1 , 2 , move ua / 4 , ul / v0 
[3162] ( move 2 - ua , ua ; move 4 , ul ) 
[3163] loop 0 , 7 , move 3 - v0 , v0 / 3 
[3164] ( move ua , ul + ul ; loop 0 , 3 , move v0 + 2 , 2 ) 
[3165] ( loop 0 , 5 , move 2 , ul ; move v0 / 2 , ua ) 
[3166] ( move ua , ua * ua ; loop 0 , 6 , move v0 , v0 ) 
[3167] ( move 2 , ua - 3 ; loop 0 , 5 , move ul , v0 + v0 ) 
[3168] loop 0 , 5 , move 3 , 4 / v0 
[3169] ( move ua - 3 , ua / 4 ; move ua + 3 , ul ) 
[3170] ( move ua , ul ; loop 0 , 4 , move v0 , v0 ) 
[3171] ( move ua , ua ; move ul + ul , ua ; move ua , 0 - 2 ) 
[3172] ( ( move ua , ua ; move ul , ua ) ; move 4 , ua * ua ) 
[3173] ( move 2 , ul ; move ua , ua / 3 ) 
[3174] ( move ua , ua ; move ua + ul , 4 + 4 ) 
[3175] loop 0 , 4 , move 2 , 3 - v0 
[3176] ( move 2 , ua ; loop 0 , 5 , move 4 , ul ) 
[3177] ( loop 0 , 5 , move v0 , ua * ua ; move v0 , ul ) 
[3178] loop 0 , 6 , move ul - v0 , v0 / 4 
[3179] ( move ul , 0 - ul ; loop 0 , 4 , move v0 , v0 ) 
[3180] loop 0 , 3 , move 3 , 4 
[3181] ( move 2 , 2 ; move ua , ua * ua ) 
[3182] ( move 3 , 0 - ul ; move 4 , 2 ) 
[3183] ( loop 0 , 6 , move v0 , 2 * v0 ; move v0 , v0 ) 
[3184] ( move ua + 3 , ul ; move ua , ua - 3 ) 
[3185] loop 0 , 5 , move ul - ua , ua - v0 
[3186] ( move ua , ua + ua ; loop 0 , 5 , move 3 , 2 ) 
[3187] ( move 2 * 2 , 2 ; move 3 + 2 , 3 ) 
[3188] loop 0 , 3 , move 0 - 3 , ul 
[3189] ( move ua , ul + ul ; move ua , 4 + 3 ) 
[3190] loop 0 , 7 , move ua / v0 , v0 - 4 
[3191] ( move 3 + ul , ul ; move ua , ul + ul ; move 2 , 4 ) 
[3192] ( move 3 , 4 ; move ul - ua , ul + ul ) 
[3193] ( move 2 + ul , ua ; move 3 , ua - 4 ) 
[3194] loop 0 , 4 , move 3 , v0 * 3 
[3195] loop 0 , 3 , move 4 - ua , ul 
[3196] loop 0 , 3 , move v0 + 2 , 3 
[3197] ( move ua , ua * ua ; move 4 , ua - ul ) 
[3198] ( move ua + ul , ua / 4 ; move ua , ua / 3 ) 
[3199] loop 0 , 7 , move 4 / 3 , v0 * v0 
[3200] loop 0 , 6 , move 2 - 4 , v0 * v0 
[3201] ( move 4 , ul ; move 3 , 3 + 3 ) 
[3202] ( move ua , 0 ; move ul , 3 ) 
[3203] loop 0 , 4 , move ul - ua , 2 
[3204] ( move ul , ul ; loop 0 , 6 , move v0 / 2 , ul ) 
[3205] loop 0 , 7 , move 2 , 2 / 4 
[3206] ( move 2 , ua + 4 ; move 4 + 3 , 4 ) 
[3207] ( loop 0 , 4 , move ul , ul - v0 ; move v0 , 2 ) 
[3208] loop 0 , 2 , move v0 - 3 , ul 
[3209] loop 0 , 3 , ( move v0 , 4 ; move v0 , v0 ) 
[3210] ( move ul , 2 / ua ; loop 0 , 4 , move v0 * v0 , 3 ) 
[3211] ( loop 0 , 5 , move v0 + v0 , v0 ; move ua , v0 ) 
[3212] ( move ul + ul , ua / 4 ; move ua + 4 , ul ) 
[3213] ( move 3 , 4 ; move ua , ul ; move ua , 2 ) 
[3214] loop 0 , 3 , move ua - v0 , v0 + 3 
[3215] ( v0 = ul / 4 ; loop 1 , 4 , move ua , v0 + 4 ) 
[3216] ( move 3 , 3 - ul ; move ul - ua , ua * ua ) 
[3217] loop 0 , 2 , move ul - 4 , ul / 3 
[3218] ( move 0 , ua ; move ua + ul , ul / 4 ; move 3 , ua - 2 ) 
[3219] ( loop 0 , 5 , move v0 , v0 * 4 ; move v0 , ul ) 
[3220] ( move ua , ul + ul ; move ul - ua , ua * ua ) 
[3221] ( move 2 , ua ; move ua , ua ; move 2 , 4 * 2 ) 
[3222] loop 0 , 2 , move 2 - ua , v0 + ul 
[3223] ( move ul , ua - ul ; loop 0 , 4 , move 3 , ua + v0 ) 
[3224] ( move ua / 3 , ul ; move ua , ul ; move 3 , ul ) 
[3225] ( loop 0 , 5 , move v0 , 4 ; move v0 , 2 ) 
[3226] loop 0 , 6 , move 2 - 4 , 2 
[3227] ( move ua , ul / 2 ; move ua , 4 ) 
[3228] ( move 2 , 2 ; move ua + ul , ul ) 
[3229] ( move 3 , 3 ; move ul , ul ) 
[3230] ( move ua / 4 , ua ; move ua , 3 / 4 ) 
[3231] ( move 2 , 0 ; move ua , 4 ) 
[3232] ( move ul - ua , ua ; move ul , 0 ; move ua + 2 , ul ) 
[3233] ( move 2 , 2 ; move 3 , 2 ) 
[3234] ( loop 3 , 5 , move ul , ul ; move 2 , v3 ) 
[3235] ( move 3 , ul ; ( move ua - 3 , ul / 3 ; move 3 , ul ) ) 
[3236] ( move 3 , ua ; loop 0 , 4 , move v0 , v0 + ul ) 
[3237] ( move ua , ua ; loop 0 , 3 , move v0 , v0 - ul ) 
[3238] ( move 0 - 4 , ua ; move 3 , ul ) 
[3239] ( move ul , 0 ; move ua , 4 * 3 ) 
[3240] ( move ua , 3 ; v0 = 0 - 2 ; move ua - v0 , 4 ) 
[3241] ( move 3 - ua , 0 ; move 2 , 2 ) 
[3242] loop 0 , 3 , ( move ul / v0 , 3 ; move ua , ul ) 
[3243] ( loop 0 , 2 , move 4 , 4 ; move v0 , ul ) 
[3244] ( move ua , 4 + ul ; loop 0 , 6 , move v0 , v0 ) 
[3245] ( move 2 / 3 , ul ; move ua + ul , 2 ) 
[3246] ( move 3 , 3 + ul ; move 2 - ua , ua * ua ) 
[3247] loop 0 , 4 , move 3 / v0 , v0 + v0 
[3248] ( move 4 - ul , ua / 3 ; move ua , 2 / ua ; move 2 , ul ) 
[3249] loop 0 , 2 , loop 1 , 3 , move v0 + ul , v1 
[3250] ( move ua , ua * ua ; move ua + ul , 4 ) 
[3251] loop 0 , 5 , move 3 , v0 * 3 
[3252] loop 0 , 7 , move 3 + 2 , 2 
[3253] ( move 3 , ul ; move 2 , ul - 2 ) 
[3254] ( move ua + ul , ul ; move 3 - ua , ul ) 
[3255] loop 0 , 7 , move ua , 0 - 3 
[3256] ( move ua - ul , ua - ul ; move ua , ul + ul ) 
[3257] ( move 3 , 2 ; move 3 , 4 ) 
[3258] ( move 2 , ul ; move 4 + ul , ua * ua ) 
[3259] ( loop 0 , 6 , move ul , ul ; move ul , 0 ) 
[3260] loop 0 , 5 , move 2 , v0 - 4 
[3261] ( move ua , 3 ; move ua , ua / 4 ) 
[3262] ( loop 0 , 4 , move v0 , ul ; move 4 + ul , v0 - ua ) 
[3263] ( move 3 , ul ; move ul , 2 ) 
[3264] ( move 4 , ul ; move ua - 4 , ul / 3 ) 
[3265] ( loop 0 , 4 , move v0 , 3 ; move v0 , ul ) 
[3266] ( move ul , ua ; move ua + ul , ul ; move 3 + ul , 4 ) 
[3267] ( move ua , ua / 4 ; move 3 , ul ) 
[3268] ( move ua , ua * ua ; move 2 , ul ) 
[3269] ( move ua , ul ; loop 0 , 5 , move v0 , ua / v0 ) 
[3270] ( move 4 + ul , 4 ; move 4 , ul ) 
[3271] loop 0 , 3 , ( v1 = v0 - ul ; move 4 , v1 + v1 ) 
[3272] loop 0 , 3 , move 3 , 0 - ul 
[3273] ( move ua , ul ; move 2 - ua , 2 / ua ; move ua + ul , ul ) 
[3274] ( move ua - ul , 2 ; move ul , ua - ul ; move ua , 3 ) 
[3275] ( move 2 , 4 ; move ul - ua , ul ) 
[3276] loop 0 , 4 , move 4 + v0 , 2 
[3277] loop 0 , 6 , move 3 , 3 / v0 
[3278] ( move 4 , 2 ; move ul - ua , ua + ul ) 
[3279] loop 0 , 3 , move 3 * 3 , 4 
[3280] ( move ua , 3 ; move 3 , ul ; move ul , 3 / ua ) 
[3281] ( move 0 - ua , ul / 3 ; move 4 + ul , ua + ul ) 
[3282] ( move 2 + ul , ua / 4 ; move 2 , ul ) 
[3283] loop 0 , 3 , loop 1 , 2 , move v0 , ul / v0 
[3284] ( move ua , 0 ; move 2 , 3 - 4 ) 
[3285] ( move 4 / 3 , ua ; move ua , ul ; move 3 , ul ) 
[3286] loop 0 , 5 , move v0 * 2 , ua * ua 
[3287] move 4 , 0 - 3 
[3288] ( loop 0 , 5 , move ul - v0 , ul ; move v0 , ul ) 
[3289] ( move ua - ul , 0 ; move 4 , ua - ul ) 
[3290] ( move ua + ul , 4 ; move 2 , 2 - 3 ) 
[3291] loop 0 , 4 , move 3 , v0 * 4 
[3292] ( move ua , ul / 2 ; move ul - ua , ul ) 
[3293] ( move ua , 0 ; move 0 - 4 , ul ) 
[3294] loop 0 , 4 , move ua + ul , 2 
[3295] loop 0 , 7 , move ul - v0 , v0 / 3 
[3296] loop 0 , 6 , move v0 - ul , ul + v0 
[3297] ( move 3 , ua * ua ; v0 = ua - ul ; move v0 , ul ) 
[3298] ( move 4 - ua , 0 ; loop 0 , 5 , move v0 , v0 ) 
[3299] loop 0 , 3 , ( move v0 , v0 ; move 2 , ul + v0 ) 
[3300] ( move 3 , 0 ; move ua - ul , ua / 3 ) 
[3301] ( loop 0 , 6 , move ul , 0 ; move ua , v0 ) 
[3302] ( move ua + ul , ua - 2 ; move 4 , ua - ul ) 
[3303] ( move 2 , ua ; move 3 , ua * ua ) 
[3304] ( move ua , ul ; move ua - ul , 2 ) 
[3305] ( move 4 , ul ; move 4 , ua * ua ) 
[3306] loop 0 , 4 , move 3 / v0 , ul - 2 
[3307] ( loop 0 , 4 , move 3 * 3 , ul + v0 ; v1 = v0 ) 
[3308] ( move 3 , 0 ; move 4 + ul , ul ) 
[3309] ( move ua , ua ; move 4 + 4 , 2 ) 
[3310] ( move ua + ul , 3 + 2 ; move 3 , ul ) 
[3311] loop 0 , 5 , move 4 , ua - v0 
[3312] loop 0 , 6 , move v0 - 4 , v0 * 2 
[3313] ( move ua + ul , 3 ; move ua , 2 ) 
[3314] ( move ua , ul ; loop 0 , 3 , move v0 - 3 , ul ) 
[3315] loop 0 , 4 , move 2 - ua , 2 
[3316] loop 0 , 7 , move v0 - 4 , ua - v0 
[3317] ( move 4 , 0 - ul ; move ul , ul ) 
[3318] loop 0 , 6 , move ul , ul / 4 
[3319] loop 0 , 2 , move v0 - ua , ul - 3 
[3320] ( move ul + ul , 4 + 3 ; move ul - ua , 4 + ul ) 
[3321] ( move 3 , ul ; loop 0 , 5 , move ul - v0 , v0 ) 
[3322] ( move ul - ua , 2 ; loop 0 , 3 , move v0 , v0 ) 
[3323] ( loop 0 , 2 , move ul - 4 , ua / 4 ; move v0 , 4 ) 
[3324] ( move 4 , ul / 2 ; move 3 , ul ) 
[3325] loop 0 , 6 , move ul - v0 , v0 / 2 
[3326] ( move ua , 4 ; move ua / 2 , 4 + ul ) 
[3327] loop 0 , 3 , move 4 + ul , v0 * 2 
[3328] ( move ul , 4 ; move 3 , 4 ) 
[3329] loop 0 , 3 , ( move v0 , ul ; move 4 / v0 , 4 ) 
[3330] ( move ul + ul , ua ; loop 0 , 5 , move v0 , 4 ) 
[3331] loop 0 , 7 , move v0 + ul , v0 + 4 
[3332] ( move 2 , 4 ; move ua , ul ; move ul , ul ) 
[3333] loop 0 , 3 , move 2 - ua , 4 
[3334] ( move ul - ua , ua ; v0 = ua / 4 ; move 4 , v0 ) 
[3335] loop 0 , 3 , ( move v0 + v0 , 2 - ul ; move 4 , ul ) 
[3336] ( move ua , 2 ; move 3 , 4 ) 
[3337] loop 0 , 2 , ( move 4 , v0 ; move ul , v0 ) 
[3338] ( loop 0 , 6 , move ua - 4 , v0 ; move v0 , ul ) 
[3339] ( v0 = 4 ; move v0 , 2 ; move v0 , v0 ) 
[3340] ( move ua , 2 - 3 ; move ua , ul - 4 ) 
[3341] ( move ul , ul ; loop 0 , 6 , move ul - v0 , ul ) 
[3342] loop 0 , 4 , move ua / v0 , v0 * 4 
[3343] loop 0 , 5 , move 3 , 3 - v0 
[3344] loop 0 , 3 , ( move v0 , v0 / ua ; move ua , ul + ul ) 
[3345] loop 0 , 3 , move 2 + v0 , 3 + v0 
[3346] loop 0 , 3 , move v0 * 3 , ua - v0 
[3347] ( move ua , 0 ; move ua - 2 , ul ) 
[3348] loop 0 , 5 , move v0 * 2 , v0 - 2 
[3349] ( move 2 , ul ; move ul , ua + ul ; move ua , 4 ) 
[3350] ( move ua , ua ; ( v0 = 2 / ua ; move ua , v0 - 3 ) ) 
[3351] loop 0 , 2 , ( move v0 - 3 , v0 ; move ul , ul ) 
[3352] ( move 3 , ul ; move ul , 2 ; move ua , ul ) 
[3353] ( move ua , 2 ; move 2 , ua * ua ) 
[3354] ( move 3 , ua ; loop 0 , 5 , move v0 , v0 + v0 ) 
[3355] ( move ua , 2 - ua ; ( move ul , 3 ; move ua , ul ) ) 
[3356] ( move ua - ul , 2 ; move ua , 2 ) 
[3357] loop 0 , 2 , move 3 , 3 + 2 
[3358] ( move ua , 4 ; move 3 , 4 ) 
[3359] ( move ua , ua + ul ; move 4 , 4 ; move ua - 2 , 4 ) 
[3360] loop 0 , 3 , move v0 + 2 , ua * ua 
[3361] loop 0 , 3 , ( move v0 , ul ; move v0 + v0 , ul ) 
[3362] ( move ua - ul , 3 ; move ua - ul , ul ) 
[3363] ( move ua - 2 , ua ; move 3 , 4 / 3 ) 
[3364] ( move 4 , 4 + ul ; move ua , 2 ) 
[3365] ( move 2 , ul ; loop 0 , 5 , move v0 , v0 + ul ) 
[3366] loop 0 , 4 , move 0 - ul , ua / v0 
[3367] ( move 4 , ul ; move 3 , ua * ua ) 
[3368] ( move ua , ua - ul ; move 3 , ul / 3 ) 
[3369] ( move ua , ua ; move ua + 2 , 4 ) 
[3370] loop 0 , 7 , move v0 / 2 , 2 
[3371] loop 0 , 2 , move ua + 2 , 3 - v0 
[3372] ( loop 0 , 9 , v1 = v0 ; move ua , 2 ; move ua , v0 ) 
[3373] ( ( move ul - ua , 3 ; move ua , ul ) ; move ua / 4 , 2 ) 
[3374] ( move ua - 3 , ul - 3 ; move ua - ul , ul ) 
[3375] ( move ua , ua - 4 ; loop 0 , 6 , move v0 , v0 ) 
[3376] ( move ua , 2 ; move 3 , 3 ) 
[3377] ( loop 0 , 6 , move 3 , v0 ; move ul , v0 ) 
[3378] loop 0 , 2 , move ua - v0 , ua - 2 
[3379] ( loop 0 , 6 , move ul - v0 , v0 ; move v0 , ua ) 
[3380] loop 0 , 3 , ( move v0 , ul + ul ; move ul , ul ) 
[3381] loop 0 , 7 , move ul - v0 , 2 + v0 
[3382] loop 0 , 7 , move ul - v0 , ul - v0 
[3383] ( move 3 , 4 + ul ; move 4 , ua + 4 ) 
[3384] ( loop 0 , 7 , move 4 / v0 , 3 / 2 ; v1 = ul ) 
[3385] ( loop 0 , 5 , move v0 * 2 , v0 ; move v0 , v0 ) 
[3386] ( move ua + ul , ul / ua ; move ul , ul - ua ; move ua , 2 ) 
[3387] ( move ua , ua * ua ; move 3 , 4 ) 
[3388] ( move 2 , ua ; loop 0 , 6 , move 2 , v0 ) 
[3389] ( move 4 + ul , 3 + ul ; move 4 , 4 ) 
[3390] ( move 3 , 4 ; move 2 , 3 + 3 ) 
[3391] ( move ul - ua , 2 ; move 4 , ul ) 
[3392] ( move ul , 3 ; loop 0 , 4 , move v0 , v0 * v0 ) 
[3393] ( move ua , 3 ; move 3 + ul , ul ; move ul , ul ) 
[3394] loop 0 , 6 , move v0 + 3 , 2 
[3395] ( loop 0 , 5 , move v0 , v0 ; move ua + ul , v0 ) 
[3396] loop 0 , 7 , move 2 + v0 , v0 / 3 
[3397] ( loop 0 , 5 , move ul , ua + ul ; move ua , 2 ) 
[3398] loop 0 , 7 , move 4 / v0 , 2 + v0 
[3399] ( loop 0 , 5 , move v0 , ul ; move ua , 4 ) 
[3400] ( move 4 , 3 ; move ul - ua , ul ) 
[3401] ( move ua , 3 * 3 ; move ua , ua / 3 ) 
[3402] ( move 4 , 3 ; move ua - ul , 2 ) 
[3403] ( loop 0 , 6 , move 4 / v0 , v0 ; move v0 , 0 ) 
[3404] ( move ua , ul - ua ; move ua + ul , ua / 3 ) 
[3405] ( move 3 , ul ; loop 0 , 5 , move ua - v0 , ul + v0 ) 
[3406] ( move ul - ua , ua / 2 ; move ua , 2 ) 
[3407] loop 0 , 4 , move ul - v0 , 0 - ul 
[3408] ( loop 0 , 6 , move ul + ul , ul ; move v0 , 2 ) 
[3409] ( move 0 - ua , ua ; move 3 , 2 ) 
[3410] loop 0 , 6 , move 2 , v0 + 2 
[3411] ( v0 = 3 ; move 2 , ul ; loop 1 , 3 , move v0 , 2 ) 
[3412] loop 0 , 7 , move 2 + v0 , 4 
[3413] ( move 3 , ul - ua ; move 4 , ul - 4 ) 
[3414] loop 0 , 6 , move v0 - ul , 2 
[3415] loop 0 , 3 , move 4 + v0 , v0 + v0 
[3416] loop 0 , 6 , move ua + ul , 4 
[3417] loop 0 , ul , loop 1 , 5 , move v0 - 3 , v0 - 2 
[3418] ( loop 0 , 6 , move v0 , 2 ; move ul , ul ) 
[3419] ( move 3 , 0 ; loop 0 , 3 , move 3 , ul ; move 3 , v0 ) 
[3420] loop 0 , 5 , move 4 + v0 , 2 
[3421] loop 0 , 6 , move 3 , ua - 2 
[3422] loop 0 , 7 , move 2 - v0 , ul + v0 
[3423] loop 0 , 3 , move ua - 4 , ul 
[3424] loop 0 , 3 , ( move 2 , v0 * 4 ; move ul - v0 , v0 ) 
[3425] loop 0 , 7 , move v0 / 3 , v0 * v0 
[3426] ( move ua + ul , ua + ua ; move 4 , ul - 4 ; move ul , ul ) 
[3427] ( loop 0 , 4 , move v0 * v0 , v0 ; move ua , v0 ) 
[3428] ( move 0 - 4 , 0 ; move 2 , ul ) 
[3429] ( move ua - ul , ua ; move ul - 4 , ul - ua ; move ul , 4 ) 
[3430] ( move ua , 0 ; ( move ul , ul ; move 2 , ul ) ) 
[3431] ( move 2 + 2 , ua / 4 ; move ua , ua - ul ) 
[3432] ( loop 0 , 5 , move v0 , ul ; move ua , 4 + v0 ) 
[3433] loop 0 , 2 , move ua , ua / 3 
[3434] ( move 4 , 2 - 3 ; move ua , ul ) 
[3435] loop 0 , 7 , move v0 - ul , v0 - 4 
[3436] loop 0 , 3 , move v0 + 2 , v0 / 4 
[3437] ( move ua - 3 , ul / ua ; loop 0 , 5 , move v0 , v0 ) 
[3438] ( move 3 , ul ; move 0 - ua , 3 ) 
[3439] ( move 2 , ua ; move ua , ua / 4 ) 
[3440] loop 0 , 3 , ( move 4 , ua ; move 0 , ul ) 
[3441] loop 0 , 6 , move ua / v0 , 4 - v0 
[3442] ( move 4 , ul ; move ua , 3 ; move ul , ul ) 
[3443] loop 0 , 4 , move 3 , 4 + ul 
[3444] ( loop 0 , 4 , move 4 , v0 ; move ul , ul ) 
[3445] loop 0 , 6 , move v0 - 2 , v0 / 4 
[3446] loop 0 , 4 , move ul - 4 , v0 * 3 
[3447] loop 0 , 2 , move 4 , ul / 2 
[3448] loop 0 , 3 , ( move v0 * v0 , 3 ; move v0 , 2 ) 
[3449] loop 0 , 3 , move 0 - 4 , v0 * v0 
[3450] ( move ua , ua ; loop 0 , 3 , move ul , v0 ; move ua , ul ) 
[3451] ( move 4 , ul ; move 4 , 4 ) 
[3452] ( loop 0 , 4 , move 2 , ul ; move v0 , 4 ) 
[3453] ( loop 0 , 6 , move ul , ua - v0 ; move ul , v0 ) 
[3454] ( move ua , 3 ; move 3 , 4 + 4 ) 
[3455] ( move ua - ul , 4 ; move ul , 3 / ua ; move 3 , ua + ul ) 
[3456] ( move 0 - 3 , ul ; move ua , ua + 3 ; move ul , ul - 3 ) 
[3457] ( move ul , 4 * 3 ; move 4 , ul ; move ua , ul ) 
[3458] ( move 4 - ua , ul - 3 ; move ua , 2 ) 
[3459] ( move ua + 3 , ua + 2 ; move ua , ul + ul ) 
[3460] ( loop 0 , 4 , move v0 , v0 ; move ua , ua / v0 ) 
[3461] ( move ua , 3 / 2 ; move ul , 4 ) 
[3462] ( move 0 - ul , 2 ; move 4 , 2 ) 
[3463] loop 0 , 4 , move ua / v0 , 4 
[3464] ( loop 0 , 4 , move v0 , ul - v0 ; move ua , v0 ) 
[3465] ( move 4 , 2 / ua ; move 2 , ul ) 
[3466] ( move ua , ul / ua ; move 4 , ua - 4 ) 
[3467] loop 0 , 6 , move v0 + ul , 4 + v0 
[3468] loop 0 , 7 , move v0 / 2 , v0 - ul 
[3469] loop 0 , 3 , move v0 - ua , 3 - v0 
[3470] loop 0 , 4 , move ul , 3 + 3 
[3471] ( move 3 - ua , 4 + 3 ; move ua , ul ) 
[3472] ( move 4 , 4 ; move 2 , 2 ) 
[3473] loop 0 , 3 , loop 1 , 2 , move ua - v0 , 4 - v1 
[3474] ( move 4 , 3 * 2 ; move 2 , ul ) 
[3475] ( move ua , 4 ; loop 0 , 6 , move v0 , v0 ) 
[3476] ( loop 0 , 3 , move 3 , v0 ; move v0 - ua , v0 ) 
[3477] ( move 3 , 2 ; move ua + ul , ua * ua ) 
[3478] ( loop 0 , 4 , move v0 , v0 ; move ua + ul , ul ) 
[3479] loop 0 , 2 , move 2 , v0 / 2 
[3480] ( move ua , ul ; move ul - ua , ul ; move ua , ul - ua ) 
[3481] ( move 2 , ul / 3 ; move ua + 3 , 2 ) 
[3482] ( move 4 , ua - ul ; move ul - ua , ul ) 
[3483] ( move ua , ua * ua ; move ua , 3 ) 
[3484] ( move 4 * 2 , ul / ua ; move ul , ul ) 
[3485] loop 0 , 4 , move 2 , 4 + ul 
[3486] loop 0 , 2 , loop 1 , 3 , move ul , v1 + 4 
[3487] ( move 4 , 4 - ul ; move ua - ul , 4 ) 
[3488] ( loop 0 , 3 , move ua , v0 + 2 ; move ua , ua + 3 ) 
[3489] ( move 4 + 2 , 4 + 3 ; loop 0 , 4 , move ua / 4 , v0 ) 
[3490] ( move ua , ul ; loop 0 , 3 , move v0 , 4 ) 
[3491] ( move 2 , 0 ; move ul , 3 - ul ; move ua , 4 + ul ) 
[3492] ( move 2 , ul ; loop 0 , 6 , move v0 , v0 ) 
[3493] ( move 4 , ul ; move ua + ul , ua / 3 ) 
[3494] ( move ua , 3 ; move ua , ua + 2 ; move ul + ul , ul ) 
[3495] loop 0 , 3 , ( move v0 , ul ; move ua , ul ) 
[3496] loop 0 , 3 , ( move 2 , v0 ; move v0 , v0 + v0 ) 
[3497] ( move ua - ul , 0 ; move ua , 4 ) 
[3498] loop 0 , 7 , ( v2 = 0 ; move 2 , 2 / 3 ) 
[3499] ( ( move ul - ua , ua ; move ua , 3 / 2 ) ; move ul , ul ) 
[3500] loop 0 , 5 , move 4 , ua / 4 
[3501] loop 0 , 7 , move v0 - 3 , 4 
[3502] ( move 2 , ul ; move 4 , ua - 4 ) 
[3503] ( move ua , ul ; move 2 - ua , ul + ul ) 
[3504] ( loop 0 , 6 , move v0 , 3 ; move ua , ua ) 
[3505] ( move 3 , ua * 2 ; move ua + 2 , ua * ua ) 
[3506] ( move ua , 3 ; move 3 - ua , 2 ) 
[3507] loop 0 , 2 , move ua + ul , 2 
[3508] ( move 3 , 4 ; move ua - ul , 2 ) 
[3509] ( move ul , 0 - ul ; move 3 , 2 ) 
[3510] loop 0 , 3 , move 3 , v0 / 3 
[3511] loop 0 , 7 , move 4 / v0 , v0 + ul 
[3512] ( loop 0 , 5 , move v0 , 4 ; move v0 , ua ) 
[3513] ( move ua + ul , 2 + ul ; move ul , ul ; move ua , ul ) 
[3514] loop 0 , 3 , loop 1 , 2 , move ul + v1 , v0 
[3515] loop 0 , 7 , move 0 - 4 , 4 
[3516] ( move 3 , ua ; move ua , ua * ua ) 
[3517] ( move ua + ul , 0 ; move 4 - ua , ul ) 
[3518] ( loop 0 , 5 , move v0 - 4 , v0 ; move v0 , 4 ) 
[3519] ( move 4 + ul , ua - ul ; move ua , ul ) 
[3520] loop 0 , 2 , move v0 - ua , v0 + v0 
[3521] ( v0 = ua ; loop 1 , 5 , move 3 - ua , v0 - ul ) 
[3522] ( move 0 , 4 ; loop 0 , 4 , move v0 * v0 , v0 ) 
[3523] ( move ua , ul ; move ul , 4 + ul ; move 3 , ul ) 
[3524] ( move ua + ul , 4 + 4 ; move ul , 2 ; move ua , ua - 4 ) 
[3525] loop 0 , 3 , move ua - 2 , v0 + ul 
[3526] ( ( move ua , ua ; move ul + ul , ul ) ; move 0 - ua , 4 ) 
[3527] loop 0 , 2 , move 0 - 2 , v0 + v0 
[3528] loop 0 , 7 , move 2 - v0 , 2 - v0 
[3529] ( move 2 , ul ; move ua + ul , ua * ua ) 
[3530] ( move ua , 4 + ul ; move ua , 2 ) 
[3531] ( move 4 , ul ; move ua + ul , ua * ua ) 
[3532] ( move ua , 4 + 3 ; move 2 , ul ) 
[3533] ( move ul - 3 , ul ; move 3 , 2 ) 
[3534] ( loop 0 , 3 , move ul , ul ; move ua , v0 + v0 ) 
[3535] ( move ua , 0 ; move 3 , 2 / 3 ) 
[3536] ( move ua + ul , ua / 2 ; move 3 , 4 - ua ) 
[3537] ( move 0 - 4 , ul ; move 3 , ul ) 
[3538] ( move ua + ul , ul ; move 3 , ua * ua ) 
[3539] ( move ua , 2 ; move ul - ua , 4 + ul ) 
[3540] ( move 2 , ua ; move 4 * 2 , ul ; move ul , 4 * 2 ) 
[3541] loop 0 , 4 , move 4 - v0 , v0 + 4 
[3542] ( move 4 - ua , ul ; move ua - ul , ul ) 
[3543] ( move ua , 4 ; move 0 - ua , 3 ) 
[3544] ( loop 0 , 5 , move v0 , v0 ; move 2 - v0 , v0 ) 
[3545] loop 0 , 7 , move 4 - v0 , ul 
[3546] ( loop 0 , 6 , move 3 , 4 ; move v0 , v0 ) 
[3547] loop 0 , 5 , move v0 - ul , 2 + v0 
[3548] loop 0 , 2 , loop 1 , 2 , move 3 , v1 
[3549] ( loop 0 , 6 , move v0 , ul ; move ul , ul ) 
[3550] ( move 2 , ua ; move ua + ul , 4 + ul ) 
[3551] ( loop 0 , 6 , move ul , ul ; move ua , ul ) 
[3552] loop 0 , 2 , loop 1 , 3 , move v1 , ua - 2 
[3553] ( loop 0 , 6 , move v0 , v0 ; move ua , 4 ) 
[3554] loop 0 , 5 , move v0 - 4 , 4 + v0 
[3555] loop 0 , 3 , ( move ul , v0 * 3 ; move v0 , ul ) 
[3556] loop 0 , 2 , move ul - ua , 3 * v0 
[3557] ( move ul + ul , ua ; ( move 2 - ua , ua ; move 4 , 2 ) ) 
[3558] loop 0 , 6 , move v0 - ul , 4 + ul 
[3559] ( move ua , ua - 4 ; move ul - 3 , 4 ) 
[3560] loop 0 , 7 , move 4 + ul , 3 
[3561] loop 0 , 6 , move v0 , ua / 3 
[3562] ( move ua + ul , 0 ; move 3 , 4 ) 
[3563] ( move 2 , 3 - ua ; move ua , ul ; move ua / 2 , ul ) 
[3564] loop 0 , 2 , move 4 - ua , 2 + v0 
[3565] ( v0 = ul ; loop 1 , 3 , move 3 , 3 ; move ua , 4 ) 
[3566] ( move ua , 0 ; move ua + 3 , 2 ) 
[3567] loop 0 , 3 , ( move v0 , v0 ; move 2 , v0 ) 
[3568] ( move ua , 0 ; move ul - ua , ul / 2 ) 
[3569] ( ( move ua + 2 , ua ; move ua , 4 ) ; move ul , ul ) 
[3570] loop 0 , 2 , move ua + ul , ua - 2 
[3571] ( move 4 , ul / ua ; move ua - ul , 4 - ua ) 
[3572] ( move 2 , 4 ; move ua + ul , 2 ) 
[3573] ( move 3 , ul - 3 ; move ua , 4 ) 
[3574] loop 0 , 3 , move 4 , 3 / v0 
[3575] ( loop 0 , 4 , move ul , v0 ; move v0 + ul , ul ) 
[3576] ( loop 0 , 5 , move ul , v0 + v0 ; move ua , v0 ) 
[3577] loop 0 , 3 , ( move v0 + ul , v0 ; move ul , ul ) 
[3578] ( move ua + 2 , 0 ; move ua , 2 ) 
[3579] ( v0 = ul / 3 ; loop 1 , 6 , move ua , v0 - 4 ) 
[3580] ( move ua + 3 , ul ; move ua , 2 ) 
[3581] loop 0 , 3 , ( move v0 , ul ; move ua / 4 , v0 ) 
[3582] loop 0 , 3 , loop 1 , 2 , move ul + v0 , v0 
[3583] ( move 4 , ua ; move ul , ua + 3 ; move 4 , ul ) 
[3584] ( move 3 + 2 , 0 ; move ul , ul ) 
[3585] ( move ul , 2 ; loop 0 , 5 , move v0 , ua - v0 ) 
[3586] ( move 3 , 2 ; move ua , 3 / ua ) 
[3587] ( move ua , 4 + ul ; move 4 , 4 ) 
[3588] ( move ua , ua ; move ul , ul ; move ua , ua * ua ) 
[3589] ( loop 0 , 2 , move 4 , ul ; move ua , v0 ) 
[3590] ( move 3 , ul ; move 2 , ua - 2 ; move 2 , ua + 2 ) 
[3591] move 3 * 3 , 2 
[3592] ( move ua - ul , ua * ua ; move 3 * 2 , 2 ) 
[3593] ( move 4 , ua - ul ; move ua , 2 ) 
[3594] ( loop 0 , 3 , move ul , v0 ; move 3 , v0 ) 
[3595] loop 0 , 7 , move v0 - 4 , v0 + v0 
[3596] ( loop 0 , 4 , move 2 , v0 ; move ua , v0 ) 
[3597] loop 0 , 2 , ( move ua , 2 ; move ul , ul ) 
[3598] loop 0 , 3 , ( v1 = v0 ; move 4 , ul ; move ul , ul ) 
[3599] ( move 3 , 4 ; move ua , ul ; move ul , 2 ) 
[3600] ( loop 0 , 6 , move 3 , ua - 4 ; move v0 , v0 ) 
[3601] ( move 4 , ua - 2 ; move 4 , ul ) 
[3602] ( move ul - 4 , 0 ; move ul - ua , ul ) 
[3603] ( v0 = 2 ; loop 1 , 5 , move v1 , v0 ; move 3 , ua ) 
[3604] ( move ua , 0 ; move ua - ul , 2 ) 
[3605] ( move ua , 4 / ua ; move ul , ul / ua ) 
[3606] loop 0 , 6 , move 2 + v0 , 2 
[3607] ( move ul , ua + 4 ; loop 0 , 4 , move v0 + v0 , v0 ) 
[3608] ( move ul , ul ; loop 0 , 4 , move v0 , v0 + v0 ) 
[3609] ( move ua , 2 ; move 2 , 4 + ul ) 
[3610] ( move ua , ul ; move 3 - ul , 3 ; move ua , 2 ) 
[3611] ( move ua , ul ; move 4 + 2 , ua * ua ) 
[3612] loop 0 , 3 , move 3 , 4 * v0 
[3613] ( move ul - ua , ul ; move 3 + ul , 4 + ul ) 
[3614] ( loop 0 , 5 , move ul + v0 , v0 ; move v0 , v0 ) 
[3615] loop 0 , 7 , move v0 - ul , ua / v0 
[3616] loop 0 , 5 , move v0 - 2 , ul 
[3617] ( move ua - ul , 3 ; move ul - 2 , ua ; move 3 - ul , 2 ) 
[3618] loop 0 , 2 , move v0 + ua , v0 - 4 
[3619] loop 0 , 4 , move v0 + 2 , ua - 3 
[3620] loop 0 , 6 , move 2 , 3 + 3 
[3621] loop 0 , 4 , move v0 * v0 , v0 / 2 
[3622] loop 0 , 4 , move 4 , v0 - ul 
[3623] ( move ua , 0 ; move 4 * 2 , 4 ) 
[3624] loop 0 , 3 , ( move 2 , v0 ; move v0 * v0 , ul ) 
[3625] ( move ua + 2 , 4 ; move 3 / 2 , ua + ul ) 
[3626] ( move ul , 3 ; move 2 , ul ; move ua , ul ) 
[3627] loop 0 , 6 , move v0 + ul , ua / v0 
[3628] loop 0 , 2 , ( move ul , 3 ; move ua , v0 ) 
[3629] loop 0 , 3 , move 3 / v0 , v0 
[3630] ( move 0 , 3 + ul ; move ua , 2 ; move 4 , ul + ul ) 
[3631] loop 0 , 7 , move ul - 2 , 2 * v0 
[3632] ( loop 0 , 4 , move v0 , ul ; move ul , ul ) 
[3633] ( move 3 , 3 ; move 2 , ua + 4 ) 
[3634] ( move 2 , ua ; move 2 , 3 - ua ; move ua , 4 / ua ) 
[3635] ( move ul - ua , ul / 2 ; move 2 , ul ) 
[3636] ( move ul , ul ; move ua + ul , ul ; move 3 , ul ) 
[3637] ( move 4 , ua + 2 ; move ua , 3 / ua ) 
[3638] ( move ua , 0 - 2 ; move ua , 4 - ul ) 
[3639] ( move 0 , 4 + 2 ; move ua , 4 ) 
[3640] ( move ua , 3 ; move ul - ua , 2 ) 
[3641] loop 0 , 4 , move v0 * 3 , ua / v0 
[3642] ( move ul - ua , ua ; move ul - 4 , ul + ul ) 
[3643] loop 0 , 3 , move v0 + v0 , v0 + 3 
[3644] ( move 3 - ua , ua + ul ; move ua + ul , ul + ul ) 
[3645] loop 0 , 6 , move 2 , ul - v0 
[3646] ( move 2 , ua ; move 4 , 4 + 4 ) 
[3647] ( move ul , ua - 4 ; move 4 , 2 ) 
[3648] ( move ua , 2 ; move 4 + ul , ul ) 
[3649] loop 0 , 5 , move v0 , 4 * 2 
[3650] loop 0 , 2 , loop 1 , 3 , move 2 * v1 , 3 
[3651] loop 0 , 5 , loop 1 , ul , move v1 - ua , 4 
[3652] ( move 3 , 4 / ua ; move ua , 4 ) 
[3653] ( loop 0 , 2 , move ua , 4 ; move ul , v0 ) 
[3654] loop 0 , 5 , move 2 + v0 , ua / v0 
[3655] loop 0 , 2 , move 3 , v0 - 4 
[3656] loop 0 , 5 , move ul - v0 , 2 
[3657] ( move ua , 3 ; loop 0 , 6 , move v0 - 4 , ul ) 
[3658] ( loop 0 , 3 , move ul + v0 , v0 ; move ua , ul + v0 ) 
[3659] loop 0 , 2 , move 4 + v0 , v0 + 4 
[3660] ( loop 0 , 5 , move v0 , v0 ; move 3 , ua - v0 ) 
[3661] ( move 2 , 4 * 3 ; move ua , ul - 3 ) 
[3662] loop 0 , 6 , move ua - v0 , ul + v0 
[3663] loop 0 , 4 , move ua + ul , ua / 4 
[3664] ( move 3 , 0 ; move 0 - ua , 4 ) 
[3665] ( move ua , 2 ; move ua , 3 ; move 2 , ul ) 
[3666] ( move ua - 4 , 3 / 2 ; move ua , ul ; v0 = ul ) 
[3667] ( move ua , ua + ul ; move ua + ul , 4 * 2 ) 
[3668] ( move ua + ul , ua - ul ; move ua , 4 ) 
[3669] move 3 * 3 , ua / 3 
[3670] loop 0 , 6 , move 4 + v0 , 3 
[3671] ( move 0 , ul / 4 ; move ua , ul ) 
[3672] ( move 4 , 3 - ua ; move 3 , 4 ; v0 = ul ) 
[3673] ( move ua + ul , 3 / ua ; loop 0 , 6 , move ul , ua - v0 ) 
[3674] loop 0 , 3 , move ua - v0 , 2 / v0 
[3675] ( move ua + 3 , ua - ul ; move ua , 0 - 2 ) 
[3676] ( move ua , ul ; loop 0 , 3 , move 3 , 3 ) 
[3677] ( move ua + ul , 2 ; loop 0 , 4 , move ul , ul ) 
[3678] ( move 3 , ua * ua ; move ua + ul , ul ) 
[3679] ( move 3 , ua ; ( v0 = 2 - ua ; move v0 , ul - 3 ) ) 
[3680] ( move 2 , 4 ; move ua , 4 * 3 ) 
[3681] ( move 2 , 4 + ul ; loop 0 , 6 , move 2 , v0 ) 
[3682] ( move 0 , ua ; move ua , 4 + ul ; move 0 - ua , ul ) 
[3683] ( move ua , 2 ; move ua + 2 , 2 + ul ) 
[3684] loop 0 , 4 , move 2 * v0 , v0 - ul 
[3685] ( move 4 * 2 , ua ; move ua , 0 - 3 ) 
[3686] ( move ul , ua / 4 ; move ua , ul ; move ul , ul ) 
[3687] ( move 0 - 4 , ul - 4 ; move ua , 2 ) 
[3688] ( loop 0 , 4 , move ul , ul ; move v0 + ua , 0 ) 
[3689] ( move 3 , 4 / ua ; move ua , ul ) 
[3690] ( move ul , 0 ; loop 0 , 5 , move 2 , v0 ) 
[3691] ( move ua , ua ; ( move 4 , ua * ua ; move ul , 2 / ua ) ) 
[3692] loop 0 , 3 , move v0 + 3 , 3 / v0 
[3693] ( move 3 , 0 ; loop 0 , 4 , move v0 , v0 ) 
[3694] ( loop 0 , 2 , move v0 - 4 , v0 ; move ua , ul - v0 ) 
[3695] ( move ua , ua ; move ua , 4 ; move 3 , ul + ul ) 
[3696] ( move ua , 4 * 3 ; move ul - ua , ul ) 
[3697] ( move ua , ua ; loop 0 , 6 , move v0 , 3 ) 
[3698] ( loop 0 , 5 , move v0 , v0 / 3 ; move ua , 2 ) 
[3699] loop 0 , 7 , move ul - ua , 3 
[3700] ( move ua , 0 ; move ul , 4 + 2 ) 
[3701] ( move 2 , ua + ua ; loop 0 , 4 , move v0 , v0 * v0 ) 
[3702] ( move 2 - ua , ul ; loop 0 , 5 , move v0 , ul ) 
[3703] ( move ul , 3 + 3 ; move 4 , ul ) 
[3704] loop 0 , 2 , move 2 , v0 + 4 
[3705] loop 0 , 4 , move v0 - ua , ua - 2 
[3706] ( move ua + 2 , 3 ; move ua + 2 , 0 - 4 ) 
[3707] loop 0 , 3 , ( move ua , ul ; move v0 * v0 , ul ) 
[3708] loop 0 , 4 , move ul , ul - v0 
[3709] ( move ua , ua ; move 2 , 2 ; move ua , ul ) 
[3710] loop 0 , 4 , move ua - 3 , ul / v0 
[3711] ( move 3 , ul ; move 2 , 3 ) 
[3712] ( move ua , 2 ; loop 0 , 3 , move v0 , v0 - 3 ) 
[3713] ( move ul , ua ; move ua , 4 + ul ; move ua , ul ) 
[3714] loop 0 , 2 , move 4 , 3 + 2 
[3715] loop 0 , 4 , move ua - v0 , v0 - 3 
[3716] ( move ul , ul ; move 3 , ul ; move ul , ul ) 
[3717] ( loop 0 , 4 , move v0 , 4 ; move ul , 2 ) 
[3718] loop 0 , 7 , move 3 + v0 , 3 
[3719] loop 0 , 3 , loop 1 , 2 , move ul + v0 , ua / 4 
[3720] ( loop 0 , 5 , move 3 , v0 - ua ; move v0 + ul , ul ) 
[3721] ( move ul , 4 ; loop 0 , 3 , move 2 , v0 ) 
[3722] ( move 2 , ua * ua ; loop 0 , 3 , move 2 , ul ) 
[3723] ( loop 0 , 5 , move ul , ul ; move 4 , ul ) 
[3724] ( move ul , 3 ; move 3 , ua * ua ) 
[3725] loop 0 , 3 , move ua - v0 , ua * ua 
[3726] ( move 3 , ua + 3 ; move 3 + ul , 3 ; move ul , 4 ) 
[3727] loop 0 , 4 , move v0 - 3 , ua - 4 
[3728] ( loop 0 , 5 , move v0 , v0 - ul ; move v0 , v0 ) 
[3729] ( move ua , ul + ul ; loop 0 , 5 , move ua , 4 ; v1 = ua ) 
[3730] ( loop 0 , 4 , move v0 , ul ; move ua , 4 ) 
[3731] ( move ua , 2 / ua ; move 2 , ua - ul ) 
[3732] ( move ul , 0 ; ( move ua , 2 ; move ua / 2 , 3 / 2 ) ) 
[3733] ( move ua + ul , 4 ; loop 1 , 6 , move v1 , 2 ) 
[3734] ( move ua , ul ; loop 0 , 3 , move 3 , ul ) 
[3735] ( loop 0 , 4 , move v0 , ul ; move ul , 0 ) 
[3736] ( move ua - 4 , 2 ; move ua , 4 ) 
[3737] loop 0 , 3 , move 3 * v0 , 4 
[3738] ( move 2 , ul ; move ul , ua * ua ; move ua , 2 ) 
[3739] ( move ua , 0 ; move ul , ul ; move 3 , ul ) 
[3740] ( move ua + ul , 4 ; move 4 + ul , ul + ul ) 
[3741] loop 0 , 2 , ( move ul , 2 ; move 2 , v0 ) 
[3742] ( move ua , 3 + ul ; move ul - ua , ul / 3 ) 
[3743] ( move ua + 2 , 0 ; move ua , 4 ) 
[3744] loop 0 , 5 , move 3 , 2 
[3745] loop 0 , 3 , move 2 , v0 / 3 
[3746] loop 0 , 5 , move v0 + 4 , 3 
[3747] loop 0 , 2 , ( move 4 + ul , v0 ; move v0 , v0 ) 
[3748] loop 0 , 3 , move ua + v0 , v0 - 4 
[3749] ( move 4 , 2 ; move ul , 2 ) 
[3750] ( move 4 , ua - 3 ; move ua , ul ) 
[3751] loop 0 , 5 , move ul - v0 , v0 / 2 
[3752] ( move 4 + ul , 3 ; loop 0 , 3 , move ul , ul / v0 ) 
[3753] loop 0 , 7 , move 4 , ua - 3 
[3754] ( v0 = 4 * 2 ; move v0 , ua ; move 4 , v0 ) 
[3755] ( move 2 , ul / 4 ; move 4 , ul - 3 ) 
[3756] ( move ul + ul , ua ; loop 0 , 4 , move v0 , ua / 3 ) 
[3757] ( move ua , ua - ul ; move 2 , ua * ua ) 
[3758] loop 0 , 3 , ( move v0 , v0 ; move 2 + v0 , v0 ) 
[3759] ( move 2 , ua / 2 ; move ua , ua * ua ) 
[3760] loop 0 , 5 , move ua - ul , ua - 4 
[3761] ( move ul - ua , 3 ; move ul - ua , ul ) 
[3762] ( move ua , 3 ; move 3 , ua - 4 ) 
[3763] ( v0 = 0 - ua ; move v0 , 4 ; move v0 , 3 ) 
[3764] ( move ua - ul , ua ; move 2 , ul - 2 ) 
[3765] ( loop 0 , 4 , move v0 , ul ; move 2 , 2 ) 
[3766] loop 0 , 3 , move 3 + v0 , ua * ua 
[3767] ( move 2 - 3 , ul ; move 4 , ua * ua ) 
[3768] ( loop 0 , 6 , move ul , 2 ; move v0 , ua ) 
[3769] ( move 4 - ua , 4 ; move ua , ul ) 
[3770] ( move 2 , 4 * 2 ; move ua , ul ) 
[3771] ( move ul - 4 , 2 ; move ua + ul , ul ) 
[3772] ( move 4 + 4 , ua ; move ul , 4 ) 
[3773] ( move 2 , ua * ua ; loop 0 , 3 , move v0 , v0 * v0 ) 
[3774] ( move ul , ua - 3 ; loop 0 , 3 , move 4 - ua , ul ) 
[3775] loop 0 , 3 , ( move ul , 3 ; move ua , ul ) 
[3776] ( move 2 - ua , ul ; move ua + 3 , ul ) 
[3777] ( move 3 , ua ; move 2 , ua / 4 ) 
[3778] ( move ul , ul ; move 4 * 2 , 0 - ul ) 
[3779] ( loop 0 , 3 , move ua , v0 * 4 ; move ul , ua ) 
[3780] ( move ua , ul ; move 4 , 0 - ul ) 
[3781] ( move 2 , 4 / ua ; move 4 + ul , ul ) 
[3782] loop 0 , 5 , move 4 - v0 , 3 - 4 
[3783] loop 0 , 6 , move 2 , 3 / ua 
[3784] ( move 4 , 3 ; move 4 , 2 ) 
[3785] ( move ul - 4 , 4 / 3 ; move ul - ua , 2 ) 
[3786] loop 0 , 5 , move 3 - v0 , ua - ul 
[3787] ( loop 0 , 3 , move 4 , ul ; move ua , v0 ) 
[3788] ( move ua - ul , 2 ; move 2 - ua , ul ) 
[3789] ( move 4 + ul , ul / ua ; move ua + ul , ua + ul ) 
[3790] loop 0 , 3 , move 4 * v0 , 2 
[3791] ( v0 = ua * 3 ; loop 1 , 5 , move 4 , v0 * v0 ) 
[3792] ( move ua , 4 * 2 ; move ul - 4 , 4 ) 
[3793] ( move ua , ul / ua ; loop 0 , 5 , move v0 - ul , ul ) 
[3794] ( move 3 , ul ; move 4 , 0 - 4 ) 
[3795] ( move ua , 0 ; move ua - ul , ua * ua ) 
[3796] ( loop 0 , 6 , move v0 , ul ; move ul , v0 ) 
[3797] ( move 4 , 4 + ul ; move ua , ul ) 
[3798] ( loop 0 , ul , move 4 , ul ; loop 1 , 5 , move 3 , ul - ua ) 
[3799] loop 0 , 4 , move 2 - ua , ul 
[3800] loop 0 , 3 , move v0 * 3 , 3 / ua 
[3801] ( loop 0 , 4 , move ua , 4 ; move 2 - v0 , v0 ) 
[3802] ( move ul , ua ; move ua , ua / 4 ; move ua - 2 , ul + ul ) 
[3803] ( move ua , ua + ua ; loop 0 , 6 , move v0 - 3 , ul ) 
[3804] loop 0 , 7 , move v0 / 3 , v0 * 2 
[3805] loop 0 , 7 , move 3 , ua - 4 
[3806] loop 0 , 3 , move v0 + ul , ua - 2 
[3807] loop 0 , 4 , move ul - 3 , v0 + v0 
[3808] ( move 4 , 4 ; loop 0 , 4 , move v0 , v0 ) 
[3809] loop 0 , 6 , move 2 , 4 + 3 
[3810] ( move 3 , 0 - ul ; move ua + ul , ul ) 
[3811] ( loop 0 , 4 , move v0 + v0 , v0 ; move v0 , ul ) 
[3812] ( move ul - ua , ua ; move ua - ul , 3 / ua ) 
[3813] loop 0 , 6 , move v0 - 3 , ul - v0 
[3814] ( loop 0 , 4 , move 3 , ul ; move v0 , ua ) 
[3815] ( loop 0 , 6 , move v0 , 2 ; move ul , 0 ) 
[3816] ( loop 0 , 6 , move ul , ua / v0 ; move ul , 0 ) 
[3817] loop 0 , 3 , ( move ua , ul ; move ul - ua , ul ) 
[3818] ( move ul , ul ; move 3 , 2 ; move ul - ua , ul + ul ) 
[3819] loop 0 , 5 , move ul + v0 , ua - v0 
[3820] ( loop 0 , 3 , move 4 , v0 ; move 4 * v0 , v0 ) 
[3821] ( move ul / 4 , 4 * 2 ; move ua , 3 ; move ua , 3 ) 
[3822] ( v0 = ul / 3 ; move ua , ua - v0 ; move 3 , ua + ul ) 
[3823] ( move 0 - ua , ua ; loop 0 , 4 , move ul , ul ) 
[3824] ( move ua , ul ; move 4 + ul , ua - 2 ) 
[3825] ( move ua , 2 ; move ul , ul ; move 2 , ul ) 
[3826] ( move 2 , ua ; move 3 * 3 , ua - 2 ) 
[3827] ( loop 0 , 3 , move v0 , 4 ; move ua + 3 , 4 * v0 ) 
[3828] ( move ua + ul , ul ; move 3 , ul ; move 4 , ul + ul ) 
[3829] ( move ua , 0 ; move ua , 2 ; move ua , 4 - ul ) 
[3830] ( move 4 + ul , 3 / ua ; move 4 , ul ) 
[3831] ( move 4 , ua ; move ua + 2 , 0 - ul ) 
[3832] loop 0 , 3 , move ua / v0 , v0 - 4 
[3833] ( move 2 - ua , ua ; loop 0 , 4 , move v0 , v0 ) 
[3834] ( move ua , 2 + ul ; loop 0 , 6 , move ul + v0 , 4 ) 
[3835] loop 0 , 3 , move ul - ua , 2 
[3836] loop 0 , 3 , ( move ul , ua ; move v0 + ua , ua - 2 ) 
[3837] loop 0 , 7 , move v0 - 3 , v0 - ul 
[3838] ( move ua , ul / ua ; move 4 , ul ) 
[3839] loop 0 , 4 , move 3 + v0 , v0 * v0 
[3840] loop 0 , 6 , move ua / 4 , v0 / 4 
[3841] loop 0 , 2 , move 4 , 4 / ua 
[3842] ( move ua , 0 - ul ; move ua , ua / 3 ) 
[3843] loop 0 , 7 , move ul - v0 , ua - v0 
[3844] ( move ua - ul , 2 ; move 3 , 2 ) 
[3845] ( move ua , ul / ua ; move 3 , ua * ua ) 
[3846] ( loop 0 , 5 , move v0 , v0 + ul ; move ul , ua ) 
[3847] loop 0 , 4 , move ua / v0 , 2 
[3848] loop 0 , 2 , ( v1 = 2 ; move ul , 2 ; move ua , 2 ) 
[3849] ( move 3 - ul , ul ; loop 0 , 4 , move 4 , v0 ) 
[3850] ( move 2 , ul ; move ua - ul , 2 ; move 3 + 2 , ua - 4 ) 
[3851] loop 0 , 3 , ( move 2 , ul ; move 2 + ul , 2 / ua ) 
[3852] loop 0 , 4 , move 4 / v0 , v0 - 2 
[3853] ( move 2 - ua , 4 + ul ; move ua , ul ) 
[3854] ( v0 = ua * ua ; loop 1 , 6 , move 3 , 4 - v0 ) 
[3855] ( move ua , ul / ua ; move 3 + 2 , ul ) 
[3856] ( move ua + ul , ul ; loop 0 , 5 , move v0 , v0 ) 
[3857] ( loop 0 , 5 , move 2 , v0 ; move v0 , ua ) 
[3858] ( move ua , 3 ; loop 0 , 5 , move v0 , v0 - ul ) 
[3859] ( loop 0 , 3 , move 4 , v0 ; move ua , v0 ) 
[3860] ( v0 = ua + 4 ; move v0 , ua / v0 ) 
[3861] ( move ua , ul ; loop 0 , 3 , move v0 , 3 ) 
[3862] ( loop 0 , 6 , move 4 , v0 ; move v0 , v0 ) 
[3863] ( move ua - 2 , 4 + 3 ; move ul - ua , 3 ) 
[3864] loop 0 , 3 , ( move v0 , ul ; move ul , 4 ) 
[3865] loop 0 , 7 , move 4 + 2 , 4 
[3866] loop 0 , 4 , move 3 * v0 , ua - v0 
[3867] ( loop 0 , 5 , move v0 + ul , v0 ; move v0 , ul ) 
[3868] ( loop 0 , 6 , move v0 , ul ; move v0 , v0 + v0 ) 
[3869] loop 0 , 4 , move v0 + v0 , 3 + v0 
[3870] loop 0 , 3 , ( move v0 , v0 + v0 ; move v0 , v0 ) 
[3871] loop 0 , 4 , move v0 * v0 , v0 - 2 
[3872] ( move 2 , ul - 4 ; move ua , ul ; move ua , 2 ) 
[3873] ( move 4 , ul / ua ; move ua , 2 ) 
[3874] ( move 3 , ua - 4 ; move ua , ul ) 
[3875] ( move ua , ua / 4 ; loop 0 , 5 , move v0 , v0 ) 
[3876] ( loop 0 , 3 , move ua , 3 ; move v0 , ul ) 
[3877] ( move ul - ua , 3 - ul ; move ua , ul ; move ua / 2 , 2 ) 
[3878] loop 0 , 4 , move 4 / v0 , 4 - v0 
[3879] loop 0 , 3 , ( move v0 , ul ; move v0 , ul / v0 ) 
[3880] ( loop 0 , 6 , move ul , ul ; move 2 , 0 ) 
[3881] ( move ul , ul ; ( move 3 + ul , ul ; move 2 + ul , 2 ) ) 
[3882] loop 0 , 6 , move ua + ul , ua - 2 
[3883] ( move ua , 4 ; move ua + ul , 2 ) 
[3884] ( move 4 , ua + ul ; move ul , 3 ; move ua , 2 ) 
[3885] ( move 4 , ua + ul ; move 3 , ul ; move ul - ua , ul / 3 ) 
[3886] loop 0 , 2 , ( move v0 , v0 ; move 4 + v0 , 2 ) 
[3887] ( move ul - 4 , ua ; move ua + 2 , 2 ) 
[3888] ( move ua + 2 , ua ; move ul , 4 ; move ua , 0 ) 
[3889] ( move ua , ua - 2 ; move 0 , 2 ; move ua , ul / ua ) 
[3890] ( loop 0 , 3 , move 3 - ua , v0 ; move ua , ul ) 
[3891] ( move ua , 4 ; move 2 , 2 + ul ; move ua , ul - ua ) 
[3892] loop 0 , 5 , move v0 + 2 , 2 
[3893] loop 0 , 5 , move v0 - ul , ua - v0 
[3894] loop 0 , 3 , ( move ua , 4 + v0 ; move v0 , 3 ) 
[3895] loop 0 , 4 , move 2 + v0 , 2 + v0 
[3896] ( move 3 , ul - ua ; move ua - ul , 2 ) 
[3897] loop 0 , 2 , ( move ul , 0 ; move ua , ua - 2 ) 
[3898] loop 0 , 4 , move 3 , 3 - v0 
[3899] ( move ul + ul , 2 ; move ua + ul , ul / 2 ) 
[3900] ( move 3 , 2 ; loop 0 , 5 , move v0 , v0 ) 
[3901] ( loop 0 , 5 , move ul , 2 ; move v0 , ul / ua ) 
[3902] loop 0 , 5 , move 3 + 2 , 2 
[3903] ( move ua , ua ; v3 = ul ; loop 4 , 5 , move 4 , 3 ) 
[3904] ( move ua + ul , 4 + ul ; move ua , ul ) 
[3905] loop 0 , 6 , move ua - v0 , ua * ua 
[3906] loop 0 , 2 , ( move ua , 3 ; move v0 , 2 ) 
[3907] loop 0 , 3 , move 3 + v0 , ua - ul 
[3908] ( ( v0 = ua ; move 2 , v0 - 4 ) ; move ua , ul - 2 ) 
[3909] ( move ua / 4 , 2 ; move ua , ua + ul ) 
[3910] loop 0 , 3 , move 0 - 3 , v0 * v0 
[3911] ( move 2 , ua ; move 4 , ul ; move ul , ul ) 
[3912] ( move ua + ul , ul ; loop 0 , 4 , move ul , ul ) 
[3913] loop 0 , 3 , move ul - 3 , 2 
[3914] loop 0 , 7 , move v0 - ul , 4 - v0 
[3915] loop 0 , 3 , move 4 - ua , v0 * 2 
[3916] ( move 3 , ua ; move 3 + 2 , ul - 3 ) 
[3917] loop 0 , 3 , ( move ul , v0 * v0 ; move v0 , v0 ) 
[3918] ( loop 0 , 6 , move v0 , v0 ; move v0 , 3 * v0 ) 
[3919] loop 0 , 6 , move 4 , 3 - 4 
[3920] loop 0 , 3 , move 2 + v0 , 3 - v0 
[3921] loop 0 , 2 , move ua - v0 , ua - 3 
[3922] ( move 2 , 2 / ua ; move ua , ul ) 
[3923] loop 0 , 5 , move 4 - v0 , v0 + 2 
[3924] ( move ua + ul , 4 * 4 ; move 4 , 4 ) 
[3925] ( move ua - 4 , 2 ; move 4 + 2 , 2 - ua ; move 2 , ul ) 
[3926] ( move ua + 3 , ul / 3 ; move ul , 2 ) 
[3927] ( loop 0 , 6 , move v0 , 3 ; move v0 , v0 ) 
[3928] loop 0 , 2 , move ul - 3 , ul 
[3929] loop 0 , 6 , move 2 * v0 , 3 * 3 
[3930] ( move ul + ul , 4 + 2 ; loop 0 , 6 , move 4 , v0 ) 
[3931] ( move ua , 3 / 4 ; move 3 , 2 ) 
[3932] ( move 3 - ua , ua ; move 3 , ul ) 
[3933] loop 0 , 2 , move ua + ul , 3 + v0 
[3934] ( move 4 , ua ; move ua , 4 / 3 ) 
[3935] ( loop 0 , 6 , move 2 , 4 ; move v0 , ul ) 
[3936] loop 0 , 3 , ( move ua , ul ; move ul , ul ) 
[3937] loop 0 , 6 , move 4 , 4 * v0 
[3938] loop 0 , 3 , move 2 , 2 + v0 
[3939] ( move 4 , 3 * 3 ; loop 0 , 4 , move v0 * v0 , v0 ) 
[3940] ( loop 0 , 2 , move ua + 2 , 4 ; move v0 , v0 ) 
[3941] loop 0 , 3 , move 4 , 4 / v0 
[3942] ( move ul , 2 ; loop 0 , 3 , move v0 - ua , v0 ) 
[3943] ( move ua + ul , 0 ; move ua , ua * ua ) 
[3944] ( move ua + 3 , 2 ; move ua , 4 ) 
[3945] ( move 2 , 4 ; move ua + ul , ul ) 
[3946] ( move ul , 0 ; move ua , 3 + 2 ) 
[3947] ( move ua - ul , 2 ; move ul , ul / 2 ; move 4 , ul ) 
[3948] loop 0 , 7 , move 4 - v0 , v0 * v0 
[3949] ( move ua - ul , 2 ; move ua - ul , ua * ua ) 
[3950] loop 0 , 4 , move ul - 4 , 4 * 2 
[3951] ( move 3 , ua ; move ua + ul , 4 + ul ) 
[3952] ( move ua , ul / ua ; move ua , ul ; move 2 / ua , ul / ua ) 
[3953] loop 0 , 3 , move 3 - ua , 2 
[3954] loop 0 , 6 , move v0 , 3 / 2 
[3955] ( move ua , ul / ua ; loop 0 , 4 , move v0 , 2 ) 
[3956] ( move ua + ul , 2 ; move ua + ul , 4 - ua ) 
[3957] ( move 4 , 4 ; move 4 , 2 ) 
[3958] loop 0 , 7 , move ul - v0 , 4 + v0 
[3959] loop 0 , 2 , loop 1 , 3 , move 2 - 4 , v0 + ua 
[3960] ( move 4 - ua , ul + ul ; move ua + ul , ul ) 
[3961] ( move 4 * 2 , 4 ; move ua , 3 ) 
[3962] ( move ua , ua ; move ul , 4 ; move ua , ul ) 
[3963] ( move 4 , ua - ul ; move 4 + ul , ul ) 
[3964] ( move ul , ul ; move ua , ul / 4 ) 
[3965] ( move ul - ua , ul ; move ua + ul , ul ) 
[3966] ( loop 0 , 3 , move 3 , v0 ; move v0 , 0 ) 
[3967] ( loop 0 , 5 , move v0 , v0 ; move 4 + ul , 0 ) 
[3968] loop 0 , 7 , move 4 , ua - 4 
[3969] ( move 2 - ua , 2 ; move ua , 4 ) 
[3970] ( move 2 , ua - 2 ; move ua + ul , ul ) 
[3971] loop 0 , 2 , move 4 + ul , 3 
[3972] loop 0 , 6 , move 2 / v0 , 4 / v0 
[3973] ( move ua , 2 ; loop 0 , 2 , move ua , 2 + 2 ) 
[3974] loop 0 , 6 , move ul - 3 , ua / v0 
[3975] loop 0 , 4 , move 2 , ul / ua 
[3976] ( move ua + ul , 2 ; loop 0 , 4 , move v0 , ul ) 
[3977] ( move ua , ul ; move ul , 2 ) 
[3978] loop 0 , 4 , move v0 - 3 , ua - 2 
[3979] loop 0 , 2 , ( move ul , v0 ; move v0 , ua ; move 3 , 3 ) 
[3980] loop 0 , 3 , move v0 * 4 , 4 
[3981] ( loop 0 , 6 , move ul , v0 ; move ua + ul , v0 - ua ) 
[3982] ( move ul , ul ; ( move 4 , ul ; move ua , ul ) ) 
[3983] loop 0 , 3 , move 4 + ul , 2 
[3984] ( move 4 , ua / 3 ; move ua , ul ) 
[3985] ( move 2 , ua ; move ua , 4 * 3 ) 
[3986] ( move ua + ul , 4 ; move 4 , 4 ) 
[3987] loop 0 , 3 , ( move ul , ul / v0 ; move 3 , v0 ) 
[3988] loop 0 , 2 , loop 1 , 2 , move v0 + 2 , ul 
[3989] ( move ul - ua , ul ; move ua , 4 + ul ) 
[3990] ( move ul - ua , ua * 2 ; loop 0 , 5 , move v0 , ul / ua ) 
[3991] ( move 2 - 4 , ul ; loop 0 , 3 , move v0 , ul ) 
[3992] ( move ua , ua ; move ua , ua / 4 ) 
[3993] loop 0 , 2 , loop 1 , 3 , move v1 - 3 , v0 
[3994] ( move ua , ua - 2 ; move ua , 2 ) 
[3995] ( move 2 - ua , ul / ua ; move ua , ul ; move ul , ul - 4 ) 
[3996] loop 0 , 3 , ( move v0 , v0 ; move ua , v0 + ul ) 
[3997] ( move ul , 4 - ul ; move ua + 2 , ul ; move 3 , ua + 4 ) 
[3998] ( move 4 , ul ; move ul , ua + 3 ; move 3 * 2 , ul ) 
[3999] ( loop 0 , 4 , move v0 , 3 + v0 ; move ua , ua ) 
[4000] ( loop 0 , 4 , move v0 , v0 + ul ; move 3 , 2 - ul ) 
[4001] ( loop 0 , 6 , move ul , ul ; move v0 , 0 ) 
[4002] ( move 3 - ul , ua - 4 ; move ua + ul , ul ) 
[4003] ( move 3 , 3 / 2 ; move 3 , 4 ) 
[4004] ( move ul - ua , 4 / 3 ; move ua , ua - ul ; v0 = ul ) 
[4005] ( move ua , ua / 4 ; move 2 , ul ) 
[4006] ( loop 0 , 6 , move v0 , v0 ; move ul , ul ) 
[4007] ( move 2 + ul , ua ; move 3 + ul , ul ; move 4 , ul / 4 ) 
[4008] ( v0 = ua - ul ; loop 1 , 4 , move v0 , v1 * v0 ) 
[4009] ( loop 0 , 3 , move 3 , ul ; move 3 , ua ; move 3 , v0 ) 
[4010] ( move ua - 4 , ul ; move ua , 2 ) 
[4011] ( move ua - 3 , 3 + 2 ; move ul , ul ; move ua + ul , ul ) 
[4012] loop 0 , 4 , move 4 , 3 - v0 
[4013] ( loop 0 , 6 , move v0 , 4 ; move ul , v0 ) 
[4014] ( loop 0 , 5 , move ul + ul , 2 ; move ul , ua ) 
[4015] ( move ul , 0 - 3 ; move 4 , ul ) 
[4016] loop 0 , 4 , move 4 , 3 / v0 
[4017] loop 0 , 4 , move 4 / 3 , v0 * v0 
[4018] ( move ul - ua , ul ; move 3 - ua , 2 ) 
[4019] ( loop 0 , 3 , move ul , v0 ; move v0 + ua , 2 ) 
[4020] loop 0 , 3 , ( move v0 , ua - v0 ; move 3 , v0 ) 
[4021] loop 0 , 5 , move v0 + ul , v0 * v0 
[4022] ( move ua + ul , 4 ; move 3 , 4 ) 
[4023] ( move ua , ua * ua ; loop 0 , 4 , move v0 , ul ) 
[4024] loop 0 , 4 , move v0 * 2 , 3 / v0 
[4025] ( ( move ul + ul , ul ; move 0 - ul , ul ) ; move ua , ul ) 
[4026] ( move ua , 2 ; move ul , ul ; move ua , ul ) 
[4027] ( move 4 , 0 ; move 3 - ua , 3 ) 
[4028] ( loop 0 , 5 , move 4 - ua , ul ; move ul , ua / v0 ) 
[4029] loop 0 , 3 , move v0 + ul , 2 + v0 
[4030] ( loop 0 , 4 , move ul , ua - v0 ; move ua , ul - v0 ) 
[4031] loop 0 , 5 , move 2 - v0 , 3 / ua 
[4032] ( move ua , ul ; loop 0 , 4 , move v0 , v0 + v0 ) 
[4033] loop 0 , 3 , move 4 - ua , v0 / 2 
[4034] ( move ua , 2 ; move ua + 2 , 2 ) 
[4035] ( move ua + 2 , 3 + ul ; move ul , 3 ; move 4 , ul ) 
[4036] loop 0 , 2 , loop 1 , 3 , move 3 + v1 , v0 + 4 
[4037] loop 0 , 3 , ( move v0 , ul ; move ul , ul / 2 ) 
[4038] ( move ua , 0 - ul ; move ul , 2 ; move ua , ul + ul ) 
[4039] ( move ua , 3 ; move 0 , 3 ; move 3 , 3 ) 
[4040] loop 0 , 3 , ( move ul + ul , v0 ; move ua + v0 , ul ) 
[4041] ( move ua , ua ; move 2 , 3 ; move 4 + ul , 4 ) 
[4042] ( move ua + 2 , 3 / ua ; move ul , ul ) 
[4043] ( move 2 - ua , ua ; loop 0 , 3 , move v0 , ul ) 
[4044] ( move ua + ul , ua + ul ; move 2 - ua , ul ) 
[4045] loop 0 , 7 , move 0 - ua , 2 
[4046] ( move 4 , 3 ; move ua , ua - 3 ) 
[4047] ( move ua , ua ; move ul + ul , ul ; move ua / 3 , 2 / 3 ) 
[4048] ( move 2 , 0 ; move ua , ul / 3 ) 
[4049] loop 0 , 3 , move 3 , 2 / ua 
[4050] ( ( move 0 , 4 ; move 3 , 2 ) ; move 3 , ua * ua ) 
[4051] loop 0 , 3 , move ua - 3 , ua - v0 
[4052] loop 0 , 2 , loop 1 , 3 , move 3 , v1 + 4 
[4053] loop 0 , 6 , move v0 - ul , 4 - v0 
[4054] ( move 3 , ua ; loop 0 , 4 , move ul , v0 / ua ) 
[4055] loop 0 , 7 , move v0 / 2 , v0 + ul 
[4056] ( move ua , ul / 4 ; move 4 + ul , ul ) 
[4057] ( move ul , 3 / ua ; move 3 , 2 ; move ua , ul ) 
[4058] ( move 4 , ua ; move 3 , 3 / ua ) 
[4059] ( move 4 , ul ; loop 1 , 5 , move v1 - ul , ul ) 
[4060] loop 0 , 3 , move 4 + v0 , 3 
[4061] loop 0 , 7 , move 2 , 2 / v0 
[4062] ( move ul , 3 ; move 0 - 4 , 2 ) 
[4063] loop 0 , 4 , move v0 + ul , v0 - 4 
[4064] loop 0 , 6 , move ul + ul , 3 / 4 
[4065] loop 0 , 4 , move ul , v0 - ul 
[4066] ( ( move ul , ua / 4 ; move ul , 3 ) ; move 4 , ul ) 
[4067] ( move 2 , ul - 4 ; move ua + ul , ua + ul ) 
[4068] loop 0 , 5 , move 2 + v0 , v0 * v0 
[4069] ( loop 0 , 5 , move ul - v0 , ua ; move v0 , ul ) 
[4070] loop 0 , 5 , move 3 , ua * ua 
[4071] ( loop 0 , 5 , move 2 , v0 ; move v0 , ul ) 
[4072] ( move 4 * 2 , ul / ua ; move ul + ul , ul - ua ) 
[4073] ( move 3 , ua - ul ; move 4 - ul , 0 ; move ua - ul , 2 ) 
[4074] ( move ua , 3 ; move ua , 4 + ul ) 
[4075] ( move ua + ul , ua / 3 ; move 2 , ul ) 
[4076] loop 0 , 6 , move ul - v0 , v0 - ul 
[4077] ( move 4 , ua ; move 4 + ul , ua - 2 ) 
[4078] ( move ul - 3 , ua + 2 ; move ul - ua , ul ) 
[4079] ( move ua + 3 , 4 / ua ; move ul , ul ) 
[4080] ( move 0 - 4 , 0 ; move 4 + ul , ul ) 
[4081] ( move ua - ul , ua ; move ua + 3 , 2 ) 
[4082] ( move 3 , 2 ; loop 0 , 6 , move 4 , 4 ) 
[4083] ( move ul , ua ; move ua , 3 / 2 ) 
[4084] ( move ul , ua ; move ul , ul ; move ua , ul / ua ) 
[4085] ( loop 0 , 2 , move ua , v0 - 2 ; move ul - 4 , ul ) 
[4086] ( move ul - ua , ua ; move 2 , ul / 4 ; move 4 , ul ) 
[4087] ( move 3 , 3 / ua ; move ua , ul ) 
[4088] ( move ua , ua ; move 2 , ul ; move 4 + ul , ul ) 
[4089] ( move ul , ul ; loop 0 , 3 , move 3 , v0 ) 
[4090] loop 0 , 4 , move 4 , 0 - 4 
[4091] ( move ua , 4 ; move 4 , ua * ua ) 
[4092] ( move 2 , 0 ; loop 0 , 5 , move v0 , ul - v0 ) 
[4093] ( move ul , 2 * 2 ; loop 0 , 4 , move v0 + v0 , 2 ) 
[4094] loop 0 , 4 , move v0 , 3 / 2 
[4095] loop 0 , 6 , move ua - ul , 4 
[4096] ( move ua , ul - 4 ; move 3 , 2 ) 
[4097] ( move ul , 4 ; move 4 , ua ; loop 0 , 3 , move v0 , 4 ) 
[4098] loop 0 , 4 , move ua - ul , ul + v0 
[4099] ( move ua / 2 , ua ; move ul - 3 , ul ; move 3 - ua , ul ) 
[4100] ( move 4 + 3 , ua * ua ; move ua - 2 , ul ) 
[4101] ( move 3 , ua ; move ua , 2 / 3 ) 
[4102] ( move ul , ua ; move ul - ua , 4 ; move 2 , ul ) 
[4103] ( move ua , ua ; move ul , ua + 4 ; move 4 - ua , 4 ) 
[4104] ( move ua , ul ; loop 0 , 2 , move 2 , ul ) 
[4105] loop 0 , 2 , loop 1 , 2 , move 3 , v0 
[4106] ( v0 = 4 ; move v0 , ul ; move v0 , ua - v0 ) 
[4107] loop 0 , 4 , move ul - ua , 4 / v0 
[4108] loop 0 , 5 , move ua / 4 , ul - v0 
[4109] ( move 4 , 4 / 2 ; move 3 , 4 ) 
[4110] ( move ua - ul , ul ; move ua , 0 - 3 ) 
[4111] ( move ua - ul , 3 ; move 3 * 2 , 2 ) 
[4112] loop 0 , 3 , move ua - 4 , ul - 2 
[4113] ( move ua - 3 , ul ; move ua + ul , ua + 2 ) 
[4114] ( move 3 + 2 , ul ; move ul , ul ) 
[4115] ( loop 0 , 6 , move v0 , ul ; move ua , 3 ) 
[4116] ( move 3 , ul ; move 3 , 4 ) 
[4117] ( move 4 , 4 ; move ua , ua / 3 ) 
[4118] ( move ua + 2 , ul + ul ; move ul - 3 , 4 ) 
[4119] ( loop 0 , 3 , move 2 , 2 - ua ; move v0 , 2 + v0 ) 
[4120] loop 0 , 2 , loop 1 , 3 , move ul , 4 * v1 
[4121] ( move 4 , ul ; loop 0 , 5 , move v0 + ul , v0 ) 
[4122] ( ( move 3 , ul ; move 4 , 4 ) ; move ua - ul , ua + 3 ) 
[4123] loop 0 , 5 , move ua - 4 , ua - v0 
[4124] loop 0 , 2 , loop 1 , 3 , move ua - v0 , 4 
[4125] loop 0 , ul , loop 1 , 5 , move v0 - v1 , 2 
[4126] ( move ua , ul ; move ua , 3 * 3 ) 
[4127] ( move 3 + 2 , ua ; loop 0 , 4 , move v0 * 2 , ul ) 
[4128] loop 0 , 2 , loop 1 , 3 , move ua / 2 , v1 - 3 
[4129] ( move 4 , 0 ; loop 0 , 5 , move v0 - ul , ul ) 
[4130] ( move ua , ua ; move ul , ul / 3 ; move ul - 2 , 4 ) 
[4131] ( move ua , 0 - ul ; move 3 + 2 , ul ) 
[4132] ( move ul - ua , ua ; move ua + ul , ua - ul ; v0 = ul ) 
[4133] ( loop 0 , 6 , move ul , ul ; move v0 , v0 ) 
[4134] ( move ua , ul / ua ; move ua + 2 , 4 + 4 ) 
[4135] loop 0 , 4 , move 3 , ua * ua 
[4136] ( move 3 , 2 ; move ua + ul , 4 ) 
[4137] ( move 4 + ul , ul ; loop 1 , 5 , move v1 , v1 - ul ) 
[4138] ( move ua + ul , ul + ul ; move 3 , 3 / ua ) 
[4139] loop 0 , 4 , move v0 + v0 , v0 - 2 
[4140] ( v0 = 4 ; move v0 - ul , 0 ; move v0 , v0 / 3 ) 
[4141] loop 0 , 3 , move ua + ul , ul + v0 
[4142] ( move ul , ul ; loop 1 , 4 , move 4 , 4 ) 
[4143] ( move 3 , ul - 4 ; move ua , ul / ua ) 
[4144] loop 0 , 4 , move 2 , 4 + 3 
[4145] loop 0 , 6 , move ua - 2 , ul 
[4146] ( move ua + ul , 3 * 2 ; move ul , 4 ; move ul , 2 / ua ) 
[4147] ( move ua / 2 , ul ; move 3 , ua - ul ; move ua , ul ) 
[4148] loop 0 , 3 , ( move v0 , 2 ; move ua , ul / v0 ) 
[4149] ( move ul , ua * ua ; loop 0 , 2 , move 3 , ul ) 
[4150] ( move ua + ul , ua ; move 3 , ul + ul ; move ua + ul , 3 ) 
[4151] ( loop 0 , 4 , move 3 / v0 , v0 ; move ul , v0 * ua ) 
[4152] ( loop 0 , 4 , move v0 , ul / ua ; move v0 , ul ) 
[4153] ( move 4 , 0 ; move ul - ua , ul ; move ua , ul ) 
[4154] ( loop 0 , 3 , move v0 - 2 , 2 ; move v0 , v0 ) 
[4155] ( move ul - 4 , 0 ; move 3 * 3 , ul ) 
[4156] ( loop 0 , 6 , move ul , v0 / 2 ; move ul , ua ) 
[4157] loop 0 , 4 , move v0 * v0 , ua - 2 
[4158] ( move ua , ua ; move ul , ul ; move ul - ua , ua ) 
[4159] ( move 4 , ul ; move ul , ul ; move ua , ua + ul ) 
[4160] ( move 3 + 3 , ul ; move ul , ul ; move ua + ul , ul ) 
[4161] loop 0 , 3 , ( move v0 , v0 ; move ua - v0 , ul ) 
[4162] loop 0 , 7 , move ul - 4 , ua / v0 
[4163] ( move ul - ua , 4 ; move ua + ul , ul ) 
[4164] loop 0 , 3 , move ua / v0 , ua / 4 
[4165] loop 0 , 3 , ( move 2 , v0 ; move v0 , v0 ) 
[4166] loop 0 , 7 , move v0 / 2 , v0 * 3 
[4167] ( move 0 - 2 , 3 ; move ua , 4 ) 
[4168] ( move ua , 0 ; ( move ul / 3 , 4 ; move 2 + ul , 2 ) ) 
[4169] ( loop 0 , 6 , move ul , v0 ; move 2 , 0 ) 
[4170] loop 0 , 3 , move v0 + v0 , 4 + 3 
[4171] ( loop 0 , 6 , move ul , 2 * v0 ; move ua , 0 ) 
[4172] ( move ua - ul , 4 / 3 ; move ul - 4 , ul ) 
[4173] ( move ul , 0 - 2 ; move ua , 4 ) 
[4174] ( move 4 , ul ; move ua , 2 - 4 ) 
[4175] ( move ul , 3 ; move ua , 3 + 2 ) 
[4176] ( move 2 , 2 ; move 0 - ua , 3 + ul ) 
[4177] ( move 4 - 2 , ua + 3 ; move ua , 4 + ul ) 
[4178] ( move 4 , 4 ; move 4 + ul , ul ) 
[4179] ( move ul , ul ; loop 0 , 4 , move 2 , v0 ) 
[4180] ( ( move ua , ul ; move ul , 2 ) ; move 4 , ul ) 
[4181] ( move ul - ua , 3 + 3 ; move ua , ul ) 
[4182] ( move ua , ua - 4 ; loop 0 , 2 , move ul , ul ) 
[4183] ( loop 0 , 3 , move 4 , v0 * v0 ; move ul , 4 * v0 ) 
[4184] ( move ul , 0 ; move 4 , 4 + 4 ) 
[4185] ( move ua , 3 ; move ul , ul ; move ua , ul ) 
[4186] loop 0 , 2 , ( move ua , 4 / v0 ; move 2 , v0 * v0 ) 
[4187] loop 0 , 5 , move ul + v0 , ua / 4 
[4188] loop 0 , 3 , ( move ua - 2 , 0 ; move v0 , ul ) 
[4189] ( move ul - ua , ul ; move ua + 2 , ul ) 
[4190] ( loop 0 , 5 , move v0 , ul ; move ul , ul ) 
[4191] ( loop 0 , 6 , move ul , v0 ; move v0 , 0 ) 
[4192] ( move ua + ul , 3 ; move 4 , 2 ) 
[4193] loop 0 , 3 , ( move 3 , 4 ; move v0 , ua - 2 ) 
[4194] ( loop 0 , 9 , v1 = ul ; loop 2 , 3 , move ua , v0 ) 
[4195] ( move 4 + ul , ul / 2 ; loop 0 , 5 , move ul , ul ) 
[4196] ( move 4 , ul + ul ; loop 0 , 4 , move v0 , v0 ) 
[4197] ( loop 0 , 2 , move v0 + 4 , v0 ; move ul , ul ) 
[4198] loop 0 , 6 , move v0 - ua , v0 + 2 
[4199] ( move ua , ua ; move 3 , ua - 4 ) 
[4200] ( move 0 , 2 / 3 ; move ua , ul ) 
[4201] loop 0 , 3 , ( move v0 , v0 ; move ua / 2 , ua ) 
[4202] loop 0 , 6 , move 2 , ua / v0 
[4203] loop 0 , 6 , move 4 + ul , ua - v0 
[4204] ( move 2 , ul ; move ua , 2 / ua ) 
[4205] loop 0 , 5 , move v0 - ul , 4 + 3 
[4206] ( move ua , ul / ua ; move ua , ua - 4 ) 
[4207] ( loop 0 , 6 , move ul , 3 - 2 ; move ul - ua , v0 ) 
[4208] ( move ua , ul ; move 3 , ul ; move ua , ul ) 
[4209] ( v0 = 4 - ua ; loop 1 , 5 , move v1 , 2 / v0 ) 
[4210] ( v0 = 0 - 4 ; loop 1 , 3 , move v0 , v0 ) 
[4211] ( move 3 , 0 ; move 4 , ul ; move 4 , ul ) 
[4212] ( v0 = 2 ; loop 1 , 2 , move 3 , v0 + 4 ) 
[4213] ( move ul , ua ; move ul , ul ; move ua , 3 - 4 ) 
[4214] ( move ua + 2 , 2 / 3 ; move ul , ua ; move ua , 2 ) 
[4215] loop 0 , 6 , move 3 - ua , ul 
[4216] loop 0 , 2 , move ua - v0 , v0 - 2 
[4217] ( loop 0 , 5 , move 2 , v0 ; move ua - ul , ul ) 
[4218] ( move ua + ul , ua / 4 ; move 2 , ul - ua ) 
[4219] loop 0 , 5 , move 2 , 4 - v0 
[4220] ( move ua , 2 ; move 2 - ua , ul + ul ) 
[4221] ( move ua + ul , 2 ; move 4 , ul ) 
[4222] ( move ua , ul / 3 ; move ua - 2 , 2 ) 
[4223] loop 0 , 5 , move 2 , 2 / v0 
[4224] ( move 2 , ul ; move ul + ul , ul ; move ua , ul / ua ) 
[4225] loop 0 , 4 , move v0 , v0 - 4 
[4226] loop 0 , 7 , move 3 - v0 , ua - 4 
[4227] loop 0 , 4 , move 4 / v0 , 2 + v0 
[4228] loop 0 , 3 , move 2 , v0 / 2 
[4229] ( loop 0 , 5 , move v0 , v0 + 4 ; move v0 , ua ) 
[4230] ( move ua , 2 / 3 ; loop 0 , 4 , move 2 , ul ) 
[4231] ( move ul , ul ; move ua , 0 ; move ua + ul , 4 ) 
[4232] loop 0 , 2 , loop 1 , 2 , move 4 , ul + v1 
[4233] loop 0 , 3 , ( move ua + ul , ua ; move v0 , 2 ) 
[4234] ( loop 0 , 5 , move v0 , 2 ; move ul , ua ) 
[4235] ( move ua + ul , 0 ; move 3 , 2 ) 
[4236] ( move 4 , 0 ; move 2 - ua , 0 - ul ) 
[4237] ( move ua + ul , ua + ua ; move ua + ul , ua * ua ) 
[4238] loop 0 , 7 , move v0 - 2 , v0 - 4 
[4239] ( move ua , ul ; loop 2 , 3 , move ua , 2 + ul ) 
[4240] ( loop 0 , 4 , move ul , v0 ; move 4 , 0 ) 
[4241] ( move ul , ul ; loop 0 , 6 , move v0 - ul , ul ) 
[4242] loop 0 , 2 , move 4 , ua - 4 
[4243] ( move 3 , ul / ua ; move ul , ul ; move 3 , 3 - ua ) 
[4244] loop 0 , 5 , move 3 * 2 , 2 
[4245] loop 0 , 2 , ( move v0 , v0 ; move 4 , 3 ) 
[4246] loop 0 , 3 , ( move ul , v0 ; move 4 , v0 ) 
[4247] ( move ua , ul - 3 ; move 2 , ua - 2 ) 
[4248] ( move 2 - ua , ua ; move ul - ua , ua - ul ) 
[4249] ( move ua / 2 , 0 ; move 2 , 3 - 4 ) 
[4250] loop 0 , 7 , move 3 - v0 , 3 + v0 
[4251] ( v0 = ul - ua ; move 4 , v0 * ua ; move 3 , ul ) 
[4252] ( loop 0 , 4 , move v0 + v0 , v0 ; move v0 , 2 ) 
[4253] ( move 3 , 3 ; move 4 + 4 , ul ) 
[4254] loop 0 , 3 , move 3 , 2 / v0 
[4255] ( v0 = 3 ; loop 1 , 3 , move ua + ul , ul - 3 ) 
[4256] ( move ua , 0 ; loop 0 , 6 , move v0 , v0 ) 
[4257] loop 0 , 3 , ( move 2 , v0 ; move v0 , ul ) 
[4258] ( move ua - ul , 3 ; move 3 + 2 , ul ) 
[4259] loop 0 , 5 , move 3 + v0 , 4 
[4260] ( move ul / ua , ul ; loop 0 , 5 , move v0 - ua , ua / 3 ) 
[4261] ( loop 0 , 6 , move v0 , v0 ; move v0 , v0 + v0 ) 
[4262] loop 0 , 2 , ( move 3 , v0 ; move 0 - ua , v0 + v0 ) 
[4263] ( move 3 - ua , ul ; move 2 - ua , 3 / ua ) 
[4264] ( move ua , ul ; loop 0 , 5 , move 4 , 4 ) 
[4265] ( loop 0 , 6 , move 2 / v0 , v0 ; move v0 , v0 ) 
[4266] loop 0 , 3 , ( move ua / 3 , ul ; move 2 , v0 + v0 ) 
[4267] loop 0 , 3 , ( move 4 / v0 , ul ; move 2 , v0 ) 
[4268] loop 0 , 3 , ( move v0 , ul ; move v0 , v0 + v0 ) 
[4269] loop 0 , 5 , move 2 , v0 + 4 
[4270] ( loop 0 , 3 , move 4 , ul ; move v0 , ul ) 
[4271] loop 0 , 4 , move v0 - ua , 2 
[4272] ( move ul - ua , ul ; move 0 - ua , ul + ul ; move ua , ua ) 
[4273] loop 0 , 6 , move 3 , 3 - v0 
[4274] ( move 4 , ul ; move ua - 2 , ul ; move ul - ua , ul ) 
[4275] loop 0 , 5 , move 2 - ua , ua - ul 
[4276] ( loop 0 , 4 , move v0 + v0 , v0 ; move 4 , ul ) 
[4277] loop 0 , 4 , move 4 , 4 - v0 
[4278] ( loop 0 , 2 , move 3 , ul ; move v0 + ua , ul ) 
[4279] ( move ua , ul ; move ul , ul ; move 4 , ul ) 
[4280] ( move 2 , ul - 4 ; move 4 , ua + ul ) 
[4281] ( move ua , 4 ; loop 0 , 4 , move ul , ul ) 
[4282] ( move 2 , 0 ; move 4 + ul , ul - 2 ) 
[4283] ( move 4 , ul / ua ; move ua , ua * ua ) 
[4284] loop 0 , 2 , ( move v0 , v0 ; move ua , 3 + v0 ) 
[4285] ( move ul + ul , 4 - ul ; move ua , ua * ua ) 
[4286] ( loop 0 , 5 , move ul , ul ; move v0 , ul + v0 ) 
[4287] loop 0 , 6 , move ul - ua , ul - 4 
[4288] ( move 0 , 3 ; loop 0 , 6 , move v0 , 2 ) 
[4289] loop 0 , 2 , move ua , 2 / 4 
[4290] loop 0 , 5 , move 0 - 2 , ul / v0 
[4291] ( move ua , 0 ; loop 0 , 5 , move v0 , ul ) 
[4292] loop 0 , 3 , loop 1 , 2 , move v0 - 3 , 4 
[4293] loop 0 , 6 , move v0 - ul , v0 * 3 
[4294] loop 0 , 3 , ( move v0 , 4 ; move ul , v0 ) 
[4295] ( move ul , 4 + 3 ; loop 1 , 3 , move ua , 4 ) 
[4296] loop 0 , 2 , ( move ul , v0 ; move ua , 2 ) 
[4297] loop 0 , 3 , ( move 4 , v0 ; move v0 , ul ) 
[4298] ( loop 0 , 5 , move 2 , v0 ; move v0 , ua + 3 ) 
[4299] loop 0 , 3 , move 3 - ua , ua * ua 
[4300] ( move ua , 4 ; move 4 , 0 - ul ) 
[4301] loop 0 , 6 , move 3 - v0 , 2 + v0 
[4302] ( move ua , 4 ; v0 = ua + ua ; move ua , v0 * ua ) 
[4303] loop 0 , 2 , loop 1 , 2 , move v0 + 2 , v1 
[4304] ( move 3 , 2 / ua ; move ua , 3 / 2 ; move 0 - ua , ul ) 
[4305] ( loop 0 , 4 , move 2 , v0 ; move 2 , ua ) 
[4306] ( loop 0 , 5 , move ul - v0 , v0 ; move ul , v0 ) 
[4307] ( move 4 , ua * 3 ; move 3 , ua / 4 ) 
[4308] ( move ua / 4 , 0 ; move ua + ul , ul ) 
[4309] ( move 4 , ua / 2 ; loop 0 , 6 , move v0 , ul ) 
[4310] ( move 2 , ua / 4 ; move 4 , ul ) 
[4311] loop 0 , 3 , move ul - ua , v0 + v0 
[4312] loop 0 , 3 , move ua - 4 , ul / v0 
[4313] ( move 2 , ul ; loop 0 , 5 , move 2 , 3 + v0 ) 
[4314] loop 0 , 2 , ( move v0 , v0 ; move v0 - ua , v0 ) 
[4315] ( move ul , 2 / 3 ; loop 0 , 4 , move v0 , v0 ) 
[4316] ( move ua , ua - 4 ; move 3 , ul ) 
[4317] loop 0 , 2 , move 0 - ua , 3 
[4318] ( move 2 , ul ; move 4 , 4 ) 
[4319] loop 0 , 3 , move ul + v0 , ua - ul 
[4320] ( move ul , ul ; loop 0 , 6 , move 2 , v0 ) 
[4321] ( move ua , ul / 4 ; move 2 , ul ) 
[4322] ( move ua , ul ; move 4 , 4 + ul ) 
[4323] ( v0 = 4 + ul ; move v0 , ul ; move v0 , v0 ) 
[4324] ( move 4 , 2 ; move ua - ul , 4 ) 
[4325] ( move ul - ua , ul ; loop 0 , 6 , move ul , 4 + v0 ) 
[4326] ( move ua + ul , ua ; loop 0 , 5 , move v0 , ul ) 
[4327] loop 0 , 4 , move v0 + ul , v0 * 3 
[4328] ( move ul , ua / 4 ; move ua + ul , ua * ua ) 
[4329] ( move 0 - ua , 4 - ul ; move ua , ul + ul ) 
[4330] loop 0 , 4 , move 4 , v0 * 4 
[4331] ( move ul , 2 ; loop 0 , 4 , move 4 , v0 ) 
[4332] loop 0 , 5 , move ua / v0 , 3 - v0 
[4333] ( move 4 + 2 , 2 ; move ul - ua , ul ) 
[4334] loop 0 , 5 , move 2 - 4 , v0 + v0 
[4335] ( move 3 , ua ; loop 0 , 3 , move v0 , v0 ) 
[4336] ( move 4 , ua * ua ; move ua , 2 ) 
[4337] ( move ua + ul , ul ; move 0 - ua , ul ) 
[4338] ( move 3 , ua + 2 ; move ua , 4 + 3 ; v0 = ua ) 
[4339] ( move ul , ul ; loop 0 , 5 , move v0 , v0 * v0 ) 
[4340] ( move ua , 3 ; move ul , ul - 2 ) 
[4341] loop 0 , 6 , move 2 + v0 , v0 - ul 
[4342] ( move ua , 4 + ul ; move 2 , ul ) 
[4343] ( move 4 + ul , ul ; move ul , 3 ; move ua / 3 , ul + ul ) 
[4344] ( ( move ul , ua * ua ; move ua , ul ) ; move ua , 3 ) 
[4345] ( move ua , ul / ua ; move ua , ua - 2 ) 
[4346] ( move ua , ul / 3 ; ( v0 = ua + ul ; move v0 , 2 ) ) 
[4347] ( move ua , 4 + ul ; loop 0 , 6 , move 4 , ul ) 
[4348] ( move ua + ul , ua + ul ; move 3 * 3 , 4 ) 
[4349] ( move 2 , ul / 2 ; move 4 , ul ) 
[4350] ( move ul , 2 / 3 ; move ua , 4 ) 
[4351] ( move ua , ul ; move 2 , 2 ; move ua , ul / 4 ) 
[4352] ( move 3 , 4 ; ( move ua , ul - 3 ; v0 = ua ) ) 
[4353] ( move 4 - ua , ua * ua ; move ua , ua + 2 ) 
[4354] move 4 * 2 , 3 
[4355] loop 0 , 4 , move v0 * v0 , 2 - v0 
[4356] ( move 4 , ua ; move ua , 3 / 4 ; v0 = 2 ) 
[4357] loop 0 , 7 , move 3 , ul - v0 
[4358] loop 0 , 7 , move ua - 3 , v0 
[4359] loop 0 , 3 , move ua - ul , ua - v0 
[4360] ( move 2 , 2 ; loop 0 , 4 , move 2 , v0 ) 
[4361] ( move 2 , ul / 4 ; ( move ua , 2 / ua ; move v0 , ua ) ) 
[4362] ( loop 0 , 5 , move v0 , 3 ; move v0 , ua ) 
[4363] ( move ua , ul / 3 ; move 4 , ul ) 
[4364] loop 0 , 3 , ( move v0 , v0 ; move ua - v0 , v0 ) 
[4365] ( move 4 , ul ; move ua + 3 , ua - 3 ) 
[4366] ( move ul - 4 , ul ; move ua , 4 * 2 ) 
[4367] ( move ua , 2 ; move ua - ul , 3 / ua ) 
[4368] loop 0 , 2 , ( move v0 , ua - ul ; move 4 , 0 ) 
[4369] loop 0 , 3 , ( move ul + v0 , 2 ; move ul , 2 ) 
[4370] loop 0 , 5 , move ul , v0 - 3 
[4371] ( move ul , 0 ; move ua , ul ; move 4 , ul ) 
[4372] loop 0 , 3 , move 2 , 3 / v0 
[4373] loop 0 , 3 , move ua - 3 , ul 
[4374] ( move ul - ua , 2 ; move ua + ul , ul ) 
[4375] ( move 4 + ul , 4 ; move ul , 3 ; move ua + ul , ul ) 
[4376] ( move 0 , 3 ; loop 0 , 6 , move v0 , v0 ) 
[4377] ( loop 0 , 4 , move v0 , v0 / 4 ; move v0 , ul ) 
[4378] loop 0 , 4 , move 3 , v0 / 3 
[4379] ( move ua , ul - 4 ; move 2 , 2 / ua ) 
[4380] loop 0 , 3 , move v0 + 2 , 4 + ul 
[4381] loop 0 , 7 , move v0 - 4 , v0 - 3 
[4382] ( move ul , 4 + 3 ; move ua , 2 ) 
[4383] ( loop 0 , 6 , move ul + v0 , v0 ; move v0 , 4 ) 
[4384] loop 0 , 2 , ( move ul - ua , v0 ; move 3 , ul ) 
[4385] loop 0 , 3 , move 3 , v0 / 4 
[4386] ( move ua , 2 ; move ul , 4 ; loop 0 , 4 , move v0 , v0 ) 
[4387] ( loop 0 , 3 , move ua , 3 - v0 ; move ul , ua ) 
[4388] ( move ul - ua , ua ; move 0 - 4 , ua + 4 ) 
[4389] ( ( move 4 , ul / ua ; move ul , ul ) ; move ua , 4 - 3 ) 
[4390] ( move 0 - 4 , 3 ; move 3 * 3 , ul ) 
[4391] loop 0 , 4 , move v0 + ul , 3 - v0 
[4392] ( loop 0 , 6 , move ul , ul / 4 ; move v0 , ul ) 
[4393] loop 0 , 7 , move 3 - v0 , 2 
[4394] loop 0 , 3 , loop 1 , 2 , move 3 , v0 
[4395] ( move 4 , 0 ; move 0 - ua , 4 ; v0 = ua / 2 ) 
[4396] loop 0 , 6 , move v0 - 4 , v0 - 2 
[4397] loop 0 , 7 , move 3 - ua , 4 
[4398] ( loop 0 , 6 , move 3 , v0 ; move ul , ul ) 
[4399] loop 0 , 5 , move v0 - ul , 3 / 2 
[4400] ( move ul , 0 ; move ua + ul , ua / 4 ) 
[4401] loop 0 , 3 , move ua , 4 + 4 
[4402] loop 0 , 2 , ( move 4 , v0 + v0 ; move ul , 2 ) 
[4403] ( move ua + ul , ul + ul ; move 2 , ua - ul ) 
[4404] ( loop 0 , 6 , move ul , v0 ; move 4 , v0 ) 
[4405] ( move ua + 2 , 0 ; move ua , 3 ) 
[4406] loop 0 , 3 , ( move ul , v0 ; move v0 * v0 , ul ) 
[4407] ( move ul , 2 ; move ul - ua , 3 ; move ua + ul , ul ) 
[4408] ( loop 0 , 4 , move ua / v0 , 2 + ul ; move 3 , 2 ) 
[4409] ( loop 0 , 5 , move v0 , v0 ; move v0 + v0 , 4 ) 
[4410] ( move 4 * 2 , ua + 2 ; move ua - 3 , 2 ) 
[4411] loop 0 , 2 , ( move ul , ul ; move ua - v0 , v0 ) 
[4412] loop 0 , 6 , move v0 - ul , v0 + 2 
[4413] ( move 4 , ua - ul ; move ua + ul , 4 - ua ) 
[4414] ( move ua - ul , ul ; move ul , ul - 3 ; move ul - ua , 0 ) 
[4415] ( move ua , ul / ua ; ( move ul , ul ; move ua , ul ) ) 
[4416] ( move 3 , ul ; ( move ua , ul ; move ua , 4 ; move 3 , ua ) ) 
[4417] ( move 4 , ul ; loop 0 , 5 , move v0 , v0 ) 
[4418] ( move 2 , ua - 2 ; move ua , ul ; move 4 - ul , ul ) 
[4419] ( move 2 , 4 ; move 4 , 4 ) 
[4420] ( move ua , ul ; move ul , ua + ul ; move ul - ua , ul ) 
[4421] ( loop 0 , 5 , move v0 , v0 ; move ua , 0 - 3 ) 
[4422] ( move ua , ul ; move ua - 3 , ua - ul ) 
[4423] ( loop 0 , 4 , move v0 , ul ; move ua + 3 , 3 ) 
[4424] ( move 3 , ul / ua ; move 4 * 2 , ul ) 
[4425] ( move ua + ul , 2 ; move ul , ul ; move ua , 2 - ul ) 
[4426] ( move ua - ul , 0 ; loop 0 , 3 , move ul + v0 , ul ) 
[4427] loop 0 , 5 , move v0 / 2 , ua - ul 
[4428] ( move ua , 3 + 2 ; loop 0 , 5 , move v0 , ul ) 
[4429] ( move ua + ul , 0 ; move ul - ua , ul ; move ua , ul ) 
[4430] ( move 4 , 3 / 2 ; move ul , ul ) 
[4431] loop 0 , 2 , loop 1 , 3 , move v1 * v1 , 2 
[4432] ( move ua , ua ; move ul - ua , ul - 2 ) 
[4433] ( loop 0 , 5 , move v0 , v0 ; move v0 , ul / ua ) 
[4434] ( move ua , ul ; loop 0 , 3 , move 2 , ul ) 
[4435] ( move ua , 4 + ul ; move 2 , 2 ) 
[4436] ( move ul - ua , 0 ; move 4 , 4 ) 
[4437] ( move 2 , ul ; move 4 , 4 / ua ) 
[4438] ( move ua , ul ; move ul , ul ; move ua - ul , ul ) 
[4439] ( move ul - ua , ua ; move ua , 4 + ul ) 
[4440] loop 0 , 3 , move 2 , v0 - 4 
[4441] ( move ua , ul ; move 4 , ua / 4 ) 
[4442] loop 0 , 7 , move 3 , v0 * 4 
[4443] ( loop 0 , 5 , move v0 , 4 ; move v0 , v0 ) 
[4444] loop 0 , 3 , ( move v0 , ul ; move v0 - ua , 3 ) 
[4445] ( move ua , ua / 4 ; move ua , 3 ) 
[4446] ( move 2 , 4 ; loop 0 , 4 , move v0 , v0 ) 
[4447] loop 0 , 3 , ( move ul , ul ; move ua , ul ) 
[4448] ( move ua , ul ; move ua , 4 ; move ua , 4 ) 
[4449] ( move 0 , 4 ; ( move 2 , 3 ; move 3 , 4 ) ) 
[4450] ( move 2 + ul , ul ; move 0 - ua , 4 ) 
[4451] ( loop 2 , 4 , move 2 , ul ; move v2 , 3 ) 
[4452] ( move ul , 2 ; loop 0 , 4 , move 3 , ul ) 
[4453] ( move 3 , ua ; move ua , 3 * 3 ) 
[4454] ( loop 0 , 5 , move v0 / 2 , v0 ; move ul , ul ) 
[4455] loop 0 , 3 , ( move v0 - 4 , v0 ; move v0 , v0 ) 
[4456] ( move 3 , 2 ; loop 0 , 4 , move v0 , v0 ) 
[4457] ( move ua - ul , ua ; move 2 * 2 , ua * ua ) 
[4458] ( move ua - 3 , 3 ; move 3 + ul , 4 ) 
[4459] ( move 4 , ua / 4 ; move ua + ul , ul ) 
[4460] ( move ua + ul , ul ; move 4 + ul , 2 ) 
[4461] ( move ua , 2 ; move ua , ua / 4 ) 
[4462] loop 0 , 3 , ( move 2 , v0 ; move 2 + ul , ul ) 
[4463] ( move ua , 3 ; loop 0 , 5 , move v0 , ul ) 
[4464] loop 0 , 5 , move ua - 3 , ul - v0 
[4465] ( move 3 , ul - 3 ; move ua , ul / 2 ) 
[4466] loop 0 , 5 , move ul - ua , v0 + ul 
[4467] ( move ua , ul ; loop 0 , 6 , move v0 , 4 ) 
[4468] ( move ua , ua * ua ; move ua + 3 , 2 ) 
[4469] ( move ua , ul / 4 ; move ua , 4 ) 
[4470] loop 0 , 7 , move 3 - v0 , v0 - 3 
[4471] ( move ul , 4 ; loop 0 , 3 , move v0 + 2 , v0 ) 
[4472] ( move 2 , ua ; move ul , ua + 2 ; move 2 - ua , ua * 4 ) 
[4473] ( move 2 , ul ; move ua - 2 , ul ; move ul , ua + ul ) 
[4474] ( move ul , 2 - ua ; loop 0 , 5 , move v0 , 4 ) 
[4475] ( move 3 , 3 * 2 ; move 3 , ua ; move 4 , 4 ) 
[4476] ( move 2 , ua ; move ua , ul / ua ; move 4 + ul , 3 - ul ) 
[4477] ( move 3 , ul ; move ua , ul / 4 ) 
[4478] loop 0 , 6 , move 0 - 3 , 2 
[4479] ( move 4 , ua ; loop 0 , 4 , move v0 , 3 ) 
[4480] ( loop 0 , 6 , move v0 + ul , v0 ; move ul , v0 ) 
[4481] ( move 4 , 3 + 3 ; move 4 , 2 ) 
[4482] ( move 0 - ua , 2 ; move ua , 4 ) 
[4483] ( loop 0 , 5 , move v0 , v0 ; move ul , 2 ) 
[4484] ( move ua , 3 ; loop 0 , 6 , move v0 , ul ) 
[4485] loop 0 , 3 , ( move ua , ul ; move v0 , 3 ) 
[4486] loop 0 , 2 , ( move ul , v0 ; move v0 + ua , ul ) 
[4487] ( move 3 , ul ; move ua + ul , 3 * 2 ) 
[4488] ( move ua , 3 ; v0 = 3 ; move ua + 4 , v0 * v0 ) 
[4489] ( move 2 , ul ; move ua + ul , ua - ul ) 
[4490] ( move 2 , 3 ; move ua , ua * 3 ; move 2 , 4 ) 
[4491] ( loop 0 , 3 , move v0 + v0 , ul ; move ua / 2 , v0 ) 
[4492] ( move ua + ul , ul / 3 ; ( v0 = 3 ; move 3 , ul ) ) 
[4493] ( loop 0 , 5 , move 2 , ul ; loop 1 , ul , move 3 , v1 ) 
[4494] ( move ua , ua ; move ua , 2 ; move ua , ul + ul ) 
[4495] ( move 4 , ua ; loop 0 , 5 , move v0 , v0 ) 
[4496] ( loop 0 , 4 , move 3 , v0 ; move v0 , v0 ) 
[4497] loop 0 , 3 , move 4 + 3 , 4 
[4498] ( loop 0 , 4 , move ul , ul ; move 3 , ul ) 
[4499] ( move ua , ua * 4 ; move ul , ul + ul ; move ua , 3 ) 
[4500] ( loop 0 , 4 , move v0 , ul ; loop 1 , 3 , move ua , v0 ) 
[4501] ( move ua + 4 , ul ; move ul - ua , ua - ul ) 
[4502] loop 0 , 3 , ( move 3 * v0 , v0 ; move ul , ul ) 
[4503] ( move 3 , ua * ua ; move ua , ul ) 
[4504] loop 0 , 2 , move 2 , 4 * 3 
[4505] ( move 4 - ua , 4 ; move ua , ua * ua ) 
[4506] ( move ul - 3 , ul ; move ua , ua * ua ) 
[4507] ( loop 0 , 6 , move ul , 4 ; move 3 , 0 ) 
[4508] ( move ua , ua ; move 3 + 2 , 0 - ul ) 
[4509] ( move 3 + 2 , 2 / ua ; move ul , ul ; move ua - 2 , 4 ) 
[4510] loop 0 , 2 , loop 1 , 2 , move ul + v1 , v0 
[4511] ( move ua + ul , ul / 2 ; move ua / 4 , ul ) 
[4512] ( move 4 * 2 , 0 ; move ua , 2 ) 
[4513] ( move ul - 3 , ul ; move ul - ua , 2 ) 
[4514] ( move ul - ua , 0 ; loop 0 , 4 , move v0 , v0 + 2 ) 
[4515] ( move ul , ul ; loop 0 , 6 , move v0 , v0 / 2 ) 
[4516] ( move ua , 4 ; v0 = 3 * 3 ; move ua , v0 ) 
[4517] ( loop 0 , 6 , move v0 , ul - v0 ; move ul , v0 ) 
[4518] ( move 3 - ua , 0 - ua ; move ua + ul , ua * ua ) 
[4519] ( ( move 3 , 0 ; move 3 - ua , ul ) ; move ua , ul ) 
[4520] ( move 4 - ua , 2 ; move ua , ul ) 
[4521] loop 0 , 3 , move 4 - v0 , v0 - ul 
[4522] ( ( move ul , 2 ; v0 = ua ) ; loop 1 , 5 , move 3 , 4 ) 
[4523] ( move 3 - ua , 2 ; ( move ul , ul ; move ua , 0 ) ) 
[4524] ( move ul - ua , 3 + ul ; move ul , ua ; move ua + ul , ul ) 
[4525] ( move 4 , 4 + ul ; move 3 , ul ) 
[4526] loop 0 , 4 , move ul - v0 , v0 - ul 
[4527] ( move 2 - ua , ul ; move ua , ua - ul ) 
[4528] loop 0 , 7 , move 2 - v0 , ua - v0 
[4529] ( move ua + 4 , 4 + 3 ; move ul - 2 , ua - ul ) 
[4530] ( move ul - ua , ua * 3 ; move ul , ua * ua ; move 4 , ua ) 
[4531] ( move 0 - ua , ul ; move 3 , ul ) 
[4532] ( move 3 , 4 * 2 ; move ua + ul , 4 / ua ) 
[4533] ( move ul , ul ; loop 0 , 3 , move 4 , v0 ) 
[4534] loop 0 , 3 , ( move v0 - ua , ul ; move ua , 0 ) 
[4535] ( move 2 , ul / 2 ; loop 1 , 4 , move 4 , v1 ) 
[4536] ( move ul , ul ; loop 0 , 6 , move ul , v0 * v0 ) 
[4537] ( v0 = ua + ul ; ( move v0 , 3 ; move v0 , 2 ) ) 
[4538] ( move ua , ua ; loop 0 , 5 , move v0 , v0 * v0 ) 
[4539] loop 0 , 2 , move 4 + ul , ua - v0 
[4540] ( move ul , 3 ; move 4 , ul ) 
[4541] ( move ua , ua ; move 3 / 2 , ua - ul ) 
[4542] loop 0 , 4 , move ua / v0 , 2 * v0 
[4543] ( move 4 + ul , ul / 4 ; loop 0 , 6 , move v0 , ul ) 
[4544] ( move ua , 4 / ua ; move 0 - ua , ul ) 
[4545] ( loop 0 , 5 , move ul , 4 + ul ; move v0 , ua ) 
[4546] loop 0 , 3 , loop 1 , 2 , move 3 - v1 , 3 
[4547] loop 0 , 3 , move v0 - 4 , ua - ul 
[4548] ( move 2 , ul ; move ua , 2 / 3 ) 
[4549] ( move ul , 3 ; ( move 4 , ul ; move 2 , ul ) ) 
[4550] ( loop 0 , 3 , move ua , 3 ; move v0 , ul / ua ) 
[4551] ( move ul , ul - ua ; loop 0 , 5 , move v0 + 4 , v0 ) 
[4552] ( move ua , ul + ul ; loop 0 , 4 , move v0 , ul - 2 ) 
[4553] ( move 3 , ua * ua ; move 2 , ul ) 
[4554] loop 0 , 3 , ( move ua , v0 ; move ul , ul - v0 ) 
[4555] ( move 0 , ul / 2 ; move ua , 0 ; move ua + 2 , 3 - ul ) 
[4556] loop 0 , 5 , move 3 - v0 , v0 * 4 
[4557] ( move ua , 4 ; move ul - ua , ua * ua ) 
[4558] ( move 2 , 4 ; move ul - ua , 2 ) 
[4559] ( loop 0 , 4 , move v0 + v0 , 4 ; move 3 , ul ) 
[4560] ( loop 0 , 5 , move 2 , ul ; move v0 , 0 ) 
[4561] ( move ua - ul , ul ; ( move ul , ul ; move ua , ul - ua ) ) 
[4562] ( move ul , 4 ; move ua + 2 , 4 + 4 ) 
[4563] loop 0 , 3 , ( move v0 + v0 , 2 ; move v0 , v0 ) 
[4564] ( move 0 , 2 / ua ; move 4 * 3 , ul / 2 ) 
[4565] ( loop 0 , 6 , move ul , 3 + v0 ; move v0 , ul ) 
[4566] ( move 3 + ul , ua ; loop 0 , 5 , move 2 * v0 , v0 ) 
[4567] ( move ul , 0 ; loop 0 , 6 , move 3 , v0 * v0 ) 
[4568] ( move 3 , 0 ; move 3 , ul + ul ; move ua , 2 ) 
[4569] ( move ua - ul , 4 ; move 3 , 2 ) 
[4570] ( move 3 , ua ; move ua , 4 + ul ; move ul + ul , ua * ua ) 
[4571] ( move ua , ul - 3 ; move 4 , ua / 4 ) 
[4572] ( move ul , ul / 4 ; loop 0 , 5 , move v0 , v0 ) 
[4573] ( move ul - 4 , 2 ; move 4 + 2 , 3 ) 
[4574] ( move 3 , ul ; move ua , ul / ua ; move ul , 4 + ul ) 
[4575] ( move 3 , 3 ; move ua , ua / 3 ) 
[4576] ( move 3 , ua + 4 ; loop 0 , 3 , move 4 * v0 , 3 ) 
[4577] loop 0 , 2 , move 4 , v0 - 3 
[4578] ( move ua + 3 , ul - 2 ; move 3 , 3 - 2 ) 
[4579] ( move ua , ua / 2 ; move 3 , 2 ) 
[4580] ( move ul - ua , ul ; move 3 , ua - 2 ) 
[4581] ( move 4 , ua ; move 2 , ua - ul ) 
[4582] ( move ua + 4 , ua - ul ; move ua , ul + ul ) 
[4583] ( move ua , ul - 2 ; move ua , 4 + 4 ) 
[4584] ( move 3 , ua ; move 4 + ul , ua * ua ) 
[4585] loop 0 , 7 , move ua , 0 - 2 
[4586] ( move ua , 0 ; loop 0 , 2 , move ul , ul ) 
[4587] loop 0 , 3 , ( move 3 , v0 ; move v0 , ul - v0 ) 
[4588] loop 0 , 5 , move 2 , 3 / v0 
[4589] ( loop 0 , 2 , move 2 , ul ; move 0 , 3 + ul ; move ua , 4 ) 
[4590] loop 0 , 4 , move ul + v0 , ua / 4 
[4591] ( move 4 + ul , 4 ; move ua , 2 ) 
[4592] loop 0 , 3 , move v0 + ul , 4 / ua 
[4593] loop 0 , 2 , move 2 + v0 , v0 - 3 
[4594] ( move 3 , 4 + ul ; move 4 + ul , ul ) 
[4595] loop 0 , 6 , move ua - 4 , v0 * v0 
[4596] ( v0 = ua ; loop 1 , 5 , move ul - v0 , v0 * v0 ) 
[4597] loop 0 , 6 , move v0 - ul , v0 * v0 
[4598] ( move 4 , 0 ; loop 0 , 4 , move v0 , v0 ) 
[4599] ( move ul , ul ; move ua , 3 / 2 ; move 4 , 4 ) 
[4600] ( move 3 + 2 , ua / 2 ; move ua , ul ) 
[4601] ( loop 0 , 6 , move v0 , 2 ; move v0 , 0 ) 
[4602] loop 0 , 2 , ( move v0 , ul ; move ua + ul , ul ) 
[4603] ( move ua , 0 ; move ua + ul , ua * ua ) 
[4604] loop 0 , 4 , move ul , v0 / ua 
[4605] ( move 4 - ua , 4 ; move 2 - ua , 2 ; move ua , ua + ul ) 
[4606] ( loop 0 , 5 , move v0 , 2 ; move v0 , 0 ) 
[4607] loop 0 , 4 , move ua + 2 , 2 
[4608] loop 0 , 4 , move 0 - ul , v0 + v0 
[4609] ( loop 0 , 3 , move ua , v0 + ul ; move ul , ul ) 
[4610] loop 0 , 2 , ( move ua , ul ; move 2 , 2 - ul ) 
[4611] ( move ul , 4 ; loop 0 , 5 , move v0 , ul ) 
[4612] ( move 4 , ua ; loop 0 , 4 , move 2 , v0 ) 
[4613] ( move 3 , ua ; move ul , ul ; move 4 , ul ) 
[4614] ( move 2 , ul / 4 ; move ul + ul , ua ; move ua - ul , ul ) 
[4615] loop 0 , 2 , move 3 , 3 / 2 
[4616] ( move 3 - ua , ua ; move 3 + ul , 2 ) 
[4617] ( v0 = ua - ul ; move v0 , v0 ; move ul - ua , v0 ) 
[4618] ( loop 0 , 3 , move 4 * v0 , v0 ; move ul , ul ) 
[4619] ( ( move ua , 4 ; move ul , ul - ua ) ; move 3 , ul ) 
[4620] loop 0 , 6 , move 2 - v0 , v0 - 4 
[4621] ( loop 0 , 5 , move v0 , 3 / v0 ; move ua , v0 ) 
[4622] ( move ua , ua ; loop 0 , 4 , move v0 , 2 ) 
[4623] ( move 2 , ul ; move ua , ul ; move 4 , ul ) 
[4624] loop 0 , 4 , move ua / v0 , 4 - v0 
[4625] ( loop 0 , 4 , move ul , v0 / 2 ; move ua , v0 ) 
[4626] ( move 2 , ul / 2 ; move 3 , 3 + ul ) 
[4627] ( move 0 , 4 ; loop 0 , 4 , move v0 , ul ) 
[4628] ( move 2 , ul / ua ; loop 0 , 4 , move v0 + v0 , v0 ) 
[4629] ( move 3 + ul , ul - ua ; loop 0 , 4 , move v0 , ua * ua ) 
[4630] ( loop 0 , 6 , move ul , v0 * v0 ; move v0 , v0 ) 
[4631] loop 0 , 3 , loop 1 , 2 , move ul , ul / v0 
[4632] ( move ua , 4 ; move 3 / 2 , ua + ul ) 
[4633] ( move ua - ul , ul - 3 ; move ua , ua * ua ; move 2 , ul ) 
[4634] loop 0 , 3 , move 0 - 4 , ul 
[4635] ( move ua , ul - 4 ; ( move ul , ul - 4 ; move 4 , ul ) ) 
[4636] ( move 3 , 0 ; move ul - ua , 4 ) 
[4637] ( move ua + 4 , 4 ; move 4 , 2 ) 
[4638] ( move 4 , 2 ; move 4 * 2 , 2 ) 
[4639] ( move ua - ul , ua + ul ; move ul + ul , ul ; move ua , 3 ) 
[4640] loop 0 , 7 , move ul - v0 , ua * ua 
[4641] ( move ua + ul , ul / ua ; move ua , 2 ) 
[4642] ( move ul , 3 + 3 ; move ua - ul , ul ; move ua , 4 ) 
[4643] ( move ua - ul , 0 - 2 ; move 4 , ua + ul ; v0 = 2 ) 
[4644] ( loop 0 , 4 , move v0 , v0 ; move ua , v0 - ul ) 
[4645] ( move ul , ul ; loop 0 , 2 , move ua - 2 , 2 - ul ) 
[4646] ( move 3 , 2 ; move 4 , 4 ; move ua , ul + ul ) 
[4647] ( loop 0 , 6 , move ul , 3 + 2 ; move v0 , v0 ) 
[4648] ( move 4 , ul / 2 ; move ul - ua , 2 ) 
[4649] ( loop 0 , 3 , move v0 , ua ; move ul , v0 ; move ua , 3 ) 
[4650] ( move ul , 0 ; move ua , 2 - 3 ) 
[4651] loop 0 , 2 , ( move 2 , ul ; move ul , ul ) 
[4652] loop 0 , 3 , move 3 , ua / 4 
[4653] ( move ua , ua ; move 0 - ua , 2 ) 
[4654] ( move 4 - ua , ua + ul ; move ua + 2 , ul ) 
[4655] ( move 3 , ul ; move ua , 4 / 3 ) 
[4656] loop 0 , 3 , ( move v0 , ul / v0 ; move v0 , v0 ) 
[4657] ( move 4 , ul + ul ; move ua , ua - ul ) 
[4658] loop 0 , 4 , move ua , 3 * 3 
[4659] loop 0 , 2 , ( move v0 , ua / 3 ; move 4 , ul ) 
[4660] ( move ul , 2 + ul ; move ua , ul ; move ul , ul ) 
[4661] loop 0 , 5 , move v0 , 2 / 3 
[4662] loop 0 , 3 , move 3 + 2 , 4 
[4663] loop 0 , 5 , move ul + v0 , 4 + v0 
[4664] ( move ua - ul , ul / ua ; move ua , 2 ) 
[4665] loop 0 , 7 , move 4 / v0 , v0 
[4666] loop 0 , 4 , move v0 + ul , 3 + v0 
[4667] ( move 4 , ua ; move ua , ua * ua ; move 4 / 2 , ul ) 
[4668] ( move ul , 4 ; move ua + ul , 2 ; move ua , 2 ) 
[4669] ( move ua + 3 , 3 + ul ; move 3 , 4 ) 
[4670] ( move ua , 4 + ul ; loop 0 , 4 , move v0 , v0 ) 
[4671] ( loop 0 , 5 , move v0 , v0 ; move v0 , ul / v0 ) 
[4672] ( move 4 + ul , ua ; move ua , ul - 3 ) 
[4673] ( move 2 , ul ; loop 0 , 6 , move 4 , ua + 2 ) 
[4674] loop 0 , 7 , move v0 - 2 , 2 
[4675] ( loop 0 , 3 , move v0 , ul ; move ua + ul , v0 + v0 ) 
[4676] ( loop 0 , 4 , move ul , v0 ; move ua , ul ) 
[4677] ( move ua + 2 , ul ; move ul , 2 ; move ua , ul ) 
[4678] ( move 2 , ua ; move ua , 4 * 2 ) 
[4679] ( loop 0 , 6 , move v0 , 2 ; move v0 , 4 ) 
[4680] ( move ua - ul , 4 ; loop 0 , 4 , move v0 , v0 ) 
[4681] ( move ua + 2 , ul ; move ua , 4 ) 
[4682] ( move ul - ua , ul - ua ; move ua - ul , 2 ) 
[4683] ( move 2 , 0 ; move ul - ua , 4 + ul ) 
[4684] ( loop 0 , 5 , move 3 , 2 ; move 2 - ul , ua * v0 ) 
[4685] loop 0 , 2 , move v0 - 4 , v0 / 2 
[4686] ( move ua , 0 - 3 ; move ua , 4 ) 
[4687] ( move 3 , ua ; move ul , 4 ; move ua , 3 ) 
[4688] ( ( move ul , 3 ; move 2 , ul - ua ) ; move 4 , ul ) 
[4689] loop 0 , 3 , loop 1 , 2 , move v1 + v0 , v0 
[4690] loop 0 , 6 , move 4 / v0 , v0 * 4 
[4691] loop 0 , 3 , ( move 4 , v0 ; move ul + v0 , v0 ) 
[4692] loop 0 , 3 , ( move v0 , v0 * v0 ; move 3 , ul ) 
[4693] loop 0 , 3 , move ul - ua , ua - v0 
[4694] ( move 3 , ul / ua ; move ua - ul , ul ) 
[4695] ( move ua , ua - ul ; move 3 , 3 * 2 ) 
[4696] loop 0 , 6 , move ul - ua , 4 + ul 
[4697] loop 0 , 3 , move 2 * v0 , 4 
[4698] loop 0 , 3 , ( move v0 + ul , v0 ; move v0 , v0 ) 
[4699] ( loop 0 , 6 , move ul / v0 , v0 ; move ua , v0 ) 
[4700] ( move ul - ua , 4 ; loop 0 , 4 , move v0 , v0 * v0 ) 
[4701] ( move 4 , 4 ; move ua , 0 - 3 ) 
[4702] ( loop 0 , 5 , move 4 / v0 , v0 + v0 ; move ul , ul ) 
[4703] ( loop 0 , 5 , move v0 , v0 ; move 2 , ul + v0 ) 
[4704] loop 0 , 4 , ( v1 = 2 / 3 ; move v0 + v1 , ul ) 
[4705] ( move ul , 4 ; loop 0 , 6 , move ul , v0 + v0 ) 
[4706] loop 0 , 4 , move v0 * 2 , ua - ul 
[4707] ( move 2 , 0 ; move ul - ua , 3 * 3 ) 
[4708] loop 0 , 3 , move v0 - 4 , v0 / 3 
[4709] loop 0 , 2 , move 0 - 3 , 3 
[4710] ( move 2 , ua ; move ua , ul ; move 3 , ua + ul ) 
[4711] ( loop 0 , 5 , move v0 , 2 ; move v0 - ul , v0 ) 
[4712] ( move 4 + ul , ua * ua ; move ua , 4 ) 
[4713] ( move 2 + ul , 3 ; ( move 4 , 4 ; move 2 , ua + ul ) ) 
[4714] ( move 2 - ua , ul ; move 3 , 4 + ul ) 
[4715] ( move ua , ul / 3 ; move 3 - ua , ul ) 
[4716] ( move ul - 4 , 0 ; move 4 , ul ) 
[4717] ( move ul , ua * ua ; loop 0 , 5 , move v0 , v0 ) 
[4718] ( loop 0 , 5 , move v0 , ul ; move 4 , ul ) 
[4719] ( move ua , ul - 4 ; move ul - ua , ul ) 
[4720] ( loop 2 , 6 , move ua - 3 , v2 ; move ul , ul ) 
[4721] ( move ua + ul , ua ; loop 0 , 5 , move 4 , 3 ) 
[4722] loop 0 , 2 , ( move ul , 3 ; move 4 , v0 ) 
[4723] loop 0 , 3 , move 3 , 3 * v0 
[4724] ( move ul + ul , 3 ; move ua + 3 , 2 ) 
[4725] ( move ua , ua * ua ; loop 0 , 4 , move v0 , v0 - 4 ) 
[4726] ( move ua , ua + ul ; move ul , ua * ua ; move 4 + 2 , ua ) 
[4727] loop 0 , 2 , ( move ul , ul ; move ua , ul ) 
[4728] loop 0 , 3 , move 2 , ul / 2 
[4729] ( move ul , ul ; move 4 + ul , 4 ) 
[4730] ( loop 0 , 4 , move ul / v0 , ul ; move ua , v0 ) 
[4731] ( loop 0 , 6 , move 2 + ul , ul ; move 3 , v0 ) 
[4732] ( move ua , ul ; move ul , ul ; move 3 , 2 / ua ) 
[4733] ( move ua - 2 , ua * ua ; v0 = ul ; move v0 - ua , 4 ) 
[4734] ( move 2 , 2 ; loop 0 , 6 , move v0 , v0 + 4 ) 
[4735] ( move ul , ua * ua ; move 3 , ua ; move 4 , ul ) 
[4736] ( move 4 , ul - ua ; move 4 * 2 , 2 - 4 ) 
[4737] ( move ua , ul ; move ua + 2 , 4 ) 
[4738] loop 0 , 4 , move v0 , 2 / 3 
[4739] ( move ul - ua , ua ; move ua + ul , ul + ul ; move ua , 4 ) 
[4740] ( loop 0 , 4 , move v0 , 2 ; move v0 , 4 ) 
[4741] loop 0 , 5 , move 2 + v0 , ua * ua 
[4742] loop 0 , 5 , move 4 / v0 , ua * ua 
[4743] ( loop 0 , 5 , move v0 , v0 * v0 ; move v0 , ul ) 
[4744] ( loop 0 , 5 , move v0 + ul , 4 ; move ua + ul , 3 ) 
[4745] ( move 2 , ua ; loop 0 , 4 , move ul + v0 , v0 * v0 ) 
[4746] ( move ua - ul , 0 ; loop 0 , 5 , move v0 , v0 ) 
[4747] ( move 2 , ul / 2 ; move ua , 2 ) 
[4748] ( loop 0 , 4 , move ul , v0 - ul ; move v0 , v0 ) 
[4749] ( move ua , 0 ; move 3 , ul ; move ul , ul ) 
[4750] ( loop 0 , 3 , move 4 - v0 , v0 ; move v0 , ua ) 
[4751] ( move ua , ul + ul ; loop 0 , 5 , move 3 , ua + 2 ) 
[4752] ( move 3 , ul ; loop 0 , 3 , move v0 , 2 ) 
[4753] ( move ua + ul , ua - 3 ; move 2 , ua + ul ) 
[4754] loop 0 , 3 , move ul + v0 , v0 / 2 
[4755] loop 0 , 4 , move v0 + 3 , ua - v0 
[4756] ( loop 0 , 6 , move ul - v0 , ul ; move ua , ua ) 
[4757] ( move ua , ua - ul ; move ul - ua , ul - 3 ) 
[4758] ( move ul , 2 + ul ; ( move ua , ul ; move 4 - ul , ul ) ) 
[4759] ( move ul - 4 , 2 ; move 3 , ul ) 
[4760] ( move ua , ul ; move ua , ul + ul ; move 4 , ul ) 
[4761] loop 0 , 3 , move ul - ua , ul + v0 
[4762] ( loop 0 , 5 , move 4 , ua - v0 ; move v0 , v0 ) 
[4763] ( ( move 4 , ul ; move ul , 4 ) ; move ua , ul ) 
[4764] loop 0 , 6 , move 3 + 2 , 4 
[4765] ( ( move 3 , 3 ; move 4 - ua , ul ) ; move ua , 2 / ua ) 
[4766] ( move 3 , ua + ul ; loop 0 , 3 , move 4 , ul ) 
[4767] ( move ua + 3 , ul ; move ul , 4 ) 
[4768] loop 0 , 2 , ( move 3 , v0 ; move v0 + v0 , v0 ) 
[4769] ( move ua + 2 , ua - ul ; move 3 , ul ) 
[4770] ( move ul , ul ; move ua , ul ; move 2 , ul ) 
[4771] loop 0 , 2 , move v0 + 4 , ul / 2 
[4772] ( move 3 , 2 ; move 3 , ul ) 
[4773] loop 0 , 2 , ( move ul - ua , v0 ; move v0 , v0 ) 
[4774] loop 0 , 5 , move ul , 4 + 3 
[4775] loop 0 , 2 , move 3 , 0 - 2 
[4776] loop 0 , 2 , move 3 , v0 - 3 
[4777] ( loop 0 , 4 , move ul , ul ; move ua - ul , v0 ) 
[4778] ( move ua , ul ; move ul , ul - 2 ; move 3 - ua , 2 ) 
[4779] ( loop 0 , 6 , move v0 , v0 ; move ua + ul , 4 ) 
[4780] ( loop 0 , 5 , move v0 , 3 - ua ; move v0 , 2 ) 
[4781] ( move 4 * 2 , ul ; move ua + ul , 3 - ua ) 
[4782] ( move 3 , 4 ; move ua + ul , 4 ) 
[4783] loop 0 , 5 , move ua / v0 , v0 - 3 
[4784] ( move ua + 2 , ua + ul ; move 0 , 4 ; move 3 , ul ) 
[4785] loop 0 , 3 , move 2 , v0 + 3 
[4786] ( move 2 , ua / 3 ; move ua , ul ) 
[4787] ( move 4 , ul / 2 ; move 3 , 0 - ul ) 
[4788] ( move ua , ua - ul ; move ul - ua , 3 + 2 ) 
[4789] loop 0 , 7 , move 2 , 4 
[4790] ( v0 = ua - 2 ; loop 1 , 3 , move v0 , v0 ) 
[4791] loop 0 , 4 , move 4 - ua , v0 - ul 
[4792] ( move 4 , ua / 2 ; move 3 , 3 + ul ) 
[4793] ( move ua , 3 ; loop 0 , 5 , move 4 - v0 , ul ) 
[4794] ( loop 0 , 6 , move ua - v0 , 2 ; move v0 , ul ) 
[4795] ( move ul , ua - ul ; loop 0 , 6 , move ul , ul + v0 ) 
[4796] ( move ua , ua ; move ua + 4 , ua / 3 ) 
[4797] loop 0 , 4 , move ua + ul , 3 
[4798] ( move ua , 2 ; loop 0 , 5 , move v0 , v0 ) 
[4799] ( loop 0 , 3 , move 2 , 3 * v0 ; move v0 , ua + v0 ) 
[4800] ( loop 0 , 5 , move v0 , v0 - ul ; move v0 , ul ) 
[4801] ( move ul - ua , 0 ; loop 0 , 5 , move v0 , v0 ) 
[4802] ( loop 0 , 5 , move v0 , 3 ; move v0 , v0 ) 
[4803] ( v0 = ua - ul ; move 2 , v0 * 4 ; move v0 , v0 ) 
[4804] loop 0 , 2 , move 0 - 4 , v0 - 2 
[4805] ( loop 0 , 3 , move v0 , ul ; move 4 , v0 ) 
[4806] ( move ua + ul , ua - ul ; loop 1 , 4 , move ul + ul , ul ) 
[4807] ( loop 0 , 5 , move 2 , ul ; move v0 , v0 ) 
[4808] loop 0 , 2 , move ua - v0 , 4 / ua 
[4809] loop 0 , 2 , move ua + 2 , v0 + v0 
[4810] loop 0 , 5 , move 3 , 2 / v0 
[4811] ( move ul , ul ; move 3 , ul ; move ua , ul ) 
[4812] ( move ul - 3 , 3 ; loop 0 , 6 , move v0 , v0 ) 
[4813] loop 0 , 2 , ( move 4 , ul ; move v0 , ul ) 
[4814] ( move ul , 3 ; loop 0 , 6 , move v0 , ul ) 
[4815] ( move 3 , ua / 2 ; loop 0 , 4 , move v0 * 3 , v0 ) 
[4816] ( loop 0 , 6 , move 3 , v0 + v0 ; move 2 , v0 ) 
[4817] ( move ua , ua ; loop 0 , 4 , move v0 , 4 + ul ) 
[4818] ( ( move ua , 2 ; move ua , 4 ) ; move 3 , ul ) 
[4819] ( move 3 - ua , 0 ; move 3 , 3 ) 
[4820] loop 0 , 6 , move ua , 3 / 2 
[4821] ( ( move ul , ul ; move ua , ul ) ; move 4 , ul ) 
[4822] ( move ul , ua ; move ua , ul ; move 3 , ul / 3 ) 
[4823] ( move 3 , ul ; v0 = 4 * 3 ; move 4 , v0 ) 
[4824] ( move 4 + ul , ul - 3 ; move ul , 3 ; move ua , ua - ul ) 
[4825] loop 0 , 2 , ( move v0 , v0 ; move 4 , v0 ) 
[4826] loop 0 , 3 , ( move v0 , v0 ; move 4 , ul - v0 ) 
[4827] ( loop 0 , 6 , move 3 , v0 ; move v0 , ua ) 
[4828] loop 0 , 6 , move v0 , 3 / 4 
[4829] ( move ua + 2 , ua ; move 4 + ul , ua * ua ; v0 = 3 ) 
[4830] loop 0 , 7 , move 3 - v0 , ul - 3 
[4831] ( move ul , ua + 3 ; move ua + 3 , ul ; move ua , 3 - ua ) 
[4832] loop 0 , 7 , move 3 / v0 , 2 - v0 
[4833] ( move ul , 2 ; move ua , 4 + 2 ) 
[4834] ( move ua , ua / 2 ; move ua , 3 ) 
[4835] ( move ua , ua ; move 3 , 3 * 3 ) 
[4836] loop 0 , 5 , move 2 , 4 / v0 
[4837] ( move ua , ul - 2 ; loop 0 , 5 , move v0 , v0 ) 
[4838] ( move 0 , ua * ua ; move ua , ul ) 
[4839] loop 0 , 6 , move v0 - 2 , v0 * 2 
[4840] ( move ul - 3 , ua * ua ; loop 0 , 3 , move ua , v0 ) 
[4841] ( move ua + ul , 2 ; move ul , 2 ; move 2 , 4 ) 
[4842] ( loop 0 , 4 , move ul + ul , 4 ; move v0 , v0 ) 
[4843] ( move 4 , ua ; move ua , 4 * 2 ) 
[4844] loop 0 , 2 , move 4 , v0 / ua 
[4845] ( move 4 + ul , 0 ; move 4 , 3 ; move ul , ua - ul ) 
[4846] ( move ua + 3 , 4 ; move ua , 4 ) 
[4847] loop 0 , 4 , move 4 - ua , 2 - v0 
[4848] ( move 3 , ul ; loop 0 , 4 , move v0 , v0 ) 
[4849] loop 0 , 6 , move ul , 2 + v0 
[4850] ( move 4 , ul / 4 ; move ul , ul ) 
[4851] ( move ua + ul , ul - 2 ; move ul , ul ; move 3 , ul ) 
[4852] ( move 0 , 2 ; loop 0 , 5 , move v0 , ul ) 
[4853] loop 0 , 3 , move v0 - ua , ua - 2 
[4854] ( move 2 , 3 / 2 ; move 2 , ua - ul ) 
[4855] ( move 4 * 2 , ul ; move 4 + ul , 4 ) 
[4856] ( move 4 , ua - ul ; loop 0 , 3 , move v0 , 2 ) 
[4857] ( move 3 , 0 ; move ua + 2 , ul ; move 2 , ul - ua ) 
[4858] ( move ua - ul , 0 ; move ua , ua + ul ; move ul + ul , ul ) 
[4859] ( move ua , 3 ; v0 = ul ; move ua , 4 / 3 ) 
[4860] ( loop 0 , 2 , move ul , ul ; move ua , ul ; move v0 , v0 ) 
[4861] loop 0 , 3 , move ua - v0 , 2 + v0 
[4862] ( move 3 , 2 ; move ul , 2 ; move ua - ul , ul ) 
[4863] ( move 3 , 0 ; loop 0 , 3 , loop 1 , 2 , move v0 , v1 ) 
[4864] ( move ua , 4 ; move ul , ua - ul ; move ua / 3 , ul ) 
[4865] ( move 0 , 2 ; loop 0 , 3 , move ua , v0 ) 
[4866] ( move 2 , 0 - ul ; move 2 , ul ) 
[4867] loop 0 , 7 , move v0 - 3 , 2 * v0 
[4868] loop 0 , 3 , move 4 - ua , 2 + v0 
[4869] loop 0 , 2 , ( move ul , 2 ; move ua , v0 ) 
[4870] ( move 4 * 2 , 2 ; move ul , 2 ) 
[4871] loop 0 , 3 , ( move v0 , ul ; move ul + v0 , v0 ) 
[4872] ( loop 0 , 6 , move v0 , v0 ; move ua , 2 ) 
[4873] ( move 2 , 2 ; move 2 - ua , 3 ) 
[4874] loop 0 , 2 , loop 1 , 3 , move 3 + v0 , ul 
[4875] ( move 0 - ua , ua ; move 3 , ua * ua ; move 4 , 2 + ul ) 
[4876] ( v0 = ua / 2 ; move v0 , ul ; move ua + ul , 4 / 3 ) 
[4877] ( move ua , ul / ua ; move 3 / ua , 2 ) 
[4878] ( move ua + ul , 0 ; move ua - 4 , 2 ) 
[4879] ( loop 0 , 4 , move v0 , v0 + v0 ; move 4 , v0 ) 
[4880] ( move 4 , 4 ; move ua , 3 + 3 ) 
[4881] ( move 4 , 4 ; move ul - ua , 3 ) 
[4882] ( move ua , ul ; move 4 , 3 + 3 ) 
[4883] loop 0 , 2 , move 2 - ua , v0 + 2 
[4884] ( ( move 3 , ul ; move ua , ul ) ; move ul , ul ) 
[4885] ( move 2 , ua + ul ; move ua , ul ; move ua - ul , ul ) 
[4886] ( move ua + 2 , ua ; loop 0 , 4 , move 3 , 4 - ua ) 
[4887] loop 0 , 5 , move 2 - v0 , 2 - v0 
[4888] ( move 0 , 3 ; loop 0 , 5 , move ua , 3 ) 
[4889] ( move ua + ul , 3 ; v0 = 4 ; move v0 , 4 ) 
[4890] loop 0 , 7 , ( loop 1 , 9 , v2 = 2 ; move v0 , v1 ) 
[4891] loop 0 , 3 , ( move ul , v0 - ul ; move 4 - ul , v0 ) 
[4892] loop 0 , 5 , move 4 + 2 , 4 
[4893] loop 0 , 2 , ( move 4 , v0 ; move ua , 4 ) 
[4894] ( move 0 , ul ; loop 0 , 5 , move 2 , v0 ; move v0 , 0 ) 
[4895] ( move ua + 2 , 3 - ul ; move ul , ul ; move ul + ul , ul ) 
[4896] loop 0 , 5 , move ul + v0 , 3 / v0 
[4897] ( move ua / 4 , ul ; move ua , ua * ua ) 
[4898] loop 0 , 6 , move ua / v0 , ul + v0 
[4899] loop 0 , 4 , move 3 , v0 - 3 
[4900] ( move ua - ul , ua ; move ul - 4 , ua / 3 ) 
[4901] ( move 3 + ul , ul ; move ul - ua , 3 + ul ) 
[4902] ( loop 0 , 6 , move v0 , v0 + v0 ; move ul , ul ) 
[4903] ( move ua , 3 - ul ; move 4 , 4 ; move 2 , ul ) 
[4904] loop 0 , 6 , move v0 - ua , v0 + ul 
[4905] ( loop 0 , 3 , move 4 , 4 ; move v0 , ua ; v1 = v0 ) 
[4906] ( move ua , 4 ; move 4 , 2 ) 
[4907] ( move 4 * 2 , ua / 2 ; move ua , 4 ) 
[4908] ( move ua , ul ; move 3 , ul / 2 ) 
[4909] ( move ua + 2 , ua * ua ; move ul , ul ) 
[4910] loop 0 , 7 , move 3 - v0 , 4 
[4911] loop 0 , 4 , move 3 , 2 / v0 
[4912] ( loop 0 , 6 , move 2 , ul ; move v0 , ul ) 
[4913] ( move ua - ul , 0 ; move ua , ul ) 
[4914] loop 0 , 3 , ( move 3 , v0 ; move ua , ul ) 
[4915] ( move ua + ul , ul ; move 3 , 4 ) 
[4916] ( v0 = ua + 3 ; move v0 , ul ; move v0 , 4 ) 
[4917] ( move 4 , 4 + 2 ; move ua - ul , 2 ; v0 = ua - ul ) 
[4918] loop 0 , 3 , ( move v0 , v0 ; move 0 - 4 , ua ) 
[4919] ( move ul , ul / 2 ; loop 0 , 4 , move v0 , ul ) 
[4920] loop 0 , 3 , move ul - 3 , ul / v0 
[4921] ( move 4 , ul ; move 2 , 2 ) 
[4922] ( move ul , ua / 2 ; loop 0 , 6 , move v0 , ua / 4 ) 
[4923] ( move 4 , ul / 2 ; move ul , ul ) 
[4924] ( move ua , ul ; loop 0 , 3 , move ua , 2 ) 
[4925] ( move ul , ul ; move ua , ul ; move 4 - ua , 2 ) 
[4926] loop 0 , 4 , move 3 * v0 , 3 
[4927] loop 0 , 5 , ( v1 = ul / v0 ; move 3 * 2 , ua - 2 ) 
[4928] ( move ua + ul , ul ; move 2 , ua - 4 ) 
[4929] ( move ul , 2 / ua ; move ua , ua - ul ) 
[4930] loop 0 , 4 , move v0 , 4 * 4 
[4931] ( move ul + ul , 2 ; move ua , 2 / ua ) 
[4932] ( loop 0 , 5 , move ua , 3 ; move v0 , v0 ) 
[4933] ( loop 0 , 6 , move ul , v0 ; move ua , 0 ) 
[4934] ( loop 0 , 6 , move ul , v0 ; move 4 , 2 ) 
[4935] ( v0 = ua + 2 ; move v0 , v0 ; move v0 , 3 ) 
[4936] loop 0 , 2 , move ul - ua , v0 + v0 
[4937] loop 0 , 6 , move 2 - ua , 2 
[4938] loop 0 , 6 , move ul - ua , ua * ua 
[4939] loop 0 , 2 , move ua + ul , ua * ua 
[4940] ( move 4 , ul ; move ua + 2 , 4 ) 
[4941] ( move 0 - ua , 2 ; loop 0 , 5 , move 4 , v0 ) 
[4942] ( move 4 , 3 - 4 ; move 3 - ua , 2 ) 
[4943] loop 0 , 5 , move v0 / 2 , v0 + 4 
[4944] ( loop 0 , 4 , move ul + v0 , v0 ; move ul , ua ) 
[4945] ( move ua + 3 , ul ; move ua , 3 ) 
[4946] loop 0 , 2 , loop 1 , 3 , move ul , ul / v1 
[4947] ( v0 = 4 ; move ul - ua , 3 ; move v0 , v0 ) 
[4948] ( loop 0 , 6 , move ul , ul ; move v0 , 3 ) 
[4949] ( loop 0 , 5 , move v0 , ua / v0 ; move ua , v0 ) 
[4950] loop 0 , 3 , move ua - ul , v0 - 4 
[4951] loop 0 , 2 , move 4 , ua - 3 
[4952] ( loop 0 , 6 , move 2 - v0 , ul ; move ua , v0 ) 
[4953] ( move 2 , 4 ; loop 0 , 2 , move ua , 4 ) 
[4954] ( move ul - ua , ul ; loop 0 , 4 , move v0 , ul ) 
[4955] ( loop 0 , 5 , move 3 , ul ; move ul , 0 ) 
[4956] ( move ul , 3 ; move 4 , 2 - 3 ) 
[4957] ( move ul - ua , 0 ; move ua , 3 / ua ) 
[4958] loop 0 , 6 , move ul - v0 , ua / v0 
[4959] loop 0 , 3 , move v0 + 4 , v0 * 4 
[4960] ( move 2 , ul ; move ul , 3 + ul ; move 3 , ul ) 
[4961] ( move 3 , 3 - ua ; loop 0 , 6 , move ua - ul , 2 ) 
[4962] loop 0 , 4 , move 3 - ua , 4 
[4963] loop 0 , 6 , move 2 , v0 - ul 
[4964] ( v0 = ua * ua ; move ua , ul - v0 ; move ul , ul ) 
[4965] ( move 4 , ua ; move 3 - ul , ua - 4 ) 
[4966] loop 0 , 6 , move 3 , 4 / v0 
[4967] ( move 4 , 0 - ul ; move 2 - ua , ul ) 
[4968] ( loop 0 , 4 , move v0 * 3 , 2 - 4 ; v1 = ua + ul ) 
[4969] ( move 4 , 4 ; move ul - ua , ul ) 
[4970] ( move 3 + 2 , ua ; move ua , ua - ul ) 
[4971] ( move ul , 2 ; move ua , ul ; move ua , 2 ) 
[4972] loop 0 , 3 , ( move ua , 4 ; move ul - v0 , ua / v0 ) 
[4973] ( move ul , 2 - ul ; loop 0 , 3 , move 4 + v0 , v0 ) 
[4974] ( loop 0 , 3 , move ua , 4 ; move 4 + ul , v0 ) 
[4975] loop 0 , 7 , move 3 + v0 , 4 
[4976] loop 0 , 2 , move 4 , v0 - 2 
[4977] ( move ua , 0 ; move ua - ul , 4 + 4 ) 
[4978] ( move 2 , ua ; loop 0 , 4 , move 3 , ul - v0 ) 
[4979] loop 0 , 4 , move 4 + ul , 4 - v0 
[4980] ( move ua , 3 + ul ; loop 0 , 5 , move v0 / 2 , ul ) 
[4981] ( move ul , 4 ; loop 0 , 4 , move v0 , 3 / 4 ) 
[4982] ( loop 0 , 6 , move 3 , v0 ; move v0 , v0 ) 
[4983] loop 0 , 7 , move ua / v0 , 4 * 2 
[4984] ( move 3 - ul , ul ; move ua + ul , ul ; move 2 , ul ) 
[4985] ( move ua , ua ; move ul , ul ; move ul , ua - ul ) 
[4986] loop 0 , 3 , ( move v0 , ul - v0 ; move 3 , 3 ) 
[4987] loop 0 , 6 , move 2 - v0 , 3 / v0 
[4988] ( move ua , 4 ; move ul + ul , ua + 4 ; move 4 , ul ) 
[4989] ( move 3 , 3 ; loop 0 , 4 , move ul , ul ) 
[4990] loop 0 , 5 , move v0 - ul , ua - ul 
[4991] ( move ua , ul ; loop 0 , 4 , move v0 , 3 / v0 ) 
[4992] ( move ua , 0 - 3 ; move 2 , ul ) 
[4993] ( move ua + ul , ua * ua ; move ua , 2 ) 
[4994] loop 0 , 3 , move 3 + 3 , ul + ul 
[4995] loop 0 , 6 , move v0 - 2 , v0 / 3 
[4996] ( move ul , 2 ; move ua , 2 / 3 ) 
[4997] loop 0 , 4 , move ul , v0 + 3 
[4998] ( move 4 , ua ; move ua , ul ; move ul , 4 ) 
[4999] ( move 3 , 4 + ul ; loop 0 , 4 , move ul + ul , v0 ) 
[5000] ( move ua + ul , ua / 2 ; loop 0 , 3 , move v0 , v0 ) 
[5001] ( move ua + ul , ua ; move 3 - 4 , ul ; move 3 , 4 ) 
[5002] ( move 3 , 4 + ul ; move ua , 2 ) 
[5003] loop 0 , 4 , move v0 * 3 , 2 
[5004] ( move ua , ua * ua ; loop 0 , 5 , move v0 , ul ) 
[5005] loop 0 , 3 , move 2 / v0 , 3 + 2 
[5006] loop 0 , 2 , loop 1 , 3 , move v1 + v1 , v1 + v1 
[5007] ( move ul - 4 , 3 ; loop 0 , 2 , move v0 - 4 , 4 ) 
[5008] ( move ua , 4 + 3 ; move ua , 4 ) 
[5009] ( move ua , ul ; move 2 , 4 / 3 ) 
[5010] loop 0 , 3 , move ua + 2 , 2 
[5011] ( loop 0 , 6 , move ua - ul , v0 ; move v0 , v0 ) 
[5012] ( move ua , 0 ; move 2 , 2 - 4 ) 
[5013] ( move ua , 3 / 4 ; move 3 - ua , ul ) 
[5014] ( loop 0 , 4 , move 4 , ul ; move ua , 3 ) 
[5015] loop 0 , 5 , move 3 , v0 / 4 
[5016] loop 0 , 7 , move v0 - ul , ua - v0 
[5017] ( loop 0 , 5 , move v0 / 2 , ul ; move 4 , ul ) 
[5018] loop 0 , 5 , ( move ua , 3 * 3 ; v1 = v0 ) 
[5019] ( move 4 + ul , 0 ; move ua , ua * ua ) 
[5020] ( move ul , 2 ; move ul + ul , 3 ; move ua , 4 * 3 ) 
[5021] ( v0 = ul - ua ; move v0 , v0 ; move ua , v0 / ua ) 
[5022] ( move 4 , ua - ul ; move 2 + ul , ua / 4 ) 
[5023] ( move 4 , ul / 2 ; move 3 , 4 + ul ) 
[5024] ( move 4 , 3 ; move ua , ua - ul ) 
[5025] ( move ua , ul / ua ; move ul , 0 - 4 ) 
[5026] ( move ul - ua , ul / 2 ; move 2 + ul , ul ) 
[5027] ( move 2 - ua , 0 ; move ua + ul , ua * ua ) 
[5028] ( move ua , 4 * 2 ; move ul - ua , ul ; move 0 , ua ) 
[5029] ( move ua + ul , 2 ; move ua , ul - 4 ) 
[5030] ( move ua + ul , 4 ; loop 0 , 4 , move v0 , v0 ) 
[5031] ( move ua , ua ; loop 0 , 3 , move v0 - 3 , ul ) 
[5032] ( loop 0 , 6 , move ul , 4 ; move v0 , v0 ) 
[5033] ( loop 0 , ul , move 4 , v0 ; loop 1 , 2 , move 3 , 4 ) 
[5034] ( move 3 , 4 ; move ua - ul , 4 ) 
[5035] ( move ua + ul , 2 ; move 4 + ul , 2 - ua ) 
[5036] ( move 3 + ul , ua * ua ; move 0 , 4 ; move ua , 4 - ua ) 
[5037] loop 0 , 7 , move 3 , v0 / 3 
[5038] loop 0 , 7 , move v0 - 3 , v0 + ul 
[5039] ( loop 0 , 3 , loop 3 , 2 , move ul , v0 ; move ua , v0 ) 
[5040] ( move ua , 3 ; loop 0 , 4 , move ul , ul ) 
[5041] ( move 4 , 3 ; ( move 3 - ua , ul ; move ua , ua ) ) 
[5042] ( move 2 + ul , ua ; move ua , 4 / 3 ) 
[5043] ( move 4 , ul ; move ua + 3 , ul - 3 ) 
[5044] loop 0 , 2 , move 3 + ul , 3 * 2 
[5045] ( move ua , ul / ua ; move ua , ua * ua ) 
[5046] ( move ul - ua , 4 * 2 ; move 4 , ul ) 
[5047] ( move ua , 3 ; move 0 - ua , ul ) 
[5048] ( move 3 , ul ; v0 = ua - ul ; move v0 , v0 - ul ) 
[5049] ( move ua , 3 ; move ua , ua - 2 ) 
[5050] loop 0 , 5 , move 3 / v0 , ul / v0 
[5051] ( move 0 , 4 ; move ua , 2 / ua ) 
[5052] ( move ua - ul , ul ; move ul - 4 , ua ; move ua , 2 ) 
[5053] loop 0 , 7 , move ul - v0 , 3 * v0 
[5054] ( move ua + ul , 4 ; move 3 , ul ) 
[5055] ( move 0 , 2 - ua ; move ua + ul , 4 ; move ua , 3 ) 
[5056] ( move ul - ua , ul / 2 ; move ul , 4 ) 
[5057] ( move ul - ua , 0 ; move 3 , 2 ) 
[5058] loop 0 , 2 , loop 1 , 3 , move ul + v1 , v0 
[5059] ( move 2 - ua , 0 ; loop 0 , 3 , move v0 + ul , v0 ) 
[5060] loop 0 , 3 , ( move 4 , 2 ; move v0 + v0 , v0 ) 
[5061] ( move ua - ul , ul ; move ul - ua , ul ) 
[5062] loop 0 , 2 , ( move ul , ul ; move ua + ul , v0 ) 
[5063] ( loop 0 , 6 , move 4 , v0 ; move 3 , v0 ) 
[5064] ( move ul , ul - 4 ; move 4 , ua - ul ) 
[5065] ( move ua / 3 , ua * ua ; move 4 * 2 , ul ; v0 = ua ) 
[5066] ( ( move ua , ua ; move 3 , 3 ) ; move 4 , ul ) 
[5067] ( move ua + ul , ul / ua ; loop 0 , 4 , move ul + v0 , ul ) 
[5068] ( move ul , 3 ; loop 0 , 5 , move v0 * 2 , v0 ) 
[5069] loop 0 , 3 , move 0 - 2 , v0 * v0 
[5070] loop 0 , 5 , move ua + 2 , 4 
[5071] ( move 3 + ul , 3 * 3 ; move ua , ua + 4 ) 
[5072] ( move 3 , 3 ; loop 0 , 5 , move ul + v0 , v0 ) 
[5073] ( move ua + ul , ua ; loop 0 , 6 , move 4 , 4 - ua ) 
[5074] ( move 2 * 2 , 4 ; loop 0 , 6 , move v0 , ul ) 
[5075] ( move ul / 4 , ul ; loop 0 , 6 , move 4 , 4 ) 
[5076] ( move ua + ul , 3 ; move 3 , 2 ) 
[5077] ( v0 = ul / 4 ; loop 1 , 5 , move v1 , ul + v0 ) 
[5078] ( loop 0 , 2 , move 3 , ul ; move 2 , 4 ) 
[5079] ( move 4 , 4 + ul ; move 4 , ul ) 
[5080] ( loop 0 , 4 , move v0 , ua - 4 ; move v0 + v0 , 3 ) 
[5081] loop 0 , 5 , move ul - v0 , ul - 2 
[5082] ( move ua + ul , ul ; move 3 , ua - 2 ) 
[5083] ( move ua - ul , 0 ; move ua , ul - 2 ) 
[5084] ( loop 0 , 6 , move 2 , 3 ; move v0 , v0 ) 
[5085] ( loop 0 , 6 , move ul , ua ; move v0 * 2 , 4 ) 
[5086] ( move 0 - 4 , 2 ; move ua , 2 ) 
[5087] ( loop 0 , 6 , move v0 , v0 * 3 ; move ul , v0 - ul ) 
[5088] ( move ua , ul ; move ul - ua , 2 / ua ) 
[5089] ( move ua , ul ; loop 0 , 5 , move 3 , ul ) 
[5090] loop 0 , 3 , move ul - 4 , 4 / v0 
[5091] loop 0 , 4 , move ul - ua , v0 + ul 
[5092] ( move 2 - ua , 2 ; move ua , ul ) 
[5093] ( move 4 + ul , ul ; move 0 , ua ; move 0 - ua , 2 - ua ) 
[5094] ( loop 0 , 5 , move 3 , ul ; v1 = ul ; move v0 , ua ) 
[5095] loop 0 , 5 , move 4 + ul , 4 
[5096] ( move 3 , 2 ; move ul , ul ; move ul + ul , ul ) 
[5097] ( move 0 , 4 * 3 ; move ua , 3 ) 
[5098] ( move ua , ua ; loop 0 , 6 , move v0 , 4 ) 
[5099] ( ( move ua + ul , 2 ; move 3 , 4 ) ; move ua , 0 ) 
[5100] ( move ul - ua , ua ; move 4 + ul , 2 ) 
[5101] loop 0 , 4 , move 3 - ua , v0 + v0 
[5102] ( move ua + 4 , ua - 4 ; move 4 / ua , 4 - 2 ) 
[5103] ( move ua , 4 ; move 2 , 2 ) 
[5104] loop 0 , 7 , move ua / 4 , v0 + 2 
[5105] ( move ua + 4 , ua + ul ; move ua , 0 - 2 ) 
[5106] ( move ul , ua / 4 ; move ua , ul / 2 ) 
[5107] ( loop 0 , 5 , move v0 , v0 / ua ; move ul , ua ) 
[5108] loop 0 , 2 , loop 1 , 2 , move ul + v0 , ul 
[5109] loop 0 , 6 , move v0 / 2 , v0 + v0 
[5110] loop 0 , 6 , move 0 - 3 , v0 - ul 
[5111] ( loop 0 , 3 , move 3 , v0 ; move ua , ua - ul ) 
[5112] loop 0 , ul , loop 1 , 4 , move 0 - ua , 3 
[5113] ( move ua , 0 ; move 2 , ul / 2 ) 
[5114] loop 0 , 5 , move ua - ul , 2 
[5115] ( move 3 , ul + ul ; ( move 0 , ua / 4 ; move 4 , 4 ) ) 
[5116] ( move ul - ua , 4 / 2 ; move ua + 2 , ul ) 
[5117] ( move ul - ua , ua - 3 ; move 4 , 2 ) 
[5118] loop 0 , 3 , move v0 - 4 , 4 
[5119] ( move ul - ua , 2 ; move 3 - ua , 3 / ua ) 
[5120] ( move ua , ua ; move 2 , 3 ; move ua , ul ) 
[5121] ( move 3 , 0 ; move 2 , 3 ) 
[5122] ( move 0 , ua ; move ua - ul , ua ; move ua / 2 , ua * ua ) 
[5123] ( move ua + 4 , ul ; move ua / 4 , 4 + ul ) 
[5124] ( loop 1 , 4 , move v1 , ul ; move ul + v1 , 3 + 3 ) 
[5125] ( move ua , 2 ; move 2 , ul / ua ) 
[5126] ( move ua , ul / 4 ; move ua + ul , 2 ) 
[5127] ( loop 0 , 2 , move 2 + ul , v0 - 2 ; move ua , ul ) 
[5128] ( move 4 , 4 ; move 4 + 3 , 2 ) 
[5129] ( ( move 4 , ul ; move ua , 2 ) ; move 2 , ul ; v0 = 3 ) 
[5130] ( move 4 , ul ; move ua , 2 ; move 2 , 2 / 3 ) 
[5131] ( move ua , 2 ; move 3 , ua * ua ) 
[5132] loop 0 , 2 , ( move ul , v0 ; move 2 , ul ) 
[5133] ( move 4 , ul + ul ; move ua + ul , 2 ) 
[5134] loop 0 , 3 , ( move ul / v0 , ul ; move ua + ul , ul ) 
[5135] ( move ul , ul ; loop 0 , 3 , move ua / v0 , 2 ) 
[5136] ( loop 0 , 6 , move 3 , v0 * v0 ; move ul , ua ) 
[5137] loop 0 , 2 , ( move 4 , 4 - v0 ; move ua , v0 ) 
[5138] ( loop 0 , 3 , move ul , ua ; move ua + ul , ua * ua ) 
[5139] ( move ul , 0 ; move 3 + ul , ul ; move ua + ul , ua - 4 ) 
[5140] loop 0 , 2 , loop 1 , 3 , move ul + v0 , v0 
[5141] ( move ul - ua , 4 ; move 3 + 2 , 3 ) 
[5142] loop 0 , 2 , move ua - ul , ul + v0 
[5143] ( move ul - 4 , ua + ul ; move ul , ua ; move ua , ua * ua ) 
[5144] ( loop 0 , 4 , move v0 + v0 , v0 ; move ul , ua ) 
[5145] ( move 3 - ua , 4 - 3 ; loop 0 , 5 , move v0 , ul ) 
[5146] ( move ua , ul / 4 ; move 4 , ul ) 
[5147] ( move ua - ul , ul ; move ua , 2 ) 
[5148] ( move 2 , ua - ul ; move 4 + ul , 4 ) 
[5149] ( loop 0 , 4 , move ul + ul , ul ; move ua , ua ) 
[5150] ( move 2 , ul / 3 ; move 4 , ul ) 
[5151] ( loop 0 , 3 , move 2 , v0 ; move 4 , v0 ) 
[5152] ( move ua - ul , 2 ; loop 0 , 5 , move v0 , v0 ) 
[5153] ( move ua , 4 ; move ua , ul - 4 ) 
[5154] loop 0 , 3 , move 4 - v0 , 4 / v0 
[5155] loop 0 , 5 , move ua - ul , ua - 2 
[5156] loop 0 , 5 , move 4 / v0 , v0 * 3 
[5157] loop 0 , 5 , move 3 + v0 , v0 * v0 
[5158] ( move 2 , 0 - ul ; move ua , ua ; loop 0 , 4 , move 2 , 4 ) 
[5159] ( move 0 - ua , ul ; move 4 + ul , ul ) 
[5160] ( move 3 , ul / 4 ; move ua , ul ) 
[5161] loop 0 , 3 , loop 1 , ul , move 0 - 4 , ua - v0 
[5162] ( move 4 , 3 / ua ; v0 = ul ; move 4 , v0 ) 
[5163] ( move ul - ua , 2 ; move 0 - ua , ul ) 
[5164] loop 0 , 7 , move 4 - ua , v0 + v0 
[5165] ( move ua - 3 , 0 ; move 4 , 4 ) 
[5166] ( loop 0 , 4 , move ul , v0 * v0 ; move v0 , ul / ua ) 
[5167] ( move ua , 0 - 3 ; move ua + ul , 2 ) 
[5168] loop 0 , 3 , move 2 , 4 * v0 
[5169] loop 0 , 3 , ( move ul , 4 - v0 ; move 2 , v0 ) 
[5170] loop 0 , 6 , move ua - 2 , 4 + ul 
[5171] ( v0 = ua / 4 ; loop 1 , 5 , move v1 , ua * v0 ) 
[5172] ( move ua + ul , 3 / ua ; move ua , 2 ) 
[5173] ( move ul , ul ; loop 0 , 4 , move ua , 4 ) 
[5174] ( loop 0 , 5 , move ul , ul ; move ua , 3 ) 
[5175] loop 0 , 3 , ( move v0 - ua , v0 ; move 2 , v0 ) 
[5176] ( move 2 , 4 ; loop 0 , 3 , move 3 , 4 ; move v0 , 0 ) 
[5177] loop 0 , 6 , move v0 - ul , v0 / 3 
[5178] loop 0 , 3 , ( move ua , 0 ; move ul , 2 ) 
[5179] ( move ua , 4 * 2 ; move 4 - ul , 2 ) 
[5180] ( move ua , ua - 2 ; move 3 * 2 , ua * ua ) 
[5181] ( move ua + ul , 4 + ul ; move ul - ua , ul ; move ua , ul ) 
[5182] loop 0 , 2 , ( move ua + ul , 2 ; move 2 - ul , v0 ) 
[5183] loop 0 , ul , ( move v0 , ul ; loop 1 , 4 , move 3 , 4 ) 
[5184] ( move ul , 2 ; loop 0 , 3 , move ua , ul + v0 ) 
[5185] ( move ul , ul + ul ; loop 0 , 5 , move v0 , ul - v0 ) 
[5186] ( loop 0 , 5 , move ul , v0 * v0 ; move v0 , ul ) 
[5187] ( move 2 , 0 - ul ; move ua , ua * ua ) 
[5188] ( move 2 , 3 ; move ua , ul ; move ul , ul ) 
[5189] ( v0 = 3 + 2 ; move v0 , v0 ; move v0 , v0 ) 
[5190] ( move ua + 2 , ul ; move 4 / 3 , ul ) 
[5191] ( move ul , ul ; move ua + 4 , ua - 2 ) 
[5192] ( move ua , 4 + ul ; move 0 - ua , 2 / ua ) 
[5193] ( move ul , 3 ; loop 0 , 5 , move ul - ua , v0 ) 
[5194] ( move 3 , ul ; move 4 + ul , 4 ) 
[5195] ( move 3 * 3 , ul ; move 0 , ul ; move ua - ul , ul ) 
[5196] ( move ul , 3 ; move ua , ua / 4 ) 
[5197] loop 0 , 2 , ( move v0 + v0 , ul ; move 3 , v0 ) 
[5198] ( move 4 , ul / 3 ; loop 0 , 5 , move v0 , v0 ) 
[5199] ( move 2 , ul / ua ; loop 0 , 6 , move v0 , v0 ) 
[5200] loop 0 , 6 , move ul + v0 , 3 - v0 
[5201] ( move 0 , ul + ul ; move ua / 3 , ua / 4 ; move ua , ul ) 
[5202] ( move ul , ul ; loop 2 , 2 , move 4 , ul ) 
[5203] ( move ua + 3 , 4 + ul ; move ua , 2 + ul ) 
[5204] loop 0 , 5 , move 3 , 3 
[5205] loop 0 , 3 , ( move v0 , v0 ; move v0 , ul - v0 ) 
[5206] ( move ua , ua / 4 ; ( v0 = 4 ; move ua , v0 ) ) 
[5207] ( move ua + ul , 2 / 3 ; loop 0 , 3 , move 3 , 3 + v0 ) 
[5208] ( move ua - ul , ul ; ( move ua , ua * ua ; move ul , ua ) ) 
[5209] ( move ua + 2 , ul ; v0 = 4 ; move v0 + 3 , 2 ) 
[5210] loop 0 , 6 , move 4 - v0 , 4 * v0 
[5211] loop 0 , 7 , move 4 / v0 , 2 / v0 
[5212] ( v0 = ua * ua ; loop 1 , 5 , move v1 , v0 / v1 ) 
[5213] loop 0 , 2 , loop 1 , 3 , move 3 , v1 
[5214] ( move 3 , ul / 3 ; move ua , 2 / ua ; move ul / ua , ua ) 
[5215] ( loop 0 , 4 , move v0 , v0 * v0 ; move ul , 0 ) 
[5216] loop 0 , 5 , move v0 , 3 / 2 
[5217] ( move ua , 0 ; move ua + 2 , 4 * 2 ) 
[5218] loop 0 , 2 , ( move ul , 4 ; move ul , v0 ) 
[5219] ( loop 0 , 5 , move 2 , 2 ; move v0 , ua + v0 ) 
[5220] ( move 4 + ul , ua ; move ua , ua / 3 ) 
[5221] loop 0 , 6 , move ul + v0 , 3 + 2 
[5222] ( move 2 , 4 - ul ; ( move ul , ul ; move 4 , ul ) ) 
[5223] loop 0 , 4 , ( v1 = v0 + ul ; move v1 - ua , v1 ) 
[5224] ( v0 = ul - 4 ; move ua , v0 ; move v0 , ul / v0 ) 
[5225] loop 0 , 3 , loop 1 , 2 , move v0 + v1 , v1 
[5226] ( loop 0 , 3 , move ul , 0 ; move v0 - ua , v0 ) 
[5227] ( move ua , 0 ; move 0 - ua , ul ) 
[5228] ( loop 0 , 4 , move v0 + v0 , ul ; move ua , v0 ) 
[5229] ( move ua , 0 ; ( move ua , 4 ; move ua , ua * ua ) ) 
[5230] ( move ul , 2 ; loop 0 , 5 , move v0 , v0 ; move 2 , ul ) 
[5231] loop 0 , 2 , ( move ul , ua ; move 3 - v0 , 4 + ul ) 
[5232] ( loop 0 , 4 , move 2 , ul ; move v0 , ul ) 
[5233] ( move ua - ul , 2 ; move ua , ul ) 
[5234] ( move ua , 4 * 4 ; move 2 , ul ) 
[5235] ( move ul - 4 , 0 ; move ua , 2 ) 
[5236] ( move 4 + ul , 0 ; loop 0 , 5 , move v0 + v0 , v0 ) 
[5237] ( move ua , 3 / 2 ; move 3 , ul ) 
[5238] ( move 4 , ul - 3 ; move 4 , 2 ) 
[5239] ( ( move ua - ul , ua ; move ul , ul ) ; move ua , 3 ) 
[5240] loop 0 , 3 , ( move v0 , v0 - ua ; move ul , 4 + ul ) 
[5241] ( ( move ua - ul , 0 ; move 4 , ul + ul ) ; move 4 , 4 ) 
[5242] loop 0 , 4 , move 2 , 4 - v0 
[5243] loop 0 , 4 , move ua - ul , ul - 3 
[5244] ( move ua , ua ; move ul + ul , ul ; move ua + ul , ua + ul ) 
[5245] ( loop 0 , 5 , move 2 , v0 ; move ul , 0 ) 
[5246] ( loop 0 , 5 , move ul , ul ; move ua , v0 ) 
[5247] ( v0 = ul - ua ; move v0 , v0 ; move 2 * v0 , 3 ) 
[5248] loop 0 , 3 , ( move v0 , v0 ; move ua , 2 ) 
[5249] ( move ua - ul , 2 / ua ; move 4 , 2 ) 
[5250] ( move ua , ua ; move ua , 4 + 4 ) 
[5251] loop 0 , 7 , move v0 / 3 , v0 / ua 
[5252] ( move ua + ul , ua ; move ul - 3 , ul ; move 4 , ua ) 
[5253] ( loop 0 , 4 , move v0 , ul ; move v0 , ul - v0 ) 
[5254] ( v0 = ua ; move 4 , v0 / 3 ; move v0 + 3 , 3 ) 
[5255] ( move ua - 3 , ul ; move ua , 2 ) 
[5256] loop 0 , 3 , move 4 - v0 , v0 + v0 
[5257] ( move ua , ul ; move ul + ul , ua + 4 ; move ua , 4 ) 
[5258] ( move ua , ua ; move ul , ua + ul ; loop 0 , 5 , move 4 , ul ) 
[5259] ( move 3 + ul , ul ; move ua , 4 * 3 ) 
[5260] loop 0 , 6 , move v0 * 2 , ul - 4 
[5261] ( loop 0 , 6 , move 3 - ua , v0 ; move v0 , ua ) 
[5262] ( move ua - ul , ul - 4 ; move ul , ul ; move ua , ul ) 
[5263] ( move ul - ua , ul ; move ua + ul , 4 * 3 ) 
[5264] ( move 4 , 3 ; move 0 - ul , 2 ) 
[5265] ( move 3 , 4 ; move 4 + ul , 4 - ul ; move ul , ul ) 
[5266] ( loop 0 , 3 , move ul , ul ; move 3 , v0 * v0 ) 
[5267] ( move ua + 4 , ul ; move ul , 4 + ul ) 
[5268] ( move ua , 4 ; move 3 , ul / 2 ) 
[5269] ( loop 0 , 5 , move 4 / v0 , v0 ; move 4 , 0 ) 
[5270] ( move 2 , ul + ul ; loop 0 , 4 , move 4 , v0 ) 
[5271] loop 0 , 3 , ( move ul , ul ; move ul , ua - ul ) 
[5272] ( move ua , ul ; ( move 2 , ul ; move 2 , 4 ) ) 
[5273] ( move 3 , ua + 3 ; loop 1 , 5 , move v1 , v1 ) 
[5274] ( move 4 + 2 , ua ; move ua - ul , ul ) 
[5275] loop 0 , 3 , move 3 / v0 , 2 
[5276] ( move ul , ua * ua ; loop 1 , 5 , move ua - 3 , v1 ) 
[5277] ( move ul - 4 , ua ; move 4 + ul , 2 ) 
[5278] loop 0 , 3 , move ua - 3 , ul / v0 
[5279] ( move 3 , ul ; loop 0 , 3 , move v0 * v0 , v0 ) 
[5280] ( move ua , 4 + ul ; move 4 , 3 * 3 ; move 2 + ul , 3 ) 
[5281] loop 0 , 2 , loop 1 , 2 , move 4 - v1 , v1 
[5282] ( move 2 , 3 + 2 ; move ua , ul ) 
[5283] ( loop 0 , 4 , move ua - v0 , 4 ; move ul , ua ) 
[5284] ( move ul , ul ; loop 0 , 4 , move v0 , ul ; move v0 , ul ) 
[5285] ( move 4 , ul ; loop 0 , 4 , move v0 , v0 / 2 ) 
[5286] ( move ua + ul , 3 ; move ua , ua * ua ) 
[5287] ( move ul , ul ; loop 0 , 4 , move 4 + v0 , ua - v0 ) 
[5288] ( move ua , ul ; move 4 , ul - 3 ; move ua , ua ) 
[5289] ( move ul , 4 * 4 ; move ua , ul ) 
[5290] ( move ua , ua * ua ; move 3 + 2 , ul ) 
[5291] ( move ua , ua ; loop 0 , 5 , move ua , 4 ) 
[5292] ( move 4 , 3 ; loop 0 , 5 , move v0 , v0 ) 
[5293] loop 0 , 4 , move 4 , 4 + ul 
[5294] ( move ua , 2 ; move 2 - ua , ul ) 
[5295] ( move 2 , 3 ; move 3 , 2 ) 
[5296] ( loop 0 , 5 , move 2 , v0 ; move ul , ul ) 
[5297] loop 0 , 7 , move v0 - 3 , v0 * v0 
[5298] ( loop 0 , 4 , move v0 , v0 ; move v0 , ul - v0 ) 
[5299] ( move 4 , 2 / ua ; move ua + ul , 3 + ul ) 
[5300] loop 0 , 3 , ( move ul + v0 , v0 ; move v0 , 3 / ua ) 
[5301] ( move 0 , 0 - ua ; move 4 , 4 + 3 ; move ul - ua , ul ) 
[5302] ( v0 = 2 ; move 3 , v0 ; move v0 + ua , v0 - 4 ) 
[5303] ( move 4 , 4 ; move 4 + 4 , 4 ) 
[5304] loop 0 , 3 , ( move ul / ua , ul ; move ua , ul + v0 ) 
[5305] ( move ua + 2 , ul ; move 2 - ua , ua + ul ; move ul , 0 ) 
[5306] loop 0 , 3 , move v0 - ua , ul + v0 
[5307] ( move 4 , ua ; move 4 , ua * ua ; move ul , ul ) 
[5308] ( move 4 , ua ; move 4 , ua - 2 ) 
[5309] ( move ul - 4 , ul ; move ua , 2 ) 
[5310] ( move ua + 3 , 4 ; move ul , 0 - ul ) 
[5311] ( move ua + ul , ua ; loop 0 , 3 , move ul , ul ) 
[5312] ( loop 0 , 5 , move ul , ul ; move ua , v0 * v0 ) 
[5313] ( move 4 + 4 , 4 ; move 2 + ul , 4 + ul ; v0 = 0 ) 
[5314] ( move ua + 4 , ul ; move ul - 3 , 2 ) 
[5315] ( move ul - 4 , ua ; move ua + ul , ua * ua ) 
[5316] ( move ua , 0 ; loop 0 , 4 , move v0 , ul / v0 ) 
[5317] ( move ua , 2 - ua ; move ul - ua , ul / 2 ) 
[5318] loop 0 , 2 , move ul - 4 , 4 + v0 
[5319] loop 0 , 3 , ( move 4 , ua ; v1 = ul ; move v0 , 4 ) 
[5320] loop 0 , 4 , move ul + v0 , 3 / v0 
[5321] ( move ua , ul / ua ; move ua / 3 , ul ) 
[5322] loop 0 , 2 , loop 1 , ul , ( move 4 , ul ; move ul , ul ) 
[5323] loop 0 , 6 , ( v1 = ua / v0 ; move v0 , v1 * ua ) 
[5324] ( move ul , 3 ; loop 0 , 6 , move 4 , v0 ) 
[5325] ( loop 0 , 4 , move v0 , 3 ; move ua - ul , 2 ) 
[5326] loop 0 , 5 , move v0 + 2 , 3 
[5327] ( move 4 , 2 ; move 2 , ua * ua ) 
[5328] ( move 3 , 0 ; move 4 , ul - 3 ) 
[5329] ( ( move ua + ul , 0 ; move ul , ul ) ; move 4 , ua + ul ) 
[5330] loop 0 , 4 , move 4 / v0 , ua / v0 
[5331] loop 0 , 3 , loop 1 , 2 , move ua - 3 , v0 
[5332] ( loop 0 , 5 , move ul - v0 , ul / v0 ; move v0 , 2 ) 
[5333] ( move 2 , ua ; move ua , ul ; move ul , 3 / ua ) 
[5334] loop 0 , 5 , move v0 - ua , 4 / v0 
[5335] ( move ul - ua , 3 / 4 ; move ua , ul ; v0 = ua ) 
[5336] ( move ua , 4 ; loop 0 , 5 , move v0 , v0 ) 
[5337] loop 0 , 4 , move ua + 2 , 4 
[5338] ( move ua , ua * ua ; move ul - ua , ul ) 
[5339] ( move ua - ul , ua ; ( move 2 , 4 - ul ; move ua , 2 ) ) 
[5340] ( move 4 , ul + ul ; loop 0 , 4 , move v0 * v0 , v0 ) 
[5341] ( loop 0 , 4 , move ul , v0 ; move 2 , 2 ) 
[5342] ( move ul + ul , ua + ua ; move ua , ul ; move ul - ua , ul ) 
[5343] ( move ua , 0 ; move ul , 4 + 3 ; move ua , ul ) 
[5344] ( move 4 , ul / ua ; move ua , 4 ) 
[5345] ( move ua - ul , ul / 2 ; move 2 + ul , ul ) 
[5346] ( loop 0 , 5 , move ul - v0 , v0 ; move v0 , v0 ) 
[5347] ( move ua , 4 / 3 ; move ul , ua - ul ) 
[5348] ( move ul , ua ; loop 0 , 4 , move v0 + ul , v0 - 3 ) 
[5349] ( move ua + 3 , ul ; move 3 , 2 ) 
[5350] ( move ua + ul , 3 ; move ua , 3 + 2 ) 
[5351] ( move 4 , 0 ; move 2 , ul / 3 ) 
[5352] ( v0 = ua - 2 ; ( move 3 , 4 ; move ua , ua / v0 ) ) 
[5353] ( move 4 , ul / 3 ; move ua , ul ) 
[5354] ( move ul , ua / 4 ; move ua , 2 - 3 ) 
[5355] loop 0 , 5 , move 2 + v0 , v0 / 3 
[5356] loop 0 , 3 , ( move ua , v0 ; move v0 , ul ) 
[5357] ( move 4 , ua ; move ua , ul ; move ua - ul , ul + ul ) 
[5358] ( move 4 , ul / 2 ; move ua , 4 ) 
[5359] ( loop 0 , 5 , move v0 + v0 , 3 ; move ul , ua * 2 ) 
[5360] ( move ul - 3 , ul ; loop 0 , 6 , move v0 , v0 ) 
[5361] loop 0 , 6 , move v0 + ul , 3 * v0 
[5362] loop 0 , 4 , ( v1 = 3 + v0 ; move 3 , ua - v1 ) 
[5363] ( ( move ua - 2 , 3 ; move 3 , ul ) ; move ua , ul ) 
[5364] ( move ul - ua , ul ; move 4 , 4 ) 
[5365] ( move 2 , ul ; move ul - 4 , 4 ; move ua , ul ) 
[5366] ( loop 0 , 5 , move v0 , v0 ; move ul / 2 , ua ) 
[5367] ( ( move 3 + ul , 2 - ua ; move 4 , ua ) ; move ua , 4 ) 
[5368] ( move 2 , ua ; ( move 3 * 3 , ul ; move ua , 2 + ul ) ) 
[5369] ( move ua , 3 + ul ; v0 = ul / ua ; move 3 , ul + v0 ) 
[5370] ( loop 0 , 5 , move 3 - ua , v0 ; move v0 , v0 ) 
[5371] ( move 4 + ul , ul ; loop 0 , 6 , move v0 , 3 ) 
[5372] ( move ul , ul ; loop 0 , 5 , move v0 , v0 / 2 ) 
[5373] ( move ul - ua , 2 + ul ; loop 0 , 5 , move ul , ul ) 
[5374] loop 0 , 2 , move 3 , ul / 2 
[5375] ( move 3 , ul / ua ; move 4 , ul ) 
[5376] ( move 2 , ua / 4 ; move 4 + ul , ua - ul ) 
[5377] loop 0 , 6 , move v0 + ul , 2 - v0 
[5378] loop 0 , 6 , move 2 - v0 , v0 / ua 
[5379] ( move ua + ul , ul ; move ua + 2 , 4 ) 
[5380] ( move ul , 3 ; move ua , 3 / 4 ) 
[5381] ( loop 0 , 5 , move 4 , 2 ; loop 1 , 2 , move ua , 3 ) 
[5382] ( move ul , 3 ; move 4 , 3 / ua ) 
[5383] loop 0 , 3 , move 3 / v0 , 4 + 2 
[5384] ( move 3 , ua * ua ; move ua , 4 ) 
[5385] ( move 4 , 3 ; move ul , ua + ul ; move ua , ul ) 
[5386] ( move ua , ul ; loop 0 , 3 , loop 1 , 2 , move ul , v1 ) 
[5387] ( move ul , ua + ua ; move ua + ul , ul ; move 4 , 4 * 3 ) 
[5388] ( move ua + ul , ul ; move ul , ul ; move ua , 2 ) 
[5389] ( move 3 - ua , ua ; move 3 , 4 ) 
[5390] ( move 0 , 2 ; loop 0 , 5 , move ua , v0 ) 
[5391] ( move 2 , 2 ; loop 0 , 5 , move v0 , 3 ) 
[5392] loop 0 , 6 , move 2 - ua , 3 
[5393] ( move 3 , ul / ua ; v0 = 3 ; move v0 , 3 - ul ) 
[5394] ( move ua , 4 ; loop 0 , 4 , move v0 , ul + v0 ) 
[5395] ( move 3 - ua , ua + ul ; move 3 - ua , ua * ua ) 
[5396] ( move ul , ul / ua ; move ua , ul ; move ua , 4 ) 
[5397] ( move 4 , 0 ; move ul , 4 / ua ; move ua , ul ) 
[5398] ( move ua , ul ; v0 = 2 ; move 4 + v0 , v0 ) 
[5399] loop 0 , 2 , ( move 4 * 2 , v0 ; move v0 , ul ) 
[5400] ( move 2 , 2 ; move ua , 4 / ua ) 
[5401] ( loop 0 , 9 , v1 = v0 ; loop 2 , 2 , move v1 , 4 ) 
[5402] ( move ua , ul / ua ; move 3 * 2 , ua * ua ) 
[5403] ( move ua , ul - 4 ; move ua , 4 + ul ) 
[5404] ( move 4 , ua ; move ul , ul ; move ua , ul ) 
[5405] loop 0 , 5 , move 3 , 4 - v0 
[5406] ( move 2 - ua , ua ; move ul - ua , ua + ul ) 
[5407] ( move 2 - ua , 0 ; move ua , 2 ) 
[5408] loop 0 , 5 , move ua , 3 / 2 
[5409] ( move ua , 0 ; move ul , 2 ; loop 0 , 3 , move v0 , ul ) 
[5410] ( move ua , 3 * 2 ; move 3 , ul ; v0 = 2 ) 
[5411] ( move 2 / ua , ul ; move ua , 2 ) 
[5412] ( loop 0 , 6 , move ul , ua ; move ua , v0 + v0 ) 
[5413] ( move ul , ul / 3 ; loop 0 , 5 , move 4 , ul ) 
[5414] ( loop 1 , 5 , move ul , ul ; move v1 + ul , ua - v1 ) 
[5415] ( move ua , 2 ; loop 0 , 6 , move v0 , 2 ) 
[5416] loop 0 , 3 , ( move v0 + ul , v0 ; move 3 , ul ) 
[5417] loop 0 , 2 , move 3 - v0 , ua - 2 
[5418] ( move ul - ua , ua ; move 3 - ua , 2 ) 
[5419] loop 0 , 4 , move v0 * v0 , 0 - 3 
[5420] ( loop 0 , 5 , move v0 , v0 * v0 ; move ul , ul ) 
[5421] ( loop 0 , 6 , move ul , ua ; move 3 + v0 , v0 ) 
[5422] loop 0 , 4 , move 4 + ul , v0 - 4 
[5423] loop 0 , 2 , ( move v0 , v0 ; move ua - ul , 4 ) 
[5424] ( move 4 , ul ; move 3 , 3 ; move ua , ua - ul ) 
[5425] ( loop 0 , 4 , move ul , ul ; move v0 + ul , 3 * 2 ) 
[5426] ( move 4 , 0 ; v0 = 2 ; loop 1 , 3 , move v0 , v0 ) 
[5427] loop 0 , 3 , ( move v0 , v0 ; move ua / v0 , v0 ) 
[5428] loop 0 , 5 , move 4 / 3 , ul 
[5429] loop 0 , 3 , move 4 - v0 , 2 
[5430] ( loop 0 , 6 , move ua - 4 , v0 ; move ua , v0 ) 
[5431] loop 0 , 7 , move 4 - v0 , v0 - 3 
[5432] ( move ua - ul , ul ; move 3 , 4 + ul ) 
[5433] loop 0 , 7 , move v0 - 2 , ul + v0 
[5434] loop 0 , 4 , move ua - 4 , 3 + 2 
[5435] loop 0 , 7 , move 2 - v0 , 2 
[5436] ( move ul , ua + 2 ; loop 0 , 5 , move 3 , v0 ) 
[5437] ( move 2 , ul ; move ua + ul , ul / 2 ) 
[5438] loop 0 , 7 , move ul - 3 , v0 / 3 
[5439] ( move ua , ul ; move ul / 2 , ul - ua ; move ua , 2 ) 
[5440] ( move ua - ul , 0 ; move ul - ua , 4 ) 
[5441] ( move 0 - ua , ul ; loop 0 , 6 , move ul , ul ) 
[5442] loop 0 , 5 , move 3 , v0 - 2 
[5443] ( move 2 , ua ; loop 0 , 4 , move v0 , 3 + v0 ) 
[5444] ( move ua , ua ; move ul , 2 ; move ua , 3 - ul ) 
[5445] ( move 4 , ul / ua ; move 4 + ul , ul ) 
[5446] ( move 2 , ua - 3 ; move 4 , ua - ul ) 
[5447] loop 0 , 3 , ( move v0 , v0 ; move v0 , 2 * v0 ) 
[5448] loop 0 , 2 , move v0 - ua , ua * ua 
[5449] loop 0 , 7 , move ul - v0 , v0 / 2 
[5450] ( move 2 / 4 , ul ; loop 0 , 5 , move v0 , v0 * v0 ) 
[5451] loop 0 , 3 , ( move v0 , v0 ; move 3 , v0 ) 
[5452] ( move ul , 2 ; loop 0 , 4 , move v0 , 2 ) 
[5453] ( move 4 + ul , 3 ; move 4 , 4 * 2 ) 
[5454] ( move ul - ua , 3 ; move ua - ul , ua + ul ) 
[5455] ( move ua , ul / 2 ; move ua , 2 ) 
[5456] ( loop 0 , 5 , move ul , v0 / ua ; move v0 , v0 ) 
[5457] ( move 0 , 4 ; loop 0 , 4 , move 4 , v0 ) 
[5458] ( loop 0 , 5 , move 2 , v0 ; move ua , v0 ) 
[5459] loop 0 , 3 , ( move v0 , v0 ; move 4 , v0 ) 
[5460] ( move ua / 4 , ua + 3 ; move 3 , ul ) 
[5461] loop 0 , 6 , move ua - 2 , ul - v0 
[5462] loop 0 , 4 , move ul + v0 , ul / ua 
[5463] ( move ua + 3 , 4 + ul ; move ul + ul , ua - 4 ) 
[5464] ( move 2 , ul ; move ua , 0 - 4 ) 
[5465] ( loop 0 , 4 , move v0 , ul ; move 3 , ul ) 
[5466] ( move ua , 3 ; move ul , ua - 2 ; move 4 , 0 ) 
[5467] ( move ul , ua + ul ; move ua , ul ; move 4 , ua - 2 ) 
[5468] loop 0 , 3 , ( move ul , ul ; move ua + ul , v0 ) 
[5469] ( move ua - ul , ua + ul ; loop 0 , 6 , move 2 , v0 ) 
[5470] ( move ul , 3 + 2 ; move ua , 2 ) 
[5471] ( move ua + 2 , ul ; move ua + ul , 4 ) 
[5472] ( loop 0 , 3 , move v0 , 3 ; loop 1 , 3 , move ul , ul ) 
[5473] ( move ul , 2 ; move 2 - ua , 4 + 4 ) 
[5474] loop 0 , 4 , move v0 * v0 , ua - 4 
[5475] ( loop 0 , 6 , move ul , v0 ; move 3 , v0 ) 
[5476] ( move 2 , ul ; loop 0 , 5 , move v0 , ul - v0 ) 
[5477] ( move ua + ul , 2 ; move 3 , 2 ) 
[5478] loop 0 , 6 , move 2 - v0 , v0 + ul 
[5479] loop 0 , 3 , ( move v0 , ul + v0 ; move ua , 4 + v0 ) 
[5480] ( move ua + ul , 3 + 2 ; move 4 , 4 ) 
[5481] ( loop 0 , 6 , move v0 , ul ; move v0 , ua * ua ) 
[5482] loop 0 , 4 , move 4 - ua , 2 + v0 
[5483] ( move 4 , 3 + 3 ; loop 0 , 4 , move v0 , ua + v0 ) 
[5484] ( v0 = ul + ul ; loop 1 , 5 , move 4 , 3 / 2 ) 
[5485] loop 0 , 4 , move 2 + v0 , v0 * 4 
[5486] ( move 3 , ul ; move 4 + 3 , ul ) 
[5487] ( move ul - 3 , 4 ; move 4 , 2 ) 
[5488] ( v0 = ua - ul ; move v0 , ua - ul ; move 3 , 4 + 3 ) 
[5489] loop 0 , 2 , move ua - v0 , 4 + v0 
[5490] ( v0 = 3 / ua ; loop 1 , 6 , move ul / v0 , v0 ) 
[5491] ( loop 0 , 6 , move v0 , 3 ; move v0 , ul ) 
[5492] ( move ul , ua / 4 ; move ua , ua + ul ; move ua , ul + ul ) 
[5493] ( move ua - ul , ua ; move ua / 3 , 4 / ua ) 
[5494] ( loop 0 , 4 , move v0 , ua + 4 ; move ua , ul ) 
[5495] loop 0 , 2 , loop 1 , 2 , move ua - v1 , 2 
[5496] ( move ua , 0 ; loop 0 , 5 , move v0 , 3 ) 
[5497] ( move ua - ul , ul ; move ua , ua - 2 ; move 2 , ua ) 
[5498] ( move 3 , 3 * 2 ; move ua , ul ) 
[5499] loop 0 , 7 , move v0 , 4 / 3 
[5500] ( move ua , ul ; move 2 + ul , ul ; move 4 + ul , 2 ) 
[5501] ( move ua , 4 ; move 4 + ul , ua - 3 ) 
[5502] loop 0 , 6 , move 0 - ul , 2 / v0 
[5503] ( move 0 - ua , 0 ; loop 0 , 5 , move 3 / 2 , v0 ) 
[5504] loop 0 , 3 , move 4 - v0 , v0 / 3 
[5505] ( move ua , 2 ; loop 0 , 6 , move v0 , v0 ) 
[5506] ( move 3 - ua , ul / 2 ; move ua + 2 , ua * ua ) 
[5507] ( loop 2 , 6 , move 2 , ua - 3 ; move v2 , ul ) 
[5508] loop 0 , 4 , move ua - 2 , ul 
[5509] ( move 4 - ua , ul ; move 4 , ul ; move 3 + ul , ul ) 
[5510] ( loop 0 , 6 , move v0 , ul ; move ua - v0 , v0 ) 
[5511] ( move ua , ul / ua ; v0 = 4 ; move v0 , v0 + v0 ) 
[5512] loop 0 , 2 , loop 1 , 3 , move ul - 4 , v1 
[5513] ( move 4 + ul , ul ; move 3 , 2 ) 
[5514] ( move 2 , ua ; ( move 4 , 2 / 4 ; move ua , ua + ul ) ) 
[5515] ( move ua , ua / 4 ; move ua - ul , 2 ) 
[5516] ( move 4 , ua * ua ; loop 0 , 6 , move v0 , v0 ) 
[5517] loop 0 , 3 , ( move ua , 2 ; move 2 , ul ) 
[5518] ( move 3 , ua ; loop 0 , 4 , move v0 , 3 ) 
[5519] ( move 3 , 3 ; ( move 0 - ua , ua / 4 ; move 3 , ul ) ) 
[5520] loop 0 , 3 , move ul - 3 , 4 * 2 
[5521] ( move ul , 0 ; loop 0 , 4 , move v0 , 2 - 4 ) 
[5522] ( move ua + ul , ua ; move ul , ul ; move 0 - ua , 4 ) 
[5523] ( move 2 , ul ; move 4 , 2 ; move ua , 4 ) 
[5524] ( move 4 , 4 + 2 ; move ua , ua / 4 ) 
[5525] ( move ul , ul ; move ul , ul ; move 4 , ul ) 
[5526] ( move ua - 2 , ua - ul ; move ua , ul ) 
[5527] loop 0 , 3 , loop 1 , 2 , move 2 , v0 - 2 
[5528] ( loop 0 , 6 , move ul - 3 , ua - v0 ; move v0 , ua ) 
[5529] loop 0 , 6 , move v0 - 2 , ul / v0 
[5530] loop 0 , 7 , move ul - 3 , ua / v0 
[5531] loop 0 , 3 , ( move v0 , ul / ua ; move v0 , ul ) 
[5532] ( ( move 2 , ul ; move ua , ua * ua ) ; move ua , ua * ua ) 
[5533] ( move 3 , ul / ua ; loop 0 , 5 , move v0 , v0 / ua ) 
[5534] ( move ua , 4 ; move 2 + ul , ul - 3 ) 
[5535] ( v0 = 4 ; move v0 , v0 + 3 ; move ua , v0 ) 
[5536] loop 0 , 3 , move 4 / v0 , ua - ul 
[5537] ( move 3 / 2 , 4 ; loop 0 , 4 , move 3 , ua + ul ) 
[5538] ( move ul , 3 * 2 ; loop 0 , 4 , move v0 , v0 * v0 ) 
[5539] ( move 3 , ul ; loop 0 , 6 , move v0 - 2 , 4 ) 
[5540] ( loop 0 , 4 , move 3 , ul / v0 ; move v0 , ul ) 
[5541] ( move 2 + ul , 4 ; move ua , ua / 4 ) 
[5542] ( move 2 , ua - 4 ; move ua - 2 , ul ) 
[5543] ( move ua , ul / ua ; loop 0 , 6 , move v0 , ul ) 
[5544] ( loop 0 , 4 , move v0 - ua , 3 ; move v0 , v0 ) 
[5545] ( move ua - ul , ua ; move ua , ua * ua ) 
[5546] ( move 0 - 3 , 4 ; move ua + 3 , ul ) 
[5547] ( move 2 , ul ; move ul , ua + ul ; move ua , 3 - ua ) 
[5548] ( move 4 , ua - 4 ; move ua , 4 + ul ) 
[5549] loop 0 , 6 , move 0 - 4 , v0 
[5550] ( loop 0 , 6 , move ul , v0 ; move v0 , v0 - ul ) 
[5551] ( move 4 , ua - 2 ; move 3 , ul ) 
[5552] ( move 3 - ua , ua * ua ; move ua , ua + 4 ) 
[5553] ( move ul , ul / 4 ; ( move ul , ua + ul ; move ua , ul ) ) 
[5554] loop 0 , 7 , move v0 - 3 , 2 
[5555] ( loop 0 , 5 , move 4 , v0 ; move ul , ul ; move v0 , 0 ) 
[5556] ( move 3 , ua + 3 ; move 3 , 4 / 3 ) 
[5557] ( move 2 , 3 ; move ua + 4 , ul ; move 4 , 2 ) 
[5558] ( move 2 , ua ; move ua + 3 , 4 ) 
[5559] ( move ul , 0 ; move ul - 3 , ul / ua ; move ua , ul ) 
[5560] ( move ua , ul / 3 ; move ua , 4 ) 
[5561] loop 0 , 5 , move 4 + ul , ua - v0 
[5562] loop 0 , 4 , move 2 , v0 - 4 
[5563] ( move 4 , 0 ; move ua , ul - 3 ) 
[5564] ( move ul + ul , 4 - ul ; move 4 + ul , 0 - ul ) 
[5565] ( move ul - ua , 2 ; v0 = 4 + 3 ; move v0 , v0 ) 
[5566] ( move ua , ua ; loop 0 , 3 , move v0 + ul , v0 ) 
[5567] ( move ul - 3 , 4 / ua ; move ua , 3 ) 
[5568] ( move ua + 3 , 2 ; move 4 - ul , ul ) 
[5569] ( loop 0 , 3 , move ul , 3 - ua ; move ua + v0 , 4 ) 
[5570] ( move 2 , ul ; move ua , ul ; move ul , 2 ) 
[5571] ( move 2 , 4 ; move ul - ua , ua * ua ) 
[5572] ( loop 0 , 4 , move v0 , v0 ; move ua - ul , 2 + v0 ) 
[5573] ( move ua , 3 ; move ua - 4 , 2 ) 
[5574] loop 0 , 6 , ( v1 = ul + v0 ; move v1 , v1 + 4 ) 
[5575] ( move 2 - ua , 0 ; v0 = 4 + ul ; move v0 , v0 ) 
[5576] ( move 2 , 2 ; loop 0 , 3 , move ul , ul ) 
[5577] ( move ul , 0 - 2 ; move ua , ul ) 
[5578] loop 0 , 3 , ( move v0 , v0 ; move v0 , v0 * v0 ) 
[5579] ( move 3 , 2 / ua ; move 4 - ul , ul ) 
[5580] ( move ul / ua , ua - 2 ; loop 1 , 5 , move ul - 4 , ul ) 
[5581] loop 0 , 3 , ( move v0 , ul - v0 ; move v0 , v0 ) 
[5582] loop 0 , 7 , move ul - 3 , v0 + v0 
[5583] ( move ua - ul , ul ; loop 0 , 6 , move v0 , v0 ) 
[5584] ( ( move 0 , ul + ul ; move ua , 3 ) ; move ua , ua * ua ) 
[5585] ( move ua - ul , 3 + 2 ; move ua , 4 ) 
[5586] ( move ua + ul , 3 / 4 ; move 4 , ul ) 
[5587] ( move 2 , ul ; loop 0 , 4 , move v0 , ul - v0 ) 
[5588] ( move 3 , ul ; move ua - ul , ua - 4 ) 
[5589] ( move 3 , ua ; move ul , ul ; move ua , 3 + ul ) 
[5590] loop 0 , 3 , move v0 - 4 , v0 - 2 
[5591] ( move 4 / 3 , 4 ; move ua , 2 ) 
[5592] loop 0 , 3 , ( move 0 , v0 ; move v0 + ua , 3 / v0 ) 
[5593] loop 0 , 3 , move v0 + ul , ua / 4 
[5594] loop 0 , 3 , move 4 + 2 , ul - 3 
[5595] ( move 3 * 3 , ua ; move ua , 2 ) 
[5596] loop 0 , 4 , move 4 , v0 
[5597] loop 0 , 3 , ( move v0 , 2 ; move 2 , v0 ) 
[5598] ( move 0 , ul ; loop 0 , 6 , move v0 , 4 ) 
[5599] ( move ul , ul ; move 4 , ul ; move ul , ul ) 
[5600] loop 0 , 3 , loop 1 , 2 , move ua / v0 , 4 - v1 
[5601] ( move 2 , ul ; loop 0 , 6 , move 4 , v0 ) 
[5602] loop 0 , 3 , ( move ul , v0 * 2 ; move v0 , v0 ) 
[5603] ( loop 0 , 2 , move 4 , ul ; move ua , ua * ua ) 
[5604] loop 0 , 3 , move v0 + 3 , ul - v0 
[5605] ( move ul - ua , 0 - ul ; loop 0 , 6 , move v0 , 4 ) 
[5606] ( move 3 - ua , ua ; move 2 , ul ) 
[5607] ( move 2 , ua + ul ; move 4 , 4 + 4 ) 
[5608] ( move ul , 4 ; loop 0 , 3 , move v0 + ul , v0 - ua ) 
[5609] ( move 0 , ul ; loop 0 , 5 , move ua , 3 ) 
[5610] loop 0 , 7 , move ua / 2 , 2 - 3 
[5611] ( loop 0 , 9 , v1 = 0 ; move v0 , v0 / 4 ) 
[5612] ( move ua + ul , 2 ; move 3 , ua * ua ) 
[5613] loop 0 , 6 , move v0 - ul , ua / v0 
[5614] ( loop 0 , 6 , move v0 , 3 ; move ua , ul / v0 ) 
[5615] ( move 4 - ua , 3 ; move ua + ul , ul ) 
[5616] ( move 0 - ua , 3 ; move 4 , 4 / ua ; move ua - ul , ua ) 
[5617] ( move ul , ua + 4 ; loop 0 , 6 , move 2 , v0 * 3 ) 
[5618] ( move 3 , 3 ; loop 0 , 5 , move v0 , ul ) 
[5619] ( move 3 , ua / 3 ; move 4 + ul , 2 ) 
[5620] loop 0 , 6 , loop 1 , ul , move v1 - v0 , ul 
[5621] ( move ul - ua , ua ; move 4 + ul , 4 ) 
[5622] ( move ua , ul ; loop 0 , 3 , move v0 , 2 ) 
[5623] ( move ua , 4 / ua ; move ul , ul ) 
[5624] ( move 4 - ua , 4 ; move ua + ul , ul ) 
[5625] ( move ua , ul / 4 ; loop 0 , 3 , move v0 * v0 , ul ) 
[5626] ( move 3 , 4 / 3 ; move ul + ul , 0 - ul ) 
[5627] ( loop 0 , 5 , move v0 , ul ; move 2 , ul ) 
[5628] ( move 2 , ua - ul ; move ul , 2 / 3 ; move 4 , ua ) 
[5629] ( move ul , ul ; loop 0 , 6 , move 4 , v0 ) 
[5630] ( move 3 , 2 ; loop 0 , 5 , move 3 - v0 , v0 ) 
[5631] ( move ua + ul , 3 ; move ua - 2 , ul + ul ) 
[5632] ( move ua + ul , ua ; move 4 + 2 , ua / 4 ) 
[5633] ( move ul , 3 / ua ; move ul , 0 ; move ua , ua - ul ) 
[5634] loop 0 , 7 , move 4 - v0 , v0 + 4 
[5635] ( move ua + 4 , ul ; move 2 , 4 ) 
[5636] ( move ul - ua , ua ; move 3 , ua - 4 ) 
[5637] ( loop 0 , 6 , move v0 + ul , v0 ; move v0 , v0 ) 
[5638] loop 0 , 2 , ( move v0 , ua / 3 ; move ua / v0 , v0 ) 
[5639] ( loop 0 , 5 , move 2 , 4 ; move v0 , v0 ) 
[5640] ( move ua , 2 - ua ; move ua + ul , ua - 4 ) 
[5641] ( move ua , 2 ; move 3 , ua - 2 ) 
[5642] loop 0 , 3 , ( move v0 , v0 ; move v0 - ua , ul ) 
[5643] ( loop 0 , 5 , move ul , v0 ; move ua + ul , v0 ) 
[5644] loop 0 , 3 , ( move v0 , ul ; move 3 / v0 , v0 ) 
[5645] ( move 3 , 4 ; move ua , 4 + 4 ) 
[5646] ( move ul , ul ; move ua , 2 / 3 ; move ul , ul ) 
[5647] ( move ul - ua , 4 ; loop 0 , 4 , move v0 , ua + 2 ) 
[5648] ( loop 0 , 6 , move ul , ul ; move ua , v0 ) 
[5649] ( v0 = 4 ; move v0 , v0 + v0 ; move ua , ul ) 
[5650] ( move ua - 2 , ul ; ( move 2 , ul ; move ua , 4 ) ) 
[5651] ( move ul , 3 ; loop 0 , 6 , move v0 , v0 - 2 ) 
[5652] ( move ua , 4 ; move ul - ua , ua * ua ; move ua - 2 , ul ) 
[5653] ( move 4 , ul ; ( move ul + ul , ul ; move ua , ua * ua ) ) 
[5654] ( move ua , ua ; move ul , ul ; move 3 , 4 ) 
[5655] loop 0 , 6 , move 4 , v0 / 2 
[5656] ( move ua - ul , ua * ua ; move 4 , ul ; v0 = ua ) 
[5657] ( move 0 - ua , ua ; move 3 , ua + ul ) 
[5658] ( move ul - ua , 0 ; move ua , 0 - ul ) 
[5659] ( v0 = ua - 2 ; loop 1 , 3 , move v1 * v0 , v1 ) 
[5660] ( move ua , ua ; move ul - ua , ua / 3 ) 
[5661] ( move ua + 3 , 4 + ul ; move ua , 4 ) 
[5662] ( move 4 , 2 ; loop 0 , 6 , move ul , v0 ) 
[5663] loop 0 , 7 , move ua / 2 , v0 * v0 
[5664] loop 0 , 3 , ( move v0 , v0 ; loop 1 , ul , move 3 , 3 ) 
[5665] ( move ua - ul , ua ; loop 0 , 5 , move 2 , 2 ) 
[5666] ( move ua + ul , ua / 2 ; move 2 - ua , ul ) 
[5667] ( move 0 - 3 , 4 / 3 ; move ua , 3 ) 
[5668] ( move ua , ul ; loop 0 , 6 , move 2 , v0 ) 
[5669] ( move ua , ul ; loop 0 , 5 , move 3 , 3 / v0 ) 
[5670] loop 0 , 2 , ( move ul + ul , v0 ; move ua , 2 ) 
[5671] ( move ul , ul ; loop 0 , 6 , move ua , 2 ) 
[5672] loop 0 , 2 , ( move 3 , v0 + 3 ; move ua * v0 , v0 ) 
[5673] ( move ua , ul / 3 ; move ua - 4 , ua * ua ) 
[5674] loop 0 , 3 , move 4 + v0 , ua - v0 
[5675] ( loop 0 , 4 , move 4 - v0 , v0 ; move 3 , v0 ) 
[5676] ( move ul , ul ; loop 0 , 5 , move v0 - 4 , ul ) 
[5677] loop 0 , 4 , move 3 - ua , ua - v0 
[5678] ( move 3 , ul ; loop 0 , 5 , move 2 , ul ) 
[5679] loop 0 , 3 , ( move ul - 4 , ul ; move ul , ua ; v1 = ul ) 
[5680] loop 0 , 3 , move 3 + v0 , v0 * v0 
[5681] ( v0 = 4 + ul ; ( move v0 , ul ; move ua , v0 ) ) 
[5682] ( move ua , ul ; move ul - ua , ua * ua ) 
[5683] ( move 3 , ua ; move ua - ul , 3 + 3 ) 
[5684] ( move 0 - 4 , ua ; move ul - ua , ul ; move ua , ua ) 
[5685] ( move ua , 0 ; loop 0 , 5 , move v0 , ul + v0 ) 
[5686] loop 0 , 7 , move 2 , 4 * 3 
[5687] ( loop 0 , 4 , move ul , ua * ua ; move 4 , v0 ) 
[5688] ( move ua - ul , ul ; move ua + ul , 2 ) 
[5689] ( move 3 , 3 - ul ; move ua + ul , 4 * 2 ) 
[5690] loop 0 , 3 , ( move v0 , v0 / ua ; move 3 - v0 , ul ) 
[5691] ( move ul , ul ; loop 0 , 4 , move v0 * v0 , v0 ) 
[5692] ( loop 0 , 3 , move ul - 4 , v0 ; move ua , 0 ) 
[5693] ( move 2 - 4 , 0 ; move 4 + ul , ul ) 
[5694] ( move ua - ul , ul ; loop 0 , 4 , move v0 , v0 ) 
[5695] loop 0 , 3 , ( move v0 , ul - v0 ; move ul , ul ) 
[5696] loop 0 , 2 , ( move ul , 3 ; loop 1 , 2 , move 2 , v1 ) 
[5697] loop 0 , 5 , move ua - v0 , 0 - 3 
[5698] ( loop 0 , 4 , move ul , v0 * v0 ; move ua , ul ) 
[5699] ( move 4 , 3 ; move ul / 4 , ul - ua ; move ua , ul ) 
[5700] ( loop 0 , 5 , move 2 , ua - v0 ; move v0 , v0 ) 
[5701] loop 0 , 4 , move ul + v0 , ul / 4 
[5702] loop 0 , 4 , move 3 + v0 , ua / v0 
[5703] ( move 0 , ul / 3 ; loop 0 , 6 , move v0 , 2 ) 
[5704] loop 0 , 2 , ( move ul - v0 , v0 ; move 2 - ua , 4 ) 
[5705] ( move ul , 4 ; loop 0 , 5 , move v0 , 2 - v0 ) 
[5706] ( move 4 , ul - 2 ; move ua , ul / ua ) 
[5707] ( move ua , 3 / 2 ; move 2 , ul - 3 ; v2 = ul ) 
[5708] ( move ua , 4 + ul ; loop 0 , 2 , move 3 + ul , ul ) 
[5709] loop 0 , 6 , move 2 - v0 , 2 * v0 
[5710] loop 0 , 3 , ( move ul + ul , v0 ; move ul , v0 - ul ) 
[5711] ( loop 0 , 3 , move v0 , 3 / v0 ; move ua , v0 ) 
[5712] ( loop 0 , 5 , move v0 , 2 / 3 ; move 4 , v0 ) 
[5713] loop 0 , 7 , move v0 , 4 * 2 
[5714] ( loop 0 , 4 , move ul , 4 + ul ; move ul , ul ) 
[5715] ( move 3 + 3 , ua + ul ; move ua + ul , 2 ) 
[5716] ( move 3 , 2 ; move ua , 4 / ua ) 
[5717] ( move 2 , 2 ; move ua , 3 ) 
[5718] ( move ua , 3 ; loop 0 , 5 , move v0 , v0 ) 
[5719] loop 0 , 5 , move v0 + 2 , 4 * v0 
[5720] ( move ul - ua , ul ; move 3 , 4 ) 
[5721] loop 0 , 3 , loop 1 , 2 , move v0 + ul , v1 
[5722] loop 0 , 3 , move v0 + 2 , 2 / 4 
[5723] ( move 3 + 2 , 4 ; loop 0 , 5 , move ul , v0 + v0 ) 
[5724] loop 0 , 3 , ( move 3 , ul ; move ul , v0 ) 
[5725] loop 0 , 2 , move 3 , ua / 3 
[5726] ( ( move 4 , 3 ; move ua , 4 ) ; move ul , ul ) 
[5727] ( move ua , ua / 2 ; move 4 , 4 ) 
[5728] ( move ua + 2 , 2 ; move 4 , ul ) 
[5729] loop 0 , 3 , ( move ul - v0 , 0 ; move ua + ul , 3 ) 
[5730] ( move 0 , ul ; move ua + 3 , ua ; move 4 * 2 , ul + ul ) 
[5731] ( move ul , 4 + 2 ; move ua , 4 ) 
[5732] ( loop 0 , 6 , move 2 , v0 / ua ; move ul , ua ) 
[5733] loop 0 , 2 , ( move v0 , 3 ; move ua , ul ) 
[5734] loop 0 , 5 , ( v1 = 4 - v0 ; move v1 , v1 + 3 ) 
[5735] ( move 3 , ul / ua ; loop 0 , 5 , move ua , 4 ) 
[5736] ( move 4 + ul , ul ; move ua , ua * ua ) 
[5737] ( move 3 , ua + ul ; ( move 2 , 3 ; move ua - ul , ul ) ) 
[5738] ( move ul , 3 ; loop 0 , 6 , move 4 , 4 - 3 ) 
[5739] ( move ua , 4 + ul ; move ua + ul , 4 ) 
[5740] ( loop 0 , 4 , move v0 , 3 ; loop 1 , 3 , move v1 , ul ) 
[5741] ( move ua , 4 + ul ; move ua - ul , ul ) 
[5742] ( loop 0 , 4 , move v0 , 2 - ua ; move v0 , ua * ua ) 
[5743] ( move 3 , 4 + ul ; move ua + 4 , 2 ) 
[5744] loop 0 , 3 , ( v1 = ul ; move 4 , ul ; move v1 , v0 ) 
[5745] loop 0 , 3 , ( move v0 , ul ; move ua - v0 , v0 ) 
[5746] ( move 0 - 3 , ul ; loop 0 , 4 , move v0 , ul ) 
[5747] loop 0 , 6 , move v0 - ul , 3 - v0 
[5748] ( move ua , 0 - ul ; move ua + ul , 3 ) 
[5749] loop 0 , 7 , move 3 - v0 , v0 + v0 
[5750] ( ( move ul , 4 ; move ua , 3 ) ; move 0 - ua , ul - ua ) 
[5751] ( move 3 + ul , ua ; move 3 , ua + ul ; move 2 , ul ) 
[5752] ( move ua , 3 + 3 ; v0 = ua - ul ; move v0 , v0 ) 
[5753] ( move 0 - 4 , ul ; move 4 , ul ) 
[5754] ( move 3 , 4 * 3 ; move ua , ul ) 
[5755] ( move 4 , 0 ; move ua , 2 - 4 ; move ul , ul ) 
[5756] ( move ul - ua , ul ; move 3 , 2 ; move ul , ua + ul ) 
[5757] loop 0 , 4 , move ua / v0 , 3 + v0 
[5758] loop 0 , 7 , move 2 , 4 / ua 
[5759] loop 0 , 4 , move v0 + ul , v0 / 3 
[5760] ( move 4 , 4 ; loop 1 , 3 , move ua - 4 , ul ) 
[5761] ( move 0 , ul / ua ; loop 0 , 5 , move ul + v0 , v0 ) 
[5762] loop 0 , 3 , ( move v0 + 2 , v0 ; move 4 , v0 ) 
[5763] ( move 3 , 4 ; move ul , 4 ; loop 0 , 3 , move v0 , 4 ) 
[5764] loop 0 , 3 , ( move 2 , v0 ; move 0 - ul , 0 ) 
[5765] loop 0 , 3 , loop 1 , 2 , move 4 , ul + v1 
[5766] loop 0 , 4 , move v0 - 4 , 2 - v0 
[5767] ( move ul , ul ; loop 0 , 3 , move ua , ul + v0 ) 
[5768] ( ( move ul , 4 ; move ul , ul ) ; move ua + 2 , ul ) 
[5769] ( move 4 + ul , ua ; loop 0 , 4 , move v0 , v0 ) 
[5770] ( move 3 - ul , 3 ; move ua + 3 , ul ) 
[5771] loop 0 , 2 , loop 1 , 3 , move v1 * v1 , v0 
[5772] ( v0 = 4 * 2 ; move ua , v0 ; move 3 , v0 ) 
[5773] loop 0 , 3 , ( move ua , v0 + ul ; move v0 , ul ) 
[5774] ( move ua + ul , ul - 3 ; move ua , 3 ) 
[5775] ( move 4 , ul ; move 3 , ul ; move 4 , 4 ) 
[5776] ( ( move 3 , ul / ua ; move ul , ul ) ; move ua + ul , ul ) 
[5777] ( move 4 + ul , 3 ; move 3 , 2 ) 
[5778] loop 0 , 7 , move ua / 2 , ua / v0 
[5779] loop 0 , 3 , move 2 - ua , 2 * v0 
[5780] ( v0 = 2 - ua ; move v0 , v0 ; move v0 , v0 ) 
[5781] ( move 4 + 3 , ua ; move ul , ua + ul ; move ua , 2 ) 
[5782] ( move 4 , ul ; loop 0 , 6 , move ul - v0 , ul ) 
[5783] loop 0 , 6 , move 3 / v0 , v0 / ua 
[5784] loop 0 , 3 , move ua - 3 , v0 * v0 
[5785] loop 0 , 4 , move 4 / v0 , v0 + v0 
[5786] ( move ua , 4 / ua ; move 4 + ul , 2 - ua ) 
[5787] ( move ua , ua + ul ; move ul , ul ; move 3 , ul ) 
[5788] ( move 0 , 2 ; move ua , ul / 3 ) 
[5789] ( move 4 , 3 + ul ; move ua , 4 * 2 ) 
[5790] ( move 3 , ul ; move ua + 3 , ua - 2 ) 
[5791] ( loop 0 , 5 , move v0 , ul ; move ua , 3 - ul ) 
[5792] ( move ua , 3 - ul ; move 3 , 4 / ua ) 
[5793] ( loop 0 , 5 , move ul , v0 ; move v0 * 2 , v0 ) 
[5794] ( move 4 , 4 ; move ua , ua / 4 ; v0 = 3 ) 
[5795] ( move ua , 0 ; loop 0 , 5 , move ul , ul - v0 ) 
[5796] loop 0 , 3 , ( move 2 , 2 ; move v0 , v0 ) 
[5797] ( move ua , 4 / ua ; move 3 , 2 ) 
[5798] ( move ua - ul , ul ; move 2 + 2 , 3 / ua ) 
[5799] loop 0 , 7 , move 4 - v0 , v0 * 2 
[5800] loop 0 , 3 , move 4 - v0 , 0 - ul 
[5801] ( move ua + ul , ua - ul ; move 4 , ul ) 
[5802] ( move 3 , ul / 4 ; move ul - ua , ul ) 
[5803] ( move ua / 2 , ul ; ( move ua , ul ; move 3 , ul ) ) 
[5804] ( loop 0 , 3 , move 4 , ul ; move ul , ua ) 
[5805] ( move 3 + 2 , ul ; v0 = 2 ; move 4 + ul , 3 * v0 ) 
[5806] ( move ua + ul , ua ; move ua - ul , 4 ) 
[5807] ( move 3 , 0 ; move 3 , 4 / ua ) 
[5808] ( move ua , 2 ; move ua / 2 , ul / 2 ) 
[5809] ( move ul - ua , ul ; move 4 + 3 , ul - 2 ) 
[5810] ( move 2 , 0 ; move ul , ul - 3 ; move ua , ua + ul ) 
[5811] ( loop 0 , 6 , move ul , v0 ; move ul - ua , v0 ) 
[5812] ( move 2 - ua , 2 / ua ; move ua , ul ) 
[5813] ( move ul - ua , ul ; move 3 , 4 * 2 ) 
[5814] ( move 4 , ul ; move ul - 4 , ul ; move ul , 4 ) 
[5815] ( move 2 - ua , 0 ; move 2 , 4 ) 
[5816] ( move 3 , ul ; loop 0 , 6 , move v0 , 4 ) 
[5817] ( move 4 + ul , 0 ; loop 0 , 3 , move 0 - 2 , ul + ul ) 
[5818] loop 0 , 2 , move v0 - 4 , ul / ua 
[5819] ( move ua + 2 , ua + ua ; move 4 , ua + 2 ) 
[5820] ( loop 0 , 6 , move 2 , ul ; move ua , 0 ) 
[5821] loop 0 , 4 , move 4 / v0 , ul - 2 
[5822] ( move 3 , ua ; move ua , ua / 4 ) 
[5823] loop 0 , 3 , move 4 , 0 - 3 
[5824] loop 0 , 3 , ( move v0 , ua - v0 ; move v0 , ul ) 
[5825] ( move 3 , ul ; move 4 , ua * ua ) 
[5826] loop 0 , 3 , ( move 3 - ul , ua + 3 ; move ul , ul ) 
[5827] ( v0 = ua + ul ; loop 1 , 4 , move 3 , v0 / 3 ) 
[5828] ( move ua , ul ; loop 0 , 3 , move v0 + 3 , 3 ) 
[5829] ( loop 0 , 5 , move ul , 2 ; move ua , 0 ) 
[5830] ( loop 0 , 3 , move 4 , v0 ; move 2 , ua - v0 ) 
[5831] ( move 4 , ul ; move 4 + ul , 2 ) 
[5832] ( loop 0 , 4 , move ul , v0 ; move v0 * v0 , 3 ) 
[5833] ( ( move 4 , 2 ; move ua , 2 ) ; move 3 , ua ) 
[5834] ( move ua + ul , ua - 2 ; move ua , 2 ) 
[5835] loop 0 , 4 , move 3 , v0 - 4 
[5836] loop 0 , 6 , move ul , 3 / v0 
[5837] loop 0 , 2 , ( move ua + ul , ul ; move v0 , ul ) 
[5838] ( move ua , ua ; move 2 , 4 + 3 ) 
[5839] ( move ua + 4 , 4 / ua ; v0 = ul - ua ; move v0 , ul ) 
[5840] ( loop 0 , 4 , move 2 , v0 - ul ; move v0 , v0 ) 
[5841] ( move 3 * 3 , ul ; move ul , ul ) 
[5842] ( move ul , 2 ; ( move ua , 2 ; move ul , ul ) ) 
[5843] ( move ua + ul , 2 ; move ul / 3 , 2 ; move 3 , ul ) 
[5844] move 4 * 3 , 3 / 4 
[5845] ( loop 0 , 6 , move 2 , ul ; move v0 , v0 ) 
[5846] loop 0 , 4 , move 3 * v0 , v0 - ul 
[5847] ( move ua - ul , 0 - 3 ; move ua , 4 ) 
[5848] loop 0 , 4 , move ua - v0 , 4 / v0 
[5849] loop 0 , 4 , move 2 - v0 , v0 
[5850] ( move ua , ua / 4 ; move ua + ul , 2 ; v0 = ua + ua ) 
[5851] ( move ua , ul ; loop 0 , 4 , move 3 + v0 , 4 ) 
[5852] ( move 3 , 3 + ul ; move ua , ul ; move 4 , 2 ) 
[5853] loop 0 , 7 , move 3 , v0 - ul 
[5854] ( move 3 , 4 * 2 ; move ua , ul / 4 ) 
[5855] ( move 4 + ul , ua + ul ; loop 0 , 3 , move v0 + ul , ul ) 
[5856] ( move ua , 4 + ul ; move 3 , 2 ) 
[5857] ( move 4 , 2 ; move ul , ua + ul ; move ua + ul , ua * ua ) 
[5858] ( v0 = ul / ua ; loop 1 , 5 , move 3 , v0 + v1 ) 
[5859] ( v0 = ua ; move v0 , v0 ; loop 1 , 6 , move 2 , 4 ) 
[5860] loop 0 , 2 , ( move 4 , v0 ; move 3 , ul ) 
[5861] loop 0 , 4 , move 3 - ua , v0 * v0 
[5862] ( move ua , ul / 4 ; move 2 - 4 , 3 / 2 ) 
[5863] ( move 0 - ua , ul ; move ua - 2 , 3 ) 
[5864] ( move 3 , ul ; move 4 , 0 ; move 3 + ul , ua * ua ) 
[5865] ( loop 0 , 5 , move ul + ul , 4 ; move ul + ul , 0 ) 
[5866] ( move ua / 2 , 2 ; move 4 - ua , 2 ; move ua , 3 ) 
[5867] ( move 3 , ul / ua ; move ua + ul , 4 + ul ; v0 = ua ) 
[5868] loop 0 , 3 , ( move v0 , ul ; move v0 , v0 * v0 ) 
[5869] ( move ua , ua ; move 3 , ul ; move 2 , ul ) 
[5870] ( move 4 , 0 - ua ; move ul , ul ; move ua , 4 ) 
[5871] ( v0 = 3 - ua ; loop 1 , 4 , move 2 , v0 / ua ) 
[5872] ( move 4 , ua ; move 3 , 3 * 2 ; move 2 , 2 + ul ) 
[5873] ( move ul - 4 , ul ; move 3 , ua + ul ; move ul - ua , ua ) 
[5874] ( move 2 , 3 ; move 4 , ul / 3 ) 
[5875] loop 0 , 6 , move ul - v0 , ua - ul 
[5876] ( move 2 , ua ; move ua , ul ; move 4 , ul ) 
[5877] ( ( move 2 , ua + ul ; move 0 , 3 / ua ) ; move ua , ul ) 
[5878] ( move 3 , ua ; loop 0 , 6 , move v0 , 4 ) 
[5879] ( move ua , ua + 2 ; loop 0 , 3 , move 3 , ul ) 
[5880] loop 0 , 5 , move 2 / v0 , v0 - 3 
[5881] ( move 3 + ul , 0 ; loop 0 , 5 , move v0 , 4 ) 
[5882] ( move 2 , ua ; move 2 , ul ; move 4 , ua + ul ) 
[5883] ( move 2 - ua , ul ; loop 0 , 5 , move v0 , v0 - ul ) 
[5884] ( move 4 , 4 ; move 4 , ul ; move ul , ua - ul ) 
[5885] ( move 3 - ua , ua - ul ; move ua , ua * ua ) 
[5886] ( move 4 , 0 ; move ua , 4 + ul ) 
[5887] ( move 0 - ua , ua ; move ul - ua , 4 + ul ) 
[5888] loop 0 , 2 , ( v1 = ul ; move 0 - 3 , v1 / 2 ) 
[5889] ( move 0 , ul ; loop 0 , 5 , move v0 , 4 ) 
[5890] ( move ua , 2 / ua ; move ul , 2 ) 
[5891] loop 0 , 6 , move v0 / 2 , 2 / v0 
[5892] ( move ua , 3 / ua ; move 3 , ul ) 
[5893] ( move ua , ul / 4 ; loop 0 , 4 , move v0 , ul ) 
[5894] ( move ul , ul ; loop 0 , 4 , move v0 + v0 , v0 - ul ) 
[5895] ( move ua , 0 - ul ; move ul , ul ; move 4 , ua + ul ) 
[5896] loop 0 , 2 , move 3 , 4 + v0 
[5897] ( move ul , ua ; ( move ul , 4 ; move ul , 2 ) ; move ua , 2 ) 
[5898] ( move ua / 2 , ul ; move ul , ua - 2 ; move ul - ua , 0 ) 
[5899] ( move 2 - ua , 2 - 4 ; move ua , ul ) 
[5900] loop 3 , 4 , move 3 , 4 + 4 
[5901] ( move 0 - 4 , ul ; move ua , 2 ) 
[5902] ( move ua + ul , ul ; ( move ul , 3 - ul ; move ua , 3 ) ) 
[5903] ( move 3 + ul , ua - 2 ; move 2 , ua - ul ) 
[5904] ( move ua , ua + 3 ; loop 0 , 5 , move 4 , 4 ) 
[5905] ( move ua , ua + ul ; move 3 - ua , ul ; move ua , ul / ua ) 
[5906] ( move 2 / 4 , 4 ; move ua , 3 / ua ) 
[5907] ( loop 0 , 5 , move v0 , v0 * v0 ; move v0 , 4 ) 
[5908] ( move ul , ul ; move ua - ul , ul ; move ua , ul ) 
[5909] ( move ua + 2 , ul ; move 2 , 2 ) 
[5910] ( loop 0 , 6 , move ul , ua / v0 ; move v0 , ua ) 
[5911] ( move 3 , 2 ; move 4 + ul , ul ) 
[5912] ( move 3 , 0 - ul ; move ul , 2 ) 
[5913] loop 0 , 4 , move v0 * v0 , ua * ua 
[5914] loop 0 , 3 , move v0 + ua , ua - 3 
[5915] loop 0 , 7 , move 3 - v0 , v0 * v0 
[5916] ( v0 = 3 * 2 ; loop 1 , 6 , move v1 , v0 - v1 ) 
[5917] loop 0 , 6 , move 4 + ul , ua / 3 
[5918] ( move ua , 0 ; move ua + 3 , ul - 3 ) 
[5919] loop 0 , 3 , ( move 4 , v0 ; move ul , v0 ) 
[5920] ( move 4 , ul ; move 2 - ua , ul + ul ) 
[5921] ( loop 0 , 5 , move v0 , v0 ; move 4 , ul ) 
[5922] loop 0 , 3 , ( move 2 + v0 , ua ; move v0 , 2 ) 
[5923] ( move ua - ul , ua / 4 ; loop 0 , 3 , move v0 , ul ) 
[5924] ( move ul - ua , ul + ul ; move ua , 3 * 2 ) 
[5925] ( move ul - ua , ul - 4 ; move 3 , ul ) 
[5926] ( move ua - ul , 0 - ul ; move 4 , 3 + ul ) 
[5927] ( move ua + ul , 2 ; move ul - ua , ul ) 
[5928] ( move ua - ul , ul ; loop 0 , 4 , move v0 , 3 / ua ) 
[5929] loop 0 , 3 , ( move v0 + 3 , v0 ; move v0 , ua ) 
[5930] loop 0 , 7 , move 4 - v0 , ul + v0 
[5931] ( loop 0 , 5 , move ul , v0 / 3 ; move v0 , 3 ) 
[5932] ( move 3 + 3 , ua + 2 ; loop 0 , 5 , move ua , 3 ) 
[5933] loop 0 , ul , loop 1 , 4 , move ul - ua , 4 + ul 
[5934] ( move ua + ul , ul ; loop 0 , 5 , move v0 , v0 * v0 ) 
[5935] ( move 2 - ua , ua ; move 0 - ua , ua * ua ) 
[5936] ( move ua + ul , 2 + ul ; move 2 , ul ; move ul , ul ) 
[5937] loop 0 , 6 , move 3 + v0 , 4 
[5938] ( move ua + ul , 2 ; move 4 , ua - 3 ) 
[5939] ( move ul , 0 ; loop 0 , 5 , move v0 + 2 , v0 ) 
[5940] ( move ul - ua , ua / 3 ; move ua , ua * ua ) 
[5941] ( move ua , ua ; move 0 - 2 , 2 ) 
[5942] ( move ua , ua ; loop 0 , 5 , move 4 , ul ) 
[5943] ( move ul , ul ; move ua + 2 , ua - 2 ) 
[5944] ( move ul , ua * ua ; loop 0 , 4 , move ul + ul , 3 + v0 ) 
[5945] ( loop 0 , 5 , move v0 , v0 ; move ul + v0 , ul + ul ) 
[5946] ( ( move 2 , 3 ; move ul , 4 + ul ) ; move ua , ua ) 
[5947] ( move 0 - ua , ua * ua ; move ul , ul ; move ua , 4 ) 
[5948] ( move 2 + ul , 4 / ua ; move 3 , ul - 3 ) 
[5949] ( move ua + ul , ul ; move ua , ul + ul ; move ul , 4 ) 
[5950] ( move 4 + ul , 2 ; move 4 + ul , ul ) 
[5951] loop 0 , 2 , move ua - ul , 3 - v0 
[5952] ( loop 0 , 2 , move ua , 4 - ua ; move ul - ua , ua + ul ) 
[5953] ( loop 0 , 6 , move v0 , 3 * v0 ; move 3 , v0 ) 
[5954] ( move ul - ua , 4 ; move ua + 3 , ul ) 
[5955] ( move 3 , 4 - ua ; move ua + 3 , 2 ) 
[5956] ( move 4 + ul , ua / 4 ; move 2 , ul ) 
[5957] ( v0 = 2 - ua ; move 4 , v0 ; move v0 , v0 ) 
[5958] ( move ul - 4 , ul ; move ua - ul , 4 ) 
[5959] ( move ua - ul , 4 ; move ul , ua + 2 ; move ua , ua ) 
[5960] loop 0 , 5 , move 3 + v0 , 2 
[5961] ( move ua , 3 - ua ; move ul , ul ; move ul , 3 + ul ) 
[5962] ( move 2 , 2 ; move 2 , ul ) 
[5963] ( move ua - ul , ul ; move 4 + 2 , ua - 4 ) 
[5964] ( move ul - ua , ua * 3 ; move 3 , ul ; move ua , 3 ) 
[5965] ( move 4 , 4 ; loop 0 , 5 , move v0 , v0 + v0 ) 
[5966] ( move 2 + ul , 2 / ua ; move 4 , ua / 3 ) 
[5967] loop 0 , 2 , loop 1 , 3 , move v1 + v0 , 4 
[5968] ( move 2 + 2 , 3 ; move 2 , 4 ) 
[5969] ( move ua - ul , 3 + ul ; move ul - ua , ul ) 
[5970] ( move 3 - ul , ul ; move ua + 2 , 4 ) 
[5971] ( move ul - 3 , ul ; loop 0 , 6 , move v0 , v0 + 4 ) 
[5972] loop 0 , 6 , move 2 , v0 - 3 
[5973] loop 0 , 3 , move ua - v0 , 4 + 4 
[5974] ( move ul - 4 , ul ; move ua - 3 , 4 / ua ) 
[5975] ( move 4 * 2 , ul ; move 3 , 2 ) 
[5976] ( loop 0 , 6 , move v0 - 3 , ua - v0 ; v1 = ul ) 
[5977] ( move 4 + 3 , 4 ; move ul , ul ) 
[5978] ( move 4 + ul , ua ; move 2 - ua , ul ) 
[5979] ( move 3 , ua * ua ; move 3 , 4 ) 
[5980] ( move ul , 2 ; move ua + ul , ul ; move ua , ul + ul ) 
[5981] loop 0 , 4 , move 4 / v0 , v0 / 3 
[5982] ( move 3 , 3 ; move 3 , ul ; move ul , ul ) 
[5983] loop 0 , 5 , move v0 - ua , ua / 4 
[5984] ( move ul + ul , 4 * 2 ; move 3 * 3 , 3 ) 
[5985] ( v0 = 3 ; move v0 , v0 ; move v0 , 4 * 2 ) 
[5986] ( move ul - ua , 4 ; move 3 , 4 ) 
[5987] ( loop 0 , 4 , move 3 , ua - ul ; move v0 , v0 ) 
[5988] loop 0 , 5 , move v0 - 2 , v0 * v0 
[5989] loop 0 , 6 , ( v1 = ua + ua ; move v0 , ua * v1 ) 
[5990] ( move ul , ul ; move ua , 4 * 3 ) 
[5991] ( move ul - ua , ua - ul ; move 3 + ul , ul ; move ul , ul ) 
[5992] ( move 3 , 2 ; move ul - ua , 2 ; move ul - 2 , 2 ) 
[5993] ( move ul , ua ; move 3 , 4 * 3 ; move 4 , ua * ua ) 
[5994] ( move 3 , ul ; loop 0 , 3 , move v0 , ul ) 
[5995] ( move ua , 4 + 2 ; move ua , 2 ) 
[5996] loop 0 , 4 , move ul + v0 , 4 / v0 
[5997] ( move 4 , ul / 2 ; move ua , ua * ua ) 
[5998] loop 0 , 3 , move v0 + 2 , v0 + 4 
[5999] loop 0 , 7 , move v0 - 2 , v0 * 4 
[6000] ( move ua - ul , ua ; move ua - 3 , ua ; move ua , 4 * 2 ) 
[6001] loop 0 , 2 , ( move ul , v0 ; move 3 , ul ) 
[6002] loop 0 , 2 , move ua - ul , 4 / ua 
[6003] ( move ua - ul , 4 ; loop 0 , 6 , move v0 , v0 ) 
[6004] loop 0 , 3 , move v0 * v0 , ua * ua 
[6005] loop 0 , 3 , loop 1 , 2 , move v1 + v0 , 4 + v0 
[6006] ( move 4 , ua + 4 ; move 3 , 3 + 2 ) 
[6007] ( loop 0 , 3 , move v0 + v0 , v0 ; move ul , 4 ) 
[6008] ( move ua , ua ; move 4 , ua / 3 ) 
[6009] ( move 2 , ua ; move ul - ua , 0 - 2 ) 
[6010] loop 0 , 6 , move 3 - ua , 2 
[6011] ( move 2 , ul ; move ul , ua * ua ; move 2 , 4 ) 
[6012] ( loop 0 , 3 , move ul , 4 ; move v0 + ua , v0 ) 
[6013] ( loop 0 , 4 , move v0 , v0 ; move v0 , 4 * v0 ) 
[6014] ( v0 = ua * ua ; move 2 , v0 ; move ua , 3 + v0 ) 
[6015] ( v0 = 4 + ul ; loop 1 , 3 , move ul - v0 , v0 ) 
[6016] ( move ua , ua ; loop 0 , 6 , move v0 , 2 ) 
[6017] ( move 4 , ul / ua ; loop 0 , 2 , move v0 + 3 , 2 ) 
[6018] ( move 3 , ul ; move 4 , ua - 2 ) 
[6019] loop 0 , 5 , move 0 - 4 , ul 
[6020] ( move ul , ul / ua ; move ua , 2 ; move ua , ua * ua ) 
[6021] ( move 4 * 2 , ul ; move ua , ua / 3 ) 
[6022] ( move ua , 2 ; v0 = 4 + ul ; move v0 , ul - v0 ) 
[6023] ( move ul , 4 - ua ; move ua + ul , 0 ; move 4 , 3 ) 
[6024] ( move ua + 2 , ul + ul ; move ua , ua - 4 ) 
[6025] loop 0 , 3 , ( move 2 , v0 ; move 2 , ua - v0 ) 
[6026] ( move ua , ul / 4 ; move 4 , ua / 3 ) 
[6027] ( move ul , ul - 3 ; move ua + 2 , 4 ) 
[6028] ( move ua , ua ; move 3 + 2 , 3 ) 
[6029] ( move 4 , 2 / ua ; move 2 - ua , 4 ) 
[6030] loop 0 , 5 , move 4 + 4 , 4 
[6031] ( move ua , 3 / 2 ; move ua + ul , 3 ) 
[6032] ( move ua - ul , 0 ; move 2 , ua * ua ) 
[6033] ( move ua + 2 , ul / ua ; move 4 + 4 , ua + 2 ) 
[6034] ( move ua , 3 ; move 4 , 4 ; move ul , 2 ) 
[6035] ( v0 = 4 ; move v0 + v0 , v0 ; move ua , v0 ) 
[6036] ( move ua + ul , 3 ; move ua - 4 , ul ) 
[6037] loop 0 , 5 , move v0 - ua , 3 / v0 
[6038] ( move ul - 3 , 3 / ua ; move ua , ua + ul ) 
[6039] ( move ua + ul , 0 ; move ua + 3 , ul + ul ) 
[6040] ( loop 0 , 3 , move 4 + ul , 2 + ul ; move ua , 4 / v0 ) 
[6041] ( move ua , ua ; move ua , 3 ; move ul , ua + 4 ) 
[6042] ( move 2 - ua , 0 ; move ul + ul , ua - ul ) 
[6043] loop 0 , 3 , ( move v0 , 4 + ul ; move v0 , v0 ) 
[6044] ( move ua , ul ; move 2 , 3 + ul ; move ua , 3 / ua ) 
[6045] loop 0 , 2 , ( move ua , 3 ; move v0 , ul ) 
[6046] ( move 3 + 2 , 3 / ua ; move ua , ua * ua ) 
[6047] ( loop 0 , 4 , move 4 + ul , v0 ; move ul , 0 ) 
[6048] ( move 3 , ul ; move ua , 4 ; move ua , 4 - ua ) 
[6049] ( move ul , ua ; loop 0 , 4 , move v0 , v0 * v0 ) 
[6050] ( move ua + ul , 0 ; move ua , ul - 3 ) 
[6051] loop 0 , 3 , ( move 4 - 2 , v0 ; move 3 , v0 ) 
[6052] ( move ul , 3 * 2 ; move ua , 4 ; move 3 , ul ) 
[6053] ( loop 0 , 4 , move ul , v0 * v0 ; move ua , 4 ) 
[6054] loop 0 , 3 , ( move v0 + v0 , ul ; move ua , 3 ) 
[6055] ( move ua , ul ; loop 0 , 3 , move v0 * v0 , 4 ) 
[6056] ( move 3 , 2 * 2 ; ( move 2 , ul ; move ua , ul ) ) 
[6057] loop 0 , 4 , move v0 - 2 , ul + v0 
[6058] ( move 3 , ul - 2 ; move ua , ua / 3 ) 
[6059] loop 0 , 3 , ( v1 = ul ; move 3 , 4 ; move v1 , v1 ) 
[6060] ( move ua , ul ; move ua + 3 , 0 - 3 ) 
[6061] ( move ua - ul , ua ; move 2 , ul / 4 ; move 2 , 2 ) 
[6062] ( move ul , ul ; move 2 * 2 , ua * ua ; move ua , ua + 4 ) 
[6063] ( move 2 , 3 ; move ua - ul , 2 ) 
[6064] loop 0 , 3 , move 4 / v0 , 3 * 3 
[6065] loop 0 , 3 , move v0 + 2 , ua - v0 
[6066] ( move 3 , ua ; move ul , 2 ; move ua , ul - 3 ) 
[6067] ( move ua , 4 / ua ; move 4 , ul ) 
[6068] ( move ua + ul , 4 + ul ; move 2 , ul + ul ) 
[6069] loop 0 , 7 , move 3 - ua , 0 - ul 
[6070] ( move 4 + ul , 4 ; move 2 , 3 ; move 2 , 2 ) 
[6071] ( move ua + ul , 3 ; move 2 - ua , 2 ; move 0 , ul ) 
[6072] ( v0 = 4 + ul ; loop 1 , 2 , move v0 , v0 / 4 ) 
[6073] ( move ul - ua , 4 ; move 2 , ul ) 
[6074] ( move ua , ul ; move ua , 3 ; move ua , ua - 4 ) 
[6075] ( move ua , 4 - ul ; ( move ua , 4 ; move ua , ul - 4 ) ) 
[6076] ( move ua , 2 ; move 4 * 2 , 4 ) 
[6077] ( move ua , 3 ; loop 0 , 2 , move 2 , ul ) 
[6078] loop 0 , 2 , loop 1 , 2 , move v1 + 3 , ul 
[6079] ( loop 0 , 5 , move 4 / v0 , ul / v0 ; v1 = ul ) 
[6080] ( move ul , 0 ; move 4 , ul ; move ul , ul ) 
[6081] ( loop 0 , 4 , move 2 / v0 , v0 ; move v0 , 0 ) 
[6082] loop 0 , 3 , ( move 3 , v0 ; move v0 , ul ; v1 = ul ) 
[6083] ( move 4 + ul , ua + 2 ; move ul + ul , ul ; move ua , ul ) 
[6084] loop 0 , 5 , move 2 , 2 - v0 
[6085] ( move ua , 3 ; loop 0 , 4 , move v0 , v0 ) 
[6086] ( move 3 , ua ; loop 0 , 3 , move v0 , v0 - ul ) 
[6087] loop 0 , 6 , move ul - v0 , v0 - 2 
[6088] ( move ul - ua , ua * ua ; move ul , ul ; move 2 , ua ) 
[6089] loop 0 , 6 , move 3 / 2 , v0 * v0 
[6090] ( move 0 - ua , 3 / ua ; move ua + ul , ul ; v0 = ua ) 
[6091] ( move 2 , 4 * 3 ; move ua - 3 , ul ) 
[6092] ( move 0 - ua , 4 - ul ; move 4 + 2 , 3 - ul ) 
[6093] ( move 4 , ua * ua ; move 0 , ua * ua ; move ua , ul ) 
[6094] ( loop 0 , 3 , move 4 , v0 ; move ul + v0 , 0 ) 
[6095] ( move ua + ul , 2 ; move 2 - 4 , 3 ) 
[6096] ( move ua + 4 , ul ; move ua + 3 , 3 ) 
[6097] ( loop 0 , 5 , move v0 , v0 ; move ua , 3 ) 
[6098] ( move ul - ua , 0 ; move ua + 4 , ul ) 
[6099] ( loop 0 , 4 , move v0 , v0 ; move ua , ua * ua ) 
[6100] ( loop 0 , 6 , move 2 , v0 * v0 ; move ul , ua ) 
[6101] ( move ua + ul , ul / ua ; move ul - ua , ul ) 
[6102] ( move 2 , ua ; loop 0 , 4 , move v0 , v0 + v0 ) 
[6103] ( move 4 , ul ; move 4 + ul , 4 ; move 3 + ul , 2 ) 
[6104] ( move ua , 2 - 3 ; loop 0 , 5 , move ul , ul ) 
[6105] loop 0 , 3 , loop 1 , 2 , move v0 + ul , 4 / ua 
[6106] loop 0 , 2 , ( move v0 , 3 ; move ua , v0 ) 
[6107] ( loop 0 , 5 , move ul , ua * ua ; move ua , v0 ) 
[6108] ( move ul / ua , ul ; loop 0 , 6 , move 2 , v0 ) 
[6109] ( move ul , 3 ; loop 0 , 5 , move v0 , 2 ) 
[6110] ( move ua + ul , ua ; move ul , ua - ul ; move ul - ua , ul ) 
[6111] ( loop 0 , 4 , move v0 , ul ; move 4 + 3 , v0 ) 
[6112] ( move ua + ul , ua / 3 ; move ul , ul ) 
[6113] ( loop 0 , 3 , move 3 , v0 ; move v0 + ua , v0 ) 
[6114] ( move ua + 2 , ul / ua ; move ua , 3 ) 
[6115] ( move 2 , ul / 2 ; move ua , ua * ua ) 
[6116] loop 0 , 2 , loop 1 , 2 , move 3 - ua , v0 
[6117] ( move 4 , 0 - ul ; move ul , ul ; move ua , ul + ul ) 
[6118] ( move 4 - ua , ul ; move 3 , ua * ua ) 
[6119] ( move ua + 2 , ul ; move ua + ul , 2 ) 
[6120] ( move ul , ul ; loop 1 , 4 , move ua + ul , 2 ) 
[6121] loop 0 , 6 , move ul - v0 , ua - v0 
[6122] loop 0 , 7 , move 3 - ua , v0 / 2 
[6123] ( move ul - ua , ua ; move ua + 3 , ul ) 
[6124] ( move ul , ul ; ( move ul , ul ; move ua , 4 + 3 ) ) 
[6125] loop 0 , 5 , move ua - 3 , 2 
[6126] ( loop 0 , 3 , move ul + v0 , ul ; move ua , v0 ) 
[6127] ( move ua , ul ; move ul , 4 * 3 ) 
[6128] ( move 2 , ul ; move ua , 4 ; move 4 , ua + ul ) 
[6129] loop 0 , 3 , ( move v0 * v0 , 0 ; move v0 , ul ) 
[6130] ( ( move ua - ul , 4 ; v0 = 3 + 2 ) ; move v0 , ul ) 
[6131] loop 0 , 7 , ( move 3 - v0 , 4 / 3 ; v1 = ul ) 
[6132] ( move ul , ul ; loop 0 , 4 , move v0 + ul , v0 ) 
[6133] loop 0 , 2 , ( move ua , 4 ; move ul , v0 ) 
[6134] loop 0 , 3 , move 3 , v0 / 2 
[6135] ( loop 0 , 6 , move ul , 2 + v0 ; move v0 , v0 ) 
[6136] ( move 2 - 3 , 3 ; move ua , 4 ) 
[6137] ( move 4 , ua * ua ; move ua + ul , ul ) 
[6138] ( move ua , 2 / 3 ; move ul - ua , ul ) 
[6139] loop 0 , 4 , move 4 , 4 / v0 
[6140] ( v0 = 4 + ul ; loop 1 , 4 , move v0 , v0 ) 
[6141] ( move 0 - 2 , ua ; move ua , ul ) 
[6142] ( move 3 - ua , 0 ; move 4 * 2 , 2 ) 
[6143] ( move ua , ul / 3 ; move ua - ul , ul ) 
[6144] ( move 4 + ul , ua ; move 3 , ul ; move ua , ul ) 
[6145] loop 0 , 3 , ( move ua , v0 ; move ul - 4 , v0 ) 
[6146] ( move ua , ul / 4 ; move ul - ua , ul ; v0 = ua ) 
[6147] ( move ul - 3 , ua ; move ua + ul , 2 ) 
[6148] ( move ua + ul , 4 + ul ; loop 0 , 6 , move v0 , v0 ) 
[6149] ( loop 0 , 4 , move 4 , v0 ; move 3 , v0 ) 
[6150] loop 0 , 6 , move ua / v0 , ua / 3 
[6151] loop 0 , 3 , move 4 - v0 , v0 / ua 
[6152] ( move 4 , 4 + ul ; move ua - ul , ul - ua ) 
[6153] ( move 4 , ua ; move ua + ul , 0 - ul ) 
[6154] loop 0 , 3 , move ua - v0 , ul + v0 
[6155] ( move 4 , 0 ; loop 0 , 6 , move 2 , ul ) 
[6156] loop 0 , 6 , move ua - v0 , 4 + 4 
[6157] ( loop 0 , 6 , move v0 , ul ; move ua , 2 ) 
[6158] ( move 4 , ul ; move ul - 4 , 4 ) 
[6159] ( move 3 , ul ; move ul - ua , ua - 4 ) 
[6160] ( loop 0 , 4 , move v0 + ul , v0 ; move v0 , ul ) 
[6161] ( move ua - 3 , ul / ua ; move ul , 2 ; move ua , ul ) 
[6162] ( move 3 - ua , 4 + ul ; move 4 , ul ) 
[6163] loop 0 , 6 , move ul - 4 , v0 + v0 
[6164] ( move ua , 2 ; ( move ua + 3 , 0 - 4 ; v0 = ul ) ) 
[6165] ( move ua , ua ; move ul , 2 / 3 ; move ua , ul ) 
[6166] ( move ua , 2 + ul ; loop 0 , 5 , move v0 , v0 * v0 ) 
[6167] ( move 2 , 3 + ul ; move ua - ul , 4 ; move 2 / ua , ul ) 
[6168] loop 0 , 2 , loop 1 , 3 , move ua * v0 , 4 
[6169] loop 0 , 4 , move ul - 3 , ul / v0 
[6170] ( move ua , ul ; move ul , ua + 2 ; move ua , 3 ) 
[6171] loop 0 , 3 , ( move v0 , v0 + 2 ; move v0 , ul ) 
[6172] ( move ua - ul , 0 ; move 4 + ul , 3 / 4 ) 
[6173] ( move 0 , 2 ; loop 0 , 6 , move 4 - v0 , ul / 2 ) 
[6174] loop 0 , 4 , move 3 , v0 - 2 
[6175] ( move ua + ul , ua + 4 ; move 3 , 2 ) 
[6176] ( loop 0 , 5 , move v0 + v0 , 3 ; move ua , v0 ) 
[6177] ( loop 0 , 4 , move ul , ul ; move 4 , ul ) 
[6178] ( move ul , ua * ua ; move 4 , ua + ul ; move ua , ul ) 
[6179] ( loop 0 , 6 , move v0 , ua / v0 ; move v0 , ul ) 
[6180] ( move 4 + 4 , ua ; loop 0 , 5 , move v0 , v0 + ul ) 
[6181] ( move ua , ua + ul ; move ua , 3 ; move ua , 2 - ua ) 
[6182] loop 0 , 2 , ( move v0 , 3 ; move 2 + 2 , ul ) 
[6183] ( move 4 , 4 + 3 ; move ua , ul - ua ) 
[6184] ( loop 0 , 2 , move ua , 4 ; move ua , 3 ) 
[6185] ( move 2 , ul ; loop 0 , 5 , move ul , v0 ; move v0 , ul ) 
[6186] ( move ua , 4 ; loop 0 , 4 , move v0 , ul / v0 ) 
[6187] ( ( v0 = 4 + ul ; move 2 , v0 ) ; move v0 , v0 ) 
[6188] ( move ua , ul ; loop 0 , 4 , move v0 - ul , ua + ul ) 
[6189] ( move ua , 4 + 2 ; move 0 , 2 - ua ; move 4 + 3 , ua ) 
[6190] loop 0 , 3 , ( move 3 , v0 ; move ul , v0 ) 
[6191] ( move ul , ul ; move ua , ul ; move ul , ul ) 
[6192] ( move ua - 3 , 0 ; move ua , ul ) 
[6193] ( move 3 , ul ; move 4 - ua , ua / 4 ) 
[6194] ( move ua , ul ; move ul , 4 + 3 ) 
[6195] ( move ua , ul - 2 ; move ua , 2 / 4 ) 
[6196] loop 0 , 2 , loop 1 , 3 , move ul + ul , ul + v0 
[6197] ( move 3 - ua , 2 ; loop 0 , 6 , move ul , ul ) 
[6198] ( move ul - ua , ua ; move ul , ua - ul ; move ua , 4 + ul ) 
[6199] loop 0 , 4 , move 2 , 4 / ua 
[6200] ( move ul , 0 ; ( move 3 , ul ; move 3 , 2 - 4 ) ) 
[6201] loop 0 , 6 , move 4 / v0 , ul / v0 
[6202] ( move ua , ua / 2 ; ( move 2 , ua ; move ua , ua + 3 ) ) 
[6203] ( move ul - ua , ua - 2 ; move 4 , 3 ) 
[6204] ( move ua + 4 , 4 ; move ua , 4 ; move ul , 4 / ua ) 
[6205] loop 0 , 2 , loop 1 , 2 , move v1 - ua , 3 - v0 
[6206] ( loop 0 , 6 , move v0 - 3 , ul ; move ul , 4 ) 
[6207] ( loop 0 , 4 , move v0 , ul ; move 2 , ul ) 
[6208] ( move ua / 3 , 3 - ua ; loop 0 , 5 , move 0 - 2 , v0 ) 
[6209] ( move 4 + ul , ul ; move 3 , 4 ) 
[6210] ( move ul + ul , 4 ; move ua - 4 , ul ; move ul - ua , ul ) 
[6211] ( move ua - 2 , ul - 3 ; move 4 , 4 ) 
[6212] ( move 4 , ul ; loop 0 , 4 , move v0 , v0 ) 
[6213] ( move ua + ul , ua - ul ; move 4 - ul , ul ) 
[6214] ( move ua , ua - 3 ; move 4 , ul ) 
[6215] ( move ul - 4 , ul + ul ; loop 0 , 4 , move v0 , ul ) 
[6216] loop 0 , 2 , loop 1 , 2 , move 3 + v1 , v0 
[6217] ( move 3 , 0 ; move ua , 3 / ua ) 
[6218] ( loop 0 , 6 , move v0 , 2 - v0 ; move ul , v0 ) 
[6219] ( move 4 , 2 ; move ua - 2 , ul - ua ) 
[6220] ( move ua , ul - 3 ; move ul , 4 ; move ua , 0 ) 
[6221] ( move ua + ul , 2 + ul ; move 3 - ua , ul ) 
[6222] ( loop 0 , 4 , move ul , v0 - ul ; move v0 , ul ) 
[6223] ( move ul + ul , ul ; move 4 , ul ; move 3 , 4 + ul ) 
[6224] ( move 3 , 2 ; move ua , 3 + 3 ) 
[6225] loop 0 , 3 , ( move v0 + v0 , v0 ; move ua , ul ) 
[6226] ( v0 = 2 + ul ; loop 1 , 4 , move v0 * v0 , 3 ) 
[6227] ( move ua , ua / 4 ; loop 0 , 6 , move ul , ul ) 
[6228] ( move ua , 0 ; move ua + 2 , ua - 4 ) 
[6229] loop 0 , 3 , move ua / v0 , v0 * 4 
[6230] ( move 2 , 2 ; move 4 + ul , ul + ul ) 
[6231] ( move ua , ul / ua ; move ua , ul - 4 ) 
[6232] ( move ul - ua , ua ; move ua + ul , 2 ) 
[6233] ( loop 0 , 5 , move v0 , ul - v0 ; move v0 , v0 ) 
[6234] ( loop 0 , 5 , move v0 , v0 ; move v0 , ua / v0 ) 
[6235] ( move ua , ul / 4 ; move ua , ul ) 
[6236] ( move ul , ul / 4 ; move ua , 0 ; move ua + 2 , 3 ) 
[6237] ( move ul , ul ; move ua + 2 , 4 * 2 ) 
[6238] ( move ua , ul ; move 4 * 2 , ua * ua ) 
[6239] loop 0 , 2 , ( move ul , 2 - ua ; move ua , ul ) 
[6240] ( move 4 , ul / 3 ; loop 0 , 4 , move v0 , ul ) 
[6241] ( move 4 , 3 ; move ua / 4 , ul ) 
[6242] ( move ul + ul , ul ; move ua - ul , ul ; move ua - ul , 2 ) 
[6243] ( move ua + ul , ua * 2 ; move ua + 2 , 2 ) 
[6244] ( move 2 - ua , 0 ; move ua - ul , ul ) 
[6245] ( move ua , ua - 4 ; move ua + ul , 4 ) 
[6246] ( move ua , 0 ; move ul , ul ; move ua , 4 ) 
[6247] loop 0 , 3 , ( move v0 + v0 , ua ; move v0 , v0 ) 
[6248] ( ( move 3 , 3 ; move ul , ul ) ; move ua + 2 , ua * ua ) 
[6249] ( move 4 + ul , 3 ; v0 = 3 ; move v0 , 4 ) 
[6250] ( move 2 , ua - 2 ; move ua + 2 , ua + ul ) 
[6251] ( move 3 , ul / ua ; loop 0 , 5 , move v0 , v0 * v0 ) 
[6252] ( loop 0 , 3 , move v0 + ul , v0 ; move v0 , 4 ) 
[6253] ( move ua , 4 ; loop 0 , 4 , move v0 , ul ) 
[6254] ( move ua , ua - ul ; move ul , ul ; move ua + ul , ul ) 
[6255] ( move ua , 0 ; move ul , ua - ul ; move ua , 3 ) 
[6256] ( move ul , ul ; loop 0 , 4 , move 4 / v0 , ul ) 
[6257] loop 0 , 3 , ( move ua , v0 ; move v0 / ua , 2 ) 
[6258] loop 0 , 5 , ( loop 1 , 9 , v2 = ul ; move v1 , 3 ) 
[6259] ( move 4 , ua ; v0 = 4 + ul ; move 2 , v0 ) 
[6260] ( move ua , ul ; loop 0 , 4 , move ul + v0 , v0 ) 
[6261] loop 0 , 3 , move v0 + 4 , ul - 2 
[6262] loop 0 , 4 , move v0 + v0 , 2 / v0 
[6263] ( move ua , ua ; loop 0 , 4 , move 2 , v0 + 2 ) 
[6264] ( move ul , ul / 2 ; move ua , 3 / 4 ) 
[6265] ( move ua , 2 ; move 3 - ua , 0 ; move ua , ua - ul ) 
[6266] ( loop 1 , 5 , move ul , ul ; move ua , ua ) 
[6267] ( move ua - ul , ua * 3 ; move ua - 2 , ua + 4 ) 
[6268] ( move 3 , 4 + 4 ; move ua + ul , ul ) 
[6269] ( move ua , ua / 3 ; move ua , ua + 2 ) 
[6270] ( move ul , ul + ul ; move ua , ua - ul ; move 3 + ul , 4 ) 
[6271] ( move ua - ul , ul / ua ; move 4 , ul ) 
[6272] loop 0 , 4 , move v0 + ul , ua - 4 
[6273] ( move 0 , 3 ; loop 0 , 5 , move 2 + v0 , v0 ) 
[6274] ( move ua , 4 ; move 3 - ua , ul ) 
[6275] ( move ua , 2 + ul ; move 4 , ul ; move 3 , ul ) 
[6276] loop 0 , 5 , move 0 - 4 , v0 
[6277] ( move ul , 4 + ul ; loop 0 , 5 , move v0 , v0 ) 
[6278] ( move ul , 3 ; move ua , 3 + 3 ) 
[6279] ( loop 0 , 3 , move 3 - ua , ul ; move ul , v0 ) 
[6280] ( move ua + ul , 3 / ua ; move ua , 3 ) 
[6281] ( move ua , ua - 3 ; move ua - ul , ul ) 
[6282] ( move 3 - ua , ua ; move ua , 4 ) 
[6283] ( move 3 , 0 ; move 4 , ua * ua ) 
[6284] ( move 4 + ul , ul ; loop 0 , 5 , move v0 , v0 ) 
[6285] loop 0 , 4 , move ul - ua , ua / 3 
[6286] ( loop 0 , 5 , move v0 , v0 ; move v0 , v0 / ua ) 
[6287] ( loop 0 , 4 , move v0 , v0 ; move 2 , ul ) 
[6288] ( v0 = ua - ul ; loop 1 , 3 , move v0 / v1 , 2 ) 
[6289] ( move ua , ua / 3 ; loop 0 , 5 , move v0 , v0 ) 
[6290] ( move ul , ua ; move 4 , ua / 4 ) 
[6291] ( ( move 3 , ua ; move ua , 2 ) ; move ul , ul / 3 ) 
[6292] ( move ua + 2 , 2 ; move ua , 4 ) 
[6293] ( move 0 , ul / 2 ; loop 0 , 5 , move v0 , ul ) 
[6294] ( loop 0 , 6 , move v0 , v0 * v0 ; move v0 , 2 ) 
[6295] ( move ua , 2 ; move 3 / ua , ul ; move 4 * 2 , ul + ul ) 
[6296] ( loop 0 , 4 , move v0 - 3 , v0 ; move ua , v0 ) 
[6297] loop 0 , 7 , move v0 - 4 , v0 - ul 
[6298] ( move 4 , ua * ua ; move ul + ul , 0 ; move ua + ul , 2 ) 
[6299] ( move 0 - 3 , ul ; move ul , 2 ; move 2 , 2 ) 
[6300] ( move ua , ua ; loop 0 , 6 , move ul , 2 / v0 ) 
[6301] ( move 4 - ua , ul ; move ua , 2 ) 
[6302] loop 0 , 5 , move 3 , 4 * 2 
[6303] ( move ul + ul , ul ; loop 0 , 2 , move 3 , ul ) 
[6304] ( move ul - ua , ua ; move 2 + ul , ul ; move 3 , ul ) 
[6305] ( move ua , 4 + 3 ; move 4 , ul ) 
[6306] ( move ua + ul , ua * 3 ; move ua , ua / 4 ) 
[6307] ( move ua , 2 ; move 0 - ua , ul ) 
[6308] loop 0 , 6 , move 2 / v0 , ul / v0 
[6309] ( loop 0 , 5 , move ul , ua + v0 ; move ua , 3 ) 
[6310] ( move ua , 3 - ul ; loop 0 , 4 , move 3 , ul / v0 ) 
[6311] ( move ua - ul , ul ; loop 1 , 6 , move ul - ua , ul + ul ) 
[6312] loop 0 , 7 , move v0 - ul , 4 / v0 
[6313] loop 0 , 3 , ( move ul / v0 , ua + v0 ; move 4 , v0 ) 
[6314] ( move ua , ua * ua ; move 4 * 2 , 2 - ua ) 
[6315] ( loop 0 , 5 , move ul , ua / v0 ; move v0 , ua ) 
[6316] ( move 4 , ul ; move ul - ua , ua * ua ) 
[6317] ( move 2 , ul - 2 ; move ua , 4 ) 
[6318] ( ( move 4 , ul ; move ul / ua , ua * ua ) ; move ua , ul ) 
[6319] ( move 4 , ul ; move ua , 4 + ul ) 
[6320] ( move ua , ua ; move ul , ul ; move 3 , 2 ) 
[6321] loop 0 , 7 , move ul - v0 , ul - 4 
[6322] ( move 4 , 3 ; move ua + 4 , 3 + ul ) 
[6323] ( move 4 , 4 ; ( v0 = ua + ul ; move 3 - v0 , ul ) ) 
[6324] ( move ua , ua ; move ua - 4 , 2 ) 
[6325] ( loop 0 , 6 , move 3 , ul ; move ua , ul ) 
[6326] ( loop 0 , 9 , v1 = 0 ; loop 2 , 6 , move ua , v0 ) 
[6327] ( v0 = 4 ; move v0 , ul ; move v0 , v0 * 4 ) 
[6328] ( move ua - ul , 2 - ua ; move 4 , 4 * 4 ) 
[6329] ( loop 0 , 4 , move v0 , v0 - 3 ; move v0 , ul ) 
[6330] loop 0 , 2 , ( move v0 , 3 ; move ua , ua - ul ) 
[6331] ( move ua , 2 ; move ul + ul , 2 ; move ua , 3 ) 
[6332] ( move ua , 2 ; move ua + 3 , 3 ) 
[6333] ( move 2 , ul ; loop 0 , 5 , move 3 , v0 ) 
[6334] ( move 0 - ua , ul ; move ul + ul , ul ; move ul , ua + 2 ) 
[6335] ( move 4 * 2 , ul ; move ua , 2 ) 
[6336] loop 0 , 3 , ( move ul , v0 ; move ul + v0 , ul - v0 ) 
[6337] ( move 4 , 3 / 4 ; move ua , ua + ul ) 
[6338] loop 0 , 3 , move v0 + 3 , v0 - ul 
[6339] loop 0 , 6 , move 2 , v0 + 3 
[6340] ( move ua + 2 , ua * ua ; move ua + ul , 4 ) 
[6341] loop 0 , 3 , ( move v0 , v0 ; move ul , 4 / v0 ) 
[6342] ( move ua - ul , ul - ua ; loop 0 , 6 , move ul , 3 + v0 ) 
[6343] ( move 2 , ua ; move ul , ul ; move ua - ul , ul ) 
[6344] loop 0 , 3 , move v0 + ul , 3 + v0 
[6345] ( move 4 , 3 * 3 ; move ul , 3 - 4 ) 
[6346] ( loop 0 , 6 , move v0 , ul ; move 4 , v0 + v0 ) 
[6347] ( loop 0 , 4 , move v0 , ul ; move v0 , 3 + v0 ) 
[6348] loop 0 , 3 , ( move ua + v0 , 2 ; move ul , ul ) 
[6349] ( move ul - ua , ua / 4 ; move 2 - ua , ua / 4 ) 
[6350] ( move ua , 4 / ua ; move 3 + 2 , ul ) 
[6351] ( move ua , ul / ua ; move ul , ul / ua ; move 4 + ul , ul ) 
[6352] loop 0 , 3 , ( move v0 - ua , ua * ua ; v1 = ua ) 
[6353] loop 0 , 3 , move 3 + v0 , 4 
[6354] ( v0 = 2 - ua ; move ua , v0 * ua ; move v0 , v0 ) 
[6355] ( v0 = 4 + ul ; ( move 2 , v0 ; move ua , v0 ) ) 
[6356] ( loop 0 , 4 , move v0 , 2 ; move ua , ul + v0 ) 
[6357] loop 0 , 4 , move 3 , 3 / v0 
[6358] loop 0 , 3 , ( move 4 , ul ; move v0 + v0 , v0 ) 
[6359] ( move 3 + ul , ul ; move ul - ua , ul ; move ua , ua ) 
[6360] ( loop 0 , 6 , move ul , ul + v0 ; move v0 , ua - 4 ) 
[6361] ( v0 = ua - 3 ; loop 1 , 6 , move v0 / v1 , ul ) 
[6362] ( move 2 , ua / 4 ; move ua + ul , ul ) 
[6363] ( move 4 , ua ; ( move 0 , 3 / ua ; move ua , 4 + 3 ) ) 
[6364] ( loop 0 , 4 , move 2 , v0 ; v1 = 0 ; move 2 , 2 ) 
[6365] ( move ua + ul , ul / ua ; move 4 , ua + ul ) 
[6366] loop 0 , 7 , move 3 - v0 , ul / 3 
[6367] ( loop 0 , 5 , move ul , v0 ; move v0 , v0 / ua ) 
[6368] ( move 4 + ul , ua ; move ua , 0 - 4 ) 
[6369] ( loop 0 , 6 , move v0 , v0 ; move 2 , 0 ) 
[6370] loop 0 , 3 , ( v1 = v0 ; move ua , 3 ; move 2 , ul ) 
[6371] loop 0 , 3 , move ua - ul , v0 + v0 
[6372] ( move 4 + 4 , 4 + 2 ; move 4 , ul - 3 ) 
[6373] ( loop 0 , 6 , move v0 , ua - v0 ; move v0 , ul ) 
[6374] ( move 4 , 4 + 3 ; move ul , ul ) 
[6375] ( move ua , ua ; move 4 , ul ; move 0 - ua , ua ) 
[6376] ( move 3 , ul ; move 2 - ua , ul / 2 ) 
[6377] ( move ua - ul , 0 - ul ; move 2 , ul ) 
[6378] ( move ua , 2 ; move ua , 4 ; move 3 , ua * ua ) 
[6379] ( move ul , ul / 3 ; move 3 + 2 , ul ) 
[6380] ( move ua , ua ; loop 0 , 5 , move 3 , ul ) 
[6381] loop 0 , 3 , move 4 - v0 , ul / v0 
[6382] loop 0 , 3 , loop 1 , 2 , move 2 + v0 , ul 
[6383] ( move ua , ua / 3 ; move ua , 4 ) 
[6384] loop 0 , 3 , ( move ul , 0 ; move ua , 4 - ul ) 
[6385] ( loop 0 , 3 , move v0 , v0 ; move ul - ua , v0 ) 
[6386] ( ( move 2 , 0 ; move ua , ul ) ; move ua , ul - 3 ) 
[6387] ( move ul / 2 , ul ; loop 0 , 3 , move 3 , v0 ) 
[6388] ( move ua + 2 , 2 ; move ua , 3 ) 
[6389] ( move 3 , 2 ; loop 0 , 4 , move v0 , ua - v0 ) 
[6390] ( move 3 - ua , ul ; move ua - ul , ul ) 
[6391] ( move ua , 4 * 4 ; move ua , ul ) 
[6392] ( move 3 , ua ; move 4 , 4 + ul ) 
[6393] loop 0 , 5 , move v0 * 2 , ua - v0 
[6394] ( move 2 - ua , ua - ul ; move 2 , 4 ) 
[6395] loop 0 , 3 , loop 1 , 2 , move v0 , ul + v1 
[6396] ( move 4 + ul , ul ; move ua , ua / 4 ) 
[6397] ( move ua , ul + ul ; loop 0 , 5 , move v0 , v0 + ul ) 
[6398] ( move ul , ua / 4 ; move 3 , ua - ul ; move ul , ul - 3 ) 
[6399] ( move 4 , 3 ; move ua + ul , 2 ) 
[6400] loop 0 , 7 , move 4 - ua , v0 * 4 
[6401] ( loop 0 , 5 , move 4 , v0 + ua ; move ul , ul ) 
[6402] ( move 2 + ul , ua - 4 ; move ua , ua + 2 ) 
[6403] ( move ul , ul ; move 4 , 3 / ua ; move 2 , ul ) 
[6404] ( move ua , ul - 4 ; ( move ul , 4 ; move 3 , 2 ) ) 
[6405] ( move ua , 2 ; loop 0 , 5 , move ul , 3 - v0 ) 
[6406] ( loop 0 , 4 , move v0 , ul ; move 3 , ul + ul ) 
[6407] ( move ul - 2 , 4 ; v0 = ua ; loop 1 , 5 , move 3 , ul ) 
[6408] ( ( move ua , ua - ul ; v0 = ua ) ; move v0 , 3 / 2 ) 
[6409] ( move ua , ua ; move 3 , ul ; move 3 , ua * ua ) 
[6410] loop 0 , 7 , move v0 - ul , 4 * 2 
[6411] ( move ua + ul , ul ; move 0 , ul ; move ua , 4 / 3 ) 
[6412] loop 0 , 5 , move ul , 2 / ua 
[6413] loop 0 , 4 , move 3 , 3 * 2 
[6414] ( v0 = ua - ul ; move 4 , ua ; move v0 , v0 ) 
[6415] ( move ua - 2 , ul + ul ; move 4 , ul / 4 ) 
[6416] ( move ua - ul , 4 + ul ; move ua + ul , ul ) 
[6417] loop 0 , 3 , ( move ua + v0 , v0 ; move v0 , ul ) 
[6418] ( move 3 , 2 / ua ; loop 0 , 6 , move 2 , ul ) 
[6419] ( move 4 - ua , 2 ; move ua + 2 , ua * ua ) 
[6420] ( move ua , 4 / ua ; move ua , 4 ) 
[6421] ( move 3 , ua * ua ; move 4 , ua / 4 ) 
[6422] ( move ua - ul , 2 / ua ; move ua + ul , ul ) 
[6423] ( move 3 - ua , 3 * 2 ; move ua , ul - ua ) 
[6424] ( loop 0 , 5 , move v0 , v0 ; move ul + v0 , ul ) 
[6425] ( move 2 , ua ; loop 0 , 2 , move 3 , ul ) 
[6426] ( loop 0 , 4 , move 3 , 3 / v0 ; move v0 , ua * v0 ) 
[6427] ( loop 0 , 5 , move v0 , ul / v0 ; move v0 , v0 ) 
[6428] ( move ul , ul ; move ul - 2 , 4 ; move ua + 2 , 4 ) 
[6429] loop 0 , 2 , ( move ul - 3 , 2 + v0 ; move ua , ul ) 
[6430] loop 0 , 5 , move 0 - 3 , 2 
[6431] ( move ul - 4 , ul - ua ; move 2 - ua , 2 ) 
[6432] ( move ua , ua * ua ; move 4 , ul ) 
[6433] loop 0 , 7 , move ua - ul , ua * ua 
[6434] ( v0 = ul - ua ; move v0 + v0 , ul ; move v0 , 3 ) 
[6435] loop 0 , 6 , move 2 , 4 - v0 
[6436] loop 0 , 2 , ( loop 1 , 2 , move v0 , ul ; move ua , ua ) 
[6437] ( loop 0 , 4 , move ua , ul + v0 ; move v0 , ul + ul ) 
[6438] ( move ua , ua / 4 ; loop 0 , 3 , move v0 , v0 ) 
[6439] ( move ul , 4 - ul ; loop 0 , 6 , move v0 , v0 + v0 ) 
[6440] ( ( move 3 , ua ; move 4 - ua , ul + ul ) ; move ua , ul ) 
[6441] loop 0 , 2 , ( move 2 , ua ; move v0 - 4 , ul ) 
[6442] ( ( move ua - 2 , 2 ; move ul , ua / 2 ) ; move ua , ul ) 
[6443] ( move ua , ua * ua ; move 4 / ua , 2 - ul ; move ul , ua ) 
[6444] loop 0 , 7 , move ul + v0 , 3 / 2 
[6445] loop 0 , 2 , loop 1 , 3 , move 3 * v0 , 3 + v0 
[6446] ( move ua , 3 + 2 ; move ua , ua / 4 ) 
[6447] ( move ul + ul , ul ; loop 1 , 5 , move v1 , v1 + 2 ) 
[6448] ( loop 0 , 2 , move ul , v0 ; move ua / v0 , v0 / 3 ) 
[6449] ( loop 0 , 6 , move v0 , ul - v0 ; move v0 , v0 ) 
[6450] ( move ua , ua / 2 ; move ua , 4 + ul ) 
[6451] loop 0 , 7 , move ul - v0 , 4 + ul 
[6452] loop 0 , 3 , ( move 4 , v0 ; move 2 , ul ) 
[6453] loop 0 , 5 , move 3 / v0 , v0 / 2 
[6454] ( move ul - ua , 2 ; move ua , 4 ) 
[6455] ( move ua - ul , 3 ; loop 0 , 2 , move 3 , 3 ) 
[6456] ( loop 0 , 3 , move v0 , 3 - v0 ; move v0 , 4 ) 
[6457] ( move 4 , ul ; move ul , 4 * 2 ) 
[6458] loop 0 , 3 , move ua - v0 , v0 * 4 
[6459] ( move ul - ua , ul / 4 ; move 4 - 2 , ul ) 
[6460] ( loop 0 , 5 , move 4 , v0 ; move v0 , 0 ) 
[6461] ( move 4 , ua ; move 2 , 2 ; move 2 - ua , 0 ) 
[6462] ( move 3 , ua / 4 ; move 4 + 3 , ul ) 
[6463] ( move ul , ua ; move ua + 4 , ul - ua ; move 2 , ua - 2 ) 
[6464] ( loop 0 , 5 , move ul , v0 ; move v0 * 2 , ua ) 
[6465] loop 0 , 7 , move ua + ul , ua - 2 
[6466] ( move ua - 3 , ua * ua ; move ul - ua , ul ) 
[6467] loop 0 , 6 , move 2 - v0 , v0 * v0 
[6468] ( move ul , 4 + 2 ; loop 0 , 4 , move v0 , ul ) 
[6469] ( move ua , ua ; ( move 2 , ul ; move 3 , ul ; v0 = ua ) ) 
[6470] ( move ul , 0 ; move ua + 4 , ul ) 
[6471] ( move 4 * 2 , 3 ; loop 0 , 5 , move v0 , 2 - ul ) 
[6472] loop 0 , 3 , ( move ua + v0 , v0 ; move 2 / v0 , ul ) 
[6473] ( move ua , ul ; loop 1 , 5 , move 4 - ua , ul ) 
[6474] ( loop 0 , 4 , move 3 , ul ; move v0 , v0 / ua ) 
[6475] ( move 3 , 3 ; move 4 - ua , ul ) 
[6476] loop 0 , 3 , ( move v0 , 0 ; loop 1 , ul , move 3 , ul ) 
[6477] loop 0 , 2 , move ua - ul , 3 + v0 
[6478] ( move ua , ua ; v0 = ua / 4 ; move ua - ul , v0 ) 
[6479] ( move ul , 0 ; move ul , 4 ; move 4 , 3 ) 
[6480] ( move ul , 4 / 3 ; move ua + 2 , 0 - ul ) 
[6481] loop 0 , 4 , move v0 - ua , 3 / v0 
[6482] ( move ua + ul , ul / 3 ; loop 0 , 6 , move 2 , ul ) 
[6483] loop 0 , 3 , move 4 - v0 , ul - 3 
[6484] loop 0 , 3 , ( move ul , v0 ; move 3 * v0 , ul ) 
[6485] ( move ua , 2 ; move ul , ul ; move 4 + ul , 2 + ul ) 
[6486] loop 0 , 3 , move v0 + ul , v0 / 3 
[6487] loop 0 , 3 , ( move ua , v0 ; move ul , 2 ) 
[6488] loop 0 , 6 , move 3 - v0 , 4 / v0 
[6489] ( move ul , ul + ul ; loop 0 , 6 , move ul , v0 * v0 ) 
[6490] ( move 0 , 4 ; loop 0 , 2 , move ua , ul ; move v0 , ul ) 
[6491] loop 0 , 3 , ( v1 = 4 ; move 4 , v1 ; move ul , v0 ) 
[6492] ( move 0 - 3 , ua ; move ua , 4 + ul ) 
[6493] ( move 4 , 2 ; move ul - ua , 2 - 4 ) 
[6494] ( move ul / 2 , ua ; loop 0 , 5 , move 3 , v0 ) 
[6495] ( move 0 , ul ; loop 0 , 4 , move 4 , 3 ) 
[6496] ( move 4 , 4 / ua ; move ua + 3 , 2 ) 
[6497] ( loop 0 , 5 , move ul , v0 ; move v0 , 4 + v0 ) 
[6498] ( move 4 + ul , ua - 2 ; move ua + ul , ua + 2 ) 
[6499] loop 0 , 5 , move 2 , 4 / ua 
[6500] ( move ua - 4 , 2 - ul ; move ua / 4 , 4 ; move ua , ul ) 
[6501] ( move ua , 3 / ua ; move 2 , 2 ) 
[6502] loop 0 , 3 , ( move ul , ul / v0 ; move v0 , ul ) 
[6503] ( move ua , ul ; ( move ul , ua ; move 2 , 4 * 3 ) ) 
[6504] ( move ua - ul , 0 ; move 2 , 4 + ul ) 
[6505] ( move ua , ul / ua ; move ul - ua , 4 - ua ) 
[6506] ( loop 0 , 6 , move ul , v0 ; move ul - v0 , v0 + 4 ) 
[6507] ( move 2 , 4 + 2 ; move 4 , ul ) 
[6508] ( move 3 + 2 , ul ; loop 0 , 6 , move v0 , 2 ) 
[6509] ( move ul - ua , ul / ua ; move 2 , ul ) 
[6510] loop 0 , 5 , move 2 , 2 / ua 
[6511] ( move 4 * 2 , 0 ; move 3 + 2 , ua + 2 ) 
[6512] loop 0 , 4 , ( v1 = v0 + ul ; move v1 + ua , v1 ) 
[6513] ( move ua , ua * ua ; move ul - ua , ua - ul ) 
[6514] loop 0 , 6 , move 2 / v0 , v0 + 4 
[6515] ( loop 0 , 4 , move 2 , ul ; move ua , v0 ) 
[6516] ( loop 0 , 6 , move v0 , 4 ; move v0 , ua * ua ) 
[6517] loop 0 , 3 , ( move 3 - ua , 3 + v0 ; v1 = v0 ) 
[6518] ( move ul - ua , ua * ua ; move ua , ul ) 
[6519] ( move 4 , ul / 2 ; move ul - 4 , ul ) 
[6520] ( move ul , ua ; move ua , 2 ; move ul - 4 , ul / 2 ) 
[6521] loop 0 , 3 , ( move v0 , ul ; move 2 , v0 ) 
[6522] ( move 0 , ul ; loop 0 , 5 , move 3 , ua - v0 ) 
[6523] loop 0 , 4 , move 3 , v0 / 2 
[6524] ( move 2 - 3 , 0 ; move ua , 3 ) 
[6525] ( move 2 , ua + ua ; move ua + 4 , 4 ; move ua , 3 ) 
[6526] ( move ua , 3 / 2 ; move ua - ul , ul + ul ) 
[6527] ( move ua , ul ; move ul , 3 ; move 3 , ua / 3 ) 
[6528] loop 0 , 5 , move 3 - v0 , ul - v0 
[6529] loop 0 , 6 , ( v1 = ul - v0 ; move v1 , v1 * 3 ) 
[6530] ( move ul - ua , 4 ; move ua , ua / 4 ; v0 = ul ) 
[6531] ( move ul , ul / 2 ; loop 0 , 6 , move v0 - ua , v0 ) 
[6532] ( move ua + 2 , 0 ; move ul - ua , ul ) 
[6533] ( loop 0 , 4 , move ua - 4 , 3 * 2 ; move v0 , ua ) 
[6534] loop 0 , 7 , move v0 - 3 , ua - ul 
[6535] ( v0 = ul - ua ; move v0 , 3 ; move ua , ul / v0 ) 
[6536] loop 0 , 3 , ( move v0 , v0 ; move 2 , ul ) 
[6537] ( move ua - ul , 2 ; v0 = 4 ; move v0 , v0 ) 
[6538] loop 0 , 3 , ( move v0 + ua , v0 ; move ul / v0 , ul ) 
[6539] ( move ul - 4 , 3 ; loop 0 , 6 , move ul , v0 ) 
[6540] ( move ul + ul , 4 / ua ; move ua , ul + ul ) 
[6541] ( move ua , ul / ua ; move 3 , 4 ) 
[6542] ( loop 0 , 6 , move ul , v0 * v0 ; move v0 , ua - ul ) 
[6543] ( move ul , ua - 4 ; move ul - ua , ua - ul ) 
[6544] ( move 0 - 4 , ul - ua ; move ua + ul , ul ) 
[6545] ( move 4 + ul , 4 ; move ua , 3 * 2 ) 
[6546] ( move 3 , 4 + 3 ; move ua , ul ) 
[6547] loop 0 , 2 , loop 1 , 3 , move ul , 2 - v0 
[6548] ( move ua / 4 , ul / ua ; loop 0 , 4 , move v0 , 4 * 3 ) 
[6549] loop 0 , 3 , ( move v0 , ul ; move ul + ul , 3 ) 
[6550] ( loop 0 , 3 , move ua , 2 ; move ul , 0 ) 
[6551] loop 0 , 4 , move ua / v0 , ua * ua 
[6552] ( loop 0 , 5 , move 2 , v0 - 4 ; move ua / v0 , ua ) 
[6553] loop 0 , 7 , move 3 / 4 , v0 + v0 
[6554] ( move ua + ul , 4 ; loop 0 , 4 , move v0 , 4 ) 
[6555] ( move 2 , ul / ua ; loop 0 , 4 , move 4 , v0 ) 
[6556] ( loop 0 , 2 , move 3 , v0 ; move ua , ul ) 
[6557] loop 0 , 3 , move ua - ul , ua * ua 
[6558] ( move 4 - ua , ul - 3 ; loop 0 , 5 , move v0 , ul ) 
[6559] ( move ua , ua ; move 4 , ua / 4 ) 
[6560] ( loop 0 , 3 , move 3 , 2 + ul ; move ua , ul ) 
[6561] loop 0 , 3 , ( v1 = v0 - ua ; move v1 + ul , 4 ) 
[6562] loop 0 , 5 , move 3 - ua , 2 + v0 
[6563] ( move ua , 0 - ul ; move ua + ul , 2 ) 
[6564] loop 0 , 7 , move 2 / v0 , v0 / ua 
[6565] ( move 4 , ua ; v0 = 4 ; loop 1 , 5 , move ua , v0 ) 
[6566] ( move 2 - ua , ul - 3 ; move 4 , 0 ; move 3 , ua / 3 ) 
[6567] loop 0 , 3 , loop 1 , 2 , move 2 / v1 , ul - v0 
[6568] ( move 2 , 0 ; move ua + ul , ua / 4 ) 
[6569] ( move 4 , 2 / ua ; move 4 , ul ) 
[6570] loop 0 , 5 , move 3 - ua , 4 
[6571] ( move ua , ul ; move ua - 3 , ul ) 
[6572] loop 0 , 3 , ( move 2 , 4 ; move v0 , v0 ) 
[6573] loop 0 , 3 , ( move 3 , 2 / v0 ; move 3 , v0 ) 
[6574] ( loop 0 , 6 , move 3 + ul , ul ; move v0 , ul ) 
[6575] loop 0 , 3 , ( move v0 , v0 ; move v0 - 4 , 2 ) 
[6576] loop 0 , 4 , move 4 / v0 , ul - v0 
[6577] loop 0 , 3 , ( move ul , 2 + v0 ; move ua , ua - ul ) 
[6578] loop 0 , 2 , ( move 3 , ul ; move ul , ul ) 
[6579] ( move ua , 2 + ul ; move ul , ul / ua ; move 0 - ua , ul ) 
[6580] ( move ul - ua , 3 + 2 ; move 4 + ul , ul ) 
[6581] ( move ua + 2 , ul ; move 2 , 4 ) 
[6582] ( move ua , 4 ; loop 0 , 3 , move ua , 3 ) 
[6583] ( move ua , ul ; move 2 , ul ; move 2 , 4 + ul ) 
[6584] ( move ul , ul / ua ; loop 0 , 6 , move v0 + ul , v0 ) 
[6585] ( move 0 - ua , 2 ; ( move 4 , ul / 3 ; v0 = ul ) ) 
[6586] loop 0 , 3 , move 4 , 3 * v0 
[6587] loop 0 , 7 , move v0 / 2 , v0 * v0 
[6588] ( move 2 , 2 ; loop 0 , 5 , move v0 , v0 + v0 ) 
[6589] ( move ua + ul , ua - 4 ; loop 0 , ul , move 3 , ul ) 
[6590] ( move ul , ul / 4 ; loop 0 , 5 , move ul , ul - v0 ) 
[6591] ( move 4 + ul , 2 ; move ul - ua , 2 ) 
[6592] ( move ua , 4 + 3 ; loop 0 , 5 , move v0 , ul / v0 ) 
[6593] ( move ua , ul ; move ua - ul , ua / 4 ) 
[6594] ( move 4 , 4 ; move ul , ua ; loop 0 , 4 , move v0 , 3 ) 
[6595] loop 0 , 4 , move 4 / v0 , 2 
[6596] ( ( move ul , 0 ; move 4 , ul ) ; move 4 , ul ) 
[6597] ( move 0 , ul ; loop 0 , 5 , move v0 + ul , 3 ) 
[6598] ( move ua + ul , ua - ul ; move 4 , 4 ) 
[6599] ( move 4 + ul , ul / 4 ; move 3 , ua - ul ) 
[6600] ( move ua + 2 , ua ; move 0 - ua , ul ) 
[6601] loop 0 , 2 , loop 1 , 3 , move v0 * ua , v1 + v0 
[6602] ( loop 0 , 5 , move 3 , v0 ; move ua , ul ) 
[6603] ( move ul , ul ; loop 0 , 4 , move 2 * v0 , ul ) 
[6604] loop 0 , 5 , move v0 , 4 / 3 
[6605] ( move ua + 2 , ua ; move 3 - ua , ul ) 
[6606] loop 0 , 7 , move ul - v0 , v0 - ul 
[6607] loop 0 , 4 , move 2 + v0 , v0 * v0 
[6608] ( move 4 + ul , ua ; move ul , 2 ; loop 0 , 4 , move 2 , ul ) 
[6609] ( move 2 , 0 ; loop 0 , 5 , move v0 , 3 ) 
[6610] ( move 4 , 3 ; move 4 , ua - ul ) 
[6611] ( move ul - ua , ul ; move ua / 2 , ua ; move 3 , 2 ) 
[6612] ( move ua - ul , 2 / ua ; move ua , ua + ul ) 
[6613] ( move ua - ul , 2 ; move ua + ul , ua * ua ) 
[6614] loop 0 , 7 , move v0 - ul , v0 - 3 
[6615] ( move ua , ua ; move 4 / 3 , ul ) 
[6616] ( move 4 , ua ; ( move ul , ua / 4 ; move ua + 2 , 3 ) ) 
[6617] ( move ua , 0 ; ( move ua , 2 + ul ; move ul , 4 + ul ) ) 
[6618] ( move 2 , ua - 3 ; move ua - ul , ul ) 
[6619] ( move ul - ua , 0 ; move 4 , ul ; move ua , 3 ) 
[6620] ( move 2 , ul / ua ; move ua + 4 , 4 ) 
[6621] loop 0 , 3 , ( move ua , 3 ; move v0 , ul ) 
[6622] ( move 3 * 2 , ul ; move 0 , 3 / ua ; move 4 , 4 ) 
[6623] ( move ul + ul , ua + 3 ; move ua , 3 / 2 ) 
[6624] ( loop 0 , 4 , move v0 , 0 ; move v0 , v0 * 4 ) 
[6625] ( move 2 / ua , ul ; move ua + 2 , ua * ua ) 
[6626] loop 0 , 2 , move ua - v0 , 3 + 2 
[6627] ( move ul - ua , ul ; loop 0 , 5 , move v0 , v0 ) 
[6628] ( loop 0 , 6 , move ul - v0 , ul ; move v0 , ul / v0 ) 
[6629] loop 0 , 3 , ( move ua , ul ; move v0 , 2 ) 
[6630] loop 0 , 2 , ( move v0 - ua , ul ; move ua , ul ) 
[6631] ( move ua + ul , ua - 4 ; move ua , ua - 3 ) 
[6632] ( move 3 , ul ; move 4 , ul ; move ua - 2 , ul ) 
[6633] ( move ul , 4 ; loop 0 , 5 , move v0 , v0 + ul ) 
[6634] ( move ua , 2 ; move 2 + ul , 2 ; move ua / 2 , 3 + 2 ) 
[6635] ( move 4 , 3 + 3 ; move ua , 2 - ul ) 
[6636] ( move 2 , 2 ; move 3 + ul , 2 ) 
[6637] ( move ul - ua , ua + 4 ; loop 0 , 5 , move v0 , v0 ) 
[6638] ( move ua , ul + ul ; loop 0 , 3 , move v0 , v0 * v0 ) 
[6639] loop 0 , 2 , loop 1 , 3 , move ul , v0 - v1 
[6640] loop 0 , 6 , ( v1 = 3 ; move ua - v1 , ua - ul ) 
[6641] loop 0 , 5 , move v0 - 4 , 2 + v0 
[6642] loop 0 , 2 , ( move 2 - ua , ul ; move 4 + v0 , v0 ) 
[6643] ( move ul , ua ; loop 0 , 5 , move ul , 2 * v0 ) 
[6644] ( v0 = ua ; move 2 - v0 , v0 ; move 4 - v0 , ul ) 
[6645] ( move 0 - ua , ua ; move ua , ua / 4 ) 
[6646] ( move 4 , ua ; move ua , 4 + ul ; move ul , ua ) 
[6647] ( move ua , ua ; move ua , ul - 4 ; move 3 + 2 , 2 + ul ) 
[6648] ( move ul - ua , ua ; move ul - ua , ua * ua ) 
[6649] loop 0 , 3 , move v0 - ua , 3 + v0 
[6650] ( loop 0 , 3 , move 4 , v0 + v0 ; move v0 , v0 ) 
[6651] ( move ua , ua ; move 3 / ua , ul ; move ua + 3 , 3 ) 
[6652] ( move 4 , 3 + ul ; move 4 , ua - ul ) 
[6653] loop 0 , 3 , ( v1 = v0 + ua ; move 4 , v1 / v0 ) 
[6654] ( move ua , 4 - ua ; loop 0 , 3 , move v0 , 4 ) 
[6655] ( move 2 , 3 ; move ul , 4 ; move ua , ul ) 
[6656] ( move 4 , ua * ua ; loop 0 , 4 , move v0 + ul , ua + ul ) 
[6657] loop 0 , 6 , move v0 - ul , 2 - v0 
[6658] ( move ul , 2 ; loop 0 , 6 , move v0 , v0 + v0 ) 
[6659] loop 0 , 3 , ( move v0 , ua ; move 4 , v0 ) 
[6660] ( move ua , ul ; loop 0 , 3 , move 2 , v0 ) 
[6661] ( move 4 , 4 ; move 4 + ul , 2 ) 
[6662] loop 0 , 3 , ( move ua / 4 , 0 ; move 3 , ua * ua ) 
[6663] ( move ua , ul ; loop 0 , 3 , move ul - 2 , 4 + v0 ) 
[6664] ( move ul , 0 ; loop 0 , 5 , move v0 , v0 * v0 ) 
[6665] ( move ua , ul ; move 2 , ul ; move ua , ul ) 
[6666] ( move 0 , ul ; loop 0 , 5 , move ua , 2 ) 
[6667] ( move ua + ul , 0 ; loop 0 , 6 , move v0 , ua - v0 ) 
[6668] ( move ul , ul ; move 2 , 4 ; move 4 , ul + ul ) 
[6669] loop 0 , 7 , move ul - v0 , ul - 3 
[6670] ( loop 0 , 9 , v1 = v0 ; loop 2 , 6 , move v0 , 3 ) 
[6671] ( move 4 , 4 * 2 ; move 4 / ua , ul ; move ul , ul ) 
[6672] loop 0 , 7 , move 3 - ua , v0 * v0 
[6673] ( move ua , ua * ua ; move 2 / ua , 2 ) 
[6674] ( loop 0 , 4 , move v0 , ul ; move v0 , v0 + ul ) 
[6675] loop 0 , 3 , ( move v0 , 3 / ua ; move v0 , v0 + ua ) 
[6676] ( move ua , 0 ; loop 0 , 4 , move v0 , ua / v0 ) 
[6677] ( move ua , 0 - 4 ; move ua , 4 ) 
[6678] ( move 3 , ul / ua ; move ul - ua , 2 ) 
[6679] ( v0 = ua ; loop 1 , 2 , move ul - v0 , v0 * ua ) 
[6680] ( move ul , ua ; move ua , ul ; loop 0 , 3 , move v0 , 2 ) 
[6681] ( move ua , ua * 4 ; move ua + 2 , 2 ; move ua , 3 ) 
[6682] loop 0 , 7 , move v0 - 3 , 4 / ua 
[6683] ( move ua + ul , 3 * 3 ; loop 0 , 3 , move v0 , ul ) 
[6684] loop 0 , 7 , move v0 / 3 , ua - ul 
[6685] ( move ua , 4 ; move 3 - ua , 4 ) 
[6686] loop 0 , 3 , ( move v0 - ua , ul / 4 ; move 4 , ua * ua ) 
[6687] loop 0 , 2 , ( move v0 , ua / 2 ; move ua , ul ) 
[6688] ( loop 0 , 5 , move 3 , ul ; move ua , ul ) 
[6689] ( move ua , ul / 4 ; move 3 , ul ) 
[6690] ( move 4 , ul ; loop 0 , 4 , move v0 * v0 , ua - v0 ) 
[6691] ( loop 0 , 3 , move 2 , 2 ; loop 1 , 4 , move v0 , ul ) 
[6692] ( move ua - ul , ua ; move ua + ul , ua / 4 ) 
[6693] ( move 3 + ul , 0 - ul ; move 4 , ua + 4 ) 
[6694] loop 0 , 2 , ( move 4 , 4 ; move ul , ul ; move v0 , 4 ) 
[6695] ( move ua , ul ; move ul - 3 , 3 ; move 3 , ul ) 
[6696] loop 0 , 3 , ( move ua - 4 , ul ; move v0 - 3 , 0 ) 
[6697] loop 0 , 3 , ( move 3 , 3 * 2 ; v1 = 0 ) 
[6698] ( move 4 , ul ; move ua , 3 / 2 ) 
[6699] ( move ua , ul ; move ua - ul , 0 - 4 ) 
[6700] ( move 4 , 0 - ul ; move 3 , 2 ) 
[6701] ( move 3 , 3 - 4 ; move 3 + ul , ul / 2 ) 
[6702] ( move ul , 2 ; loop 0 , 4 , move v0 , 4 + v0 ) 
[6703] loop 0 , 5 , move ua / v0 , 4 - v0 
[6704] ( move 3 , ua + ul ; move ul , 3 + ul ; move ua , ul + ul ) 
[6705] loop 0 , 2 , ( move ua + v0 , 2 ; move ul , ul ) 
[6706] loop 0 , 3 , ( move v0 , ul / v0 ; move ua , 3 ) 
[6707] ( move 4 , 0 ; move 4 , ua * ua ) 
[6708] ( move 4 , 3 ; move 4 - ua , ul ) 
[6709] ( move ul , ul ; move ul , ul ; ( move 4 , 2 ; move ua , 4 ) ) 
[6710] ( move ul , ul ; move ul , ul / 3 ; move ua , ul ) 
[6711] loop 0 , 4 , move v0 , 3 - v0 
[6712] ( move ua - ul , ul / ua ; move 2 , 4 + ul ) 
[6713] loop 0 , 5 , move v0 + v0 , 2 - v0 
[6714] ( loop 0 , 3 , move 3 , 4 + v0 ; move v0 , v0 ) 
[6715] ( move 4 , ua ; move ua , ul ; move 3 / ua , ul ) 
[6716] ( move 4 , 4 * 3 ; move ua - ul , 4 ) 
[6717] ( loop 0 , 4 , move v0 , v0 ; loop 1 , 2 , move ul , ul ) 
[6718] ( move 2 , ul ; move 3 , 3 * 2 ) 
[6719] ( move ua + ul , ul ; move ua , 3 ) 
[6720] ( move ua , ul ; loop 0 , 6 , move v0 , v0 + ul ) 
[6721] ( move 3 , 0 ; move ul , 4 / ua ; move 2 + ul , ua - 3 ) 
[6722] ( move ua , 2 ; move ul - 2 , 3 + ul ; move 4 , ua ) 
[6723] ( move ua , 3 * 3 ; move ul , ul ) 
[6724] ( move 3 + ul , ua - ul ; move ua , ul ; move ul - ua , ul ) 
[6725] loop 0 , 5 , move 3 / v0 , 4 / ua 
[6726] ( loop 0 , 5 , move v0 - 2 , v0 ; move ul , ul ) 
[6727] ( move ua , ul / 2 ; move ua , 3 ) 
[6728] ( move ua + ul , 2 ; loop 0 , 5 , move v0 , ul - v0 ) 
[6729] ( v0 = 4 + ul ; move v0 - ua , ul ; move v0 , v0 ) 
[6730] ( move 2 , 3 ; move ua , 4 * 3 ) 
[6731] ( move ua , 4 + ul ; loop 0 , 3 , move v0 , ul ) 
[6732] ( loop 0 , 6 , move ul - v0 , v0 ; move ua , v0 ) 
[6733] ( loop 0 , 3 , move ua / v0 , 4 ; move v0 , v0 ) 
[6734] loop 0 , 3 , ( move v0 , v0 + 4 ; move ul , v0 ) 
[6735] loop 0 , 5 , move v0 - ul , v0 + ul 
[6736] ( loop 0 , 3 , move 2 , v0 ; move 3 , v0 ) 
[6737] ( loop 0 , 5 , move v0 , ul ; move 4 , v0 + v0 ) 
[6738] ( move ua , 2 ; move ul - ua , 4 ) 
[6739] ( move ua + ul , 3 ; move ua - 4 , 4 + ul ) 
[6740] loop 0 , 4 , move ul , ul / v0 
[6741] loop 0 , 6 , move 2 - 4 , 2 / v0 
[6742] ( loop 0 , 6 , move v0 , ul + v0 ; move 2 , v0 ) 
[6743] loop 0 , 7 , move v0 - ul , 0 - ul 
[6744] ( move ua + 2 , ua ; loop 0 , 2 , move ul / v0 , ul ) 
[6745] ( move 3 , 3 ; move 4 , ua - ul ) 
[6746] loop 0 , 6 , move ua / 3 , ul 
[6747] ( move 2 - 3 , ua ; move ua / 2 , 4 ; move ua , ul / ua ) 
[6748] ( loop 0 , 2 , move 3 - v0 , v0 ; move ua , v0 ) 
[6749] loop 0 , 6 , loop 1 , ul , move v1 - v0 , v0 
[6750] ( move 2 + ul , 4 ; ( move ua , ul ; move 2 , ul ) ) 
[6751] ( move 4 , ua - 4 ; loop 0 , 3 , move v0 , 2 ) 
[6752] ( v0 = ul - 2 ; move v0 * ua , 2 ; move ua , ul / 4 ) 
[6753] ( move ul , ua ; move ua , ua ; move 4 , ul - 3 ) 
[6754] ( move 0 - ua , ul ; move ul - 3 , ul / ua ) 
[6755] ( move ua , ul - 4 ; move ua , 2 ) 
[6756] ( move 0 , ul ; loop 0 , 4 , move v0 + v0 , v0 ) 
[6757] loop 0 , 2 , move 4 - ua , v0 + v0 
[6758] ( ( move ul , ul ; move ua + ul , ul ) ; move ua , ua - 2 ) 
[6759] ( move ua - ul , ua ; move 2 , ul ; move 3 , ua - 4 ) 
[6760] ( move ua - 3 , 0 ; move ua + 2 , ul ) 
[6761] loop 0 , 6 , ( v1 = v0 / 4 ; move v1 - 3 , ul ) 
[6762] ( move ua , ua / 4 ; move 4 + ul , ul ) 
[6763] loop 0 , 3 , ( move ua , ua ; move v0 , 3 ) 
[6764] loop 0 , 7 , move v0 - ul , v0 + 2 
[6765] ( move ua , 2 ; move ua - ul , 4 ) 
[6766] ( move ua , ua - ul ; move 4 , 2 ) 
[6767] ( loop 0 , 4 , move v0 , ul ; move ua - ul , ua ) 
[6768] loop 0 , 3 , loop 1 , 2 , move 4 - v0 , ul 
[6769] ( move ul - ua , 2 ; ( move ua , ul ; move 2 , ul ) ) 
[6770] ( move ua , ul ; loop 0 , 6 , move ua , ua * ua ) 
[6771] loop 0 , 6 , move 2 - v0 , 3 
[6772] loop 0 , 3 , move ul - ua , ua * ua 
[6773] ( loop 0 , 5 , move v0 , 2 + ul ; move 4 , ul ) 
[6774] ( move ua - ul , 4 ; move ua , 4 ) 
[6775] ( loop 0 , 3 , move 3 , v0 ; move v0 , ul ; move ul , ua ) 
[6776] ( loop 0 , 3 , move v0 + ul , 2 ; move v0 , v0 / ua ) 
[6777] ( loop 0 , 4 , move v0 , v0 ; move ua / v0 , 2 ) 
[6778] ( move ul - ua , ua ; move ul , ua ; move ua + ul , ul ) 
[6779] ( move 4 , 0 ; move ua + 2 , 4 ) 
[6780] ( move 2 , 3 ; move 3 , ul - 2 ) 
[6781] ( move ua , 2 ; move ua - 3 , ul ) 
[6782] ( ( move ul - ua , ua ; move ul , 4 ) ; move ua - ul , ul ) 
[6783] loop 0 , 2 , ( move ul , 4 ; move 3 , v0 ) 
[6784] loop 0 , 2 , ( move ua , 3 ; move ul , ul ) 
[6785] ( move ul , ul ; move 3 , 2 ; move ua , ul / 2 ) 
[6786] ( move ua - 3 , ul / ua ; move ua , 4 / ua ; move ua , 3 ) 
[6787] ( move ua , 3 / ua ; move ua , ua * ua ) 
[6788] loop 0 , 3 , ( v1 = v0 ; move 2 + v1 , ua / 4 ) 
[6789] loop 0 , 5 , move ul - 3 , 3 + 2 
[6790] loop 0 , 2 , loop 1 , 3 , move v1 , v0 - v1 
[6791] loop 0 , 2 , move 3 - v0 , ua * ua 
[6792] ( move 4 , ua * ua ; move ua , 4 + ul ) 
[6793] loop 0 , 2 , loop 1 , 3 , move 2 * v1 , v1 
[6794] ( loop 0 , 6 , move v0 , v0 + v0 ; move ul , ua ) 
[6795] loop 0 , 7 , move 3 + v0 , v0 / 2 
[6796] ( move ua , ua ; move 4 , 4 ; move 3 + ul , ul ) 
[6797] ( ( move ua + ul , ua ; move ul , 3 ) ; move ua , 2 ) 
[6798] ( move 4 * 2 , 2 ; move ul - ua , ul ) 
[6799] ( move ul , 2 ; loop 0 , 5 , move v0 + 4 , v0 ) 
[6800] ( move 2 , ua ; v0 = ua + 3 ; move ua , v0 / ua ) 
[6801] ( move ul - ua , ul ; move ua , 4 * 2 ) 
[6802] loop 0 , 3 , ( move v0 , ul ; move 4 + ul , v0 ) 
[6803] ( move 3 , ua ; move ua , 2 / ua ) 
[6804] ( move ua + ul , ul - 4 ; move 4 , 2 ; v0 = ua * ua ) 
[6805] ( move ul - ua , ul - ua ; move ua , ul ; move 4 , 4 ) 
[6806] ( move 3 , ua - 2 ; move 4 , ul ) 
[6807] loop 0 , 5 , move v0 - ul , v0 / 3 
[6808] ( move ul , ul ; loop 1 , 6 , move ul , v1 - 4 ) 
[6809] ( move 2 , 3 + 2 ; move 3 , ul ) 
[6810] loop 0 , 3 , ( move 0 , ul ; move ua - v0 , v0 + v0 ) 
[6811] ( move ul , ul ; loop 0 , 4 , move v0 , 3 / v0 ) 
[6812] ( move 2 , ul ; move 3 , 4 + ul ; move ua , ua - ul ) 
[6813] loop 0 , 3 , ( move ul + v0 , v0 ; move ul , v0 ) 
[6814] ( move ua - ul , ul ; loop 0 , 6 , move 2 , ua / v0 ) 
[6815] ( move 3 * 3 , 4 * 2 ; move 3 , 2 ) 
[6816] ( move ul , 3 ; move ua , ul / 3 ) 
[6817] ( move 2 - ua , 4 + ul ; move ua , 4 ) 
[6818] ( move ua + 2 , ul ; move ul , 4 ; move ua , ua - ul ) 
[6819] ( move 3 , ua ; move 4 , ul + ul ; move ul + ul , ul ) 
[6820] ( move ua + ul , ul ; loop 0 , 5 , move v0 , ul ) 
[6821] ( move ul , 4 ; move ua , ul ; move ua , 4 ) 
[6822] ( loop 0 , 4 , move v0 , v0 ; move 4 , ul ) 
[6823] loop 0 , 7 , move ul + ul , ua - 4 
[6824] ( move ua - ul , ul / 3 ; move ul , 4 ; move ua , ul ) 
[6825] ( move ul , 3 + ul ; ( move 3 , ul ; move ul - ua , 4 ) ) 
[6826] ( move 3 + ul , 0 ; loop 0 , 5 , move 3 , 3 ) 
[6827] ( move ul , 4 ; move ua - ul , 4 ; move ua , ua + 2 ) 
[6828] ( move 0 - ua , ua ; move ul , ua ; move ua + 4 , ul ) 
[6829] ( move ul - ua , 2 ; move ua , ul / 3 ) 
[6830] ( v0 = 3 * 3 ; loop 1 , 5 , move v0 , v0 ) 
[6831] loop 0 , 7 , move 2 , 3 / v0 
[6832] ( move ua , 0 ; loop 0 , 3 , move v0 , ul - v0 ) 
[6833] ( move ua , 4 / ua ; move 4 + ul , 4 ) 
[6834] ( loop 0 , 5 , move ul + v0 , v0 ; move ua , v0 ) 
[6835] ( move ul - 3 , 0 ; move ua , 2 ) 
[6836] ( move ua , ua ; move ul - ua , ul ; move ua , ua ) 
[6837] ( loop 0 , 4 , move ua , 3 ; move ul , 4 ) 
[6838] ( move ua + ul , ua ; loop 0 , 6 , move v0 , v0 ) 
[6839] ( move ua + 2 , ua ; move 3 , 4 ) 
[6840] ( move ul / 4 , ul ; loop 0 , 3 , move 2 , ul ) 
[6841] ( loop 0 , 2 , move ua , v0 - 4 ; move v0 + 4 , 0 ) 
[6842] ( loop 0 , 5 , move ul , ul ; move ul - ua , ua ) 
[6843] ( loop 0 , 4 , move 2 , 3 / v0 ; move v0 , ul ) 
[6844] ( loop 1 , 4 , move v1 + v1 , ul ; move v1 , ul ) 
[6845] ( move ua , 4 + ul ; move ua + ul , ul ) 
[6846] loop 0 , 4 , move 3 , v0 / 4 
[6847] ( v0 = ua ; move ua , v0 ; loop 1 , 6 , move v0 , 4 ) 
[6848] ( move ua , 0 ; move 3 , 3 ; move ul + ul , 4 + ul ) 
[6849] ( move 4 , 4 + 3 ; ( move 3 , ul ; move ua , ul ) ) 
[6850] ( move ua + 2 , 3 ; move ua / 4 , 4 + ul ) 
[6851] ( move ua + ul , 0 ; move ua , ua - 4 ) 
[6852] ( move 3 , 4 + ul ; move 3 , 3 / ua ) 
[6853] ( move ul , ul ; loop 0 , 3 , move 3 , ul ; move ul , v0 ) 
[6854] ( move ua , ul ; loop 0 , 5 , move ua , 3 ) 
[6855] loop 0 , 6 , move 0 - ul , v0 * v0 
[6856] loop 0 , 3 , move 0 - ua , 4 
[6857] ( loop 0 , 4 , move v0 , 4 ; move v0 , ul ) 
[6858] ( move ua , ul / 2 ; move 3 , 0 - 4 ; v0 = ul + ul ) 
[6859] ( loop 0 , 5 , move v0 , ul ; move 4 , 2 ) 
[6860] ( move 4 , ul ; ( move ua - ul , ul ; move ul , ul + ul ) ) 
[6861] loop 0 , 3 , move v0 * 4 , ul - 3 
[6862] ( move 4 + 4 , ua + ul ; move ul , ul ; move 3 , ua + ul ) 
[6863] loop 0 , 3 , ( move ua - v0 , v0 ; move ul , 3 ) 
[6864] loop 0 , 2 , move ua + ul , v0 * 4 
[6865] ( move ua , ua * ua ; loop 0 , 5 , move v0 , v0 ) 
[6866] loop 0 , 6 , move v0 + ul , 0 - 3 
[6867] ( move 3 , 2 ; move ua , ua / 4 ) 
[6868] ( loop 3 , 9 , v4 = ul ; loop 2 , 4 , move ua , v3 ) 
[6869] ( loop 0 , 4 , move v0 , ul ; move 4 + v0 , ua ) 
[6870] loop 0 , 3 , loop 1 , 2 , move v0 + ua , 4 
[6871] ( move ua , ul / 2 ; ( move ul , 4 ; move ua + ul , ua ) ) 
[6872] ( move 0 - 2 , 4 * 3 ; move ua , ul ) 
[6873] ( move ua , ua * ua ; move ua - ul , ua - 3 ) 
[6874] ( loop 0 , 6 , move ul , ul / v0 ; move v0 , v0 ) 
[6875] loop 0 , 7 , move ul - v0 , v0 / ua 
[6876] loop 0 , 4 , move v0 + 2 , ul - v0 
[6877] loop 0 , 3 , ( move v0 , v0 ; move ul , ul - v0 ) 
[6878] ( move 4 + 3 , ua ; move ul , ul ; move ua , 4 * 2 ) 
[6879] ( move ul + ul , ua + ul ; loop 0 , 4 , move ul , v0 * 4 ) 
[6880] ( move 4 , 0 ; move 4 , ul + ul ; move ua , ua - ul ) 
[6881] ( v0 = ua + 2 ; loop 1 , 7 , move v0 / 2 , ul ) 
[6882] ( loop 0 , 5 , move v0 - ul , ul ; move 4 , 0 ) 
[6883] ( loop 0 , 5 , move v0 , 2 ; move ua , v0 ) 
[6884] ( loop 0 , 4 , move 4 , 3 ; move v0 , ul / v0 ) 
[6885] ( ( v0 = ua - ul ; move v0 , ua - 4 ) ; move 3 , ul ) 
[6886] loop 0 , 3 , ( move ul - v0 , ua ; move 3 , ul / 3 ) 
[6887] ( move ua , 4 / ua ; move ua - ul , 3 ) 
[6888] ( loop 0 , 6 , move v0 , 2 ; move ul , v0 ) 
[6889] ( move ul - ua , 3 + 3 ; move ul + ul , ul ) 
[6890] ( loop 0 , 5 , move ul , 3 - v0 ; move ua , v0 ) 
[6891] ( move 2 - ua , ua ; move ua + 2 , ua * ua ) 
[6892] ( move 4 + ul , 3 / ua ; move ua , ul ) 
[6893] loop 0 , 2 , ( move 4 , v0 ; move 2 , v0 ) 
[6894] ( move ua + 4 , ua - ul ; move 3 , ul ) 
[6895] loop 1 , 3 , ( loop 2 , 9 , v3 = v2 ; move v3 , 4 ) 
[6896] ( move 2 , ul ; loop 0 , 6 , move 3 , v0 ) 
[6897] loop 0 , 7 , move v0 + ul , v0 - 2 
[6898] ( move ul , ul ; loop 0 , 6 , move v0 - ul , v0 * v0 ) 
[6899] loop 0 , 3 , ( move v0 , 4 ; move v0 + v0 , ul ) 
[6900] loop 0 , 4 , move 4 , 3 / 2 
[6901] ( ( move 0 - 3 , ul ; move ua , ua + 2 ) ; move ul , ua ) 
[6902] ( loop 0 , 5 , move ul , 0 ; move v0 + 3 , v0 + v0 ) 
[6903] ( move 4 + 2 , ul ; move ua , ul + ul ; move 0 , ua ) 
[6904] ( loop 0 , 2 , move 3 , ua - v0 ; move ua , 2 ) 
[6905] ( move ua , 3 ; loop 0 , 5 , move ul , 3 * v0 ) 
[6906] loop 0 , 7 , ( v1 = ul - v0 ; move v0 , v1 - 4 ) 
[6907] ( v0 = 3 ; loop 1 , 5 , move 3 , v0 * v0 ) 
[6908] ( move 4 - ul , 2 ; loop 0 , 6 , move v0 , v0 * v0 ) 
[6909] ( move 3 , ua ; ( move ua , ua + ul ; move 2 - ua , ul ) ) 
[6910] loop 0 , 4 , move v0 + 4 , ua / v0 
[6911] ( move ua - 4 , ul ; move 2 - ua , ua + 2 ) 
[6912] ( move 2 , ua ; move 0 - ul , ul - 2 ; move ua , ul / 4 ) 
[6913] ( move 2 , ua ; move ul , 2 ; move ul , ul ) 
[6914] ( move ul , ua ; move ua , 0 ; move ua - 2 , 4 * 2 ) 
[6915] ( move ul , ua ; move ua + ul , 4 + ul ) 
[6916] ( loop 0 , 4 , move 4 , 3 ; move ua , 4 ) 
[6917] ( loop 0 , 5 , move ul , ul / v0 ; move v0 , v0 * 4 ) 
[6918] ( move ul - ua , 0 - ul ; move 3 + ul , ul ) 
[6919] loop 0 , 7 , ( v1 = ul - 4 ; move ul , ul / v1 ) 
[6920] ( move ua , ul / ua ; move 3 * 2 , ul + ul ) 
[6921] ( loop 0 , 6 , move 4 - 3 , ul / ua ; move 3 , ul / v0 ) 
[6922] loop 0 , 4 , move 4 - ua , 4 + v0 
[6923] ( move ua + ul , ua ; move ua , 3 ; move ua , 4 ) 
[6924] loop 0 , 3 , move 2 - ua , 4 + ul 
[6925] loop 0 , 2 , ( move 2 + v0 , 3 ; move ul , ul ) 
[6926] ( move 0 - 4 , 4 / ua ; move ua - ul , ul - 2 ) 
[6927] ( ( move ua , ua ; move 2 , ul / ua ) ; move ua , 4 ) 
[6928] ( move ul - ua , 2 ; move ua , ua + ul ; move 2 , 2 / 3 ) 
[6929] ( move 4 , ua ; move ua , ua / 4 ; v0 = ul + ul ) 
[6930] loop 0 , 2 , ( move ua , 4 ; move v0 , 4 ) 
[6931] ( move ul + ul , 4 / ua ; ( move ua , ul ; move ul , 0 ) ) 
[6932] loop 0 , 3 , move 4 , ua / 4 
[6933] ( ( move ua , ul / ua ; move ul , 3 ) ; move ua + ul , 2 ) 
[6934] ( move ul , ul ; loop 0 , 4 , move ua - 3 , v0 + ul ) 
[6935] ( move ul , 2 / ua ; loop 0 , 5 , move v0 , 4 ) 
[6936] ( loop 0 , 6 , move ul , v0 ; move v0 , ul / v0 ) 
[6937] ( move ua , 4 ; move ua + ul , 3 ) 
[6938] ( move ua , ua ; move ua + ul , 3 + 2 ) 
[6939] loop 0 , 3 , ( move ul , v0 ; move 3 , 3 ) 
[6940] ( loop 0 , 3 , move 2 , v0 * v0 ; move ul , v0 ) 
[6941] ( move 3 + ul , 2 ; loop 0 , 5 , move v0 , 2 - v0 ) 
[6942] ( loop 0 , 3 , move ua , ua * ua ; move ul , 3 + v0 ) 
[6943] ( move 4 , 3 / ua ; move 3 - ua , ua + 2 ; move 4 , ua ) 
[6944] ( move 3 - ua , ul ; move 0 - ua , 2 ) 
[6945] ( move ul , 4 + ul ; move 2 + ul , 0 ; move 4 , 2 ) 
[6946] ( move 4 , 4 ; loop 0 , 3 , move ul , ul ) 
[6947] ( move ua / 2 , ul / 3 ; move 4 , ul ) 
[6948] ( move 0 - 4 , 4 ; move ua , ul ) 
[6949] ( loop 2 , 5 , move ua , 4 ; move ul , ul ) 
[6950] ( move ul , 4 ; move ua / 2 , ua ; move ul - ua , 4 ) 
[6951] ( move ul , ua / 4 ; move ua , 2 / 3 ; move 2 , 3 * 2 ) 
[6952] ( move ua + ul , ul / 4 ; move 3 , ul ) 
[6953] loop 0 , 2 , move 0 - ua , 4 
[6954] ( move ua , 2 ; loop 0 , 2 , move ul - 4 , v0 ) 
[6955] ( move 2 , 4 / ua ; move ua , ul ) 
[6956] move 4 * 2 , 3 * 3 
[6957] ( move 4 , ua ; loop 0 , 3 , move 3 , ul ) 
[6958] loop 0 , 3 , move v0 + ul , v0 - 3 
[6959] loop 0 , 7 , move 0 - ua , 4 
[6960] ( move 4 , ua / 4 ; move 3 , 4 + 4 ) 
[6961] ( move ua , ua / 4 ; move 4 , ul + ul ) 
[6962] ( move ua , 4 + ul ; move ua + 2 , ua - 2 ) 
[6963] ( move ul , ua + 2 ; loop 0 , 6 , move ua - v0 , 4 ) 
[6964] ( move ua , ua + ul ; loop 0 , 6 , move v0 , 2 ) 
[6965] loop 0 , 5 , move 4 + ul , 3 
[6966] loop 0 , 3 , move 4 , v0 - 3 
[6967] ( ( move ua , ul ; move ua - 4 , 4 ) ; move ua / 2 , ul ) 
[6968] loop 0 , 7 , move v0 - 2 , v0 + 3 
[6969] loop 0 , 2 , loop 1 , 3 , move v1 , 4 / ua 
[6970] ( v0 = 3 - ua ; loop 1 , 7 , move v0 , v0 * ua ) 
[6971] ( move 4 + 3 , ua ; move ua + 3 , ua + 2 ) 
[6972] ( loop 0 , 4 , move 2 / v0 , ul ; move ua , v0 ) 
[6973] ( move ua , ua * ua ; loop 0 , 6 , move v0 , ul - 4 ) 
[6974] ( move 0 - ua , ua ; move 4 - ul , ul ; move 4 , ua + ul ) 
[6975] ( move 2 , ul ; move ua , ul ; ( move 3 , 2 ; v0 = ul ) ) 
[6976] ( move ua , 2 / ua ; loop 0 , 4 , move v0 , v0 ) 
[6977] ( move ul , ua ; move ua , 3 * 2 ; move ua , 4 ) 
[6978] loop 0 , 2 , ( move 3 , v0 ; move ul , v0 ) 
[6979] loop 0 , 3 , ( move v0 , ul ; move 3 - ua , v0 ) 
[6980] ( move 2 , ul ; loop 0 , 6 , move 2 , v0 / 4 ) 
[6981] ( move ua , 2 - 3 ; move 4 , 3 ) 
[6982] ( move ua + 2 , ua * ua ; move ua , 3 ) 
[6983] ( move 4 , 4 ; loop 0 , 4 , move v0 , ul / v0 ) 
[6984] ( move ua , 0 ; loop 1 , 4 , move 4 , 3 ) 
[6985] loop 0 , 3 , move v0 * 4 , 4 * v0 
[6986] ( loop 0 , 4 , move 3 , v0 ; move ua , v0 ) 
[6987] ( move 3 , ul / 2 ; move ua , 2 ) 
[6988] ( move ua + 4 , ua - 4 ; move ul , ul + ul ; move ul , ua ) 
[6989] ( loop 0 , 6 , move ul , v0 ; move 4 , ul ) 
[6990] ( move ul , 3 ; move ul , ua - ul ; move ua , 4 / ua ) 
[6991] ( move 3 , 4 * 2 ; move 3 , ul ) 
[6992] ( move ua , ua ; move ul , 4 - ua ; move 3 , 4 * 2 ) 
[6993] loop 0 , 6 , move 3 - ua , ua - v0 
[6994] ( move 3 , ul ; move ua , 2 - ua ; move ua , ua + 3 ) 
[6995] ( loop 0 , 3 , move 3 , ua ; move v0 , v0 ) 
[6996] ( ( move ua , 2 + ul ; move 2 , ul ) ; move ua , ua - 4 ) 
[6997] ( move ua + 3 , 2 ; loop 0 , 5 , move v0 , ul ) 
[6998] ( move 2 , 3 + ul ; move ul - ua , 4 ) 
[6999] ( move ua + ul , 3 + ul ; move 4 , 2 ) 
[7000] loop 0 , 3 , move 4 - ua , ul - v0 
[7001] ( loop 0 , 3 , move v0 , v0 ; move v0 - ua , v0 ) 
[7002] ( move ul + ul , ua * ua ; move ua , 0 - ul ) 
[7003] ( move ua , 3 ; move ul , ul ; move 4 , ul + ul ) 
[7004] ( move 4 , 4 + ul ; v0 = 4 ; move v0 - ul , v0 ) 
[7005] ( move ua , ua / 2 ; move 3 , ul ; move ua - ul , ul ) 
[7006] ( v0 = ua - 4 ; loop 1 , 7 , move 4 / v0 , v1 ) 
[7007] ( loop 0 , 6 , move 3 , ul ; move v0 , ua ) 
[7008] ( move 4 + ul , ul ; move ul + ul , 3 ; move ua , ul ) 
[7009] ( move 4 , ua * ua ; loop 0 , 4 , move v0 , v0 ) 
[7010] ( move ua + ul , 0 ; move ua + 3 , 4 ) 
[7011] loop 0 , 6 , move 4 , ua - 3 
[7012] ( move ua , ul / 3 ; move ul - ua , ul ) 
[7013] ( move ua + ul , 3 / ua ; move 4 , ul ) 
[7014] ( move ua , ul ; move 2 , ua + ul ; move ua , 4 ) 
[7015] ( move ua + ul , ua / 4 ; move 3 - ua , ul ) 
[7016] loop 0 , 6 , move 3 / v0 , 4 - v0 
[7017] loop 0 , 2 , ( move 4 , ul ; move 4 , 3 ) 
[7018] ( move 2 + ul , ul ; move ul , ul ; move ua , ua - 3 ) 
[7019] loop 0 , 2 , move 0 - 3 , ul - 2 
[7020] ( ( move ua , 0 ; move 2 , ua ; move ul , ul ) ; move 2 , ul ) 
[7021] ( move 4 , ul ; move ua + ul , 4 ) 
[7022] loop 0 , 4 , move v0 + ul , ua * ua 
[7023] ( move ua , ua ; move 2 + ul , ul ; move ua + ul , 3 ) 
[7024] loop 0 , 5 , move 2 , v0 / 2 
[7025] ( move ua + ul , 4 ; move ua , ua - 2 ) 
[7026] ( loop 0 , 6 , move v0 , ua + v0 ; move 4 , 2 ) 
[7027] loop 0 , 4 , move v0 + ua , 0 - 3 
[7028] ( move ua , ul + ul ; move 4 , ul / 3 ) 
[7029] ( loop 0 , 6 , move v0 , ul ; move v0 , 3 + v0 ) 
[7030] ( move ua , 3 ; loop 0 , 4 , move v0 , ul ) 
[7031] ( move ua , ul / ua ; move ul - ua , ul ) 
[7032] ( move 4 , ul ; loop 0 , 3 , move v0 + ul , v0 ) 
[7033] ( move ua , ul ; move 4 + ul , 3 * 3 ) 
[7034] loop 0 , 7 , move 2 - 3 , ul / v0 
[7035] ( loop 0 , 5 , move ul , v0 ; loop 1 , 2 , move v0 , ul ) 
[7036] ( loop 0 , 3 , move v0 , ua ; loop 1 , 4 , move 4 , ul ) 
[7037] ( move ul + ul , 3 ; loop 0 , 3 , move v0 , 2 ) 
[7038] ( loop 0 , 2 , move v0 + 3 , ul ; move ul , v0 ) 
[7039] ( move ua , ua ; move ul , 2 ; loop 0 , 4 , move v0 , v0 ) 
[7040] ( move ua , 0 ; move 3 - ua , ua - ul ) 
[7041] ( move ua - 3 , 0 ; loop 0 , 4 , move v0 , ul - v0 ) 
[7042] ( move ul + ul , ua - ul ; move ua , ul / 4 ) 
[7043] ( loop 0 , 4 , move 2 , ul ; move v0 , ua ) 
[7044] ( loop 0 , 5 , move 3 , v0 ; move v0 , 0 ) 
[7045] loop 0 , 5 , move ua + ul , 0 - 2 
[7046] ( loop 0 , 6 , move ul , 0 ; move v0 , v0 + v0 ) 
[7047] ( move ul , 2 - ua ; move ua , 2 / 3 ; move ul , ul ) 
[7048] loop 0 , 4 , move ua / 2 , 4 - v0 
[7049] ( move ua - ul , ua * ua ; move 2 , ul ) 
[7050] ( move 0 - ua , ul ; move 2 , ul ) 
[7051] ( move ua , ul ; v0 = ul - ua ; move ua , v0 / 2 ) 
[7052] ( move ua , ua ; ( move ua , 4 ; move 3 , 4 / ua ) ) 
[7053] loop 0 , 2 , loop 1 , 3 , move 3 + v1 , ul / v0 
[7054] ( move ul , ua ; loop 0 , 6 , move ua - 2 , v0 ) 
[7055] ( loop 0 , 5 , move ul + v0 , 4 ; move ul + v0 , v0 ) 
[7056] ( move ua , ul / ua ; move ul , 3 ; move 3 , 2 ) 
[7057] ( move ul + ul , ul - ua ; move ul - ua , 4 + 3 ) 
[7058] loop 0 , 3 , move 2 , v0 - 3 
[7059] ( loop 0 , 6 , move ul , v0 + ul ; move ul , ua + v0 ) 
[7060] loop 0 , 3 , ( move v0 , ua ; move 2 , v0 ) 
[7061] loop 0 , 2 , ( move ua , v0 - 4 ; move v0 , v0 ) 
[7062] ( move 0 - 2 , ua - ul ; loop 0 , 5 , move v0 , v0 ) 
[7063] ( move ul , ua ; loop 0 , 4 , move v0 + ul , v0 + v0 ) 
[7064] loop 0 , 3 , ( move 4 , v0 ; move 0 , v0 * v0 ) 
[7065] ( loop 0 , 6 , move v0 - ul , ul / 2 ; move ul , v0 ) 
[7066] ( move 2 + ul , ul ; loop 0 , 5 , move v0 , 3 ) 
[7067] ( move 2 - ua , ul ; move ua , ua - 4 ) 
[7068] loop 0 , 4 , move 2 , v0 / 4 
[7069] loop 0 , 3 , move v0 * 2 , ua / 4 
[7070] ( move 2 , ul ; move 3 , ul ; move ua , ul ) 
[7071] ( move 2 , ul ; loop 0 , 6 , move ul , v0 + 4 ) 
[7072] ( move ua , 4 - ul ; ( move 3 , 2 ; move 3 , 4 - ua ) ) 
[7073] ( move ua , 3 ; move ul , ul ; loop 0 , 5 , move v0 , v0 ) 
[7074] loop 0 , 6 , move 0 - ua , ua * ua 
[7075] loop 0 , 6 , move v0 - ul , 3 
[7076] ( loop 0 , 6 , move v0 , ul + ul ; move ua , 3 ) 
[7077] ( loop 0 , 4 , move v0 , 4 + ul ; move v0 , ua * v0 ) 
[7078] ( loop 0 , 3 , move 4 - v0 , ul ; move v0 , ul ) 
[7079] ( move ua , ua * 4 ; ( move ul , 4 + ul ; move ua , 4 ) ) 
[7080] loop 0 , 2 , ( move ul , ua - ul ; move ua , 4 ) 
[7081] ( move 3 + 3 , ua + 4 ; move ul , ul ; move ua - ul , 2 ) 
[7082] ( move 2 - ua , 4 ; move 4 , 2 ) 
[7083] ( move 3 / ua , 3 ; move ua , ua ; move ul - ua , ul ) 
[7084] ( move ul , 2 ; move ua , ul - ua ; move ua - ul , 2 ) 
[7085] ( move 4 + ul , ul / ua ; loop 0 , 5 , move v0 , v0 ) 
[7086] ( move ua , ul ; loop 0 , 6 , move v0 , ul - v0 ) 
[7087] ( loop 0 , 6 , move v0 , ul ; move 3 , ua ) 
[7088] loop 0 , 2 , loop 1 , 3 , move ua - 3 , v1 - 3 
[7089] ( move ua , 2 ; move ul , ul / ua ; move 4 , ul ) 
[7090] ( loop 0 , 5 , move 3 , v0 - 4 ; move ul , ul ) 
[7091] loop 0 , 7 , move ua / 4 , 3 * v0 
[7092] loop 0 , 7 , move v0 / 4 , ul / v0 
[7093] ( move 2 , 3 / ua ; move ua , 4 ) 
[7094] ( move 0 , ul ; loop 0 , 6 , move v0 , v0 * v0 ) 
[7095] loop 0 , 3 , ( move v0 , ul ; move v0 , v0 + 2 ) 
[7096] ( ( move ua , 4 ; move ul , 3 ) ; move ua + ul , ul ) 
[7097] loop 0 , 3 , move 3 , 3 / v0 
[7098] loop 0 , 7 , move v0 / 2 , 4 + ul 
[7099] loop 0 , 3 , move v0 * 3 , v0 / 3 
[7100] ( move 2 * 2 , ul ; loop 0 , 3 , move 4 , 2 ) 
[7101] ( move 2 + 2 , ul ; loop 0 , 4 , move ul , ul ; move 4 , ul ) 
[7102] ( loop 0 , 4 , move v0 , ul ; move v0 , v0 * 4 ) 
[7103] ( move 3 + 3 , ua + ul ; move ua , 3 ) 
[7104] ( move ul , ua + ul ; loop 0 , 3 , move 4 , ul ) 
[7105] loop 0 , 3 , move v0 + ul , v0 + 4 
[7106] ( move ua - ul , ua ; loop 0 , 5 , move v0 , ul ) 
[7107] ( move 0 - 3 , ul - 2 ; loop 0 , 5 , move v0 , v0 ) 
[7108] ( move ua + 2 , ua ; move ua , ua - 4 ) 
[7109] ( loop 0 , 3 , move 4 , ul ; move v0 , v0 / ua ) 
[7110] loop 0 , 7 , move v0 - 2 , ul - v0 
[7111] ( loop 0 , 3 , move ul , v0 ; move ua , 4 * 3 ) 
[7112] ( move 4 , ul / 3 ; move ua - ul , ul ) 
[7113] ( move ul , 3 ; loop 0 , 4 , move v0 , v0 * 4 ) 
[7114] loop 0 , 3 , move 3 - ua , v0 + v0 
[7115] ( move 2 - ua , ul ; move 4 + ul , ua + 2 ) 
[7116] ( move ua , 4 ; move ua + 2 , 4 ) 
[7117] ( move ua / 4 , ul + ul ; move ua , 4 * 3 ) 
[7118] ( loop 0 , 6 , move v0 - ul , v0 ; move 3 , ul ) 
[7119] ( move 0 - ua , ua ; move ua - ul , ul - 3 ) 
[7120] loop 0 , 3 , ( move v0 - ul , v0 + ua ; move 3 , v0 ) 
[7121] loop 0 , 2 , ( move 2 , ul ; move 3 , ul ) 
[7122] ( move ua , ua - 4 ; loop 0 , 5 , move v0 , v0 ) 
[7123] ( move 4 , 4 + 2 ; move 3 + ul , ul ) 
[7124] loop 0 , 3 , ( move v0 , v0 ; move v0 + 4 , v0 ) 
[7125] loop 0 , 5 , move 3 + v0 , ul - v0 
[7126] ( loop 0 , 6 , move v0 , v0 ; move v0 , 4 ) 
[7127] ( move ua , ul + ul ; move 4 , ua - 2 ) 
[7128] ( move ul - ua , ua * ua ; ( move ua , ul ; move ul , 0 ) ) 
[7129] ( loop 0 , 5 , move ul , v0 ; move 2 , v0 ) 
[7130] ( move ua + ul , 4 ; move ua + 2 , 2 ; v0 = ul ) 
[7131] ( move ua , ua ; move ul + ul , ul ; move ua , 2 + ul ) 
[7132] ( move 3 + 2 , 4 * 4 ; move 2 , 2 ) 
[7133] ( move 2 + ul , 0 ; move ua - ul , 4 + ul ) 
[7134] ( move 2 , ul ; move ua - ul , 3 + ul ; move ua - 2 , 2 ) 
[7135] ( move 4 , 3 - 4 ; loop 0 , 5 , move v0 , v0 * v0 ) 
[7136] ( move ua + ul , 0 ; move ul , ua ; move 2 , 4 + ul ) 
[7137] ( loop 0 , 5 , move ul + v0 , v0 ; move 2 , ua ) 
[7138] loop 0 , 3 , move 3 / v0 , ul / v0 
[7139] ( move 2 + ul , ul + ul ; move 0 - ua , ul ) 
[7140] ( move ua + ul , ul / ua ; loop 0 , 6 , move v0 , v0 ) 
[7141] ( move ua , 3 ; move ua + 3 , 4 ) 
[7142] ( loop 0 , 3 , move v0 , 4 ; move 4 , v0 ) 
[7143] ( move ua + ul , 2 ; move ua , 3 + ul ) 
[7144] ( v0 = ul / ua ; loop 1 , 5 , move ua , 2 + v0 ) 
[7145] ( move 3 * 3 , ua / 4 ; move ua , 3 ) 
[7146] ( move ul - 3 , ua ; move ul - ua , ul ) 
[7147] ( move 4 + ul , 0 ; move ua , ua / 4 ) 
[7148] loop 0 , 2 , move ul - ua , ua / 3 
[7149] loop 0 , 5 , move ul - 3 , v0 - 4 
[7150] loop 0 , 3 , loop 1 , 2 , move ua / 4 , v1 - v0 
[7151] loop 0 , 7 , ( v1 = v0 ; move v0 / 2 , v0 / 3 ) 
[7152] ( move ua + 3 , 2 ; move 2 , ul ) 
[7153] ( loop 0 , 6 , move 3 - ua , v0 ; move ua , v0 ) 
[7154] ( move 4 + ul , ua * ua ; move ua , ua / 4 ) 
[7155] loop 0 , 2 , move 4 , ua / 4 
[7156] ( move 2 , 3 ; move ua / 2 , 3 ; move 4 , ul + ul ) 
[7157] ( loop 0 , 6 , move v0 , v0 ; move 3 , v0 ) 
[7158] loop 0 , 3 , ( move v0 * v0 , 2 ; move ul , ul / v0 ) 
[7159] ( move 4 , ul ; loop 0 , 2 , move 4 , 4 ) 
[7160] ( move ul , ua ; move ua , ul ; move ul + ul , ul ) 
[7161] ( move 4 , ua - 4 ; move ua + 2 , ul + ul ) 
[7162] loop 0 , 6 , move v0 / 2 , 2 
[7163] ( move ua , 3 ; loop 0 , 4 , move 3 , ua + ul ) 
[7164] ( loop 0 , 3 , move 2 , ul ; move ua , ul ) 
[7165] ( move ua , 4 ; loop 0 , 5 , move 2 , v0 ) 
[7166] ( ( move ul - 3 , 0 ; move ua - 4 , ul ) ; move 3 , ul ) 
[7167] ( move ua , 0 ; loop 0 , 2 , move 4 + ul , ul ) 
[7168] loop 0 , 2 , ( move 4 , 3 ; move ua , ul ) 
[7169] loop 0 , 2 , ( move 3 - ua , v0 ; move ua , ua ) 
[7170] ( move 3 , 4 ; move ua , 4 / ua ) 
[7171] ( move ua - ul , ua / 4 ; move ua , 4 / 3 ) 
[7172] ( move ua + 4 , ul ; move 3 , ua - ul ) 
[7173] ( ( move ua , ua ; move 2 , 4 ) ; move 4 , ua ) 
[7174] loop 0 , 4 , move v0 * v0 , ua / 3 
[7175] ( move ua , ua ; loop 0 , 4 , move v0 , ul / 2 ) 
[7176] ( move ua , 2 ; move 3 + ul , ua - 4 ) 
[7177] ( move ua , 0 ; loop 0 , 6 , move v0 , 3 * v0 ) 
[7178] ( move ua + ul , ul ; move ua - 4 , ul ; move ua + 3 , 3 ) 
[7179] loop 0 , 7 , move 0 - ua , 3 
[7180] ( move 4 , 3 ; loop 0 , 6 , move v0 , v0 * v0 ) 
[7181] ( move ua / 2 , 0 - ua ; move 4 , 4 * 3 ) 
[7182] ( move ul - ua , ua / 4 ; move ul - 3 , ul ) 
[7183] ( move ua , ul - 3 ; loop 0 , 5 , move v0 , ul + v0 ) 
[7184] ( move ul + ul , ul ; move 3 - ua , ul ; move 2 - ua , ul ) 
[7185] loop 0 , 6 , move 0 - 3 , v0 * v0 
[7186] ( move ua , ua - ul ; loop 0 , 4 , move v0 , v0 + 2 ) 
[7187] ( move ua , ul ; move ua - ul , 3 * 2 ; move ul , ua - ul ) 
[7188] ( loop 0 , 3 , move ul , 4 ; move 3 , v0 ) 
[7189] ( move 3 , ua - 4 ; move 2 + ul , ul ) 
[7190] ( move 0 - ua , 2 / 3 ; move ua , ul ) 
[7191] ( move ua , 0 ; move ul , 2 / ua ) 
[7192] loop 0 , 5 , move v0 + ua , ua - 3 
[7193] ( move ua , ua + 3 ; move ul , 3 - 4 ; move 2 , ul ) 
[7194] loop 0 , 4 , move v0 - ua , 4 - v0 
[7195] ( move ua , 4 + 4 ; move 4 - ua , ul ) 
[7196] ( loop 0 , 2 , move 3 , v0 ; move v0 * 3 , ul ) 
[7197] loop 0 , 2 , ( move v0 , 4 ; move 3 , v0 ) 
[7198] loop 0 , 6 , move 2 - 3 , v0 / ua 
[7199] loop 0 , 5 , move v0 , 4 + 3 
[7200] ( loop 0 , 5 , move v0 , v0 ; move ul - v0 , v0 ) 
[7201] ( move 4 , 0 ; loop 0 , 3 , move ua , 2 ; v1 = ua ) 
[7202] ( move 3 , ua - 4 ; move ua , 4 ) 
[7203] ( loop 0 , 2 , move ua - ul , 4 ; move v0 , ul ) 
[7204] ( move 3 , 2 ; move ul , 3 ; move ul - ua , ul ) 
[7205] ( loop 0 , 2 , move ua , 4 ; move ul , ul + ul ) 
[7206] ( loop 0 , 5 , move ul , ul ; move 3 , v0 ) 
[7207] ( move ua / 3 , ul ; move 3 , ul + ul ; move ua , 4 ) 
[7208] ( move ul , ua + ul ; move ua , 4 ; move 4 , ul ) 
[7209] loop 0 , 2 , ( move v0 , 0 ; move 3 * 2 , v0 + ul ) 
[7210] ( move ua , ua + 4 ; loop 1 , 4 , move v1 , 2 * v1 ) 
[7211] loop 0 , 2 , move v0 - 3 , ul - 2 
[7212] loop 0 , 2 , move ua + v0 , v0 - 3 
[7213] ( loop 0 , 4 , move v0 , 4 ; move v0 , v0 + v0 ) 
[7214] ( move ua - 3 , 4 - ua ; move ua , ul / 4 ) 
[7215] ( move ua , 3 ; move ul - ua , ul ; move ua , ul ) 
[7216] ( move 3 , ul ; ( move ul + ul , 4 / ua ; move ua , ul ) ) 
[7217] ( move ua , ua * ua ; move ul , ua ; move ua - 4 , ul ) 
[7218] ( move ua , ua * ua ; move 3 , ua * ua ) 
[7219] ( move ua - 2 , ua - ul ; loop 1 , 5 , move ul - 4 , v1 ) 
[7220] ( move 3 , 3 ; loop 0 , 3 , move 2 , v0 ) 
[7221] loop 0 , 2 , ( move ua , v0 + 2 ; move ul , ul ) 
[7222] ( loop 0 , 4 , move v0 , v0 - 2 ; move v0 , 4 ) 
[7223] ( move ua - 4 , ul / 4 ; move 4 , ul ; move ul , ul ) 
[7224] ( move ul , 3 ; loop 0 , 3 , move ua , 3 ) 
[7225] ( loop 0 , 5 , move ul , ul ; loop 1 , ul , move ua , 4 + 3 ) 
[7226] ( move 4 , ul + ul ; move ua , 4 / ua ) 
[7227] ( loop 0 , 5 , move ul , ul / ua ; move v0 , v0 * 4 ) 
[7228] ( v0 = ua ; move v0 , 3 / v0 ; move 4 , 4 ) 
[7229] ( move ul - ua , 0 - 3 ; move 2 , ul ) 
[7230] ( move ua / 4 , ua + ul ; move ua + 2 , ul + ul ) 
[7231] ( move ul , ul ; loop 0 , 6 , move v0 , ul - v0 ) 
[7232] ( move ul , ua ; move ul - ua , ul / 2 ; move 4 / 2 , 2 ) 
[7233] ( ( move ua - ul , 2 ; move ua , ul + ul ) ; move 3 , 4 ) 
[7234] loop 0 , 4 , move v0 + v0 , 4 / v0 
[7235] ( move ua - 3 , ul ; move ua , ua / 2 ; move ua + 2 , 4 ) 
[7236] loop 0 , 3 , move ua - 2 , v0 - 3 
[7237] ( move ua , 3 + ul ; move ul , ua * ua ; move ua , ul + ul ) 
[7238] ( ( move ul , 0 ; move ua , ul ) ; move ua , ul - 4 ) 
[7239] ( loop 0 , 6 , move ul , 2 ; move ua , ua ) 
[7240] ( move ua , ua * ua ; v0 = 2 - ua ; move v0 , v0 ) 
[7241] ( loop 0 , 4 , move 3 , v0 ; move v0 , ul ) 
[7242] ( move 4 , 3 ; move ul , ul ) 
[7243] ( move ul , ua ; move ua - ul , ul ; move 2 , ul ) 
[7244] loop 0 , 3 , loop 1 , 2 , move ua / 3 , v1 
[7245] ( ( move 4 , ua / 4 ; move ua , 3 ) ; move 2 , ua - 2 ) 
[7246] ( move ul - 3 , ul ; move ua + ul , ua * ua ) 
[7247] ( move ul , 3 ; move ua , ul / ua ; move ua + ul , 2 ) 
[7248] ( ( move ua , ul ; move ul , ul ) ; move ua + ul , ua - 3 ) 
[7249] ( loop 0 , 4 , move v0 , v0 ; move 3 * 3 , 3 ) 
[7250] ( move ua - 4 , 4 + ul ; move 4 + ul , ul ) 
[7251] ( move ua , ul - 3 ; move ua , ul - 4 ) 
[7252] ( move ua + ul , 2 ; loop 0 , 6 , move 2 , v0 ) 
[7253] ( move ul - 2 , ua ; move 4 , 2 ; move 4 , 3 ) 
[7254] loop 0 , 4 , move 4 + v0 , ua - v0 
[7255] ( v0 = ua / 2 ; move v0 + ua , v0 / 3 ) 
[7256] ( loop 0 , 6 , move v0 / 2 , v0 ; move v0 , v0 ) 
[7257] loop 0 , 3 , move 4 + ul , 4 - v0 
[7258] ( loop 0 , 6 , move ul , v0 ; move 4 , ua - ul ) 
[7259] ( move 4 , ul ; move 3 , 3 * 3 ) 
[7260] ( move 0 - ua , ul ; move ua + ul , ul ) 
[7261] ( move ua + ul , ul / 4 ; move ul , ul ) 
[7262] ( move ua + ul , 3 / ua ; loop 0 , 4 , move v0 , ul ) 
[7263] ( move 2 - 4 , 2 ; loop 0 , 4 , move 3 , 2 + ul ) 
[7264] ( v0 = 4 ; move ua , 4 + 4 ; move v0 , ua + 4 ) 
[7265] ( move ua , ul ; move 2 , 2 / ua ) 
[7266] ( move ua , ua * ua ; move 4 , 2 ) 
[7267] loop 0 , 3 , ( v1 = ua ; move v1 , ul ; move ul , 2 ) 
[7268] loop 0 , 3 , ( move 3 , ul ; v1 = ul ; move v1 , v1 ) 
[7269] loop 0 , 3 , ( move ul , 0 ; move v0 , ul ) 
[7270] loop 0 , 6 , ( move v0 , 4 / 3 ; v1 = v0 ) 
[7271] loop 0 , 6 , move 3 - v0 , ua - 4 
[7272] ( move ua + ul , ua ; loop 1 , 4 , move 4 - ua , v1 - ua ) 
[7273] ( move ua , ua * 3 ; move 2 , 3 / ua ; move ua , 2 - ua ) 
[7274] ( move ul , ua / 4 ; ( move ul , 2 ; move ua , 3 ) ) 
[7275] ( move ua , ul ; move ua , ul - 3 ; move ul , ul ) 
[7276] ( move ua , 3 / 4 ; loop 0 , 6 , move ul , v0 ) 
[7277] ( move 4 - ua , ua * ua ; move ua + ul , 2 ) 
[7278] ( loop 0 , 5 , move ua , 3 ; move ua , 4 ) 
[7279] ( move 3 , ul ; move ua , 0 - 3 ) 
[7280] ( ( move 3 , 4 / ua ; move ua , ua + ul ) ; move ul , ul ) 
[7281] ( move ul , ul ; loop 0 , 6 , move ul - v0 , v0 + v0 ) 
[7282] ( loop 0 , 4 , move ua + ul , 2 ; move 3 , ul ) 
[7283] ( move 2 , ul - 4 ; move ua , 3 * 2 ) 
[7284] ( loop 0 , 6 , move ul , ul ; move 3 , v0 * v0 ) 
[7285] ( move ul , ul - 2 ; loop 0 , 4 , move v0 , ua - v0 ) 
[7286] ( move 2 , ul ; loop 0 , 4 , move v0 - 2 , 2 ) 
[7287] loop 0 , 5 , move ul - 4 , v0 * 3 
[7288] ( move ua + ul , 4 ; ( move 4 , ua ; move 4 , ua + 4 ) ) 
[7289] ( move ul + ul , ua + ul ; move ua , 4 * 3 ) 
[7290] ( move ua + ul , ua - 3 ; move ua + ul , ua + 2 ) 
[7291] ( move ul , 4 + ul ; move ua / 3 , 2 ; move ul - ua , ul ) 
[7292] ( loop 0 , 6 , move ul , v0 / ua ; move ua , 4 ) 
[7293] ( loop 0 , 5 , move v0 , v0 ; move v0 , 4 + ul ) 
[7294] ( move ul , 4 ; move ua , 4 ; ( move 4 , ul ; move 3 , ul ) ) 
[7295] ( loop 0 , 2 , move ul , ua * ua ; move v0 - ua , v0 ) 
[7296] ( loop 0 , 6 , move 4 - ua , v0 ; move v0 - ul , 2 ) 
[7297] ( move ua , 3 / ua ; move 4 , ul ) 
[7298] loop 0 , 7 , move v0 - ul , v0 / 2 
[7299] ( loop 0 , 6 , move ua - 3 , v0 ; move ua , v0 ) 
[7300] ( move ua , 3 ; move 4 + ul , 2 ) 
[7301] loop 0 , 6 , move ul + v0 , ua / 3 
[7302] ( move ul , 2 / 3 ; loop 3 , 5 , move v3 , v3 ) 
[7303] ( move ua + 2 , ul ; move 4 - ua , 2 ) 
[7304] ( move ua , ua - 4 ; ( move 2 - ua , ul ; move ul , 4 ) ) 
[7305] loop 0 , 6 , move 2 - v0 , v0 - ul 
[7306] ( loop 0 , 4 , move 3 , v0 ; move v0 , v0 / ua ) 
[7307] loop 0 , 7 , move 4 - v0 , 4 / v0 
[7308] ( move ua , 3 + ul ; loop 0 , 5 , move ul , v0 + v0 ) 
[7309] ( v0 = ua ; loop 1 , 4 , move 2 , 4 * 3 ) 
[7310] ( move 2 , 4 ; move 0 - ua , ua * ua ) 
[7311] ( move ul , 2 ; move ua , ul + ul ; move 3 * 3 , 2 ) 
[7312] ( loop 0 , 4 , move v0 , 4 * v0 ; move v0 , ua ) 
[7313] ( move 2 , ua ; move ua , 3 / ua ) 
[7314] ( move ua , ul ; loop 0 , 5 , move ul + v0 , 4 ) 
[7315] ( loop 0 , 5 , move 4 / 2 , 3 - v0 ; move ua , 3 ) 
[7316] loop 0 , 3 , ( move ul , v0 ; move 2 , 2 ) 
[7317] ( move ua , ul / 3 ; ( v0 = 2 ; move 3 , v0 ) ) 
[7318] loop 0 , 4 , ( v1 = ua - v0 ; move v0 , 3 * v1 ) 
[7319] ( loop 0 , 4 , move v0 , v0 + ul ; move ul , ua ) 
[7320] ( v0 = ua + ul ; loop 1 , 6 , move 2 , v0 / v1 ) 
[7321] ( move 3 - ul , ul ; move ua , ul ; move ua , 4 ) 
[7322] ( move 4 - ua , 0 ; move ul , ul ; move ua , ul - 2 ) 
[7323] ( move ul , 2 ; loop 0 , 6 , move 3 , 2 ) 
[7324] ( loop 0 , 3 , move v0 + 2 , ul ; move ua , v0 ) 
[7325] ( move 2 - ua , 2 / 3 ; move ua , 4 ) 
[7326] ( move ua + ul , ul / 4 ; move ua , 2 + 2 ) 
[7327] ( loop 0 , 3 , move v0 , 4 ; move v0 , ul ) 
[7328] loop 0 , 7 , move v0 / 3 , v0 - 4 
[7329] loop 0 , 5 , move ua - 3 , v0 - ul 
[7330] ( move ul - ua , 2 ; ( move ul , ul / ua ; move ua , ul ) ) 
[7331] ( move 3 , 2 ; loop 0 , 3 , move v0 * v0 , v0 + ul ) 
[7332] ( loop 0 , 6 , move ul , v0 + 4 ; move v0 , v0 ) 
[7333] ( move ua , ua - ul ; move ul , ul ; move ua , ul ) 
[7334] loop 0 , 3 , ( move ul + v0 , ua ; move v0 , 2 ) 
[7335] ( move ua + 2 , ua + 3 ; move ua , 4 - ul ) 
[7336] ( move ul / ua , 2 ; loop 0 , 6 , move 4 , v0 ) 
[7337] loop 0 , 5 , move ua - v0 , 4 - v0 
[7338] loop 0 , 3 , move ua - ul , 4 + ul 
[7339] ( move 4 + ul , 4 ; move ul , ul ; move ua , ul ) 
[7340] ( move ua - ul , 4 ; move 2 , ul - ua ) 
[7341] loop 0 , 2 , ( move v0 , ul ; move ua , ul ; move v0 , ul ) 
[7342] ( move 4 , 3 * 3 ; loop 0 , 5 , v1 = 0 ; move ua , ul ) 
[7343] ( move ua , ul ; loop 0 , 3 , move v0 , v0 ) 
[7344] ( move ul - ua , 0 ; move ua , ua * ua ) 
[7345] ( move ul + ul , ul - 2 ; move ul , ua ; move ul - ua , 4 ) 
[7346] loop 0 , 6 , move 0 - ul , ul / v0 
[7347] loop 0 , 3 , ( move v0 + ul , 2 ; move v0 + v0 , 3 ) 
[7348] ( move ua + 3 , ul ; move 3 - ua , 3 - ul ) 
[7349] ( move ua , 2 ; move ua - ul , ul - 3 ) 
[7350] ( move ua , 2 / ua ; move 4 - ua , ul ) 
[7351] ( move 4 + 2 , ua ; move 2 , ul + ul ; move 3 , 2 - ua ) 
[7352] ( move ua , 2 ; loop 0 , 4 , move v0 , ul ) 
[7353] ( move ua , ua - ul ; move ul , ul + ul ; move 2 , ua - ul ) 
[7354] ( loop 0 , 4 , move ul , v0 + v0 ; move v0 , 2 ) 
[7355] loop 0 , 6 , move 3 / 2 , 4 / v0 
[7356] ( loop 0 , 5 , move v0 , v0 * 2 ; move ua , ua - v0 ) 
[7357] loop 0 , 3 , ( move v0 , v0 ; move ul , 4 ) 
[7358] loop 0 , 7 , move 2 - v0 , 3 / 2 
[7359] ( move ua , 0 ; move 2 , 4 ; loop 0 , ul , move ua , ul ) 
[7360] ( loop 0 , 5 , move v0 , 3 ; move ul , ul ) 
[7361] ( move ua , 3 ; move ul - ua , ua - ul ) 
[7362] ( move 0 , ul ; loop 0 , 6 , move v0 - 2 , v0 ) 
[7363] ( loop 0 , 5 , move ul , v0 ; move ua , ua / v0 ) 
[7364] loop 0 , 3 , ( move v0 + 4 , v0 ; move ul , ul / v0 ) 
[7365] loop 0 , 5 , move v0 - ua , v0 - 4 
[7366] ( move ua - ul , 4 + ul ; loop 0 , 4 , move 2 , v0 ) 
[7367] ( loop 0 , 2 , move 0 - 2 , ul ; move ua , ul ) 
[7368] ( loop 0 , 4 , move 4 - v0 , ul ; move v0 + v0 , ul ) 
[7369] loop 0 , 4 , move 3 , 2 / ua 
[7370] ( move 4 , 4 / ua ; move ua , ul ) 
[7371] loop 0 , 7 , move v0 / 4 , 4 / v0 
[7372] loop 0 , 7 , move v0 - 4 , 2 / v0 
[7373] loop 0 , 3 , ( move ua , 2 ; move v0 , 2 ) 
[7374] ( move ua + 4 , ua - ul ; move ul - 4 , ul - ua ) 
[7375] ( loop 0 , 3 , move 3 / v0 , v0 ; move ul - ua , v0 ) 
[7376] ( ( move ua - 2 , ul ; move ul + ul , 4 ) ; move 3 , 2 ) 
[7377] ( move 3 * 3 , ul ; loop 0 , 3 , move ul , ul ) 
[7378] loop 0 , 6 , move 3 / v0 , v0 - 3 
[7379] loop 0 , 3 , ( move v0 , ua - ul ; move 2 , v0 ) 
[7380] ( move ua , ua ; move ua , 4 / 3 ) 
[7381] ( move ua / 4 , ul ; move 2 - ua , ua ; move ul - ua , 4 ) 
[7382] ( ( move 0 - ua , ua ; move ul , 4 ) ; move 2 , ul + ul ) 
[7383] ( move ul - ua , ul ; loop 0 , 4 , move ul , ul / v0 ) 
[7384] ( move 2 , ul ; move ul - ua , 3 / ua ) 
[7385] ( move 2 , ul ; move ua - ul , 2 ) 
[7386] ( move ua , ua ; loop 0 , 2 , loop 1 , 3 , move v0 , ul ) 
[7387] ( loop 0 , 3 , move ul , v0 ; move ua , ua - v0 ) 
[7388] loop 0 , 6 , move ul , ul / ua 
[7389] ( loop 0 , 3 , move 4 , v0 ; move v0 + v0 , 4 ) 
[7390] loop 0 , 3 , loop 1 , 2 , move 2 , v0 * v0 
[7391] ( move 0 - ua , ua ; ( v0 = ul / 2 ; move ua , v0 ) ) 
[7392] ( move 3 , ul + ul ; loop 0 , 4 , move ul , ul ) 
[7393] ( loop 0 , 9 , v1 = ua ; loop 2 , 5 , move ua , v0 ) 
[7394] ( move ua , ul / ua ; loop 0 , 4 , move ul - v0 , ul ) 
[7395] ( move 4 , 0 ; move 3 * 3 , ul ) 
[7396] loop 0 , 2 , loop 1 , 3 , move v0 - v1 , ua / 4 
[7397] ( loop 0 , 3 , move v0 , 4 ; move ua + v0 , v0 ) 
[7398] ( move 4 , ua - 2 ; loop 1 , 5 , move ul , v1 ) 
[7399] ( move ua , 4 ; move ul , 2 ; move ua / 2 , 2 + ul ) 
[7400] loop 0 , 4 , move v0 + ul , 4 + ul 
[7401] ( move ua , ul ; move 3 / ua , 2 ; move ua , ua * ua ) 
[7402] loop 0 , 3 , ( move v0 , 4 ; move ul , ul ) 
[7403] ( move ua , ul / ua ; move ul + ul , 4 + 3 ; move 4 , ul ) 
[7404] ( move 0 , ul ; move ua , 4 ; loop 0 , 5 , move 2 , v0 ) 
[7405] ( move 2 , 4 ; move 4 + ul , 2 ; move ua - ul , ul + ul ) 
[7406] loop 0 , 3 , loop 1 , 2 , move ua , v0 + 2 
[7407] ( loop 0 , 2 , move ua + v0 , 2 ; move v0 , v0 ) 
[7408] ( loop 0 , 3 , move v0 , 4 ; move ua , v0 ) 
[7409] ( ( move 0 - ua , ul ; move ua / 2 , ua ) ; move ua , ul ) 
[7410] ( v0 = 0 ; loop 2 , 4 , move v2 + v2 , ua / 3 ) 
[7411] ( move ua + ul , ua ; move ua - ul , ua / 3 ) 
[7412] loop 0 , 7 , ( v1 = ul - v0 ; move 2 + v1 , v1 ) 
[7413] ( move 4 + ul , 4 / ua ; move ul , ul - ua ) 
[7414] loop 0 , 3 , ( move v0 , v0 / 4 ; move v0 , v0 ) 
[7415] loop 0 , 3 , ( v1 = 3 ; move ul , v1 ; move v1 , ul ) 
[7416] ( move ua , 0 ; loop 0 , 6 , move 2 , ul + v0 ) 
[7417] ( move ua , ua ; move ul - ua , 3 / 2 ; v0 = ua + ua ) 
[7418] ( move ua , ua / 4 ; move ul , 4 - ua ; move ua , 4 + ul ) 
[7419] ( move ua , ul ; loop 0 , 5 , move 2 , ul ) 
[7420] loop 0 , 3 , move v0 * 3 , ua * ua 
[7421] ( move ua + ul , ua ; move ua - ul , 4 ; move ul , ul ) 
[7422] ( move ua + ul , ul / 4 ; move 2 , ul ) 
[7423] ( move ua + 3 , ul ; move ul - ua , ul ) 
[7424] ( move 3 , ul ; loop 0 , 3 , move ul , ul ) 
[7425] ( move ua , ul ; loop 0 , 4 , move v0 + v0 , 3 ) 
[7426] loop 0 , 4 , move 4 / v0 , 4 + ul 
[7427] ( loop 0 , 2 , move ua - ul , v0 ; move 4 , ul ) 
[7428] ( move 2 - ua , ul ; move ul - ua , ul / 2 ) 
[7429] loop 0 , 3 , ( move v0 - ua , v0 - ua ; move 2 , 0 ) 
[7430] ( move ua , 4 + ul ; move ua - 4 , ul ) 
[7431] ( move ua , ul ; loop 0 , 6 , move v0 , 3 ) 
[7432] loop 0 , 7 , move v0 - 3 , v0 / 4 
[7433] ( loop 0 , 5 , move 2 , v0 ; move v0 , v0 ) 
[7434] ( move 3 - ul , 3 ; move 4 , 4 ) 
[7435] ( move ul , 3 ; move ua + ul , ua ; move 3 , 4 ) 
[7436] ( move ua - 2 , 3 ; move ua + ul , ua - ul ) 
[7437] loop 0 , 7 , move v0 / 3 , v0 * 3 
[7438] loop 0 , 7 , move v0 , 3 * 3 
[7439] ( move 2 , 2 ; ( move 3 , ua / 4 ; move 4 , 2 ) ) 
[7440] ( move 0 , ul / ua ; loop 0 , 5 , move 4 - ua , v0 ) 
[7441] ( move 4 - ua , 3 ; move ua , 4 ; move ul , ua * 3 ) 
[7442] loop 0 , 3 , move 4 - ua , 2 
[7443] ( move 0 , 2 ; loop 0 , 3 , move 3 , ua + v0 ) 
[7444] ( move ua - ul , 0 ; move ul , 4 ) 
[7445] loop 0 , 6 , move ua / v0 , 0 - 4 
[7446] ( loop 0 , 6 , move 4 , v0 ; move ua , v0 ; v1 = ul ) 
[7447] loop 0 , 7 , move v0 / 2 , v0 + v0 
[7448] ( move ua , ul - 4 ; move 4 / 3 , ul ) 
[7449] ( move 4 , ua * ua ; loop 0 , 5 , move ul , ul ) 
[7450] loop 0 , 3 , ( move ul , v0 - ul ; move ul + v0 , ul ) 
[7451] loop 0 , 6 , move 4 , v0 * 3 
[7452] ( move ua , ul ; loop 0 , 4 , move ua , 4 ) 
[7453] ( ( move ua , 4 ; move ul , 3 ) ; move 3 , 3 + ul ) 
[7454] ( move 4 , ua / 3 ; move ua , 4 + ul ) 
[7455] ( loop 0 , 5 , move v0 , ul ; move v0 , ul + v0 ) 
[7456] ( move ul , 3 ; loop 0 , 3 , move ua + v0 , v0 + ul ) 
[7457] ( move 0 , ua / 3 ; move ul , ul ; move ua + 4 , ul ) 
[7458] loop 0 , 3 , ( move v0 + v0 , ua ; move v0 , ul ) 
[7459] loop 0 , 3 , ( move ul , v0 ; move v0 - ua , v0 ) 
[7460] ( move 2 , ul / 4 ; move ua , ua - ul ) 
[7461] ( move ua , ul / ua ; loop 0 , 5 , move v0 , ul ) 
[7462] loop 0 , 4 , ( move ua - ul , ua / 4 ; v2 = ua + ul ) 
[7463] ( move ua , ua - ul ; move ul + ul , ua - ul ; move ua , 3 ) 
[7464] ( loop 0 , 4 , move v0 , v0 ; move ua , 4 / ua ) 
[7465] ( loop 0 , 5 , move ul , v0 + 2 ; move v0 , v0 ) 
[7466] ( move ua , 4 ; move ul , ul ; move ua , 4 / 2 ) 
[7467] ( loop 0 , 5 , move 2 , v0 - 3 ; move 3 - ua , v0 ) 
[7468] ( move 3 , ul ; loop 0 , 3 , move v0 , 2 + 2 ) 
[7469] ( move ul , 3 + ul ; move ul , ul / ua ; move ua + ul , 4 ) 
[7470] ( move ua , ua / 2 ; move ua , 3 ; move 3 - ua , ua + ul ) 
[7471] loop 0 , 5 , move v0 + 3 , ua - v0 
[7472] ( move 4 , ul ; move 2 , 4 + 2 ) 
[7473] ( move ul - ua , 4 ; move 4 - ua , 2 ) 
[7474] ( loop 0 , 3 , move 0 - 4 , ul ; move ul , v0 ) 
[7475] ( move ua + ul , ua / 3 ; move 2 + ul , 3 - ul ) 
[7476] loop 0 , 3 , loop 1 , 2 , move 2 , ul / v0 
[7477] ( loop 0 , 6 , move ul , v0 * v0 ; move ul , ua - v0 ) 
[7478] loop 0 , 4 , move 2 , 2 / v0 
[7479] ( ( move ul - ua , 2 ; move ul , ua ) ; move ua , ul ) 
[7480] loop 0 , 7 , move ua - v0 , ua / 3 
[7481] ( move ul + ul , ua + 2 ; loop 0 , 5 , move v0 , 4 ) 
[7482] ( move ua / 3 , ua ; move ul , ul ; move ul - ua , ua - ul ) 
[7483] ( move ua , ua - ul ; move 2 / ua , 0 ; move 0 - 4 , ul ) 
[7484] ( move ua + ul , ul ; loop 0 , 5 , move v0 , 3 - ua ) 
[7485] loop 0 , 4 , move 2 , ul / 2 
[7486] ( move 0 , ul - 2 ; loop 0 , 3 , move ua , 4 ) 
[7487] ( move ua + 3 , ua - ul ; move 4 , ua / 4 ) 
[7488] ( move 4 + ul , 4 * 4 ; move 4 , 0 - ul ) 
[7489] ( move 2 , ua * ua ; move ua - ul , ul ) 
[7490] loop 0 , 7 , move v0 - 3 , v0 + 3 
[7491] ( loop 0 , 3 , move ul , v0 - 3 ; move ua , ul ) 
[7492] loop 0 , 3 , loop 1 , 2 , move 2 , v0 - v1 
[7493] loop 0 , 3 , move v0 - 4 , ua / 3 
[7494] loop 0 , 3 , move v0 + ua , ua - 2 
[7495] ( move ua , 3 ; move 2 - ua , ul ) 
[7496] ( move ul - 3 , ua ; loop 0 , 6 , move ul , ul ) 
[7497] ( move ua , 3 * 3 ; loop 0 , 6 , move ul , v0 ) 
[7498] ( move 3 , 2 - ul ; move ul - ua , ua * ua ) 
[7499] ( move ua , 2 + ul ; loop 0 , 5 , move v0 , 4 ) 
[7500] ( move ul , 0 ; move 4 , ua - ul ) 
[7501] ( move 3 , 4 + 3 ; v0 = ua ; move v0 , ua * v0 ) 
[7502] loop 0 , 5 , move ul - 4 , v0 * v0 
[7503] ( loop 0 , 4 , move v0 , v0 / 3 ; move ua , 4 ) 
[7504] ( move 4 , 4 ; move ua , 3 + ul ; move 4 , 2 ) 
[7505] ( loop 0 , 5 , move ua , 4 - ua ; move v0 + ul , ul + ul ) 
[7506] loop 0 , 6 , move 3 - v0 , v0 + 4 
[7507] ( move ul - ua , ul ; move ua + ul , ul / ua ) 
[7508] loop 0 , 3 , ( move ul , ul ; move 2 , v0 ) 
[7509] loop 0 , 2 , loop 1 , 3 , move 2 / v1 , v1 - ua 
[7510] loop 0 , 6 , move ua - v0 , 4 * 4 
[7511] ( move ul - 4 , ua ; move 4 + ul , ul / 3 ) 
[7512] ( move ua , ua ; loop 0 , 3 , move 3 , v0 - 2 ) 
[7513] ( move ul , ul + ul ; loop 0 , 5 , move 4 , ul ) 
[7514] ( move 2 , 4 ; move ua - ul , 4 ) 
[7515] ( loop 0 , 3 , move 4 , ul ; move ul , v0 + v0 ) 
[7516] ( loop 0 , 5 , move v0 , v0 ; move ua , ua - v0 ) 
[7517] ( move ua , ua * ua ; move 2 , 0 - ul ) 
[7518] loop 0 , 7 , move v0 - 2 , 4 / ua 
[7519] ( move ul , ul ; loop 0 , 5 , move 3 , v0 ) 
[7520] ( move 4 + 2 , 2 ; move ua , ua + ul ) 
[7521] loop 0 , 3 , loop 1 , 2 , move v0 * v0 , v1 
[7522] loop 0 , 5 , move v0 - 3 , v0 - 2 
[7523] loop 0 , 2 , move ua - ul , v0 * 4 
[7524] ( move ul , 4 ; move ua , 4 - 2 ; move ul - ua , ul ) 
[7525] ( loop 0 , 6 , move 3 , 4 ; move v0 , 2 ) 
[7526] ( move ua , ul / 2 ; loop 0 , 6 , move v0 , v0 ) 
[7527] ( move ua - ul , ul ; move 4 , ua / 4 ) 
[7528] ( move ul , ul / 4 ; move ua , ul ; move ua , 2 ) 
[7529] ( move ua , ul ; loop 0 , 5 , move v0 , 2 ) 
[7530] ( loop 0 , 6 , move ul , 0 ; move ul + v0 , v0 ) 
[7531] loop 0 , 4 , move v0 + v0 , ua - 2 
[7532] ( move ua + 3 , ul ; move 4 , 4 ) 
[7533] ( move 2 , ul ; loop 0 , 5 , move ul - ua , 3 ) 
[7534] ( move 0 - ua , ua - 3 ; move ua + ul , ul ) 
[7535] ( move ua + ul , 0 ; move 4 - ua , 2 ) 
[7536] ( loop 0 , 6 , move 3 , 3 ; v1 = 0 ; move ul , v1 ) 
[7537] ( move ua + 2 , 3 ; loop 0 , ul , loop 1 , 3 , move 3 , 2 ) 
[7538] ( move ua , 2 + ul ; move ua + 4 , ua + 4 ) 
[7539] ( move ua , ul ; move ul - ua , 4 + ul ) 
[7540] ( move ua , ua ; loop 0 , 5 , move ul , v0 ; move v0 , ua ) 
[7541] ( move 3 , 0 ; move ua , 4 ) 
[7542] ( move ua + 3 , ul ; ( move 2 , ua + 4 ; move ul , ul ) ) 
[7543] loop 0 , 3 , loop 1 , 2 , move 2 + v0 , v0 
[7544] ( move ul , 4 ; move ua , ua + ul ; loop 0 , 5 , move ul , ul ) 
[7545] ( move ua , 4 * 3 ; move ua , ul + ul ) 
[7546] loop 0 , 5 , move ul - v0 , ul / 4 
[7547] loop 0 , 3 , ( move v0 , v0 ; move ua , 4 + 4 ) 
[7548] ( move 4 , ul ; move ua , 3 + 3 ) 
[7549] ( move ua + ul , ul ; move ua - ul , 4 ) 
[7550] ( move 3 , ul ; move ul , ul ; move 3 , 2 ) 
[7551] loop 0 , 5 , move 3 + v0 , v0 - ul 
[7552] ( loop 0 , 6 , move ua - v0 , 3 ; move ua , ul / ua ) 
[7553] ( move ua , ua - 2 ; loop 0 , 3 , move 2 , ul ) 
[7554] ( move ul - ua , 4 - ul ; move 3 , 4 - ul ) 
[7555] ( move ul , ul + ul ; move ul , ua / 4 ; move ua , ul ) 
[7556] ( move ua + ul , 0 ; ( move 4 - 2 , ul ; move ul , ul ) ) 
[7557] ( move ua , 2 / 4 ; move ua + ul , 4 ) 
[7558] ( move ua , 3 - ul ; move 0 - ua , 4 ) 
[7559] ( move ul , 2 ; move ul , ul - ua ; move ua , ul ) 
[7560] ( move 4 + 2 , ua * 3 ; move ua , ua * ua ) 
[7561] ( move 3 , ul / ua ; loop 0 , 4 , move v0 , v0 * 4 ) 
[7562] ( move 2 , 0 ; move ua , 3 / ua ; move ua , 2 ) 
[7563] ( loop 0 , 5 , move 4 , 3 ; move v0 , v0 ) 
[7564] loop 0 , 6 , move ua - v0 , v0 + 2 
[7565] ( move ua + ul , 3 ; move ul , 2 ; move ua - ul , 3 - ul ) 
[7566] ( move ua , ul + ul ; move 3 , 4 * 3 ) 
[7567] ( v0 = ua + 3 ; move v0 , ul ; move v0 , v0 ) 
[7568] ( move ua - 4 , ul ; loop 0 , 4 , move v0 + v0 , v0 ) 
[7569] ( move ua + ul , ua ; move 3 , ul - 3 ) 
[7570] ( move 4 + ul , ul - 3 ; ( move 4 , ul ; move ua , ul ) ) 
[7571] loop 0 , 4 , move v0 + ul , 3 / 2 
[7572] ( loop 0 , 5 , move v0 , 4 ; move 3 , ul / v0 ) 
[7573] ( loop 0 , 3 , move v0 , 2 ; move ua , v0 * v0 ) 
[7574] ( move ul - ua , ua ; move 3 , 2 - 3 ) 
[7575] loop 0 , 5 , move ul - v0 , v0 + 3 
[7576] loop 0 , 5 , ( v1 = v0 ; move 2 / v1 , 3 + 3 ) 
[7577] ( move 4 , 3 ; v0 = 3 ; move v0 , v0 / ua ) 
[7578] loop 0 , 7 , move 2 - v0 , ua / v0 
[7579] ( move ul - 3 , ua ; loop 0 , 5 , move v0 , ul ) 
[7580] ( move 3 , ul ; loop 0 , 4 , move v0 , 2 ) 
[7581] loop 0 , 5 , move v0 - ua , 4 / 3 
[7582] ( move ua , 2 ; move 4 , 4 ; move ua , 4 ) 
[7583] ( loop 0 , 5 , move v0 , ul ; move v0 + v0 , 2 ) 
[7584] loop 0 , 4 , move 3 + v0 , 4 + ul 
[7585] ( move ul - 4 , 4 / ua ; move ua , ul ) 
[7586] ( move ul - ua , 3 ; move ua , 4 + ul ; move ul , ul - 4 ) 
[7587] ( move 3 , ul ; move 4 + ul , 3 * 2 ) 
[7588] loop 0 , 4 , move 3 , ua - 4 
[7589] ( ( move ua , ul ; move ul - ua , ul ) ; move ua , 0 ) 
[7590] loop 0 , 7 , move ul - 3 , 4 + 3 
[7591] loop 0 , 3 , ( move 3 , ul ; move v0 , ul ) 
[7592] ( move ua + ul , ul / ua ; move 2 , ul ) 
[7593] ( move ua - 2 , ul ; move 3 , 4 + ul ) 
[7594] ( ( move 4 + ul , ul ; move 3 , ua + ul ) ; move 4 , 4 ) 
[7595] ( move 4 * 2 , ul ; move 2 , ul / ua ) 
[7596] ( move ul - ua , ua - 3 ; move ua + ul , ul ) 
[7597] loop 0 , 7 , ( v1 = ua - v0 ; move ul - v1 , ul ) 
[7598] ( move 2 , ul ; move ua , 3 ; move ua , 4 * 2 ) 
[7599] ( move 3 , ul - 4 ; move ua , 2 ) 
[7600] ( move ul , ul ; move ua , ul - ua ; move ua - ul , ul - 3 ) 
[7601] ( loop 0 , 5 , move 3 , ul ; move v0 , 4 * 2 ) 
[7602] ( move 4 , ua * ua ; move 3 , ul ; move 3 , ul ) 
[7603] ( move 2 , ul ; loop 0 , 4 , move v0 , ua / v0 ) 
[7604] ( move ua , ua ; loop 0 , 3 , move 3 , ua * ua ) 
[7605] ( move ul , ul ; loop 0 , 5 , move ul - v0 , ul ) 
[7606] ( move 3 , 4 ; move ua + 2 , 4 ) 
[7607] ( move 3 , 0 ; loop 0 , 6 , move v0 , 3 - ua ) 
[7608] loop 0 , 4 , ( v1 = 4 ; move v1 + v1 , 4 ) 
[7609] ( move ul - ua , ua * 3 ; move 4 + 3 , ul ) 
[7610] ( move ul , ua ; move ua + ul , ua ; move 4 , 4 ) 
[7611] loop 0 , 6 , move ua - 3 , ua - v0 
[7612] loop 0 , 3 , ( move 3 , v0 ; move v0 , 2 / v0 ) 
[7613] ( move 4 + ul , ul ; move ul , ua / 4 ; move ua , 4 ) 
[7614] loop 0 , 7 , move v0 / 2 , v0 / 2 
[7615] loop 0 , 4 , move ul + v0 , 3 * 3 
[7616] loop 0 , 3 , ( move v0 , v0 ; move 4 + ul , v0 * ua ) 
[7617] ( move ua , ul ; loop 0 , 4 , move v0 , ua - v0 ) 
[7618] ( loop 0 , 6 , move 2 , ul ; move ul , v0 ) 
[7619] ( move 4 + ul , ua + 3 ; move ua , 2 ) 
[7620] ( move 4 , ul ; loop 0 , 3 , move v0 , ul - v0 ) 
[7621] loop 0 , 3 , move v0 + 2 , 4 - v0 
[7622] ( move ua , ul / ua ; move 2 , ul + ul ; move ua , ul ) 
[7623] ( move 2 , ul ; move ua , 4 - ua ; move ua - ul , ul ) 
[7624] ( move 3 - ua , ul / ua ; move 2 , ul + ul ) 
[7625] ( move 3 , ul ; move 3 , ul / 2 ) 
[7626] ( move 3 , 3 ; move ul - ua , 4 ) 
[7627] ( loop 0 , 6 , move ul - v0 , v0 ; move ua , ua - ul ) 
[7628] ( move ua , 2 + ul ; move ul - ua , ua + ul ; move ul , 4 ) 
[7629] ( move ua , ul ; move ul , ul ; move ua , 4 * 4 ) 
[7630] loop 0 , 7 , ( v1 = 4 ; move v1 + ul , ua * ua ) 
[7631] loop 0 , 3 , move 4 / v0 , 3 - v0 
[7632] ( move 4 , ua ; move 4 , ul ; move ul + ul , ul ) 
[7633] ( move 2 , ul / 4 ; loop 0 , 3 , loop 1 , ul , move 4 , ul ) 
[7634] ( move ua , ul ; loop 0 , 4 , move v0 , 2 ) 
[7635] ( loop 0 , 2 , move 4 , 2 ; move 2 , v0 ) 
[7636] ( move ua , ul ; loop 0 , 5 , move 2 , 4 ) 
[7637] ( move ua , 0 ; loop 0 , 6 , move v0 , v0 + 4 ) 
[7638] ( move ua , ua / 4 ; move ua , ua + 2 ) 
[7639] ( move 3 + ul , ua * ua ; move 3 , 2 ) 
[7640] ( move ul - ua , ul ; move ua , 2 / ua ) 
[7641] ( move 2 , ul ; move 0 - ua , 3 ) 
[7642] ( loop 0 , 5 , move 3 , v0 ; move ua , 3 ) 
[7643] ( v0 = 4 ; move v0 , v0 * 4 ; move v0 , v0 ) 
[7644] ( move ul - ua , ul ; move 2 - ua , ul ) 
[7645] ( move ua - ul , ua - ul ; move 0 , 4 + ul ; move 2 , ua ) 
[7646] ( move ua , 4 / 3 ; loop 0 , 3 , move 0 - ul , ul ) 
[7647] loop 0 , 5 , move ua - v0 , 3 / v0 
[7648] ( move 4 , ua + 3 ; loop 0 , 6 , move ul , 3 + v0 ) 
[7649] ( move ua , 0 ; loop 0 , 3 , move ul , ul ; move ua , v0 ) 
[7650] ( move ua , ul / ua ; loop 1 , 5 , move 3 , 2 ; move 0 , ul ) 
[7651] loop 0 , 3 , move v0 - 4 , v0 - 3 
[7652] loop 0 , 2 , move ua + v0 , 0 - 2 
[7653] loop 0 , 4 , move 4 / v0 , ul / 2 
[7654] ( v0 = ua + 2 ; move v0 , 4 ; move v0 , 2 ) 
[7655] ( loop 0 , 6 , move v0 , ua - 2 ; move v0 , ua ) 
[7656] loop 0 , 2 , loop 1 , 2 , move 3 , v0 * 2 
[7657] ( move ul - 3 , ua - ul ; loop 0 , 5 , move v0 , ul ) 
[7658] ( loop 1 , 3 , move ua , 3 ; move ua , v1 ) 
[7659] loop 0 , 2 , ( move ul , v0 ; v1 = 3 ; move v1 , 4 ) 
[7660] ( loop 0 , 3 , move ul , 2 ; move ua + 2 , v0 ) 
[7661] loop 0 , 5 , ( v1 = 2 / ua ; move 3 , v1 + v0 ) 
[7662] ( move 4 , ul ; loop 0 , 3 , move ul + v0 , ul ) 
[7663] loop 0 , 6 , move v0 - 3 , 4 - v0 
[7664] ( move 4 + ul , ul ; move ua + 3 , ua * ua ) 
[7665] ( move 4 , 0 ; move ua - ul , ul ; move 2 - ua , ua + ul ) 
[7666] ( move ul , 2 + 2 ; move ua , ul ; move 3 , ul ) 
[7667] loop 0 , 3 , move 4 / v0 , ul / 4 
[7668] ( move ua , 3 ; v0 = ul ; loop 1 , 6 , move 4 , ul ) 
[7669] ( move 3 - ul , 3 ; move ua , 4 + ul ; move 2 , 0 - ul ) 
[7670] ( move ul / 2 , ul ; move ul , ul / 3 ; move ua , ul ) 
[7671] ( move ua , 2 - 3 ; move ua , ua * ua ) 
[7672] loop 0 , 6 , move ul - 3 , v0 - ul 
[7673] ( move 2 + 2 , 4 + 3 ; move 3 , ul ) 
[7674] ( move 3 , 2 ; loop 0 , 4 , move v0 , v0 + v0 ) 
[7675] loop 0 , 7 , move v0 / 2 , 4 + 4 
[7676] loop 0 , 6 , move v0 - ul , 3 + v0 
[7677] loop 0 , 7 , move v0 - 3 , v0 / 3 
[7678] ( move 4 / 2 , ua * ua ; move ul - ua , ua / 3 ) 
[7679] loop 0 , 3 , loop 1 , 2 , move ul , v0 - ul 
[7680] ( move ul , ul ; move 3 + ul , ul ; move ua , 4 ) 
[7681] ( move ua , 4 + 3 ; move ua - 3 , ul ) 
[7682] ( move ua , ua ; move 3 , 2 ; move 4 , ul ) 
[7683] ( loop 0 , 6 , move v0 + ul , v0 ; move v0 , ul - 3 ) 
[7684] ( ( move ua , 4 ; move 2 , ua ) ; move ua , 2 ) 
[7685] loop 0 , 3 , ( move 2 / v0 , v0 ; move v0 , ul ) 
[7686] ( move 3 - 4 , 2 ; move 4 , ul ) 
[7687] ( move ua , ua - 4 ; move ul , 0 - ul ) 
[7688] ( move ul - ua , 0 ; move 3 , ua * ua ) 
[7689] loop 0 , 3 , ( move 4 , ul ; move v0 , 3 ) 
[7690] ( move 4 , ua * ua ; ( move ul , 3 * 2 ; move 2 , ua ) ) 
[7691] ( move 4 + 2 , ul / 3 ; move 3 , ua * ua ) 
[7692] ( move ua + ul , 0 ; move 3 , ul ; move 4 , 2 ) 
[7693] ( loop 0 , 4 , move ul , ul ; move v0 , v0 * v0 ) 
[7694] ( move ua , ua ; ( move ul , ul ; move 2 - ua , ul - 2 ) ) 
[7695] ( move 3 , ul ; loop 2 , 6 , move 3 , v2 + ua ) 
[7696] ( move 4 , ul + ul ; move ul - 4 , ul ) 
[7697] ( v0 = ua + ul ; loop 1 , 6 , move v0 / 2 , v0 ) 
[7698] ( move 4 , ul / 3 ; move ul , 4 / 2 ; move 3 + ul , ua ) 
[7699] ( move 2 , ua * ua ; move ua , ul ; move ul , 0 ) 
[7700] loop 0 , 4 , move 2 + v0 , v0 - ul 
[7701] ( move 3 , 3 ; loop 0 , 5 , move ul , v0 - ul ) 
[7702] ( move ua - ul , 3 ; move 4 + 4 , 2 ) 
[7703] ( move ua - ul , ul / 3 ; move ua , 2 ) 
[7704] ( move ua , ua - 2 ; move ua , ua * ua ; v0 = ua ) 
[7705] ( move 3 , ua - 4 ; move ul , ua - ul ) 
[7706] ( loop 0 , 2 , move 3 , 3 ; move ua / v0 , ua - v0 ) 
[7707] ( ( move ul - 3 , ul - ua ; move ua , ul ) ; move 2 , ul ) 
[7708] ( move ua + ul , 4 + ul ; move 3 , ul + ul ) 
[7709] ( move ul , 3 ; move 4 , 4 * 2 ) 
[7710] ( loop 0 , 6 , move v0 , 3 ; move 4 , v0 ) 
[7711] loop 0 , 7 , move 2 - v0 , 2 * v0 
[7712] ( loop 0 , 4 , move 4 , v0 ; move v0 , 2 ) 
[7713] loop 0 , 5 , move ul - 4 , ul - v0 
[7714] ( move 4 - ua , ul ; loop 0 , 5 , move ul , ul ) 
[7715] ( move 4 + ul , 2 + ul ; loop 0 , 3 , move ul , ul ) 
[7716] ( move ul , ul / 4 ; move 4 , ul ) 
[7717] ( move 4 , ul ; move 4 * 2 , ua - 4 ) 
[7718] ( move ul - 4 , 2 ; move 3 + 2 , ul ; move 4 + ul , 3 ) 
[7719] ( move ua , ua ; move ul , 3 / ua ; move 4 - ul , ul ) 
[7720] ( move ua - 4 , ua ; move ua , 4 + ul ) 
[7721] ( loop 0 , 6 , move v0 + ul , 3 ; move ua / v0 , ua ) 
[7722] ( loop 0 , 6 , move v0 - 2 , v0 - 3 ; v1 = ua ) 
[7723] ( move ua + 2 , 4 ; move ul - ua , ul ) 
[7724] loop 0 , 4 , move ua , ua - 4 
[7725] ( move 3 , 3 / ua ; move ua - 2 , ua + ul ) 
[7726] ( move ua , ul ; move ua - 4 , ul ; move 3 , ul ) 
[7727] ( move 3 , 2 ; move 0 - ua , 4 ) 
[7728] ( move 3 , 4 ; move ul , ul ; move ul - ua , 0 - ul ) 
[7729] ( move ua , ua - 2 ; loop 0 , 4 , move v0 , v0 ) 
[7730] ( move ul , ua ; move ua , ul ; move ua , 4 ) 
[7731] ( move 0 , 4 ; move ua , ua * ua ) 
[7732] ( move ua , ua ; move ul , ul ; move ua - 2 , ul ) 
[7733] ( move 4 , 4 * 4 ; v0 = ua ; move v0 , ua + 3 ) 
[7734] ( move ua , ua / 2 ; loop 0 , 2 , move ua + ul , 4 ) 
[7735] ( move 0 - ua , ua - 3 ; move ua , ul ) 
[7736] loop 0 , 3 , ( move ul , ul ; move v0 * v0 , 2 * v0 ) 
[7737] ( loop 0 , 5 , move 4 , v0 ; move v0 + v0 , v0 ) 
[7738] ( move ua - 3 , 4 - ul ; loop 0 , 6 , move 3 , v0 + ua ) 
[7739] ( move 4 + ul , ul / ua ; move 3 , 3 + 2 ) 
[7740] ( loop 0 , 4 , move ul , ul ; move 4 , 3 ) 
[7741] ( loop 0 , 3 , move v0 , 3 ; move v0 * v0 , v0 ) 
[7742] loop 0 , 2 , loop 1 , 3 , move 3 , 2 - v0 
[7743] ( move ua , ua * ua ; move ua + ul , ul + ul ) 
[7744] ( move ua - ul , ul - ua ; move 4 , 3 + 2 ) 
[7745] ( move 4 , 3 ; move ua , ua * ua ; move ul , ul ) 
[7746] ( move 4 , ul ; move 4 + ul , ua - 4 ) 
[7747] ( v0 = ua - 2 ; move ua , 3 ; move v0 + v0 , 2 ) 
[7748] ( loop 0 , 4 , move v0 , v0 ; loop 1 , 3 , move ul , ul ) 
[7749] ( move ul , ua ; move ua + 2 , ul / 2 ) 
[7750] ( v0 = ua ; loop 1 , 3 , move v0 - v1 , v0 / 4 ) 
[7751] loop 0 , 3 , ( move ua / v0 , v0 / 2 ; move v0 , 2 ) 
[7752] ( loop 0 , 6 , move v0 - ul , v0 ; move ul / 2 , ul ) 
[7753] ( move 4 , ul ; move 4 , ul / ua ) 
[7754] ( loop 0 , 6 , move ul , v0 ; move 3 , ua ) 
[7755] ( move ua , ul + ul ; move ua + 2 , ua - 2 ) 
[7756] ( move ua , 4 + 4 ; move 4 , ul ) 
[7757] ( loop 0 , 6 , move 4 / v0 , ul ; move v0 , v0 ) 
[7758] loop 0 , 6 , move 4 / v0 , ul + v0 
[7759] ( loop 0 , 3 , move 2 , v0 + v0 ; move v0 , v0 ) 
[7760] ( move ua , ul ; loop 0 , 2 , move ul , ul ) 
[7761] ( loop 0 , 6 , move ul , ul ; move 3 , v0 / 2 ) 
[7762] ( move 2 + ul , ul - 2 ; move ua , ul / 2 ) 
[7763] ( move ul , ul ; move 3 , ul + ul ; move 3 , ua - ul ) 
[7764] ( move ul , 2 ; loop 0 , 4 , move 2 , v0 ) 
[7765] ( move 3 , ul ; move 4 , ul ; move ua , ul ) 
[7766] ( move 0 - ua , 4 ; move 3 , ul ; move 3 , ul ) 
[7767] ( move ul - 4 , ul ; move ul - ua , ua * ua ) 
[7768] ( loop 0 , 6 , move v0 , v0 ; move 2 , v0 ) 
[7769] ( move ua , ua ; move ua , 4 * 4 ) 
[7770] ( move ua , 0 ; loop 0 , 4 , move v0 , v0 ) 
[7771] ( move 2 , ul ; loop 0 , 4 , move ua , v0 + ul ) 
[7772] loop 0 , 3 , move ua - 4 , 2 - v0 
[7773] loop 0 , 2 , loop 1 , 3 , move ua - v0 , 2 
[7774] ( move 3 + ul , ua + 2 ; loop 0 , 6 , move v0 , 3 ) 
[7775] ( ( move ua , ua * 4 ; move 3 , ul ) ; move ua , ua * ua ) 
[7776] ( loop 0 , 5 , move v0 , v0 ; move v0 , 3 * v0 ) 
[7777] ( loop 0 , 3 , move v0 , v0 ; move ua , 4 ) 
[7778] ( loop 0 , 3 , move ul + ul , v0 ; move ua , ul ) 
[7779] ( move 4 + 3 , ul ; v0 = 4 - ul ; move 3 , 4 / 3 ) 
[7780] ( loop 0 , 2 , move ua - v0 , 2 ; move v0 + 4 , ul ) 
[7781] ( move ua + ul , ul / ua ; move 0 - ua , ul ) 
[7782] ( move ul - ua , 4 * 4 ; move ua , ul ) 
[7783] ( move ua + ul , 3 ; move ul , ul ; move 4 , ul ) 
[7784] ( move 4 , ua - ul ; move ua , 3 ) 
[7785] ( move ua + ul , ul ; loop 0 , 3 , move ua , 4 ) 
[7786] ( move 2 , ul ; move ul - ua , ul ) 
[7787] loop 0 , 6 , ( v1 = 0 - ul ; move v0 / v1 , v1 ) 
[7788] ( move 0 , ua - 4 ; loop 0 , 6 , move v0 , ul ) 
[7789] loop 0 , 7 , move v0 / 3 , ua / v0 
[7790] ( move 3 , ul - 2 ; ( move ua , ul / 4 ; move 0 , ul ) ) 
[7791] ( move ua / 4 , 4 ; loop 0 , 5 , move 4 , ua - v0 ) 
[7792] ( move 3 - ul , ul ; move ua , ul ; move 2 , ua * ua ) 
[7793] ( move ua , 4 ; move 4 + ul , 2 ) 
[7794] ( move ua , ua - 4 ; move 4 + ul , 4 ) 
[7795] ( move 3 , ul + ul ; move ua - ul , 4 ) 
[7796] loop 0 , 7 , ( loop 1 , 9 , v2 = 4 ; move v1 , v1 ) 
[7797] ( move 4 , ua + 4 ; move ua , 4 + ul ) 
[7798] ( ( move ua , 4 ; move 0 , ul / 4 ) ; move 4 , 2 / ua ) 
[7799] ( move ua , ua ; move ua - 2 , ua / 3 ) 
[7800] ( move ul , 4 * 3 ; loop 0 , 6 , move v0 , 3 ) 
[7801] ( move ul , ua / 4 ; move ua , ul + ul ; move ua , ul ) 
[7802] ( move ua - ul , ua ; move ua + ul , 4 ) 
[7803] ( move 4 , ul / ua ; loop 0 , 3 , move v0 , v0 ) 
[7804] ( move 0 , ul / ua ; loop 0 , 3 , move ua , v0 + ua ) 
[7805] ( move ul - 3 , ul ; move ul , ul ; move 3 , 4 * 2 ) 
[7806] loop 0 , 6 , move ua - 2 , ua * ua 
[7807] ( move 4 - 3 , ua ; move ua , 4 + ul ; move 2 , ul / 2 ) 
[7808] ( move ua + ul , ua / 3 ; move 3 , ul ) 
[7809] ( loop 0 , 4 , move ul , 2 ; move ua , v0 ) 
[7810] ( move ua , ua - 4 ; move ul , ul - ua ; move ua - ul , ul ) 
[7811] ( move ua , ul ; move 3 , ua / 4 ) 
[7812] ( loop 0 , 4 , move 4 - v0 , ul ; move v0 , v0 ) 
[7813] ( move ua + ul , 2 ; move ul , ul ; move 2 , ua + ul ) 
[7814] ( move ua , ul ; move 2 + ul , ul ; move 4 , 2 ) 
[7815] ( move 0 - ua , 2 ; move ua - 3 , 4 * 2 ) 
[7816] ( move 2 - ua , ul + ul ; move ul - 4 , 3 - ul ) 
[7817] ( move 3 , ul ; move 0 , ul ; loop 0 , 5 , move ua , ua * ua ) 
[7818] ( move ua , 2 / ua ; loop 0 , 4 , move ul - v0 , ul ) 
[7819] ( move ua , ul ; loop 0 , 3 , move v0 , v0 * v0 ) 
[7820] ( move ua + ul , 3 / 4 ; move ua , 3 ; move 0 , ul ) 
[7821] ( loop 0 , 3 , move ul + ul , 3 ; move 3 , 4 / v0 ) 
[7822] ( move ul - ua , 2 ; loop 0 , 5 , move v0 , ul ) 
[7823] ( move ua , 4 * 3 ; move 4 - ua , 2 + ul ; move ua , ua ) 
[7824] ( move ua , ul ; move 3 , ul ; move ua , 2 ) 
[7825] ( loop 0 , 5 , move ul , ua * ua ; move ul + v0 , v0 ) 
[7826] loop 0 , 3 , move ul - ua , 3 
[7827] ( move ua , 4 / 3 ; move 4 , ul ; v0 = ua ) 
[7828] loop 0 , 5 , move v0 + v0 , v0 / 2 
[7829] loop 0 , 3 , move 3 , 2 / 4 
[7830] ( loop 0 , 6 , move ul - v0 , v0 ; move v0 , 2 ) 
[7831] ( move 2 , ul ; move 4 , 4 ; move ul - ua , ul ) 
[7832] ( move ul , ua ; loop 0 , 5 , move v0 , ul - v0 ) 
[7833] ( move ua , ul ; move ul , ul ; move ua + ul , 2 ) 
[7834] ( ( move ul , ul ; move ul - 4 , 2 ) ; move ua , ua + 2 ) 
[7835] loop 0 , 3 , ( move v0 - ul , ul ; move 4 , ul ) 
[7836] loop 0 , 4 , move 3 * 3 , 4 
[7837] ( move 3 , ua - 3 ; move ul , ul ) 
[7838] loop 0 , 3 , ( move v0 , v0 * v0 ; move 4 , 2 ) 
[7839] ( move ua + ul , 4 - ul ; move ul - ua , 2 ) 
[7840] loop 0 , 4 , move 4 - v0 , v0 / 3 
[7841] ( move 3 - ua , 4 ; move ua - ul , 4 ) 
[7842] ( loop 0 , 3 , move ul , ul / v0 ; move 3 , ul ) 
[7843] ( move 3 , ul ; move ua , ua - 2 ; move 3 , ul ) 
[7844] ( move ua , ul ; ( move ul , ua / 4 ; move ua , ul ) ) 
[7845] ( move 3 , ul ; move ua , ul ; move 4 , 2 ) 
[7846] ( move 4 + 2 , ua ; move ua , 2 ) 
[7847] ( move 0 , ua / 4 ; loop 0 , 6 , move v0 , 3 ) 
[7848] ( move ua - ul , ua ; loop 0 , 5 , move 3 , ul ) 
[7849] ( move ua , ul ; loop 0 , 4 , move v0 , v0 * 3 ) 
[7850] ( move ua , ul ; ( move ul + ul , ua ; move 0 - ua , ul ) ) 
[7851] ( move 4 + 3 , 4 ; move ul - ua , ul ) 
[7852] loop 0 , 2 , ( move ul , ul ; move ua , v0 ) 
[7853] loop 0 , 4 , move 3 / v0 , v0 + 4 
[7854] ( loop 0 , 6 , move 2 , v0 / 2 ; move ul , ua * v0 ) 
[7855] ( move ul + ul , 3 * 3 ; move ua , ul ) 
[7856] ( loop 0 , 5 , move ul , v0 ; move ua , v0 + 3 ) 
[7857] ( move ul , 3 ; move ua + 2 , 4 / ua ) 
[7858] ( v0 = ua + ul ; loop 1 , 3 , move 4 , v0 * v0 ) 
[7859] ( move 2 , ul ; move ua + 3 , ua * ua ) 
[7860] loop 0 , ul , loop 1 , 2 , loop 2 , 2 , move v2 - 4 , ul 
[7861] ( move ul - 4 , ua ; move 2 , 4 ; move ua , ul ) 
[7862] ( move ua + ul , ua ; move ua / 4 , 2 ) 
[7863] loop 0 , 2 , ( move 2 , v0 ; move 4 , v0 ; move ul , ua ) 
[7864] ( loop 0 , 4 , move ul , v0 ; move v0 , 2 ; move ul , 0 ) 
[7865] ( loop 0 , 5 , move v0 - 2 , v0 ; move v0 , ua ) 
[7866] ( move 2 - ul , ua ; move ua + ul , ul ; move ua - ul , 4 ) 
[7867] ( move ua , ul ; ( move ul , ua / 2 ; move 4 , ua + ul ) ) 
[7868] loop 0 , 3 , move ua + v0 , ua / 3 
[7869] ( loop 0 , 6 , move ul , 3 / v0 ; move ul , 4 ) 
[7870] loop 0 , 3 , loop 1 , 2 , move v1 + ua , 3 - ua 
[7871] loop 0 , 2 , move ua , 3 / 2 
[7872] ( move 4 , 4 ; loop 0 , 3 , move 3 , v0 ) 
[7873] ( move ua , 4 + 2 ; move 3 , 2 ) 
[7874] ( move ua - ul , ul ; move 2 , 4 + ul ) 
[7875] ( loop 0 , 3 , move 4 , 4 ; move v0 , v0 ) 
[7876] ( move 2 + ul , 2 + ul ; move ua , 4 * 3 ) 
[7877] ( move ua - ul , 2 ; move 4 , ul - 3 ) 
[7878] ( move 2 , ul ; move ua - ul , ua + 4 ; move ua - ul , 4 ) 
[7879] ( move ul - ua , 3 ; move 3 - ua , ul ) 
[7880] ( move ua / 3 , ua ; move 2 - ua , 4 ) 
[7881] loop 0 , 5 , move ul + v0 , v0 - 2 
[7882] loop 0 , 3 , ( move ua , ua - 4 ; move v0 , ua / v0 ) 
[7883] ( move ua - ul , ua + 3 ; move ua , ua * ua ; v0 = ul ) 
[7884] loop 0 , 6 , move ul - v0 , v0 + 3 
[7885] ( move 3 - ua , ul ; move ua + ul , ul ) 
[7886] loop 0 , 6 , move v0 / 2 , 2 / ua 
[7887] ( loop 0 , 5 , move 2 , ul ; move ua + ul , ul ) 
[7888] loop 0 , 7 , move 3 - v0 , 4 + 4 
[7889] ( move 2 , 0 ; loop 0 , 5 , move v0 , v0 ) 
[7890] ( move 2 , ul ; loop 0 , 3 , move 3 , v0 ) 
[7891] loop 0 , 7 , move 2 - v0 , v0 * v0 
[7892] ( loop 0 , 6 , move ul , v0 + v0 ; move 4 + ul , ul ) 
[7893] loop 0 , 3 , ( move v0 * v0 , ul ; move v0 , v0 ) 
[7894] loop 0 , 3 , move 3 + v0 , v0 + 3 
[7895] loop 0 , 3 , ( move 3 , v0 ; move v0 / 4 , 2 ) 
[7896] ( v0 = 3 ; move v0 + v0 , 4 / 3 ; move 4 , 4 ) 
[7897] ( move ua , 4 / ua ; move ua , 3 ) 
[7898] loop 0 , ul , loop 1 , 2 , loop 2 , 2 , move ua , 2 + v1 
[7899] ( loop 0 , 6 , move ul , v0 * 3 ; move v0 , ul ) 
[7900] ( move 3 , ua ; loop 0 , 5 , move v0 , 4 ) 
[7901] loop 0 , 2 , loop 1 , 3 , move v1 , v1 - 3 
[7902] ( move ua , 2 / ua ; move ul , 4 ; move ua / 3 , ul ) 
[7903] loop 0 , 7 , move v0 + 3 , ua * ua 
[7904] ( move 0 , ul / 4 ; ( move ua , ul / ua ; move ul , ul ) ) 
[7905] ( move 2 * 2 , 2 ; move ul - ua , 3 ) 
[7906] ( move ul - ua , 0 ; move ua , ul / 3 ) 
[7907] loop 0 , 2 , loop 1 , 3 , move v1 , 3 + v1 
[7908] ( move ua + 3 , 2 ; move 0 - ua , ul ) 
[7909] ( loop 0 , 4 , move ul , ul - v0 ; move 4 , 4 ) 
[7910] ( move ua , ul ; ( move ua , 4 ; move ul , ul ) ) 
[7911] loop 0 , 2 , ( move v0 , 3 ; move ua - v0 , ul ) 
[7912] ( move ua , ua / 2 ; move 2 , 3 ) 
[7913] ( move ul + ul , 4 ; loop 0 , 5 , move v0 , ua - ul ) 
[7914] ( move 4 , ua ; move 2 - ua , 2 ) 
[7915] ( move 3 , ua - ul ; move 2 , ul ) 
[7916] loop 0 , 3 , ( move ua , 2 ; move v0 - 2 , v0 ) 
[7917] ( move ua , 4 * 2 ; move ua - 2 , 2 ) 
[7918] ( move 3 , 3 ; move 0 , 4 + 2 ; move 0 - ua , ul ) 
[7919] ( move ul - ua , 4 + ul ; move ul - ua , 2 ) 
[7920] loop 0 , 4 , move ul , ua / v0 
[7921] ( move 4 , ua + ul ; loop 0 , 6 , move v0 / 3 , ul ) 
[7922] ( move ua , 3 + 2 ; move 3 , 2 / ua ) 
[7923] ( move ua , ul ; loop 0 , 3 , move 4 + v0 , 3 ) 
[7924] ( move 3 , 4 / ua ; move ua , ul + ul ) 
[7925] ( move ul , 2 ; loop 0 , 4 , move v0 * v0 , v0 ) 
[7926] loop 0 , 3 , ( move ua , 3 ; move ul , ul ) 
[7927] ( move ul , ua - 4 ; ( move ua , ua ; move ul + ul , ul ) ) 
[7928] ( move 4 , ul ; loop 0 , 3 , move ua , ul + ul ) 
[7929] loop 0 , 3 , ( move v0 , ul ; move 3 , 2 ) 
[7930] ( loop 0 , 5 , move v0 , v0 ; move 2 , ua ) 
[7931] ( loop 0 , 5 , move v0 , 3 ; move ua , 4 ) 
[7932] ( move ul , ua ; move ua , ul ; move 3 , ul ) 
[7933] ( move ua - ul , 2 ; move ua , ua - 4 ) 
[7934] loop 0 , 7 , move 3 , 4 * 2 
[7935] ( loop 0 , 4 , move v0 , v0 * 2 ; move 3 , ul ) 
[7936] ( move ua - ul , ul ; move ul - ua , 4 * 2 ; move 2 , ua ) 
[7937] ( ( move ua , ua ; move 2 , 3 ) ; move ua , ul ; move ul , ul ) 
[7938] ( move ua , 3 * 3 ; move ua + ul , 3 ) 
[7939] ( move ul , 3 ; loop 0 , 3 , move v0 + v0 , v0 + 3 ) 
[7940] ( move ua , ua ; move ul - ua , ua ; move ua , 3 / 2 ) 
[7941] ( move ua - ul , ul ; loop 0 , 3 , move v0 , ul ) 
[7942] loop 0 , 5 , move 3 - ua , v0 + ul 
[7943] loop 0 , 4 , move 2 + v0 , ua - ul 
[7944] ( move ua , ua - 3 ; move ul , ul ; move ua , 2 ) 
[7945] ( ( move ua , ua - 2 ; move 3 , ua + ul ) ; move 4 , ul ) 
[7946] loop 0 , 3 , ( move v0 , v0 / ua ; move 2 , ul ) 
[7947] ( loop 0 , 6 , move 2 , ul ; v1 = ul ; move ua + ul , ul ) 
[7948] ( move ua , 0 ; move ua + 2 , ua * ua ) 
[7949] ( loop 0 , 6 , move v0 - ul , v0 ; move v0 , 4 ) 
[7950] loop 0 , 7 , move v0 - 3 , ul - 3 
[7951] ( move ua - ul , ul ; move ua , 4 ; move ul , ua ) 
[7952] ( loop 0 , 6 , move ul , v0 ; move ua + ul , 4 / v0 ) 
[7953] loop 0 , 6 , ( v1 = v0 - 4 ; move ul - v1 , v1 ) 
[7954] loop 0 , 5 , move ul + v0 , 2 - v0 
[7955] ( move 2 , 3 ; loop 0 , 4 , move 2 , ul / v0 ) 
[7956] loop 0 , 4 , move ul - 3 , 4 / v0 
[7957] ( loop 0 , 5 , move v0 + v0 , 2 ; move ua , v0 ) 
[7958] ( move ua , ua + ul ; loop 0 , 5 , move ua , 4 ) 
[7959] loop 0 , 2 , loop 1 , 3 , move v0 - ua , 2 
[7960] loop 0 , 7 , move v0 - 3 , v0 / 2 
[7961] ( loop 0 , 6 , move 2 , v0 ; move v0 , 4 / v0 ) 
[7962] ( move ua , 2 ; v0 = ua ; loop 1 , 4 , move 3 , 3 ) 
[7963] ( move 2 , ul - 4 ; move 3 , ul ) 
[7964] ( move ua , ua - 2 ; loop 0 , 4 , move ul + v0 , v0 ) 
[7965] ( move ua , ua * 2 ; move ul - ua , 4 / ua ) 
[7966] loop 0 , 2 , loop 1 , 3 , move v1 + ul , 4 
[7967] ( move ua , 4 ; move ua , ua - 4 ) 
[7968] ( move 4 - ul , ua / 3 ; move 0 - ua , ua + 4 ) 
[7969] ( move 4 + ul , 3 ; move ua , 4 ) 
[7970] ( loop 0 , 4 , move v0 , ua - v0 ; move v0 , 4 ) 
[7971] ( move ua , ul / ua ; move ul + ul , ul ; move 3 , ul ) 
[7972] ( move 3 - ul , 0 ; move ua - ul , ul ; move 3 + 3 , 4 ) 
[7973] loop 0 , 3 , ( move ul , ul ; move ul , 4 ) 
[7974] ( move ul / 3 , 2 ; loop 0 , 3 , move ua , v0 ) 
[7975] ( loop 0 , 6 , move v0 , 3 ; move v0 , ua ) 
[7976] ( ( move ul , ul / 2 ; move 4 , ul ) ; move ul - ua , ul ) 
[7977] ( loop 0 , 4 , move ua - v0 , v0 + 2 ; move v0 , ul ) 
[7978] ( loop 0 , 4 , move ul - ua , 4 ; move ul , v0 ) 
[7979] ( move ul - ua , 4 + ul ; move ua - ul , 2 ) 
[7980] ( ( move ua , 2 / ua ; move ua / 3 , ua ) ; move 3 , 2 ) 
[7981] ( loop 0 , 5 , move ul - v0 , v0 ; move ua , 4 ) 
[7982] ( move 2 , 2 ; loop 0 , 4 , move v0 , ul ) 
[7983] loop 0 , 3 , ( move ul - ua , v0 ; move v0 , 0 ) 
[7984] ( loop 0 , 5 , move v0 - ul , 0 - ul ; move v0 , ul ) 
[7985] loop 0 , 3 , ( move v0 , 2 ; move ua , v0 ) 
[7986] ( move 4 , 2 / ua ; move ua , 0 - ul ) 
[7987] ( ( move 4 , ul ; move ul / ua , ua + 4 ) ; move ua , ul ) 
[7988] ( move ul - 4 , ul ; loop 0 , 4 , move v0 , 3 ) 
[7989] ( move 3 , 2 / ua ; move ua + ul , ua - ul ; move ul , 3 ) 
[7990] ( loop 0 , 6 , move 2 , 4 * v0 ; move ua , v0 ) 
[7991] ( move 2 , 4 ; move ua + ul , ua - ul ) 
[7992] ( move 4 , 4 / ua ; move 3 , ul ) 
[7993] ( move ua , 4 + ul ; move ua , 4 * 2 ) 
[7994] ( move 4 , ua - 4 ; move 2 , 4 * 2 ) 
[7995] ( move 4 + 3 , 0 ; move ua + ul , ul + ul ) 
[7996] ( move ul + ul , ul + ul ; loop 0 , 3 , move v0 - ua , 4 ) 
[7997] ( loop 0 , 2 , move 3 , 4 ; move ua , v0 ) 
[7998] ( move ua , ua * ua ; move ul - ua , ul / 3 ) 
[7999] ( move ul + ul , ua / 4 ; move ua , ua + ul ) 
[8000] ( ( move ul , ua / 2 ; move 3 , ul ) ; move 4 , ul ) 
[8001] ( move ua , ua ; loop 0 , 4 , move v0 + ul , ul ) 
[8002] ( move ul , 3 ; loop 0 , 4 , move v0 , v0 / ua ) 
[8003] ( move ua - 4 , 2 ; loop 0 , 3 , move ua - v0 , v0 ) 
[8004] ( v0 = 4 ; move v0 , v0 + 4 ; move ua , v0 ) 
[8005] ( move ua , 4 + ul ; move ua + ul , 3 ) 
[8006] ( move ua , 0 ; loop 0 , 3 , move v0 * v0 , 3 / v0 ) 
[8007] loop 0 , 7 , move ul - v0 , 4 / v0 
[8008] ( move ua , ul ; move 4 , 4 ; move ul , ul ) 
[8009] loop 0 , 2 , loop 1 , 2 , move ua - v1 , 3 
[8010] ( move 4 , ul ; move ua , 2 ; move ul , ul ) 
[8011] loop 0 , 6 , move ua / 4 , 4 * 3 
[8012] ( loop 0 , 5 , move v0 , ul ; move ul - v0 , v0 ) 
[8013] loop 0 , 6 , move v0 - 2 , v0 + ul 
[8014] ( move ul , ul / 4 ; loop 0 , 6 , move v0 , ul ) 
[8015] loop 0 , 3 , ( move 2 , ul ; move v0 , v0 ) 
[8016] ( move 4 / 3 , ua ; move ua , 2 - ul ; move ul , 0 ) 
[8017] ( move 2 , ul ; move ua , 4 ; move ul , ul ) 
[8018] ( move ul - 4 , ua ; loop 1 , 4 , move v1 , ul - 4 ) 
[8019] ( move 0 , ul ; loop 0 , 4 , move v0 , v0 ) 
[8020] ( move ua + 4 , ul ; move ua , 3 + ul ) 
[8021] ( loop 0 , 3 , move 3 + v0 , ul ; move v0 , ul / v0 ) 
[8022] ( move ua , 4 + ul ; move ua + 2 , 2 ) 
[8023] ( move ul - 4 , ua ; loop 0 , 5 , move v0 , v0 / 4 ) 
[8024] ( move 3 , ul ; loop 0 , 6 , move 3 , v0 * v0 ) 
[8025] ( move ua , 3 ; loop 0 , 3 , move v0 , v0 / 2 ) 
[8026] ( loop 0 , 6 , move ul , v0 + v0 ; move ua , v0 ) 
[8027] loop 0 , 3 , move ua - v0 , 3 - v0 
[8028] ( ( move ua , ul ; move 2 + ul , ul ) ; move 3 , 4 ) 
[8029] ( move 0 - 3 , ul / ua ; move ua , ul ) 
[8030] ( move 3 , 3 ; loop 0 , 3 , move v0 , ul ) 
[8031] ( loop 0 , 4 , loop 1 , ul , move ua , 3 ; move v0 , ua ) 
[8032] ( move ul , ul ; move ua , ul ; move ua , ua * ua ) 
[8033] ( ( move 4 , 0 - ul ; v0 = ua ) ; move 4 , 3 / v0 ) 
[8034] ( move ua , 4 + ul ; move ul , ul ; move ua , ul ) 
[8035] loop 0 , 2 , ( move ul , v0 ; move ul - ua , ul ) 
[8036] ( move ua , 3 / ua ; loop 0 , 5 , move v0 , v0 ) 
[8037] ( move 2 , ul ; move 0 - 2 , ul ; move 4 , ul + ul ) 
[8038] ( move ul - 4 , ua - ul ; move ul - 3 , 2 ; move ua , 2 ) 
[8039] ( move ua + 2 , ua ; v0 = 4 ; move v0 + 3 , v0 ) 
[8040] ( move 4 , ua ; move 0 - ua , ul ) 
[8041] ( v0 = 2 - 4 ; loop 1 , 6 , move v0 , v0 / v1 ) 
[8042] loop 0 , 7 , move ul + v0 , 4 / 3 
[8043] ( move ua , ua ; loop 0 , 3 , move v0 + 4 , ul - 3 ) 
[8044] ( move 3 , ua ; move 3 , 4 / ua ; move 4 , 4 / ua ) 
[8045] ( loop 0 , 4 , move v0 , v0 - 3 ; move ua , v0 ) 
[8046] loop 0 , 2 , ( move 3 , v0 ; move v0 - ua , ua ) 
[8047] ( move ul , 3 ; loop 0 , 6 , move 3 , v0 ) 
[8048] ( move 3 , 3 ; loop 0 , 4 , move v0 , v0 ) 
[8049] loop 0 , 3 , move 0 - ua , v0 * 4 
[8050] ( loop 0 , 5 , move 4 / 3 , v0 - ul ; move ul , 0 ) 
[8051] ( move ua / 2 , 4 + ul ; move 4 , 2 ) 
[8052] ( move ul , 3 ; move ua , 2 + ul ; move ua , 3 ) 
[8053] ( loop 0 , 6 , move 2 , v0 ; move 4 , ul ) 
[8054] ( move ua , ul ; move 2 + ul , ul ; move ua - ul , 3 ) 
[8055] ( move ul , ul ; move ua , ul ; move 2 , 2 / 4 ) 
[8056] loop 0 , 3 , move 4 , 4 * 2 
[8057] ( move 2 - ua , 3 / 2 ; loop 0 , 3 , move 2 , ul ) 
[8058] ( move ul - ua , 3 ; loop 0 , 3 , move 3 , v0 ) 
[8059] ( loop 0 , 4 , move ul - ua , v0 ; move ua , ua ) 
[8060] ( v0 = ua ; move 4 + v0 , ul ; move v0 , v0 - 4 ) 
[8061] ( move 0 , ul / 2 ; move 3 , 2 ; move ua + ul , 4 ) 
[8062] ( move ua + ul , 2 ; move ua , 3 ; move ul + ul , 2 ) 
[8063] ( move 0 , 4 ; loop 0 , 5 , move v0 , v0 ) 
[8064] ( loop 0 , 6 , move ul , ul + v0 ; move v0 , v0 ) 
[8065] ( move 3 , ul ; loop 0 , 5 , move v0 , 4 ) 
[8066] loop 0 , 2 , loop 1 , 2 , move ul - ua , v1 + 4 
[8067] ( move 2 - ua , ua - 3 ; v0 = 2 ; move 4 , v0 ) 
[8068] ( move ua , ua + 3 ; move ul , ul - 3 ; move ua , ul - ua ) 
[8069] ( move 4 , 0 - ul ; move ul , 2 ) 
[8070] ( move 4 , ul ; move 2 , ul ; move ul + ul , ua + ul ) 
[8071] ( move ua + 4 , ul ; move 3 , 3 ) 
[8072] ( move ua , ua + 3 ; ( move 4 , 3 ; move ua , ul ) ) 
[8073] ( move ua , 3 ; move 4 , ua / 4 ) 
[8074] ( move 2 - ua , ul ; move ul , ul ; move 3 + ul , ua / 3 ) 
[8075] ( move ua + ul , 4 + ul ; move ua , 2 ) 
[8076] ( move ul - ua , 0 ; move ua + ul , 4 + ul ) 
[8077] ( move ua , ul - ua ; move ua , 4 + 4 ; move ul , 4 ) 
[8078] ( move ua , ul ; move ua + ul , ua - 4 ) 
[8079] ( loop 0 , 4 , move v0 , 4 ; loop 1 , 2 , move ul , v1 ) 
[8080] ( move ua - 2 , ua ; loop 1 , 6 , move 4 , 3 ) 
[8081] loop 0 , 3 , loop 1 , 2 , move v0 + v0 , ul 
[8082] ( loop 0 , 5 , move v0 , ua - v0 ; move v0 , ua ) 
[8083] loop 0 , 5 , move ua - v0 , v0 - 4 
[8084] ( move 4 , 2 ; move 4 + ul , ul / 2 ) 
[8085] ( move ua - ul , ul - 3 ; move ua - ul , ua * ua ) 
[8086] ( loop 0 , 4 , move 4 , 2 ; move ua , v0 ) 
[8087] loop 0 , 2 , ( move v0 + 2 , v0 - 4 ; move v0 , 4 ) 
[8088] ( move ul , ul / ua ; loop 0 , 6 , move v0 , ul ) 
[8089] loop 0 , 3 , loop 1 , 2 , move v0 + v0 , 4 
[8090] ( move 2 , 0 ; move 4 , 4 + ul ) 
[8091] ( move ua + ul , ul ; move ua , 3 ; move ua , ua * ua ) 
[8092] ( move ua , 2 ; loop 0 , 5 , move v0 + ul , 4 ) 
[8093] ( move 2 , ul ; move ua , 2 ) 
[8094] ( move 2 + ul , ua ; loop 0 , 5 , move v0 , v0 * v0 ) 
[8095] ( move 4 , 3 ; move 0 - ua , 2 ; move ul , ul ) 
[8096] ( move ua - 3 , ua ; loop 0 , 5 , move v0 + v0 , 3 ) 
[8097] ( move ul , ul ; ( move ua , ua / 4 ; move 4 , ua + ul ) ) 
[8098] ( move ua + ul , 3 ; move 3 - ua , 3 * 2 ) 
[8099] ( move ua , ua + 3 ; loop 0 , 6 , move v0 , v0 * v0 ) 
[8100] ( move 2 , 0 - ul ; move ua , ua ; move 2 - ua , ul ) 
[8101] ( move 4 , ul / ua ; move ul - ua , ua - 4 ; move 4 , ua ) 
[8102] ( move ul , ul / ua ; loop 0 , 4 , move v0 , v0 ) 
[8103] ( loop 0 , 4 , move ul + ul , v0 - ul ; move ua , ul ) 
[8104] ( move 3 , ul - 2 ; move 0 , 0 ; move ua - ul , 4 + ul ) 
[8105] ( loop 0 , 3 , move v0 - 4 , 4 + v0 ; move ul , v0 ) 
[8106] ( move ul , ul + ul ; move ua + ul , ul / 4 ; move 3 , ul ) 
[8107] ( move 0 - ua , ul ; loop 0 , 4 , move v0 , 4 ) 
[8108] ( move 0 - 3 , 4 ; move 4 + ul , ul - ua ; v0 = 3 ) 
[8109] loop 0 , 2 , ( move v0 + ua , ul ; move 2 , 2 ) 
[8110] loop 0 , 3 , ( move v0 , ul - v0 ; move ua - 4 , ul ) 
[8111] loop 0 , 2 , ( move ul , v0 ; move v0 - ua , 0 ) 
[8112] ( move 4 + ul , 4 ; loop 0 , 5 , move 3 , v0 ) 
[8113] ( move 3 , ul ; v0 = 4 + ul ; move v0 , v0 ) 
[8114] ( move 3 , 4 ; move ul , ul ; move 3 , ul ) 
[8115] loop 0 , 4 , move 2 , 3 / 2 
[8116] loop 0 , 2 , loop 1 , 3 , move 2 - v0 , v1 - 4 
[8117] loop 0 , 2 , loop 1 , 3 , move 2 , v0 
[8118] ( move ua + 2 , ul / ua ; move 4 - ul , 2 ) 
[8119] loop 0 , 3 , ( move v0 , v0 ; move ua / v0 , 2 ) 
[8120] ( move 4 , ul ; move ul , ua - ul ; move ua , ul ) 
[8121] ( move ua , ua - ul ; move ul - ua , ul - 2 ) 
[8122] ( move 4 - ul , ul / ua ; move ua , ua - 2 ) 
[8123] ( ( move ul , ul ; move ua , ul ) ; move 3 + 2 , 2 ) 
[8124] ( loop 0 , 5 , move 3 , ua + v0 ; move v0 , ua * ua ) 
[8125] ( move ul / 3 , ul ; loop 0 , 6 , move ua - 3 , v0 ) 
[8126] ( move ua + 3 , 4 ; move 2 , 2 ) 
[8127] ( move ua , ua - ul ; move ul - ua , 4 ; v0 = ua ) 
[8128] ( move ua + ul , ul - 2 ; move ua / 4 , ul ) 
[8129] ( v0 = ul ; loop 1 , 6 , move v0 , v0 ; move 3 , 2 ) 
[8130] ( move 3 , ul - 4 ; move 4 , ul ) 
[8131] ( move 2 , ua * ua ; move ua + ul , 4 ) 
[8132] loop 0 , 3 , ( move v0 , 0 ; move 2 , v0 - 4 ) 
[8133] ( move ua , ua / 2 ; loop 0 , 2 , move 3 , ul + v0 ) 
[8134] ( move ua , 4 ; move ul , ua - 2 ) 
[8135] ( move 4 + ul , ul / ua ; move ul - ua , ul ) 
[8136] loop 1 , 3 , move ua - 2 , v1 * v1 
[8137] ( loop 0 , 4 , move ul , v0 + 2 ; move v0 , v0 ) 
[8138] ( move ul , 3 + ul ; move 4 , 4 + ul ; move ua , 2 ) 
[8139] ( move ua , ul ; loop 0 , 6 , move ul - v0 , v0 + v0 ) 
[8140] ( v0 = 4 ; move 3 + v0 , v0 ; move ua , ua - v0 ) 
[8141] ( move ua + ul , 2 ; move 2 , 4 ) 
[8142] ( loop 0 , 3 , move 3 , v0 ; move v0 * v0 , ua ) 
[8143] ( move ua , ul / 4 ; move 4 , 2 * 2 ) 
[8144] ( move 4 , ua ; loop 0 , 3 , move ul + v0 , ul / v0 ) 
[8145] loop 0 , 2 , loop 1 , 3 , move v1 , v1 - v0 
[8146] ( move 4 , ul ; move ua - 4 , 4 ; move ul , ua + ul ) 
[8147] ( move 3 , ul ; move ua , ul - 2 ; move ul , ul - 2 ) 
[8148] ( move ul , ua * ua ; move 3 , ul ) 
[8149] ( move ul , 2 ; move ua , 2 ; move 4 , ul ) 
[8150] ( move ua , ua ; move ua + ul , ua - 3 ; move ul , ul ) 
[8151] ( move ua + 2 , ul ; loop 0 , 5 , move ul + v0 , 3 ) 
[8152] loop 0 , 3 , ( move v0 , ul ; move 2 , ua + 2 ) 
[8153] ( move 4 , 4 ; move ua , ua - ul ) 
[8154] ( move ua - ul , ua * ua ; move ua , 2 - ua ) 
[8155] ( move ul - ua , ul ; move ua , 4 / 3 ) 
[8156] ( ( move ul , ua ; move 4 - ua , 3 + ul ) ; move ua , 3 ) 
[8157] loop 0 , 4 , move ul + v0 , v0 / 4 
[8158] ( ( move ul - ua , 2 ; move ul , ua ) ; move ua + ul , ul ) 
[8159] ( move 4 - ua , ua + ua ; move ua , 4 ; move 4 , ul ) 
[8160] ( loop 0 , 5 , move v0 , 4 ; move ua , v0 + ul ) 
[8161] ( move 2 * 2 , ua ; move ul , ul / ua ; move 3 , 4 / ua ) 
[8162] ( loop 0 , 5 , move 2 - ul , v0 - 3 ; move v0 , v0 ) 
[8163] ( move 2 , 4 ; loop 0 , 6 , move v0 - ul , v0 + 4 ) 
[8164] loop 0 , 4 , move ul , 4 + 3 
[8165] loop 0 , 5 , move v0 / 2 , v0 + v0 
[8166] ( move ua , 4 - ul ; move ul , 0 ; move ul - 4 , 2 ) 
[8167] loop 0 , 3 , ( move v0 , ul ; move 3 , ul ) 
[8168] ( move 2 , ul - 2 ; move ua , ul ) 
[8169] ( move 2 , 3 / ua ; move 4 + ul , ul ) 
[8170] ( loop 0 , 4 , move v0 , 4 ; move v0 + ul , ul ) 
[8171] ( move ul - ua , ua ; move ul , ul ; move 4 , 4 ) 
[8172] ( loop 0 , 6 , move v0 , ul ; move 2 / ua , ua ) 
[8173] ( move 4 , ul / ua ; v0 = ul - 3 ; move 3 , v0 ) 
[8174] loop 0 , 3 , ( move v0 - ul , 3 ; move v0 + v0 , ul ) 
[8175] loop 0 , 2 , move v0 - ua , v0 + 4 
[8176] loop 0 , 3 , move ua - 3 , v0 + 3 
[8177] loop 0 , 3 , move ul - 4 , v0 / 3 
[8178] ( move ul , 3 ; loop 0 , 5 , move v0 , ua / v0 ) 
[8179] ( move ua , 2 ; move 4 , ul / 4 ; v0 = 0 ) 
[8180] move 4 + 4 , 2 / 4 
[8181] ( move 3 , 2 ; move ua + ul , 4 + 3 ) 
[8182] ( loop 0 , 4 , move v0 , ua - ul ; move ul , ua ) 
[8183] ( move 4 + 3 , ul ; loop 0 , 6 , move v0 , v0 ) 
[8184] loop 0 , 5 , ( v1 = ua / 4 ; move v1 + v0 , v0 ) 
[8185] ( move 4 + ul , ul ; move ul , ua + ul ; move ua , 3 + ul ) 
[8186] ( move ua , 0 ; move ul , 2 ; loop 0 , 5 , move 3 , v0 ) 
[8187] ( move ul , ul ; move ua , ua * ua ; move 2 , ul ) 
[8188] ( move 4 - ua , ua ; move ua + ul , 2 ) 
[8189] ( move ua , 4 ; ( move 4 , 3 + 3 ; v0 = ua ) ) 
[8190] ( loop 0 , 6 , move ul , v0 * 4 ; move ul + v0 , ua ) 
[8191] ( move ua , ul ; loop 0 , 6 , move ul - 4 , v0 ) 
[8192] ( move ul / 2 , ul ; move 3 , 4 - ua ; move ua , ua * ua ) 
[8193] ( move ua + ul , ua ; loop 0 , 3 , move 3 , ul ) 
[8194] ( move ua + 2 , ul ; move 2 , ua * ua ; move ua , ul ) 
[8195] ( move ua + ul , ua - 3 ; move ua , 4 - ua ) 
[8196] loop 0 , 3 , ( move 4 , v0 ; move v0 - ul , v0 ) 
[8197] ( move 4 , ua - ul ; move 2 + ul , ua ; move 2 , 4 + ul ) 
[8198] ( move 4 , 0 ; move 4 * 2 , ul ; move ul , ul / 2 ) 
[8199] ( move 0 - ua , ul / ua ; move 4 , ul ) 
[8200] ( move 2 , 0 ; move ua - 2 , 3 * 2 ) 
[8201] ( move 3 , 4 ; loop 0 , 4 , move v0 , v0 ) 
[8202] ( loop 0 , 4 , move v0 , 3 ; move v0 , 4 ) 
[8203] loop 0 , 3 , ( move 2 / v0 , ul ; move ul , v0 ) 
[8204] ( move ua , 4 ; loop 0 , 3 , move v0 , ul - v0 ) 
[8205] ( move ua - 4 , ul ; ( move ul , 4 ; move ul - ua , ul ) ) 
[8206] loop 0 , 2 , ( move v0 , v0 + v0 ; move 4 , ul ) 
[8207] ( move ua , 4 ; move 4 , ul / 2 ) 
[8208] ( move ul - ua , 0 - ul ; move 3 , ul ) 
[8209] ( move ua , 3 ; loop 0 , 4 , move v0 , 3 ) 
[8210] ( move ua , ua ; loop 0 , 6 , move ul , ul + v0 ) 
[8211] ( loop 0 , 6 , move v0 , v0 / 2 ; move v0 , v0 ) 
[8212] ( move ua , ua - ul ; move 2 , ua - 2 ) 
[8213] loop 0 , 2 , ( move ua , ul + ul ; move ul , 2 ) 
[8214] ( move ua + 2 , 0 ; loop 0 , 6 , loop 1 , ul , move ua , 4 ) 
[8215] loop 0 , 6 , move ul - v0 , v0 + 2 
[8216] loop 0 , 3 , move 3 / v0 , v0 / 3 
[8217] loop 0 , 5 , move v0 - ul , v0 / 4 
[8218] ( ( move ua , ul ; move ua , 3 ) ; move 4 , ul - ua ) 
[8219] ( move ua , ul - 3 ; move 4 + ul , 3 ) 
[8220] ( move ua , 3 ; move ul , ul ) 
[8221] loop 0 , 2 , ( move 4 , ul ; move v0 + ul , ua + v0 ) 
[8222] ( ( move 3 , ua ; move ua , 2 ) ; move ua , 3 ) 
[8223] ( move ua , 4 ; move 2 - ua , 3 * 2 ) 
[8224] loop 0 , 2 , move 3 , ua * ua 
[8225] ( move ua , 4 ; move ua + 3 , 2 ) 
[8226] ( ( move 3 + 2 , ua ; move ua , ua + ul ) ; move ul , ul ) 
[8227] loop 0 , 7 , move 4 / v0 , ul / v0 
[8228] ( move ul - ua , ul ; move ul , ua + 4 ; move ua , ua + 3 ) 
[8229] ( loop 0 , 6 , move v0 , 2 ; move v0 , ul ) 
[8230] ( move 3 , 3 ; move ua , ul + ul ; move 2 , ua ) 
[8231] ( move 4 , ul ; move 4 , ua / 4 ; v0 = ul ) 
[8232] ( v0 = ua / 4 ; move ua , v0 ; move 3 , v0 ) 
[8233] ( loop 0 , 2 , move 3 , v0 ; move v0 * 4 , v0 ) 
[8234] loop 0 , 2 , move v0 - 4 , ua * ua 
[8235] ( move 3 , 4 ; move ul , 2 ; loop 0 , 5 , move v0 , ul ) 
[8236] ( loop 0 , 3 , move 4 , 4 ; move ua , v0 ; v1 = ul ) 
[8237] loop 0 , 3 , move ua - ul , 3 / v0 
[8238] ( move ul - ua , ul ; move ul , 4 ) 
[8239] ( loop 0 , 5 , move ul , 2 ; move v0 , 3 ) 
[8240] loop 0 , 6 , move ul - v0 , ua * ua 
[8241] ( move ul , 3 ; move ua , 4 / ua ; move ul , ua * ua ) 
[8242] loop 0 , 3 , move v0 - 4 , v0 + 4 
[8243] ( move ua , 4 * 4 ; move 2 , ul ; move ua / 2 , ua ) 
[8244] loop 0 , 2 , move 2 - ua , 2 - v0 
[8245] ( loop 0 , 3 , move v0 , ua - v0 ; move ua , v0 ) 
[8246] ( move ua , 4 * 4 ; move ul , ul ) 
[8247] ( loop 0 , 5 , move ua , 3 ; move v0 , 0 ) 
[8248] loop 0 , 2 , ( move ua , 2 ; move 0 - 2 , v0 ) 
[8249] ( move 3 + ul , 3 ; move 2 , ul ; move ua , 4 - ua ) 
[8250] ( move 4 + 3 , ul ; move ul , ul ) 
[8251] ( move 3 , ul - 4 ; move ul , ul ; move ua , ul / ua ) 
[8252] ( move ul , 0 ; move 3 , ul ) 
[8253] ( move ul - 4 , 2 ; loop 0 , 5 , move v0 , ua / v0 ) 
[8254] ( move ua + ul , ua - 3 ; ( move ul , ua ; move ua , 2 ) ) 
[8255] loop 0 , 2 , move v0 + 4 , v0 - 4 
[8256] ( move ua + ul , 4 - ua ; loop 0 , 6 , move v0 , v0 ) 
[8257] ( loop 0 , 4 , move v0 , ul - v0 ; move v0 , ul ) 
[8258] ( move ul , 3 / 2 ; move ua + 4 , 4 ) 
[8259] loop 0 , 4 , move 2 + v0 , 3 / v0 
[8260] ( v0 = 2 + ul ; loop 1 , 3 , move 3 , 4 * 2 ) 
[8261] loop 0 , 2 , ( move ul , ul ; move 3 , ul ) 
[8262] ( move 4 , ua - 4 ; move 4 , ul ) 
[8263] ( move ua , ua + ul ; loop 0 , 6 , move 2 - ua , v0 ) 
[8264] ( move ua , ul ; loop 0 , 5 , move v0 + v0 , v0 ) 
[8265] ( move ul , ul ; move ua , ul ; move 4 , 3 ) 
[8266] ( move 4 , ul ; move 4 , ul / 4 ) 
[8267] ( move ua + 4 , 4 ; move ul , 2 ) 
[8268] ( move ua , ua ; move 4 + ul , ul - 3 ) 
[8269] ( move ua , ua ; loop 0 , 4 , move ul + v0 , ul / v0 ) 
[8270] loop 0 , 3 , ( move v0 , 0 ; move ul + v0 , v0 ) 
[8271] ( move 4 + ul , ua - 4 ; loop 0 , 6 , move 4 , ul ) 
[8272] ( move 2 , ul ; loop 1 , 2 , move ua - ul , ul ) 
[8273] loop 0 , 7 , move v0 - 2 , ua - v0 
[8274] ( move 4 , ul ; move 4 , ul - 4 ; move ua + 2 , ua * ua ) 
[8275] ( move 0 , ul ; move ua - ul , 4 + 3 ; move ua , ul ) 
[8276] ( loop 0 , 2 , move ul , 4 ; move ua , 2 ; move v0 , v0 ) 
[8277] ( move ua + 2 , 2 ; move ul + ul , ul ) 
[8278] ( move ua - 3 , 3 / ua ; ( move ua , ul ; move ul , 2 ) ) 
[8279] ( loop 0 , 3 , move v0 , 3 ; move ua , v0 ) 
[8280] loop 0 , 3 , ( move v0 , v0 * 4 ; move ul , v0 ) 
[8281] ( move 2 , ua * ua ; move 2 - ua , 2 ) 
[8282] ( move 3 , ua * ua ; loop 0 , 6 , move 2 , ul ) 
[8283] loop 0 , 2 , move ua , 4 * 4 
[8284] loop 0 , 3 , ( move ul , v0 ; move 3 , v0 ; v1 = ul ) 
[8285] ( loop 0 , 6 , move ul , ul ; move ua , v0 + v0 ) 
[8286] ( move ua , 4 ; move 3 , 2 / ua ) 
[8287] ( move ua , 0 ; move ua - 3 , 4 ) 
[8288] ( move 3 , 3 ; move 3 , ul ; move 3 + ul , ul ) 
[8289] ( move ua , 3 ; v0 = ua ; move ul - v0 , v0 * v0 ) 
[8290] loop 0 , 5 , move 2 - v0 , v0 + v0 
[8291] ( move ul - 4 , 2 ; move 3 , ua / 4 ) 
[8292] ( loop 0 , 5 , move 2 , 4 * v0 ; move 3 , ul ) 
[8293] ( move 0 , ul ; loop 0 , 5 , move 2 , v0 / ua ) 
[8294] ( move ul - ua , 4 ; loop 0 , 4 , move 2 - v0 , ul ) 
[8295] ( move 3 , ul ; move ua - ul , ua - ul ; move ua , 3 - ul ) 
[8296] ( move ua , ua ; move ul , 4 ; move ua - ul , ul ) 
[8297] ( move ul , ul ; ( move ua , 3 + 2 ; move 3 , ua * ua ) ) 
[8298] loop 0 , 5 , ( move v0 + v0 , ul - 3 ; v1 = ul ) 
[8299] ( move ua - 4 , 0 ; move ua , ul ) 
[8300] ( move 3 , 0 ; loop 0 , 5 , move v0 , 3 ) 
[8301] ( v0 = 3 * 3 ; loop 1 , 3 , move 3 , v0 ) 
[8302] ( loop 0 , 4 , move 2 , v0 ; move v0 + ua , v0 ) 
[8303] ( move 2 - ua , ua ; move 2 , 4 / 3 ) 
[8304] ( move ul - ua , ua ; move 3 , 4 + ul ) 
[8305] ( move ua , ua + ua ; loop 0 , 5 , move 3 / v0 , ul ) 
[8306] ( move ua , 0 - ul ; move 2 , 3 / 4 ) 
[8307] ( move ua , ua / 3 ; move 4 , ul ) 
[8308] ( move ua , ul ; move ul , 3 ; move ua , ul - ua ) 
[8309] ( loop 0 , 3 , move ul , v0 ; move ua , 3 ) 
[8310] loop 0 , 3 , move 3 , ul / 4 
[8311] loop 0 , 3 , move v0 - ua , 4 / v0 
[8312] ( move ul , 2 ; move 4 , ul - 2 ) 
[8313] loop 0 , 6 , ( move 3 * 2 , 4 ; v1 = ua ) 
[8314] ( move 0 - 4 , 4 ; move 4 , ul ) 
[8315] ( move ua , ul / ua ; loop 0 , 3 , move v0 + v0 , ul ) 
[8316] loop 0 , 7 , move ul - 4 , ua - v0 
[8317] ( move ul - ua , ul ; loop 0 , 4 , move v0 , ul / ua ) 
[8318] ( move ua + ul , 3 * 2 ; move ua , 4 - ua ) 
[8319] ( ( move ul , ul / 4 ; move ua , ua * ua ) ; move 4 , 4 ) 
[8320] ( v0 = 2 ; loop 1 , 6 , move v0 , 3 ; move 3 , v0 ) 
[8321] ( move 3 - ua , ua * ua ; move ua , ul ) 
[8322] loop 0 , 4 , move ul - ua , ua - v0 
[8323] loop 0 , 4 , move v0 + v0 , ul / 4 
[8324] loop 0 , 6 , move 3 - v0 , ul / v0 
[8325] ( move 4 , ua ; move 2 + ul , ul ; move ua - ul , ul ) 
[8326] ( move 3 - ul , ul + ul ; move 2 , ul ; move 4 , ul - 2 ) 
[8327] ( move 0 , 2 / ua ; loop 0 , 5 , move 3 , v0 ) 
[8328] ( ( move ua , 2 ; move ua , 3 + ul ) ; move ua , 3 ) 
[8329] ( move ua + ul , 3 ; move 3 , 4 ) 
[8330] ( move ua , ua ; move ul , ua ; move ua - ul , 2 ) 
[8331] loop 0 , 6 , move 3 / 2 , ul 
[8332] loop 0 , 3 , ( move 3 , ua / v0 ; move v0 , v0 ) 
[8333] ( loop 0 , 5 , move ul , v0 + v0 ; move 3 / v0 , 0 ) 
[8334] ( loop 0 , 5 , move v0 , 2 ; move ua + ul , v0 ) 
[8335] loop 0 , 2 , loop 1 , 2 , move v1 - 3 , ul 
[8336] ( move 4 , ua ; move ua - ul , 3 + 2 ) 
[8337] ( v0 = 3 ; move v0 , 4 ; loop 1 , 4 , move ua , v0 ) 
[8338] loop 0 , 6 , ( v1 = 3 / 2 ; move v0 / v1 , v1 ) 
[8339] ( loop 0 , 4 , move v0 + ul , v0 ; move ua , v0 ) 
[8340] ( loop 0 , 2 , move 3 , 4 ; move v0 , v0 ) 
[8341] ( loop 0 , 5 , move ul , v0 * v0 ; move ua , 4 ) 
[8342] loop 0 , 5 , move 3 , ua - 4 
[8343] ( move 2 - ua , ua * ua ; v0 = ul ; move 2 , v0 ) 
[8344] loop 0 , 7 , move ul + v0 , ua - 4 
[8345] ( loop 0 , 3 , move ua , v0 - 4 ; move v0 , 0 ) 
[8346] loop 0 , 2 , ( move ul , v0 ; move ua + ul , ul ) 
[8347] ( move ua , 2 ; move 4 + ul , ua - 3 ) 
[8348] ( move ul , 2 / ua ; move 4 , 2 ; move ul - ua , ua + 3 ) 
[8349] ( v0 = ua - 4 ; move 4 , v0 ; move ua , v0 ) 
[8350] ( loop 0 , 6 , move 2 / ua , ua ; move v0 , v0 ) 
[8351] ( move 3 , ul / ua ; move 2 , 3 + ul ) 
[8352] loop 0 , 2 , loop 1 , 3 , move v0 + ul , ul 
[8353] ( loop 0 , 5 , move ua , 2 ; move v0 , ul ) 
[8354] ( move 4 * 2 , ul ; move 2 , ul ) 
[8355] ( loop 0 , 4 , move 2 - v0 , v0 ; move ua , 3 - v0 ) 
[8356] ( move 0 , ul / 3 ; loop 0 , 5 , move v0 , ua * ua ) 
[8357] ( move 3 , 3 / ua ; move 4 + ul , ul ) 
[8358] ( move ua , ul - 3 ; ( move 2 - 4 , 2 ; move ua , ua ) ) 
[8359] ( v0 = 4 ; move ua , 4 ; move v0 , v0 / 3 ) 
[8360] ( move ul + ul , 4 ; ( move ul - 2 , ul ; move 4 , ul ) ) 
[8361] ( move ul , ul ; move ua + 3 , 4 / 3 ) 
[8362] loop 0 , ul , loop 1 , 7 , move v0 - ul , ul / ua 
[8363] ( move 4 + 3 , 2 - ul ; move ul - ua , ua - ul ) 
[8364] ( move 4 , ua - ul ; move ua , ua ; move ua , ua / 3 ) 
[8365] ( loop 0 , 5 , move ua - 3 , ul ; move ul , 0 ) 
[8366] ( move 3 - ua , ul ; move ul / ua , 4 ; move ua , ul ) 
[8367] ( move 4 , ul ; move ul - 4 , ua / 4 ) 
[8368] ( move ua , ul + ul ; move ua - ul , ul ; move 2 , ua - 2 ) 
[8369] ( loop 0 , 5 , move 3 , v0 ; move v0 , ul - v0 ) 
[8370] ( move ul - ua , 0 ; loop 2 , 4 , move v2 , 3 ) 
[8371] ( move ua - ul , 4 / 3 ; loop 0 , 6 , move v0 , v0 ) 
[8372] ( move ua + ul , ua + 3 ; move 0 - ua , ul ) 
[8373] ( move ua , 2 ; loop 0 , 6 , move 4 , 3 ) 
[8374] ( move ua - ul , ul / 4 ; move ua , ul - 3 ) 
[8375] loop 0 , 7 , move v0 - 4 , v0 - 4 
[8376] ( loop 0 , 6 , move 2 , ul ; move v0 , ua ) 
[8377] loop 0 , 2 , ( move ul + ul , ul ; move v0 - 4 , 3 ) 
[8378] ( move ua , ua ; move ul , 4 ; move 4 - ul , ul ) 
[8379] ( move 3 , 0 ; move 4 - ua , 3 ; move 4 , 4 ) 
[8380] ( move 3 , ua ; move ua , 3 / 4 ) 
[8381] loop 0 , 2 , ( move ul , ul ; move ua - v0 , 4 * v0 ) 
[8382] ( move ul - ua , 3 ; move ua + ul , ul ) 
[8383] loop 0 , 3 , ( move ua + ul , v0 ; move ul - 4 , 2 ) 
[8384] ( move ua , ul / ua ; move 3 / 2 , 2 ) 
[8385] ( move ua + 2 , ua ; move ua / 3 , ua + 4 ; move ua , 4 ) 
[8386] ( loop 0 , 4 , move v0 , 3 - v0 ; move ua - 2 , ul ) 
[8387] ( move ul , 2 ; move ua + ul , ul ; move ua , ua * ua ) 
[8388] ( move ul , ua / 3 ; move 3 , ul ; move ua + ul , ul ) 
[8389] loop 0 , 5 , move ul - 4 , v0 * 4 
[8390] ( move 2 , ua * ua ; move ua , ua / 4 ) 
[8391] ( move 4 , ua / 4 ; loop 0 , 6 , move ul , ul ) 
[8392] ( loop 0 , 5 , move v0 , v0 - ul ; move ua , v0 ) 
[8393] loop 0 , 3 , ( move 2 - ua , v0 ; move ul , ua ) 
[8394] ( move 4 + ul , 4 + 2 ; move ul - 3 , ul ) 
[8395] ( move ua + ul , 0 ; move ua , 4 / 3 ) 
[8396] ( v0 = 4 + ul ; loop 1 , 5 , move v0 - v1 , v0 ) 
[8397] ( move ua , ul / ua ; move 0 - ua , 4 + ul ) 
[8398] ( loop 0 , 6 , move 2 , v0 ; move ua , v0 ) 
[8399] ( move 3 , ua - ul ; move ua , ul ; move ul , ul ) 
[8400] ( move ua , 0 - 3 ; move 3 , 4 ) 
[8401] ( v0 = ua * ua ; move ua + ul , ul / ua ; move ua , v0 ) 
[8402] ( move ua , ul ; loop 0 , 5 , move v0 , ua - ul ) 
[8403] ( move ua , ul + ul ; move ua , ul ; move ua , 2 + ul ) 
[8404] loop 0 , 5 , move 4 , ua - 4 
[8405] ( loop 0 , 5 , move ul / v0 , v0 ; move ua , v0 ) 
[8406] loop 0 , 2 , loop 1 , 2 , move v0 + ua , 4 
[8407] ( move ua , 3 ; loop 0 , 5 , move v0 , ul + v0 ) 
[8408] loop 0 , 4 , move 4 , v0 - 4 
[8409] ( move 4 , 2 / ua ; move ul - ua , ua - 3 ) 
[8410] ( move 3 , 4 ; move 2 , 4 ) 
[8411] ( move ua + ul , ua ; ( move ul , ul ; move 4 - ul , ul ) ) 
[8412] loop 0 , 3 , ( move v0 / ua , ul ; move v0 + v0 , ul ) 
[8413] ( move 0 - 4 , ua - ul ; move ua + ul , ua * ua ) 
[8414] ( move 4 + ul , 0 ; move 4 + ul , 0 - 2 ) 
[8415] ( move 3 * 3 , 2 ; move 3 - ua , ul ) 
[8416] loop 0 , 4 , ( v1 = 4 - v0 ; move v1 , v1 ) 
[8417] ( move 4 , ua ; move ua + 2 , 2 ) 
[8418] ( move 4 , ua ; loop 0 , 3 , move v0 , ul - v0 ) 
[8419] ( loop 0 , 6 , move v0 , 3 * v0 ; move ul , v0 ) 
[8420] ( move ua , 4 + 2 ; move 3 - ua , ul ) 
[8421] loop 0 , 2 , ( move v0 , 4 ; move v0 - ua , v0 ) 
[8422] ( v0 = 2 ; move ua , ua - v0 ; move 4 , v0 ) 
[8423] ( move 4 , 3 - 4 ; move 4 + ul , 2 ) 
[8424] ( v0 = ua - ul ; move v0 , ul ; move v0 , 4 ) 
[8425] ( move ul , ul ; move ul - 4 , ul + ul ; move ua , ua / 3 ) 
[8426] ( move 4 , 4 / ua ; move ua , 2 + ul ) 
[8427] ( move 4 + ul , 2 ; move ua , ul / 2 ) 
[8428] ( move ua / 2 , ul ; loop 0 , 3 , move 4 , ua * ua ) 
[8429] ( move ul , 4 ; move 3 , 4 / ua ) 
[8430] ( move ua , ua ; loop 0 , 6 , move v0 - 4 , v0 * v0 ) 
[8431] ( loop 0 , 6 , move ul , ul ; move ua , 3 ) 
[8432] ( move ua - ul , 0 - ul ; move 3 - ua , 4 - 2 ) 
[8433] ( move 4 + ul , ua + ua ; move ua + 3 , ua + 2 ) 
[8434] ( move ua , ul ; move ua , 4 * 4 ) 
[8435] loop 0 , 2 , ( move ua , v0 + ul ; move ul , ul + ul ) 
[8436] loop 0 , 5 , move 2 - 4 , ua - v0 
[8437] ( move ua , 4 / 3 ; move 3 , ul ) 
[8438] ( move 2 , 4 ; move ua - ul , 0 - ul ) 
[8439] ( move ua + ul , 0 ; move 2 , 4 ; move ua , ua + ul ) 
[8440] ( move ul , ua + ul ; move ua + ul , 2 ; move ua , 4 ) 
[8441] ( loop 0 , 5 , move v0 , ua - v0 ; move ul , 0 ) 
[8442] loop 0 , 7 , move 4 - v0 , v0 * 3 
[8443] ( move ul , ua ; loop 0 , 6 , move v0 , v0 * 2 ) 
[8444] ( move 4 + 4 , 4 + ul ; loop 0 , 5 , move ul , ul ) 
[8445] ( move 3 + ul , 3 ; loop 0 , 5 , move 3 , 4 ) 
[8446] ( move 4 , ul ; loop 0 , 6 , move ul , 4 - v0 ) 
[8447] loop 0 , 3 , ( v1 = v0 ; move v1 + 4 , 4 - v0 ) 
[8448] ( move ul , ua ; move 3 , ul ; move 2 + ul , ul / ua ) 
[8449] loop 0 , 3 , ( move v0 , 3 ; move 4 + ul , ul ) 
[8450] ( move 2 , ua - 2 ; loop 0 , 4 , move v0 , v0 ) 
[8451] ( ( move ua - 2 , 4 + 3 ; v0 = ua ) ; move ua , 2 ) 
[8452] ( loop 0 , 3 , move v0 + v0 , ul ; move ua , v0 ) 
[8453] ( move ua - 4 , ul ; loop 0 , 6 , move v0 , v0 / 4 ) 
[8454] loop 0 , 4 , move 4 + 2 , 2 
[8455] loop 0 , 7 , move v0 - 3 , 3 * v0 
[8456] ( move ua , 4 / 3 ; loop 0 , 6 , move v0 , v0 ) 
[8457] ( move 4 , ul + ul ; move ul - ua , 2 ) 
[8458] ( move ul - 3 , ua * ua ; v0 = ua - ul ; move ua , 4 ) 
[8459] ( move ua - ul , ua ; move 2 , 2 - 4 ) 
[8460] ( loop 0 , 6 , move ul , v0 * v0 ; move v0 , ul ) 
[8461] ( move 4 , ul ; loop 0 , 5 , move 2 , v0 ; v1 = v0 ) 
[8462] ( move ua , ua - 4 ; v0 = ua + 4 ; move v0 , 3 ) 
[8463] ( move ua + ul , ua ; move ua + ul , ul - 3 ) 
[8464] ( move ul , ul / ua ; loop 0 , 5 , move v0 , ul ) 
[8465] ( move ua - 4 , 4 + ul ; move 4 , 2 ) 
[8466] loop 0 , 3 , move 4 + v0 , 4 
[8467] ( move ua + ul , ul / 3 ; move ua , ul ) 
[8468] ( loop 0 , 4 , move 3 , v0 ; move v0 , 0 ) 
[8469] ( loop 0 , 2 , move 2 , ul ; loop 1 , 2 , move ua , 4 ) 
[8470] ( move ua , ua * ua ; move 2 - ua , ul ) 
[8471] loop 0 , 3 , ( move 4 - v0 , ul + ul ; move ul , v0 ) 
[8472] ( move ua - ul , 3 ; move ua , 2 ; move ul , ul ) 
[8473] ( move ua , ua ; move 3 , ul ; move 4 + ul , ul - ua ) 
[8474] ( loop 0 , 6 , move 3 , ul ; move 2 , v0 ) 
[8475] ( move 3 , ua - ul ; move 0 - ua , 4 ) 
[8476] ( loop 0 , 5 , move v0 , 4 + 3 ; move v0 / ua , ua ) 
[8477] ( loop 0 , 3 , move ua , ua - 3 ; move ul , ul ) 
[8478] ( move ul , ul ; move 3 , ua ; move 2 - ua , ua * ua ) 
[8479] loop 0 , 3 , move ua - v0 , 4 / v0 
[8480] ( move ua , ul ; loop 0 , 4 , move ua , ua * ua ) 
[8481] loop 0 , 3 , move v0 + 2 , v0 - ul 
[8482] loop 0 , 7 , ( v1 = v0 * v0 ; move v1 / 4 , 3 ) 
[8483] ( loop 0 , 5 , move ul , v0 - ua ; move ua , 2 / v0 ) 
[8484] ( loop 0 , 6 , move ua , 4 ; move ul , ul ) 
[8485] loop 0 , 3 , move ua - v0 , 4 / 3 
[8486] ( move ua , ul ; move 0 - ua , 3 + 3 ) 
[8487] loop 0 , 6 , move ua / 2 , ua / v0 
[8488] ( move ua , 3 ; move ua , 4 ; move 3 , ul ) 
[8489] ( v0 = 4 ; move v0 , 3 - ul ; move v0 , 4 + 2 ) 
[8490] loop 0 , 7 , move ul - v0 , 3 - v0 
[8491] ( move ua , ua ; move ua , ua * ua ; loop 0 , 4 , move 2 , 2 ) 
[8492] ( move 4 , 4 ; move ul - ua , ul ; move ua , ua ) 
[8493] ( move ul , ul - 4 ; move ua + 2 , ul - ua ) 
[8494] loop 0 , 2 , loop 1 , 2 , move 2 + v0 , v1 - 3 
[8495] ( loop 0 , 3 , move ul + ul , 4 ; move v0 , ul - v0 ) 
[8496] ( move 2 , ua ; move ul + ul , ua ; move ul - ua , ua / 4 ) 
[8497] loop 0 , 2 , loop 1 , 3 , move ul , v1 * v1 
[8498] ( move 2 , 3 ; loop 0 , 4 , move 4 , v0 ; move ua , v0 ) 
[8499] ( ( move 4 , ul - 3 ; move ul , ua + ul ) ; move 2 , ul ) 
[8500] loop 0 , 2 , loop 1 , 2 , move ua - 4 , v0 
[8501] ( move 3 , ua ; loop 0 , 3 , move 2 , v0 ) 
[8502] ( v0 = 0 - 4 ; move v0 , ua ; move v0 - ua , v0 ) 
[8503] ( move 0 - ua , ua ; move ua + 3 , ul ) 
[8504] ( move ua - ul , 4 ; loop 0 , 5 , move v0 , ul ) 
[8505] ( move ua + ul , 3 ; loop 0 , 5 , move ul , ul ) 
[8506] loop 0 , 6 , move 2 , ua * ua 
[8507] ( move ua , 0 ; loop 0 , 2 , move 4 , ul - ua ) 
[8508] ( v0 = 4 + ul ; move v0 , v0 ; move v0 , 4 ) 
[8509] ( move 3 / 2 , ua - 2 ; loop 0 , 6 , move v0 , v0 ) 
[8510] ( move 2 - ua , ua * 2 ; v0 = ua / 4 ; move 3 , v0 ) 
[8511] ( loop 0 , 5 , move ul , ul ; move ul , ua ; move v0 , v0 ) 
[8512] ( move ul , ua / 4 ; loop 0 , 5 , move 3 , v0 / 3 ) 
[8513] ( move ua + ul , ul ; move ua , ua / 3 ) 
[8514] ( move 4 , 2 - ul ; loop 0 , 3 , move 3 , v0 - 3 ) 
[8515] ( move ua , 0 ; loop 0 , 5 , move 4 / v0 , 4 ) 
[8516] ( ( move ul , ul ; move ua , ul ) ; move 0 - 3 , ul ) 
[8517] loop 0 , 6 , ( v1 = 0 ; move v1 - v0 , 4 ) 
[8518] ( loop 0 , 6 , move ul , ul + v0 ; move ua , 0 ) 
[8519] ( loop 0 , 4 , move v0 , 3 + ul ; move ul , 0 ) 
[8520] ( loop 0 , 3 , move v0 , v0 + v0 ; move 3 , ul ) 
[8521] ( v0 = 4 + 3 ; move v0 , ul ; move v0 , 2 ) 
[8522] loop 0 , 4 , move ul - 4 , v0 * 2 
[8523] ( move 3 , 4 - ul ; v0 = 4 ; move v0 , v0 * v0 ) 
[8524] ( loop 0 , 6 , move ul , ul ; move 2 , v0 ) 
[8525] ( loop 0 , 5 , move ul , v0 / 4 ; move ul , ua ) 
[8526] ( loop 0 , 5 , move v0 , v0 * v0 ; move ua , ul ) 
[8527] ( move ua , ua ; loop 0 , 5 , move v0 - ul , v0 + ul ) 
[8528] ( move 2 , ul + ul ; loop 0 , 4 , move v0 + v0 , v0 ) 
[8529] ( move 4 - ua , 2 / ua ; move 2 , 2 ; v0 = ul ) 
[8530] ( move ua , ul ; loop 0 , 5 , move v0 , ul - v0 ) 
[8531] ( move 3 - ul , ul ; loop 0 , 2 , move 2 + v0 , ua * ua ) 
[8532] ( loop 0 , 3 , move 2 , v0 ; move 3 , ul ) 
[8533] ( move ul , 4 / 3 ; move ua , 4 ) 
[8534] loop 0 , 2 , ( move v0 + ua , ul ; move v0 , ul ) 
[8535] ( move 3 , ul + ul ; loop 0 , 5 , move v0 + ul , v0 ) 
[8536] ( ( move ul , 4 ; move 4 , ul ) ; move ua , 3 + 2 ) 
[8537] ( move ul , ul / 2 ; move ua , ul ; move ua , 4 ) 
[8538] ( loop 0 , 6 , move ua , 3 ; move v0 , v0 * v0 ) 
[8539] ( loop 0 , 6 , move ul , ua ; move v0 , ua - v0 ) 
[8540] ( move ua + ul , ul ; move 0 - ua , 3 / ua ) 
[8541] ( ( move 4 , ul ; move ul , 2 ) ; move 3 , 3 + ul ) 
[8542] ( loop 0 , 5 , move 3 , v0 ; move v0 + v0 , v0 ) 
[8543] ( move 4 , 4 * 3 ; move 4 , ul + ul ) 
[8544] ( move 2 , 4 / 3 ; loop 0 , 5 , move 2 , 4 ) 
[8545] loop 0 , 3 , ( move ua - v0 , v0 ; move ul , ul ) 
[8546] ( loop 0 , 5 , move v0 , 2 ; move v0 , v0 * v0 ) 
[8547] ( move 4 , 3 * 2 ; loop 0 , 5 , move v0 , v0 * v0 ) 
[8548] ( move 2 , ua + 2 ; move ul , ul / 2 ; move ua , ul - ua ) 
[8549] loop 0 , 7 , ( move 2 / v0 , ul + v0 ; v1 = 0 ) 
[8550] loop 0 , 2 , ( move v0 + 4 , 2 ; move 4 , v0 + v0 ) 
[8551] ( move ul , ua * ua ; loop 0 , 4 , move v0 + ul , v0 ) 
[8552] loop 0 , 5 , move 3 / v0 , ul / 3 
[8553] ( loop 0 , 3 , move ul , v0 * 4 ; move ua , ua + v0 ) 
[8554] ( move ul , ul ; move ul , 3 ; loop 1 , 3 , move 4 , v1 ) 
[8555] ( loop 0 , 6 , move ul , v0 - 4 ; move v0 , ua ) 
[8556] ( move 3 , 3 ; move ua , ua + ul ; move 3 , ul ) 
[8557] loop 0 , 7 , move 0 - ul , 2 / v0 
[8558] ( move ua , ul ; move ua - ul , 4 ; move ul , ul + ul ) 
[8559] loop 0 , 2 , ( move 3 , v0 ; move ul , 4 ; v1 = v0 ) 
[8560] ( loop 0 , 3 , move 2 + ul , ul / ua ; move ul , ul ) 
[8561] ( ( move ua , ua ; move ua , 2 - ua ) ; move 4 , 2 ) 
[8562] ( move ua + 4 , ul ; move 4 , 4 ) 
[8563] ( move ua + 4 , ul ; move ua + 2 , 4 ) 
[8564] ( loop 0 , 5 , move 4 , 4 - ua ; move v0 , ul ) 
[8565] ( move ul - ua , ua - 4 ; loop 0 , 3 , move ul , 4 ) 
[8566] ( move ua + ul , 3 ; move 4 + ul , ua - 2 ) 
[8567] ( move 0 - ua , ua + 3 ; move 4 , 2 ) 
[8568] loop 0 , 3 , loop 1 , 2 , move v0 , v1 - v0 
[8569] ( move ua , ul ; loop 0 , 9 , v1 = 0 ; move v0 , v0 ) 
[8570] loop 0 , 6 , move 3 - ua , v0 - ul 
[8571] loop 0 , 2 , loop 1 , 2 , move ua - ul , 3 / 2 
[8572] ( move ua , 2 ; move ul , ul ; ( move 3 , 4 ; v0 = ul ) ) 
[8573] ( move ua + 2 , 2 ; loop 0 , 4 , move ua - 3 , v0 + ul ) 
[8574] loop 0 , 2 , move v0 + ua , ua / 4 
[8575] loop 0 , 7 , move 2 - ua , ua * ua 
[8576] ( loop 0 , 3 , move ul , v0 ; move ua + 2 , v0 * v0 ) 
[8577] ( move 4 , ul ; move 4 + ul , 4 + ul ) 
[8578] loop 0 , 2 , loop 1 , 3 , move 3 , 4 / v1 
[8579] loop 0 , 3 , ( move 2 , v0 ; move ul , v0 ) 
[8580] ( move ua , ua ; move ua + ul , 4 * 4 ; move ua + ul , 4 ) 
[8581] loop 0 , 7 , move v0 - 4 , v0 * v0 
[8582] loop 0 , 2 , ( move 4 , v0 ; move ua , 2 ) 
[8583] ( move ua - ul , ul + ul ; move 4 , ua * ua ) 
[8584] loop 0 , 3 , ( move ua , 2 ; move ul , v0 ) 
[8585] ( move ua / 2 , 3 ; loop 0 , 4 , move v0 , 2 ) 
[8586] ( move ua , ua ; loop 0 , 2 , move 3 , v0 + ul ) 
[8587] ( loop 0 , 6 , move ul - v0 , 3 ; move v0 , v0 ) 
[8588] ( move ul , ua / 2 ; loop 0 , 5 , move 4 , v0 ) 
[8589] ( move 3 , ua / 3 ; move ul - ua , ul ) 
[8590] ( loop 0 , 5 , move 4 , v0 ; v1 = 2 ; move ua , v1 ) 
[8591] ( move 4 , ul ; move ua , 2 ; move ua - ul , ua * ua ) 
[8592] ( loop 0 , 6 , move ul , ul ; move ul - v0 , v0 ) 
[8593] ( loop 0 , 6 , move v0 / 2 , v0 ; move v0 , ul ) 
[8594] ( loop 0 , 4 , move v0 , 3 ; loop 1 , 3 , move ua , v0 ) 
[8595] ( move ua / 4 , 2 ; move 3 , ul ) 
[8596] loop 0 , 3 , ( move ul , ul ; move v0 * 2 , 4 ) 
[8597] ( move ua , 4 / ua ; loop 0 , 6 , move v0 , v0 ) 
[8598] ( move ua , ua ; loop 0 , 6 , move v0 - 4 , ua + ul ) 
[8599] ( loop 0 , 3 , move ul , v0 ; move ua , 4 ) 
[8600] ( move 2 - ua , ul ; loop 0 , 6 , move ul , v0 * v0 ) 
[8601] ( move ul , 4 ; move ua , ul - 3 ; move 3 , ul / ua ) 
[8602] ( move 3 , ul ; loop 0 , 5 , move v0 , v0 + v0 ) 
[8603] ( move ua , ua * ua ; move 3 , 3 - ul ) 
[8604] ( move 4 , ul ; move 3 , 4 * 3 ) 
[8605] ( loop 0 , 3 , move 4 + ul , v0 ; move 3 , 4 ) 
[8606] loop 0 , 3 , ( move ua , 3 ; move ul , v0 ) 
[8607] loop 0 , 3 , ( v1 = ua ; move 2 + v0 , ua - ul ) 
[8608] loop 0 , 3 , ( move 4 , ul ; move v0 , v0 ) 
[8609] ( loop 0 , 5 , move 2 , v0 + v0 ; move ua , v0 ) 
[8610] ( move 4 , 4 ; move ul - ua , ul + ul ) 
[8611] loop 0 , 5 , move 3 - ua , ul - v0 
[8612] ( move ua + ul , 4 + 2 ; move 3 , 2 ) 
[8613] ( loop 0 , 4 , move 4 - ul , ul ; move v0 + v0 , ul ) 
[8614] ( move 2 , ul ; move ul , ua + 4 ; move 2 , ul - ua ) 
[8615] ( move ul + ul , 4 ; loop 0 , 4 , move v0 + ul , v0 ) 
[8616] ( move ul , 4 ; loop 0 , 3 , move ua / v0 , v0 + v0 ) 
[8617] ( move ua , ul / 4 ; ( move ua , ul ; move ul , ua ) ) 
[8618] ( move ua , ua + 2 ; move ua + ul , 2 ; move 2 , ua ) 
[8619] ( move ua , 0 ; move 3 , 2 ; move 3 - ua , 3 ) 
[8620] ( move 0 - 4 , ua - ul ; loop 0 , 4 , move v0 , v0 ) 
[8621] ( move ul , ua ; move ul , 3 + ul ; move ua , ul ) 
[8622] loop 0 , 7 , move 2 , v0 / 4 
[8623] ( move 2 - ua , 2 / ua ; move ua + 3 , ul ) 
[8624] ( move 2 + ul , 4 + ul ; move ua , 4 - ua ) 
[8625] ( move 2 , 4 ; move ua , ua * ua ) 
[8626] ( move 4 , ua - 4 ; v0 = 4 ; move v0 , v0 ) 
[8627] ( loop 0 , 3 , move v0 , ul ; move ul - 3 , v0 ) 
[8628] ( move ua , ua - 3 ; move ua , 4 ; move 3 , ua ) 
[8629] loop 0 , 7 , move 3 - v0 , 4 + ul 
[8630] loop 0 , 4 , move ua - 3 , ul - 2 
[8631] ( loop 0 , 2 , loop 1 , 2 , move 3 , v1 ; move v0 , 0 ) 
[8632] ( move ul , ul ; loop 0 , 5 , move v0 , v0 - 2 ) 
[8633] ( move 4 + ul , ul + ul ; move ua + ul , ua / 4 ) 
[8634] loop 0 , 2 , move v0 - ua , 4 - v0 
[8635] ( move ua + ul , 4 / ua ; move 3 , ul - ua ) 
[8636] loop 0 , 6 , ( v1 = ul / 4 ; move 4 - v1 , 2 ) 
[8637] loop 0 , 3 , ( v1 = ua - 3 ; move 3 , v1 - v0 ) 
[8638] ( move ua , 4 ; move ul , ua + 3 ; move ua , 3 ) 
[8639] ( move ul , ua + ua ; move ul - ua , 4 ; move 3 , 3 ) 
[8640] ( loop 0 , 4 , move 3 - ua , v0 + v0 ; move ua , ul ) 
[8641] loop 0 , 4 , move ua - 3 , 2 * v0 
[8642] ( move 3 , 2 ; move ua , 3 + 2 ) 
[8643] ( move ua , ua * ua ; loop 0 , 6 , move 2 , v0 ) 
[8644] ( loop 0 , 4 , move v0 , ul ; move v0 - ua , 4 ) 
[8645] loop 0 , 7 , move ua - v0 , ua - 4 
[8646] ( move ua , ua ; v0 = ul ; loop 1 , 4 , move 4 , v0 ) 
[8647] ( v0 = 4 ; move v0 , ul / v0 ; move v0 , v0 ) 
[8648] ( v0 = 4 ; move ul , 2 - v0 ; move ua , ua / v0 ) 
[8649] ( move ua , ua ; loop 0 , 5 , move ua , ua * ua ) 
[8650] loop 0 , 4 , ( v1 = 3 / v0 ; move v1 , ul - v1 ) 
[8651] ( move 4 + ul , ul ; move ua , 4 ; loop 0 , 2 , move ul , ua ) 
[8652] ( move ul + ul , ul / ua ; move 4 + 3 , ul ) 
[8653] ( move ua , ul ; v0 = 2 ; loop 1 , 6 , move 3 , v0 ) 
[8654] ( move ua , 2 ; ( move ul , ul ; move 4 , ul ) ) 
[8655] loop 0 , 6 , move v0 - ul , 4 + v0 
[8656] loop 0 , 2 , ( move v0 , ul ; move ul , v0 ; move ua , ul ) 
[8657] ( v0 = ua ; loop 1 , 2 , move ul - v0 , 4 / v0 ) 
[8658] loop 0 , 7 , move v0 / 2 , ua / v0 
[8659] ( move ua + 4 , ul ; move ul - ua , 3 / ua ) 
[8660] loop 0 , 3 , move v0 - ua , 4 - v0 
[8661] ( move 3 , ua * ua ; move ua , ua - ul ) 
[8662] loop 0 , 6 , ( loop 1 , 9 , v2 = ua ; move v0 , v1 ) 
[8663] ( move ul - ua , 2 ; v0 = 4 ; move v0 , v0 ) 
[8664] ( loop 0 , 5 , move 2 , v0 ; move v0 + v0 , ua * 2 ) 
[8665] ( move ul , ua - ul ; loop 0 , 5 , move v0 , 2 ) 
[8666] ( move 3 , 2 ; move ul , 2 ; move 3 , ul ) 
[8667] ( move ua + 3 , 2 ; move ua , 4 * 4 ) 
[8668] ( move ua , ul / ua ; move ul - ua , ua / 4 ) 
[8669] ( move 3 , ua ; loop 0 , 5 , move ul , 3 - v0 ) 
[8670] ( move 2 + 2 , ua ; move 2 , ul ; move 4 - ua , 2 ) 
[8671] ( move ul , ul ; loop 1 , 6 , move 4 , ua - v1 ) 
[8672] loop 0 , 3 , move 0 - 3 , ua - v0 
[8673] ( move 4 , ul ; move ua - ul , ul ; move 4 , 4 ) 
[8674] ( move ul , 2 + 2 ; loop 0 , 6 , move v0 , v0 * 4 ) 
[8675] ( move 0 , 4 ; loop 1 , 6 , move v1 , ul ) 
[8676] loop 0 , 3 , ( move v0 + ul , v0 ; move 3 , v0 ) 
[8677] ( move 3 + 2 , 0 ; loop 0 , 5 , move v0 , ul ) 
[8678] ( move ua , ul / 2 ; move 4 + ul , 4 ) 
[8679] loop 0 , 2 , loop 1 , 3 , move ua , 3 + v0 
[8680] ( move ul - ua , ua - ul ; move ul - ua , 2 ) 
[8681] loop 0 , 3 , ( move v0 , v0 ; move ua / 4 , v0 - ul ) 
[8682] loop 0 , 6 , move ua / 4 , ua - ul 
[8683] ( move 3 , 3 ; move 0 - ul , 3 - 2 ; move 4 , 4 ) 
[8684] ( move 2 , ua - 4 ; move 3 , 4 + ul ; move 4 , ua + ul ) 
[8685] ( move 4 , ul ; move 2 , ul ; move ua , 2 ) 
[8686] loop 0 , 3 , ( move ul , v0 ; move 3 * v0 , v0 ) 
[8687] ( move 2 , ul ; move ua - ul , ul ; move 3 , ul ) 
[8688] ( move 3 , ua * 2 ; ( move 4 * 2 , ul ; move ul , ul ) ) 
[8689] ( move 4 + ul , ul ; move ul , 3 ; move ua + ul , ul ) 
[8690] ( move ua , 4 / 3 ; move 2 , 4 + 3 ; v0 = 2 ) 
[8691] ( v0 = 4 ; move ua , ua / v0 ; move v0 , 4 ) 
[8692] loop 0 , 3 , move 3 + v0 , v0 / 2 
[8693] ( move 3 , ua ; move 3 , ua * ua ) 
[8694] loop 0 , 6 , move 3 / v0 , ul - 3 
[8695] ( loop 0 , 5 , move v0 , v0 ; move ua - 2 , v0 ) 
[8696] ( move ua , ul ; ( move ua + ul , 4 - ul ; move ua , 3 ) ) 
[8697] ( move ua , ua * ua ; move ua , 0 - 3 ) 
[8698] ( move 3 , ul / 3 ; move ua + ul , ul ) 
[8699] loop 0 , 3 , move 4 + v0 , v0 + 2 
[8700] ( v0 = ua + 3 ; move 2 - v0 , ua ; move v0 , ul ) 
[8701] ( move 4 , 0 ; move ul / 2 , 3 ; move ua - ul , ul ) 
[8702] loop 0 , 2 , ( move v0 - ua , v0 ; move ua + ul , v0 ) 
[8703] ( move ul , ua * ua ; move ua , ul ; move ua , ul + ul ) 
[8704] ( move 4 , 4 + ul ; move ua + ul , ul ) 
[8705] ( ( move 3 , ul ; move ul , ua ; move ua , 4 ) ; move ul , ul ) 
[8706] ( move ua , ul - ua ; loop 0 , 6 , move ua - v0 , 3 ) 
[8707] ( loop 0 , 9 , v1 = v0 ; loop 2 , 7 , move ua , v0 ) 
[8708] ( move ua , 4 + 2 ; move ul , 4 ; move ua , ua ) 
[8709] ( move ua + ul , 0 - 2 ; move ua , 4 ) 
[8710] loop 0 , 2 , ( move 4 , v0 ; move ul , 2 ) 
[8711] ( move 4 * 2 , 3 - ua ; move ua , ul + ul ) 
[8712] ( move 3 , ul ; move ua , ul ; move 4 , ul ) 
[8713] ( loop 0 , 6 , move v0 , ua - ul ; move v0 , v0 ) 
[8714] ( move 4 + 4 , ua ; ( v0 = ua ; move 2 + v0 , 4 ) ) 
[8715] loop 0 , 3 , ( move ul , ul ; move ul - ua , ua * 2 ) 
[8716] ( move ul - ua , ul ; v0 = ua - 2 ; move v0 , v0 ) 
[8717] ( move ul - ua , 3 / ua ; move ua , ul ) 
[8718] ( move 3 + ul , 0 ; move ul , ul ; move ul - ua , ua ) 
[8719] ( move ul - ua , 2 - ua ; move ua , ul ; move ul , ul ) 
[8720] ( move ul - 4 , ua ; move 4 , ul ; move 2 , ua * ua ) 
[8721] ( move ul - ua , ul / ua ; move ua + 3 , ua + ul ) 
[8722] ( move ua , ul ; loop 0 , 3 , move ul + v0 , ul ) 
[8723] ( move ul , ul ; loop 0 , 4 , move v0 , ul / v0 ) 
[8724] loop 0 , 2 , move v0 + ua , ua - 4 
[8725] loop 0 , 7 , move 2 - v0 , ul / 3 
[8726] ( move ua + 2 , 4 ; move ua + ul , ul + ul ) 
[8727] loop 0 , 3 , ( move ua , v0 ; move v0 + v0 , 2 ) 
[8728] ( move ua , ua ; move ul , 4 ; move ua , 3 + 3 ) 
[8729] ( ( v0 = 4 ; move ua , ua / v0 ) ; move v0 , 3 ) 
[8730] ( loop 0 , 3 , move 3 + ul , 2 ; move v0 , ul ) 
[8731] ( ( move 2 , ul ; move 4 , ul ) ; move ua , ul ) 
[8732] ( move ua - ul , ua - ul ; loop 0 , 6 , move ul - ua , v0 ) 
[8733] ( move ua , ul ; ( move 2 , ul ; move ua + ul , 3 ) ) 
[8734] ( move ul , 4 / 3 ; loop 0 , 3 , move 3 , ul ) 
[8735] ( loop 0 , 6 , move v0 , 3 ; move ul - v0 , v0 ) 
[8736] ( move ul - ua , ua ; loop 0 , 3 , move v0 , v0 / ua ) 
[8737] loop 0 , 6 , move 4 , ua - 2 
[8738] ( loop 0 , 5 , move ul + v0 , 2 - ua ; move ul , 0 ) 
[8739] loop 0 , 3 , ( v1 = 2 ; move ua , v1 ; move ua , ul ) 
[8740] ( move 3 , 0 ; move ua + ul , ul ; move ul , ul ) 
[8741] loop 0 , 6 , move v0 - ul , 3 / 4 
[8742] ( move 2 , ul + ul ; move ua + 2 , 2 ) 
[8743] ( move ua , ul ; move 4 , 2 ; move ul - 2 , 3 - ul ) 
[8744] ( move 0 - 2 , ua * ua ; loop 0 , 3 , move v0 , v0 ) 
[8745] ( move ua , 4 ; ( move 3 , ua ; move 4 , ua * ua ) ) 
[8746] loop 0 , 5 , move ul - v0 , v0 / ua 
[8747] ( v0 = 4 + ul ; loop 1 , 3 , move v0 , v0 ) 
[8748] ( loop 1 , 2 , move ua + 2 , 3 - v1 ; move v1 , v1 ) 
[8749] ( v0 = 4 ; move ua , v0 * 3 ; move v0 , v0 ) 
[8750] ( move ua , ua ; loop 0 , 3 , move 3 , ul ) 
[8751] ( loop 0 , 6 , move v0 , ua / v0 ; move ua - v0 , ul ) 
[8752] ( move ul - 4 , 3 + ul ; move 2 - ua , 2 ) 
[8753] ( loop 0 , 3 , move ul , v0 ; move v0 - ua , 2 ) 
[8754] ( move 4 , ua - 4 ; move 2 , ul ) 
[8755] ( move ua , ua * ua ; move 4 , ua * ua ) 
[8756] ( move ua , ul ; loop 0 , 9 , v1 = 0 ; move v0 , v0 ) 
[8757] ( loop 0 , 6 , move v0 , 4 ; move v0 , 4 ) 
[8758] loop 0 , 7 , move v0 - 2 , 3 / v0 
[8759] loop 0 , 5 , move ua - 4 , v0 * 2 
[8760] ( move 3 , 3 * 2 ; move ua - ul , ul ) 
[8761] ( move ua , 3 + ul ; loop 0 , 4 , move ul , 3 + v0 ) 
[8762] ( move ua , 0 ; move 2 , ul ; move ua , 2 ) 
[8763] ( v0 = ua - 3 ; loop 1 , 7 , move v0 , v0 * ua ) 
[8764] ( move ul - ua , ul / ua ; move 3 , 0 - 4 ) 
[8765] ( move 3 , 0 ; move 4 , ua - 4 ) 
[8766] ( ( move ul , ul + ul ; move 2 , ul ) ; move ul - 4 , ul ) 
[8767] ( loop 0 , 4 , move v0 , ul ; move v0 + ul , v0 ) 
[8768] ( move ul , ua ; ( move ua + 4 , ul ; move ua , 4 ) ) 
[8769] loop 0 , 2 , loop 1 , 3 , move 3 / v1 , v0 + v1 
[8770] ( move 2 - ua , ua ; move ua + 3 , 2 ) 
[8771] ( move ua + ul , ua ; move ul - ua , ua * ua ; v0 = 0 ) 
[8772] ( move ua + 3 , ul / 3 ; move ua , 4 - ul ) 
[8773] ( move ul , ul ; move ua , 2 / ua ) 
[8774] ( move ua / 4 , 3 / ua ; move ua , ul ) 
[8775] loop 0 , 5 , move v0 - 3 , ua - v0 
[8776] ( move ul , ul - 4 ; move 2 , ul ; move ua , 3 + 2 ) 
[8777] loop 0 , 4 , move ua / v0 , 3 - v0 
[8778] loop 0 , 2 , move ul - ua , 3 / 4 
[8779] ( move ua , 3 ; move 4 + ul , ua / 4 ; v0 = ua ) 
[8780] ( v0 = 3 ; move ua , v0 * 3 ; move ua , v0 - ul ) 
[8781] ( ( move ua , ul ; move ul - ua , ua ) ; move 3 , 4 ) 
[8782] ( move ul , 3 * 2 ; move ua + 3 , ul ) 
[8783] ( move ua + ul , ua - ul ; v0 = ua ; move v0 + ul , 4 ) 
[8784] loop 0 , 6 , move ua / 2 , v0 / 2 
[8785] ( move 4 , 4 / ua ; move 0 , ul + ul ; move ua , 0 ) 
[8786] ( move ul , 2 ; ( move ua , ul ; move 4 , ul - 3 ) ) 
[8787] ( move ua , 0 ; move 4 / ua , ul ; move ua , ul + ul ) 
[8788] ( move 4 , ua - 3 ; move ua / 4 , ul ) 
[8789] ( loop 0 , 6 , move ul , v0 ; move v0 - ul , 0 ) 
[8790] loop 0 , 6 , move ul - 4 , 4 
[8791] ( move 3 , 2 ; move ul , ul ; move 4 , 4 - ul ) 
[8792] ( move ul , ul ; move ua + ul , ua / 4 ) 
[8793] ( move 3 , ua * ua ; move ua - 3 , ul - ua ) 
[8794] ( move 2 , 2 + ul ; move ul - ua , 2 ) 
[8795] ( move ua + ul , 0 - 4 ; move ua + ul , 4 ) 
[8796] ( move 3 + ul , ul ; move ul - ua , ua - 4 ) 
[8797] ( move ua , ua + ua ; loop 0 , 5 , move v0 + ul , ul ) 
[8798] loop 0 , 7 , move ul - ua , ua * ua 
[8799] ( move ua , ua - ul ; move ua + 2 , 4 ) 
[8800] ( loop 0 , 4 , move ul , ul / ua ; move ua , 4 ) 
[8801] loop 0 , 2 , loop 1 , 3 , move v1 + ua , 3 
[8802] ( move 4 - ul , 0 ; move ul + ul , 4 ; move 3 , ul ) 
[8803] ( loop 0 , 2 , move 4 , 4 + ul ; move ul , ul ) 
[8804] loop 0 , 6 , move ul - v0 , 4 + v0 
[8805] loop 0 , 2 , ( move v0 , ul ; move ua - v0 , 2 / v0 ) 
[8806] ( move 3 , ul / ua ; move ua , ul / 4 ) 
[8807] ( move ua , ua * ua ; loop 0 , 6 , move v0 , ul ) 
[8808] loop 0 , 4 , move 3 - ua , 2 
[8809] ( move ua , 3 ; move 0 , 4 * 2 ; move ua , ul ) 
[8810] ( loop 0 , 7 , move ua , 4 * 4 ; v1 = ul ) 
[8811] ( move 2 - ua , 4 ; move 4 * 2 , 0 - ul ) 
[8812] ( v0 = ua - 4 ; loop 1 , 3 , move v0 , v1 * v0 ) 
[8813] loop 0 , 7 , move 3 - v0 , v0 + ul 
[8814] ( move 4 , 0 ; ( move 3 , 4 ; move 4 , ul ; v0 = ul ) ) 
[8815] ( move ul + ul , ua ; move 2 , ul ; move ua - ul , 2 - ul ) 
[8816] ( move ua - ul , ua + ua ; loop 0 , ul , move 3 , ua - 4 ) 
[8817] ( move 4 , 3 ; move 3 , 3 ) 
[8818] ( move 2 , 3 ; move ua , 2 ) 
[8819] ( move ua , ul - 4 ; move ua , ul ; move ul , ul ) 
[8820] loop 0 , 3 , move ua + ul , 2 + v0 
[8821] ( loop 0 , 2 , move 2 , v0 - 4 ; move ua + v0 , v0 ) 
[8822] loop 0 , 3 , ( move ua , v0 ; move 2 , ul ) 
[8823] ( move 3 , ul - 3 ; loop 0 , 2 , move 2 , ul ) 
[8824] loop 0 , 3 , move 4 + 4 , ul + v0 
[8825] ( move ua - 2 , ua ; move 4 + ul , ul ) 
[8826] ( ( move ua , 2 ; move ul , 3 ) ; move ul - ua , ua + ul ) 
[8827] ( move 4 , ua * ua ; move 4 * 2 , ul + ul ) 
[8828] ( move ua , ua / 4 ; loop 0 , 3 , move v0 , ul - v0 ) 
[8829] ( move 0 - ua , ul ; move ul , 4 ) 
[8830] ( move 2 , ul / ua ; move ua , ua - 4 ) 
[8831] ( loop 0 , 2 , move ul - ua , ul - 3 ; move ul / ua , ul ) 
[8832] ( move ul - ua , ua ; move ua + ul , 4 / ua ) 
[8833] loop 0 , 3 , ( move ul , ua + 3 ; move 3 , v0 ) 
[8834] ( move ua - ul , ua * ua ; move ul - ua , 2 ) 
[8835] ( move 4 + ul , 0 ; loop 0 , 4 , move v0 + v0 , v0 ) 
[8836] ( move ua / 3 , ul / 3 ; move ua , 4 / ua ; move ul , 0 ) 
[8837] loop 0 , 4 , move v0 - 4 , 2 
[8838] ( move ua , ua + ua ; move 0 , ul - ua ; move ua , ul / ua ) 
[8839] ( v0 = ua - ul ; loop 1 , 2 , move v0 , v0 * v0 ) 
[8840] ( move ua , ul - 2 ; move 0 - ua , ul ) 
[8841] loop 0 , 2 , ( move ul , v0 * v0 ; move 4 , ua + v0 ) 
[8842] ( move 0 - ua , ul - 4 ; move 3 , ul ) 
[8843] ( loop 0 , 6 , move v0 , v0 ; move v0 / 4 , v0 ) 
[8844] ( move ul + ul , 4 * 2 ; loop 0 , 5 , move v0 , ul ) 
[8845] ( ( loop 0 , 3 , move ul , ul ; move ua , ul ) ; move ul , ul ) 
[8846] ( move ua , ul - 2 ; move ua + ul , 4 ) 
[8847] ( move ua , ul ; v0 = ul ; loop 1 , 5 , move ua , 2 ) 
[8848] loop 0 , 2 , loop 1 , 2 , move 3 + v0 , ul 
[8849] ( move ua / 3 , ul ; move ua + 2 , ua * ua ) 
[8850] loop 0 , 5 , move 4 - ua , ua - v0 
[8851] ( move ua , ul ; move 2 , ul ; move ua , ua * ua ) 
[8852] ( move ua , ul ; loop 0 , 4 , move v0 * 2 , v0 ) 
[8853] ( move ua , ua ; move 3 - ua , ua + 4 ; move 3 - 4 , 2 ) 
[8854] ( loop 0 , 6 , move v0 , ua + 3 ; move v0 + v0 , 3 ) 
[8855] ( move ua - ul , ul ; move 3 , ul ; move ua , 2 ) 
[8856] ( move 3 - ua , ul ; move 4 + ul , ul ) 
[8857] loop 0 , 3 , loop 1 , 2 , move 3 - v0 , ua + v1 
[8858] ( move 4 + 3 , ua ; move 3 , ul ; move ua , ul ) 
[8859] ( move ul , ua ; v0 = 4 / ua ; move ua / v0 , v0 ) 
[8860] loop 0 , 7 , move 3 , ua * ua 
[8861] ( v0 = 2 / ua ; move v0 - ua , v0 ; move ua , ul ) 
[8862] loop 0 , 3 , ( move v0 , v0 ; move v0 , ua - v0 ) 
[8863] ( move ul , 4 + ul ; move ua , ul ; move ua , 4 + ul ) 
[8864] ( move 4 / ua , ul ; move ua , 4 ; move ua , ul ) 
[8865] ( move ul , 4 ; move ul , ul ; move 0 - ua , 2 ) 
[8866] ( loop 0 , 6 , move 3 , ul ; move ua , v0 + v0 ) 
[8867] loop 0 , 6 , ( v1 = 2 - v0 ; move v1 , v1 + 2 ) 
[8868] ( move 3 * 3 , 0 ; move ua , 4 ) 
[8869] ( move 3 , ua ; move 4 + 2 , ul / 4 ) 
[8870] loop 0 , 4 , move ul - ua , 4 * 2 
[8871] loop 0 , 3 , ( move 3 + v0 , v0 ; move v0 , ul ) 
[8872] ( loop 0 , 5 , move v0 , ua - 4 ; move ua , v0 ) 
[8873] loop 0 , 6 , move 3 , 4 / 3 
[8874] loop 0 , 3 , ( move ua , v0 ; move v0 - ul , v0 ) 
[8875] ( ( move 4 , ul ; move ua , 4 ) ; move ua , 3 ; move 2 , ul ) 
[8876] loop 0 , 6 , move 2 - v0 , ul - 2 
[8877] ( loop 0 , 5 , move v0 , 3 + v0 ; move ul , v0 ) 
[8878] ( move ua - ul , 3 ; move ul , ul ; move 3 , 3 ) 
[8879] ( move ua , ua * 2 ; move ua + ul , 4 / 3 ; move ul , ul ) 
[8880] ( move 3 , 2 + ul ; loop 0 , 2 , move 2 , ul ) 
[8881] loop 0 , 3 , ( move 4 , v0 ; v1 = ul ; move ul , v1 ) 
[8882] ( move ua + 3 , ua + ul ; loop 0 , 5 , move v0 , 3 - 4 ) 
[8883] ( loop 0 , 6 , move 2 - v0 , ua ; move ua , v0 ) 
[8884] loop 0 , 7 , ( v1 = ul + v0 ; move 4 - ua , v1 ) 
[8885] ( ( move ul , 2 ; move ul , ul / 2 ) ; move 4 , ua * ua ) 
[8886] loop 0 , 6 , move v0 - ul , v0 - 2 
[8887] ( loop 0 , 6 , move ua , 3 ; move ul , v0 ) 
[8888] ( move ua - ul , 3 ; loop 0 , 5 , move v0 , v0 + ul ) 
[8889] loop 0 , 7 , move ul + v0 , ua / 4 
[8890] ( loop 0 , 6 , move 4 , 2 ; move ul , ua ) 
[8891] ( move 3 - ua , 3 + ul ; loop 0 , 6 , move ul , v0 ) 
[8892] ( loop 0 , 3 , move v0 , ul ; move 4 , v0 + 3 ) 
[8893] ( ( move ua , 4 * 3 ; move ul , ul ) ; move ua + ul , ul ) 
[8894] ( move 4 , ua ; move 2 - ua , ua - ul ; move 3 , ul + ul ) 
[8895] ( move 2 , ua - ul ; loop 0 , 4 , move ul - v0 , ul ) 
[8896] loop 0 , 6 , move v0 / 2 , ua - ul 
[8897] ( move ua , ul ; loop 0 , 3 , move v0 , 3 - v0 ) 
[8898] loop 0 , 4 , move ul + v0 , 0 - 2 
[8899] ( loop 0 , 5 , move ul , v0 ; move ua , v0 / ua ) 
[8900] loop 0 , 2 , ( move 2 - v0 , v0 ; move ua , ua + v0 ) 
[8901] ( move 4 , 3 ; move ua , 4 + 4 ; move ul , ul ) 
[8902] ( move ul - ua , ua - 3 ; move ua , 2 ) 
[8903] loop 0 , 3 , ( move v0 / 3 , ul ; move 2 + v0 , v0 ) 
[8904] loop 0 , 3 , ( move v0 - ua , v0 * 2 ; move v0 , ul ) 
[8905] ( move ua + ul , 0 - 3 ; move ua , 2 ) 
[8906] ( loop 0 , 4 , move v0 , v0 ; move v0 , v0 / ua ) 
[8907] ( move ua , ua - ul ; move ul , 3 ; move ua , ul ) 
[8908] loop 0 , 3 , ( move v0 , v0 ; move 2 , 3 + ul ) 
[8909] ( move ua + ul , ul / 3 ; move 3 + ul , 2 ) 
[8910] loop 0 , 3 , ( move 3 * v0 , v0 ; move ua , v0 ) 
[8911] loop 0 , 6 , move v0 - 3 , v0 / ua 
[8912] ( move 4 , ul ; loop 0 , 3 , move ua , v0 - 4 ) 
[8913] ( loop 0 , 6 , move ul , v0 ; move v0 , v0 * v0 ) 
[8914] ( move ul - ua , ul / ua ; loop 0 , 5 , move v0 , 3 ) 
[8915] ( ( move ul , ul ; move ua , ul / 4 ) ; move 4 , 4 ) 
[8916] loop 0 , 3 , ( move v0 , 2 + 2 ; move 4 , ul ) 
[8917] ( loop 0 , 6 , move v0 - 2 , ul ; move v0 , ul ) 
[8918] ( move ul , 0 ; loop 0 , 5 , move ul , v0 ) 
[8919] ( move 4 + ul , ua * 4 ; loop 0 , 5 , move ul , ul / v0 ) 
[8920] ( ( move 4 , 2 ; move 2 , ul - ua ) ; move 0 - 3 , 3 ) 
[8921] ( loop 0 , 6 , move ul , ul / ua ; move ua , ua - v0 ) 
[8922] ( move 3 , 0 ; move ul , ul ; move 4 * 2 , ul ) 
[8923] ( v0 = ua ; loop 1 , 7 , move v0 / 4 , ua - v1 ) 
[8924] loop 0 , 3 , ( move v0 , ua ; move 2 , 2 ) 
[8925] ( move ua , ua ; move 2 + ul , ua / 3 ; move 4 + ul , ul ) 
[8926] loop 0 , 2 , move ua - v0 , ul / 2 
[8927] ( move 2 , ua ; loop 0 , 3 , move 3 , v0 ) 
[8928] ( ( move ul + ul , ua ; move ul , 4 ) ; move 4 , ul ) 
[8929] ( move ul , ua + ul ; loop 0 , 6 , move 3 , 3 * v0 ) 
[8930] ( loop 0 , 6 , move v0 , v0 - ul ; move ua , v0 ) 
[8931] ( move 4 , ua ; move ua , 4 ; move 3 , ul ) 
[8932] ( move ua , 0 - 2 ; loop 0 , 3 , move v0 * v0 , v0 ) 
[8933] ( move ul - ua , ua ; move ua , 4 + ul ; move ul , ua + ul ) 
[8934] ( move ua , 4 + ul ; move 2 + ul , 3 + 2 ) 
[8935] loop 0 , 3 , move ua - ul , 4 / v0 
[8936] ( move 3 , ua ; loop 0 , 4 , move 3 , ul ) 
[8937] ( move ua , 2 ; move ul + ul , ul ; move 4 , 2 ) 
[8938] loop 0 , 3 , ( move v0 - ua , 3 ; move v0 , 3 + 3 ) 
[8939] loop 0 , 5 , move 3 , 3 / v0 
[8940] ( move 2 , 2 ; loop 0 , 3 , move ul + v0 , ul ) 
[8941] ( move ul , ul ; loop 0 , 5 , move v0 , v0 + v0 ) 
[8942] ( loop 0 , 3 , move ul - ua , v0 ; move ul , v0 ) 
[8943] ( move 4 , ua - 3 ; move 2 , ul ) 
[8944] ( move ua , ua ; move ul - ua , ua ; move ua - 4 , 2 ) 
[8945] ( move 3 , ul ; move ua + 2 , 2 ) 
[8946] ( move 3 , ul ; move ua + ul , ua * ua ) 
[8947] ( move ua , ul ; loop 0 , 3 , move 4 , 2 ) 
[8948] ( move ua + ul , 0 ; move ua , 4 ; move ul , ua * ua ) 
[8949] ( move ua , ua ; move ua , 4 * 4 ; move ul - ua , ul ) 
[8950] ( move 0 - ul , ul ; loop 0 , 4 , move ua - 3 , v0 - ua ) 
[8951] loop 0 , 3 , move v0 - 4 , 4 / ua 
[8952] loop 0 , 5 , move 4 - ua , 3 - v0 
[8953] ( move 3 , 3 / ua ; move 4 , 4 ) 
[8954] ( move ua , ul ; loop 0 , 3 , move v0 + v0 , ul ) 
[8955] loop 0 , 3 , move v0 - ua , v0 - 3 
[8956] loop 0 , 3 , ( move v0 - ul , ul ; move ua , ul ) 
[8957] ( move 4 , 3 ; move 3 , ua - ul ) 
[8958] ( move ua + 2 , ul / ua ; move 2 , 4 ) 
[8959] ( move 4 , 4 - ul ; loop 0 , 6 , move ul , v0 ) 
[8960] ( move 3 , ua ; move ua - 3 , ua * ua ) 
[8961] ( move 2 / ua , ua * ua ; move ua , ul ) 
[8962] ( loop 0 , 5 , move v0 , v0 * 3 ; move ua , 4 ) 
[8963] ( move ul , ul - 4 ; loop 0 , 6 , move v0 , v0 + v0 ) 
[8964] ( move 2 , ul ; ( move ua , ul + ul ; move ua - 2 , 4 ) ) 
[8965] ( loop 0 , 5 , move 2 , v0 ; move ul + v0 , v0 ) 
[8966] ( move 3 , ul - 4 ; move ua - ul , ul ) 
[8967] ( move ua , ua + ul ; loop 0 , 6 , move v0 , 4 + v0 ) 
[8968] ( loop 0 , 5 , move v0 , 4 ; move v0 , 2 + v0 ) 
[8969] ( move 3 , ua / 4 ; move 4 , ul ) 
[8970] loop 0 , 4 , move 4 , v0 - 3 
[8971] loop 0 , 3 , ( move 4 , 3 * v0 ; move ul , v0 ) 
[8972] loop 0 , 3 , ( loop 1 , ul , move 4 , ul ; move v0 , ul ) 
[8973] ( move 3 , 0 - ul ; loop 0 , 5 , move v0 , v0 ) 
[8974] ( v0 = ua / 2 ; loop 1 , 5 , move v1 , v1 / v0 ) 
[8975] ( move ua + ul , ua * ua ; move 3 , 4 ; v0 = ul ) 
[8976] loop 0 , 3 , ( move v0 + v0 , ua * v0 ; move ul , 2 ) 
[8977] loop 0 , 6 , move 4 / 3 , v0 + v0 
[8978] ( move 3 + 2 , 4 ; move ul - 3 , ul ) 
[8979] ( loop 0 , 4 , move 3 + ul , v0 ; move 0 - 4 , 2 ) 
[8980] loop 0 , 3 , move v0 - 4 , v0 / ua 
[8981] ( move ua , ua ; move ua - 2 , 2 ; move ua , ul ) 
[8982] loop 0 , 3 , ( move v0 , v0 ; move ua + v0 , ul + ul ) 
[8983] ( move ul - ua , 4 + ul ; move 3 , ul ) 
[8984] ( move ua + ul , ua - ul ; move 3 , 4 + ul ) 
[8985] ( move 4 , ul ; move ua , 2 ; move 3 , ul ) 
[8986] ( move 0 , 2 - 4 ; loop 0 , 5 , move ul + ul , v0 ) 
[8987] ( move ul , 3 ; move ua + 3 , ul ) 
[8988] loop 0 , 3 , loop 1 , 2 , move v0 * 3 , v0 
[8989] ( move 2 , ua - ul ; loop 0 , 4 , move 4 , ul ) 
[8990] ( ( move ua , ul ; move ua + ul , 3 ) ; move ul , ul ) 
[8991] loop 0 , 3 , ( move v0 + v0 , ul ; move v0 , v0 ) 
[8992] ( loop 0 , 6 , move ua / 3 , v0 ; move v0 / 2 , ul ) 
[8993] ( move ua + 3 , ul + ul ; move 3 , ua / 4 ) 
[8994] loop 0 , 7 , move 2 - v0 , 4 / v0 
[8995] loop 0 , 2 , ( move v0 + ul , v0 ; move v0 + 2 , ul ) 
[8996] ( move 4 , ua ; loop 1 , 4 , move ul + ul , 4 * v1 ) 
[8997] ( move ul - ua , ul ; move 3 , 2 / ua ) 
[8998] loop 0 , 3 , ( move v0 , v0 ; move 2 - ua , 2 / ua ) 
[8999] ( loop 0 , 4 , move ul , v0 + v0 ; move 2 , ul ) 
[9000] ( move ul , 4 ; move ua , 3 * 2 ) 
[9001] ( loop 0 , 3 , move ua - ul , v0 + ul ; move ul , ul ) 
[9002] ( move 4 , 2 ; ( move ul , ul ; move ua , ul ) ) 
[9003] ( move 2 , ua + 2 ; move 3 , ul ; move ua , ua * ua ) 
[9004] ( move ua + ul , ua + 3 ; move 4 , ua * ua ) 
[9005] ( move 3 , ua + ul ; loop 0 , 5 , move v0 - 4 , v0 ) 
[9006] ( move 2 + ul , 0 - 4 ; loop 0 , 5 , move ul , ul ) 
[9007] ( move 4 , 3 / ua ; move ua - ul , ua + ul ) 
[9008] ( loop 0 , 6 , move ul , v0 * 3 ; move ua , v0 ) 
[9009] ( move 2 , ua * ua ; move 3 , ul ) 
[9010] loop 0 , 3 , ( move 4 , v0 ; move ul , 2 * v0 ) 
[9011] ( loop 0 , 5 , move v0 , 4 ; move ua / v0 , ua ) 
[9012] loop 0 , 5 , move v0 - 4 , v0 / 3 
[9013] ( move 3 , ua ; move 4 , ua - ul ; move ul , ul ) 
[9014] ( loop 0 , 2 , move ua - v0 , 4 ; move v0 , v0 ) 
[9015] loop 0 , 5 , loop 1 , ul , move v1 - v0 , ul 
[9016] ( move ua , ua - ul ; move ua + 2 , 3 * 3 ; v0 = 0 ) 
[9017] loop 0 , 3 , ( move v0 , ul ; move v0 , v0 / 4 ) 
[9018] ( move 4 , 0 - 3 ; move ul , ul + ul ; move ua , ul / ua ) 
[9019] loop 0 , 3 , ( move v0 * v0 , ul ; move v0 , ul ) 
[9020] ( move ua / 4 , 3 ; move ua - ul , ul ) 
[9021] ( move ua , 3 - ua ; loop 0 , 4 , move 2 + v0 , ul ) 
[9022] ( loop 0 , 5 , move v0 , v0 ; move ua - v0 , ul ) 
[9023] ( move 4 , 2 ; move ua , 2 / ua ) 
[9024] ( loop 0 , 6 , move ul , ul ; move 4 , 2 ) 
[9025] ( move 3 + ul , ul + ul ; move 0 - ua , ua + 4 ) 
[9026] ( move ua , 2 ; loop 0 , 2 , move ua , 3 ) 
[9027] ( move ua , ul - ua ; move 0 , 3 ; move 4 , 4 * 3 ) 
[9028] ( move ua , 0 - ul ; loop 0 , 6 , move ul , v0 ) 
[9029] ( move ul , ul ; loop 0 , 4 , move ua - 2 , v0 ) 
[9030] ( move ua , ul ; move 2 , ul / ua ; move ua + ul , 3 ) 
[9031] loop 0 , 2 , loop 1 , ul , move ul - ua , 3 / ua 
[9032] ( move ua + ul , 4 ; loop 0 , 3 , move ul , ul ) 
[9033] ( move 4 , 2 ; loop 0 , 5 , move v0 - ua , 4 ) 
[9034] ( loop 0 , 4 , move 4 , 4 / 3 ; loop 1 , 3 , move ul , ul ) 
[9035] ( ( move 3 , ul ; move ul , 3 ) ; move ua , 2 ) 
[9036] loop 0 , 7 , move 4 - v0 , v0 - ul 
[9037] loop 0 , 2 , loop 1 , 3 , move 2 , ul / v1 
[9038] ( loop 0 , 3 , move 3 , v0 ; move ua , 4 ) 
[9039] ( loop 0 , 5 , move v0 , v0 + ul ; move 0 - 2 , v0 ) 
[9040] ( loop 0 , 5 , move 2 , 2 ; move 2 , ul ) 
[9041] ( move 4 / ua , ua + 2 ; move ua + 3 , 3 / 4 ) 
[9042] ( move ul , 2 ; loop 0 , 6 , move 4 , v0 ) 
[9043] ( move 3 - ua , ul ; loop 0 , 5 , move ul , v0 ) 
[9044] loop 0 , 3 , ( move ul , v0 ; move ua - 2 , ul ) 
[9045] loop 0 , 7 , move v0 / 2 , v0 + 3 
[9046] ( v0 = ua - 2 ; move v0 , ul / v0 ; move 4 , v0 ) 
[9047] ( move ua , ua + 4 ; move ul , ul ; move ul - ua , ua ) 
[9048] ( move 2 , 3 / ua ; move 3 , 2 ) 
[9049] ( move 4 , ua * ua ; loop 0 , 3 , move v0 * 3 , v0 ) 
[9050] loop 0 , 3 , ( v1 = ua / v0 ; move v1 , v1 * ua ) 
[9051] ( move 4 , 3 + 2 ; v0 = 4 ; move v0 + 4 , ul ) 
[9052] loop 0 , 4 , move 2 , 4 / 3 
[9053] ( move ua , ua + 4 ; loop 0 , 6 , move v0 , 3 ) 
[9054] ( move ul , ul / 4 ; loop 0 , 3 , move 3 , v0 - 2 ) 
[9055] ( move 3 , ua ; move ua , 4 * 2 ) 
[9056] ( move ul , ul + ul ; loop 0 , 4 , move 2 , ul ) 
[9057] ( move 3 - ua , ua + 4 ; move 0 , 3 ; move ua + ul , 3 ) 
[9058] ( move ul , 4 ; move ua , 2 / ua ) 
[9059] ( loop 0 , 4 , move v0 , 2 ; move 3 , 2 * v0 ) 
[9060] ( move ua , ua - 4 ; loop 0 , 6 , move 2 , v0 ) 
[9061] ( loop 0 , 6 , move v0 - ua , 3 ; move v0 - ul , v0 ) 
[9062] ( move ua - ul , 3 ; move ul - 4 , ul ) 
[9063] ( move ul - ua , ul ; move ul - ua , 4 ) 
[9064] ( move ua + ul , 2 ; move 0 - ua , ua + ul ) 
[9065] ( move ua , ua / 2 ; move ul - 3 , ua / 4 ) 
[9066] ( move 3 , ua ; move ul / 2 , ul ; move ua , 4 / ua ) 
[9067] ( move ul , ul ; ( move ul , ul / 3 ; move ua , 4 ) ) 
[9068] loop 0 , 6 , move ul - ua , ua - v0 
[9069] ( move ua - ul , ua ; move ua + ul , ua * ua ) 
[9070] loop 0 , 5 , move v0 - 2 , ua - v0 
[9071] ( move ul , ul ; move ua , ua ; move ua - ul , ua * ua ) 
[9072] loop 0 , 3 , ( move ul + ul , ul ; move v0 , v0 * v0 ) 
[9073] ( loop 0 , 4 , move 3 , ul ; move ul , ul / v0 ) 
[9074] ( move 4 , 4 + 2 ; loop 0 , 2 , move 3 - ul , 4 ) 
[9075] ( loop 0 , 6 , move ul , ua - v0 ; move v0 , v0 ) 
[9076] ( loop 0 , 6 , move ul + ul , v0 ; move v0 , 3 ) 
[9077] loop 0 , 3 , ( move v0 , v0 + v0 ; move 3 , 3 ) 
[9078] loop 0 , 5 , move 4 + 3 , 4 
[9079] ( move ua + ul , ul ; move 2 , ua - 2 ) 
[9080] ( move ul + ul , 4 / ua ; move ua , ua ; move 0 - 2 , 2 ) 
[9081] loop 0 , 4 , move v0 - 4 , 2 / ua 
[9082] ( loop 0 , 6 , move ul + ul , v0 ; move ul , ua ) 
[9083] loop 0 , 2 , ( move v0 - 2 , 0 ; move v0 + v0 , ul ) 
[9084] loop 0 , ul , loop 1 , 4 , move v0 - ua , ua + 4 
[9085] ( move 3 , ul ; move 4 * 2 , 4 ; move ua , 2 ) 
[9086] ( move ua , ua * ua ; loop 0 , 4 , move 4 , ul ) 
[9087] ( ( v0 = 4 ; move v0 , v0 ) ; move 3 , ua / v0 ) 
[9088] ( move ul - ua , ua - 3 ; move ua , ul ; move 0 , 0 ) 
[9089] ( move 4 , ul ; ( move 0 , 4 * 4 ; move ua , ua ) ) 
[9090] ( move 3 + ul , 3 ; move ul - ua , 4 * 2 ) 
[9091] loop 0 , 6 , ( v1 = 2 + v0 ; move 2 , v1 / v0 ) 
[9092] ( move ua , 4 + 4 ; move ul , ul ) 
[9093] ( move 3 - ua , ul ; move ua , ua * ua ) 
[9094] loop 0 , 3 , ( move ul , ul + v0 ; move v0 + v0 , 4 ) 
[9095] ( move ua , ul / 3 ; move ua , 2 ) 
[9096] ( v0 = 2 / ua ; loop 1 , 5 , move v1 , ul - v0 ) 
[9097] ( move 2 - ua , 0 ; move ua , 0 - 4 ) 
[9098] ( move ua , ul ; move ul - ua , ul / 4 ) 
[9099] loop 0 , 7 , move v0 , 3 / 2 
[9100] ( move 4 , 4 ; move 3 , 3 - 4 ) 
[9101] ( move 2 - ua , ua ; v0 = ul ; loop 1 , 6 , move ul , ul ) 
[9102] ( move 4 + 4 , ul ; loop 0 , 4 , move v0 , ul ) 
[9103] ( loop 0 , 6 , move v0 , ul ; move 4 , ul - v0 ) 
[9104] ( move ua , 3 + ul ; loop 0 , 6 , move ul , v0 * 3 ) 
[9105] ( move ul , ul / ua ; move ul , ul ; move ua , ul ) 
[9106] ( move ul - ua , 4 ; move ul + ul , 4 ) 
[9107] ( move ua , ua ; ( loop 0 , 2 , move ua , 4 ; v1 = ua ) ) 
[9108] ( move 3 , ul ; loop 0 , 5 , move 4 - ul , 2 / v0 ) 
[9109] loop 0 , 6 , move v0 + ul , v0 / 2 
[9110] ( ( move ua , ul ; move ul - 3 , 2 ) ; move ua , ua + ul ) 
[9111] loop 0 , 3 , move v0 - ua , 3 / v0 
[9112] ( move ua , 4 ; loop 0 , 5 , move ul - v0 , v0 ) 
[9113] ( move ul , ul ; move 3 , 0 - ul ) 
[9114] ( move 3 , ul ; loop 0 , 5 , move v0 , v0 - 4 ) 
[9115] ( ( move 3 , 4 ; move 0 - ua , ua + ul ) ; v0 = ul ) 
[9116] ( move 3 , ua ; loop 0 , 5 , move 3 , v0 ) 
[9117] ( move ua , ua - 4 ; loop 0 , 5 , move v0 , ul ) 
[9118] ( move 0 - 4 , 4 - ul ; move ul - ua , ul ) 
[9119] ( loop 0 , 9 , v1 = ul ; loop 2 , 5 , move v2 , v0 ) 
[9120] ( loop 0 , 4 , move v0 , v0 ; move ul - ua , 4 ) 
[9121] ( loop 0 , 6 , move v0 , 2 ; move ul , 4 ) 
[9122] ( move 3 , ua * ua ; loop 0 , 4 , move ua , 3 ) 
[9123] loop 0 , 3 , move ul - ua , ul - 3 
[9124] ( move 3 , 2 ; move ua , 2 / ua ) 
[9125] loop 0 , 3 , move 4 - v0 , 3 - v0 
[9126] loop 0 , 7 , move v0 - 4 , 3 * v0 
[9127] ( loop 0 , 6 , move 3 , v0 * v0 ; move v0 , v0 ) 
[9128] ( move ua + ul , ul + ul ; move 4 , 2 - ua ) 
[9129] ( move 4 , 3 + ul ; loop 0 , 6 , move 2 , v0 ) 
[9130] loop 0 , 2 , loop 1 , 3 , move v1 + v1 , 3 - 4 
[9131] ( move ua , ua + 2 ; move 4 , ul ; move 4 / ua , ua ) 
[9132] ( move ua , ul ; move ua + ul , ua * ua ; move ua , 2 ) 
[9133] ( move ua , ua / 4 ; loop 0 , 6 , move ul , v0 ) 
[9134] ( move ua + ul , 3 ; loop 0 , 5 , move v0 , 4 ) 
[9135] ( move 2 , 4 / 3 ; move 4 , ul ) 
[9136] ( loop 0 , 6 , move v0 , ua - v0 ; move 2 , v0 ) 
[9137] ( move ul , 2 ; loop 0 , 3 , move v0 , 4 ) 
[9138] loop 0 , 3 , ( move v0 , 2 ; move ul , 4 + ul ) 
[9139] ( move ul , 2 ; ( move ua , 2 - 3 ; move 4 + 2 , 2 ) ) 
[9140] ( move 4 + 3 , ua * ua ; move 2 + ul , ul ) 
[9141] ( move ul - ua , 3 ; move 3 , 4 ) 
[9142] ( move ul - 3 , ul / ua ; loop 0 , 5 , move v0 , 4 ) 
[9143] ( move ua + ul , ua / 3 ; loop 0 , 5 , move v0 , 4 ) 
[9144] loop 0 , 3 , ( move v0 , ul ; move 4 , v0 ) 
[9145] loop 0 , 5 , move ul - 4 , ua * ua 
[9146] ( loop 0 , 4 , move v0 + v0 , ul ; move ua , 2 ) 
[9147] ( loop 0 , 6 , move 3 , 4 ; move 4 , v0 ) 
[9148] ( move ua , 3 + 2 ; move 2 + ul , ua * ua ) 
[9149] ( loop 0 , 6 , move ul , 3 * v0 ; move v0 , 2 ) 
[9150] loop 0 , 6 , move ua - ul , ua * ua 
[9151] ( v0 = 2 / 4 ; loop 1 , 4 , move 2 + v0 , v1 ) 
[9152] ( move ul , 4 + ul ; loop 0 , 6 , move v0 , 2 ) 
[9153] loop 0 , 4 , move v0 + v0 , v0 - 4 
[9154] ( v0 = ul ; loop 1 , 4 , move 4 , 4 ; move v1 , ua ) 
[9155] ( move ul / 4 , ua + 4 ; loop 0 , 6 , move 2 - ua , v0 ) 
[9156] ( move ua , 4 ; loop 0 , 9 , v1 = 4 ; move v0 , v1 ) 
[9157] ( move 3 , ul / 2 ; move ua , 4 ) 
[9158] ( move ua + ul , ul ; v0 = ua + 2 ; move v0 , v0 ) 
[9159] ( loop 0 , 5 , move v0 + ul , ul ; move v0 , v0 ) 
[9160] loop 0 , 6 , move 3 - v0 , v0 - ul 
[9161] loop 0 , 4 , move 4 + ul , ua - v0 
[9162] loop 0 , 3 , ( move v0 * v0 , ul ; move 2 , v0 ) 
[9163] ( move 2 , ua ; move ul - ua , 4 ) 
[9164] ( move ul + ul , ua ; loop 0 , 4 , move v0 , 2 ) 
[9165] ( move ua - ul , ul ; move ua , 4 * 4 ) 
[9166] ( move 2 - ua , ul ; ( move ul / 4 , ul ; move ua , 4 ) ) 
[9167] ( v0 = 3 ; ( move v0 , v0 / 2 ; move v0 , ul ) ) 
[9168] loop 0 , 4 , move ua - v0 , 4 - v0 
[9169] ( move 2 , 4 / ua ; move 0 - ua , ul ) 
[9170] ( loop 0 , 9 , v1 = v0 ; loop 2 , 6 , move 3 , v0 ) 
[9171] loop 0 , 5 , move v0 - ul , ul - 3 
[9172] loop 0 , 3 , ( move v0 , ua * ua ; move ua , ul ) 
[9173] ( v0 = ua - ul ; loop 1 , 7 , move v0 , v0 + v0 ) 
[9174] ( v0 = ua - ul ; move v0 , ul ; move v0 , 4 - v0 ) 
[9175] loop 0 , 6 , move 3 * 2 , ua / 3 
[9176] ( move ua , ua ; move ul + ul , ul ; move 4 , 4 ) 
[9177] ( move ua , ul / ua ; move 2 , 4 + 3 ) 
[9178] ( move 4 , ua - 3 ; ( move 3 , 4 ; move ua , ul ) ) 
[9179] ( move ul + ul , ul - ua ; move ua , ul ; move 4 , 2 ) 
[9180] loop 0 , 5 , move 2 / v0 , 2 / v0 
[9181] loop 0 , 3 , ( move v0 , 3 ; move v0 + v0 , v0 ) 
[9182] loop 0 , 3 , loop 1 , 2 , move v0 * v0 , v1 + ul 
[9183] ( move 4 , 4 ; v0 = 2 ; loop 1 , 3 , move ua , v0 ) 
[9184] ( loop 0 , 6 , move ul , v0 + v0 ; move v0 , v0 ) 
[9185] ( move 2 - ua , 0 ; move ua + ul , 2 ) 
[9186] ( loop 0 , 5 , move v0 , ul - v0 ; move ul , ul ) 
[9187] ( move 4 + ul , 0 ; move 4 , ul ; move 2 , ul ) 
[9188] ( move 2 - ua , 2 / ua ; move ua , ul - 3 ) 
[9189] loop 0 , 2 , ( v1 = ul ; move v0 , v1 ; move 4 , ul ) 
[9190] ( ( move 3 , ul ; move ua , 2 ) ; move ua , ua - 4 ) 
[9191] ( move 4 + ul , ua ; move 3 + 2 , ul ; move 3 , ua + ul ) 
[9192] ( move 3 - ua , ul ; move ua + 3 , ul ) 
[9193] loop 0 , 2 , ( move 2 , v0 + v0 ; move ua , v0 ) 
[9194] ( move ua , ua - ul ; move ul , 4 ; move ua - 4 , ul ) 
[9195] ( loop 0 , 6 , move ul - v0 , v0 + 2 ; move 4 , v0 ) 
[9196] loop 0 , 6 , move 2 - v0 , v0 + 4 
[9197] ( loop 0 , 5 , move ua - 3 , 4 * v0 ; move ul , v0 ) 
[9198] ( loop 0 , 6 , move ua , 2 ; move 4 , ul ) 
[9199] loop 0 , 2 , ( move v0 , 4 ; move 3 / v0 , ul ) 
[9200] ( move 4 , 0 ; move ua , ua / 3 ) 
[9201] ( move ua + 2 , ul ; loop 0 , 6 , move v0 , v0 ) 
[9202] loop 0 , 5 , move v0 - 3 , v0 + 2 
[9203] ( move ul , 4 ; ( move ua , ul ; move 3 , 4 / ua ) ) 
[9204] loop 0 , 3 , ( move ua - 3 , ua - ul ; v1 = ua ) 
[9205] ( move ul , 4 ; move ul , ua ; move ua - ul , ua * ua ) 
[9206] ( move ua , ua - 2 ; move ul - ua , ua * ua ; v0 = ua ) 
[9207] ( move ul , ul ; move 3 + 2 , ul ) 
[9208] ( loop 0 , 4 , move v0 , ul / 3 ; move 4 , v0 ) 
[9209] ( move 4 , ul / 4 ; move ua , 3 ) 
[9210] ( move 0 , 3 - 2 ; loop 0 , 4 , move 4 , v0 ) 
[9211] loop 0 , 3 , ( move ua , v0 ; move v0 , ul + ul ) 
[9212] ( move ua + ul , ua * ua ; move ul - ua , ul ) 
[9213] ( move ua , ua ; loop 0 , 5 , move 3 / v0 , v0 - 4 ) 
[9214] ( move 3 , 2 ; move 3 * 3 , 3 / ua ) 
[9215] ( move 2 / 4 , ua ; move ua , ul / ua ; move ua , 2 ) 
[9216] loop 0 , 3 , ( move ul , 4 ; move ul , v0 ; v1 = 3 ) 
[9217] ( loop 0 , 4 , move v0 , ua / v0 ; move ua , 3 ) 
[9218] loop 0 , 2 , loop 1 , 2 , move 4 , v1 + 3 
[9219] ( move ua / 2 , ua - ul ; move ua , ua / 4 ) 
[9220] ( move 2 , ul ; move ul - ua , ua / 4 ) 
[9221] ( move ua + ul , 2 / ua ; move 4 , ul ) 
[9222] ( v0 = 3 / 2 ; loop 1 , 5 , move 2 , v0 / v1 ) 
[9223] ( move 4 , ua * ua ; move ul - ua , ul ) 
[9224] ( loop 0 , 6 , move v0 , v0 ; move v0 , ua - 3 ) 
[9225] ( move ua , ul ; move ul / 2 , ua + ul ; move ul - ua , ua ) 
[9226] ( move 2 , ul + ul ; move 4 , ua - 2 ; move ua , ul ) 
[9227] ( move 4 + ul , ul ; move ua , 3 ; move ul + ul , ul ) 
[9228] ( move ul , 2 + ul ; loop 0 , 6 , move 2 , ul - v0 ) 
[9229] ( move ua + ul , 3 / ua ; move 4 + ul , 2 ) 
[9230] ( move ua , ua / 3 ; loop 0 , 6 , move v0 , v0 ) 
[9231] ( move 3 + 2 , ul / ua ; move 2 , ul + ul ) 
[9232] ( move ua , 3 + ul ; move 4 , ua / 3 ) 
[9233] ( move ua , ul ; move 3 , 4 ; move ul , ua + 2 ) 
[9234] ( move ua , ul ; ( move ul , 2 ; move 3 , ua ; move ul , ul ) ) 
[9235] ( move ul , 2 / 4 ; loop 0 , 5 , move ua - 2 , ua + v0 ) 
[9236] loop 0 , 2 , ( move ul , v0 ; move v0 + ua , v0 ) 
[9237] loop 0 , 3 , move 4 + v0 , v0 - 3 
[9238] ( move 2 , ul ; move 2 , 3 + ul ; move ul , ul ) 
[9239] loop 0 , 3 , ( move ul , v0 ; move v0 , 0 - ul ) 
[9240] ( loop 0 , 6 , move ua / v0 , 4 ; move v0 , v0 ) 
[9241] loop 0 , 2 , move 4 + 3 , v0 + v0 
[9242] loop 0 , 3 , ( move 2 , v0 ; move v0 , 3 ) 
[9243] ( move 4 - ul , ua ; ( move ua , 4 * 3 ; v0 = ua ) ) 
[9244] ( move ua , 3 * 3 ; move ua , ua - 4 ) 
[9245] loop 0 , 6 , move v0 + 4 , 0 - 3 
[9246] ( v0 = 4 ; move v0 , v0 ; move v0 , 3 * v0 ) 
[9247] ( move ua , ua ; move ul - ua , ua - 2 ) 
[9248] ( loop 0 , 3 , move ua , 4 ; move 4 , v0 ) 
[9249] loop 0 , 3 , ( move ua , v0 ; move ua , 2 ) 
[9250] ( v0 = ua / 4 ; move ua / v0 , v0 ; move ua , v0 ) 
[9251] ( move 2 , 4 ; move ul , 4 / ua ; move ua , 3 + 3 ) 
[9252] ( move ua , ul ; loop 0 , 6 , move v0 - ul , v0 ) 
[9253] ( move 4 , ul / ua ; move ua + ul , ul + ul ) 
[9254] loop 0 , 3 , move 4 , 4 + ul 
[9255] loop 0 , 2 , loop 1 , 2 , move v1 + ul , 4 
[9256] ( loop 0 , 4 , move 4 / v0 , 4 ; move ua , v0 + ua ) 
[9257] ( move 4 , 4 / ua ; move 4 , ul - ua ; v0 = ua ) 
[9258] ( loop 0 , 2 , move 3 , v0 ; move ua - v0 , v0 ) 
[9259] ( move ua , 3 ; loop 0 , 3 , loop 1 , 2 , move 3 , ul ) 
[9260] ( move ua , ul / 4 ; move 3 , ua ; move 3 - ua , ul ) 
[9261] loop 0 , 3 , move v0 + 3 , ua - 4 
[9262] ( move ul , 4 / ua ; loop 0 , 5 , move 4 , v0 ) 
[9263] ( loop 0 , 4 , move v0 , 4 ; move v0 - ua , v0 ) 
[9264] ( move ul - ua , ua + ul ; move 0 - ua , 4 ) 
[9265] ( move ua , 4 / 3 ; move ua - 3 , ua - ul ) 
[9266] ( move 3 - ua , 3 - ua ; move 3 , 2 ) 
[9267] ( move ua , ul ; loop 0 , 5 , move v0 , 4 ) 
[9268] ( move 4 + 4 , 2 ; v0 = 2 ; move v0 , v0 ) 
[9269] ( ( move ul , ul ; move 2 , ua * ua ) ; move 4 , ul ) 
[9270] ( loop 0 , 4 , move 3 , 4 ; move v0 , ul ) 
[9271] loop 0 , 7 , move v0 + ul , 2 - v0 
[9272] ( loop 0 , 4 , move v0 , 2 ; move 4 , v0 + v0 ) 
[9273] ( move 4 , ul ; move 4 , ul / 2 ) 
[9274] ( move ua , ua / 4 ; move 2 , ul ; move ua - 3 , ul ) 
[9275] ( move ul , ul ; move ua + ul , 4 + ul ) 
[9276] ( move ul - ua , ul ; move 2 , ua ; move ua - ul , ua - 2 ) 
[9277] loop 0 , 3 , ( move v0 , 2 ; move ua , ul ) 
[9278] ( move ua - ul , ul ; move ul , ua / 2 ; move ua , ul ) 
[9279] ( move ua - 3 , ua ; v0 = 4 + ul ; move v0 , ua / 4 ) 
[9280] ( move ua , 3 / 4 ; move ul , ul ) 
[9281] ( loop 0 , 6 , move ul , ul ; move 4 , v0 ) 
[9282] ( move ul , ul / ua ; move 2 , 4 + ul ; move ua , 4 ) 
[9283] ( move ua , ua * ua ; move ul , ul ; loop 0 , 4 , move 3 , ul ) 
[9284] ( ( move ua + 3 , ul ; v0 = ua ) ; move v0 - ul , 2 ) 
[9285] loop 0 , 7 , move v0 - 4 , ua / v0 
[9286] loop 0 , 4 , move ua + ul , 4 * 4 
[9287] ( move ua + 3 , ul ; loop 0 , 5 , move ul , 2 + v0 ) 
[9288] loop 0 , 4 , move v0 * 3 , 0 - 3 
[9289] loop 0 , 3 , ( move 3 , ul ; move v0 , v0 ) 
[9290] ( move 4 + ul , 4 - ua ; move 0 - ua , ul ) 
[9291] ( move 3 , ua - ul ; loop 0 , 4 , move v0 , v0 + v0 ) 
[9292] ( move ul , 0 ; move ua + 3 , 0 - ul ) 
[9293] ( move ua + ul , ul ; move 4 , 4 * 2 ) 
[9294] ( move 4 * 2 , ua ; move ua - ul , ua * ua ; move ul , ul ) 
[9295] ( move 4 , ua - 3 ; move ul - ua , ul ; v0 = ul / 3 ) 
[9296] ( loop 0 , 6 , move ul - 2 , v0 ; move v0 , ul ) 
[9297] ( loop 0 , 5 , move 4 + ul , v0 ; move ua , v0 ) 
[9298] ( move 4 , ul / ua ; move ua + 3 , 4 + ul ) 
[9299] ( move 4 , 2 ; move ua + ul , ua - 4 ) 
[9300] ( move ul - ua , 2 / ua ; move 3 , ul ) 
[9301] ( move ua + ul , 2 ; v0 = 4 / ua ; move v0 - ua , ul ) 
[9302] ( move ua - ul , ua * 4 ; move ul - ua , ul + ul ) 
[9303] ( v0 = ul / ua ; loop 1 , 7 , move v1 , 3 - v0 ) 
[9304] loop 0 , 4 , move v0 - ua , 4 / v0 
[9305] loop 0 , 6 , move 3 - v0 , ul / ua 
[9306] ( loop 0 , 6 , move ul , v0 * v0 ; move ua , ul ) 
[9307] ( move ua + ul , ul / 4 ; move ua + ul , 4 ) 
[9308] ( move ul , ua ; move ua , ul ; loop 0 , 5 , move v0 , v0 ) 
[9309] ( move 4 , ul / ua ; move 3 - ua , 2 ) 
[9310] ( loop 0 , 2 , move v0 - ua , 4 ; move ua , ua ) 
[9311] ( move 4 , ul ; move ua + ul , 3 * 3 ) 
[9312] ( move 4 , ua + ul ; loop 0 , 4 , move v0 , 2 ) 
[9313] ( move 0 , 2 ; loop 0 , 6 , move v0 , 2 * v0 ) 
[9314] ( move ul , 2 ; loop 0 , 3 , move ul + v0 , ul ) 
[9315] ( move ua , 4 + 3 ; move ua + ul , ul + ul ) 
[9316] ( move 4 + ul , 4 ; move 2 , ul ) 
[9317] ( move ul - ua , ua * ua ; move ua - ul , ul ) 
[9318] loop 0 , 3 , ( move v0 , v0 ; move 4 , ul ) 
[9319] ( move 2 , ua - ul ; move ua + ul , 4 ; v0 = ua ) 
[9320] ( loop 0 , 4 , move ul , v0 + v0 ; move 3 , v0 ) 
[9321] ( move ua , 4 * 2 ; v0 = 4 + ul ; move v0 , v0 ) 
[9322] ( loop 0 , 5 , move ul , 2 ; move v0 , v0 ) 
[9323] ( loop 0 , 6 , move v0 , v0 ; move 3 , ua + 4 ) 
[9324] loop 0 , 2 , move 4 , 3 / 4 
[9325] loop 0 , 5 , move ua - ul , ua - v0 
[9326] ( move 2 , 0 ; move ua / 4 , ul ; move ua , ul / ua ) 
[9327] ( ( move 4 , ua ; move ul , 4 + ul ) ; move ua - 3 , 2 ) 
[9328] ( move ua + 3 , 2 ; move ua + ul , 2 ) 
[9329] ( loop 0 , 6 , move 3 , 2 ; move ua , 0 ) 
[9330] ( move ua + ul , 2 / ua ; v0 = ua / 3 ; move ua , v0 ) 
[9331] ( move ua , ua + ul ; move 3 , 4 / 3 ) 
[9332] ( move 4 , ua - ul ; move ua - ul , ua - 3 ) 
[9333] loop 0 , 2 , ( move ul - ua , v0 ; move ua , v0 ) 
[9334] ( ( move 2 , ul ; move ua + ul , 4 ) ; move ua - 2 , ul ) 
[9335] ( move ul , 3 ; move ul , ua * ua ; move ua - ul , ul ) 
[9336] ( move ua + 2 , 0 ; loop 0 , 4 , move v0 , ua - ul ) 
[9337] ( move ua , 2 ; loop 0 , 5 , move v0 , ul ) 
[9338] ( loop 0 , 6 , move 2 , v0 ; move 2 , v0 ) 
[9339] ( move ua + ul , 4 ; move ua , ua - 4 ) 
[9340] loop 0 , 5 , move ul - v0 , ul / 3 
[9341] ( move ua , ul ; move 3 - ul , ul ; move 4 , ul ) 
[9342] ( move ul , 4 + 2 ; move 3 , ul ; move ua , ua + ul ) 
[9343] ( ( move ua + ul , 3 + 3 ; move 2 , ul ) ; move ua , 4 ) 
[9344] ( loop 0 , 6 , move ul , v0 ; move ul - v0 , ul ) 
[9345] ( move 2 , ua * ua ; move ul , ul ; move 3 , ul ) 
[9346] ( move ua , ua * ua ; move ua - ul , 4 ) 
[9347] ( move 0 , 4 ; loop 0 , 6 , move v0 , v0 ) 
[9348] ( move ua , ua ; move ua - 2 , ua / 4 ; move ul , 3 ) 
[9349] ( move 0 , 4 + 4 ; loop 0 , 6 , move v0 , ul ) 
[9350] ( move ul , 2 ; loop 0 , 4 , move v0 , 4 / v0 ) 
[9351] loop 0 , 3 , ( move 2 + ul , v0 ; move ul , v0 - ul ) 
[9352] ( move 4 , ul / ua ; move ul - 4 , ua - ul ) 
[9353] ( loop 0 , 5 , move ul , v0 - ul ; move v0 , ul ) 
[9354] ( loop 0 , 4 , move 2 , 4 ; move ul , ul ) 
[9355] ( loop 0 , 2 , move ua - ul , ua + v0 ; move ul , v0 ) 
[9356] loop 0 , 5 , move 0 - 4 , v0 - ul 
[9357] ( loop 0 , 4 , move v0 + v0 , ul ; move 3 , ua * ua ) 
[9358] loop 0 , 2 , ( move ul , 4 ; move 4 , v0 ) 
[9359] ( loop 0 , 6 , move v0 , 4 ; move 2 , ul / v0 ) 
[9360] loop 0 , 3 , ( move 2 , v0 ; move 3 - v0 , ua + v0 ) 
[9361] loop 0 , 6 , ( v1 = v0 / 4 ; move v0 + v1 , 2 ) 
[9362] ( loop 0 , 6 , move v0 , v0 / 2 ; move 3 , ul ) 
[9363] loop 0 , 2 , ( move ua , ul ; move ul / 2 , ul ) 
[9364] ( move ul - ua , ul - 3 ; move ua , ul ) 
[9365] ( move ul , ul ; ( move ua , 3 * 2 ; move ul - 4 , ul ) ) 
[9366] ( move 2 , 3 ; move ua + 4 , ul ) 
[9367] ( move 3 , ua - 4 ; move 2 - ua , ul ) 
[9368] ( move 0 - 3 , 0 ; move ul - 2 , ul ; move ua , ul ) 
[9369] ( move 3 + ul , 3 ; loop 0 , 6 , move v0 , v0 ) 
[9370] ( loop 0 , 5 , move ul , ul ; move v0 , 3 ) 
[9371] ( move ua - ul , ua ; loop 0 , 6 , move 3 , ul ) 
[9372] ( move ua - ul , ua ; move ua , 4 ; move 3 , ul ) 
[9373] ( move ua , ul ; ( move ul , ua + 4 ; move 2 - ua , ul ) ) 
[9374] ( move 3 , 4 ; move ul - ua , 4 ) 
[9375] ( move 2 - ua , ul ; loop 0 , 5 , move v0 , v0 ) 
[9376] ( move ua , 2 / 4 ; move ua - ul , ul ) 
[9377] ( loop 0 , 4 , move ul , ul ; move 4 , 4 ) 
[9378] ( move ua - ul , ul - 3 ; move 3 , ul ) 
[9379] ( move ua + 4 , 4 ; ( move ul , ul ; move ua , ua * ua ) ) 
[9380] ( move ua , ul ; ( move ua / 3 , 3 ; move ua , ul ) ) 
[9381] ( loop 0 , 4 , move v0 , v0 - 4 ; move ua , 3 ) 
[9382] ( move ul - 4 , ul / 4 ; move 4 , ul ) 
[9383] ( move ul , ul ; move ul - ua , 2 / ua ; move ul + ul , ul ) 
[9384] ( move ua + ul , 2 ; loop 0 , 6 , move v0 , v0 ) 
[9385] ( loop 0 , 7 , move 4 - ua , 4 ; v1 = ul ) 
[9386] ( loop 0 , 3 , move 3 , ua ; move 3 , v0 ) 
[9387] ( move 4 , ul ; move ua , 4 / 3 ) 
[9388] ( move ua - ul , ua ; move ua , ul - 3 ) 
[9389] ( move 4 - 2 , 3 ; move ua + 2 , ul ) 
[9390] ( loop 0 , 5 , move v0 , ul / v0 ; move ua , v0 ) 
[9391] ( loop 0 , 5 , move ua , 3 ; move ul , v0 ; move 2 , v0 ) 
[9392] ( move ua , ua ; loop 0 , 5 , move ul - v0 , v0 ) 
[9393] loop 0 , 6 , ( v1 = v0 ; move 4 , 4 * 2 ) 
[9394] ( move ua - ul , ua - 3 ; move ua , ua + 2 ) 
[9395] ( move 4 , 3 - ul ; ( move ua , 4 + 3 ; v0 = ua ) ) 
[9396] ( move ua + 2 , ua - ul ; move 3 , 2 ; v0 = ua ) 
[9397] loop 0 , 5 , move 2 - ua , v0 - ul 
[9398] ( move 3 , ua / 4 ; move ua + 2 , ul + ul ) 
[9399] ( move ua - 3 , ua ; move ua + 3 , ul ) 
[9400] ( move ua / 4 , 3 + ul ; move 2 - ua , 2 - ua ) 
[9401] ( move 4 , ua ; move ua - ul , ul ) 
[9402] ( move 0 - ua , ul ; loop 0 , 3 , move 3 , ul / ua ) 
[9403] loop 0 , 6 , move 2 - v0 , ua / v0 
[9404] ( move 3 , ua - 3 ; move 4 , ul - ua ; move ul , 4 - ua ) 
[9405] loop 0 , 6 , move 4 - v0 , v0 - 2 
[9406] ( move ua , ul ; loop 0 , 3 , move 3 / v0 , ul ) 
[9407] loop 0 , 3 , move ua / v0 , 3 + v0 
[9408] ( loop 0 , 6 , move v0 , v0 ; move 3 , 2 ) 
[9409] ( move ua + ul , ul / 2 ; move ua - ul , ul ) 
[9410] ( move ua + ul , 4 ; move ul , ul ; move ua , ua / 4 ) 
[9411] loop 0 , 7 , move ua - ul , ua - 4 
[9412] ( move 3 , 2 ; move ua , ua - 4 ; move ul , 0 - ul ) 
[9413] loop 0 , 2 , loop 1 , 3 , move v1 , v1 * 4 
[9414] ( move ua - ul , ua ; loop 0 , 3 , move v0 * v0 , 2 ) 
[9415] ( move ul - ua , ul / 2 ; loop 0 , 3 , move v0 , v0 ) 
[9416] ( move ua + ul , ul ; move ua + 2 , ua - 2 ) 
[9417] loop 0 , 7 , move 3 - v0 , ua * ua 
[9418] ( move ua , ua / 4 ; move 2 , 3 ) 
[9419] ( move ua , ua ; move ul - ua , ul + ul ; move 3 + 3 , ua ) 
[9420] ( move 0 - ua , ul ; move ua - ul , ua * ua ) 
[9421] ( move 2 , ua * ua ; move ua , 4 / ua ) 
[9422] ( move 3 , 2 + ul ; move ua , ul ; move ul + ul , ul ) 
[9423] ( move ua / 2 , ua ; loop 0 , 2 , move ua , 4 ) 
[9424] ( v0 = ul / ua ; loop 1 , 5 , move v0 + v1 , ul ) 
[9425] loop 0 , 4 , move 4 / v0 , 3 + v0 
[9426] ( move ua , 3 ; ( move 3 / ua , ua ; move 4 , 4 + ul ) ) 
[9427] loop 0 , 7 , move v0 / 2 , v0 * 4 
[9428] ( loop 0 , 5 , move v0 + ul , 4 / v0 ; move ul , ua ) 
[9429] ( loop 0 , 8 , v1 = ul ; move ua , v0 ; move v0 , 3 ) 
[9430] ( ( move ua , ua * ua ; move ul - ua , ua ) ; move ua , ul ) 
[9431] ( move ul - 4 , ua ; loop 0 , 5 , move v0 , v0 ) 
[9432] ( move ua , ul ; move 3 + ul , ul ; move ua , ul - 3 ) 
[9433] ( loop 0 , 5 , move ul + ul , ul ; move v0 , ul ) 
[9434] ( move 0 , 3 ; loop 0 , 4 , move v0 + v0 , v0 ) 
[9435] ( ( move ua , ua - ul ; move ua , 2 - ua ) ; move 4 , ul ) 
[9436] loop 0 , 3 , loop 1 , 2 , move v1 + ul , v1 / v0 
[9437] loop 0 , 5 , move 3 - ua , v0 - 3 
[9438] ( move ul , ul ; loop 0 , 6 , move ul , ul / 2 ) 
[9439] ( move ul , ul / 3 ; move ua + ul , ul ) 
[9440] ( move 4 , 4 ; loop 0 , 5 , move ul , ul / 2 ) 
[9441] ( move ua , ua ; ( move ul , ul / ua ; move ua , 2 ) ) 
[9442] ( move ua , ul ; move ul , 4 ; move ua , 4 ) 
[9443] ( move ua , ul ; loop 0 , 4 , move v0 + v0 , 4 ) 
[9444] ( loop 0 , 4 , move ul - 3 , v0 ; move ua , ul ) 
[9445] ( loop 0 , 4 , move v0 , 2 / v0 ; move ul , ul ) 
[9446] ( loop 0 , 3 , move v0 - 2 , v0 ; move v0 , v0 ) 
[9447] ( move ul , ua + ua ; loop 0 , 6 , move v0 , v0 * v0 ) 
[9448] ( move 0 - 4 , ul / 2 ; move ua , ul ) 
[9449] ( move ua , ul / 3 ; move 0 - ua , ul / 3 ) 
[9450] ( move ua , ul ; move ul , 4 ; move ua , ua + 2 ) 
[9451] ( move ua , ua * 2 ; move ul , ua * ua ; move 3 , ul ) 
[9452] ( move ul - 4 , ul ; loop 0 , 6 , move v0 , v0 ) 
[9453] loop 0 , 4 , move 4 + ul , ul - 3 
[9454] ( move ul , 0 ; move ua , ua + ul ; move 4 , 4 ) 
[9455] ( move ul - 4 , ul ; loop 0 , 5 , move v0 , v0 ) 
[9456] ( move ua , ul / 3 ; move ul , 4 ; move 2 , ua ) 
[9457] loop 0 , 6 , move 3 * 2 , ul + ul 
[9458] loop 0 , 3 , move 3 - ua , 3 * 3 
[9459] ( move ul - 3 , ul / 3 ; move ul - ua , ul ) 
[9460] ( move ua , ua - 2 ; move ul , 4 ; move ul - ua , 4 + ul ) 
[9461] ( move ua , ua ; ( move ul , ul ; move 3 + ul , 0 - 2 ) ) 
[9462] ( move ua - ul , ul ; move ul , ua * ua ; move 4 , ul / ua ) 
[9463] ( move ua + ul , ua + 2 ; loop 0 , 6 , move ul , v0 ) 
[9464] ( move ua , ul ; move ul , 3 ; move ua , 2 ) 
[9465] ( loop 0 , 4 , move v0 , 3 ; move v0 , 2 ) 
[9466] ( loop 0 , 6 , move v0 , 2 - v0 ; move ua , v0 ) 
[9467] move 3 * 3 , ul / 4 
[9468] ( move 2 , ul ; move 3 , ul ; move 4 + ul , ul + ul ) 
[9469] loop 0 , 4 , move ua - ul , ua - 4 
[9470] ( move 2 , ua * 4 ; move ua + ul , 3 / 2 ) 
[9471] ( move ul , 3 ; move ua + ul , ul ; loop 0 , ul , move ul , ul ) 
[9472] ( move ul , ua * ua ; move ua , ua ; move ua + 2 , 2 ) 
[9473] ( loop 0 , 5 , move 2 + v0 , v0 ; move ua , v0 ) 
[9474] ( move ua , ul - ua ; ( move 4 , ul ; move ul - ua , ul ) ) 
[9475] loop 0 , 5 , move v0 , 3 / 4 
[9476] loop 0 , 2 , ( move v0 , v0 ; move ua + 2 , v0 ) 
[9477] loop 0 , 7 , move 4 - v0 , ua - v0 
[9478] ( move ua , ul ; move ul , ua + ul ; move ua - ul , ul + ul ) 
[9479] ( move ul + ul , 3 ; move 4 , ua + 4 ; move ul - ua , 4 ) 
[9480] ( move 4 , 0 ; move ul + ul , ul ; move ua , 2 + ul ) 
[9481] ( v0 = ua * ua ; loop 1 , 5 , move v1 , v0 * v1 ) 
[9482] ( move 4 * 2 , ul ; move ua , ua - 4 ) 
[9483] loop 0 , 3 , ( move v0 , ul ; move v0 - ua , ul ) 
[9484] ( move ua + ul , 3 ; move ua , 2 ; move 2 + ul , ul / ua ) 
[9485] ( ( move 2 , 4 ; move 0 , 4 ) ; move ua , 2 ) 
[9486] loop 0 , 2 , loop 1 , 3 , move ua + v0 , 4 
[9487] loop 0 , 7 , ( move v0 - 4 , ul - v0 ; v1 = ul ) 
[9488] ( move ua - 2 , 3 ; move ua , ul ) 
[9489] ( move 3 , 4 / ua ; loop 0 , 5 , move ua , ul + v0 ) 
[9490] ( move 0 - ul , ul ; loop 0 , 5 , move ua , 3 ) 
[9491] ( move ua , 3 * 3 ; move 2 , ua - 3 ; move 0 - 3 , ul ) 
[9492] ( loop 0 , 3 , move ua - 3 , 4 ; move v0 , v0 - ua ) 
[9493] ( move ua + ul , ul ; move 4 , ua - ul ) 
[9494] ( ( move 3 , ua ; move ua , ul ; move ua , 3 ) ; v0 = 2 ) 
[9495] ( loop 0 , 5 , move v0 , v0 ; move ua , v0 + v0 ) 
[9496] ( move 4 , ua * ua ; move ua - ul , ul ; v0 = 2 ) 
[9497] ( move 3 , ua - 3 ; move 3 + 2 , ul ; move ul , ul ) 
[9498] ( move ua , ua / 4 ; move ul + ul , 4 ) 
[9499] ( v0 = 4 ; move v0 , 4 * 4 ; move ua , ul ) 
[9500] loop 0 , 4 , move 3 * 2 , v0 + ul 
[9501] ( move ua + ul , ul / 3 ; loop 0 , 2 , move ul , ul ) 
[9502] ( move ua + 2 , ua ; move ua + ul , ul + ul ) 
[9503] ( loop 0 , 5 , move 4 , 3 ; move v0 , ua ) 
[9504] ( move ua - ul , ua * ua ; move 3 , ul - ua ) 
[9505] ( loop 0 , 6 , move ul , v0 / ua ; move v0 , v0 ) 
[9506] ( move ul , ul ; move ua + ul , 2 - ua ; move ua - ul , 2 ) 
[9507] ( move 4 , ua / 4 ; move ul - 4 , 4 + ul ) 
[9508] ( v0 = 2 ; ( move 4 , ua ; move ul - ua , ul - v0 ) ) 
[9509] ( move 2 , ua ; move ul , ul ; move ua - ul , 3 / 2 ) 
[9510] ( move ul - 3 , 4 + ul ; loop 0 , 5 , move v0 , v0 ) 
[9511] ( move ua , ua ; move ua + ul , ua * ua ; move ua / 3 , ul ) 
[9512] loop 0 , 3 , move ul - ua , 3 + 2 
[9513] ( ( move 3 , ul ; move ul , ua * ua ) ; move 2 + ul , ul ) 
[9514] loop 0 , 6 , move 3 + v0 , v0 - ul 
[9515] ( loop 0 , 5 , move ul - v0 , ua ; move ul + v0 , ul ) 
[9516] ( move ul , ul ; loop 0 , 3 , move ua , v0 + 2 ) 
[9517] loop 0 , 3 , ( move v0 * v0 , ua + 3 ; move ul , ul ) 
[9518] ( move 0 - ua , 2 ; loop 0 , 4 , move v0 , v0 ) 
[9519] loop 0 , 3 , ( move 4 , ua ; move ul / v0 , ul ) 
[9520] ( move ua , ua ; move ua , 3 ; move ua , 4 - ua ) 
[9521] ( move 4 , ul + ul ; loop 0 , 5 , move v0 + v0 , v0 ) 
[9522] loop 0 , 7 , move v0 - 2 , v0 + 2 
[9523] ( move ua , 4 ; move ua - ul , 0 ; move ua + 4 , 3 ) 
[9524] loop 0 , 3 , ( move ul , v0 * v0 ; move 2 , v0 ) 
[9525] ( loop 0 , 6 , move ul , 0 ; move v0 - 2 , 2 / v0 ) 
[9526] ( move 3 , 2 ; move ul , 3 ; loop 0 , 3 , move v0 , ul ) 
[9527] loop 0 , 5 , move ul - 3 , v0 / ua 
[9528] ( move ul , 3 + ul ; loop 0 , 6 , move v0 + ul , v0 ) 
[9529] ( v0 = 0 - ua ; loop 1 , 5 , move ua , ua * v0 ) 
[9530] ( loop 0 , 2 , move 3 + ul , v0 ; move ul - ua , v0 ) 
[9531] ( move ua - ul , ul / 4 ; v0 = ul + ul ; move ua , v0 ) 
[9532] ( move 4 , ua ; move 4 , ua / 4 ) 
[9533] loop 0 , 3 , move 4 + ul , v0 - 3 
[9534] ( ( move ua , ul ; move 3 , ua - ul ) ; move 4 , 4 ) 
[9535] ( loop 0 , 5 , move ul , v0 ; move ua , v0 * v0 ) 
[9536] ( move ua , ul ; move ul / 2 , ul / ua ; move ua , 4 ) 
[9537] ( move ua + ul , ua + ua ; move 0 - ua , ul ) 
[9538] loop 0 , 3 , ( move 0 , ul - v0 ; move ua , 4 ) 
[9539] ( move ul - ua , ua * ua ; move 4 - ua , ul ) 
[9540] ( move ul , 3 ; move ul , ul ; move 4 , ul ) 
[9541] ( move ua , 3 * 2 ; move ua , 3 + 2 ; v0 = ul ) 
[9542] ( move ua , 4 ; move ua , 3 - ua ; move ul , ul ) 
[9543] ( move ua , ua ; loop 0 , 5 , move ua , 3 ) 
[9544] ( move ua - 4 , 3 ; move ua - ul , ua / 3 ) 
[9545] ( loop 0 , 4 , move v0 , 2 / ua ; move ul , ul ) 
[9546] ( move ul , ul ; move ul - ua , 2 ; move ua , ua + ul ) 
[9547] loop 0 , 3 , ( move ua , ua ; move v0 , v0 + 2 ) 
[9548] ( loop 0 , 6 , move v0 , 2 ; move 2 , ua ) 
[9549] ( ( move ua - ul , ua ; move ua , ua + ul ) ; move 3 , ul ) 
[9550] ( move ua , ul ; loop 0 , 9 , v1 = v0 ; move ua , v0 ) 
[9551] ( loop 0 , 6 , move ul , v0 ; move 3 , ul ) 
[9552] ( move ua , 3 ; v0 = 4 ; move v0 , v0 * v0 ) 
[9553] ( move 4 , 0 ; loop 0 , 4 , move v0 , v0 * v0 ) 
[9554] ( loop 0 , 5 , move v0 , ua / v0 ; move v0 , 0 ) 
[9555] loop 0 , 3 , loop 1 , 2 , move ul , v0 - v1 
[9556] ( move ua , 2 ; loop 0 , 6 , move v0 , ul - v0 ) 
[9557] ( move 0 - ua , 3 ; move 3 , ul ) 
[9558] loop 0 , 2 , ( move 0 , ul ; move 4 , 2 / 4 ) 
[9559] loop 0 , 3 , loop 1 , ul , move v1 - ua , 2 
[9560] loop 0 , 7 , move v0 - ul , 2 - v0 
[9561] ( move 3 - ua , ua ; move ua + 3 , 4 + ul ) 
[9562] loop 0 , 7 , move v0 / 3 , ua - v0 
[9563] ( loop 0 , 5 , move v0 , 4 ; move ul - ua , 2 ) 
[9564] loop 0 , 7 , move ua / v0 , v0 + 2 
[9565] ( move 4 , 2 ; move ua , ul ; move ul , ul - ua ) 
[9566] ( move ua , ul / 3 ; move 3 , ua / 4 ) 
[9567] ( move ua + ul , ua / 4 ; loop 0 , 4 , move 3 , v0 + 2 ) 
[9568] ( move ul , ua - ul ; move ua , 4 / ua ) 
[9569] ( move ul - ua , ul ; move ua / 3 , ua * 3 ; move ua , 2 ) 
[9570] ( move ua - ul , ua ; move 4 * 2 , ul - 3 ) 
[9571] ( move ua - 2 , ul ; move ua + ul , 3 - ul ) 
[9572] loop 0 , 7 , ( v1 = ua + v0 ; move v1 / 3 , v1 ) 
[9573] ( loop 0 , 5 , move 2 - ua , v0 ; move 0 - 4 , v0 ) 
[9574] loop 0 , 3 , ( move 2 + v0 , 4 ; move ul , v0 * v0 ) 
[9575] ( move ul + ul , 3 ; move 3 , 4 ; move ua / 2 , 4 / ua ) 
[9576] loop 0 , 2 , loop 1 , 3 , move 2 + v0 , ul 
[9577] ( move 3 , 2 ; move ua , 3 ; move ua - ul , 4 ) 
[9578] ( loop 0 , 6 , move ua - 3 , ul ; move ua - v0 , ua ) 
[9579] ( move 4 , ua / 4 ; move ua / 3 , ul ; move ua , 0 ) 
[9580] ( move ul + ul , 2 ; loop 0 , 6 , move v0 , v0 + v0 ) 
[9581] ( v0 = ua - 2 ; move v0 + ua , 4 ; move v0 , v0 ) 
[9582] ( move 4 , 2 ; move ua , ul / 4 ) 
[9583] ( move ua , 4 + 2 ; move 0 , ul + ul ; move ua , ua - 3 ) 
[9584] ( move ua , ua - 3 ; move ul + ul , ul / 2 ) 
[9585] ( move 4 , 3 * 2 ; move ua + ul , 0 - 2 ) 
[9586] ( move ul , ua - 4 ; loop 0 , 3 , move v0 - 4 , v0 ) 
[9587] ( move 4 , 0 ; loop 0 , 3 , move v0 , 4 ) 
[9588] ( ( move 0 - ua , 4 ; move ua + ul , ul ) ; move 0 , 2 ) 
[9589] ( move ua - ul , ua ; loop 0 , 3 , move v0 * 2 , ul ) 
[9590] ( move 3 , 3 ; v0 = 3 + 3 ; move ua , v0 ) 
[9591] ( move ul , 4 * 3 ; move ua , ul ) 
[9592] ( loop 0 , 2 , move v0 - 2 , ul ; move 3 , 4 / v0 ) 
[9593] ( loop 0 , 4 , move v0 + v0 , ul ; move ul , ul ) 
[9594] ( move ua , 0 ; move ul - ua , ul ; move ua , ul / ua ) 
[9595] ( move ua , 2 ; loop 0 , 3 , move 2 , ul ) 
[9596] loop 0 , 2 , ( move v0 , v0 ; move 4 , ua - v0 ) 
[9597] ( move ua , ul - 4 ; move ul , 4 ; move 4 , 4 ) 
[9598] ( move ua , ul / ua ; move ua , 3 ; move ua + ul , 2 ) 
[9599] ( move ul , ul / 3 ; loop 0 , 4 , move ua , 4 ) 
[9600] ( move ul / 2 , 4 ; move ua + 2 , 2 ) 
[9601] ( move ul - ua , 3 * 2 ; move ua - ul , ul ; v0 = ul ) 
[9602] ( move ua , 2 ; v0 = 3 ; move v0 , v0 / 4 ) 
[9603] ( move ul - ua , ul / 2 ; move ua , ua - 2 ) 
[9604] ( move ua , ua * ua ; move ul , ua + 3 ; move ua / 4 , 4 ) 
[9605] loop 0 , 6 , move 2 - v0 , ul / v0 
[9606] ( move ua , ul ; loop 0 , 5 , move 2 , v0 ; move v0 , ul ) 
[9607] ( loop 0 , 6 , move ul , ul ; move v0 , ul - v0 ) 
[9608] loop 0 , 2 , loop 1 , 3 , move v1 + ul , ul 
[9609] ( move ua , ua ; move ul - ua , 2 ; move ul , 2 ) 
[9610] loop 0 , 7 , move v0 - 2 , v0 + v0 
[9611] ( move ul + ul , ua ; loop 1 , 4 , move v1 , 4 - ul ) 
[9612] ( loop 0 , 6 , move v0 , v0 / 4 ; move v0 , ul ) 
[9613] ( move 3 , ul / ua ; move 4 , ua - ul ) 
[9614] loop 0 , 2 , loop 1 , 3 , move v1 , v1 * v1 
[9615] ( loop 0 , 4 , move v0 , v0 + v0 ; move ua , v0 ) 
[9616] ( move ua , ul ; ( move ul , 3 ; move ua - ul , ul ) ) 
[9617] ( move ul - ua , ua ; move ul , ua + ul ; move 3 , 4 - ua ) 
[9618] ( v0 = 3 ; move 4 , v0 + v0 ; move ua - v0 , ul ) 
[9619] ( move ul , 0 ; ( move 4 + ul , ul ; move ua , 3 + 3 ) ) 
[9620] loop 0 , 7 , move 2 - v0 , 3 + v0 
[9621] ( loop 0 , 3 , move v0 - ua , 2 + ul ; move ua , ua ) 
[9622] loop 0 , 4 , move 3 / v0 , ul / v0 
[9623] ( move ua , ua - 4 ; move 4 , ul / 2 ) 
[9624] loop 0 , 2 , ( move ul , 0 ; move 4 / v0 , ul ) 
[9625] ( move ua , ua - ul ; loop 0 , 3 , move v0 + ul , v0 ) 
[9626] ( move 3 , ua ; ( move ua - ul , ul ; move 4 , ul ) ) 
[9627] ( ( move ua , ua - 4 ; move 4 , ul - 2 ) ; move ul , 2 ) 
[9628] ( move 3 - ul , ua * ua ; move 4 , ul ; move ul , ul ) 
[9629] ( v0 = ua + 4 ; move v0 , v0 ; move 2 + ul , 2 ) 
[9630] ( move ua , ua ; move ul , 3 ; move 4 , ul ) 
[9631] ( move ul - ua , 3 / ua ; move 2 * 2 , ul ) 
[9632] ( move ua , ul ; loop 0 , 5 , move v0 , v0 * v0 ) 
[9633] loop 0 , 3 , move 2 * v0 , 3 + 3 
[9634] ( move 4 + ul , ua + 3 ; move ul , ua / 3 ; move ua , ua ) 
[9635] loop 0 , 2 , ( v1 = ul ; move 3 * 3 , v0 + v1 ) 
[9636] ( move ua , 0 ; move ua + ul , 2 + ul ; move 3 , ua + 4 ) 
[9637] ( move 3 , ua ; move 2 , ul ; move ul + ul , ul ) 
[9638] ( loop 0 , 3 , move ul , 4 + v0 ; move v0 , v0 ) 
[9639] ( move ua , ua * ua ; move 3 , ul / ua ) 
[9640] ( move ua , 4 ; ( move ul + ul , ul ; move ua / 4 , ua ) ) 
[9641] loop 0 , 3 , ( move ul , 4 ; move v0 + v0 , ua ) 
[9642] loop 0 , 3 , loop 1 , 2 , move v0 * v0 , ul 
[9643] ( move 4 * 2 , 2 / ua ; move 0 , ua ; move 2 , 2 ) 
[9644] ( move 0 - ua , 2 / ua ; move ua , ul - ua ) 
[9645] ( move 4 , ul ; move ua - ul , 3 / 2 ) 
[9646] loop 0 , 5 , move v0 - ul , v0 - 3 
[9647] loop 0 , 4 , move 4 - v0 , v0 * 4 
[9648] ( move ua + ul , 4 ; move ul - 4 , ul ) 
[9649] ( move ua , 3 ; move 2 , ul ; move ua , ul ) 
[9650] ( move ua , ua ; move ua - ul , 3 + 2 ) 
[9651] ( loop 0 , 4 , move v0 - 4 , v0 * 4 ; v1 = v0 ) 
[9652] loop 0 , 3 , ( move v0 - ua , v0 ; move ul , v0 ) 
[9653] ( move ul , 4 ; loop 0 , 3 , move 2 , ul ) 
[9654] loop 0 , 2 , ( move 4 , 0 ; move 2 , ul ; v1 = v0 ) 
[9655] loop 0 , 3 , ( move v0 , v0 ; move ul - ua , v0 / 2 ) 
[9656] loop 0 , 6 , ( v1 = 4 ; move ua - 4 , v0 - v1 ) 
[9657] ( loop 0 , 6 , move v0 , 2 - v0 ; move ua , v0 + 3 ) 
[9658] loop 0 , 3 , ( move 3 , ua - v0 ; move v0 + ul , 2 ) 
[9659] ( loop 0 , 4 , move v0 , ul / v0 ; move v0 , ul ) 
[9660] loop 0 , 6 , move v0 - ul , v0 - ul 
[9661] loop 0 , 3 , move ua + 2 , ul + v0 
[9662] ( move ua + ul , ua / 4 ; move ua - ul , 4 ) 
[9663] ( move ul - ua , ul ; move ua + ul , 4 + ul ) 
[9664] ( loop 0 , 4 , move v0 , ua + ul ; move 3 , 2 / v0 ) 
[9665] loop 0 , 2 , move ua + ul , v0 - 3 
[9666] ( move 3 , 4 + ul ; move ua , 2 / 4 ) 
[9667] ( loop 0 , 6 , move ul , ul / 2 ; move v0 , ua ) 
[9668] ( move ua , ul ; move 4 , 4 / 2 ; move 2 + ul , ul ) 
[9669] ( loop 0 , 5 , move 4 , v0 ; move ul + v0 , ua ) 
[9670] ( ( move ul , 3 ; move ul - ua , 4 ) ; move ul - ua , 2 ) 
[9671] ( move ua , ul ; move 3 , 4 * 3 ) 
[9672] ( loop 0 , 5 , move 3 / v0 , ul ; move v0 , ua * v0 ) 
[9673] loop 0 , 7 , move ua / v0 , 2 - 4 
[9674] ( move ua , ua / 4 ; move ua - ul , 4 ; v0 = ua - 3 ) 
[9675] loop 0 , 6 , move v0 / 2 , 4 - v0 
[9676] ( loop 0 , 6 , move v0 - ul , v0 ; move ua , v0 ) 
[9677] loop 0 , 6 , move ua / v0 , v0 + 2 
[9678] ( move ul - ua , 2 ; move ua + ul , 4 / ua ) 
[9679] ( move ul / 4 , 2 ; move ua , 0 ; move 0 - 4 , ua / 4 ) 
[9680] ( loop 0 , 5 , move ul , v0 * ua ; move ua - v0 , v0 ) 
[9681] ( move ul , ua ; move 4 , ul ; move ul - ua , ul ) 
[9682] loop 0 , 3 , ( move v0 , v0 ; move v0 , ul / v0 ) 
[9683] ( move ua , ul ; move ul - ua , 4 * 3 ) 
[9684] ( move ul , ua + ul ; move ul - ua , ul - ua ; move 2 , 4 ) 
[9685] ( move ua + ul , ua ; move 3 , 4 / 3 ) 
[9686] loop 0 , 6 , ( v1 = ul - v0 ; move 2 , ua / v1 ) 
[9687] ( move ua , 3 ; move ul / ua , 3 / ua ; move ua + ul , ul ) 
[9688] ( move 3 , ul ; move ul , ua ; loop 0 , 5 , move v0 , 2 ) 
[9689] ( move 2 , 2 ; loop 0 , 5 , move ul , v0 - ul ) 
[9690] loop 0 , 7 , move 2 , v0 + 4 
[9691] ( loop 0 , 5 , move v0 , v0 ; move ua , ul / v0 ) 
[9692] loop 0 , 5 , ( v1 = ua ; move v1 - ul , ua * v1 ) 
[9693] ( move 4 , ul / 3 ; loop 0 , 6 , move v0 , v0 ) 
[9694] ( move ul , ua ; loop 0 , 6 , move ul - 3 , v0 / ua ) 
[9695] ( move 3 , ul - ua ; move 2 , ul ; move ua , 3 ) 
[9696] ( move ul , ua * ua ; move 4 , 2 ) 
[9697] ( move ul - 4 , 3 + 3 ; move ua , ua ; move 4 + 4 , 2 ) 
[9698] ( move ua , ul ; ( move ul , 2 ; move 3 - ua , 2 ) ) 
[9699] ( ( move ul , ul ; move 4 , ua + 4 ) ; move ua , ul ) 
[9700] ( move ua , ua / 3 ; move ul , 3 + 3 ) 
[9701] ( move 4 - ua , ul ; move ua , ul ; move ul , ua + ul ) 
[9702] ( move 4 - ua , 2 ; loop 0 , 5 , move v0 , v0 ) 
[9703] ( loop 0 , 4 , move v0 , v0 - ul ; move ua , v0 ) 
[9704] ( move 3 , 4 + ul ; move 3 * 3 , 2 ; v0 = ua ) 
[9705] ( move ua + ul , 3 ; move 2 - ua , ul ) 
[9706] ( move 3 - ua , ul ; move ua + ul , ua - ul ) 
[9707] loop 0 , 3 , ( move 4 , ul ; move ul , v0 * 3 ) 
[9708] ( move 3 , ul ; move ul - 2 , 4 ; move ua , 4 ) 
[9709] loop 0 , 5 , move ul - 3 , v0 * 3 
[9710] loop 0 , 3 , ( move 2 , v0 + v0 ; move ul , 4 ) 
[9711] loop 0 , 3 , ( move v0 , 3 ; move ua , ul ) 
[9712] ( move 3 * 2 , ul ; move 3 - ua , ua ; move ua , 4 ) 
[9713] ( move ua , 3 ; move ua + 3 , 2 ) 
[9714] ( move ul / 4 , 4 * 2 ; loop 0 , 6 , move v0 , v0 ) 
[9715] ( loop 0 , 5 , move 2 , v0 ; move ua , ul + v0 ) 
[9716] loop 0 , 3 , ( move v0 - 3 , 4 ; move ul , v0 ) 
[9717] ( move ua , ul - 4 ; loop 0 , 6 , move ul , v0 + ua ) 
[9718] ( move 2 , ua ; move 3 , 0 ; move 4 + 3 , ua + ul ) 
[9719] ( move ul - ua , ul ; move 4 + 2 , 2 ) 
[9720] ( loop 0 , 3 , move ua , ul - 4 ; move 4 , ul ) 
[9721] ( move ul , ul ; move ua , 4 + 2 ) 
[9722] ( move ua - ul , ul / 2 ; move ua - ul , 2 ) 
[9723] ( loop 0 , 5 , move ul , ul ; move v0 , ul + ul ) 
[9724] ( move ua , ul ; loop 0 , 5 , move v0 - ul , ul ) 
[9725] ( move ul , ul ; loop 0 , 2 , move 3 , ul ) 
[9726] ( move ul + ul , 3 / 4 ; move ua , ua * ua ) 
[9727] ( move ua , ul ; move ul - ua , 0 - 4 ) 
[9728] ( ( move ua , ua ; move ul - ua , ul - 2 ) ; move ua , ua ) 
[9729] ( move ua , 4 / 2 ; loop 0 , 6 , move 4 / ua , ul / ua ) 
[9730] ( loop 0 , ul , move ua - v0 , ua / 3 ; move ua + ul , 2 ) 
[9731] ( move 4 * 2 , 4 ; move 3 / ua , ul ; move 3 , ul ) 
[9732] ( move ua + 4 , ul ; move ul - ua , ul ) 
[9733] ( move ua , ua ; ( move ul - 4 , ul ; move ua - 2 , 2 ) ) 
[9734] ( loop 0 , 6 , move v0 , v0 ; move 2 - v0 , 2 ) 
[9735] ( loop 0 , 6 , move ul , v0 ; loop 1 , ul , move 2 , v0 ) 
[9736] ( move 4 + ul , 2 / ua ; loop 0 , 5 , move v0 , ul ) 
[9737] ( loop 0 , 5 , move v0 , ua * ua ; move v0 - ul , v0 ) 
[9738] ( loop 0 , 4 , move 2 , v0 ; move ua , v0 + 3 ) 
[9739] loop 0 , 3 , ( move v0 + v0 , v0 ; move 3 , ul ) 
[9740] ( move 0 - 4 , ua - 4 ; move ua , 2 ) 
[9741] loop 0 , 3 , ( move ua - ul , v0 ; move ul / ua , v0 ) 
[9742] ( loop 0 , 2 , move 2 , v0 ; move ua , v0 ) 
[9743] loop 0 , 6 , move v0 / 2 , ua * ua 
[9744] ( loop 0 , 4 , move v0 , 2 ; move 4 , ua ; v1 = ul ) 
[9745] ( move 2 , 2 ; move ua , ul ; move ul , 3 * 2 ) 
[9746] ( move ua , 2 - 4 ; move ua , 3 / 2 ) 
[9747] ( move 2 + 2 , 4 + ul ; move 3 , 4 + ul ) 
[9748] ( move 3 , ua - ul ; move ua , 2 ) 
[9749] loop 0 , 5 , move ul - 4 , v0 + v0 
[9750] ( move 3 , 4 + ul ; move ua , 4 + ul ) 
[9751] ( move 3 - ua , ul ; move ua , 4 + 3 ) 
[9752] ( move 4 + ul , ul / ua ; move 2 , 4 - ua ) 
[9753] ( move 0 , 2 ; loop 0 , 3 , ( v2 = ua ; move 3 , ul ) ) 
[9754] ( loop 0 , 5 , move v0 , ul ; move 3 , ua ) 
[9755] loop 0 , 3 , loop 1 , 2 , move 2 , v0 + 4 
[9756] ( move ul , ul ; move ua , ua - ul ; move ua , 2 ) 
[9757] ( move 2 - ua , 3 ; loop 0 , ul , move 4 / v0 , ul ) 
[9758] ( move ua - ul , ul ; move 2 - ua , ul ; v0 = ua ) 
[9759] ( move 0 - ul , ul ; move ua , 4 * 3 ; move 2 , ul - ua ) 
[9760] ( loop 0 , 6 , move v0 , v0 ; move ul , 2 ) 
[9761] ( move ul - ua , 3 ; loop 0 , 6 , move v0 , 3 ) 
[9762] loop 0 , 6 , ( v1 = v0 ; move 3 , 3 / 4 ) 
[9763] ( move 3 , 2 ; move ua , ul / ua ) 
[9764] ( loop 1 , 4 , move 3 , ul ; move ua , 3 ) 
[9765] ( move 2 , ul / 4 ; move ua + ul , ul ) 
[9766] ( loop 0 , 6 , move ul , ul / v0 ; move v0 , ul ) 
[9767] ( v0 = ua ; move v0 , 0 ; loop 1 , 6 , move 4 , ul ) 
[9768] ( v0 = ua ; move 3 - ua , ua ; move v0 , v0 * v0 ) 
[9769] ( move ul , ul ; move ua , ul ; move 4 , ua - 4 ) 
[9770] ( loop 0 , 6 , move v0 - ua , 2 ; move v0 , v0 ) 
[9771] ( move ua , ul ; loop 0 , 4 , move ul , ul - v0 ) 
[9772] ( v0 = ua + ul ; loop 1 , 5 , move 3 , ua / v0 ) 
[9773] ( v0 = ua / 3 ; move ua , v0 ; move 4 , v0 ) 
[9774] loop 0 , 2 , ( move ua , 3 - v0 ; move v0 + ul , v0 ) 
[9775] ( move 3 + ul , ul / ua ; loop 0 , 4 , move 3 , 3 ) 
[9776] ( loop 0 , 6 , move ul , v0 ; move 2 , ul ) 
[9777] ( move ul , ua ; ( move 4 + ul , 4 + ul ; move ua , ul ) ) 
[9778] ( move 4 , 3 * 3 ; move 2 , ul ; v0 = ua ) 
[9779] loop 0 , 2 , move ul - 4 , v0 / 2 
[9780] ( ( move ua , 0 - ul ; move ua , ua - 3 ) ; move ul , 0 ) 
[9781] loop 0 , 2 , ( move v0 + ul , ul ; move 4 , v0 ) 
[9782] ( move 4 , ua ; move ua - ul , 4 + 4 ) 
[9783] ( loop 0 , 9 , v1 = ua ; loop 2 , 6 , move v0 , v0 ) 
[9784] loop 0 , 3 , move ua + v0 , 2 + v0 
[9785] ( move 4 + ul , 3 ; move ua , 2 ; move ul , ul ) 
[9786] ( move ul , ul ; move 3 , ua / 4 ; move ua , ul ) 
[9787] ( move 2 , ul ; move ua , ul ; move 2 , ul ) 
[9788] loop 0 , 3 , move 0 - 3 , 4 * v0 
[9789] ( v0 = 4 - ua ; loop 1 , 3 , move v0 - v1 , v1 ) 
[9790] ( move 2 , 3 ; move ua + 4 , 4 ) 
[9791] ( move ul + ul , ul ; loop 0 , 6 , move ul + ul , v0 ) 
[9792] ( move ua - ul , ul ; move 2 - ua , ua ; move 3 - ua , ul ) 
[9793] ( move 4 - ul , ul + ul ; move ua , ul / 4 ) 
[9794] ( move ul , 4 ; loop 0 , 6 , move 2 , v0 ) 
[9795] ( move 2 - ua , ua ; move ua , ul ) 
[9796] ( loop 0 , 5 , move v0 , v0 + ul ; move ua , v0 ) 
[9797] ( move ua , ua + 2 ; loop 0 , 3 , move v0 * v0 , 3 ) 
[9798] loop 0 , 3 , ( move v0 , v0 - 4 ; move ul , v0 ) 
[9799] ( move ul - ua , ul ; move ua , ul / 4 ) 
[9800] loop 0 , 4 , move 2 - ua , 3 * v0 
[9801] ( move ua , ul ; move ua + ul , 3 ; move ul + ul , 4 ) 
[9802] ( loop 0 , 5 , move v0 , v0 / 4 ; move v0 , v0 ) 
[9803] ( move ua , ua ; loop 0 , 6 , move ua / v0 , ua + 4 ) 
[9804] loop 0 , 2 , loop 1 , 3 , move 2 + v1 , 2 
[9805] ( ( move 3 , ua ; move ul , ul + ul ) ; move ua , 4 ) 
[9806] ( move ul - 3 , ul - ua ; move ua , ul ; move ua , 4 * 2 ) 
[9807] ( v0 = ua + ul ; move ua + 3 , v0 / 3 ) 
[9808] ( move ul , ul / ua ; loop 0 , 3 , move 4 , v0 * v0 ) 
[9809] ( ( move 2 , ul ; move ul , 4 ) ; move 3 + ul , ul ) 
[9810] ( move ua , ua ; loop 0 , 6 , move ua , ua - 2 ) 
[9811] ( loop 0 , 4 , move 4 , v0 ; move ua , v0 ) 
[9812] ( move ul , 4 + 2 ; move ua + 2 , ul ; move ua + ul , 4 ) 
[9813] loop 0 , 2 , loop 1 , 3 , move ua , v0 - 3 
[9814] ( move ul , ul ; move ua - ul , ul ; move ua , ua / 3 ) 
[9815] ( loop 0 , 5 , move ul , v0 ; move 3 , ua + ul ) 
[9816] ( loop 0 , 4 , move 4 + ul , 4 ; move v0 , ul ) 
[9817] ( move ul , ua + 2 ; loop 0 , 5 , move v0 , v0 + v0 ) 
[9818] ( ( move ua , ua / 3 ; move ua / 3 , 2 ) ; move ua , 3 ) 
[9819] ( loop 0 , 5 , move 2 , v0 ; move ul - ua , v0 - ua ) 
[9820] ( move 3 , ul / 4 ; move ua + ul , 2 ) 
[9821] ( move 3 , 0 ; ( move ua - ul , 4 / ua ; v0 = 4 ) ) 
[9822] ( loop 0 , 6 , move ua , 2 ; move v0 , v0 + 3 ) 
[9823] ( loop 0 , 6 , move ul , v0 ; move ua , 2 ) 
[9824] ( move ul , 0 ; move ua , 3 + 3 ) 
[9825] loop 0 , 2 , ( move v0 + ul , v0 ; move ua , 2 + v0 ) 
[9826] loop 0 , 3 , move v0 * 4 , ua - v0 
[9827] ( move ua , 2 ; move 4 + ul , 4 + 3 ; move 0 , 0 ) 
[9828] ( move ua , 3 ; loop 0 , 5 , move v0 , ua - 3 ) 
[9829] ( move ua - ul , ua * ua ; move ua / 4 , 4 * 2 ) 
[9830] ( move 2 , ul ; loop 0 , 5 , move v0 , 4 - v0 ) 
[9831] ( loop 0 , 6 , move 4 , v0 ; move v0 , v0 - 3 ) 
[9832] ( loop 0 , 4 , move 3 , ul + v0 ; move ul - v0 , v0 ) 
[9833] ( move 0 , 3 ; loop 0 , 5 , move ua - 3 , v0 ) 
[9834] ( move 4 , ul / ua ; move ul - ua , ua + ul ) 
[9835] ( move 2 , 2 ; loop 0 , 6 , move v0 , v0 * 4 ) 
[9836] ( move ul - ua , 3 ; move 4 , ul ; move ua , ua - ul ) 
[9837] loop 0 , 3 , ( move 4 , v0 ; move 3 , 2 ; v1 = v0 ) 
[9838] ( move ua - ul , ul ; move ul , 3 ; move ua , ua / 3 ) 
[9839] ( move 0 , 4 ; loop 0 , 4 , move 3 , v0 ) 
[9840] loop 0 , 3 , ( move ul , 0 ; move 4 , 2 ) 
[9841] loop 0 , 2 , loop 1 , 3 , move 3 / v1 , v1 
[9842] ( loop 0 , 6 , move ul , v0 / ua ; move v0 , 2 ) 
[9843] ( loop 0 , 5 , move v0 , 4 ; move v0 , ul ) 
[9844] ( move ul , ul / ua ; move 0 - ua , ua * ua ; move ul , ul ) 
[9845] ( move 2 , ul + ul ; move ua + 4 , ul + ul ) 
[9846] ( move ua , ua / 3 ; move 4 + ul , ua + ul ; v0 = 0 ) 
[9847] ( move ua , ua - 3 ; move 2 + ul , 4 + ul ) 
[9848] ( move 4 + 2 , ul / 3 ; move ua , ul ) 
[9849] ( move 0 , 2 ; loop 1 , 5 , move ua , 3 ) 
[9850] ( move 2 , ua / 3 ; move ua + ul , 3 / ua ) 
[9851] ( move ul + ul , ul - 2 ; move ua + ul , ua - 4 ) 
[9852] ( move 3 , ua * ua ; move ua + 3 , ua - 4 ) 
[9853] ( move 3 + ul , ul ; move 0 - ul , ua - ul ; move 4 , ul ) 
[9854] ( move 4 , ua ; move ua - 4 , ul - 3 ) 
[9855] ( move ua , 2 - 3 ; move ul , ul ) 
[9856] ( move ua , ul ; move 2 - 4 , ua - ul ; move 4 , 3 ) 
[9857] ( loop 0 , 5 , move v0 , 2 ; move v0 , ul ) 
[9858] ( move ua - 2 , ul ; move ua - 2 , 4 / ua ) 
[9859] ( move ua - ul , ul + ul ; move ul - ua , 4 + ul ) 
[9860] ( move ul , ul + ul ; move 2 , 4 + 2 ; move ua , 4 + 3 ) 
[9861] ( move ua , ua ; move 0 - 4 , ua - 4 ) 
[9862] loop 0 , 2 , move 4 / v0 , 4 * 2 
[9863] loop 0 , 3 , ( move v0 + v0 , ul ; move v0 , 2 ) 
[9864] ( move ul , ua / 2 ; move ua , ul ; move ul + ul , 2 ) 
[9865] loop 0 , 3 , loop 1 , 2 , move v0 - 3 , v1 
[9866] ( loop 0 , 3 , move 2 + v0 , ul ; move ua - 3 , 0 ) 
[9867] ( move 4 , ua ; loop 0 , ul , move v0 - ua , v0 - ul ) 
[9868] ( loop 0 , 3 , move 2 , ul ; move v0 , v0 * v0 ) 
[9869] loop 0 , 3 , ( move v0 + ul , ua ; move v0 , ul ) 
[9870] ( move 4 , ua + ul ; ( move ua , 4 ; move 4 , ul ) ) 
[9871] ( move ua + ul , ul ; loop 0 , 6 , move v0 , v0 ) 
[9872] loop 0 , 6 , move v0 - ul , 4 / v0 
[9873] ( loop 0 , 4 , move ul , v0 ; move ua , ul + ul ) 
[9874] loop 0 , 5 , move v0 + ul , 4 / v0 
[9875] ( move ua + 3 , ul ; move 3 , ua * ua ) 
[9876] ( loop 0 , 6 , move ul , ul ; move ua , v0 * v0 ) 
[9877] loop 0 , 4 , move 4 , 3 * 3 
[9878] ( move ua , 4 * 2 ; move ul - 4 , ul ) 
[9879] ( move ul - ua , ul ; ( move ul , 4 ; move 3 + ul , ul ) ) 
[9880] ( move ua , ua ; loop 0 , 3 , move ua , 3 ) 
[9881] loop 0 , 7 , move ul - v0 , 2 - v0 
[9882] ( move ua - 2 , 2 ; move 3 - ul , ua - ul ) 
[9883] loop 0 , 3 , ( move v0 , v0 - ul ; move ua , 2 ) 
[9884] loop 0 , 2 , loop 1 , 2 , move 4 , ul + v0 
[9885] ( move 3 , 3 ; move 3 , ua * ua ; move 3 , ul ) 
[9886] ( move 3 , ua * ua ; loop 0 , 4 , move ul , ul ) 
[9887] loop 0 , 3 , move v0 * 4 , 4 / v0 
[9888] ( move 3 , 4 + ul ; move ul - ua , ul ) 
[9889] ( move ua , 4 ; move 2 / ua , ul ; move ua , 2 ) 
[9890] loop 0 , 3 , ( move ul , v0 + v0 ; move 4 , v0 + 3 ) 
[9891] ( loop 0 , 5 , move v0 , ul + v0 ; move v0 , ua ) 
[9892] ( move ua , ua ; move ul + ul , ul ; move ua , ua * ua ) 
[9893] ( move ua - ul , ul / 2 ; move ua , ul - 3 ) 
[9894] ( move ua , ua ; move 2 , 3 * 2 ) 
[9895] ( loop 0 , 5 , move ul - v0 , 4 ; move ul , v0 ) 
[9896] ( move ul , 4 ; move ua , ul / 4 ) 
[9897] ( move 4 / 2 , 4 / ua ; loop 0 , 3 , move v0 , ul ) 
[9898] ( loop 0 , 6 , move v0 , 4 ; move ul , v0 * v0 ) 
[9899] ( move 2 , 2 ; loop 0 , 6 , move v0 , v0 * v0 ) 
[9900] ( loop 0 , 4 , move v0 , 2 ; move 4 , v0 ) 
[9901] ( loop 0 , 5 , move ul , 3 + v0 ; move v0 , ua / v0 ) 
[9902] ( loop 0 , 4 , move ul , 2 ; move 2 , ua ) 
[9903] ( move ua - 2 , ul ; move 4 * 2 , ua / 3 ) 
[9904] ( ( move 4 , 4 ; move ua , ua ) ; move 4 , 4 ) 
[9905] ( move ua - ul , 4 + ul ; loop 0 , 4 , move v0 , 2 ) 
[9906] ( move ua - 4 , ua ; move ua , ul ; move 4 , ul - 3 ) 
[9907] ( loop 0 , 4 , move 2 , ul ; move ul - v0 , ul ) 
[9908] loop 0 , 6 , move 2 , 4 / ua 
[9909] ( loop 0 , 5 , move ul , v0 + 3 ; move v0 , v0 ) 
[9910] loop 0 , 2 , ( move ul , 3 * v0 ; move ua , v0 ) 
[9911] ( loop 0 , 4 , move v0 , v0 ; move ul - v0 , v0 ) 
[9912] ( move 3 - ua , 4 + ul ; move ua - ul , ul ) 
[9913] ( loop 0 , 3 , move v0 , ul ; move v0 - ua , ul - 2 ) 
[9914] ( loop 0 , 4 , move 4 + v0 , v0 ; move 2 , ul ) 
[9915] ( move ua + ul , ua ; move 2 - ua , ul - ua ) 
[9916] ( loop 0 , 5 , move v0 , 2 * v0 ; move ua , v0 ) 
[9917] ( move ua , ua ; move 4 , 3 - 2 ; move ul , ul ) 
[9918] ( move 2 , 4 ; move ua , ul / 2 ) 
[9919] loop 0 , 6 , move ua / 4 , 4 - v0 
[9920] ( move ul - ua , ul / ua ; move 3 + ul , ua + ul ) 
[9921] loop 0 , 2 , move 4 - v0 , ua * ua 
[9922] ( ( move ua , 2 ; move 0 - 4 , ul ) ; move 2 , ul ) 
[9923] ( move ul , 2 ; loop 0 , 2 , loop 1 , ul , move 4 * 2 , 4 ) 
[9924] loop 0 , 3 , move 2 - ua , v0 + 2 
[9925] ( move 2 , ua ; move ul , ul / 2 ; move 3 , ua ) 
[9926] ( move ul - ua , ua + ul ; move 3 , ua ; move ua , ul ) 
[9927] ( move 4 , ul / 2 ; loop 0 , 3 , move 4 , ul ) 
[9928] loop 0 , 2 , move 3 + v0 , v0 + 4 
[9929] ( move ua , ul / 2 ; loop 0 , 3 , move v0 - ua , v0 ) 
[9930] loop 0 , 3 , move ua + ul , ua / 3 
[9931] ( move 4 , ul ; move 2 - ua , 4 ) 
[9932] ( ( move 4 * 2 , ua * ua ; move ul , ul ) ; move ua , ul ) 
[9933] ( move 4 , 2 ; loop 0 , 8 , v1 = ul ; move v0 , v0 ) 
[9934] ( move ua , 3 ; v0 = 0 ; loop 1 , 6 , move v1 , 4 ) 
[9935] loop 0 , 6 , move v0 - 2 , ul - v0 
[9936] loop 0 , 3 , ( move 4 , ul ; loop 1 , ul , move v1 , 2 ) 
[9937] ( v0 = 4 ; move v0 , 3 + v0 ; move v0 , v0 ) 
[9938] ( move ua , ua - 2 ; v0 = 2 - ua ; move v0 , v0 ) 
[9939] ( move ua + 2 , 3 * 2 ; move ua , 3 ) 
[9940] ( loop 0 , 6 , move ul + v0 , v0 ; move ua , v0 - ul ) 
[9941] ( move ul - ua , ua ; move 4 , ua * ua ) 
[9942] loop 0 , 3 , move 3 - v0 , 3 + 2 
[9943] loop 0 , 6 , move v0 / 2 , ua - v0 
[9944] ( move ul , 3 + 2 ; loop 0 , 4 , move v0 , v0 / ua ) 
[9945] ( move ua + ul , ul ; move ul - ua , ul - 2 ) 
[9946] ( move ul / 2 , 3 ; loop 0 , 5 , move 4 - v0 , ul ) 
[9947] ( move 0 - ul , ua + ul ; loop 0 , 6 , move ua , 4 ) 
[9948] ( move ua + 2 , ua + ul ; move 4 , ul + ul ; move ul , ul ) 
[9949] ( move 3 , 4 ; loop 0 , 6 , move v0 , v0 * v0 ) 
[9950] loop 0 , 3 , ( move ul , 0 ; move 3 , ul / v0 ) 
[9951] ( move ua + ul , 4 + ul ; move ua , 3 ; move ua , 2 ) 
[9952] ( move 3 - ua , ua ; loop 0 , 5 , move v0 , 3 ) 
[9953] ( loop 1 , 4 , move ul , ul ; move 3 , 2 ) 
[9954] ( move ua , ua ; move ua + ul , ua * ua ; move 4 , ul ) 
[9955] loop 0 , 4 , move 4 , ua - v0 
[9956] ( move 3 * 2 , ul - ua ; loop 0 , 6 , move v0 , v0 ) 
[9957] ( move ul , 3 ; move 3 , 2 ; move 4 , 4 / 3 ) 
[9958] loop 0 , 3 , ( move v0 + v0 , ul - ua ; move 4 , v0 ) 
[9959] loop 0 , 7 , move ul - ua , ua - 2 
[9960] ( move ua , 0 - ua ; move ul - 4 , ua - 4 ; move ul , ua ) 
[9961] ( loop 0 , 4 , move v0 , 2 ; move v0 , v0 / ua ) 
[9962] ( move ul , ul ; move ua , ul / 4 ; move ua , ua * ua ) 
[9963] loop 0 , 5 , move 2 , 4 * 3 
[9964] ( move 3 * 3 , ul ; loop 0 , 5 , move ua , 4 ) 
[9965] ( move ua , ul ; v0 = ua - 2 ; move v0 , v0 * v0 ) 
[9966] ( move ua + ul , 4 ; move ua + 2 , ul - 4 ) 
[9967] loop 0 , 3 , ( move v0 , 0 ; move ua , 3 + ul ) 
[9968] ( move 4 + ul , ua ; move ua , ul ; move 4 , ul ) 
[9969] loop 0 , 7 , move v0 - 2 , v0 * v0 
[9970] ( move 2 , ul ; move ua + ul , 4 ) 
[9971] loop 0 , 3 , move ua / v0 , 3 / v0 
[9972] ( move ua + 2 , ua ; move 3 , ua * ua ) 
[9973] ( move ul / ua , 0 ; move 3 , 3 / ua ; move ul - ua , 4 ) 
[9974] loop 0 , 2 , ( move ul , ul ; move 4 , v0 ) 
[9975] ( ( move ua , 2 ; move 3 , ua ) ; move 2 - ua , ul / ua ) 
[9976] ( move ul , ul ; loop 0 , 6 , move ua / 3 , v0 + ul ) 
[9977] ( ( move 0 , 3 ; move 3 , ua + ul ) ; move 3 , ua / 4 ) 
[9978] ( move 3 * 3 , ul ; loop 0 , 6 , move v0 , v0 ) 
[9979] ( loop 0 , 6 , move ul , ul - v0 ; move v0 , 4 ) 
[9980] loop 0 , 2 , ( move v0 - ua , 3 ; move ul , v0 ) 
[9981] loop 0 , 6 , move ul - 3 , ua - 2 
[9982] ( move 4 + ul , ul + ul ; move 4 , 2 ) 
[9983] ( move 4 , 4 / 3 ; move ua , 2 - ua ) 
[9984] ( move 2 , 4 ; move ua , ua + ul ; move ul , 2 ) 
[9985] ( move ua , 4 / 3 ; move ua , 4 ) 
[9986] ( move 0 - ua , ul / 2 ; move ua , ul ) 
[9987] ( loop 0 , 6 , move 4 , v0 ; move v0 , v0 + v0 ) 
[9988] ( move 4 * 2 , ua - 4 ; move ua , 3 ) 
[9989] ( move ua , ua * ua ; move ua , ul ; move ul , ua + ul ) 
[9990] ( move 3 , ua / 3 ; loop 0 , 3 , move 4 , ul ) 
[9991] ( move ua , 0 ; move 4 , 2 ; loop 0 , 5 , move ul , v0 ) 
[9992] ( move 3 / ua , ul ; move ua , ul - ua ; move 4 , ul + ul ) 
[9993] loop 0 , 5 , move v0 + ul , v0 / 3 
[9994] ( move 3 , ul ; move ul , 3 ; move ul - ua , ua + ul ) 
[9995] ( move 4 , ul ; move 0 - ua , 4 + 4 ) 
[9996] ( loop 0 , 4 , move 2 , v0 ; move ul , 0 ) 
[9997] ( move ua - ul , ua ; move 3 , ul - 4 ; move ul , ul ) 
[9998] ( move ua - 3 , 0 ; move ul , ul ; move ul - ua , ul ) 
[9999] ( move ua , 4 ; loop 0 , 4 , move v0 + v0 , ul ) 
[10000] loop 0 , 3 , ( move v0 , ua ; move ua , ul + ul ) 
[10001] ( move 4 , 4 ; move 3 , 2 ) 
[10002] ( move ua , 0 ; loop 0 , 6 , move v0 - 4 , v0 ) 
[10003] ( move ua , ua * ua ; move ua , ua * ua ; move 4 , ul ) 
[10004] ( move ua , 4 ; loop 0 , 3 , move ul , v0 - ul ) 
[10005] ( move ua , ua ; loop 0 , 5 , move v0 , 4 + v0 ) 
[10006] ( v0 = ua + 4 ; move ua , v0 / ua ; move ua , v0 ) 
[10007] loop 0 , 2 , loop 1 , 2 , move ua , v0 - 4 
[10008] loop 0 , 2 , ( move ul - ua , 3 * v0 ; move v0 , v0 ) 
[10009] ( move 4 , 0 - ul ; ( move 2 , ul ; move ua , ul ) ) 
[10010] ( move ua , ua * 3 ; loop 0 , 3 , move v0 , ua - v0 ) 
[10011] ( move ua , ua ; move ul , ul ; move 3 , ul - 3 ) 
[10012] ( move ua , ua - ul ; loop 0 , 4 , move v0 , v0 ) 
[10013] loop 0 , 3 , ( v1 = 2 ; move v1 , 3 ; move 3 , ul ) 
[10014] ( move ul , ul / 2 ; loop 0 , 6 , move v0 , v0 * v0 ) 
[10015] ( loop 0 , 3 , move 4 , v0 ; move 4 , ua ) 
[10016] ( move ul - ua , ua + ua ; move ua - ul , 2 - 3 ) 
[10017] ( loop 0 , 4 , move v0 , 4 ; move ua , v0 ) 
[10018] ( move ul , ua ; move ua , 4 + ul ; move 3 , ua + 2 ) 
[10019] ( move 2 , 0 ; move ua , ul ; move ua , 4 ) 
[10020] loop 0 , 3 , move ul - ua , 3 - v0 
[10021] ( loop 0 , 5 , move v0 , 4 + ul ; move v0 - ua , v0 ) 
[10022] ( loop 0 , 6 , move ul , ul / 3 ; move 2 - v0 , v0 ) 
[10023] ( move ua , ua ; loop 0 , 6 , move ul , ua / v0 ) 
[10024] ( loop 0 , 5 , move v0 , 3 ; move ul , ul ; move ua , ul ) 
[10025] ( loop 0 , 4 , move ul + ul , v0 ; move ua , ul ) 
[10026] ( move ul , ul - 2 ; loop 0 , 6 , move v0 , v0 * v0 ) 
[10027] ( move ua , 3 ; move 4 , ul - 3 ) 
[10028] loop 0 , 7 , ( v1 = 4 - v0 ; move v1 , v1 ) 
[10029] ( move 4 , ua * ua ; move 3 , 4 ; v0 = ul ) 
[10030] ( loop 0 , 8 , v1 = 2 ; loop 2 , 5 , move v1 , v0 ) 
[10031] ( move ua , ul ; move ua , 4 ; loop 0 , 4 , move v0 , v0 ) 
[10032] ( v0 = ua / 4 ; loop 1 , 5 , move 4 * 2 , v0 ) 
[10033] ( move ua + 2 , 3 ; move 4 - ua , ul ) 
[10034] loop 0 , 2 , move v0 - ua , 3 / ua 
[10035] ( move 4 * 2 , ul ; move 3 , ul - 2 ) 
[10036] ( v0 = 4 + ul ; move v0 , v0 + ul ; move v0 , ul ) 
[10037] loop 0 , 3 , ( move ul , ua ; move 3 , ul ) 
[10038] ( move ua , ua ; move ua + 4 , 4 ) 
[10039] ( move ua + ul , 2 ; move ul - ua , 3 + ul ) 
[10040] ( move 2 - 4 , 0 ; loop 0 , 4 , move v0 , ul ) 
[10041] ( move ua , ua * ua ; move ul - ua , 3 + ul ) 
[10042] ( move ua - ul , ua * ua ; move ua - ul , ul ; v0 = ua ) 
[10043] ( loop 0 , 6 , move ul , v0 ; move v0 , ua - ul ) 
[10044] ( move ua , ua ; move ua , ua + 4 ; move ul , 2 ) 
[10045] ( loop 0 , 3 , move 3 - v0 , v0 ; move 3 + ul , 4 ) 
[10046] ( loop 0 , 5 , move v0 , v0 * v0 ; move v0 , 3 ) 
[10047] ( move ua + 2 , ul ; move 4 , 4 + ul ) 
[10048] ( move ul , 2 ; loop 0 , 4 , move ua - ul , v0 ) 
[10049] ( move 2 , ua ; move 2 , ul ; move ua , 4 ) 
[10050] ( move ua , 3 + 2 ; loop 0 , 6 , move v0 + ul , v0 ) 
[10051] ( move ua , ul / 3 ; move ua - ul , 4 / ua ; move ul , ul ) 
[10052] ( v0 = 4 - ua ; loop 1 , 3 , move v0 , v0 + v1 ) 
[10053] ( loop 0 , 5 , move v0 , v0 + v0 ; move ul , v0 ) 
[10054] ( move ua / 2 , ul - ua ; move ul , ul ; move ua , ul / ua ) 
[10055] ( move ua , ua * ua ; loop 0 , 3 , move v0 , 2 ) 
[10056] loop 0 , 3 , ( move v0 + ua , 3 ; move v0 , v0 ) 
[10057] ( move 0 - ua , ua ; loop 0 , 3 , move v0 , ul ) 
[10058] ( loop 0 , 5 , move ua , 4 ; move v0 , ua * ua ) 
[10059] ( move ua , 4 / ua ; move ua , ua - 3 ) 
[10060] ( move ua , 3 ; ( move ua - 4 , ul ; move 4 , ul + ul ) ) 
[10061] loop 0 , 2 , move v0 - ua , ul / 2 
[10062] ( move 4 , ua ; move ua , ul ; move 2 * 2 , ul ) 
[10063] ( move 4 , 4 * 3 ; move 4 , ul ) 
[10064] loop 0 , 7 , move v0 - ul , ua / 3 
[10065] ( move ul , 0 ; loop 0 , 4 , move 3 , v0 ) 
[10066] loop 0 , 3 , ( move v0 , v0 - ul ; move 4 , ul + ul ) 
[10067] ( move 4 , 3 / ua ; move 4 , 4 ) 
[10068] ( move ua , 4 ; move 4 , ua / 4 ) 
[10069] loop 0 , 4 , move ua / 4 , ul / v0 
[10070] loop 0 , 3 , move ul - ua , 3 + v0 
[10071] ( move ua - 2 , ua - ul ; loop 0 , 6 , move v0 , 2 ) 
[10072] ( move 3 - ua , 0 ; loop 0 , 5 , move v0 , ul ) 
[10073] ( move ua , 3 * 2 ; move ul - ua , ul ) 
[10074] ( loop 0 , 3 , move ua , 2 ; move 3 , ua ) 
[10075] ( move ua , ua * ua ; move ua , 4 ; move 3 , ua ) 
[10076] ( move 4 , ul / 3 ; move 3 , ul ; move ua , ul ) 
[10077] ( move ua - ul , 4 ; move ua , ul - 3 ; move ul + ul , ua ) 
[10078] ( v0 = 3 - ua ; loop 1 , 3 , move v0 , v1 - 2 ) 
[10079] ( move ul / 4 , 4 * 2 ; loop 0 , 3 , move 4 , v0 ) 
[10080] ( ( move 3 , 0 - ul ; move ul - ua , ul ) ; move ul , ul ) 
[10081] ( v0 = 2 ; loop 1 , 6 , move v1 - 2 , v1 - ul ) 
[10082] ( loop 0 , 6 , move ul , ua / v0 ; move ua , ul ) 
[10083] ( move ua , 0 ; loop 0 , 5 , move v0 + ul , 3 ) 
[10084] loop 0 , 5 , ( v1 = ul / 3 ; move v1 - 4 , ul ) 
[10085] ( move 2 , 2 ; move ua , 2 ; move 3 , ul ) 
[10086] ( move ul - ua , ua * ua ; move ul - 4 , ul ) 
[10087] ( move 4 , 0 ; move 3 + 3 , ua * ua ) 
[10088] ( loop 0 , 3 , move 2 , v0 + ul ; move ua , v0 ) 
[10089] loop 0 , 7 , move ul - 3 , v0 + 3 
[10090] ( loop 0 , 4 , move v0 , ul - 2 ; move ul - v0 , ul ) 
[10091] loop 0 , 4 , move v0 - ua , ua / 3 
[10092] ( loop 0 , 6 , move ul + ul , ul ; move 4 , v0 ) 
[10093] ( ( move ua , ul - ua ; move ul - 2 , ul ) ; move ua , ul ) 
[10094] ( move ua + 3 , 2 ; move 2 , 2 ) 
[10095] ( move ua + ul , ua * ua ; loop 0 , 5 , move 3 , ul ) 
[10096] ( ( move 3 , 4 + ul ; move ul , ul ) ; move ua , ul ) 
[10097] ( loop 0 , 5 , move v0 , ua - v0 ; move ua , v0 ) 
[10098] ( loop 0 , 5 , move v0 , v0 ; move ul , ua ; move 2 , ul ) 
[10099] loop 0 , 3 , loop 1 , 2 , move ul - 3 , v0 
[10100] loop 0 , 2 , loop 1 , 3 , move 3 , ul + v0 
[10101] loop 0 , 5 , move ul - 2 , v0 * v0 
[10102] ( move ua , ua ; move 3 , ua - 4 ; move 4 , ua + ul ) 
[10103] ( move ua , ul ; move ul - ua , ul ; move 2 , 3 ) 
[10104] ( move ua , 4 ; loop 0 , 6 , move ul + v0 , v0 ) 
[10105] ( move ua , ul ; move ua - 2 , 2 ) 
[10106] loop 0 , 2 , move ua - v0 , 3 / ua 
[10107] loop 0 , 3 , ( move v0 + v0 , ul ; move 3 , ul ) 
[10108] ( loop 0 , 6 , move ul , v0 - ua ; move ul - v0 , 2 ) 
[10109] ( move ua , 2 + ul ; move ul , 4 ; move ua , ul ) 
[10110] ( move ua , 2 + ul ; loop 0 , 6 , move ul , ul - v0 ) 
[10111] ( move ua , 3 ; move ul , ua ; move ul - 3 , 2 ) 
[10112] ( ( move ul , 2 ; move ua + 3 , 2 ) ; move 2 , ul ) 
[10113] loop 0 , 3 , ( v1 = 3 ; move v1 , 2 ; move ua , v0 ) 
[10114] ( move 3 , ua - 3 ; ( move ul , ua ; move ua , ul - 3 ) ) 
[10115] loop 0 , 3 , ( move ul , 4 - v0 ; move ua , v0 ) 
[10116] loop 0 , 3 , loop 1 , 2 , move 3 , ul / v0 
[10117] ( move ua / 3 , 3 ; move ua / 3 , 3 + 2 ) 
[10118] loop 0 , 3 , ( move v0 - 4 , v0 ; move v0 , ul ) 
[10119] ( move 2 , 4 ; move ua , 4 + ul ; move ul , 4 ) 
[10120] ( move ua , 2 ; move ul , ua / 4 ; move ua - ul , ul ) 
[10121] loop 0 , 4 , move ul - v0 , v0 / 3 
[10122] ( move ua , ua ; move 4 + 2 , ua * ua ) 
[10123] ( move ul , 4 - ul ; loop 0 , 5 , move 3 , 4 ) 
[10124] ( move 4 + ul , ul ; move ua + ul , 2 ) 
[10125] ( move ul , ua * ua ; move ua , 0 - 4 ; move ua , 2 + ul ) 
[10126] ( v0 = ua + 2 ; move v0 , v0 ; move ua , v0 ) 
[10127] ( loop 0 , 6 , move 3 , ul - v0 ; move v0 , ua ) 
[10128] ( move 4 , ua ; v0 = 4 / 3 ; move 4 , v0 ) 
[10129] ( move 3 , ua + ul ; move ul - 2 , ul ; move 3 , ua ) 
[10130] ( loop 0 , 3 , move ua , 3 ; move v0 , ua ) 
[10131] ( move ul - ua , 4 + 3 ; move ua , ua - ul ) 
[10132] loop 0 , 4 , move ul - 3 , 2 / v0 
[10133] loop 0 , 2 , move v0 - ua , v0 - 3 
[10134] ( move ua , ul ; move 2 , 2 ; move ua , ul ) 
[10135] ( ( move 2 , ul ; move ua , ul ) ; move ul - ua , ul ) 
[10136] ( move ua - ul , ua - ul ; loop 0 , 2 , move ua , 4 ) 
[10137] ( move ul - ua , ul ; move 3 , ul ; move 4 , ul ) 
[10138] loop 0 , 3 , loop 1 , 2 , move 3 , v0 + ul 
[10139] ( loop 0 , 6 , move 3 , v0 ; move 3 , 0 ) 
[10140] ( loop 0 , 3 , move ul , ul ; loop 1 , 3 , move ua , v0 ) 
[10141] ( move 4 , 3 - ul ; loop 0 , 5 , move ul , v0 / ua ) 
[10142] ( ( move ua , 3 / ua ; move ul , ul ) ; move ul , ul - ua ) 
[10143] ( move ua , ul - 2 ; ( move 2 , ul ; move ua , 2 ) ) 
[10144] ( move ua - ul , 3 ; loop 0 , 5 , move v0 , v0 ) 
[10145] ( move 4 , ua * ua ; move ua + 2 , ul ) 
[10146] loop 0 , 6 , move ua - 2 , 2 
[10147] ( move ua , ua - 4 ; move 2 - ua , 4 ) 
[10148] ( move ul - ua , 0 - ul ; move 2 + ul , 4 ) 
[10149] loop 0 , 3 , move 2 , 4 - v0 
[10150] ( ( move 3 , 4 + 4 ; move ul , 3 ) ; move 4 , ul ) 
[10151] ( move ua - 4 , 4 ; move 2 , 4 ; move ul - ua , ul ) 
[10152] ( move 4 , ua + ua ; loop 0 , 5 , move v0 , v0 / ua ) 
[10153] ( loop 0 , 4 , move v0 , v0 * v0 ; move v0 , 2 ) 
[10154] ( loop 0 , 6 , move ul , v0 * v0 ; move v0 , 2 ) 
[10155] loop 0 , 3 , ( move v0 - ua , ul ; move v0 , ul / v0 ) 
[10156] ( move ul - ua , ul / ua ; loop 0 , 3 , move ul , v0 ) 
[10157] ( loop 0 , 6 , move v0 , 4 ; move 3 , 0 ) 
[10158] ( loop 0 , 4 , move 3 , v0 ; move v0 , v0 + v0 ) 
[10159] ( move 4 , 0 ; loop 0 , 4 , move v0 * v0 , ul - v0 ) 
[10160] ( move ul , 4 ; move ua , 0 - 2 ) 
[10161] ( v0 = 3 / 4 ; loop 1 , 2 , move ua - 2 , v0 ) 
[10162] ( move ua , ul ; move 2 + 2 , 4 * 3 ; move ul , 0 ) 
[10163] ( loop 0 , 6 , move 3 , 2 ; move v0 , 2 ) 
[10164] ( move ua , ul ; move 4 , ua - 3 ) 
[10165] ( move ul , 3 / ua ; move ua , ul ) 
[10166] loop 0 , 2 , loop 1 , 2 , move ul - 3 , v1 
[10167] ( move ua + ul , ul ; move 3 + ul , 4 + ul ) 
[10168] ( move 0 - ua , ua ; move ua , ul - 2 ) 
[10169] ( move 2 , 3 + ul ; loop 0 , 4 , move v0 , 4 ) 
[10170] ( move ua - ul , 0 - ul ; move ul - 4 , ua + 4 ) 
[10171] ( move ul , 4 ; move ul - ua , ul ; move ua , ul ) 
[10172] ( move 2 , ua - ul ; move 0 , 4 ; move ua , 3 ) 
[10173] loop 0 , 5 , move 2 + ul , 3 / 2 
[10174] ( move ua - ul , ul ; loop 0 , 3 , move v0 * v0 , ul ) 
[10175] loop 0 , 3 , ( move ul + v0 , v0 ; move v0 , ul ) 
[10176] ( loop 0 , 3 , move v0 , ul ; move v0 - ua , v0 ) 
[10177] ( move ul - ua , ul / 3 ; move 4 + ul , ul / ua ) 
[10178] ( move 4 - ul , ua + 2 ; move 4 , 4 + ul ) 
[10179] loop 0 , 3 , ( move 2 - 4 , v0 ; move v0 , 2 ) 
[10180] loop 0 , 7 , move v0 - ua , 4 * 2 
[10181] ( move ua , 4 + 3 ; move 4 , ul - 3 ) 
[10182] ( loop 0 , 4 , move v0 , 4 ; move v0 , v0 / 2 ) 
[10183] ( ( move ua , ul ; move ua / 4 , ul ) ; move ua , 3 ) 
[10184] ( move ul , ua + ul ; loop 0 , 5 , move v0 + ul , ua + 4 ) 
[10185] ( move 4 + ul , ua ; loop 0 , 4 , move 3 , ua + ul ) 
[10186] ( ( move 3 , 4 ; move ua / 3 , 2 ) ; move ua / 2 , ul ) 
[10187] ( move ua , 2 + ul ; move 4 + 4 , 2 ) 
[10188] loop 0 , 2 , move ua - 2 , ua + 2 
[10189] ( move ua , ua + ul ; move ua , 3 ; move 3 , 2 ) 
[10190] ( move ua , ua - 2 ; move ul - ua , 2 ) 
[10191] ( move ul , ul ; loop 0 , 5 , move 4 , v0 ) 
[10192] ( move 2 , ul - 4 ; loop 0 , 5 , move 2 , v0 ) 
[10193] loop 0 , 3 , ( move ul , 2 + v0 ; move v0 * v0 , 2 ) 
[10194] ( move ua , 0 ; loop 0 , 6 , move ua , 2 ) 
[10195] loop 0 , 3 , ( move v0 * v0 , ul ; move v0 , 4 ) 
[10196] ( move ua , 3 ; move ul , ul - ua ; move 3 * 2 , ul ) 
[10197] loop 0 , 6 , move ul , 4 / ua 
[10198] ( move 2 , ua ; move ua , ua + ua ; move 2 - ua , 4 + ul ) 
[10199] ( move ul , ua ; move ua , ul - 2 ; move 3 - ua , ul - 4 ) 
[10200] ( move 3 , ua ; loop 0 , 4 , move v0 * v0 , v0 - ul ) 
[10201] ( move ul , ua ; move ua , 3 / ua ; move 4 , ua + ul ) 
[10202] ( move ul + ul , 4 ; loop 0 , 3 , move 3 , ul ) 
[10203] ( loop 2 , 5 , move ua , 3 ; move v2 , 4 / 2 ) 
[10204] ( move 4 + 3 , ua ; move ua , 4 + ul ) 
[10205] ( loop 0 , 3 , move 3 , v0 ; move 4 , ua / v0 ) 
[10206] ( move ua + ul , ul - 3 ; move ul - 4 , ul ) 
[10207] ( move 3 , ul ; loop 0 , 6 , move 2 , v0 ) 
[10208] ( move 0 - ua , ul ; move ua + 2 , ul ) 
[10209] ( loop 0 , 4 , move v0 , ul ; move v0 - ua , v0 ) 
[10210] loop 0 , 4 , move v0 * v0 , v0 * 3 
[10211] ( move 2 , ul / 4 ; move 4 , 2 - 3 ) 
[10212] loop 0 , 3 , ( move ul - ua , v0 ; move v0 , ul / v0 ) 
[10213] loop 0 , 2 , move v0 - ua , v0 + 3 
[10214] ( loop 0 , 3 , move 4 / v0 , ul ; move ua , v0 ) 
[10215] ( move 4 , ua ; move 3 - ua , 4 + ul ) 
[10216] ( move 4 , ul ; ( move ul , ul ; move 3 , ul ) ) 
[10217] ( loop 0 , 6 , move ul - ua , v0 ; move v0 , ul ) 
[10218] ( loop 0 , 3 , move v0 , 4 ; move 3 , v0 ) 
[10219] ( move ul + ul , 3 + 2 ; loop 0 , 6 , move 3 , v0 ) 
[10220] ( move ua - 4 , ul ; move ua , ua * ua ; v0 = 0 ) 
[10221] ( loop 0 , 5 , move v0 - 2 , v0 ; move ua + ul , v0 ) 
[10222] ( move ua + 2 , 4 ; move 4 , ul - 3 ) 
[10223] ( move 3 , 4 ; move ua + 2 , 2 ) 
[10224] loop 0 , 7 , move v0 - ul , 4 + ul 
[10225] loop 0 , 2 , loop 1 , 3 , move 3 , ul + v1 
[10226] ( move ua , 0 - ul ; v0 = ul / ua ; move ua , v0 - 2 ) 
[10227] ( move 2 , ua + ul ; loop 0 , 5 , move v0 , v0 - ul ) 
[10228] ( move ua , 0 ; move ul / 3 , ua ; move ua , ul + ul ) 
[10229] ( move ua - ul , ul / 2 ; move 2 , ul ) 
[10230] ( v0 = 4 * 4 ; loop 1 , 5 , move v1 , v0 / ua ) 
[10231] ( move ua - ul , ul ; move ua , 3 / 2 ; v0 = ul / ua ) 
[10232] ( loop 0 , 6 , move 3 , v0 ; move 4 , ua ) 
[10233] ( move ua - ul , ua ; loop 0 , 6 , move ul , ul ) 
[10234] ( loop 0 , 5 , move v0 + v0 , v0 ; move ul , ul ) 
[10235] ( move 4 + 4 , ua * ua ; move 4 , 3 + ul ) 
[10236] ( move ua , ul / ua ; loop 0 , 6 , move v0 , v0 ) 
[10237] ( move ua + 2 , ua ; move ua , 2 ; move 2 , ul ) 
[10238] ( move ua , ua ; loop 0 , 6 , move v0 + ul , 2 ) 
[10239] ( move 2 , ua ; loop 0 , 3 , move 2 , ul ) 
[10240] ( move ua - ul , 2 ; move 2 , 4 + 3 ; move ul , ul / 3 ) 
[10241] loop 0 , 4 , move v0 - ul , ul 
[10242] ( move 2 , 0 ; ( move ul , ul ; move 4 , 4 + ul ) ) 
[10243] loop 0 , 5 , move v0 - ul , v0 + 3 
[10244] ( move ua + 4 , ua / 3 ; move ul , ul ) 
[10245] ( move ua , 3 ; loop 0 , 5 , move 2 , ul ) 
[10246] ( loop 0 , 6 , move ua , ul - 3 ; move 4 / 2 , ua ) 
[10247] ( loop 0 , 4 , move ul , v0 ; move 0 - ua , ua + v0 ) 
[10248] ( move 3 - ua , ua ; loop 1 , 4 , move v1 , 3 ) 
[10249] ( loop 0 , 3 , move ul , 3 ; move ua , v0 * v0 ) 
[10250] loop 0 , 3 , ( move 3 , v0 * v0 ; move ul , 4 ) 
[10251] ( move ul , ua - ul ; move 3 , 4 ; move ua , ul ) 
[10252] ( move 4 , 3 / 2 ; move ua , 4 + ul ) 
[10253] ( loop 0 , 5 , move 4 , v0 ; move ua , ua ) 
[10254] ( move ua , 4 / ua ; loop 0 , 5 , move v0 , v0 ) 
[10255] ( move ua , ul ; move 4 + ul , ua * ua ) 
[10256] ( move ua , 2 ; loop 0 , 4 , move ul , ul ) 
[10257] ( move 0 - 2 , ul ; move ua + 2 , 3 ) 
[10258] ( move ua , 4 ; move ua + ul , ua / 3 ) 
[10259] loop 0 , 5 , move ul - 4 , ua - v0 
[10260] ( loop 0 , 6 , move ua , 3 ; move ua , 2 ) 
[10261] loop 0 , 7 , move ul + v0 , v0 / 3 
[10262] loop 0 , 2 , ( move 3 , v0 ; move 2 * v0 , 4 ) 
[10263] loop 0 , 2 , ( move 4 , v0 ; move v0 + v0 , 2 / 3 ) 
[10264] ( move 0 - ua , ua ; move ua , ul ; move 4 , ul ) 
[10265] ( move 2 , ul ; loop 0 , 5 , move ul , ul ; move v0 , v0 ) 
[10266] ( loop 0 , 6 , move ul , v0 ; move 3 , ul - v0 ) 
[10267] ( move ua , ua ; loop 0 , 5 , move v0 , 4 - v0 ) 
[10268] ( move ua - ul , ua ; v0 = ul ; move v0 - ua , 0 - ul ) 
[10269] ( move ua , ua / 4 ; move 3 , 4 + ul ) 
[10270] loop 0 , 6 , move ul - 4 , 3 / v0 
[10271] ( loop 0 , 3 , move v0 , v0 ; move ua , ua - ul ) 
[10272] ( move ul - ua , ua ; move 4 , ua - 4 ; move ul , ua ) 
[10273] ( move ua , ua / 3 ; move ua + 2 , ua + 2 ) 
[10274] ( move ua + 2 , 3 ; move ua , 4 * 4 ) 
[10275] loop 0 , 5 , move ul - ua , ul - 4 
[10276] ( move 2 , ul ; loop 0 , 4 , move v0 + ul , v0 ) 
[10277] ( move 4 + ul , 4 + ul ; move ua , 2 ; v0 = 3 ) 
[10278] ( move ua , 4 + ul ; move 2 , ua ; move ua , 4 ) 
[10279] ( loop 0 , 5 , move 2 , ul - ua ; move v0 , ua - v0 ) 
[10280] ( move 3 , 2 ; move ua + ul , ua + 2 ; move 4 , 0 ) 
[10281] loop 0 , 3 , ( move v0 , v0 ; move ua - ul , ul / ua ) 
[10282] ( move 3 - ua , ul ; loop 0 , 6 , move v0 , ul ) 
[10283] loop 0 , 5 , move ul - 4 , 4 / v0 
[10284] ( move ua - ul , ua ; move 2 , ul ; move ua , 4 ) 
[10285] ( ( move 4 , 4 + ul ; move ul , ua ) ; move ua , 3 ) 
[10286] ( move ua , 3 ; loop 0 , 2 , move 3 , ul ) 
[10287] ( move ua , ul + ul ; move ua - ul , ul ; move ul , 4 ) 
[10288] ( move ua + ul , ul ; ( move ua , 4 ; move ul , ul ) ) 
[10289] loop 0 , 7 , move ul + v0 , ua / 3 
[10290] ( move ua - ul , ul ; move ul - ua , ul / 2 ) 
[10291] loop 0 , 3 , ( move v0 , ul / 3 ; move v0 , 2 ) 
[10292] ( ( move ul , 2 + ul ; move ua + ul , ul ) ; move ua , 3 ) 
[10293] loop 0 , 2 , ( move 4 + v0 , v0 ; move 3 , v0 + 2 ) 
[10294] ( move 4 - ua , ua ; v0 = ul ; move v0 - ua , ul ) 
[10295] loop 0 , 7 , move v0 - 3 , ul / v0 
[10296] ( move ua - ul , ua ; ( move 2 - ua , ul ; move ua , 2 ) ) 
[10297] ( move ua , ua - 3 ; v0 = 0 - 2 ; move 4 , v0 ) 
[10298] ( move ul , ul / 2 ; loop 0 , 6 , move v0 , ul ) 
[10299] ( loop 0 , 5 , move 3 + ul , 2 ; move 4 , v0 ) 
[10300] ( move ul - 4 , ul - 2 ; move 2 , ua ; move ua , ua * ua ) 
[10301] loop 0 , 5 , move 4 + ul , ua * ua 
[10302] ( move ua , ua / 4 ; move 2 , 0 - ul ) 
[10303] ( move ul , 3 - ua ; move ua , 4 + ul ; move ua , ul ) 
[10304] ( loop 0 , 6 , move 2 , ua - v0 ; move v0 , v0 ) 
[10305] ( move ua , ua + 3 ; move ul - ua , ul ; move ua , 3 * 2 ) 
[10306] ( loop 0 , 6 , move ul , ul ; move v0 , v0 * 2 ) 
[10307] ( move ua + 4 , ul - 2 ; move 3 , ua * ua ) 
[10308] ( loop 0 , 5 , move v0 , v0 + v0 ; move ua , 3 ) 
[10309] ( move ua , ua ; move ul , ua * ua ; move ua , 4 + 3 ) 
[10310] ( move ua + ul , ul ; move ul , 2 ; move ua + ul , ul ) 
[10311] loop 0 , 3 , ( move v0 , 4 ; move v0 , ul ) 
[10312] loop 0 , 3 , ( move v0 , ua - v0 ; move v0 , v0 ) 
[10313] ( move ua , ua ; move 4 - ua , ul ; move ua , ul ) 
[10314] ( move 2 - ua , 3 ; move 2 , 4 ) 
[10315] loop 0 , 3 , ( move 2 - ua , ua / 4 ; move v0 , v0 ) 
[10316] ( move ua + ul , ul - 4 ; move 3 , ul ) 
[10317] ( move ul , ua ; move ua , ua / 3 ; move 3 , ul ) 
[10318] ( move ul - 4 , ua * ua ; v0 = ua + ul ; move ua , v0 ) 
[10319] loop 0 , 3 , loop 1 , 2 , move v0 + v0 , 3 - ul 
[10320] ( loop 0 , 2 , move ua - ul , ul + v0 ; move v0 , ul ) 
[10321] ( move ul , ul ; ( move ua + ul , 2 ; move 3 , 4 ) ) 
[10322] ( move ua , 3 / ua ; loop 0 , 5 , move v0 , ul ) 
[10323] ( move ul / ua , 4 ; loop 0 , 6 , move 3 - v0 , 4 ) 
[10324] ( move ul - ua , ul ; move 4 , ua * ua ; move 0 , ua + ul ) 
[10325] ( move ua , ul / 4 ; ( move ul , ul ; move ua , ua - 3 ) ) 
[10326] ( move ua , 4 / ua ; move ua + ul , 3 ) 
[10327] ( move 3 + ul , 4 ; loop 0 , 3 , move 2 * v0 , ul ) 
[10328] loop 0 , 2 , ( move ua , ul ; move v0 - ua , v0 ) 
[10329] ( move ul , ul ; move 4 - ul , 4 ; move ua + ul , 3 ) 
[10330] ( move ua , ua ; loop 0 , 6 , move ul , v0 * v0 ) 
[10331] ( loop 0 , 5 , move 2 , v0 ; move ua , ul / ua ) 
[10332] ( move ua - ul , 2 ; move ul , 2 - 3 ) 
[10333] ( loop 0 , 5 , move ua - ul , 4 ; move ul , ul ) 
[10334] ( loop 0 , 5 , move ul , v0 / ua ; move ul , v0 ) 
[10335] loop 0 , 3 , ( move ua , ua ; move v0 , 2 ) 
[10336] ( move 2 - ua , ua - ul ; move 4 * 2 , 4 + ul ) 
[10337] ( move 2 , ua * ua ; move 3 , ul / ua ; move ua + ul , ul ) 
[10338] ( move 0 - 3 , ul ; move 2 , ua - ul ; move ua , ua ) 
[10339] ( move ul - ua , 3 * 2 ; move ua , ua - 4 ) 
[10340] ( move ua + ul , 3 / ua ; v0 = ul ; move ua , 3 + v0 ) 
[10341] loop 0 , 3 , ( move v0 , 3 ; move 3 , v0 ) 
[10342] ( move ua , 2 - ua ; move ua - 4 , ul ) 
[10343] loop 0 , 3 , ( move ul , v0 - ul ; move 2 , v0 ) 
[10344] ( move 3 , ul ; move ul - ua , 4 + ul ) 
[10345] ( v0 = ua - ul ; move v0 , v0 ; move v0 , 2 / ua ) 
[10346] ( move ua , ua ; move 0 - ua , ua * ua ) 
[10347] loop 0 , 5 , move 3 / 2 , ul / v0 
[10348] loop 0 , 7 , move ua - ul , ua - 3 
[10349] ( ( move ul , ul ; move 3 , 4 ) ; move 3 , ul - ua ) 
[10350] ( move ua + ul , 2 / 4 ; move 2 , 2 ) 
[10351] ( move ua , ua ; loop 0 , 5 , move v0 , ul - v0 ) 
[10352] ( move ua , ul - 4 ; move 4 , 4 / 2 ) 
[10353] loop 0 , 3 , ( move ul , 4 ; move v0 , v0 ) 
[10354] ( loop 0 , 5 , move v0 , v0 * v0 ; move v0 , 0 ) 
[10355] ( move 3 , ul ; move ua + ul , ua * ua ; move ul , ul ) 
[10356] ( move 2 - ua , ul ; move 3 , 3 * 3 ; v0 = ul ) 
[10357] ( loop 0 , 4 , move 2 , 4 ; move v0 , ua ) 
[10358] loop 0 , 7 , move 4 - ua , 2 - v0 
[10359] loop 0 , 2 , loop 1 , 2 , move 4 - ua , v1 
[10360] loop 0 , 5 , move 3 , 4 + 3 
[10361] ( move 4 , ua ; move 0 - ua , 4 - 2 ) 
[10362] ( move ua , ul - 2 ; ( move 4 , ua + ul ; move ua , 2 ) ) 
[10363] loop 0 , 3 , ( move v0 , v0 ; move ul - ua , ul ) 
[10364] ( ( move ul , ua ; move ua + ul , 3 / ua ) ; move ul , ul ) 
[10365] ( loop 0 , 4 , move ul , ul ; move ua , ul / ua ) 
[10366] ( move 3 * 3 , ua ; move 4 , 4 ) 
[10367] ( move 4 + ul , ua * ua ; v0 = ua ; move ua , ua * v0 ) 
[10368] ( move ua , ua ; loop 0 , 2 , move 3 - ua , ul ) 
[10369] ( loop 0 , 5 , move 3 / v0 , v0 ; move v0 , v0 ) 
[10370] ( move ua , ua ; move 4 - ul , 2 + ul ; move ul , ua - ul ) 
[10371] ( move 3 , ul - 3 ; move 4 - ua , ul ; move ua - ul , 0 ) 
[10372] ( loop 0 , 5 , move ul + v0 , ua + ul ; move ul , ul ) 
[10373] ( move ul , ua * ua ; loop 0 , 4 , move 4 , v0 ) 
[10374] ( loop 0 , 6 , move ul , ul / 3 ; move v0 , 3 ) 
[10375] ( move ua / 4 , 4 / ua ; move ua , 4 ) 
[10376] loop 0 , 2 , move 4 * 2 , v0 + 3 
[10377] ( move ua , 2 ; loop 0 , 5 , move 3 , v0 ) 
[10378] loop 0 , 3 , ( move v0 * 4 , 2 ; move v0 , ua / v0 ) 
[10379] ( move 4 - ua , ua * ua ; move ua , 3 ) 
[10380] ( move ua - ul , ul - 4 ; move ua , ul ; move ul , ua ) 
[10381] ( move 4 , ul / ua ; move ua - ul , 2 ) 
[10382] loop 0 , 2 , loop 1 , 2 , move v0 + 3 , v0 / v1 
[10383] ( loop 0 , 6 , move ul , v0 + v0 ; move ul - v0 , ua ) 
[10384] ( move 3 , 2 ; move 3 + 2 , ul ; move ua , 4 ) 
[10385] loop 0 , 6 , move ul - 4 , ua - ul 
[10386] loop 0 , 3 , move ua - 2 , v0 - ul 
[10387] ( move ua + ul , ua ; loop 0 , 4 , move v0 , ul + ul ) 
[10388] ( move ul / 2 , 2 ; move ua , ul ) 
[10389] ( move 3 + 2 , ul ; move 3 , 4 / ua ; v0 = 4 - ul ) 
[10390] ( move 4 - ua , ua ; move ua + ul , ua / 4 ) 
[10391] ( move ua + 2 , ua * ua ; move 2 - ua , ul ) 
[10392] ( move ua , 4 * 4 ; move ua , 4 ) 
[10393] ( move ua + 3 , ua / 3 ; move ua + ul , 4 ) 
[10394] ( move ua , ul + ul ; move ua , 2 / 3 ) 
[10395] ( loop 0 , 6 , move 3 , ul ; move v0 , 4 ) 
[10396] loop 0 , 7 , move v0 - 3 , 4 + ul 
[10397] loop 0 , 7 , move 4 , ua * ua 
[10398] ( move ul , 4 ; move ul , 4 ; loop 0 , 4 , move v0 , v0 ) 
[10399] ( loop 0 , 6 , move 2 , ua + v0 ; move v0 , v0 - ul ) 
[10400] loop 0 , 3 , ( move v0 * v0 , 2 ; move ul + v0 , 3 ) 
[10401] ( move ul - ua , ua ; move ul , 3 * 3 ; move 3 , ul ) 
[10402] ( move ul , ua - ul ; loop 0 , 3 , move ul - ua , 3 * 3 ) 
[10403] ( v0 = 2 + ul ; move 4 , 3 ; move v0 , 4 + v0 ) 
[10404] ( move ua , 4 / 3 ; move ua + ul , 3 ) 
[10405] loop 0 , 7 , move v0 + ul , ul - 3 
[10406] ( loop 0 , 4 , move v0 , ul + v0 ; move 3 , v0 / ua ) 
[10407] ( loop 0 , 4 , move v0 , v0 ; move 4 + ul , 3 ) 
[10408] loop 0 , 5 , move v0 + ul , 0 - 4 
[10409] ( loop 0 , 4 , move 3 - ul , v0 + ul ; move v0 , ul ) 
[10410] loop 0 , 2 , loop 1 , 2 , move ua + v1 , 4 / v0 
[10411] loop 0 , 6 , move ul - v0 , v0 * 4 
[10412] ( move ua , 3 / 2 ; ( move 4 , ul ; move ul , ul ) ) 
[10413] ( move ua + ul , ul ; loop 0 , 5 , move ul - 3 , ul ) 
[10414] ( move ul , ul ; loop 0 , 5 , move v0 , ul / 3 ) 
[10415] ( move 3 - ua , ua / 4 ; move 4 , 2 ; move 0 , ul ) 
[10416] loop 0 , 3 , ( move ul / v0 , ua ; move v0 * v0 , ul ) 
[10417] ( loop 0 , 5 , move v0 , ul ; move ul , 4 ; move v0 , ul ) 
[10418] ( move 0 - ua , ua / 4 ; move ua / 4 , ul ) 
[10419] ( move ul - ua , ul ; move ua - ul , ua * ua ) 
[10420] ( move 3 + ul , ul ; move 3 , 0 - ul ; move ua , ul - 4 ) 
[10421] ( move ua , ul ; move ul , ua - 4 ; move ua , ul + ul ) 
[10422] ( loop 0 , 5 , move v0 , 4 ; move ua , ul ) 
[10423] ( move 3 + ul , ul ; loop 0 , 2 , move ua - 4 , ul + v0 ) 
[10424] loop 0 , 3 , move ua - 2 , 2 * v0 
[10425] ( move ul , ua + 4 ; ( move ua , ul ; move 2 , ul ) ) 
[10426] ( move ua , 4 * 2 ; move ua , 4 / 3 ) 
[10427] ( move 4 , 4 + ul ; move ul - 3 , 2 ) 
[10428] ( move 2 , ua ; loop 0 , 3 , move 2 , v0 ) 
[10429] loop 0 , 3 , ( move v0 * v0 , v0 ; move ua , v0 ) 
[10430] ( loop 0 , 4 , move ul + v0 , ul / 2 ; v1 = v0 ) 
[10431] loop 0 , 4 , move ul - 3 , v0 / 2 
[10432] ( v0 = ul - 4 ; loop 1 , 3 , move v0 * v0 , v0 ) 
[10433] ( move 2 , 3 ; move ul + ul , ua + 4 ; move ua , ul ) 
[10434] loop 0 , ul , ( move v0 , ul ; loop 1 , 3 , move 3 , ul ) 
[10435] ( move ul - 4 , ua ; move ul , ul ; move ua + ul , 0 ) 
[10436] loop 0 , 3 , ( move v0 / 2 , v0 ; move 3 , 3 + ul ) 
[10437] loop 0 , 6 , move ul - v0 , 4 - v0 
[10438] loop 0 , 2 , loop 1 , 2 , move 4 - v0 , ul 
[10439] ( move ul , 0 - 4 ; move ua , ul ; move ua , ua * ua ) 
[10440] ( move ua , 2 ; loop 0 , 6 , move 2 , v0 ) 
[10441] loop 0 , 7 , move v0 - 3 , 2 - v0 
[10442] ( loop 0 , 3 , move v0 , 2 - 4 ; move 4 , ul ) 
[10443] ( v0 = 2 - ua ; loop 2 , 3 , move 3 , v2 / v0 ) 
[10444] ( move ua + ul , ua / 4 ; move 2 + ul , ul ) 
[10445] ( move ua - ul , ua / 3 ; move 3 - ul , 3 - ul ) 
[10446] ( move ua , ul ; move ul - 3 , ua ; move ua , 2 ) 
[10447] ( move ua , ua - ul ; move ua + 3 , 2 ) 
[10448] ( loop 0 , 3 , move 2 + v0 , ul / v0 ; move ul , ua ) 
[10449] ( move 4 , 4 + 3 ; loop 0 , 3 , move 3 , v0 ) 
[10450] ( ( move ul , 4 ; move ua , ua * ua ) ; move ul , 0 ) 
[10451] loop 0 , 4 , move 4 / v0 , 3 - v0 
[10452] ( move 3 , ul / 3 ; move ua , 2 ) 
[10453] ( move 4 + 3 , ua * 4 ; loop 0 , 4 , move ul , ul / v0 ) 
[10454] ( move ul , ua * ua ; loop 0 , 5 , move ul - v0 , v0 ) 
[10455] loop 0 , 3 , ( move ul , v0 ; move 3 , ua / v0 ) 
[10456] ( move ul / 4 , ul / ua ; loop 0 , 5 , move 4 , v0 ) 
[10457] loop 0 , 3 , ( move ua , 2 ; move 0 - ul , 2 ) 
[10458] ( move 0 , 4 * 3 ; move 3 , ua + ul ; move ua , ua + 2 ) 
[10459] ( move 3 + 2 , 0 ; move ua + ul , ua * ua ; v0 = ua ) 
[10460] ( move 4 , 2 ; move ua + ul , 3 - ul ; move ul , ul ) 
[10461] ( move ua , 4 ; move 2 / 4 , ua * ua ; move ua + ul , ua ) 
[10462] loop 0 , 3 , ( move ul , ul ; move v0 + v0 , ul ) 
[10463] ( move ul , 2 ; loop 0 , 4 , move 4 / v0 , v0 ) 
[10464] ( move ul , ua * ua ; move ua + ul , ul ) 
[10465] ( move ua , ua + ua ; loop 0 , 3 , move 3 * v0 , v0 ) 
[10466] ( move 3 * 2 , 0 ; move ua + 3 , 4 + ul ) 
[10467] ( loop 0 , 6 , move 4 , v0 ; move v0 - ul , 2 ) 
[10468] ( loop 0 , 6 , move v0 , 4 ; move v0 , ul ) 
[10469] loop 0 , 3 , ( move v0 , v0 ; move v0 - ua , v0 ) 
[10470] ( loop 0 , 5 , move ua / 4 , v0 + v0 ; move ul , v0 ) 
[10471] ( move ul - ua , ul ; move ua + 3 , 4 + ul ) 
[10472] ( loop 0 , 5 , move v0 , ua / v0 ; move ul , ul ) 
[10473] ( move 3 , ua - ul ; move ua + ul , 2 ) 
[10474] ( move 2 , ua + 4 ; loop 0 , 5 , move v0 , v0 + v0 ) 
[10475] ( v0 = 4 ; move v0 , v0 ; move v0 , v0 * v0 ) 
[10476] ( move ua - ul , ul ; ( move 3 , 4 ; move ua , 0 ) ) 
[10477] ( move 4 , ul / ua ; move ua , ua / 3 ) 
[10478] ( move ua , 4 ; loop 0 , 5 , move v0 , 4 ) 
[10479] ( move 0 - ua , 3 ; move ua , 4 + ul ) 
[10480] loop 0 , 3 , ( move v0 , v0 ; move ul / v0 , ul / 3 ) 
[10481] ( move 0 - ul , ul ; loop 0 , 6 , move v0 , ul + v0 ) 
[10482] ( move 4 , ul ; move ul , 4 ; move ua , 4 ) 
[10483] ( move ua , ul ; loop 0 , 2 , move 3 , ul + ul ) 
[10484] ( move 4 , ul / 3 ; move ua , ul ; move ua - ul , 4 ) 
[10485] ( move 4 / ua , ul ; move 4 , ua / 4 ; move ua , ua ) 
[10486] ( move 3 , ul / 4 ; move 2 - ua , ul ) 
[10487] ( loop 0 , 4 , move v0 + v0 , v0 ; move ua , v0 ) 
[10488] ( loop 0 , 5 , move ul , ua - v0 ; move v0 , v0 ) 
[10489] ( move ua , 3 / 4 ; move ua , ua + 3 ; move ua , 2 ) 
[10490] ( move 2 - ua , ua / 2 ; loop 0 , 6 , move v0 , ul ) 
[10491] ( move 3 + ul , ua ; loop 0 , 3 , move ua , 4 ) 
[10492] ( move 2 , ul ; loop 0 , 5 , move v0 , v0 * v0 ) 
[10493] ( move ua - 2 , ul ; move ul - ua , 3 * 2 ) 
[10494] ( move ua , 4 + ul ; move ua / 4 , ul ) 
[10495] ( move ua , ua / 4 ; loop 0 , 4 , move v0 , v0 ) 
[10496] ( move 0 - ua , 0 ; move ua , 2 ) 
[10497] loop 0 , 5 , move 4 + v0 , ul - 3 
[10498] loop 0 , 3 , move 4 - v0 , 4 + ul 
[10499] ( move 4 , ua ; move 4 - ua , ul ) 
[10500] ( move ul , ul - 4 ; move 2 + ul , ua - 2 ; move ua , ul ) 
[10501] ( move 2 , ul - 3 ; move ua , ul ; move 2 , ul ) 
[10502] ( move ua , 2 ; loop 0 , 4 , move v0 + v0 , v0 ) 
[10503] ( move 3 , ul ; move ul , 3 ; move 4 , 4 ) 
[10504] loop 0 , 6 , move 3 - ua , 4 + ul 
[10505] ( loop 0 , 6 , move v0 - 3 , v0 ; move 2 , v0 ) 
[10506] ( move ua , 4 ; move ua - 3 , ua - ul ) 
[10507] ( loop 0 , 5 , move 2 , v0 * 2 ; move v0 , v0 * 3 ) 
[10508] ( move ua , ul ; move ua , 3 ; loop 0 , 5 , move v0 , v0 ) 
[10509] ( move 4 , 4 + 2 ; ( move ul , ul ; move ul + ul , ul ) ) 
[10510] ( move 3 , 4 / ua ; move 3 , ul ) 
[10511] ( move ua , ua * ua ; move 0 - ua , ul ) 
[10512] loop 0 , 6 , move v0 - 4 , v0 * 4 
[10513] ( move 4 + ul , ul + ul ; move ul - ua , ul ) 
[10514] ( move ul - 4 , 3 ; loop 1 , 6 , move v1 , ul ) 
[10515] ( loop 0 , 6 , move ul , 2 ; move v0 , ul ) 
[10516] loop 0 , 4 , move ua / v0 , v0 - 3 
[10517] ( move ua , ua * ua ; move ul / 4 , 2 ; move 4 + ul , ul ) 
[10518] ( move ua , ul / 2 ; move ul , 4 + ul ) 
[10519] ( move ua , ul ; loop 0 , 3 , move ul , ul - 4 ; move ua , ul ) 
[10520] loop 0 , 3 , ( move 2 , 3 ; move v0 + v0 , v0 ) 
[10521] ( move ul - ua , ua ; move 4 , ua - ul ) 
[10522] ( v0 = 4 * 2 ; move ua , v0 ; move v0 , v0 ) 
[10523] ( loop 0 , 3 , move v0 , 3 ; move v0 , ul ) 
[10524] ( move ua , ul ; move ul - 3 , ua + ul ; move ua , 0 - ul ) 
[10525] ( move 4 , ua ; loop 0 , 6 , move v0 + ul , v0 ) 
[10526] ( move ua - 3 , ua ; move ul , 4 + ul ; move 4 , ul ) 
[10527] ( move ua , ua ; loop 0 , 3 , move ul , 4 ) 
[10528] loop 0 , 3 , ( move 0 - ul , 3 ; move v0 , 4 ) 
[10529] loop 0 , 3 , ( move ul - v0 , 4 ; move v0 + ul , v0 ) 
[10530] ( move 2 , 2 - 4 ; move ua , 4 ) 
[10531] ( v0 = ua - 4 ; move ul - ua , v0 ; move v0 , ul ) 
[10532] ( move ua , ul ; move 3 , ua * ua ) 
[10533] ( move ua , ua + 4 ; move ua - 4 , ua - ul ) 
[10534] ( move 3 , ua + ul ; move ul , 4 ; move ua , 4 ) 
[10535] ( move ua + 2 , 4 ; move 3 , ua - 2 ; v0 = ua ) 
[10536] ( move ua + 2 , 4 / 3 ; move ua , 2 ) 
[10537] ( move 3 , 3 - 4 ; v0 = ua ; move ua , ua * v0 ) 
[10538] ( move 4 + ul , ua - ul ; move ua , 2 / 4 ) 
[10539] ( move 0 , ul ; loop 0 , 6 , move v0 - 4 , ul ) 
[10540] ( loop 0 , 6 , move ul , ul ; move 4 , 3 - v0 ) 
[10541] loop 0 , 7 , move v0 - ul , v0 / 4 
[10542] ( move ua , ua - ul ; ( move ul , 4 ; move ua , 4 ) ) 
[10543] loop 0 , 3 , move 3 * v0 , 4 - v0 
[10544] ( move 0 , 3 + 3 ; loop 0 , 3 , move 3 , v0 ) 
[10545] loop 0 , 3 , move v0 + 3 , v0 - 4 
[10546] ( move 2 , 4 - ul ; loop 0 , 5 , move 2 , v0 + ua ) 
[10547] ( move ua + 2 , ua ; move ua - ul , 4 ; v0 = ul ) 
[10548] ( move ua / 4 , ul ; move ua - ul , 3 / ua ; move 3 , ul ) 
[10549] ( move ua , ua ; move 4 , ul ; move 4 / ua , ul ) 
[10550] ( loop 0 , 3 , move ul , v0 ; move ua / v0 , 4 ) 
[10551] ( move ua , ua ; loop 0 , 6 , move v0 , ul - v0 ) 
[10552] ( move ua / 4 , ul / 4 ; move ua + 2 , ul ) 
[10553] ( move ua + 2 , 3 ; move 2 - ua , ua - ul ) 
[10554] ( move ua , 0 ; loop 0 , 4 , move v0 , ua - v0 ) 
[10555] loop 0 , 3 , ( move ul , v0 ; move v0 + v0 , ul ) 
[10556] loop 0 , 5 , move v0 - 2 , ul / v0 
[10557] loop 0 , 3 , ( move ul , ul ; move 3 , ul ) 
[10558] ( loop 0 , 4 , move v0 , 3 ; move 2 + v0 , v0 / 2 ) 
[10559] ( v0 = ua - ul ; loop 1 , 3 , move v0 , v0 * v0 ) 
[10560] ( move ul , ua / 4 ; loop 0 , 6 , move 4 , 2 ) 
[10561] ( loop 0 , 3 , move 3 , v0 - ul ; move ua , v0 ) 
[10562] ( move 4 , ul - 4 ; v0 = 0 - 4 ; move v0 , ul ) 
[10563] loop 0 , 3 , ( move v0 + v0 , 3 ; move 3 , ul / v0 ) 
[10564] ( move ua - ul , 2 ; move ua - ul , ul ) 
[10565] ( move 2 + ul , ua + 3 ; move ua - ul , 4 / 3 ) 
[10566] ( move 3 , ul ; loop 0 , 3 , move 2 , 0 - 2 ; v1 = ul ) 
[10567] ( loop 0 , 5 , move v0 , ua - v0 ; move ul , ul ) 
[10568] ( move ua , 0 ; move ul + ul , ua + 2 ; move ua , 3 - ul ) 
[10569] ( move ua / 3 , ua ; move 4 / ua , ul - 3 ; move ua , ul ) 
[10570] ( move ul , ua * ua ; ( move ua , 3 ; move ua , ua * ua ) ) 
[10571] ( move ul / 3 , ul ; move 2 * 2 , ul ; move ua + ul , 4 ) 
[10572] loop 0 , 6 , ( v1 = v0 ; move 4 / v0 , v0 - 4 ) 
[10573] loop 0 , ul , loop 1 , 7 , move ua , 3 * 3 
[10574] ( move ul , 4 ; move ul - 4 , ul ; move 4 + 2 , ul - ua ) 
[10575] loop 0 , 3 , ( move v0 + v0 , v0 ; move ul , ul ) 
[10576] ( move 4 , ul ; move ua , 2 - ua ; move ua , ua / 3 ) 
[10577] loop 0 , 7 , move 2 + ul , v0 / 2 
[10578] ( move ul / 2 , ul ; move ua , ul / 2 ) 
[10579] ( move 3 , 4 ; loop 0 , 2 , loop 1 , 3 , move v0 , ul ) 
[10580] ( move ua - ul , 3 ; loop 0 , 5 , move 4 , ul ) 
[10581] loop 0 , 4 , loop 1 , ul , move v1 - 4 , 0 - ul 
[10582] ( loop 0 , 4 , move 2 - v0 , v0 ; move v0 - ua , ua ) 
[10583] ( move 4 + ul , ua - 4 ; move ua , 4 ; move ul , 2 ) 
[10584] ( move 2 - ua , ul ; move ul , ul / 2 ; move 3 , ul ) 
[10585] ( move ua , 3 ; move 3 , 3 ; move 3 , 4 ) 
[10586] ( move 2 + ul , ul ; move 0 - ua , 4 + ul ; v0 = ua ) 
[10587] loop 0 , 3 , move 4 , 4 - v0 
[10588] ( move 3 , ua ; move ul - ua , 3 + 2 ) 
[10589] ( move 4 + 2 , ua ; move ul , 3 + ul ; move ua , ul ) 
[10590] ( move ul + ul , ua * ua ; move ua , ul ; move ul , ul ) 
[10591] ( move 4 , ul ; move ul , 4 ) 
[10592] ( loop 0 , 6 , move ul - v0 , v0 ; move 3 , v0 ) 
[10593] ( move ul , ua * ua ; move 4 , 2 ; move ua , 2 / 4 ) 
[10594] ( move 0 , 3 ; loop 0 , 4 , move 4 , 4 ) 
[10595] ( v0 = 3 ; ( move v0 , v0 ; move ua , ul - v0 ) ) 
[10596] loop 0 , 4 , move v0 - ua , v0 - 3 
[10597] ( move ua , ul ; loop 0 , 4 , move v0 , ua / v0 ) 
[10598] ( move ua + ul , ua + ul ; move 3 , 4 * 3 ) 
[10599] ( move 3 , ua ; move 4 , 3 / ua ) 
[10600] ( move ua , 3 ; move 4 , 2 ; move ua + ul , 2 ) 
[10601] ( ( move ua , 3 ; move ul - ua , 0 ) ; move 4 , ua + 2 ) 
[10602] ( loop 0 , 4 , move 4 , v0 ; move v0 , ul ) 
[10603] ( move ul - ua , ua + ul ; loop 0 , 6 , move ul , 2 - v0 ) 
[10604] ( move 2 + 2 , 3 ; loop 0 , 3 , move 2 , v0 ) 
[10605] ( ( move ul - 4 , ul ; move ua , 4 / ua ) ; v0 = ul ) 
[10606] ( move ua , ul / 3 ; ( move ua , 2 ; move 4 , ul / 3 ) ) 
[10607] ( move ul , ul - ua ; ( move ua , 2 ; move 4 , 0 - ul ) ) 
[10608] ( move 0 - ua , ul ; move ua , 3 + 3 ) 
[10609] ( move 4 + 4 , 3 ; move ul - ua , 3 * 2 ) 
[10610] ( move ul - ua , 4 ; loop 0 , 3 , move v0 , v0 - ul ) 
[10611] ( ( move 2 , ul ; move ul , 4 ) ; move 3 , 2 ) 
[10612] loop 0 , 6 , move 3 - v0 , 3 + v0 
[10613] ( move 2 , 3 ; ( move ul , 2 ; move 4 - ul , 3 - ua ) ) 
[10614] loop 0 , 4 , move ul - ua , ua * ua 
[10615] ( move 3 , ul ; loop 0 , 3 , move 2 , v0 - ul ) 
[10616] ( move ua , 3 ; move ul , ul ; move 3 + ul , ul ) 
[10617] loop 0 , 6 , move ua / 3 , v0 / ua 
[10618] ( move ul , ul / 2 ; move ul , ul ; move ua , ul ) 
[10619] ( v0 = 4 ; move v0 , v0 / 3 ; move v0 , ul ) 
[10620] loop 0 , 2 , ( move 4 , ul ; move 4 , 4 ) 
[10621] loop 0 , 3 , move ua / v0 , 3 - v0 
[10622] loop 0 , 7 , move 4 / v0 , ua - v0 
[10623] ( loop 0 , 5 , move 2 + ul , ul ; move v0 , v0 ) 
[10624] ( move 0 - ua , ua ; loop 0 , 3 , move v0 , ul / v0 ) 
[10625] loop 0 , 3 , ( move 3 , ul ; move v0 , v0 / ua ) 
[10626] ( move 2 , ul / 4 ; move ua , 4 ) 
[10627] ( move ua , 3 ; move ul + ul , ua ; move 2 + ul , ua * ua ) 
[10628] ( move ul - ua , ul ; loop 0 , 6 , move v0 , v0 ) 
[10629] ( loop 0 , 6 , move v0 , v0 ; move v0 - ua , 4 ) 
[10630] ( ( move 3 , ul ; move ul , ul ) ; move ua , 3 ) 
[10631] ( move ua , ua * 4 ; move ua - 2 , 4 ) 
[10632] loop 0 , 2 , loop 1 , 3 , move 2 + v1 , ul 
[10633] ( move ul - ua , ul ; loop 0 , 4 , move v0 , ul - v0 ) 
[10634] ( move ul , 2 ; loop 0 , 5 , move v0 - ua , v0 ) 
[10635] ( move ua + ul , ua - ul ; loop 0 , 4 , move v0 , v0 ) 
[10636] ( loop 0 , 4 , move ua + v0 , 4 ; move 4 , 4 ) 
[10637] ( move ul , ua ; ( move ua - 3 , ul ; move ul - ua , 2 ) ) 
[10638] loop 0 , 3 , loop 1 , 2 , move ul + v0 , v0 - 3 
[10639] ( move ua , 3 / 4 ; loop 0 , 4 , move 2 - v0 , v0 ) 
[10640] ( v0 = ua / 3 ; loop 1 , 6 , move v1 , 2 * v0 ) 
[10641] loop 0 , 3 , ( move ul + ul , v0 + ul ; move ua , ul ) 
[10642] ( move ua , ua ; loop 0 , 4 , move v0 , 3 ; move ua , v0 ) 
[10643] ( move 3 , 4 / 3 ; move ua , 2 ) 
[10644] ( v0 = ul ; loop 1 , 3 , move 4 , ul ; move ul , v0 ) 
[10645] ( move ua , 4 * 3 ; move ua , 3 ) 
[10646] ( move ua , 4 / ua ; loop 0 , 3 , move 3 , v0 ) 
[10647] loop 0 , 6 , loop 1 , ul , move v1 - v0 , ul - v0 
[10648] ( move ua + 4 , ul ; loop 0 , 2 , move ua , 4 ) 
[10649] ( move 0 , 2 ; loop 0 , 6 , move v0 , ua / v0 ) 
[10650] ( move ua + ul , 4 ; move 3 , ua * ua ) 
[10651] loop 0 , 5 , move ua / 2 , v0 / 4 
[10652] ( loop 0 , 6 , move ul , v0 ; move 3 , 2 ) 
[10653] loop 0 , 3 , ( move ua , ul ; move v0 + v0 , v0 + ul ) 
[10654] ( move 2 , 0 ; move ul - 4 , ua - 3 ; move ua , ul ) 
[10655] ( move ul , 4 + 3 ; loop 0 , 5 , move v0 , v0 * 4 ) 
[10656] ( move ul , 3 ; move ua , ul ; loop 0 , 4 , move v0 , ul ) 
[10657] ( move ua / 2 , ua - ul ; move ua , 3 - 4 ) 
[10658] ( loop 0 , 5 , move ul , 2 ; move v0 + 4 , ua * v0 ) 
[10659] ( move ul , ul / 4 ; move ua , ul ; move ul , ul ) 
[10660] ( move ua , ua - 4 ; v0 = 0 ; move 3 , 2 ) 
[10661] ( move ua - 3 , ua - 4 ; move ua - ul , ul ) 
[10662] ( move ua , ul ; loop 0 , 5 , move ul , v0 + v0 ) 
[10663] ( move ua , ul ; loop 0 , 6 , move v0 + ul , v0 ) 
[10664] ( move ul , ul ; move ua , 3 + 2 ) 
[10665] ( loop 0 , 3 , move v0 , ua / 4 ; move 3 + ul , v0 ) 
[10666] ( move 3 , ua ; move 4 , 3 ) 
[10667] ( move 2 , ul ; loop 0 , 5 , move 4 - v0 , v0 ) 
[10668] loop 0 , 3 , ( move v0 + 3 , v0 + v0 ; move 2 , ul ) 
[10669] loop 0 , ul , loop 1 , 7 , move v0 - ul , v1 + 2 
[10670] loop 0 , 7 , move 3 - v0 , ua - v0 
[10671] ( move ua + 2 , 4 ; ( move 4 - ua , ul ; v0 = 0 ) ) 
[10672] loop 0 , 7 , move v0 - ua , ua - 4 
[10673] ( ( move ua , ul ; move ul , ua / 3 ) ; move ua , ul ) 
[10674] ( loop 0 , 4 , move 2 , v0 ; move v0 , ua / 2 ) 
[10675] ( move ua + ul , ul ; move ua - 2 , ul + ul ) 
[10676] loop 0 , 5 , move 4 - v0 , 0 - 4 
[10677] ( v0 = ua + 2 ; loop 1 , 3 , move v0 - v1 , v0 ) 
[10678] ( loop 0 , 5 , move v0 , ul ; move 4 , v0 / ua ) 
[10679] ( move ua , ua + ul ; loop 0 , 6 , move 3 - ul , 3 ) 
[10680] loop 0 , 7 , move ua / 4 , v0 + v0 
[10681] ( move 3 , 4 ; move ua - ul , ua * ua ) 
[10682] ( move 4 , ua - ul ; move 4 , 2 - 4 ) 
[10683] ( loop 0 , 6 , move ul + ul , v0 ; move ua + ul , ua ) 
[10684] ( move ua / 4 , ul / ua ; move 4 , ul - ua ; move 4 , ua ) 
[10685] ( loop 0 , 5 , move ul + v0 , ul ; move ul , 0 ) 
[10686] ( move ua - 3 , 4 / 3 ; move ua , ul ) 
[10687] ( ( move ua , 2 ; move 3 , 2 ) ; move ua , ul ) 
[10688] ( move ua - ul , ul - 4 ; move ua , 4 + ul ) 
[10689] ( move ua , 3 * 3 ; move ul - 4 , ua - 4 ) 
[10690] ( loop 0 , 6 , move ul , v0 * v0 ; move v0 , ua ) 
[10691] ( v0 = 4 * 2 ; move v0 , v0 ; move 2 , ul ) 
[10692] ( move ua + ul , ua ; move ua , 4 * 2 ) 
[10693] ( loop 2 , 4 , move 3 , ul ; move 4 , 2 + ul ) 
[10694] ( move ul - ua , ua - 3 ; move 4 - ua , ul ) 
[10695] loop 0 , 3 , ( move v0 , v0 + 3 ; move ul , ul ) 
[10696] ( move ua + 3 , ul ; move 2 , 4 + ul ) 
[10697] ( move ua , ul ; loop 0 , 4 , move v0 , v0 * v0 ) 
[10698] ( move ul , ul - 3 ; move ua + 3 , ul ) 
[10699] loop 0 , 2 , move ua - ul , 3 * 3 
[10700] ( move ua , ul / ua ; move ua - 3 , ul ) 
[10701] ( move ua , ua ; move ul , 2 + ul ; move 3 , ul - ua ) 
[10702] ( move ul , 3 ; move ua , 3 + 2 ; move ua , ul + ul ) 
[10703] loop 0 , 3 , move ua + v0 , 4 - v0 
[10704] ( move ua , 2 + ul ; ( move ua , ul + ul ; move ul , ul ) ) 
[10705] ( move ua / 2 , ua ; move ul , ua * ua ; move ua , ua - ul ) 
[10706] loop 0 , 3 , ( move ul , 0 ; move 3 * v0 , v0 ) 
[10707] ( loop 0 , 4 , move ul + v0 , ul ; move v0 , ua ) 
[10708] loop 0 , 5 , move ua + ul , ul - 4 
[10709] ( move ua + ul , 3 * 2 ; move ul - ua , ua / 3 ) 
[10710] ( ( move ua , 2 ; move 2 , ul ) ; move ul , 4 ; v0 = ua ) 
[10711] ( move 2 , 4 / ua ; move ua - ul , ua - ul ) 
[10712] ( move ul , ul / ua ; loop 0 , 5 , move ua - ul , v0 ) 
[10713] loop 0 , 3 , ( move v0 , 2 + ul ; move 4 - ua , ul ) 
[10714] loop 0 , 3 , move 3 - ua , v0 * v0 
[10715] ( move ul , ua ; move ua + 3 , 3 + ul ; move ua , ul + ul ) 
[10716] ( move 2 , 0 - ul ; move ua + ul , ul ) 
[10717] loop 0 , 3 , ( move v0 , ua ; move 2 , ul ) 
[10718] ( move ul , ul ; loop 0 , 4 , move v0 * 3 , v0 ) 
[10719] ( move ua , 2 ; move ul , ul ; move ua , 3 ) 
[10720] ( move ua , 3 + ul ; move ul , ul ; move ul - ua , ul ) 
[10721] ( move 4 , ua ; move ua - ul , ua + ul ; move 3 - ul , ul ) 
[10722] ( ( move 4 , ul / 4 ; move ua - 4 , ua ) ; move 2 , 4 ) 
[10723] loop 0 , 3 , ( move ul , ul ; move v0 , ul / 2 ) 
[10724] ( ( move ua , ua ; move 4 , 2 + ul ) ; move 4 , 3 / 2 ) 
[10725] ( move 3 - ua , ua + 2 ; move ua + ul , ua - ul ) 
[10726] ( move 2 , ul ; loop 0 , 5 , move ua + 2 , 2 ) 
[10727] ( loop 0 , 6 , move ua - ul , v0 ; move ua , 4 ) 
[10728] ( move 2 , ua ; loop 0 , 4 , move 4 , v0 ) 
[10729] ( loop 0 , 5 , move ul , v0 - ua ; move v0 + v0 , ul ) 
[10730] loop 0 , 2 , ( move v0 + v0 , v0 ; move 4 , v0 ) 
[10731] ( move ua , 2 + ul ; move 2 - ul , 2 ; move 4 , ul ) 
[10732] loop 0 , 3 , ( move 4 , v0 ; move v0 , v0 ) 
[10733] loop 0 , ul , loop 1 , 3 , loop 2 , 2 , move ua + v2 , 2 
[10734] loop 0 , 3 , ( move 2 , v0 ; move v0 , v0 * v0 ) 
[10735] ( ( move ul , ul ; move ua + 2 , ul ) ; move 2 , ul ) 
[10736] ( move ua , 4 ; loop 0 , 3 , loop 1 , 2 , move ul , v1 ) 
[10737] ( move ua , 4 ; v0 = ua - 2 ; move v0 , v0 * 3 ) 
[10738] ( v0 = 3 * 2 ; move ua , ul ; move v0 , v0 * v0 ) 
[10739] ( move 4 * 2 , ul / 3 ; move ua , ul + ul ) 
[10740] ( move 2 + ul , 0 ; move ul , ua - ul ; move ua , 3 ) 
[10741] ( move ul - ua , 2 ; move 2 , 4 ; move 2 , ul - 3 ) 
[10742] ( move ul , ul ; loop 0 , 5 , move 2 - v0 , ul ) 
[10743] ( move 3 , ua - 4 ; loop 0 , 5 , move v0 , ul + ul ) 
[10744] ( move ul - 4 , ul ; ( move 2 , ua + ul ; move ua , 3 ) ) 
[10745] ( move 3 , 4 + ul ; move 2 , ul ; move ua , ul ) 
[10746] ( move ua , 3 + ul ; move ul - ua , ul / 4 ; move 2 , 2 ) 
[10747] loop 0 , 2 , ( move 3 , v0 ; move 3 , 3 ) 
[10748] ( loop 0 , 5 , move 2 - 4 , ul ; move v0 , ua ) 
[10749] loop 0 , 7 , move ul - v0 , v0 + 3 
[10750] ( move 2 , 4 ; loop 0 , 6 , move ua , 4 ) 
[10751] ( move ul , 4 ; loop 0 , 5 , move v0 - 2 , 2 ) 
[10752] ( move ua , ua - ul ; move 4 , 3 ; move ua , 2 + 2 ) 
[10753] ( loop 0 , 6 , move ul , v0 ; move v0 , 2 ) 
[10754] ( move ul , ua ; loop 0 , 2 , move v0 + 4 , ul ) 
[10755] loop 0 , 3 , ( move 4 , v0 * v0 ; move v0 , ul ) 
[10756] ( move ul , ua ; move 3 , ul ; move 4 , 4 ) 
[10757] ( move 2 , ua / 4 ; loop 0 , 6 , move v0 , v0 ) 
[10758] ( move ul + ul , ua ; ( move 4 / ua , 4 ; move 3 , ul ) ) 
[10759] ( loop 0 , 5 , move 4 , ua + 3 ; move v0 , ul / v0 ) 
[10760] ( loop 0 , 6 , move 4 , 4 ; move v0 , ua + v0 ) 
[10761] loop 0 , 3 , ( move ua / v0 , v0 + ul ; move v0 , ua ) 
[10762] ( move 4 , ua ; loop 0 , 3 , move 3 * v0 , 2 ) 
[10763] ( move 4 , 2 ; loop 0 , 3 , move v0 + v0 , ul ) 
[10764] ( move ul - ua , ul ; loop 0 , 5 , move ul , ul ) 
[10765] ( move 4 , 4 + ul ; move ua , ul / 3 ) 
[10766] ( loop 0 , 5 , move ul , ul ; move 2 - 4 , 2 ) 
[10767] ( move ua , ul / ua ; move ua , 2 ; move ul - ua , ul ) 
[10768] ( move ua + 3 , 4 ; move ua , 4 - ul ) 
[10769] ( move 4 , ua * 2 ; move 2 , ul ; move ua + ul , ul ) 
[10770] ( move 2 - ua , ua ; move 4 , 4 ) 
[10771] ( move ul , 2 ; ( move 2 + ul , ul ; move 3 , 4 ) ) 
[10772] ( move ul , ul ; move 3 , 4 * 3 ; move 2 , ul ) 
[10773] ( move ua , ua - 2 ; loop 0 , 5 , move ul , ua - v0 ) 
[10774] ( move 3 , ua ; move ul , ua * ua ; move ua , ul ) 
[10775] ( loop 0 , 6 , move ul , ul ; move v0 - ul , ua ) 
[10776] ( v0 = 2 ; loop 1 , 6 , move v0 , v0 ; move ul , ul ) 
[10777] ( move ul - 4 , ua ; move ua - ul , 4 + 2 ) 
[10778] ( loop 0 , 6 , move v0 , v0 + v0 ; move ul , v0 ) 
[10779] ( ( move ul - ua , 3 ; move ul , ua ) ; move ua , ua - ul ) 
[10780] ( move 4 , 2 ; loop 0 , 5 , move ul - v0 , ua / v0 ) 
[10781] ( loop 0 , 5 , move v0 , ul ; move v0 + 2 , v0 ) 
[10782] ( loop 0 , 6 , move ul , ul ; move ul , v0 ) 
[10783] ( move ua , ul ; move ul , ul ; move 4 , 3 ) 
[10784] loop 0 , 6 , move ul - 3 , ul / v0 
[10785] ( move 2 , 2 ; move ua + ul , ua - ul ) 
[10786] ( ( move ua , ua - 3 ; move ul , ul ) ; move ua , ul ) 
[10787] loop 0 , 3 , ( move v0 , 2 ; move 2 , ul / v0 ) 
[10788] ( move ul - ua , ul ; move 4 , 3 / ua ) 
[10789] ( move ul - ua , ua ; move ua - 3 , ua * ua ) 
[10790] ( move ua , 4 ; move ul , ul + ul ; move ua + 3 , ul ) 
[10791] ( move ul , ua / 3 ; move 3 , 4 ; move 3 * 2 , ul ) 
[10792] loop 0 , 3 , ( move v0 + 4 , v0 ; move v0 , 3 ) 
[10793] ( loop 0 , 5 , move 2 * v0 , v0 ; move v0 , ua - 2 ) 
[10794] ( loop 0 , 6 , move v0 , ua * ua ; move v0 , ul ) 
[10795] ( move ua + 2 , 2 ; move ul , 4 - ua ; move 2 , ul ) 
[10796] ( move ul , ua * 2 ; loop 0 , 4 , move 4 , ua - v0 ) 
[10797] ( move ul , ul ; loop 0 , 6 , move ul + v0 , v0 ) 
[10798] ( loop 0 , 4 , move ua , ua * ua ; move v0 + v0 , v0 ) 
[10799] ( move ul , ua ; move ua , 4 * 4 ; move 2 + ul , ul ) 
[10800] ( move 3 + ul , ul / ua ; move 4 + 2 , 4 / 3 ) 
[10801] ( move ul - ua , ul ; loop 0 , 2 , move 3 + v0 , v0 ) 
[10802] loop 0 , 7 , move 3 - v0 , 2 + v0 
[10803] ( move ul + ul , ua + ul ; loop 0 , 5 , move 3 - v0 , ul ) 
[10804] ( move ua , 2 + ul ; loop 0 , 5 , move ua , 4 ) 
[10805] loop 0 , 3 , ( move ua + v0 , ul ; move v0 , ul + ul ) 
[10806] ( move ua , 4 ; move 2 , ul ; move 4 + ul , ul - 4 ) 
[10807] loop 0 , 5 , move ua / 3 , ul / v0 
[10808] ( ( move ul , ul ; move 2 , 3 ; move ua , ul ) ; move 2 , ul ) 
[10809] ( move 4 , 3 ; move 4 , 3 + ul ; move 2 - ua , ul ) 
[10810] ( move ul , 2 ; move 4 , ua ; ( move ua , 2 ; move ul , 0 ) ) 
[10811] ( move ua , 3 - ua ; move ul , 3 ; move ua + ul , ul ) 
[10812] ( move 4 , ul ; move ua , ul + ul ; move ua + ul , ua * ua ) 
[10813] loop 0 , 7 , move v0 - ul , 3 - v0 
[10814] ( move ul - ua , 4 ; move 3 + ul , 4 ; move ul , ul ) 
[10815] loop 0 , 3 , ( move 4 - v0 , v0 ; move v0 , ul + ul ) 
[10816] ( move 3 , 2 ; move ul - 3 , 2 ) 
[10817] ( loop 1 , 6 , move ul , 4 ; move 4 , v1 ) 
[10818] ( move 4 + 4 , ul ; move ul - ua , ul ) 
[10819] loop 0 , 2 , ( move v0 , 4 ; move 4 , ul ) 
[10820] loop 0 , 6 , move 3 / 2 , ua - v0 
[10821] ( move ul , ul + ul ; move ul , ul ; move ua + 3 , ul ) 
[10822] ( loop 0 , 6 , move 2 , v0 ; move v0 , v0 * v0 ) 
[10823] ( move ua - ul , ua + ul ; move 2 - ua , 0 ; move ua , ul ) 
[10824] ( move ua , 4 + 2 ; move ua , ua * ua ) 
[10825] ( move ul , ul / ua ; loop 0 , 6 , move ul - v0 , v0 ) 
[10826] ( move 4 , 4 + 2 ; move 2 + ul , 2 / 4 ) 
[10827] ( v0 = ua ; move v0 , v0 - ul ; move v0 - ul , 4 ) 
[10828] ( loop 0 , 4 , move 4 , v0 * v0 ; move ua , ul ) 
[10829] ( loop 0 , 3 , move ul - ua , 2 ; move ul , v0 ) 
[10830] ( move 4 , ul ; loop 0 , 5 , move 2 , 2 - v0 ) 
[10831] ( move ua , 4 ; move ul , 2 ; loop 0 , 4 , move v0 , ua ) 
[10832] ( loop 0 , 5 , move ul , v0 * v0 ; move ua , ua ) 
[10833] loop 0 , 2 , loop 1 , 2 , move 2 , v0 + ul 
[10834] ( move ul - ua , 2 ; loop 0 , 3 , move 2 , v0 ) 
[10835] ( move ul , ul - 3 ; move ua , ul ; move 2 , ul ) 
[10836] ( move ua , ua + 2 ; ( move ul , 3 ; move 3 , ua * ua ) ) 
[10837] loop 0 , 6 , move ul - 2 , v0 / 4 
[10838] loop 0 , 3 , ( move v0 / 4 , v0 ; move 4 + v0 , ul ) 
[10839] ( move ua + 2 , 2 - ua ; move 0 - ua , ul ) 
[10840] ( loop 0 , 6 , move v0 , 3 ; move 2 , ul ) 
[10841] ( loop 0 , 6 , move v0 + v0 , 3 ; move 2 - v0 , ul ) 
[10842] ( loop 0 , 5 , move ul , ul ; move ua + 2 , v0 * v0 ) 
[10843] ( v0 = 4 ; move v0 , 3 + 2 ; move v0 , 4 ) 
[10844] ( move ua , 4 + ul ; move ua , ua - 3 ; move ul , 2 ) 
[10845] ( ( move 4 , 3 ; move ul / 2 , ul ) ; move 3 , ul ) 
[10846] ( move ua , 3 ; move 2 , 2 ; move 3 , 4 ) 
[10847] loop 0 , 3 , move 2 - ua , v0 - ul 
[10848] ( move ua + ul , 0 ; move ul , ua + ul ; move 4 , 4 ) 
[10849] loop 0 , 4 , move 3 / v0 , v0 * 4 
[10850] ( move ua - ul , ua ; loop 1 , 4 , move v1 , ul - v1 ) 
[10851] loop 0 , 3 , ( move 4 , 4 ; move v0 , v0 ) 
[10852] ( loop 0 , 3 , move ul , ul ; move 2 * v0 , v0 / 3 ) 
[10853] ( move ua , ua ; move ua + ul , ua - 4 ) 
[10854] ( loop 0 , 5 , move ul , 0 - ul ; move ul , 3 + v0 ) 
[10855] ( move ua + ul , ua ; loop 0 , 2 , move 4 , 2 ) 
[10856] ( move 4 , ua ; move ul , ul / ua ; move ua , 2 - ua ) 
[10857] ( loop 0 , 5 , move ul , 4 + ul ; move v0 + 4 , 4 ) 
[10858] ( loop 0 , 2 , move 2 + v0 , v0 ; move v0 , ul ) 
[10859] loop 0 , 7 , move 2 - v0 , v0 - ul 
[10860] ( move ua , 0 - ul ; ( move ul , ul ; move 3 , ul ) ) 
[10861] ( move 3 , ua / 4 ; move ua , ul ) 
[10862] ( move ua , 2 ; ( move 3 , ua - 2 ; move 2 , 2 ) ) 
[10863] ( move ua + 3 , ul ; loop 0 , 3 , move v0 * v0 , ul ) 
[10864] ( move ua - 2 , 2 ; move ua , 4 ) 
[10865] ( move ua , ua - 4 ; move 4 , 3 + ul ; move 2 , ul ) 
[10866] ( v0 = 3 + ul ; loop 1 , 7 , move v0 , v0 * v0 ) 
[10867] ( move ua , ua / 2 ; loop 0 , 4 , move v0 , 2 ) 
[10868] ( move 2 , ul ; move 2 + ul , 4 ; move 3 , ul ) 
[10869] loop 0 , 3 , ( move v0 , 3 + v0 ; move v0 , ul ) 
[10870] ( v0 = ua - 2 ; move v0 , v0 ; move ul + v0 , ul ) 
[10871] ( loop 0 , 4 , move ul / v0 , ul ; move v0 , v0 ) 
[10872] ( move ua , ua ; move ul - ua , ul ; move ul + ul , 2 + ul ) 
[10873] ( move ua , 4 ; move ul - ua , 4 + ul ) 
[10874] ( move 4 , ul ; move 2 , ua - ul ; move ua - ul , ul ) 
[10875] ( loop 0 , 5 , move 4 , v0 ; move 4 , v0 - 2 ) 
[10876] loop 0 , 2 , ( move 4 + ul , ua / v0 ; move ul , ul ) 
[10877] ( move ua , ua - ul ; loop 0 , 6 , move v0 , 4 ) 
[10878] ( loop 0 , 5 , move 3 , ua + ul ; move v0 , v0 / ua ) 
[10879] ( move 4 + 2 , 4 / 2 ; move ua , ua + 4 ) 
[10880] loop 0 , 6 , move ul - v0 , v0 - 4 
[10881] ( move ua + 2 , 3 / 4 ; move 2 + ul , 4 ) 
[10882] ( loop 0 , 6 , move v0 - 3 , v0 ; move 4 , v0 ) 
[10883] ( move ua - ul , 2 - ua ; move 4 + 3 , 3 - ul ) 
[10884] ( move 2 , ul ; move 4 + 2 , ul / ua ; move ul , ul ) 
[10885] ( move ul - ua , 2 ; move 3 + 2 , 2 / ua ) 
[10886] loop 0 , 3 , loop 1 , 2 , move v1 + v0 , 4 
[10887] ( move ul , 0 - ul ; loop 0 , 4 , move 4 + ul , v0 ) 
[10888] ( move ua - ul , ul - 2 ; move ua , 4 ) 
[10889] ( move 4 , 0 ; move ua + 3 , ua - 2 ) 
[10890] ( move 3 , ua + 2 ; move ua + 2 , 4 ) 
[10891] ( move 4 + ul , ua ; move 4 + ul , ua * ua ) 
[10892] loop 0 , 5 , move 2 - v0 , 4 + v0 
[10893] ( v0 = ua ; move ul - v0 , v0 / 3 ; move v0 , ul ) 
[10894] ( move 3 , ul + ul ; move ua + 3 , 4 ) 
[10895] ( loop 0 , 5 , move 4 , v0 ; move 2 , ul ) 
[10896] ( loop 0 , 2 , move v0 + v0 , 4 ; move ua + ul , v0 ) 
[10897] ( move 0 , ul / ua ; loop 0 , 6 , move 4 , v0 ) 
[10898] loop 0 , 2 , loop 1 , 3 , move v1 + v0 , 2 
[10899] ( loop 0 , 4 , move ul , 4 ; move 4 + v0 , v0 ) 
[10900] ( move 4 , ua - ul ; move 3 , 4 ) 
[10901] loop 0 , 3 , move 2 - ua , v0 * v0 
[10902] ( move ul - 4 , ul - 2 ; move ua + 2 , ua + ul ) 
[10903] ( move 0 , 3 + ul ; move ua , 4 * 3 ; move 2 , 2 ) 
[10904] ( loop 0 , 4 , move v0 + ul , v0 ; move 3 , v0 * ua ) 
[10905] ( move 0 , ul - 4 ; move ua , 0 ; loop 0 , 5 , move ul , ul ) 
[10906] ( move 3 , 2 / ua ; ( move ua , ua + ul ; move ul , 4 ) ) 
[10907] ( loop 0 , 4 , move 2 + v0 , ua - v0 ; move 0 , ua ) 
[10908] ( move 4 , ua - ul ; move 4 , 0 ; move 4 + 2 , 2 ) 
[10909] ( ( move ul , 3 ; move ua , 4 ) ; move 4 + ul , 0 ) 
[10910] ( move 3 , 0 ; ( move 4 , 3 + ul ; move ua , 3 ) ) 
[10911] ( move 4 , 4 ; move ul , 3 ; move ul + ul , 2 ) 
[10912] ( move 3 + ul , 3 ; move ua - ul , ua - ul ) 
[10913] ( move ul , ua * ua ; loop 0 , 6 , move ul + v0 , ul ) 
[10914] ( move 2 - ua , ua + 4 ; loop 0 , 4 , move v0 , v0 ) 
[10915] ( move ua , 0 ; move 0 - 4 , ua * ua ) 
[10916] loop 0 , 2 , loop 1 , 3 , move v0 + v1 , 0 - 2 
[10917] loop 0 , 5 , move 2 - v0 , v0 + ul 
[10918] ( move ua + ul , ua ; move 0 - ua , ua * ua ) 
[10919] ( move 0 , ul - 2 ; loop 0 , 5 , move 2 * v0 , v0 ) 
[10920] loop 0 , 6 , move v0 + ul , ul - 3 
[10921] loop 0 , 4 , move 3 - ua , ua * ua 
[10922] ( move ua + ul , 3 ; move ul , ua * ua ; move ua , ua ) 
[10923] ( move ua , 4 ; move ua - ul , ua - 2 ) 
[10924] ( move ua , 2 - 4 ; move ua , ul + ul ; move ul , ul ) 
[10925] ( move 4 , ua * ua ; move ul , 2 ; move ua , ua ) 
[10926] ( v0 = 4 * 2 ; move 3 , v0 ; move v0 , v0 ) 
[10927] ( move ul , ua / 3 ; loop 0 , 4 , move v0 , v0 * v0 ) 
[10928] ( move ul - ua , 4 ; move 4 , 2 ) 
[10929] ( move ul , ul ; loop 0 , 4 , move v0 , v0 ; move ua , 0 ) 
[10930] ( move 4 , ua ; move 4 + 3 , ul + ul ; move ul + ul , ul ) 
[10931] ( move ua , 3 / ua ; loop 0 , 2 , move 2 , v0 ) 
[10932] ( move 2 , 4 ; move ua , 4 + ul ) 
[10933] ( move ul - 4 , ua ; move 3 + 2 , ul ; move 2 , 2 ) 
[10934] ( move ul , ul + ul ; move ua + 3 , ul / 3 ) 
[10935] ( move 3 , 4 ; move 2 / 3 , ul ; move ua , 4 ) 
[10936] ( move ul - ua , ua - 4 ; loop 0 , 5 , move ul , v0 ) 
[10937] ( move 3 , ua - ul ; move ua , 2 / ua ) 
[10938] loop 0 , 7 , move v0 - 4 , ul / v0 
[10939] ( move ua , ul / ua ; move ua , 2 ; move ua , 2 ) 
[10940] ( move 4 , ul - 2 ; move ul - ua , 2 ) 
[10941] ( move ua + 2 , ua ; move ua / 4 , 2 ) 
[10942] ( move ua , 4 ; loop 0 , 5 , move ul + v0 , v0 ) 
[10943] ( move ua - ul , ul ; loop 0 , 4 , move v0 , v0 - ul ) 
[10944] ( move ul , 3 / 4 ; loop 0 , 4 , move 4 , v0 + ul ) 
[10945] ( loop 0 , 5 , move ua / 2 , ua / v0 ; move v0 , v0 ) 
[10946] ( loop 0 , 6 , move v0 , 3 ; v1 = v0 ; move 3 , ul ) 
[10947] ( loop 0 , 6 , move ul - v0 , 4 ; move v0 , ul ) 
[10948] ( loop 0 , 5 , move v0 , v0 + v0 ; move ul , ua ) 
[10949] loop 0 , 4 , ( move v0 + v0 , 4 - v0 ; v1 = 4 ) 
[10950] ( ( move ul , ua * ua ; move 3 , ua - ul ) ; move 4 , ul ) 
[10951] loop 0 , 4 , move v0 + v0 , 4 + ul 
[10952] loop 0 , 6 , move 2 - v0 , ul / 3 
[10953] ( move ua , ua - ul ; loop 0 , 3 , move v0 , v0 - ul ) 
[10954] loop 0 , 3 , ( move ua , ul ; move ul , ua + 3 ) 
[10955] loop 0 , 2 , ( move v0 * v0 , v0 ; move ua + ul , 3 ) 
[10956] ( move 2 - ua , ua ; move ua , ua * ua ) 
[10957] ( move ul - ua , ua * ua ; v0 = 4 ; move 2 , 4 ) 
[10958] ( ( move 4 , 0 ; loop 1 , 5 , move 3 , ul ) ; v2 = 0 ) 
[10959] ( loop 1 , 3 , move ua , 2 ; move v1 , ua ) 
[10960] loop 0 , 5 , move 2 - ua , 4 
[10961] ( loop 0 , 6 , move v0 , 2 - v0 ; move ul , ua ) 
[10962] loop 0 , 5 , move ul - v0 , v0 / 3 
[10963] loop 0 , 3 , loop 1 , 2 , move 3 - v1 , 4 
[10964] ( move 4 - ul , 2 / 3 ; move 4 , ul ) 
[10965] ( move 2 , 2 ; loop 0 , 4 , move 3 , v0 ) 
[10966] ( move ul - ua , ul ; loop 0 , 6 , move 2 + ul , 4 ) 
[10967] ( move 0 , ul + ul ; loop 0 , 6 , move ua - v0 , v0 ) 
[10968] ( move ua , ul - 3 ; move ul , ul - ua ; move ua , ul ) 
[10969] ( move ul , 4 ; move ua + 3 , 2 - 4 ) 
[10970] ( move 4 , 4 * 4 ; move ua - ul , ul / 2 ; v0 = ul ) 
[10971] ( v0 = 4 ; move 3 , 4 + ul ; move v0 , ua / v0 ) 
[10972] ( move 3 , 3 ; move ul , ua * ua ; move ua , ul ) 
[10973] ( loop 0 , 3 , move ul , v0 / 3 ; move ua + ul , v0 ) 
[10974] ( move 4 , 2 / ua ; move ua + ul , ul ) 
[10975] ( move ul , 3 + ul ; loop 0 , 3 , move v0 - 4 , v0 ) 
[10976] ( move ua + ul , 4 ; move 3 , 3 / ua ) 
[10977] ( move 0 , ua + 4 ; loop 0 , 5 , move 3 / v0 , ua + ul ) 
[10978] ( move ua + ul , 4 + 2 ; loop 0 , 6 , move ul , ul ) 
[10979] ( move 0 , ul ; loop 0 , 4 , move 2 , v0 + 4 ) 
[10980] ( move 3 + 2 , ua + ua ; loop 0 , 3 , move v0 , 4 ) 
[10981] ( move ul - 4 , ua ; loop 0 , ul , loop 1 , 4 , move ul , ul ) 
[10982] ( move ul , 3 ; loop 0 , 4 , move ua , 4 ) 
[10983] loop 0 , 3 , move 4 - ua , ul / v0 
[10984] ( move ua , 2 + ul ; move 4 / ua , ua ; move 2 + ul , ul ) 
[10985] ( move 4 , ul / 2 ; move ua , ul - ua ; move ua , ua * ua ) 
[10986] ( move 4 , ua + ua ; move ua - ul , ua * ua ) 
[10987] loop 0 , 7 , move v0 + 2 , v0 / 2 
[10988] loop 0 , 3 , move 3 - ua , 3 * v0 
[10989] ( move 4 , ul + ul ; move ua - ul , ul - 3 ) 
[10990] ( move ul , ua + 2 ; loop 0 , 5 , move v0 + ul , v0 ) 
[10991] ( move 2 , 4 ; move ua , 4 / ua ; v0 = ua + ul ) 
[10992] ( move ua + ul , 0 ; loop 0 , 6 , move v0 , ul ) 
[10993] ( move 4 , ua ; move 4 , ua - 4 ) 
[10994] ( loop 0 , 5 , move 3 , 4 ; move v0 , v0 ) 
[10995] ( move ua , ua ; move 2 * 2 , ul ; move ua , ul + ul ) 
[10996] ( v0 = ua + 2 ; loop 1 , 4 , move v1 , v0 / v1 ) 
[10997] loop 0 , 6 , move 3 - v0 , v0 / ua 
[10998] ( move ua , ul / ua ; move ul , 2 - 4 ; move 2 , ul ) 
[10999] ( move 3 , ul - 3 ; move ul - ua , 0 ; move 4 - ul , 4 ) 
[11000] ( move 3 * 3 , 3 - ua ; move 4 - ul , 3 + ul ) 
[11001] ( loop 0 , 6 , move ul , ua * ua ; move ua , v0 * 3 ) 
[11002] ( move 3 , ua ; loop 0 , 5 , move v0 + v0 , 4 ) 
[11003] ( loop 0 , ul , loop 1 , 2 , move 4 , ul ; move 2 - ua , ul ) 
[11004] ( loop 0 , 5 , move 3 , ua / v0 ; move ua , 4 ) 
[11005] ( move 3 , 0 ; move ua , 4 ; move ul , ul ) 
[11006] loop 0 , 3 , ( move 4 , ul ; move ul , 3 ) 
[11007] ( move 4 , 3 ; ( move 3 , 3 ; move ua + ul , ul ) ) 
[11008] ( move ul - ua , ua ; move ua , ul / 4 ) 
[11009] loop 0 , 4 , move ua - 2 , v0 * v0 
[11010] ( move ua + ul , ua ; move 3 , ul ; move ua , 3 ) 
[11011] ( move ul - ua , 4 * 3 ; v0 = 4 - ua ; move v0 , ul ) 
[11012] ( move ul - ua , ua ; move 4 , 4 + ul ) 
[11013] ( loop 0 , 5 , move ul , v0 * 2 ; move v0 , v0 * ua ) 
[11014] ( move 0 , ul / 3 ; loop 0 , 6 , move ua , 2 ) 
[11015] ( move 4 , 4 * 3 ; loop 0 , 5 , move v0 + v0 , v0 ) 
[11016] ( loop 0 , 5 , move ul , v0 ; move ul , 4 ; move v0 , 4 ) 
[11017] loop 0 , 6 , move ua / 3 , ul / v0 
[11018] loop 0 , 7 , move v0 - 3 , ua / v0 
[11019] ( loop 0 , 6 , move v0 , 2 * v0 ; move v0 , 3 ) 
[11020] ( move 4 + ul , 4 ; move ua - ul , ua + 2 ) 
[11021] ( v0 = 4 ; move ua , v0 ; move ua , v0 * v0 ) 
[11022] ( move 4 , ua - 4 ; move ua , 2 / 4 ) 
[11023] loop 0 , 3 , ( move ul + v0 , 3 ; move v0 * v0 , ul ) 
[11024] ( move ua + ul , ua * ua ; move 4 , 4 ) 
[11025] loop 0 , 3 , ( move ul , v0 ; move v0 + 4 , v0 ) 
[11026] ( loop 0 , 5 , move 2 , v0 ; move v0 - ul , v0 ) 
[11027] ( loop 0 , 4 , move ul - 3 , v0 - 2 ; move 2 , ul ) 
[11028] loop 0 , 3 , ( move v0 + ua , 3 ; move 0 , v0 - ua ) 
[11029] ( move 3 - ua , ul ; move ul - ua , ua ; move 2 , ul ) 
[11030] ( move 3 , ua - ul ; move ul + ul , 4 ) 
[11031] ( move ua , ua * 3 ; move 2 , ul / 4 ) 
[11032] ( loop 0 , 5 , move ua , 4 ; loop 1 , 2 , move v0 , v0 ) 
[11033] ( move 4 , ul ; loop 0 , 2 , move ua , 2 ) 
[11034] ( move ua + ul , 4 ; move 0 , ua * ua ; move ua , ul ) 
[11035] ( move ul , 3 ; loop 0 , 5 , move v0 , v0 / ua ) 
[11036] ( move ul - ua , 2 ; move ul - ua , 4 / ua ) 
[11037] ( move 4 , 2 ; loop 0 , 2 , move 4 , ul ) 
[11038] ( loop 0 , 5 , move ua - ul , v0 ; move v0 , v0 ) 
[11039] ( move ul , ua ; loop 0 , 5 , move v0 , v0 * 2 ) 
[11040] ( loop 0 , 4 , move v0 - ul , ul ; move ua , v0 / ua ) 
[11041] ( move 3 , ua - ul ; move ua - ul , 2 ) 
[11042] ( move ua + ul , ua * ua ; move 2 , 2 ) 
[11043] ( move ua + ul , 0 ; ( move 3 , ul ; move ul , ua * ua ) ) 
[11044] loop 0 , 3 , ( move v0 , v0 * ua ; move ua , 4 + 4 ) 
[11045] ( move ua + ul , 0 ; loop 0 , 4 , move v0 , ua / v0 ) 
[11046] ( move 3 , ul ; move ul , ua + 4 ; move ua , ul ) 
[11047] ( move 0 - ua , ul / ua ; loop 0 , 4 , move v0 , v0 ) 
[11048] loop 0 , 3 , move ua - ul , 3 * 3 
[11049] ( move ua , ua * 4 ; loop 0 , 2 , move 3 + v0 , 3 ) 
[11050] loop 0 , 4 , move ua , 3 / 2 
[11051] loop 0 , 4 , move ul - 4 , v0 + ul 
[11052] ( move ul , ua * ua ; move 4 , ua ; move ua + ul , ul ) 
[11053] ( move ua , ua * ua ; move ul + ul , 4 ) 
[11054] ( move 4 + ul , ua ; move ua , ua + ul ; move ua , 3 ) 
[11055] ( move 3 , ul ; move ua - ul , ul ; move ua , ul ) 
[11056] ( ( move ua , 2 + ul ; move 3 , ul ) ; move ua , ul ) 
[11057] loop 0 , 5 , ( v1 = v0 + v0 ; move 3 , ul + v1 ) 
[11058] ( move ua , ua ; loop 0 , 6 , move ul , v0 + 3 ) 
[11059] ( move 3 , ul - ua ; move ua , ul ; move ua , 2 ) 
[11060] loop 0 , 7 , move 3 - v0 , 2 - v0 
[11061] ( loop 0 , 5 , move v0 , ul ; move ua - ul , v0 ) 
[11062] loop 0 , 7 , move 2 - v0 , ul - 3 
[11063] ( loop 0 , 3 , move ul , ul ; move ua + 2 , ul ) 
[11064] ( v0 = ua ; loop 1 , 7 , move 2 / v1 , v0 * v0 ) 
[11065] loop 0 , 4 , move ua + 2 , 4 * 4 
[11066] ( move ua + ul , 0 - ul ; move ul , ul ; move 4 , ua ) 
[11067] loop 0 , 3 , ( move 3 + 2 , v0 ; move 3 , ul ) 
[11068] ( move ul , ul ; move 3 + ul , ul ; move 4 , 3 / ua ) 
[11069] ( move 4 , ul - 4 ; move ua , 2 ) 
[11070] ( move ua , ul ; move ua , ua - 4 ; move ua , 3 - ua ) 
[11071] ( move 3 - ua , 0 ; loop 0 , 4 , move v0 , v0 * v0 ) 
[11072] loop 0 , 6 , move v0 / 2 , 3 + 2 
[11073] ( move ua , ua ; loop 0 , 5 , move v0 - ul , ul ) 
[11074] ( loop 0 , 6 , move 3 + v0 , 3 ; move 3 , ul ) 
[11075] ( move ul + ul , 4 / ua ; move ua , 4 + ul ; v0 = ua ) 
[11076] ( loop 0 , 6 , move 3 , 4 ; move ul , v0 / ua ) 
[11077] ( v0 = ua - 4 ; loop 1 , 7 , move 4 / v0 , ul ) 
[11078] loop 0 , 6 , move v0 + ul , v0 - 3 
[11079] ( loop 0 , 4 , move 3 , ul ; move ua , ul ) 
[11080] ( loop 0 , 6 , move v0 , 3 ; move ua , 2 ) 
[11081] ( loop 0 , 6 , move 2 , v0 ; move v0 + ul , v0 ) 
[11082] loop 0 , 3 , ( move ua , v0 / ua ; move 4 , v0 + 2 ) 
[11083] ( move 2 , 4 ; loop 0 , 3 , move v0 * v0 , 4 ) 
[11084] loop 0 , 3 , ( v1 = v0 - ua ; move ul + v1 , ul ) 
[11085] loop 0 , 3 , ( move 4 , v0 - ul ; move ul , 4 ) 
[11086] ( move ua - 3 , ua - 3 ; loop 0 , 5 , move v0 , v0 ) 
[11087] ( move ua + ul , 4 * 2 ; move 4 , ul ) 
[11088] ( move 4 , 0 ; loop 0 , 3 , move v0 + v0 , 4 ) 
[11089] ( move 4 + ul , ul + ul ; move ua - 4 , 4 ; move ua , ua ) 
[11090] ( loop 0 , 2 , move 0 - 2 , v0 ; move v0 + ua , ul ) 
[11091] ( move 4 , 2 ; v0 = ua * 3 ; move 4 + ul , 4 / ua ) 
[11092] ( move 4 * 2 , ul ; move ua - ul , 2 ) 
[11093] ( move ul , ul ; ( move ua , ul ; move 3 , 2 - ul ) ) 
[11094] ( move ua - ul , 0 ; move 0 , 4 * 2 ; move ua - ul , ul ) 
[11095] ( move 4 , ua ; move ua + ul , ua * ua ) 
[11096] ( move ua , ul ; move 2 / 3 , 2 ; move ua , ua * ua ) 
[11097] ( move 3 / 2 , ua * ua ; move ul , ul ; move ua , ua ) 
[11098] ( loop 0 , 5 , move ul , 0 ; move v0 , v0 * v0 ) 
[11099] loop 0 , 5 , move ua - 4 , v0 * v0 
[11100] loop 0 , 3 , ( move ul , ul ; move v0 * v0 , 4 / v0 ) 
[11101] loop 0 , 6 , move ua - 4 , 3 + v0 
[11102] ( loop 0 , 4 , move v0 , v0 ; move ua , 4 ; move ul , ul ) 
[11103] loop 0 , 4 , move 4 * 2 , v0 + ul 
[11104] ( move 3 , ul ; move ua , ua / 4 ) 
[11105] ( move ua + ul , ul ; move ul , ul ; move ua , ua / 4 ) 
[11106] loop 0 , 6 , move 3 , 2 / 3 
[11107] ( loop 0 , 5 , move ul + v0 , v0 ; move ua , ul + v0 ) 
[11108] ( move 4 , ua ; loop 0 , 5 , move 2 , v0 * v0 ) 
[11109] ( move 4 , ul / 3 ; move 3 , 2 ) 
[11110] ( move 2 , ul ; loop 0 , 4 , move ul , ul ; move v0 , v0 ) 
[11111] ( move ua , ul / ua ; move ua , 3 * 3 ; v0 = ua ) 
[11112] ( move 4 + ul , ul / 4 ; move ua , 3 ; move 3 , ul ) 
[11113] ( loop 0 , 5 , move v0 , 2 ; move ul - v0 , ul ) 
[11114] ( loop 1 , 5 , move v1 + ul , ul ; move v1 , 2 ) 
[11115] ( loop 0 , 3 , move v0 * v0 , ul ; move ua , v0 ) 
[11116] ( move ul + ul , ua / 3 ; move ua , 4 ) 
[11117] ( loop 0 , 4 , move ul , ul ; move v0 , ul / v0 ) 
[11118] ( move 3 , 3 ; ( v2 = 3 / 2 ; move 2 - ua , v2 ) ) 
[11119] ( move ua / 3 , ul ; move ul , ul ; move 4 , ua - ul ) 
[11120] ( move ua + ul , ua - 4 ; loop 1 , 6 , move ul , ul ) 
[11121] ( move ua , ua - 2 ; v0 = ul ; move v0 - ua , v0 ) 
[11122] ( move ul , 4 ; loop 0 , 4 , move v0 , v0 * v0 ) 
[11123] loop 0 , 2 , ( v1 = ul ; move ul , v1 ; move 4 , ul ) 
[11124] loop 0 , 6 , move 3 - v0 , v0 * v0 
[11125] ( move 4 , 2 ; move 0 - ua , ul ) 
[11126] ( move ua , ul ; v0 = ua - 2 ; move v0 + v0 , v0 ) 
[11127] ( move ul / ua , ul ; move 2 , ul / 3 ; move ua , ul ) 
[11128] ( loop 0 , 3 , move 4 , 2 ; move ul - v0 , ul ) 
[11129] ( ( move ua , 3 / ua ; move ul , ul / 2 ) ; move ua , 2 ) 
[11130] ( move ua - ul , ul ; loop 0 , 4 , move v0 + v0 , v0 ) 
[11131] ( move ua + ul , ul / ua ; move 2 + 2 , 2 ) 
[11132] ( move 4 , ua * ua ; loop 0 , 4 , move 2 + ul , v0 ) 
[11133] ( move ua , ua - ul ; move 4 + ul , ul - 4 ) 
[11134] ( move 4 , 2 - ua ; move 3 , ua - ul ) 
[11135] ( move ua , 4 + 3 ; v0 = 3 - ua ; move ul , v0 / ua ) 
[11136] ( loop 0 , 9 , v1 = 3 ; move v0 , 2 ; move 3 , 2 ) 
[11137] loop 0 , 4 , move ua - 2 , v0 - ul 
[11138] ( ( move ul , ul ; move 3 , ul ) ; move 0 - ua , 4 ) 
[11139] ( loop 0 , 5 , move ul , v0 / 3 ; move v0 , v0 + ul ) 
[11140] ( v0 = ua - ul ; move v0 , 4 ; move ul - v0 , ul ) 
[11141] loop 0 , 5 , move 4 / v0 , 4 * 2 
[11142] ( move ua , ua + ul ; move ua / 4 , ua - 4 ; move ua , ua ) 
[11143] ( move ua , 4 ; move 0 - ua , ul ; v0 = 3 ) 
[11144] ( v0 = 4 * 2 ; move 2 - ua , 0 ; move ua + ul , v0 ) 
[11145] ( move ul - ua , 4 ; loop 0 , 6 , move v0 , v0 ) 
[11146] ( v0 = ua - ul ; move v0 , ua * v0 ; move v0 , 2 ) 
[11147] loop 0 , 3 , ( move ul , 3 ; move 3 / v0 , v0 ) 
[11148] ( loop 0 , 3 , move v0 , ua - ul ; move 3 , 3 + ul ) 
[11149] ( move ua - ul , ul / 2 ; move ua , 2 ; v0 = ul ) 
[11150] ( move ul - 3 , 3 ; move 4 * 2 , 2 ) 
[11151] ( move ua , ua - 4 ; move ua , ua / 4 ; v0 = ua * 4 ) 
[11152] ( move 2 , ul ; loop 0 , 5 , move ul , v0 + v0 ) 
[11153] ( move ua + ul , 4 ; move ul , 2 ) 
[11154] ( loop 0 , 3 , move v0 + 2 , 0 ; move 3 , ua * ua ) 
[11155] ( move ul , ul ; loop 0 , 6 , move ul - 3 , ul ) 
[11156] ( move ua + 2 , 4 - ul ; move 3 , 2 ) 
[11157] ( loop 0 , 6 , move v0 - ul , v0 ; move v0 , v0 ) 
[11158] loop 0 , 2 , loop 1 , 3 , move v1 , ua / 4 
[11159] loop 0 , 4 , move 4 / v0 , 2 - v0 
[11160] ( loop 0 , 4 , move 2 , ul ; move ua , ul / v0 ) 
[11161] loop 0 , 3 , loop 1 , 2 , move 3 - v0 , v0 
[11162] ( ( move 3 , ua ; move ul , 4 ) ; move ua + ul , ul ) 
[11163] ( move ul / ua , ua + 2 ; loop 0 , 3 , move 3 - v0 , ul ) 
[11164] ( move ua , ul / 3 ; loop 0 , 6 , move 2 , ul ) 
[11165] ( loop 0 , 5 , move 4 , v0 ; move ul - ua , v0 + v0 ) 
[11166] ( move ua , 3 ; loop 0 , 6 , move v0 , 3 ) 
[11167] ( move ul / 2 , ua ; loop 0 , 4 , move ul + ul , ul - v0 ) 
[11168] ( move 2 , 0 ; move 4 + 3 , ua * ua ) 
[11169] ( move ua - ul , ul ; loop 0 , 5 , move v0 , v0 / 2 ) 
[11170] ( move ua + ul , 2 ; loop 0 , 2 , move 3 , 2 ) 
[11171] ( move 2 , 3 ; move ua , ul ; move ua , 2 + ul ) 
[11172] ( move ua , ul ; move ul , ua / 3 ; move ua , 2 ) 
[11173] ( move 3 - ua , ul ; loop 0 , 6 , move ul , ul ) 
[11174] ( move 4 - ua , ul ; move ua , 4 + ul ) 
[11175] loop 0 , ul , loop 1 , 5 , move ul + v1 , v0 - 2 
[11176] ( move 4 , ua ; loop 0 , 4 , move ua , 4 ) 
[11177] ( move ua , ua ; move 4 - ua , 2 ) 
[11178] ( loop 0 , 4 , move 4 , ul ; move ul , ua ) 
[11179] loop 0 , 6 , move ua - 4 , v0 - ul 
[11180] ( move ua - 3 , ul ; move ua , ua * ua ) 
[11181] ( move 2 , ua ; move 3 - ua , ua * ua ) 
[11182] ( move 4 , 2 ; loop 0 , 6 , move v0 , v0 * v0 ) 
[11183] loop 0 , 6 , move ul - v0 , 4 * 3 
[11184] ( move ul , ul ; loop 0 , 6 , move ul , v0 + v0 ) 
[11185] ( move ul , ul - 4 ; move 2 , ua - ul ; move ua , 4 ) 
[11186] ( move ul , ua ; loop 0 , 6 , move 4 / v0 , v0 ) 
[11187] ( move 3 , ua ; move ul , ul ; move 0 - ua , ul - 2 ) 
[11188] ( move 2 , ul ; move ua , 3 * 2 ) 
[11189] ( move ua , ua ; ( move ul , ua / 2 ; move ua , 4 / ua ) ) 
[11190] ( move 0 - 4 , 2 + ul ; move ua - ul , 3 + ul ) 
[11191] ( loop 0 , 4 , move v0 - ul , v0 ; move ua , ul - v0 ) 
[11192] ( move 2 + ul , ua ; ( move ul , ua / 4 ; move 4 , ul ) ) 
[11193] ( move 4 - ua , 3 - ul ; move ua + 2 , 3 - ul ) 
[11194] ( move 4 , ul ; move 3 - ua , 2 ) 
[11195] ( loop 0 , 6 , move ul , 3 ; move ua , v0 / ua ) 
[11196] ( move 2 , 4 ; move ua , 3 / 2 ) 
[11197] ( v0 = 4 + ul ; move ua , v0 ; move v0 , 4 ) 
[11198] ( move 3 - ua , ua - ul ; move ua , ua - ul ) 
[11199] ( move ul , 3 ; ( move ua - ul , 4 ; move ua , ul / ua ) ) 
[11200] ( move ua - 2 , ua ; move 3 , 4 * 4 ; move ua , ul ) 
[11201] ( move 3 , 2 ; loop 0 , 9 , v1 = 3 ; move v0 , v0 ) 
[11202] ( move ua + ul , ul / 4 ; move 3 , ul + ul ) 
[11203] ( move 3 , 4 ; loop 0 , 4 , move v0 , v0 + v0 ) 
[11204] loop 0 , 7 , move 3 , v0 - 2 
[11205] ( move 4 , ua * ua ; move ua , ul / 2 ) 
[11206] ( move ul - ua , ul / 4 ; move ua , 4 ) 
[11207] ( loop 0 , 3 , move 4 , ul ; move v0 , ua ) 
[11208] ( move 4 , ul / ua ; move 4 + 2 , ua - ul ) 
[11209] ( move ul , ul ; loop 0 , 3 , move 4 , v0 + ul ) 
[11210] ( loop 0 , 6 , move ul , 2 ; move v0 , v0 - ul ) 
[11211] ( move ul , 2 / ua ; move ua + 3 , 4 ) 
[11212] ( move ua , 4 / 3 ; move 3 - ul , ul ; move ua , ua + ul ) 
[11213] ( move ua , 4 ; loop 0 , 3 , move v0 , 2 ) 
[11214] ( move ua + 4 , ua - ul ; move 4 , 3 ) 
[11215] ( loop 0 , 6 , move v0 , v0 + ul ; move ul , v0 ) 
[11216] ( move ua - ul , 3 ; move 4 , 4 / ua ) 
[11217] ( move ua - ul , 2 ; move 3 , 4 ) 
[11218] ( move 3 - ua , ul / ua ; move ua - 2 , 2 ; v0 = ul ) 
[11219] ( move ua - ul , ul ; move ua , 4 + 4 ) 
[11220] ( move 4 , ul / 2 ; move ul , ul ; move ul - ua , ua + ul ) 
[11221] ( move 3 + ul , ua ; move ua + ul , 4 * 2 ) 
[11222] ( move ua - ul , 3 ; move ua , 4 ; move 4 / ua , 0 ) 
[11223] ( move ul , ul ; loop 0 , 4 , move v0 , v0 + 4 ) 
[11224] loop 0 , 3 , ( move ua , v0 / 2 ; move v0 , ul ) 
[11225] ( v0 = ua ; move ul - ua , 3 ; move v0 , v0 * v0 ) 
[11226] loop 0 , 7 , move v0 - ul , v0 / 3 
[11227] ( move ua , ua / 4 ; move 2 , ul + ul ) 
[11228] ( move 4 , ua ; loop 0 , 4 , move v0 , 3 / ua ) 
[11229] loop 0 , 3 , loop 1 , 2 , move v1 + 4 , 4 / v0 
[11230] ( loop 0 , 5 , move ul , ul / v0 ; move v0 , ul ) 
[11231] ( move ua , 0 ; move ua + 4 , ua - 4 ) 
[11232] ( move ua - 2 , 4 - ul ; move ua + ul , 2 ) 
[11233] ( move ul , ua - ul ; loop 0 , 6 , move 3 , v0 ) 
[11234] ( move ul - ua , ua * ua ; move 4 + 3 , ua - 2 ) 
[11235] ( loop 0 , 6 , move v0 , v0 * v0 ; move v0 , 3 ) 
[11236] ( move ua + ul , 2 ; loop 0 , 6 , move ul , v0 + 2 ) 
[11237] ( move ul - ua , 3 ; loop 0 , 3 , move v0 , ul ) 
[11238] ( move ul + ul , ua - 4 ; move ua , ul / ua ) 
[11239] ( loop 0 , 4 , move v0 , 2 ; move 4 , ul / 3 ) 
[11240] ( loop 0 , 3 , move v0 + 4 , ua + v0 ; move v0 , ul ) 
[11241] ( move ul - ua , 3 ; move ua , 2 ; move ul , ua ) 
[11242] ( move ul , ua - ul ; loop 0 , 4 , move 2 , v0 ) 
[11243] loop 0 , 3 , move 3 - ua , ua - ul 
[11244] ( move ua + 3 , ua - ul ; ( move ua , 3 ; move ua , 2 ) ) 
[11245] ( move 4 , 0 ; move ul , ul ; move 4 , 3 ) 
[11246] loop 0 , 7 , move 3 - v0 , 4 * v0 
[11247] ( move ul + ul , 3 * 2 ; v0 = 2 ; move 4 + ul , ul ) 
[11248] ( loop 0 , 4 , move v0 , 2 ; move ua , v0 / ua ) 
[11249] loop 0 , 3 , move v0 + 3 , ua - v0 
[11250] loop 0 , 2 , ( move ul , v0 ; move 3 + v0 , ua - ul ) 
[11251] ( move 4 , ul ; loop 0 , 4 , move ua , 3 ; move v0 , ua ) 
[11252] ( move ua - ul , ul ; move ul - 4 , ul - ua ) 
[11253] loop 0 , 2 , ( move v0 * ua , v0 ; move 3 , ua * ua ) 
[11254] ( move ul - ua , 4 ; move 3 - ua , 4 + ul ) 
[11255] ( move ua , ul ; move ua , ul - 3 ; move ul , 2 ) 
[11256] loop 0 , 3 , ( move ua , v0 ; move ul , 2 / ua ) 
[11257] ( move 2 , 2 ; loop 1 , 5 , move v1 , v1 ) 
[11258] loop 0 , 3 , ( move v0 , v0 ; move 3 * v0 , ul ) 
[11259] loop 0 , 3 , ( move v0 , ul / v0 ; move ua , v0 ) 
[11260] loop 0 , 7 , ( v1 = ua - v0 ; move ul , v1 + v1 ) 
[11261] loop 0 , 3 , ( move ua , v0 ; move 0 , v0 + 2 ) 
[11262] ( move ua , ua ; move ul , ul ; move ua + ul , 4 ) 
[11263] ( move 4 , 4 ; move 0 , ul ; move ua , ul / ua ) 
[11264] ( v0 = ul - 4 ; move 4 , v0 ; move v0 , ul ) 
[11265] ( ( move ua , ua - ul ; move 2 , ul ) ; move 3 + ul , ul ) 
[11266] ( move ua , ua ; ( move ua , 3 ; move ua + ul , 3 - ul ) ) 
[11267] ( move 0 - 3 , ua ; move 3 , ul ) 
[11268] ( move ua - ul , ua ; move 4 * 2 , ul + ul ) 
[11269] ( move 4 + ul , 3 / 2 ; loop 0 , 5 , move v0 , ul ) 
[11270] loop 0 , 2 , move v0 - ua , 2 + v0 
[11271] ( move ua / 2 , ua + 2 ; loop 1 , 5 , move 3 , v1 ) 
[11272] ( move 0 , 4 ; loop 0 , 6 , move 4 , v0 ) 
[11273] loop 0 , 4 , ( move ua - v0 , 3 / v0 ; v1 = v0 ) 
[11274] ( move ua + 3 , ua - ul ; move ua , 4 ; move 2 , ul + ul ) 
[11275] ( move 3 , ul + ul ; ( move ul , ul - 3 ; move 3 , ul ) ) 
[11276] ( move 3 , 3 / 2 ; move ua , ul ) 
[11277] loop 0 , 6 , move v0 / 2 , ul / ua 
[11278] ( loop 0 , 4 , move 4 , 2 ; move v0 , ul + v0 ) 
[11279] loop 0 , 4 , move ul - ua , 0 - 4 
[11280] ( move 2 + ul , 4 * 2 ; move 3 + ul , ua * ua ) 
[11281] ( move ul , 4 ; ( move ua - ul , ul ; move ua , ul ) ) 
[11282] ( move ua , ul ; ( move ul , 3 + ul ; move ul - ua , ul ) ) 
[11283] ( move 0 - ua , ua * 4 ; move 4 + 4 , ua + ul ) 
[11284] ( move ua , 2 ; move ul , ul ; move ul - ua , 4 ) 
[11285] loop 0 , 7 , move 2 - v0 , 4 + v0 
[11286] ( v0 = 3 - ua ; loop 1 , 6 , move ul , ul ; move 4 , ul ) 
[11287] ( move 4 , 4 + ul ; loop 0 , 4 , move 2 , v0 ) 
[11288] ( move 3 , ul ; loop 0 , 6 , move v0 , 3 ) 
[11289] loop 0 , 2 , ( move v0 , 2 ; move ua , 3 ) 
[11290] loop 0 , 6 , loop 1 , ul , move v1 - ua , 3 * 3 
[11291] ( ( move 4 + ul , ua ; move 3 , ul ) ; move ul , ul ) 
[11292] ( move ua + 2 , ul + ul ; move ua , 3 + ul ; move 3 , ul ) 
[11293] ( loop 0 , 6 , move v0 , v0 ; move v0 + ul , v0 ) 
[11294] ( loop 0 , 5 , move ul , 0 ; move v0 , v0 + ul ) 
[11295] loop 0 , 5 , move ua / 4 , v0 / 2 
[11296] ( move ua + ul , ul / 3 ; move 3 , ua / 4 ) 
[11297] ( loop 0 , 2 , move ua - 3 , ul ; move ul , ul ) 
[11298] ( move 3 , ua * 3 ; move ua + 4 , ul ; move 2 , 3 - ul ) 
[11299] ( move ul - ua , 2 ; v0 = 4 ; move ul + v0 , v0 ) 
[11300] ( move ua + ul , ul ; loop 0 , 5 , move 3 , 3 - ul ) 
[11301] ( move 4 , 4 / ua ; v0 = ua - 2 ; move ul + v0 , ul ) 
[11302] ( move 0 , 4 + ul ; loop 0 , 6 , move v0 , ul ) 
[11303] ( move ua + ul , 4 / ua ; move ul , 2 ) 
[11304] loop 0 , 4 , ( v1 = ul ; move v1 + v0 , v1 / 3 ) 
[11305] ( loop 0 , 6 , move 2 / v0 , ua ; move ua , v0 ) 
[11306] ( move ua + ul , ua ; move ul , ul ; move 0 - ua , ua ) 
[11307] ( loop 0 , 3 , move ul - 4 , ul ; move v0 , v0 + v0 ) 
[11308] ( move 4 , ua - ul ; loop 0 , 5 , move 3 , v0 ) 
[11309] ( move 4 , ul + ul ; move 4 , ua * ua ) 
[11310] loop 0 , 3 , ( move v0 / ua , ul ; move 4 , 3 ) 
[11311] loop 0 , 3 , ( move ul / v0 , v0 * v0 ; move 4 , ua ) 
[11312] ( move ua , 2 ; move 2 , ul ; move 4 , ul ) 
[11313] loop 0 , 3 , ( move v0 , ul ; move 0 - 3 , ul ) 
[11314] ( loop 0 , 5 , move v0 / ua , v0 ; move v0 , ul ) 
[11315] ( v0 = ul - ua ; move v0 , ul ; move v0 , v0 + 4 ) 
[11316] ( move 3 , 3 - ul ; v0 = ua + 2 ; move v0 , v0 ) 
[11317] ( move ul , ua ; move ul , 3 + ul ; loop 0 , 4 , move ua , 2 ) 
[11318] ( move ua , 4 + ul ; move ul - 4 , ua / 3 ) 
[11319] ( move ua , ul - 4 ; loop 0 , 6 , move 4 , ul ) 
[11320] ( move 2 + ul , 2 ; loop 0 , 5 , move v0 , 2 ) 
[11321] ( move ul , 3 / 4 ; loop 0 , 6 , move v0 , v0 ) 
[11322] ( move ua + ul , ua + 4 ; move ul , ul ; move ul - ua , ua ) 
[11323] ( loop 0 , 9 , v1 = ul ; move ua , v0 ; move ua , v0 ) 
[11324] ( loop 0 , 4 , move 3 , v0 ; move v0 + ul , ul ) 
[11325] ( move ua , ul / ua ; move ua - ul , 2 ) 
[11326] ( loop 0 , 5 , move v0 , ua / v0 ; move ua , ul ) 
[11327] ( move ua , ua * ua ; loop 0 , 4 , move v0 , 3 - ul ) 
[11328] ( v0 = 3 - ua ; loop 2 , 3 , move v0 , 3 / v0 ) 
[11329] loop 0 , 3 , ( move v0 / 2 , v0 ; move ua , ul ) 
[11330] ( move ua + 2 , ua - ul ; ( move ua , 4 ; move ul , 0 ) ) 
[11331] loop 0 , 2 , ( move v0 + ua , ul ; move ul , 3 ) 
[11332] ( move ul - ua , ul / ua ; move 2 , ua / 4 ) 
[11333] loop 0 , 2 , ( loop 1 , 2 , move 4 , ul ; move ul , v1 ) 
[11334] ( move 3 - ua , 0 - ul ; move ul , ua ; move ua , ua * ua ) 
[11335] ( move ua , ul / 3 ; move 3 , 4 + ul ; v0 = 0 ) 
[11336] loop 0 , 3 , ( move v0 + ul , 2 ; move v0 , v0 ) 
[11337] ( move 2 , 4 * 3 ; move ua , ul ) 
[11338] ( move 4 , ul ; loop 0 , 3 , move v0 , 4 ; move ul , ua ) 
[11339] ( loop 0 , 6 , move 4 - ul , ul ; move v0 , ul ) 
[11340] ( move ua , ul ; move 2 , ul ; move 4 + ul , ul - ua ) 
[11341] ( move 3 , ul ; move ul , ul ; move ul - ua , ul / ua ) 
[11342] ( move ua , ul - 2 ; loop 0 , 4 , move ua , 4 ) 
[11343] loop 0 , 5 , move ul - v0 , 4 / ua 
[11344] ( move 4 , 3 ; move ua + ul , ua * ua ) 
[11345] ( move 4 + ul , ul ; move ua + ul , ua * ua ) 
[11346] loop 0 , 6 , move ul - 4 , v0 / 2 
[11347] ( loop 0 , 5 , move v0 , ul ; move v0 - 2 , ul + v0 ) 
[11348] loop 0 , 3 , move 3 + 2 , ua - v0 
[11349] ( move 2 , 3 / ua ; move ua , 4 + ul ; move ua , 2 ) 
[11350] ( move ul , ul ; loop 0 , 4 , move ua - ul , 2 ) 
[11351] ( move ua , 0 ; move ul , ul - 3 ; move 2 - ua , ul ) 
[11352] loop 0 , 6 , move 3 / v0 , ul / 3 
[11353] ( move ul - ua , 0 ; v0 = ul ; loop 1 , 5 , move ul , ul ) 
[11354] loop 0 , 7 , move 2 , 3 - v0 
[11355] ( loop 0 , 4 , move ul , ua ; move v0 , 3 * v0 ) 
[11356] ( loop 0 , 4 , move v0 , v0 / ua ; move v0 + ul , ua ) 
[11357] loop 0 , 3 , move v0 * 4 , v0 / 3 
[11358] loop 0 , 7 , ( v1 = v0 - ua ; move v0 , ua * v1 ) 
[11359] ( move ua , ua ; loop 1 , 6 , move ua + ul , 3 + ul ) 
[11360] ( move ua , 3 ; move ul - ua , 4 + ul ) 
[11361] ( move ua , 4 ; move ul , ul ; move 4 , ul ) 
[11362] loop 0 , 2 , ( move ua / 3 , v0 ; move ua , ul + v0 ) 
[11363] ( loop 0 , 5 , move v0 , v0 - ul ; move v0 , ul + ul ) 
[11364] ( v0 = ua ; move 2 - v0 , ua ; move 4 , v0 - ul ) 
[11365] ( move 4 , ul / ua ; move ul , ua + ul ; move 4 , ua * ua ) 
[11366] ( move ul - 4 , 3 ; move ua , ua * ua ; v0 = 2 ) 
[11367] loop 0 , 3 , move 0 - 4 , 2 
[11368] loop 0 , 3 , ( move ul , ul ; move v0 - ua , v0 ) 
[11369] ( move ua , ua ; loop 0 , 6 , move ul , 4 + ul ) 
[11370] ( move ua - ul , ul / ua ; move ul - 3 , 3 + ul ) 
[11371] ( ( move 4 , ua - ul ; move ua , ul / 4 ) ; move 0 , ul ) 
[11372] loop 0 , 7 , move 4 - v0 , ul - v0 
[11373] ( move ul - ua , ul / 3 ; move ul + ul , ul ; move ua , ua ) 
[11374] ( v0 = 4 / ua ; loop 1 , 5 , move ua , v0 + 4 ) 
[11375] loop 0 , 6 , move v0 - ul , ua / 3 
[11376] ( move ua , ua ; loop 0 , 9 , v1 = v0 ; move 4 , v0 ) 
[11377] ( move ua - 3 , ua - ul ; loop 0 , 6 , move v0 , v0 ) 
[11378] ( move ul - ua , ul ; loop 0 , 6 , move ua - 4 , v0 ) 
[11379] ( move ua , 2 ; move 4 , 4 + ul ) 
[11380] ( loop 0 , 6 , move v0 - ua , 3 ; move v0 , ua - v0 ) 
[11381] ( move 2 - ua , ul / 4 ; move 4 - ua , ul ) 
[11382] ( move ua , 4 * 4 ; move ul - 4 , ul ) 
[11383] ( move ul - ua , ul - 4 ; move 2 , 4 + ul ; move ul , ul ) 
[11384] ( v0 = ua + 2 ; move v0 , ua ; move ul + v0 , v0 ) 
[11385] loop 0 , 6 , move v0 - 4 , ua * ua 
[11386] loop 0 , 5 , move 2 - 4 , v0 * v0 
[11387] ( loop 0 , 6 , move v0 , v0 - 2 ; move v0 , v0 ) 
[11388] ( move ua - ul , ul / 3 ; move 4 + ul , 4 + ul ) 
[11389] ( move ul , ua + 4 ; loop 0 , 2 , move ua + v0 , ul ) 
[11390] ( loop 0 , 3 , move 2 , ul ; move 4 , 3 ) 
[11391] ( v0 = 2 - ua ; move v0 , v0 ; move ua / v0 , ul ) 
[11392] ( move 4 , ul ; move ul , 4 + ul ; move 3 / ua , ua ) 
[11393] ( move 3 , 0 ; loop 0 , 5 , move v0 , ua - v0 ) 
[11394] ( v0 = ua - ul ; loop 1 , 6 , move v0 , 3 * 3 ) 
[11395] loop 0 , 2 , loop 1 , 3 , move ua + v1 , 4 
[11396] ( move ua , 4 ; ( move ul , ul ; move ul - 4 , ul ) ) 
[11397] ( move 3 , 0 ; loop 1 , 4 , move 3 , 3 + ul ) 
[11398] ( move ua - 2 , ua ; loop 0 , 5 , move v0 , v0 - ul ) 
[11399] ( loop 0 , 4 , move v0 , 4 ; move v0 , 0 ) 
[11400] ( loop 0 , 6 , move 2 , ul ; move v0 , v0 + v0 ) 
[11401] ( move ul , ul ; loop 0 , 4 , move v0 , v0 ) 
[11402] ( move ul - 4 , ua ; move 4 / ua , ul ; move ua , ul ) 
[11403] loop 0 , 3 , ( move ul , ua + ua ; move ua , ul + ul ) 
[11404] loop 0 , 7 , move ua - 3 , ul - v0 
[11405] ( move 4 , ua / 3 ; move 3 + ul , ua * ua ) 
[11406] loop 0 , 3 , ( move v0 / ua , v0 ; move ua , ul ) 
[11407] ( move ua + 2 , ul ; move 3 , 4 ) 
[11408] ( move 3 , ul ; move 4 , 3 / 2 ) 
[11409] ( move ua + ul , ul ; move ua , 0 - 4 ) 
[11410] loop 0 , 7 , ( v1 = ua / v0 ; move v0 , ua - v1 ) 
[11411] ( move 2 , ua ; move 2 + ul , 4 / ua ; move ul , ul ) 
[11412] ( move ul + ul , ul ; loop 0 , 5 , move v0 , 3 ) 
[11413] ( loop 0 , 3 , move 2 , ul ; move v0 , ua ) 
[11414] ( move 3 - 4 , ua - ul ; move ua , ul ; move 3 , ul ) 
[11415] ( loop 0 , 6 , move ul , ul / v0 ; move 4 , v0 ) 
[11416] ( move ua , ul - 3 ; move 3 , 4 + ul ; v0 = ua ) 
[11417] ( move ua + 2 , ul + ul ; move ua - ul , ul ) 
[11418] ( move 2 , ul ; loop 0 , 4 , move v0 + v0 , v0 * 2 ) 
[11419] ( move 0 - ua , ul ; move 4 + 4 , ul ; move ua , 3 ) 
[11420] ( move ul , 4 ; ( move ul , ul ; move 3 , ul ) ; move ua , ul ) 
[11421] ( move 4 , ul ; move 4 , 4 * 3 ) 
[11422] ( loop 0 , 5 , move v0 , ua * ua ; move v0 - ul , ul ) 
[11423] loop 0 , 7 , move 3 * 3 , 3 
[11424] ( move 2 , ul / 4 ; ( move ua , ul ; move ua , 3 ) ) 
[11425] ( move ua + ul , ul / 4 ; move ua - ul , ul ) 
[11426] ( move ua - ul , 3 ; loop 0 , 4 , move 2 , v0 ) 
[11427] ( move ua , ua - ul ; move ua , ua / 4 ; v0 = ul ) 
[11428] ( move ul / 3 , ul ; loop 0 , 3 , move v0 + ul , v0 ) 
[11429] ( loop 0 , 3 , move ul + ul , v0 * 3 ; move v0 , ul ) 
[11430] ( move 3 , 3 ; ( move ua , ua / 4 ; v0 = ua ) ) 
[11431] ( move ua , ul / ua ; loop 0 , 3 , move ua , 2 ) 
[11432] ( move 4 - ua , ua * ua ; move 3 , ul - ua ) 
[11433] ( loop 0 , 3 , move v0 - 3 , 2 / v0 ; move ul , v0 ) 
[11434] ( loop 0 , 3 , move 3 , 4 * v0 ; move v0 , ul ) 
[11435] ( loop 0 , 5 , move v0 , v0 ; move v0 + ul , 3 ) 
[11436] ( move ua - 2 , 0 ; move ul , ua + ul ; move ua - ul , ul ) 
[11437] ( move ul , 4 / ua ; move ua , ua / 4 ; move ul , ua ) 
[11438] ( move ul , ua * ua ; move ua + ul , ul ; move 3 , 4 ) 
[11439] ( move 2 - ua , 4 + ul ; move ua + ul , ul ) 
[11440] ( move 4 - ua , ul ; move ua + ul , 2 ) 
[11441] ( loop 0 , 6 , move 4 , 2 ; move 2 , v0 ) 
[11442] ( move 2 , 4 - ua ; move ua + 3 , 0 ; move ul - ua , ul ) 
[11443] loop 0 , 3 , move 3 , 3 / 2 
[11444] loop 0 , 2 , ( move 4 , v0 ; move 2 + v0 , v0 ) 
[11445] ( move ul + ul , ul / 3 ; move 3 + 2 , ua / 3 ) 
[11446] ( move ua - ul , 2 ; move ua , ua / 3 ; move ul , 2 ) 
[11447] ( move 4 , ul / ua ; move ul - ua , ua / 3 ; move ua , ua ) 
[11448] ( ( move 2 , ua * ua ; move ul , ul ) ; move ua , 4 + 3 ) 
[11449] ( move ua , ul + ul ; v0 = 4 * 3 ; move v0 - ua , 2 ) 
[11450] ( move ul - ua , ua * ua ; move 3 , 4 ) 
[11451] ( move 0 , ua * ua ; loop 0 , 5 , move v0 , v0 - 4 ) 
[11452] ( move 4 + ul , 2 ; move ul , ul ; move ua , ul - ua ) 
[11453] ( move ul , ua - 4 ; move ua , ul ; move ul - ua , 2 / ua ) 
[11454] ( v0 = 3 ; move 2 , v0 ; loop 1 , 6 , move v0 , ul ) 
[11455] ( move 4 + 2 , ua ; move ua , 4 ) 
[11456] ( move ua , ul ; v0 = ua - 2 ; move v0 , v0 ) 
[11457] ( loop 0 , 5 , move 4 , 2 ; move ua , v0 ) 
[11458] loop 0 , 3 , loop 1 , ul , move v1 - ua , ua * ua 
[11459] ( move ua , 4 - ul ; loop 0 , 5 , move v0 , ul - v0 ) 
[11460] ( ( move 4 , ul ; v0 = ul - ua ) ; move ua , ua * v0 ) 
[11461] loop 0 , ul , loop 1 , 6 , move 0 - 3 , ua - v1 
[11462] ( move ua + ul , 3 / ua ; move ua - 4 , ul ) 
[11463] ( move ua , ua ; move ul - ua , ul ; move ua + ul , ua * 4 ) 
[11464] ( loop 0 , 4 , move v0 , 3 * 2 ; move v0 , ul ) 
[11465] ( move ul / ua , 2 ; loop 0 , 4 , move 3 , v0 * v0 ) 
[11466] ( move ua + ul , 0 ; move 3 , 2 ; move ua , 2 + ul ) 
[11467] ( move ul - ua , ua ; move ua + ul , ul / 4 ) 
[11468] ( move 2 , ua * ua ; move ul , 2 ; move ua , ul ) 
[11469] ( move ul - ua , 2 ; move ua + ul , ua - ul ) 
[11470] loop 0 , 3 , move 4 + 2 , v0 + ul 
[11471] ( loop 0 , 6 , move ul - v0 , ul ; move ul , 4 ) 
[11472] ( move ul - 3 , 0 ; move ul - ua , ua / 4 ; v0 = ua ) 
[11473] ( move 3 , 0 ; move ua / 2 , ul ; move ul , ul ) 
[11474] loop 0 , 3 , move ua - 4 , v0 - ul 
[11475] ( loop 0 , 4 , move v0 , v0 ; move ua + 3 , 3 * v0 ) 
[11476] ( move ua , ul ; loop 0 , 4 , move v0 , v0 + 3 ) 
[11477] ( loop 0 , 6 , move ul , ul ; move v0 , v0 - ul ) 
[11478] ( move ua , 3 / ua ; loop 0 , 6 , move ul , v0 ) 
[11479] ( move 2 + ul , 3 + ul ; move ua , ua / 3 ) 
[11480] loop 1 , 3 , ( move ul , v1 ; move 2 + ul , 4 ) 
[11481] ( move ua + 2 , ua / 4 ; move ul , ul ; move ul , 2 ) 
[11482] ( move ul , ul / 4 ; move 3 , 2 ; move 3 + 3 , ul ) 
[11483] loop 0 , 2 , move 3 , 4 + 3 
[11484] ( loop 0 , 6 , move ul - v0 , 2 ; move v0 , 4 ) 
[11485] ( move 4 - ua , ua ; move ul , ul ; move ua - ul , ul + ul ) 
[11486] ( move 4 , 4 ; move ul - 4 , ul ) 
[11487] ( move ua + ul , ul ; v0 = 4 ; move v0 , v0 * v0 ) 
[11488] loop 0 , 3 , ( move v0 , v0 ; move v0 , 4 + ul ) 
[11489] ( ( move ua , ua ; move ul , ua + ul ) ; move 4 + 3 , ul ) 
[11490] ( move 3 , ua ; ( move ul - ua , ul ; move 2 , ul ) ) 
[11491] ( move 2 - ua , ua ; v0 = ua * ua ; move ua - ul , v0 ) 
[11492] ( ( move 3 , ul ; move ua , 4 ) ; move ul , ul + ul ) 
[11493] ( move ua , 4 / 2 ; loop 0 , 3 , move v0 * 4 , v0 ) 
[11494] ( move ul , 0 ; ( move ua , 0 ; move ua - 2 , ua / 3 ) ) 
[11495] ( move 4 , ua ; move ua - 4 , 2 ; move ua , ul ) 
[11496] ( loop 0 , 5 , move 0 , 3 ; loop 1 , 2 , move v0 , ul ) 
[11497] loop 0 , 3 , ( move 3 , ul ; move v0 , 2 / v0 ) 
[11498] loop 0 , 4 , move v0 - 4 , v0 - 4 
[11499] ( move 3 / ua , ua ; move ua , ua ; move ua + 2 , 2 ) 
[11500] ( ( move ua , 4 / ua ; move ua , ua * ua ) ; move ul , ul ) 
[11501] loop 0 , 7 , move ua / 4 , v0 + 3 
[11502] ( move ua , ul ; move ul , ul ; move 2 + ul , ul / ua ) 
[11503] loop 0 , 7 , move 4 / v0 , ul / 3 
[11504] ( move 2 , ul ; loop 0 , 4 , move 4 + v0 , ua / 4 ) 
[11505] ( move ul , ul ; loop 0 , 4 , move ua - v0 , 4 ) 
[11506] ( loop 0 , 4 , move v0 , ul ; move 2 , ua ; move ua , v0 ) 
[11507] ( loop 0 , 6 , move v0 , 4 ; move 4 , 0 ) 
[11508] ( loop 0 , 3 , move v0 , v0 * v0 ; move v0 , ul ) 
[11509] ( move 3 , 4 * 2 ; loop 0 , 5 , move v0 , v0 ) 
[11510] ( move ul , 3 ; loop 0 , 2 , move 4 , ua + ul ) 
[11511] ( move 4 * 2 , 2 / ua ; move ul + ul , ul ) 
[11512] ( loop 0 , 5 , move v0 , ua / 4 ; move ul , v0 + ua ) 
[11513] loop 0 , 3 , ( move ua , v0 ; move v0 , v0 + 2 ) 
[11514] ( v0 = ul - ua ; loop 1 , 7 , move 3 , v0 / ua ) 
[11515] ( move ua , ua ; move 2 + ul , ua + ul ; move 4 , ul ) 
[11516] ( ( move 4 , ul ; move ul , ul / 3 ) ; move 2 - ua , ua ) 
[11517] loop 0 , 3 , loop 1 , 2 , move ul + ul , ua - v1 
[11518] ( move ua + 3 , 4 * 3 ; move 3 + ul , ua - ul ) 
[11519] ( loop 0 , 2 , move ua - v0 , ul + v0 ; move ua , 3 ) 
[11520] ( move ul - ua , 0 ; ( move ul , ua - ul ; move ua , ul ) ) 
[11521] ( move ua - ul , ua - 2 ; move ua , 4 - ul ) 
[11522] ( move ua , ul ; move 3 , 4 / ua ; move ul , ul ) 
[11523] ( move ua , 2 / 4 ; move ul , 3 ; move ua , 0 ) 
[11524] ( move 2 , 3 / 4 ; move 4 , ul ; move ul , ua ) 
[11525] ( move ua + 2 , 4 + ul ; move ul , 2 ) 
[11526] ( move ul , 3 ; loop 0 , 2 , move v0 - ua , ul + v0 ) 
[11527] ( v0 = 4 + ul ; move ua , v0 + ul ; move v0 , v0 ) 
[11528] ( move ua + ul , ua - 2 ; move ul , ul ; move ul + ul , ul ) 
[11529] ( move 2 , ul / ua ; move ua , 4 ; move 2 - ua , ul ) 
[11530] ( move 0 - 4 , ua / 4 ; move ua , 4 ; move ul , ua ) 
[11531] loop 0 , 3 , ( move ua , v0 ; move v0 - ua , ul ) 
[11532] ( move ua , 3 + 3 ; loop 0 , 6 , move v0 , v0 ) 
[11533] ( move ua + ul , ua ; move ul - ua , 2 / ua ) 
[11534] ( loop 0 , 6 , move v0 , ul ; move v0 , ua / v0 ) 
[11535] ( move 3 , ul ; ( move ul / 3 , ul ; move ua + ul , ul ) ) 
[11536] loop 0 , 4 , move 4 + v0 , ua - 4 
[11537] loop 0 , 6 , move 3 - v0 , ul - v0 
[11538] ( move ul + ul , 4 + ul ; move ul , ua ; move ua + ul , ul ) 
[11539] ( loop 0 , 3 , move 3 , ul + v0 ; move v0 , v0 ) 
[11540] ( move ua , ua - ul ; loop 0 , 6 , move v0 , v0 ) 
[11541] loop 0 , 2 , loop 1 , 3 , move ua - v1 , 4 
[11542] ( move ua - 2 , 4 - ua ; loop 0 , 5 , move v0 , ul ) 
[11543] ( move ua , 4 ; move 3 - ua , 2 - ua ) 
[11544] ( v0 = ua - 3 ; move 3 , v0 ; move 3 , 2 ) 
[11545] ( move 4 , ul / ua ; move ua + 2 , ul ) 
[11546] ( move ul , ul ; move 4 , 4 ; move ua + ul , ul ) 
[11547] loop 0 , 2 , ( move v0 , ua * ua ; move 4 , v0 - 4 ) 
[11548] ( move ul - ua , ua ; move 3 / ua , ul ; move ua , ul ) 
[11549] loop 0 , 3 , ( move v0 , v0 ; move ua , ua * ua ) 
[11550] ( loop 0 , 4 , move 3 + v0 , ua * ua ; move 3 , 0 ) 
[11551] ( move 4 , 2 - ua ; move ua , ul ; move 4 , 4 ) 
[11552] ( v0 = 4 ; move v0 , ua - v0 ; move ua , v0 ) 
[11553] loop 0 , 7 , move v0 - 2 , v0 / 2 
[11554] ( move ua , ul ; loop 0 , 5 , move v0 , ua - v0 ) 
[11555] ( move 3 , 4 ; loop 0 , 6 , move 3 / v0 , v0 ) 
[11556] ( move ua , 3 ; loop 0 , 6 , move ua / v0 , 2 ) 
[11557] ( move 4 + ul , ua + 4 ; loop 0 , 6 , move ul , v0 ) 
[11558] ( move ul - ua , ul / 2 ; move ul - 4 , ul ) 
[11559] ( move ul - 4 , 2 + ul ; loop 0 , 3 , move 2 , 3 / ua ) 
[11560] ( v0 = 3 / 4 ; loop 1 , 4 , move ua , v0 + v1 ) 
[11561] loop 0 , ul , loop 1 , 2 , move 3 + 2 , ua / 4 
[11562] ( move ua , 4 * 2 ; move ua , ua * ua ) 
[11563] ( move 4 , ul ; move ul , ul ; move ua , 2 - ua ) 
[11564] ( move ua + ul , ul ; move ul , ul ; move ua + 3 , ua + 2 ) 
[11565] ( move 2 , ua + 3 ; loop 0 , 5 , move 4 , 4 ) 
[11566] ( move 4 , ul / 2 ; move 3 - ul , ua - ul ) 
[11567] ( v0 = 3 ; move ua + ul , v0 ; move ua , ua / v0 ) 
[11568] ( move 2 - ua , ua ; ( move ua + ul , ul ; move ul , ul ) ) 
[11569] ( move 0 , ul ; loop 0 , 4 , move 2 , v0 ; move ua , ua ) 
[11570] loop 0 , 7 , move v0 - 2 , ua / v0 
[11571] loop 0 , 3 , ( move ul , ua - 4 ; move 3 + v0 , v0 ) 
[11572] loop 0 , 7 , move ua - 3 , v0 * v0 
[11573] ( move ul , 3 ; move ua , ul ; move 3 - ul , ul ) 
[11574] ( move 3 + ul , ul - 4 ; move ua , 4 ) 
[11575] ( move 0 , ul / ua ; loop 0 , 6 , move v0 + ul , ul ) 
[11576] ( move ua + ul , ul ; move ua , ua - 3 ) 
[11577] ( v0 = 0 ; loop 1 , 5 , move v0 - v1 , v0 - 2 ) 
[11578] loop 0 , 3 , loop 1 , 2 , move ul + v0 , 2 
[11579] ( move ua - ul , ua * ua ; loop 0 , 3 , move ua , 3 ) 
[11580] ( loop 0 , 3 , move ul , ul - v0 ; move 4 , v0 ) 
[11581] ( move 3 , 3 - 4 ; move ul , ul ; move ua - 2 , ul ) 
[11582] ( move ua , 4 - ua ; move 0 , 2 ; move 2 , 4 ) 
[11583] ( loop 0 , 4 , move v0 , v0 / ua ; move v0 , 4 ) 
[11584] ( move ua , ul - 4 ; move ua , 4 / 3 ) 
[11585] ( move ua - 4 , ua + ua ; move ua - ul , ua * ua ) 
[11586] ( move ua + 4 , ul ; move ua + ul , 4 ) 
[11587] loop 0 , 5 , move v0 + v0 , 4 * 4 
[11588] loop 0 , 2 , ( move 3 , v0 * v0 ; move 4 , ul ) 
[11589] ( move ua , ua * ua ; loop 0 , 5 , move v0 , 3 ) 
[11590] ( move 4 , ua ; move ua + 3 , 2 ) 
[11591] loop 0 , 3 , ( move ul , ul / v0 ; move ua - v0 , 2 ) 
[11592] ( move 0 - 3 , 4 / ua ; move ua , 4 * 3 ) 
[11593] ( loop 0 , 5 , move v0 , 4 / ua ; move v0 - ua , v0 ) 
[11594] ( ( move ul + ul , ua ; move ua + ul , ul ) ; move ul , ul ) 
[11595] ( move ua , ul - 2 ; loop 0 , 6 , move 3 , v0 ) 
[11596] ( loop 0 , 5 , move 4 , ul ; move 3 * 2 , 3 ) 
[11597] ( move ua , 3 ; move 4 + ul , 2 ; move ul + ul , 4 + ul ) 
[11598] ( move ua + ul , ua + ul ; loop 0 , 3 , move v0 + ul , ul ) 
[11599] ( move ua + ul , ul / 3 ; loop 0 , 3 , move 2 + v0 , 2 ) 
[11600] ( ( move ua , ua - ul ; v0 = 4 ) ; move v0 , ua * ua ) 
[11601] ( move ua , ua ; move 3 * 2 , ua / 4 ) 
[11602] ( loop 0 , 3 , move ul , ul ; move 4 , 4 ) 
[11603] ( move ua , 0 ; move ul , 2 ; move ua + ul , 0 ) 
[11604] ( move ua , 3 ; move 4 - ua , 2 + ul ) 
[11605] ( move ul , 2 ; move 4 - ul , 0 ; move 2 - ua , 0 - ul ) 
[11606] ( move 4 , 4 ; loop 0 , 6 , move ul , v0 + ul ) 
[11607] ( move 0 , 3 ; loop 0 , 5 , move 3 , ul ) 
[11608] ( loop 0 , 5 , move v0 , ua * ua ; move v0 , ua ) 
[11609] ( move ua , ua ; move ul , ul ; move ua , ul / 3 ) 
[11610] loop 0 , 2 , loop 1 , 2 , move v1 - 2 , v1 
[11611] ( move 4 + ul , ua + ul ; move ul , ul ; move 3 , ul ) 
[11612] ( loop 0 , 3 , move 2 / v0 , v0 ; move 3 , ua + ul ) 
[11613] ( move ul , ul / ua ; loop 0 , 6 , move v0 , v0 - 3 ) 
[11614] ( move ul - ua , ua ; move 4 + ul , 2 / ua ) 
[11615] ( move 3 , ua + 3 ; loop 0 , 3 , move v0 - 2 , ul ) 
[11616] ( move ul - ua , ua ; ( move 3 , ua ; move 4 , 4 + 3 ) ) 
[11617] ( move ua , 2 ; loop 0 , 6 , move ua , 4 ) 
[11618] ( move 2 , ul ; move ul , ul ; move ua + ul , ul ) 
[11619] ( loop 0 , 6 , move 3 , ua * ua ; move v0 , v0 ) 
[11620] loop 0 , 4 , ( v1 = ua / 3 ; move v1 , v1 / ua ) 
[11621] ( move ul , ul ; move ua , ul - ua ; move ua , ua - 2 ) 
[11622] ( move ua , ua - 2 ; move ul + ul , ul ; move ua , ul ) 
[11623] ( move 3 , ul ; move ua - ul , ul ; move ul , ul - ua ) 
[11624] loop 0 , 2 , move ua + 3 , 4 - v0 
[11625] ( loop 0 , 6 , move v0 , 2 ; move 3 / v0 , 2 + v0 ) 
[11626] loop 0 , 4 , move ul + ul , 3 + 3 
[11627] ( move ul , ul ; move 3 + 2 , ul ; move ua , 2 ) 
[11628] ( move ua , ua - ul ; move 4 + ul , 3 / ua ) 
[11629] loop 0 , 3 , ( move ua / v0 , v0 ; move 3 , ul ) 
[11630] ( loop 0 , 4 , move ul , v0 ; move v0 * v0 , ul ) 
[11631] ( move 2 + 2 , ul ; loop 0 , 6 , move v0 - ul , v0 ) 
[11632] ( move ua , 4 ; move 4 , ul - 3 ) 
[11633] ( move 4 , 4 ; loop 0 , 4 , move ua - v0 , 2 ) 
[11634] ( move ua , ul / ua ; loop 0 , 3 , move 3 , 4 - v0 ) 
[11635] ( move 3 , ul + ul ; loop 0 , 5 , move v0 , 4 ) 
[11636] loop 0 , 2 , ( move v0 , v0 ; move ua , 3 ) 
[11637] ( loop 0 , 3 , move 4 - ua , ul ; move ua / v0 , v0 ) 
[11638] ( loop 0 , 4 , move v0 , ua + 2 ; move ul - v0 , ul ) 
[11639] loop 0 , 5 , move 2 + v0 , ua / 3 
[11640] loop 0 , 3 , ( move v0 , v0 ; move v0 + ua , ul ) 
[11641] ( move ua + ul , 2 ; move ul , ul ) 
[11642] ( move ua , ul ; loop 0 , 9 , v1 = v0 ; move 4 , v0 ) 
[11643] ( move ua , ul ; move ul , ul ; move ua + 2 , ul ) 
[11644] ( move 4 , ul ; move ul , 3 + ul ; move ul + ul , ul ) 
[11645] loop 0 , 3 , ( move 3 + v0 , ul ; move v0 , v0 ) 
[11646] ( move 4 , ua ; loop 0 , 5 , move v0 , v0 * 4 ) 
[11647] ( move ul - ua , ul / 3 ; move 2 - ua , ul / ua ) 
[11648] ( move ul , ua ; move 4 , 4 + 3 ; move ul , ul ) 
[11649] ( loop 1 , 4 , move v1 , 4 ; move ua , ul / v1 ) 
[11650] loop 0 , 4 , move 3 + v0 , ua * ua 
[11651] ( move ul - ua , 2 ; move ua , 3 / 2 ) 
[11652] ( loop 0 , 6 , move v0 , 2 ; move 3 , v0 ) 
[11653] ( move ua + 2 , ua ; move ua , 4 + 4 ) 
[11654] ( move ua , ua / 4 ; move 4 , ua * ua ) 
[11655] ( move 4 - ul , ul ; loop 0 , 5 , move 2 , 4 ) 
[11656] loop 0 , 3 , ( move v0 , ua - 2 ; move ul , v0 ) 
[11657] ( move ua , ua + ul ; move ul , ul + ul ; move 3 , 2 + 2 ) 
[11658] loop 0 , ul , loop 1 , 3 , move v0 - ua , v1 + ul 
[11659] ( move 2 , ua * ua ; loop 0 , 5 , move ul + v0 , v0 ) 
[11660] ( move ul , ul ; move ua , ua + 4 ; move 3 , 2 ) 
[11661] loop 0 , 3 , ( move 4 , ul ; move ua + v0 , 3 ) 
[11662] loop 0 , 2 , move 4 + v0 , ua / 3 
[11663] ( move 3 - ua , ul ; move ua , 4 * 4 ) 
[11664] loop 0 , 3 , ( move v0 , v0 ; move v0 + 4 , ua ) 
[11665] loop 0 , 2 , ( loop 1 , 2 , move ul , v0 ; move ua , v0 ) 
[11666] ( move 3 , 2 ; move ua , ul ; move ul , 4 ) 
[11667] ( move ua , ua ; move ul - 3 , 4 ; move ul + ul , ul ) 
[11668] ( loop 0 , 6 , move 2 , ua - v0 ; move ul , ul ) 
[11669] ( ( move ul , ua * ua ; move ul - ua , ua ) ; move 4 , ul ) 
[11670] ( move 4 , ul ; move ul - ua , 4 * 4 ) 
[11671] ( ( move ua , ua ; move ua , 2 ) ; move 3 / ua , ul / 2 ) 
[11672] ( loop 0 , 5 , move v0 - ul , ul + ul ; move v0 , v0 ) 
[11673] ( loop 0 , 3 , move 4 , v0 ; move ua , ul ) 
[11674] loop 0 , 6 , move ul - v0 , ua / 3 
[11675] ( move 4 - ua , ul / 4 ; move ua , ua + ul ) 
[11676] ( move ua , ua ; move 3 , 4 ; move ua , ua - ul ) 
[11677] loop 0 , 2 , loop 1 , 3 , move 4 , ul + v0 
[11678] ( move ua + 3 , 2 / 3 ; move ul - ua , ul ) 
[11679] ( move ua + ul , ul ; loop 0 , 5 , move v0 , v0 + ul ) 
[11680] ( move 2 , ul ; ( move 4 , ul ; move ul , ul ) ; move ul , ul ) 
[11681] ( move ua , ua - 4 ; move 3 - ua , 2 ; move ul , ul ) 
[11682] loop 0 , 3 , loop 1 , 2 , move ul + v1 , v1 + v0 
[11683] ( move ua + ul , 2 / ua ; move ua , 4 ) 
[11684] ( move ua + 3 , 2 ; move ul / 3 , ua + ul ; move 2 , ul ) 
[11685] ( move ul , 2 - ua ; move 4 + ul , 2 - ua ; move 2 , ul ) 
[11686] ( move 4 , ua ; loop 0 , 3 , move ul - ua , 4 ) 
[11687] ( loop 0 , 6 , move v0 , v0 ; move v0 , ua - 4 ) 
[11688] loop 0 , 2 , ( move ul , v0 - 4 ; move ua , v0 ) 
[11689] loop 0 , 5 , move ua / 2 , v0 / 3 
[11690] ( move ua - 2 , ua * ua ; move 0 - 4 , ul ; move ul , 3 ) 
[11691] loop 0 , 5 , move ua / v0 , v0 - 4 
[11692] ( move 3 , 4 ; move ua , ul ; move 2 - ul , ul ) 
[11693] ( move ua + 2 , ul / ua ; move 2 + 2 , 4 ) 
[11694] ( v0 = ua - 4 ; move 4 , ul - v0 ; move 4 , v0 ) 
[11695] ( move 4 - ul , ul ; move ua , 4 + 3 ) 
[11696] ( move 4 , ul + ul ; move ul , ul ; move 4 , ul / ua ) 
[11697] ( loop 0 , 5 , move 2 , v0 ; move ua , ul ) 
[11698] ( loop 0 , 4 , move ua , 4 ; move ul , ul ) 
[11699] ( move 2 , ua - ul ; v0 = 2 + 2 ; move v0 , v0 ) 
[11700] ( move ua , 4 ; ( move 2 , ua ; move 4 , 2 - ua ) ) 
[11701] ( move 2 , ua - 4 ; move ua , ul ; move 2 + ul , ul ) 
[11702] loop 0 , 3 , ( move v0 , ua ; move 4 + v0 , 2 - ua ) 
[11703] loop 0 , 6 , move v0 / 2 , ul / v0 
[11704] ( v0 = ua + 3 ; move 4 , v0 / ua ; move v0 , 2 ) 
[11705] ( move ua , 0 ; move ul , 3 ; move 4 , ua - ul ) 
[11706] loop 0 , 7 , move ua / 4 , ul + v0 
[11707] ( move ua + 3 , 4 ; loop 0 , 5 , move v0 , v0 ) 
[11708] ( move ua , ua + ua ; move 4 , ua / 4 ; move 4 + ul , ua ) 
[11709] ( move ua + 4 , ul ; loop 0 , 5 , move v0 , ul / v0 ) 
[11710] ( move ul , ua * ua ; loop 0 , 6 , move ua , 2 ) 
[11711] loop 0 , 7 , move 2 - v0 , v0 / 3 
[11712] ( move ua + ul , ua ; move ul - ua , 0 ; move 0 - 3 , ul ) 
[11713] ( loop 0 , 2 , move 3 , 2 - v0 ; move 4 , v0 ) 
[11714] ( move 2 , 3 / 2 ; move ua + 2 , ul ) 
[11715] ( move ul , ul - ua ; move ua , ul ; move ua - 2 , ul ) 
[11716] ( move ul - ua , ul / ua ; move ul - ua , ul + ul ) 
[11717] ( loop 0 , 6 , move 3 / v0 , v0 ; move v0 , 3 ) 
[11718] ( ( move ul , ua + 4 ; move ua , ua + 4 ) ; move 4 , ul ) 
[11719] ( move ua , ul ; v0 = ua ; loop 1 , 2 , move ua , ua - 3 ) 
[11720] ( move ul - ua , ul ; loop 0 , 4 , move v0 , v0 ) 
[11721] ( move ua , ul ; loop 0 , 4 , move ul , v0 ) 
[11722] loop 0 , 2 , ( move v0 , 4 ; move ua , 4 ) 
[11723] ( loop 0 , 5 , move ul , v0 - ul ; move v0 , ua ) 
[11724] ( move ua , 4 + 3 ; loop 0 , 6 , move v0 , v0 ) 
[11725] ( v0 = 4 + ul ; loop 1 , 7 , move 4 - v1 , v0 ) 
[11726] ( move ul , 4 ; move ua , 2 ; loop 0 , 2 , move ul , v0 ) 
[11727] loop 0 , 5 , move v0 + 3 , ua * ua 
[11728] ( move 3 - ua , ua ; move ua , ua - ul ; move 4 , ua ) 
[11729] ( move ua , ul ; move ua , ua * ua ; move ul , ul ) 
[11730] ( loop 0 , 4 , move 3 , 4 ; move ua , ul ) 
[11731] ( move ul , ul ; move 3 - ua , ul ; move 3 , 3 ) 
[11732] ( loop 0 , 5 , move ul , v0 / 2 ; move v0 , v0 - 4 ) 
[11733] ( move ua + ul , 4 ; move 4 , ua / 4 ; v0 = ul ) 
[11734] loop 0 , ul , ( move ua , v0 ; loop 2 , 5 , move 2 , ul ) 
[11735] ( loop 0 , 5 , move ul , v0 * v0 ; move 3 * 3 , v0 ) 
[11736] ( loop 0 , 2 , move 4 , 2 ; move ua , v0 * 4 ) 
[11737] loop 0 , 5 , move ua - 4 , v0 - 3 
[11738] loop 0 , 2 , move ul - ua , v0 - 4 
[11739] ( ( move 4 , ul ; move ul , 4 + ul ) ; move ua , ul ) 
[11740] ( loop 0 , 3 , move v0 + v0 , 4 ; move v0 , ul ) 
[11741] ( loop 0 , 6 , move ul , v0 / 3 ; move v0 , v0 ) 
[11742] ( move ua , 0 ; move ul / ua , ul ; move 4 + ul , 3 ) 
[11743] ( loop 0 , 5 , move v0 , v0 * v0 ; move ul , ua ) 
[11744] ( move 2 , ul / ua ; loop 0 , 3 , move ua , 4 ) 
[11745] loop 0 , 3 , loop 1 , 2 , move v0 * 3 , 3 
[11746] ( move ul - ua , ua - ul ; move ua , 3 + 2 ) 
[11747] loop 0 , 7 , move ul - v0 , v0 / 4 
[11748] ( move ua , ua ; ( move ua / 4 , 3 ; move ua , 2 ) ) 
[11749] loop 0 , 6 , move v0 - ul , v0 / 2 
[11750] ( move 0 , 2 ; loop 0 , 5 , move ua / v0 , v0 ) 
[11751] ( v0 = 3 + 2 ; move ua , v0 / 4 ; move ua , v0 ) 
[11752] ( move ua , 4 / ua ; move 4 - 2 , 4 + ul ) 
[11753] ( move ua , 3 / 4 ; move 3 , ul ; v0 = ul ) 
[11754] ( move 0 , 4 ; loop 0 , 5 , move 4 - v0 , 4 ) 
[11755] ( move 3 - ua , ul ; loop 0 , ul , loop 1 , 2 , move 2 , ul ) 
[11756] ( loop 0 , 2 , move ua , ua - 4 ; move v0 , ua + v0 ) 
[11757] ( move ua , ul - 3 ; move ul , ul ; move 4 , 3 ) 
[11758] ( move ua , ul / ua ; loop 0 , 3 , move v0 , 4 ) 
[11759] ( move ua + ul , ul ; loop 0 , 5 , move v0 + ul , 4 ) 
[11760] ( move ua , 4 + ul ; move ua , ua - 2 ) 
[11761] ( move ul - ua , 4 ; move ua , ul / 4 ) 
[11762] ( move ua , ul / ua ; move 0 , ua * ua ; move ua , 4 * 2 ) 
[11763] loop 0 , 7 , move v0 - ul , v0 + 3 
[11764] ( move 3 , ua ; move ul - ua , 2 ) 
[11765] ( loop 0 , 6 , move ul , v0 * v0 ; move ua , ua ) 
[11766] ( move ul , ul ; loop 0 , 4 , move v0 + 3 , v0 ) 
[11767] ( move ua + ul , 3 - ua ; move 4 , 3 ) 
[11768] ( ( v0 = 4 + ul ; move 4 , v0 ) ; move v0 , v0 ) 
[11769] loop 0 , 2 , ( move v0 - ua , v0 - ul ; move ua , v0 ) 
[11770] ( move ua , ul - 4 ; loop 0 , 5 , move v0 , v0 ) 
[11771] loop 0 , 6 , move ul - v0 , v0 * 3 
[11772] ( loop 0 , 6 , move v0 , 3 * v0 ; move v0 , 0 ) 
[11773] loop 0 , 6 , move ul - v0 , 2 - v0 
[11774] ( move ua + ul , ul ; move ul , ul ; move 2 - ua , ul ) 
[11775] ( move ua - ul , ul ; move 0 - ul , ua ; move 4 , ul ) 
[11776] ( move ua , ul / ua ; loop 0 , 3 , move v0 + v0 , v0 ) 
[11777] ( loop 0 , 6 , move v0 , v0 ; move ul , v0 + ul ) 
[11778] ( loop 0 , 3 , move 3 - ua , v0 ; move v0 , v0 ) 
[11779] ( move ul , ul + ul ; loop 0 , 6 , move 2 , v0 * v0 ) 
[11780] ( move ua , ua ; move 2 , ua ; move ua + 3 , 4 ) 
[11781] loop 0 , 5 , move ua / 4 , ua / v0 
[11782] ( move 4 , ul ; move 3 , ul ; move 2 , ua * ua ) 
[11783] ( ( move 2 - ua , ul - 2 ; move ua , ul ) ; v0 = ul ) 
[11784] ( move 2 , ua - ul ; loop 0 , 3 , move 3 , ua + 2 ) 
[11785] ( loop 0 , 4 , move 4 - ua , 3 - ul ; move ul - ua , ua ) 
[11786] ( move 0 - ua , ul ; ( move ua , ua + ul ; move 3 , ul ) ) 
[11787] ( move 2 - ua , ua - ul ; move ua , 4 ) 
[11788] ( v0 = ua + 3 ; loop 1 , 6 , move v1 , v0 / ua ) 
[11789] ( move ua , ul ; move 2 , ul ; loop 0 , 5 , move v0 , ul ) 
[11790] loop 0 , 3 , move 3 + 2 , ua - 4 
[11791] ( loop 0 , 6 , move v0 , v0 + 4 ; move v0 , v0 ) 
[11792] loop 0 , 5 , ( v1 = 4 + ul ; move v0 , v1 * v1 ) 
[11793] ( move ua + ul , ua ; move ua + 4 , 4 ) 
[11794] ( move ua , ul ; move 3 , 4 ; move ul - ua , ua ) 
[11795] ( move 3 - ua , 3 ; v0 = ua + 2 ; move v0 , ul ) 
[11796] ( v0 = ua * ua ; move 3 , ul - v0 ; move ua , v0 ) 
[11797] loop 0 , 6 , move v0 - 3 , v0 - 4 
[11798] ( move 0 - ul , 3 ; v0 = ua ; loop 1 , 2 , move ua , 2 ) 
[11799] ( loop 0 , 6 , move v0 , ul ; move ua / 3 , v0 + ul ) 
[11800] ( move ul / 4 , ul - ua ; loop 0 , 6 , move 3 , v0 ) 
[11801] ( loop 0 , 4 , move 2 , v0 ; move 4 , v0 ) 
[11802] ( move 3 + ul , ul ; move ul - ua , ul / 2 ; move ua , ul ) 
[11803] ( move ua + ul , 0 ; move ua / 4 , ul ; move 2 , 4 ) 
[11804] ( move ua , ul ; move 3 , ul ; move ua , ua + 4 ) 
[11805] ( loop 0 , 3 , move 2 , 4 ; move v0 , ul ) 
[11806] ( move ua + 2 , ul ; move 2 - ua , 2 ) 
[11807] ( v0 = 3 + ul ; move v0 , v0 ; move 3 - ua , v0 ) 
[11808] ( move 0 - 4 , 2 ; move ul - ua , ua * ua ) 
[11809] ( move ua , ul ; move ul - ua , ul ; move 4 / 2 , 4 ) 
[11810] ( loop 0 , 3 , move ua - 2 , v0 ; move ua , ul ) 
[11811] ( move ul - ua , 4 ; loop 0 , 3 , move 4 , v0 ) 
[11812] ( move 4 , ua ; move ul - ua , 0 - 2 ) 
[11813] loop 0 , 5 , move v0 - 4 , 4 / v0 
[11814] ( move ua , ua / 2 ; move ul , ul ; move ua , ua / 4 ) 
[11815] ( move ua , 4 ; loop 0 , 4 , move ua , 2 ) 
[11816] ( move 0 , 4 ; loop 0 , 6 , move v0 , v0 / 3 ) 
[11817] ( loop 0 , 4 , move 2 , v0 - ul ; move ua , v0 + ua ) 
[11818] ( move 4 + ul , 2 ; move ua , 2 / 3 ; move 0 , 0 ) 
[11819] ( loop 0 , 6 , move ul , 2 ; move ua , v0 ) 
[11820] ( move ua , ua * 4 ; move ua , 3 ; move 3 - ul , ul - ua ) 
[11821] ( move ul + ul , 4 ; move ua + 2 , 4 ) 
[11822] ( move 3 + ul , ul ; move ul , 3 ; loop 0 , 4 , move ul , ul ) 
[11823] loop 0 , 6 , move v0 - 3 , 3 - v0 
[11824] ( move ua , ua - ul ; move 3 , ua ; move ua , ua / 3 ) 
[11825] ( move ua + ul , ua * ua ; move 2 , 3 ; move ua , 4 ) 
[11826] ( move 2 - ua , ua - ul ; move 4 , ul ) 
[11827] ( move ul - 3 , ul - 4 ; loop 0 , 4 , move ul , ul ) 
[11828] ( move 2 / 4 , ul ; loop 0 , 4 , move ul + v0 , v0 ) 
[11829] ( move 3 - ul , ua ; move ua + 3 , 0 - ul ) 
[11830] loop 0 , 4 , move ua - 2 , ua * ua 
[11831] ( move ul - 3 , ua ; move 0 , ua - 2 ; move ua , ul - 3 ) 
[11832] ( move ua , 4 + ul ; move ul - 4 , ua + 4 ) 
[11833] ( move 0 - ua , 2 - ua ; loop 0 , 6 , move ul / v0 , ul ) 
[11834] ( move 2 , ul ; move 4 * 2 , ul ) 
[11835] loop 0 , 3 , ( move v0 , v0 ; move 4 , 3 - v0 ) 
[11836] ( move 3 , ul / ua ; loop 0 , 6 , move ul , ul ) 
[11837] ( move ul - ua , 4 + 2 ; move 3 , ul ) 
[11838] ( move 4 , ua - ul ; loop 0 , 2 , move ul - ua , 4 - ua ) 
[11839] ( loop 0 , 6 , move ul , ul / v0 ; move ua , v0 ) 
[11840] ( loop 0 , 5 , move 3 , 3 ; move v0 / 2 , ul / v0 ) 
[11841] ( loop 0 , 3 , move v0 + v0 , ul ; move ua , ua - 3 ) 
[11842] ( loop 0 , 5 , move v0 - ul , v0 ; move ua , ul ) 
[11843] ( move ua , 2 ; ( move ua + ul , 3 ; move ul - ua , ul ) ) 
[11844] ( loop 0 , 4 , move ua , 3 ; move ul , ua ) 
[11845] ( move ua - ul , 0 ; move 3 , 4 / 3 ) 
[11846] ( move 3 , ua ; loop 0 , 4 , move v0 , 4 ) 
[11847] ( loop 0 , 6 , move v0 / ua , ua ; move v0 , v0 ) 
[11848] ( move 4 , ul ; move ul , 4 / ua ; move ua , ua - ul ) 
[11849] ( move 4 , 0 - ua ; move ua , 3 ; move 0 - 3 , 2 ) 
[11850] loop 0 , 3 , ( move ul - ua , v0 ; move ul , v0 ) 
[11851] loop 0 , 3 , ( move 0 , ua * ua ; move v0 - 4 , v0 ) 
[11852] ( move ua - ul , 3 / 2 ; v0 = ua ; move 3 , 2 ) 
[11853] ( move 0 - ul , ua / 3 ; loop 0 , 4 , move 2 , ul ) 
[11854] ( v0 = ul - ua ; loop 1 , 7 , move ua , v0 * ua ) 
[11855] ( loop 0 , 6 , move v0 , 2 ; move v0 , 2 ) 
[11856] ( move 2 + ul , ua / 4 ; move ua , 3 - ul ) 
[11857] ( loop 0 , 6 , move ul - v0 , ul / ua ; move v0 , v0 ) 
[11858] ( move ul , 4 / ua ; move ua , ul - ua ; move 3 + ul , ul ) 
[11859] ( move ua , 0 - ul ; move 2 , ul ; move 4 , 0 - ul ) 
[11860] ( move 0 - 4 , 2 ; move ua , ul ; v0 = ul - ua ) 
[11861] ( move ul - 2 , 3 ; loop 0 , 6 , move v0 , ul ) 
[11862] ( move ua , 3 ; move 0 , 4 ; move ua + ul , ul ) 
[11863] ( move ua - ul , ul ; move ua + ul , ua - 4 ) 
[11864] loop 0 , 2 , loop 1 , 2 , move 3 , v1 * 2 
[11865] ( move ul , ul + ul ; loop 0 , 4 , move v0 , v0 + v0 ) 
[11866] ( move ul - ua , ul ; move ul , 2 + ul ; move ua , 4 ) 
[11867] ( move ul + ul , 0 ; loop 0 , 5 , move 3 , v0 ) 
[11868] ( move ua , ul - 4 ; move ul - ua , ul ; move ua , ul / ua ) 
[11869] loop 0 , 4 , move v0 - 3 , 4 / ua 
[11870] loop 0 , 2 , ( move ul , v0 ; move v0 - ua , v0 - ul ) 
[11871] ( move ul - ua , ul / 4 ; move ul , ul ; move 4 , 4 - ul ) 
[11872] ( move 4 , 3 + 3 ; move ua , 2 - ua ) 
[11873] ( move ua - ul , ua + ul ; move 0 , 3 ; move 4 + 2 , 2 ) 
[11874] ( loop 0 , 5 , move v0 , v0 ; v1 = ul ; move ua , 2 ) 
[11875] loop 0 , 3 , move 4 , 0 - 4 
[11876] ( move 3 , 2 ; move ul , ul ; move ua + ul , ul ) 
[11877] ( move ua , ua - 3 ; move 3 , ua - 4 ; v0 = ua * 4 ) 
[11878] ( v0 = 3 ; move v0 * v0 , v0 ; move v0 , 2 ) 
[11879] ( move ua , ul ; move 2 + ul , ul ; move 4 , 4 ) 
[11880] ( move 2 , ua ; loop 0 , 4 , move v0 , ul / 3 ) 
[11881] ( move ul - 4 , 0 ; loop 0 , 6 , move ua , 4 ) 
[11882] ( move ul + ul , 0 ; move ua , 4 / 3 ) 
[11883] ( move ul - ua , ua ; move ul , 2 ; move ua , 4 ) 
[11884] ( move 4 * 2 , ua ; move 4 / ua , ul ; move ua , ul ) 
[11885] ( loop 0 , 3 , move 2 , v0 * 4 ; move v0 * v0 , ul ) 
[11886] ( move 3 , 3 * 3 ; move 4 , ua - ul ) 
[11887] ( loop 0 , 4 , move 2 , ua * ua ; move ua , v0 ) 
[11888] loop 0 , 6 , move ul - v0 , 4 + ul 
[11889] ( move ul , 4 ; move ua , ul ; move ul , ul ) 
[11890] loop 0 , 3 , ( move 2 , v0 * v0 ; move 3 , v0 ) 
[11891] ( move ua , ul / 4 ; move 3 , 2 ) 
[11892] ( v0 = ua ; move v0 , 2 ; loop 1 , 6 , move 3 , 4 ) 
[11893] ( v0 = 4 ; loop 2 , 6 , move 4 / v2 , v0 / v2 ) 
[11894] loop 0 , 2 , ( move 4 / 2 , v0 - 3 ; move 4 , v0 ) 
[11895] ( move ua - ul , 4 + ul ; move 4 , ul ; v0 = ua ) 
[11896] ( move 4 , ua - ul ; ( move ua , 2 ; move 2 , ua ) ) 
[11897] ( move ua , 0 ; move 3 + ul , ul ; move 4 , 4 / ua ) 
[11898] ( loop 0 , 6 , move 2 , ua + v0 ; move v0 , ul ) 
[11899] loop 0 , 2 , loop 1 , 3 , move 3 + v0 , ua - ul 
[11900] ( move 3 + ul , ul / 2 ; loop 0 , 4 , move v0 , v0 ) 
[11901] ( move ua + 2 , 3 + 2 ; move 3 , ul ) 
[11902] ( v0 = ua + ua ; move ua / 2 , 0 ; move 3 - v0 , ul ) 
[11903] ( move 4 , ua ; move ua / 2 , ul ; move ua , ul ) 
[11904] ( move ua / 3 , 3 - 4 ; move ua + 2 , ua * ua ) 
[11905] ( move 0 , 4 ; loop 0 , 6 , move ul - v0 , v0 ) 
[11906] loop 0 , 3 , ( v1 = ua ; move ua / 4 , 2 ; move 3 , ul ) 
[11907] ( ( move ua , ua * ua ; move ul , 2 / ua ) ; move ua , 3 ) 
[11908] loop 0 , 3 , ( move ul , v0 ; move ul , ua - ul ) 
[11909] ( move ul - ua , 0 ; move 2 , ul + ul ; move ul , ul ) 
[11910] loop 0 , 5 , move ul + v0 , ua - 3 
[11911] ( move ul , ua * ua ; move ua , ua * ua ; move ua , ul ) 
[11912] ( move ua - 3 , 4 ; move ua + ul , ua + 2 ) 
[11913] ( loop 0 , 4 , move v0 , ul ; move v0 + ul , 4 ) 
[11914] ( move ul , ua ; loop 0 , 5 , move ul , v0 ; move 4 , v0 ) 
[11915] ( move ua , ua ; move 4 , ua - 4 ) 
[11916] ( move ua / 2 , ul ; move ua + ul , 4 + ul ) 
[11917] ( move ul , 4 ; loop 0 , 3 , move v0 , 2 ; move v0 , ul ) 
[11918] ( move 3 + ul , ul ; move 4 - ua , 2 ; move ua , ul - 3 ) 
[11919] loop 0 , 7 , move 3 - v0 , v0 - ul 
[11920] ( move 2 , 3 ; move ua + 3 , ul - 2 ) 
[11921] ( move ul - ua , ul ; move ua + 3 , ul / ua ) 
[11922] ( v0 = 3 + ul ; move ua , ua - v0 ; move v0 , ul ) 
[11923] ( loop 0 , 4 , move 2 + v0 , v0 ; move 4 + ul , v0 ) 
[11924] ( move 4 , 0 ; loop 0 , 4 , move 3 , v0 ) 
[11925] ( move ua , 4 * 2 ; loop 0 , 5 , move v0 , v0 ) 
[11926] ( move ul , ua ; loop 0 , 4 , move ua - 3 , v0 + v0 ) 
[11927] ( move ul - ua , ua ; loop 0 , 4 , move 2 , v0 - ul ) 
[11928] ( move ua - ul , ua ; move 3 , ul ) 
[11929] ( move 4 , ua - 2 ; move 4 - ua , ul ) 
[11930] ( loop 0 , 3 , move ul , ul / v0 ; move 3 , v0 ) 
[11931] ( move ul , ul / 4 ; move ua + 3 , ua - ul ) 
[11932] ( move ul , ua + ul ; move 2 , ua * ua ; move ua , ul ) 
[11933] loop 0 , 3 , move 4 / v0 , ul / v0 
[11934] ( move ua , ua ; move ul - 3 , ua / 4 ) 
[11935] ( loop 0 , 5 , move 3 , ul + v0 ; move ul , ua ) 
[11936] ( ( move ua + ul , ua * ua ; move 3 , ul ) ; move 2 , ua ) 
[11937] loop 0 , 2 , ( move v0 + ul , ul ; move ua , v0 ) 
[11938] ( move ua , ua ; move ua , ua / 3 ; move 4 , ul ) 
[11939] ( move ua , ul ; loop 0 , 5 , move v0 * 2 , v0 + ul ) 
[11940] ( move ul , ua ; move 3 , ul ; move ul , ul ) 
[11941] loop 0 , 3 , ( move 4 , 4 ; move v0 , 2 ) 
[11942] loop 0 , 6 , move v0 - ul , ua / 4 
[11943] ( loop 2 , 5 , move 4 - ua , ul ; move 3 , ul ) 
[11944] loop 0 , 3 , move 4 + ul , ul + v0 
[11945] ( move ul , ul - ua ; move 3 , 4 + 2 ; move ua , ua * ua ) 
[11946] ( move ua - ul , ua - ul ; move 3 , 2 ; v0 = ul ) 
[11947] ( move ua - ul , ua ; move ul - ua , ua + ul ) 
[11948] ( move ua , ul ; move ul , ua * ua ; move ua , ua + ul ) 
[11949] loop 0 , 3 , move v0 - ua , 4 * 4 
[11950] ( v0 = ul - 3 ; loop 1 , 6 , move v1 , v0 * v1 ) 
[11951] ( move ua , ul ; move ua + ul , 4 ; move 2 , ul ) 
[11952] ( move ua + ul , 3 ; move ua , ua / 4 ) 
[11953] ( move 2 , ua * 2 ; loop 0 , 6 , move v0 , ua / v0 ) 
[11954] loop 0 , 2 , ( move ul - ua , v0 ; move ul , ul ) 
[11955] ( loop 0 , 9 , v1 = 3 ; loop 2 , 4 , move 4 , v0 ) 
[11956] ( loop 0 , 6 , move ul , ul ; move ua + ul , ul ) 
[11957] ( ( move ua , ul ; move ua + 3 , ua * ua ) ; v0 = ul ) 
[11958] ( move 4 + ul , ul ; move 4 / 2 , ua * ua ; move ua , ua ) 
[11959] loop 0 , 2 , ( move v0 + ua , v0 ; move 2 , v0 - 3 ) 
[11960] ( move ul - 4 , ul ; loop 0 , 4 , move v0 + ul , v0 ) 
[11961] ( ( move ul , ua - 4 ; move 3 - ul , ul ) ; move ua , ul ) 
[11962] loop 0 , 3 , move v0 + 2 , 2 / v0 
[11963] ( move ua - ul , 3 ; loop 0 , 6 , loop 1 , ul , move ul , ul ) 
[11964] ( v0 = 2 + ul ; loop 1 , 2 , move 3 , ul ; move ua , 3 ) 
[11965] ( move ua + 2 , ul ; loop 0 , 5 , move v0 , ul ) 
[11966] ( ( move ua , ul ; move ul - ua , 4 / 3 ) ; v0 = ul ) 
[11967] loop 0 , 3 , ( v1 = ua * ua ; move 3 , v1 + 3 ) 
[11968] ( move ul - 4 , ul + ul ; move 4 , ul ) 
[11969] ( move ua - ul , 4 ; loop 0 , 3 , move v0 , v0 ) 
[11970] loop 0 , 3 , ( move v0 * v0 , ul ; move ul + v0 , ul ) 
[11971] ( move ul , ul ; loop 0 , 3 , move ua / 2 , ul ) 
[11972] ( move ua - ul , ua ; move ul , 3 ; move 3 , ul ) 
[11973] ( move ua + ul , 4 ; move ua - ul , ua * ua ) 
[11974] ( move ul - ua , ul ; loop 0 , 6 , move ul - v0 , v0 ) 
[11975] ( move 3 - ua , ul / 4 ; move ua / 4 , ul ; move 3 , ul ) 
[11976] loop 0 , 7 , move 4 - ua , ul - v0 
[11977] ( move ua , ul ; move ul , ul ; move 3 , ua - ul ) 
[11978] ( move ul - ua , ua * ua ; move ua , ua + 2 ) 
[11979] ( move 2 , ua * ua ; move 4 , 4 ; move ua + ul , ua - 2 ) 
[11980] ( move 3 , 4 ; move 2 , ul ; move 2 , ul ) 
[11981] ( move ul , 4 ; move ua , ul + ul ; move 2 , ua + 4 ) 
[11982] loop 0 , 3 , move v0 + 4 , v0 + 3 
[11983] ( move ua - ul , ul / 4 ; move 3 , ul ) 
[11984] ( move ua / 4 , ua + ul ; loop 0 , 6 , move v0 - ul , ul ) 
[11985] loop 0 , 7 , move v0 - 4 , v0 * 4 
[11986] loop 0 , 2 , ( move ua - v0 , ul ; move v0 - 2 , 0 ) 
[11987] ( ( move 4 , ul ; move ul , 4 ) ; move ua , ua + 2 ) 
[11988] ( move 4 , 0 ; ( move ua , ul ; move ul , 4 + 2 ) ) 
[11989] ( move 3 , ul / ua ; loop 0 , 4 , move v0 , ul ) 
[11990] ( move ua - 3 , 0 ; move ul , ua + 3 ; move ua , 4 + ul ) 
[11991] ( move ul / 4 , ua ; move 4 + 4 , ul ; move ua / 3 , ul ) 
[11992] ( move ul - ua , 0 ; move ua , 2 - ul ; move ua , 4 ) 
[11993] ( ( move ua , 4 ; move 3 , ua ) ; move 4 , 2 - ua ) 
[11994] ( move ua , ua - ul ; loop 1 , 5 , move v1 , ul ) 
[11995] ( v0 = ua - ul ; move v0 , 4 * v0 ; move 4 , v0 ) 
[11996] ( move 4 , 2 / 4 ; move ul - ua , ul ) 
[11997] ( move ul , ul + ul ; loop 0 , 6 , move ua - ul , v0 ) 
[11998] ( loop 0 , 5 , move ul , ua - v0 ; move v0 , 0 ) 
[11999] ( ( move ul - ua , ua + ul ; move ua , ul ) ; move 3 , ul ) 
[12000] ( loop 0 , 5 , move ul - v0 , v0 ; move ua + ul , 2 ) 
[12001] ( ( move ul , ua ; move 0 - ua , 2 ) ; move ua , ul ) 
[12002] ( move ul , ul ; loop 0 , 4 , move 3 , 2 ; v1 = ul ) 
[12003] ( move 3 * 2 , ua + ua ; move ua + ul , 2 ) 
[12004] ( move ua , ua ; move ua , ua * ua ; move ua + ul , ul ) 
[12005] ( move 4 , ul ; move 4 , ul ; move 2 , 2 ) 
[12006] ( loop 0 , 5 , move v0 , v0 / ua ; move ul , v0 ) 
[12007] ( move 2 , ul ; move ua , 3 + 3 ; move ul , ul ) 
[12008] loop 0 , 2 , loop 1 , 2 , move 3 - v0 , v1 + v1 
[12009] ( loop 0 , 4 , move ul , ul ; move ua + 2 , ua - v0 ) 
[12010] ( loop 0 , 6 , move 3 , 3 - ul ; move v0 , ul ) 
[12011] ( move ua - ul , ul / 4 ; ( move ul , ul ; move ul , ul ) ) 
[12012] loop 0 , 2 , ( move v0 , 3 * 3 ; move ua , v0 + v0 ) 
[12013] ( move 4 + ul , 4 + 3 ; move ua , 3 + ul ) 
[12014] ( move 4 + ul , 4 ; move 2 , 4 + ul ) 
[12015] ( move ul , 3 ; loop 0 , 3 , move 4 , v0 ) 
[12016] ( move ua , ua + ua ; move ua + ul , ua / 3 ) 
[12017] ( move ua , ua - 4 ; move 4 , 2 ) 
[12018] loop 0 , 6 , move v0 - ul , v0 / 4 
[12019] ( move ul + ul , ul ; move ua , ul ; move 4 , 4 - ua ) 
[12020] ( move 2 , 4 * 3 ; move ul , ul ; move ua , ul ) 
[12021] ( move ua , 4 ; ( move ua , 2 ; move 4 - 2 , ul ) ) 
[12022] loop 0 , 3 , ( move ua , 2 ; move v0 , v0 ) 
[12023] loop 0 , 3 , ( move v0 , v0 ; move 4 * v0 , v0 ) 
[12024] ( loop 0 , 5 , move v0 , ua - ul ; move v0 + v0 , 3 ) 
[12025] ( move 3 * 3 , 0 ; move 4 + 4 , 3 - ua ) 
[12026] ( move ua , 2 ; move 2 , ul - ua ; move ua , ul ) 
[12027] loop 0 , 6 , move 3 - v0 , v0 + ul 
[12028] loop 0 , 2 , loop 1 , 3 , move ul , v1 - ul 
[12029] ( move ul - ua , ul / 3 ; move ua , 4 / ua ) 
[12030] ( loop 0 , 4 , move ua - 4 , v0 ; move 2 + ul , v0 ) 
[12031] ( ( move ua , ua ; move 3 , ul ) ; move ua - ul , ul ) 
[12032] ( v0 = ul / ua ; loop 1 , 3 , move ua , v0 + v1 ) 
[12033] ( move 4 - ul , ua / 4 ; move ua , ul - 3 ) 
[12034] ( move ua / 2 , 2 / ua ; move 3 , 2 ) 
[12035] ( move ua + ul , 3 ; move ul - 2 , ul ; move 3 , 0 ) 
[12036] ( loop 0 , 6 , move ul - 3 , 4 / 3 ; move ua , v0 ) 
[12037] loop 0 , 5 , move v0 - 4 , ul - 2 
[12038] ( move ua + 2 , ul ; move ua - 2 , 4 ) 
[12039] ( move ul , 0 ; move 3 - 4 , ul ; move 4 + ul , ul + ul ) 
[12040] ( move 2 , 3 + ul ; ( move ul , ul ; move ua + 2 , 2 ) ) 
[12041] loop 0 , 5 , move ul - v0 , v0 * 3 
[12042] loop 0 , 6 , move v0 / 2 , 4 
[12043] loop 0 , 2 , ( move ua , 0 ; move v0 , 4 + ul ) 
[12044] ( move ul , 3 ; loop 0 , 4 , move v0 + v0 , ul ) 
[12045] ( move 4 , ua ; v0 = ua + ul ; move v0 , ua / v0 ) 
[12046] ( move ul , 3 / 4 ; ( move ul , ul ; move ua , 3 + ul ) ) 
[12047] ( ( move 4 , ul / 3 ; move ul , ul ) ; move 4 , 4 ) 
[12048] ( move ua , ua * ua ; move ua , ua - 4 ) 
[12049] ( move 0 , ua + 2 ; loop 0 , 6 , move v0 - ul , v0 ) 
[12050] ( move 3 , 2 + ul ; loop 0 , 5 , move v0 , ua / v0 ) 
[12051] loop 0 , 3 , move 0 - 4 , v0 + v0 
[12052] ( move 0 , ul ; loop 0 , 4 , move ul - 4 , ua - v0 ) 
[12053] loop 0 , 2 , loop 1 , 2 , move 4 , 4 + v1 
[12054] ( move 3 , 4 ; move 2 , ua / 3 ; move 4 + ul , ul + ul ) 
[12055] ( move ua , 2 ; move ul , ua ; move 3 , ua / 4 ) 
[12056] ( move ua , 4 * 2 ; loop 0 , 4 , move v0 , ul / v0 ) 
[12057] loop 0 , 3 , ( move ul + v0 , ul ; move ul , ul ) 
[12058] ( move ul , 4 ; v0 = 0 ; loop 1 , 4 , move ua - 3 , ul ) 
[12059] ( loop 0 , 3 , move ul , ul ; move ua - v0 , ua - ul ) 
[12060] ( move 4 , ul ; loop 0 , 4 , move 2 , 2 / v0 ) 
[12061] ( move 4 * 2 , 3 / 4 ; move ul + ul , ul ) 
[12062] ( ( move ua - 4 , 4 ; move ua , 4 * 2 ) ; v0 = ul ) 
[12063] ( ( move ua / 3 , 3 ; move ul , ul ) ; move ua , ul / 4 ) 
[12064] ( loop 0 , 5 , move 3 , ul ; move v0 + v0 , 2 ) 
[12065] ( move 2 , ua ; move ul , 4 ; move 3 + ul , 2 ) 
[12066] loop 0 , 2 , ( move ua + v0 , 3 ; move v0 , v0 + ua ) 
[12067] ( loop 0 , 5 , move ul / v0 , ul ; move v0 , v0 ) 
[12068] ( move ua , ua ; loop 0 , 4 , move v0 , ul + v0 ) 
[12069] ( loop 0 , 5 , move ul , 4 - v0 ; move v0 , v0 ) 
[12070] ( move ua , ua ; move 0 , 4 + ul ; move ul - ua , ul ) 
[12071] ( move ul , ul ; move 4 , ul ; move 2 , ul - 3 ) 
[12072] loop 0 , 2 , ( move 2 , ua + 2 ; move ua * v0 , v0 ) 
[12073] ( loop 0 , 3 , move ul , v0 ; move ua - v0 , 4 ) 
[12074] loop 0 , 4 , move ua - 3 , v0 - ul 
[12075] ( v0 = ul - ua ; loop 1 , 7 , move v0 , v0 * v0 ) 
[12076] ( move 3 , ul ; move ul + ul , 2 / 3 ; move ua , 2 ) 
[12077] ( move 4 , ul / ua ; loop 0 , 3 , move 4 , ul ) 
[12078] ( move 4 * 2 , ua ; move ua - ul , ul + ul ) 
[12079] ( move 0 - ul , ul ; loop 0 , 6 , move ul , v0 + ul ) 
[12080] ( move 0 , ul ; move ua , 4 + 2 ; move ua , 2 ) 
[12081] ( move 3 , ua ; move ul , 3 ; loop 0 , 5 , move v0 , ul ) 
[12082] loop 0 , 3 , loop 1 , 2 , move ua - v1 , 4 
[12083] ( move ua + 2 , ul / ua ; move ua , 2 ) 
[12084] ( loop 0 , 6 , move 4 , 3 ; move ua , v0 ) 
[12085] ( move 2 - 3 , 0 ; loop 0 , 2 , move ua , 4 / v0 ) 
[12086] loop 0 , 3 , ( move v0 , v0 ; move 3 , ua - v0 ) 
[12087] ( move 2 - ua , 4 + ul ; move ua , 2 ) 
[12088] ( move 3 + 2 , ul / ua ; move ua , ul ) 
[12089] ( move ul , ua * ua ; move ua , 3 ; move 2 , ul ) 
[12090] loop 0 , 2 , ( move v0 + 4 , ul ; move v0 * v0 , ul ) 
[12091] ( move 4 , ul - ua ; move ua - ul , ul ; move ua , 3 ) 
[12092] ( move ua , 4 ; move 3 , ul ; move ua , 3 ) 
[12093] ( v0 = 4 ; move 2 + ul , v0 * v0 ; move v0 , ul ) 
[12094] ( loop 0 , 4 , move v0 , v0 ; move v0 + ul , ua * ua ) 
[12095] ( loop 0 , 4 , move ua - 2 , v0 ; move v0 , 3 ) 
[12096] ( loop 0 , 6 , move v0 , 2 * v0 ; move ua , v0 ) 
[12097] ( move 3 , ul ; loop 0 , 6 , move v0 - ul , ul / v0 ) 
[12098] ( move 2 , ua ; loop 2 , 5 , move ul - 4 , 2 ) 
[12099] ( move ua , 3 ; loop 0 , 6 , move 2 , ua + 4 ) 
[12100] ( ( move ua , 0 ; move 2 , ul ) ; move ul , ua * ua ) 
[12101] ( move 4 , 0 ; move ul , ul ; move ua , 0 - 3 ) 
[12102] loop 0 , 3 , ( move ua - v0 , 2 ; move ul , v0 + v0 ) 
[12103] ( move 2 , 0 ; loop 0 , 6 , move v0 , v0 + v0 ) 
[12104] loop 0 , 3 , ( move v0 , ua ; move v0 , v0 / 2 ) 
[12105] ( loop 0 , 5 , move v0 , v0 ; move 2 , v0 / ua ) 
[12106] ( move ul - ua , 0 ; move ul + ul , 4 ; move ua , 3 ) 
[12107] ( move 0 - 3 , 2 ; loop 0 , 2 , move 4 - v0 , 4 ) 
[12108] ( move ua + ul , 2 / ua ; move ul , ul ) 
[12109] ( move 4 , 2 ; loop 0 , 4 , move ul , ul / ua ) 
[12110] ( move ul - ua , ua / 4 ; loop 0 , 4 , move ul , v0 ) 
[12111] ( move 4 , 2 ; move 2 , ul ; move 4 , 2 - 3 ) 
[12112] loop 0 , 5 , move 4 + v0 , ua - v0 
[12113] ( loop 0 , 4 , move v0 + ul , v0 ; move 4 + v0 , 3 ) 
[12114] ( loop 0 , 5 , move ul , v0 * 2 ; move ua , ul ) 
[12115] loop 0 , 3 , ( move v0 + v0 , ul ; move ul , v0 ) 
[12116] ( v0 = ua ; loop 1 , 3 , ( move ul , 2 ; move ua , 2 ) ) 
[12117] ( move ul - ua , ua / 4 ; move ua , 4 + 3 ) 
[12118] ( move 2 , 3 / ua ; move ul , 4 + ul ; move ua + ul , ua ) 
[12119] loop 0 , 3 , ( move 2 , 2 / v0 ; move ul , v0 ) 
[12120] ( move 3 , 0 - 3 ; move ua , ul ; move ul , ul - ua ) 
[12121] loop 0 , 4 , move 3 / v0 , v0 / ua 
[12122] ( move ul , ul ; ( move ua , ul ; move ua - ul , ul ) ) 
[12123] ( move 3 , ua - ul ; v0 = 4 ; move v0 , v0 ) 
[12124] ( move ua + ul , ua - ul ; move ul , 2 ; move 4 , ua + ul ) 
[12125] ( loop 0 , 4 , move 4 - ua , ul + v0 ; move ul , 4 ) 
[12126] ( move 3 + ul , 3 + ul ; move ua , 3 ; move 3 , ua * ua ) 
[12127] ( move ua , ua * ua ; v0 = 4 + 3 ; move 3 , v0 ) 
[12128] ( move ua , 4 ; loop 0 , 3 , move 3 , ul ) 
[12129] loop 0 , 3 , ( move v0 - 2 , v0 ; move v0 , ul ) 
[12130] ( move ua + ul , 2 ; move ua - ul , 4 ) 
[12131] ( move ul , 3 + ul ; move 3 , 2 ; move ua , 3 / 2 ) 
[12132] ( move 3 , 2 - ul ; ( move ua , ua ; move 0 - ua , ul ) ) 
[12133] ( loop 0 , 4 , move v0 , ul ; move v0 , 2 + v0 ) 
[12134] ( move ua + ul , ua ; ( move 0 , ua * ua ; move ua , ul ) ) 
[12135] ( move 3 , ua ; move 3 , 3 ; move ul , ua - ul ) 
[12136] loop 0 , 3 , ( move ua - ul , v0 ; move v0 , v0 ) 
[12137] ( move ua - ul , ua ; move 4 + 3 , ua + 4 ) 
[12138] loop 0 , 7 , move 4 - ua , ua - v0 
[12139] ( move ul , ul / ua ; move ua , ul / ua ; move ua , 3 - ul ) 
[12140] ( move ua , ua ; loop 0 , 6 , move ua - 4 , 3 ) 
[12141] ( move 0 , 3 + ul ; move ul - ua , ua * ua ; move 4 , ul ) 
[12142] ( loop 0 , 2 , move 4 / v0 , v0 ; move ua - v0 , ul ) 
[12143] ( move ua , ul / ua ; loop 0 , 5 , move ua , 3 ) 
[12144] ( move ua - ul , ul ; loop 0 , 6 , move 3 , ul ) 
[12145] ( move ul , ul ; move 2 , ul ; move ul - ua , ul ) 
[12146] ( loop 0 , 6 , move ul / v0 , ul ; move 3 , v0 ) 
[12147] ( move 4 + ul , 2 ; move ua + ul , 2 - 4 ) 
[12148] ( move 2 - ua , 4 ; loop 0 , 3 , move ul + v0 , v0 ) 
[12149] ( move ua , ul - 3 ; move ua , ua + 4 ; move ua - 3 , ul ) 
[12150] loop 0 , 7 , ( v1 = ul / v0 ; move v1 - ua , 3 ) 
[12151] ( move 3 , ul / ua ; move ua - 3 , ul ) 
[12152] ( move ua + ul , ua * ua ; loop 0 , 3 , move v0 , v0 ) 
[12153] ( move ul , 4 / 3 ; move ul - ua , 4 ; move ua , ul ) 
[12154] ( move ua - ul , ua * ua ; move 2 , 4 ) 
[12155] ( move ua - ul , ua - ul ; move ua + ul , ua / 3 ) 
[12156] ( loop 0 , 6 , move ul , ul ; move v0 , ua - v0 ) 
[12157] ( loop 0 , 3 , move v0 , v0 ; loop 1 , 4 , move ul , ul ) 
[12158] ( move 4 , ul ; loop 0 , 3 , move 2 - ua , v0 ) 
[12159] ( move 3 + ul , ua - 3 ; move ul , 4 ; move ul , 0 ) 
[12160] ( move ul , ua + 2 ; loop 0 , 6 , move ul + v0 , v0 ) 
[12161] ( loop 0 , 6 , move ua + ul , 3 ; move 4 , ua ) 
[12162] ( loop 0 , 5 , move ul + v0 , v0 ; move v0 , ua ) 
[12163] ( move ul , 4 * 3 ; move ua + ul , ul ; move ul , ul ) 
[12164] ( loop 0 , 5 , move ua - v0 , 4 ; move v0 , ul ) 
[12165] ( loop 0 , 5 , move v0 , ua * ua ; move ul , ul ) 
[12166] ( ( move ua , 4 / ua ; move ul , 2 ) ; move 4 + 3 , ul ) 
[12167] ( v0 = ul - 3 ; move 4 , v0 ; move 3 * v0 , v0 ) 
[12168] ( move 4 , ua + 2 ; move ua , ua - 3 ; move 4 , ua ) 
[12169] loop 0 , 3 , loop 1 , 2 , move v1 + v1 , 4 - v0 
[12170] loop 0 , 5 , move ua - 3 , 3 / v0 
[12171] ( move 2 , ua ; move ul , ul ; move 3 , ul ) 
[12172] ( move 0 - ua , ua ; move ua , ul / ua ) 
[12173] ( move 4 , 3 * 2 ; ( move 4 / 3 , 2 ; move ua , 0 ) ) 
[12174] loop 0 , 2 , ( move 4 + v0 , ul / 3 ; v1 = v0 ) 
[12175] loop 0 , 5 , ( v1 = v0 ; move ua / 4 , 2 + v0 ) 
[12176] loop 0 , 3 , move 2 - ua , 4 - v0 
[12177] ( move 3 , ul ; v0 = 4 ; move ua - ul , v0 / ua ) 
[12178] ( loop 0 , 3 , move 4 - v0 , 2 ; move ua , v0 ) 
[12179] ( move ul - 2 , ul ; loop 0 , 5 , move 3 , v0 ) 
[12180] ( ( move 3 + ul , 2 / ua ; move ul , 3 ) ; move ua , 2 ) 
[12181] ( move 0 , ua * ua ; loop 0 , 3 , move 3 , v0 + 4 ) 
[12182] ( move ua , ul ; ( move ua + ul , ua - 2 ; move ul , ul ) ) 
[12183] ( move ua - ul , 4 ; move 4 , ul - 3 ) 
[12184] ( move ul - ua , 4 + ul ; move ul / ua , ul ; move 4 , ua ) 
[12185] ( move ua , ul / ua ; move ul + ul , ul ; move ul , ul ) 
[12186] ( move 2 , 4 ; move 4 , ul ; move ua , ul - ua ) 
[12187] loop 0 , 3 , ( v1 = ul ; move 4 , v0 ; move v0 , 4 ) 
[12188] loop 0 , 3 , ( move v0 , 4 + 4 ; move v0 , 4 ) 
[12189] ( loop 0 , 6 , move ua / 2 , ul ; move ul , 3 - v0 ) 
[12190] ( ( move ul , ua ; move 4 , ul ) ; loop 2 , 5 , move ul , 4 ) 
[12191] loop 0 , 2 , ( loop 1 , 2 , move ua , 3 ; move 2 , 2 ) 
[12192] ( v0 = 4 + ul ; loop 1 , 4 , move v0 , v0 / v1 ) 
[12193] ( move ua + ul , 2 / ua ; move ua , ua / 4 ) 
[12194] ( move 0 - ul , ul ; loop 0 , 6 , move 4 , v0 ) 
[12195] ( move 4 , ul / ua ; move ul , 0 ; move 2 - ua , ua + ul ) 
[12196] ( move ua - ul , 4 + 3 ; move 4 , 2 ; v0 = ua - 3 ) 
[12197] ( loop 0 , 5 , move v0 , 3 ; move 2 + ul , ul ) 
[12198] ( move 4 , 4 + ul ; loop 0 , 4 , move ul , ul ) 
[12199] ( move ul + ul , 4 ; loop 0 , 3 , move v0 + v0 , v0 ) 
[12200] loop 0 , 6 , ( v1 = 3 - v0 ; move v1 , v1 ) 
[12201] ( move ul , ul / ua ; loop 0 , 6 , move v0 , v0 - ul ) 
[12202] ( move 0 - ua , 2 + ul ; move ua - 2 , ul ) 
[12203] ( move 4 + ul , 3 ; ( move ua , 2 ; move ua , 3 - ua ) ) 
[12204] loop 0 , 2 , move ua - v0 , v0 - 3 
[12205] ( move ua , ul ; move 4 , 3 ; move ua + ul , 4 * 2 ) 
[12206] loop 0 , 6 , move v0 - 3 , 4 / 3 
[12207] loop 0 , 3 , move v0 - ua , v0 - 4 
[12208] ( loop 0 , 6 , move v0 , v0 ; move v0 , 2 ) 
[12209] ( move ul , 3 ; loop 0 , 5 , move ua , 2 ) 
[12210] ( move 4 , 3 ; loop 1 , 5 , move ul , ul ) 
[12211] ( move 3 , ul ; move ua - ul , ul + ul ; move ul , ul ) 
[12212] ( move 4 + 4 , 4 ; move ul , ua - ul ; move ul , ua ) 
[12213] ( move ua , ua ; move 4 + ul , ul ; move ul , ul ) 
[12214] ( move ul , 4 / ua ; loop 0 , 6 , move v0 , v0 ) 
[12215] ( move ua + ul , ua - ul ; loop 0 , 4 , move 2 , v0 ) 
[12216] ( move 3 , 4 ; move ua , ul ; move ua , 3 + ul ) 
[12217] ( move ul , 3 ; move ua + 3 , ul - 2 ) 
[12218] ( move ua - ul , ul ; loop 0 , 5 , move v0 - ul , ul ) 
[12219] ( move 4 , ua + ul ; loop 0 , 5 , move v0 + ul , ua - ul ) 
[12220] ( move 0 - ua , ua ; move ua + ul , ul ) 
[12221] loop 0 , 3 , ( move ul , v0 + 3 ; move v0 , ul ) 
[12222] ( move ua / 2 , ul / ua ; loop 0 , 6 , move v0 , ua * ua ) 
[12223] ( move ul - ua , ul / 2 ; loop 0 , 6 , move ul , v0 - ul ) 
[12224] ( move ua , ul ; move 4 + 3 , ul - 4 ) 
[12225] ( loop 0 , 3 , move ul , ul ; move ua , ul - v0 ) 
[12226] loop 0 , 2 , ( move ul / v0 , ul ; move v0 - ua , ul ) 
[12227] ( loop 0 , 6 , move v0 , 3 ; move v0 , v0 * v0 ) 
[12228] loop 0 , 6 , move ua - 2 , v0 / 2 
[12229] ( move ul , 4 ; move ua , ul ; move ul - ua , ua + ul ) 
[12230] ( move ua , ul ; move 3 , 2 / ua ) 
[12231] ( loop 0 , 6 , move v0 , 2 ; move 2 , ua + ul ) 
[12232] ( move 2 , ul / ua ; move 4 , 2 ; move ua , ul - ua ) 
[12233] loop 0 , 3 , ( move v0 , ul ; move ul , 3 ) 
[12234] loop 0 , 2 , ( move 2 , ul ; move 3 , v0 ; v1 = ua ) 
[12235] loop 0 , 2 , loop 1 , 3 , move v1 + v1 , 2 
[12236] loop 0 , 4 , move ul - 3 , ul - 2 
[12237] ( loop 0 , 4 , move 4 , 4 ; move v0 , 2 ) 
[12238] ( move 3 , ua + 4 ; move 4 , 3 * 3 ) 
[12239] ( move ul , ua / 2 ; loop 0 , 5 , move v0 , ul - v0 ) 
[12240] ( loop 0 , 3 , move 4 , 4 ; move 2 , ul ) 
[12241] ( move 0 , ul ; loop 0 , 5 , move v0 , v0 * v0 ) 
[12242] loop 0 , 3 , move 4 / v0 , v0 / 2 
[12243] ( move ul - ua , ul ; ( move ul , ua ; move 3 , ua - ul ) ) 
[12244] ( move ua , 4 - ul ; ( move 4 - ua , 3 ; move ul , ul ) ) 
[12245] ( ( move ua , ua - ul ; move ul , ua ) ; move ua + ul , 2 ) 
[12246] ( move 4 + 2 , 3 ; loop 0 , 3 , move v0 + v0 , v0 ) 
[12247] ( move 4 + ul , ul ; loop 0 , 5 , move ul , ul ) 
[12248] ( move ul , 3 + ul ; loop 0 , 3 , move 4 , ul ) 
[12249] ( move ua - ul , 2 ; move ua , ua / 4 ) 
[12250] ( move 3 , 3 ; move 4 + ul , ua * ua ; v0 = ua / 2 ) 
[12251] ( loop 0 , 4 , move 4 , v0 - 3 ; move ua , v0 ) 
[12252] loop 0 , 3 , ( move v0 + v0 , 4 ; move 3 , 0 ) 
[12253] ( move ua - ul , 2 + ul ; move ul , 4 ; move 2 , ul ) 
[12254] ( move ua , ul ; ( loop 0 , 6 , move 4 , 3 ; v1 = 0 ) ) 
[12255] ( move ul , 4 ; move 3 * 3 , 3 + ul ) 
[12256] ( move 0 , ul ; move ua , 2 ; loop 0 , 5 , move 4 , ul ) 
[12257] ( move ua , ul ; loop 0 , 4 , move v0 , ul - 3 ) 
[12258] ( move 4 , 4 + 3 ; loop 0 , 4 , move 2 , ul ) 
[12259] ( move ua + 4 , ul - 2 ; move ul , 0 - 4 ) 
[12260] ( move 4 + ul , 2 ; loop 0 , 3 , move v0 , ul ) 
[12261] ( move ua , ua ; move ul , ul + ul ; move ul - 4 , 4 / ua ) 
[12262] ( move 2 , 3 - ul ; move ua + ul , ua * ua ) 
[12263] loop 0 , 3 , ( move ua , v0 - ul ; move 2 , 2 * 2 ) 
[12264] ( move 2 + ul , ul ; move ul - ua , 4 + 3 ) 
[12265] ( loop 0 , 6 , move ul - 3 , v0 ; move ua , v0 ) 
[12266] ( move ua , ua + ua ; move 4 , 4 ; move ua - 3 , ua + ul ) 
[12267] ( loop 0 , 6 , move ul , 0 ; move ul - v0 , v0 ) 
[12268] ( move 4 + ul , ul + ul ; loop 0 , 5 , move v0 , 3 ) 
[12269] loop 0 , 2 , ( move 3 , 2 ; move v0 + ul , v0 ) 
[12270] ( loop 0 , 3 , move 2 , ul ; move 3 + v0 , ua ) 
[12271] ( ( move 3 , 3 / ua ; move 2 - ua , ul ) ; v0 = ua ) 
[12272] ( move 2 - ul , 4 ; move ua , 4 ; move ua , ul + ul ) 
[12273] loop 0 , 3 , ( move ul + ul , ul ; move v0 + v0 , 2 ) 
[12274] ( move ua , 3 ; loop 0 , 3 , move v0 , 2 ) 
[12275] ( move ua - 4 , ul / ua ; move ul , ua ; move ua , ua / 4 ) 
[12276] ( move 4 , ua + 2 ; move ua , ul ; move 3 , 4 ) 
[12277] loop 0 , 6 , ( v1 = ua ; move 2 - ua , 4 + ul ) 
[12278] ( loop 0 , 5 , move 3 , 2 ; move ul , v0 ; move v0 , ua ) 
[12279] ( move ul , 4 ; move ua - ul , ul - 3 ; move 3 - ul , ul ) 
[12280] ( v0 = 3 + 3 ; loop 1 , 3 , move v0 , ua / 4 ) 
[12281] loop 0 , 6 , move v0 - 2 , ua - v0 
[12282] ( move 4 , 2 ; loop 0 , 4 , move 4 , v0 ) 
[12283] ( move ua , 0 ; move ul , 3 / ua ; move ua , 3 + ul ) 
[12284] ( loop 0 , 3 , move 4 , 3 ; move v0 + ul , ul / ua ) 
[12285] loop 0 , 3 , ( move 2 , v0 + ul ; move ul , ul ) 
[12286] ( move ua , ua ; ( move 4 , 4 ; move 3 , 2 ) ; v0 = 0 ) 
[12287] loop 0 , 3 , ( move v0 , v0 / ua ; move 3 , v0 ) 
