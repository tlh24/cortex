12288
[0]  
[1] move 4 , 0  | move 4 , ua  | move 2 + 2 , 0  | move 0 - 4 , 0  | move 2 * 2 , 0  | move 2 + 2 , ua  | move 3 + ul , 0  | move 4 , 0 - ua  | move 4 , ua * 2  | move 4 , ua * 3  | move 3 + ul , ua  | move 4 , ua + ua  | move 3 + ul , 0 - ua  | move 3 + ul , ua * 2  | ( move 4 , ua ; pen 2 )  | ( move 4 , ua ; pen 4 )  | ( pen ua ; move 4 , ua )  | ( move 4 , 0 ; v0 = 0 )  | ( move 4 , ua ; v0 = 2 )  | ( move 4 , ua ; pen ul - 3 )  | ( v0 = 0 ; move 3 + ul , 0 )  | ( move 3 + ul , 0 ; v0 = 4 )  | ( v0 = 4 + ul ; move 4 , ua )  | ( v0 = ua * ua ; move 4 , ua )  | ( v0 = 4 ; move 4 , v0 - 4 )  | ( move 4 , 0 ; pen ul ; v0 = ua )  | ( move 4 , ua ; pen ul ; v0 = ua )  | ( move 4 - 2 , ua + ua ; move 2 , 0 )  | ( move 3 , ua ; pen ul ; move ul , ua )  | ( v0 = ul ; ( move 4 , 0 ; move v0 - ul , v0 ) )  | ( ( v0 = 0 ; move v0 , ua ) ; move 4 + v0 , v0 )  
[2] move 4 , 2  | move 2 + 2 , 2  | move 2 * 2 , 2  | move 4 , 4 - 2  | move 4 , 4 / 2  | move 3 + ul , 2  | move 4 , ua + 2  | move 4 , 2 - ua  | move 4 , 3 - ul  | move 4 , ul + ul  | move 2 * 2 , 4 - 2  | move 2 * 2 , ua + 2  | move 0 - 4 , 3 - ul  | move 3 + ul , 4 / 2  | move 2 + 2 , ul + ul  | move 3 + ul , ua + 2  | move 3 + ul , 3 - ul  | move 3 + ul , ul + ul  | ( move 4 , 2 ; pen 2 )  | ( move 3 + ul , 2 ; pen 0 )  | ( move 4 , 2 ; pen 4 - ul )  | ( move 4 , ul + ul ; v0 = 2 )  | ( pen ua + ul ; move 4 , 2 - ua )  | ( v0 = 3 + ul ; move v0 , 2 )  | ( move 4 , 3 - ul ; v0 = 2 + ul )  | ( move 4 , 2 ; v0 = 3 ; v1 = 4 )  | ( v0 = 2 ; move v0 + v0 , v0 )  | ( move 4 , 2 ; pen 0 ; v0 = ua * 3 )  | ( v0 = ul - 3 ; move v0 + v0 , 2 )  | ( v0 = ul + ul ; move v0 * v0 , 2 )  | ( ( move 4 , 2 - ua ; pen ul ) ; v0 = ul ; pen v0 )  | ( ( move 3 + ul , 4 - 2 ; v0 = ua ) ; v1 = v0 )  
[3] move 4 , 3  | move 2 + 2 , 3  | move 0 - 4 , 3  | move 2 * 2 , 3  | move 4 , ua + 3  | move 4 , 2 + ul  | move 3 + ul , 3  | move 4 , 3 - ua  | move 4 , 4 - ul  | move 2 * 2 , 2 + ul  | move 0 - 4 , 4 - ul  | move 3 + ul , ua + 3  | move 3 + ul , 2 + ul  | ( move 4 , 3 ; pen 4 )  | ( move 4 , 3 ; pen ua )  | ( pen ul ; move 4 , 3 )  | ( pen 4 + 2 ; move 4 , 3 )  | ( move 4 , 3 ; pen 4 / 2 )  | ( move 4 , 3 ; pen ua * 2 )  | ( pen 3 ; pen 2 ; move 4 , 3 )  | ( move 3 + ul , 3 ; move 0 , 0 )  | ( move 4 , 3 ; v0 = 2 + ul )  | ( move 4 , 4 - ul ; v0 = 4 )  | ( move 3 + ul , 3 ; v0 = ul )  | ( pen 3 + ul ; move 3 + ul , 3 )  | ( pen ul ; pen ul ; move 4 , 3 - ua )  | ( move 4 , 3 ; v0 = ul ; pen v0 )  | ( move 4 , 3 ; pen 4 + 3 ; v0 = 0 )  | ( v0 = 3 ; v1 = v0 ; move 4 , v1 )  | ( move 4 , ua + 3 ; move 0 , ul + ul ; pen 2 )  | ( v0 = ua + 3 ; ( v1 = 4 ; move v1 , 3 ) )  | ( move ua / 2 , 3 ; ( move ul , ua ; pen ul / ua ) )  
[4] move 4 , 4  | move 4 , 2 + 2  | move 2 + 2 , 4  | move 0 - 4 , 4  | move 2 * 2 , 4  | move 2 - ua , 4  | move 4 , ua + 4  | move 4 , 3 + ul  | move 3 + ul , 4  | move 4 , 4 - ua  | move 4 + ul , 4  | move ua - ul , 4  | move 2 + 2 , 2 + 2  | move 2 + 2 , ua + 4  | move 3 + ul , 2 + 2  | move 2 * 2 , ua + 4  | move 3 + ul , 3 + ul  | ( pen ul ; move 4 , 4 )  | ( move 4 , 4 ; v0 = 0 )  | ( move 3 , 4 ; move ul , 0 )  | ( v0 = ua ; move 4 , 4 )  | ( v0 = 4 ; move 4 , v0 )  | ( v0 = 4 ; move v0 , v0 )  | ( move 3 + ul , 4 ; move 0 , 4 )  | ( move ul + ul , 4 ; move 2 , ua )  | ( v0 = 2 * 2 ; move 4 , v0 )  | ( v0 = 4 ; move v0 , 3 + ul )  | ( ( pen ua ; pen ua ) ; move 4 , 4 )  | ( move 3 + ul , 4 ; pen 0 ; v0 = ul )  | ( pen ua ; ( v0 = 4 ; move v0 , v0 ) )  | ( v0 = ua + ul ; move 4 , 4 ; v1 = ul )  | ( v0 = 4 ; ( move v0 , v0 ; pen v0 ) )  
[5] move ua , 0  | move ua , ua  | move 0 - ua , 0  | move ua , 0 - ua  | move 0 - ua , ua  | move ua , ua * 2  | move ua , ua / 2  | move ua , ua * 3  | move ua , ua * 4  | move ua , ua + ua  | ( move ua , 0 ; pen 0 )  | ( pen ul ; move ua , 0 )  | ( move ua , ua ; pen 4 )  | ( pen 4 ; move ua , ua )  | ( move ua , ua ; pen ul )  | ( move ua , 0 ; v0 = 2 )  | ( move ua , 0 ; v0 = ua )  | ( move ua , 0 ; v0 = ul )  | ( pen ua * 2 ; move ua , 0 )  | ( v0 = ua ; move v0 , 0 )  | ( move ua , ua ; pen ul / ua )  | ( v0 = ua ; move v0 , v0 )  | ( v0 = ul ; move ua * v0 , 0 )  | ( pen ul ; move ua , 0 ; v0 = ua )  | ( pen ul / 2 ; pen ul ; move ua , 0 )  | ( v0 = 0 ; move ua , 0 ; pen v0 )  | ( move ua , ua ; move 0 , 0 ; v0 = ua )  | ( v0 = ul ; move 0 , 0 ; move ua , ua )  | ( pen ul ; v0 = ua ; move v0 , v0 )  | ( v0 = ua ; move v0 , v0 ; v1 = v0 )  | ( v0 = ua ; v1 = v0 ; move v1 , v1 )  | ( ( move ua , ua ; v0 = 3 + 2 ) ; move 0 , ua )  
[6] move ua , 2  | move 0 - ua , 2  | move ua , 4 - 2  | move ua , 4 / 2  | move ua , ua + 2  | move ua , 2 - ua  | move ua , 3 - ul  | move ua , ul + ul  | ( move ua , 2 ; pen ul )  | ( move 0 , 2 ; move ua , 0 )  | ( move ua , 2 ; v0 = 2 )  | ( v0 = 3 ; move ua , 2 )  | ( move 0 - ua , 2 ; pen 0 )  | ( move ua , 2 ; v0 = ul )  | ( move ua , 2 ; pen ua + ua )  | ( pen 3 ; move ua , ul + ul )  | ( move ua , 3 - ul ; pen ul )  | ( move ua , 2 ; pen ua ; pen ul )  | ( move ua , 2 ; v0 = ua * 2 )  | ( pen 4 + ul ; move ua , ul + ul )  | ( v0 = 2 ; move ua , v0 + ua )  | ( move ua , 2 ; v0 = ul ; pen v0 )  | ( move 0 , ua + ul ; move ua , ua + ul )  | ( move ua , ul + ul ; v0 = ul ; pen 3 )  | ( v0 = ul ; move ua , 2 / v0 ; pen ul )  | ( move ua , 2 ; v0 = ua ; pen v0 * v0 )  | ( move ua , 2 ; v0 = ul / 2 ; pen ua - 2 )  | ( pen 2 ; v0 = ua - 3 ; move ua , ul + ul )  | ( move ua , ua + 2 ; ( v0 = ua ; v1 = ul ) )  | ( v0 = ul ; ( v1 = ua + v0 ; move ua , 2 ) )  | ( move 0 , ua ; ( pen ua ; move ua , 2 ) ; v0 = 3 )  
[7] move ua , 3  | move 0 - ua , 3  | move ua , ua + 3  | move ua , 2 + ul  | move ua , 3 - ua  | move ua , 4 - ul  | move 0 - ua , 2 + ul  | move 0 - ua , 4 - ul  | ( move ua , 3 ; pen 0 )  | ( move ua , 3 ; pen ua )  | ( pen ul ; move ua , 3 )  | ( move ua , 3 ; pen ul )  | ( move 0 , 2 ; move ua , ul )  | ( pen ua + ua ; move ua , 3 )  | ( pen ul ; move ua , 2 + ul )  | ( move ua , 3 ; pen ua - ul )  | ( move ua , 4 - ul ; pen ul )  | ( v0 = 3 ; move ua , v0 )  | ( pen ul ; pen ul ; move ua , 3 )  | ( move ua , 3 ; v0 = ua + 2 )  | ( move ua , 4 - ul ; v0 = ul )  | ( move ua , 3 ; pen ul ; pen ul - ua )  | ( move ua , 3 ; v0 = ua ; pen v0 )  | ( pen 3 ; ( move 0 , 3 ; move ua , ua ) )  | ( move ua , 3 ; v0 = ua + ul ; pen 3 )  | ( pen ua ; move ua , ua + 3 ; pen 4 / ua )  | ( ( move ua , ua + 3 ; pen 0 ) ; v0 = ua )  | ( move ua , ua + 3 ; move 0 , ua ; v0 = ua )  | ( move ua , 2 + ul ; v0 = 3 + ul ; pen ul )  | ( v0 = ul ; v1 = v0 + v0 ; move ua , 3 )  | ( ( v0 = ua + 3 ; move ua , v0 - ua ) ; pen ul )  | ( ( pen ua ; move ua , 2 + ul ) ; pen 4 ; pen ua + ul )  
[8] move ua , 4  | move 3 * 2 , 4  | move ua , 2 + 2  | move 0 - ua , 4  | move ua , 2 * 2  | move ua , 3 + ul  | move ua , ua + 4  | move ua , 4 - ua  | move 3 + 3 , ua + 4  | move 0 - ua , ua + 4  | ( pen 2 ; move ua , 4 )  | ( move ua , 4 ; pen 2 )  | ( move ua , 4 ; pen ua )  | ( pen ul ; move ua , 4 )  | ( move ua , 4 ; v0 = ua )  | ( move ua , 4 ; pen ua - 2 )  | ( move ua , 4 ; pen ua - 4 )  | ( v0 = ua ; move v0 , 4 )  | ( v0 = 4 ; move ua , v0 )  | ( move 0 , ua + ua ; move ua , 4 )  | ( v0 = ua + 4 ; move ua , v0 )  | ( move ua , 4 ; pen 3 ; v0 = ua )  | ( move ua , 4 ; pen 0 ; pen ua / 3 )  | ( move ua , 4 ; ( pen ua ; v0 = 0 ) )  | ( v0 = 4 ; v1 = v0 ; move ua , v1 )  | ( pen ua ; ( pen ul ; pen 3 ; move ua , 4 ) )  | ( v0 = 4 ; move 2 , v0 ; move v0 , ua * 3 )  | ( v0 = 2 * 2 ; v1 = v0 ; move ua , v0 )  | ( move 0 - ua , ua + 4 ; move 0 , ul ; v0 = 4 )  | ( v0 = 3 ; pen v0 ; move v0 * 2 , ul + v0 )  | ( move 0 , 4 ; ( pen ua ; pen 4 - ul ; move ua , 0 ) )  | ( pen ua ; ( move ua , 4 ; pen 0 ; move ul , 2 + ul ) )  
[9] move 4 , ul  | move 4 , 4 - 3  | move 2 + 2 , ul  | move 0 - 4 , ul  | move 2 * 2 , ul  | move 4 , 2 - ul  | move 3 + ul , ul  | move 4 , ua + ul  | move 4 , ul - ua  | move 2 + 2 , ua + ul  | move 2 * 2 , ua + ul  | move 3 + ul , ul - ua  | ( move 4 , ul ; pen 0 )  | ( v0 = 0 ; move 4 , ul )  | ( move 4 , ul ; v0 = 0 )  | ( move 0 , ua ; move 4 , ul )  | ( move 4 , ul ; v0 = ua )  | ( move 4 , ul ; v0 = ul )  | ( move 3 + ul , ul ; pen ul )  | ( move 4 , ul ; pen ua + ul )  | ( pen ul + ul ; move 4 , ul )  | ( v0 = 4 ; move v0 , ul )  | ( pen ul ; move 4 , ul ; pen 4 )  | ( v0 = ul - ua ; move 4 , v0 )  | ( v0 = ul ; move 3 + v0 , v0 )  | ( move 0 - 4 , ul ; v0 = ul ; pen ua )  | ( move 3 + ul , ul ; pen ul - 3 ; pen 2 )  | ( v0 = ul ; move 4 , v0 ; v1 = 4 )  | ( move 3 + ul , ua + ul ; v0 = ua - 4 )  | ( v0 = ul ; pen 2 ; move 3 + v0 , v0 )  | ( move 3 + ul , ul - ua ; v0 = 0 ; pen ua )  | ( ( move 4 , ul ; pen 2 ; pen ul / ua ) ; pen ul )  
[10] move ua , ul  | move ua , 3 - 2  | move ua , 4 - 3  | move 0 - ua , ul  | move ua , ua + ul  | move ua , ul - ua  | move 0 - ua , ua + ul  | move 0 - ua , ul - ua  | ( move ua , ul ; pen 0 )  | ( pen 3 ; move ua , ul )  | ( move ua , ul ; pen 4 )  | ( pen ua ; move ua , ul )  | ( pen ul ; move ua , ul )  | ( move ua , ul ; move 0 , 3 )  | ( move ua , ul ; v0 = 3 )  | ( pen 3 + 2 ; move ua , ul )  | ( move ua , ul ; v0 = ul )  | ( move ua , 2 - ul ; pen ul )  | ( move ua , ul ; pen 4 / ua )  | ( v0 = ul ; move ua , v0 )  | ( move ua , ua + ul ; v0 = 4 )  | ( v0 = ua ; move ua , ul - v0 )  | ( v0 = ua ; move v0 , v0 + ul )  | ( v0 = ua ; pen ul ; move v0 , ul )  | ( move ua , ua + ul ; pen 0 ; v0 = 0 )  | ( move ua , ul - ua ; pen ua ; v0 = 3 )  | ( move ua , ua + ul ; pen ul - 4 ; pen ua )  | ( pen 4 + ul ; pen ul / ua ; move ua , ul )  | ( pen 4 - ul ; move ua , ul ; v0 = ua * 4 )  | ( v0 = 4 - 3 ; move 0 , ua ; move ua , v0 )  | ( ( pen 4 ; move ua , ul ) ; v0 = 4 ; pen 2 )  | ( v0 = 0 ; ( move v0 , v0 ; pen ua ) ; move ua , ul )  
[11] move 3 + 2 , 0  | move 4 + ul , 0  | move 3 + 2 , ua  | move 4 + ul , ua  | move 3 + 2 , ua * 4  | move 4 + ul , ua / 2  | move 4 + ul , ua * 3  | move 4 + ul , ua * 4  | move 4 + ul , ua + ua  | move ul - ua , ua * 3  | ( move 4 + ul , ua ; pen 0 )  | ( pen 2 ; move 4 + ul , ua )  | ( move 4 + ul , ua ; pen ul )  | ( v0 = 0 ; move 3 + 2 , ua )  | ( move ul , ua ; move 2 + 2 , 0 )  | ( move 4 + ul , ua / 2 ; pen 3 )  | ( v0 = 3 + 2 ; move v0 , 0 )  | ( move 4 + ul , ua ; v0 = ul )  | ( move ul , ua ; move 3 + ul , ua )  | ( move 3 + 2 , ua * 2 ; v0 = ul )  | ( move 3 + ul , ua * 2 ; move ul , ua )  | ( pen 2 ; move 3 + 2 , 0 ; v0 = ua )  | ( move 3 + 2 , 0 ; pen 3 ; pen ua - ul )  | ( move 4 + ul , 0 ; v0 = ul ; pen v0 )  | ( ( move 2 , ua ; pen 4 / 3 ) ; move 3 , ua )  | ( move 4 , ua ; move ul , 0 ; v0 = ua + 4 )  | ( ( pen ul - 4 ; pen ul ) ; move 3 + 2 , ua )  | ( move ul , ua ; move 4 , ua ; v0 = ua * ua )  | ( v0 = ua ; move 3 + 2 , v0 ; v1 = v0 )  | ( v0 = ul ; v1 = ua - ul ; move v1 , v1 + ul )  | ( pen 3 / ua ; pen ul ; ( move 4 + ul , 0 ; v0 = 2 ) )  
[12] move 4 + 3 , 0  | move 4 + 3 , ua  | move ua + ul , 0  | move ua + ul , ua  | move 4 + 3 , 0 - ua  | move 4 + 3 , ua * 2  | move 4 + 3 , ua / 2  | move 4 + 3 , ua * 3  | move 4 + 3 , ua * 4  | move 4 + 3 , ua + ua  | ( move 4 , 0 ; move 3 , 0 )  | ( move 4 , 0 ; move 3 , ua )  | ( move 4 + 3 , ua ; pen 0 )  | ( move ua + ul , ua ; pen 3 )  | ( move 4 + 3 , 0 ; move 0 , ul )  | ( move 4 + 3 , ua ; v0 = 4 )  | ( move 4 + 3 , 0 ; pen ul / 3 )  | ( pen 4 ; move 4 + 3 , ua / 2 )  | ( move 4 , ua ; move 3 , ua * 4 )  | ( move 3 * 2 , ua ; move ul , ua )  | ( move 4 , ua ; move 4 - ul , ua )  | ( v0 = ua ; move v0 + ul , ua )  | ( move 3 + ul , ua ; move 4 - ul , 0 )  | ( move 2 + ul , ua ; move 3 + ul , ua )  | ( move ul + ul , ua ; move 4 + ul , ua )  | ( move 4 , 0 ; pen 2 ; move 3 , ua + ua )  | ( move 4 , ua ; move 0 , 0 ; move 4 - ul , ua )  | ( move 0 , ul ; pen ul ; move 4 + 3 , 0 - ul )  | ( move 0 , 0 ; ( move ua , ua ; move ul , ua ) )  | ( ( pen 3 + ul ; move 4 + 3 , 0 ) ; pen 4 / ua )  
[13] move 3 + 2 , 2  | move 4 + ul , 2  | move ua - ul , 2  | move 3 + 2 , ua + 2  | move 3 + 2 , 3 - ul  | move 4 + ul , 4 / 2  | move 4 + ul , ua + 2  | move 3 + 2 , ul + ul  | move 4 + ul , 2 - ua  | move 4 + ul , 3 - ul  | move 4 + ul , ul + ul  | ( move 2 , 2 ; move 3 , ua )  | ( move 3 + 2 , 2 ; pen ul )  | ( move 4 , 2 ; move ul , ua )  | ( move 4 + ul , 2 ; pen ul )  | ( pen ul ; move 4 + ul , 2 )  | ( move 3 , 4 / 2 ; move 2 , 0 )  | ( move 3 , 2 - ua ; move 2 , ua )  | ( pen ua + 4 ; move 4 + ul , 2 )  | ( move 0 , 2 ; move 3 + 2 , ua * 3 )  | ( move 4 + ul , 2 ; v0 = ua - 2 )  | ( move 2 + ul , ul + ul ; move 2 , ua )  | ( move 0 , ul - ua ; move 4 + ul , ul )  | ( v0 = 0 ; move 4 + ul , v0 + 2 )  | ( move 4 + ul , 2 ; pen ua ; v0 = ul )  | ( move ul , 2 ; v0 = 4 ; move v0 , 0 )  | ( pen 2 ; move ul , ul + ul ; move 4 , ua )  | ( v0 = 4 ; pen v0 ; move ul + v0 , 2 )  | ( v0 = 3 + 2 ; v1 = ua ; move v0 , 2 )  | ( move 0 - ul , 2 ; move 0 - 4 , ua ; move 0 , ul )  | ( pen 4 + ul ; ( move 4 , 3 - ul ; move ul , 0 ) )  | ( pen ua + ul ; move 4 + ul , ul + ul ; move 0 , ua )  
[14] move 4 , 0 - 2  | move 4 , 2 - 4  | move 4 , ua - 2  | move 4 , ul - 3  | move 2 + 2 , 2 - 4  | move 0 - 4 , 2 - 4  | move 3 + ul , 0 - 2  | move 0 - 4 , ua - 2  | move 2 + 2 , ul - 3  | move 2 * 2 , ua - 2  | move 0 - 4 , ul - 3  | move 3 + ul , 2 - 4  | move 3 + ul , ua - 2  | move 3 + ul , ul - 3  | ( pen 2 ; move 4 , ul - 3 )  | ( move 4 , ul - 3 ; pen 4 )  | ( move 4 , ul - 3 ; pen ul )  | ( move 4 , 2 - 4 ; v0 = 3 )  | ( move 0 , 0 ; move 4 , ul - 3 )  | ( move 4 , ul - 3 ; v0 = 0 )  | ( move 4 , 2 - 4 ; v0 = ul )  | ( move 2 + 2 , ul - 3 ; pen ua )  | ( pen ua + 2 ; move 4 , ua - 2 )  | ( pen ua - 3 ; move 4 , ua - 2 )  | ( pen ul / ua ; move 4 , ul - 3 )  | ( move 3 + ul , 2 - 4 ; pen 4 ; pen ul )  | ( v0 = ul ; pen ua ; move 4 , v0 - 3 )  | ( v0 = 4 ; move v0 , 2 - 4 ; pen v0 )  | ( move 0 , ul ; move 4 , ul - 4 ; v0 = 3 )  | ( move 4 , 2 - 4 ; v0 = ul ; pen ul / v0 )  | ( pen ul ; move 3 + ul , 2 - 4 ; move 0 , 4 + 4 )  | ( v0 = ua ; ( v1 = 3 ; move 4 , ul - v1 ) )  
[15] move 3 + 2 , 3  | move 4 + ul , 3  | move ua - ul , 3  | move 3 + 2 , 2 + ul  | move 3 + 2 , 3 - ua  | move 3 + 2 , 4 - ul  | move 4 + ul , 2 + ul  | move 4 + ul , ua + 3  | move 4 + ul , 3 - ua  | ( move 2 , 3 ; move 3 , 0 )  | ( move ul , 3 ; move 4 , 0 )  | ( move ul , 3 ; move 4 , ua )  | ( pen ua ; move 4 + ul , 3 )  | ( move 4 + ul , 3 ; v0 = 0 )  | ( move 4 + ul , 3 ; v0 = 2 )  | ( move 4 + ul , 3 ; v0 = 3 )  | ( move 3 , 3 - ua ; move 2 , ua )  | ( move 4 , 3 ; move ul , ua * 3 )  | ( move 4 , 3 ; move ul , ua ; pen ul )  | ( move 4 + ul , 3 ; move 0 , 4 + ul )  | ( move ul , 2 + ul ; move 3 + ul , 0 )  | ( move 0 , 3 ; move ul , ua ; move 4 , ua )  | ( move ul , 3 ; move 4 , ua ; v0 = ul )  | ( pen 3 ; move ul , 3 ; move 3 + ul , ua )  | ( pen ua ; move 4 , 3 ; move ul , ua * 3 )  | ( v0 = ul ; move v0 + 4 , v0 + 2 )  | ( v0 = 4 ; move ul + v0 , v0 - ul )  | ( move 4 , 3 ; v0 = ul - 2 ; move v0 * v0 , 0 )  | ( ( move 2 + 2 , ua + 3 ; move ul , ua ) ; v0 = ua )  | ( ( move 4 - 2 , 3 ; pen ul ) ; pen 4 + 4 ; move 3 , ua )  
[16] move 4 , 0 - 3  | move 4 , ua - 3  | move 4 , ul - 4  | move 2 * 2 , 0 - 3  | move 3 + ul , 0 - 3  | move 2 + 2 , ua - 3  | move 2 * 2 , ua - 3  | move 2 * 2 , ul - 4  | move 3 + ul , ua - 3  | move 3 + ul , ul - 4  | ( move 4 , ua - 3 ; pen 0 )  | ( pen ul ; move 4 , 0 - 3 )  | ( move 4 , ua - 3 ; pen 2 )  | ( pen 4 ; move 4 , ua - 3 )  | ( move 4 , ul - 4 ; pen ua )  | ( move 0 , ul - 4 ; move 4 , 0 )  | ( move 4 , ua - 3 ; pen 3 + 2 )  | ( move 4 , ul - 4 ; v0 = ul )  | ( pen ua * 4 ; move 4 , ua - 3 )  | ( v0 = ul - 4 ; move 4 , v0 )  | ( pen ul ; pen 2 / ua ; move 4 , ua - 3 )  | ( move 4 , ua - 3 ; move 0 , 0 ; v0 = 3 )  | ( v0 = 3 ; pen v0 ; move 4 , ua - v0 )  | ( move 4 , ul - 4 ; v0 = 4 - ul ; pen v0 )  | ( move 0 , ua - 4 ; ( move 2 , ul ; move 2 , 0 ) )  | ( ( pen ul / 2 ; move 4 , ul - 4 ) ; v0 = 0 )  | ( ( move 4 , ua - 3 ; v0 = ua ) ; move 0 , ua )  | ( move 4 , ul - 4 ; ( v0 = ul - ua ; pen v0 ) )  | ( move 4 , 0 - 3 ; v0 = 0 ; move v0 , v0 + v0 )  | ( move 3 + ul , ua - 3 ; v0 = ua ; v1 = 3 * v0 )  
[17] move 4 * 2 , 0  | move 4 + 4 , 0  | move ua + 2 , 0  | move 4 * 2 , ua  | move 4 + 4 , ua  | move ua + 2 , ua  | move 4 + 4 , 0 - ua  | move 4 * 2 , 0 - ua  | move 4 * 2 , ua * 3  | move 4 * 2 , ua * 4  | move ua + 2 , 0 - ua  | move ua + 2 , ua * 2  | move ua + 2 , ua * 3  | move ua + 2 , ua * 4  | move ua + 2 , ua + ua  | ( move 4 , ua ; move 4 , 0 )  | ( move 2 , ua ; move ua , 0 )  | ( pen ul ; move ua + 2 , 0 )  | ( move 4 * 2 , 0 ; v0 = ul )  | ( move 3 * 2 , ua ; move 2 , ua )  | ( move ua + 2 , ua ; v0 = ul )  | ( pen 2 + ul ; move ua + 2 , ua )  | ( v0 = 2 ; move v0 + ua , 0 )  | ( v0 = 4 ; move v0 + v0 , 0 )  | ( move 2 , ua ; move ua , 0 ; pen ua )  | ( v0 = ul - ua ; move 3 - v0 , 0 )  | ( move 0 , ua - 4 ; move 4 * 2 , 4 - ua )  | ( move 2 , 0 ; v0 = ua ; move v0 , v0 )  | ( v0 = ua ; ( move v0 + 2 , v0 ; pen ul ) )  | ( pen ua + 4 ; ( move 4 , ua ; move 2 + 2 , ua ) )  | ( v0 = 3 * 3 ; move v0 - ul , ua ; v1 = ul )  | ( v0 = ua + 2 ; ( move v0 , 0 ; pen 0 ) ; pen v0 )  
[18] move 3 * 3 , 0  | move 3 * 3 , ua  | move 3 * 3 , 0 - ua  | move 3 * 3 , ua * 2  | move 3 * 3 , ua / 2  | move 3 * 3 , ua * 3  | move 3 * 3 , ua * 4  | move 3 * 3 , ua + ua  | ( pen ua ; move 3 * 3 , 0 )  | ( pen ul ; move 3 * 3 , 0 )  | ( pen ua ; move 3 * 3 , ua )  | ( move 3 * 3 , ua ; pen ua )  | ( move 3 * 3 , ua ; pen ul )  | ( move 3 , ua ; move 4 + 2 , 0 )  | ( move 3 + 3 , 0 ; move 2 + ul , 0 )  | ( v0 = 3 ; move v0 * v0 , 0 )  | ( move 4 + 2 , 0 ; move 2 + ul , ua )  | ( v0 = 3 ; move v0 * v0 , ua )  | ( move 4 - ua , 0 ; move 3 * 3 , ua )  | ( pen ul + ul ; move 3 * 3 , ua * 4 )  | ( move 3 * 3 , ua ; pen ua ; v0 = 0 )  | ( pen 4 - ul ; move 3 * 3 , ua ; pen 0 )  | ( v0 = ul - 4 ; move v0 * v0 , ua )  | ( v0 = 3 ; pen 4 ; move v0 * v0 , 0 )  | ( move 3 * 3 , ua ; pen ul ; move 0 , 4 - ua )  | ( ( move 4 + ul , 0 ; pen ul ) ; move 4 , ua )  | ( move 3 , 0 ; v0 = ua ; move 3 + 3 , v0 )  | ( move 3 * 3 , 0 ; v0 = 3 * 3 ; v1 = 3 )  | ( move ua / 4 , 0 ; move ul , ua + ua ; move ua , ua )  | ( move ua - 4 , 0 ; move ua , 0 ; move ul / 4 , ua * 3 )  | ( move ul , ua + ua ; ( pen 2 ; move 4 * 2 , ua ; pen 2 ) )  | ( ( pen ul ; move 3 , ua ; move ul + ul , 0 ) ; move 4 , ua )  
[19] move 3 + 2 , 4  | move 4 + ul , 4  | move ul - ua , 4  | move 3 + 2 , ua + 4  | move 4 + ul , 2 + 2  | move 3 + 2 , 3 + ul  | move 4 + ul , ua + 4  | move 4 + ul , 3 + ul  | move 4 + ul , 4 - ua  | ( move 4 , 4 ; move ul , 0 )  | ( move 4 + ul , 4 ; v0 = 0 )  | ( move 4 + ul , 4 ; v0 = 4 )  | ( move 2 , 3 + ul ; move 3 , ua )  | ( move 3 + ul , 4 ; move ul , 0 )  | ( move ul , 4 - ua ; move 4 , 0 )  | ( move ul , 4 ; move 4 , ua * 2 )  | ( move 4 + ul , 4 ; v0 = ul )  | ( move ul + ul , 4 ; move 3 , ua )  | ( pen ul ; move 4 + ul , 3 + ul )  | ( move ua - ul , 4 ; pen ul / 2 )  | ( move 2 , 4 ; pen 4 ; move 3 , ua )  | ( move 3 + 2 , 3 + ul ; move 0 , ua )  | ( v0 = 4 ; move ul + v0 , v0 )  | ( move 4 + ul , 4 ; move 0 , ua * 2 )  | ( move 4 + ul , 4 ; move 0 , ul / ua )  | ( move ua / 3 , 3 + ul ; move 3 , ua )  | ( move ul , 4 ; v0 = 0 ; move 4 , v0 )  | ( move 4 + ul , 4 ; v0 = ua ; v1 = ul )  | ( v0 = 4 ; move v0 + ul , v0 ; pen v0 )  | ( pen ua - 4 ; ( move 4 + ul , 4 ; pen ul ; pen 0 ) )  | ( ( move ul , 4 ; move 0 , ua ; move 3 + ul , ua ) ; pen ul )  
[20] move 4 , 3 + 2  | move 4 , 4 + ul  | move 2 + 2 , 3 + 2  | move 2 + 2 , 4 + ul  | move 3 + ul , 3 + 2  | move 2 * 2 , 4 + ul  | move 3 + ul , 4 + ul  | ( move 4 , 3 + 2 ; pen 2 )  | ( move 0 , ul ; move 4 , 4 )  | ( move 4 , 4 + ul ; pen 0 )  | ( move 4 , 4 + ul ; pen ua )  | ( move 0 , 2 + 2 ; move 4 , ul )  | ( move 4 , 4 + ul ; v0 = 0 )  | ( move 2 * 2 , 3 + 2 ; pen ua )  | ( move 4 , 4 + ul ; v0 = ua )  | ( pen 3 ; move 3 + ul , 4 + ul )  | ( move ul , 4 + ul ; move 3 , ua )  | ( pen ul + ul ; move 4 , 4 + ul )  | ( v0 = 4 + ul ; move 4 , v0 )  | ( v0 = ul ; move 4 , v0 + 4 )  | ( move 2 + 2 , 4 + ul ; v0 = 2 )  | ( move ul , 3 + 2 ; move 3 , 0 - ua )  | ( v0 = 4 ; move v0 , v0 + ul )  | ( move 0 , 4 + ul ; move 4 , ua * 2 )  | ( move 3 + ul , 4 + ul ; v0 = 3 )  | ( pen ua ; move 0 , 4 ; move 4 , 3 - 2 )  | ( pen 3 ; move 0 , 4 ; move 3 + ul , ul )  | ( pen 4 ; v0 = 4 + ul ; move 4 , v0 )  | ( move 0 , ul ; v0 = 4 ; move v0 , v0 )  | ( v0 = 4 ; move v0 , v0 + ul ; pen ul )  | ( pen 2 - ul ; move 3 + ul , 4 + ul ; pen 2 )  | ( v0 = 4 + ul ; move 4 , v0 ; v1 = v0 / 2 )  
[21] move 4 + 3 , 2  | move ua + ul , 2  | move 4 + 3 , ul + ul  | move ua + ul , 4 / 2  | move ua + ul , ua + 2  | move ua + ul , 2 - ua  | move ua + ul , 3 - ul  | move ua + ul , ul + ul  | ( move ua , 2 ; move ul , 0 )  | ( move ua + ul , 2 ; pen 4 )  | ( move ul , 2 ; move ua , ua )  | ( move ua , 2 ; move ul , ua )  | ( move ua + ul , 2 ; pen ua )  | ( move 0 , 2 ; move 4 + 3 , ua )  | ( move ua + ul , 2 ; v0 = ul )  | ( pen ua / 2 ; move ua + ul , 2 )  | ( move ua , ua + 2 ; move ul , ua )  | ( move ul , ua ; move ua + ul , 2 )  | ( move ua + ul , ul + ul ; pen 0 )  | ( move ua + ul , 2 ; v0 = ul + ul )  | ( move ul , ua ; move ua + ul , ua + 2 )  | ( move ul , 2 ; move ua , ua ; pen 3 / 4 )  | ( move ul , 0 ; move ua + ul , 2 ; pen ul )  | ( move 3 , 2 ; move 4 , ua * 2 ; pen 4 + 3 )  | ( move ul , 3 - ul ; ( move ua , 0 ; pen 4 ) )  | ( move ul , 0 ; move 0 , ul ; move ua + ul , ul )  | ( move ul , ua ; move ul , 2 ; move ua , ua * 3 )  | ( pen ua ; move ua + ul , 3 - ul ; v0 = ul )  | ( move ua + ul , 2 ; v0 = 0 ; pen 2 * v0 )  | ( move ua + ul , 3 - ul ; pen 0 - ul ; v0 = 3 )  | ( v0 = ua + ua ; move ul , ul + ul ; move ua , v0 )  
[22] move 4 , 0 - 4  | move 4 , ua - 4  | move 2 + 2 , 0 - 4  | move 3 + ul , 0 - 4  | move 2 + 2 , ua - 4  | move 0 - 4 , ua - 4  | move 3 + ul , ua - 4  | ( move 4 , 0 - 4 ; pen 4 )  | ( pen ul ; move 4 , 0 - 4 )  | ( move 4 , ua - 4 ; pen ul )  | ( move 2 , ua - 4 ; move 2 , ua )  | ( move 4 , ua - 4 ; v0 = ul )  | ( move 4 , ua - 4 ; pen 4 - ul )  | ( move 3 , ua - 4 ; move ul , ua )  | ( v0 = 0 ; move 4 , v0 - 4 )  | ( v0 = 0 - 4 ; move v0 , v0 )  | ( move 4 , 0 - 4 ; v0 = ua - ul )  | ( move 4 , ua - 4 ; v0 = 3 + ul )  | ( move 3 + ul , ua - 4 ; v0 = ul )  | ( pen 2 + ul ; move 4 , ua - 4 ; pen ul )  | ( pen 2 ; move 4 , ua - 4 ; pen ul + ul )  | ( v0 = 3 + ul ; move v0 , ua - v0 )  | ( move 3 + ul , ua - 4 ; v0 = ul - 3 )  | ( move 4 , 0 - 4 ; v0 = 0 ; v1 = ua )  | ( v0 = 0 - 4 ; move v0 , v0 ; pen 0 )  | ( move 4 , ua - 4 ; move 0 , ua ; v0 = ua )  | ( move 0 , 0 - 4 ; pen ua - ul ; move 4 , ua )  | ( v0 = 0 ; move 4 , v0 - 4 ; v1 = v0 )  | ( move 4 , 0 - 4 ; v0 = 4 - ul ; v1 = 2 )  | ( move 0 - 4 , ua - 4 ; v0 = ua ; v1 = ul - 2 )  | ( pen ua ; pen 2 ; ( v0 = 0 - 4 ; move v0 , v0 ) )  | ( pen ua ; move ul , ua - 4 ; ( move 3 , ua ; v0 = ul ) )  
[23] move 4 , 4 + 2  | move 4 , 3 + 3  | move 4 , 3 * 2  | move 2 + 2 , 3 + 3  | move 2 + 2 , 4 + 2  | move 2 * 2 , 4 + 2  | move 2 * 2 , 3 * 2  | move ua - 2 , 4 + 2  | move 2 - ua , 3 + 3  | move ua - 2 , 3 + 3  | move 2 - ua , 4 + 2  | move ua - 2 , 3 * 2  | move 3 + ul , 3 + 3  | move 3 + ul , 4 + 2  | move 2 - ua , 3 * 2  | move 3 + ul , 3 * 2  | ( move 4 , 4 + 2 ; v0 = 0 )  | ( move 4 , 3 * 2 ; v0 = 3 )  | ( move 0 , ua ; move 4 , 4 + 2 )  | ( move 0 , 2 + ul ; move 4 , 3 )  | ( move 4 , 4 + 2 ; v0 = ul )  | ( v0 = 4 ; move v0 , 2 + v0 )  | ( move 3 + ul , 4 + 2 ; v0 = ua )  | ( move 0 , 2 ; move 4 , 4 ; pen 3 / ua )  | ( pen ul ; move 4 , 3 * 2 ; v0 = 3 )  | ( v0 = 2 ; move v0 * v0 , 4 + v0 )  | ( ( pen ul ; move 4 , 4 + 2 ) ; v0 = ua )  | ( move 4 , 3 * 2 ; ( v0 = 0 ; pen v0 ) )  | ( v0 = ua ; move 4 , 4 + 2 ; v1 = v0 )  | ( move 0 , 4 + ul ; v0 = 4 ; move v0 , ul )  | ( ( move 4 , 3 * 2 ; pen ua ) ; pen ua ; pen 2 )  | ( v0 = 3 ; move 4 , v0 + v0 ; v1 = 2 / v0 )  
[24] move 4 * 2 , 2  | move 4 + 4 , 2  | move ua + 2 , 2  | move ua + 3 , 2  | move 4 * 2 , 4 - 2  | move 4 + 4 , 4 / 2  | move 4 * 2 , ua + 2  | move 4 + 4 , 2 - ua  | move 4 * 2 , 3 - ul  | move 4 + 4 , 3 - ul  | move 4 * 2 , ul + ul  | move 4 + 4 , ul + ul  | ( move 4 , 2 ; move 4 , 0 )  | ( move 4 , 2 ; move 4 , ua )  | ( pen ul ; move 4 * 2 , 2 )  | ( move 0 , ua ; move 4 * 2 , 2 )  | ( move 4 * 2 , ua + 2 ; pen 4 )  | ( move 0 , ul ; move 4 * 2 , ul )  | ( v0 = 2 ; move v0 * 4 , 2 )  | ( v0 = 4 ; move v0 + v0 , 2 )  | ( v0 = 2 ; move v0 * 4 , v0 )  | ( move 4 + 4 , 2 - ua ; v0 = 0 )  | ( move 4 , 2 ; move 4 , ua ; v0 = 0 )  | ( move 4 , 2 ; move 4 , 0 ; v0 = ua - 2 )  | ( pen ul ; ( move 4 * 2 , 2 ; v0 = ul ) )  | ( move ul , 2 ; move 2 + ul , ua ; move 4 , ua )  | ( v0 = ul ; move ua , v0 + v0 ; move 2 , 0 )  | ( move 4 * 2 , 4 - 2 ; v0 = ua + ul ; pen 3 )  | ( move 4 * 2 , 2 ; ( v0 = 0 ; v1 = v0 ) )  | ( move 4 * 2 , ul + ul ; pen ua * 3 ; move 0 , ul - ua )  | ( ( move ul , 2 ; move 3 , ua ) ; move 4 , 0 ; pen ua - 2 )  
[25] move 3 * 3 , 2  | move ua + 3 , 2  | move ua + 3 , 4 - 2  | move 3 * 3 , ua + 2  | move 3 * 3 , 2 - ua  | move ua + 3 , 4 / 2  | move 3 * 3 , 3 - ul  | move ua + 3 , ua + 2  | move ua + 3 , 2 - ua  | move ua + 3 , 3 - ul  | move 3 * 3 , ul + ul  | move ua + 3 , ul + ul  | ( move 3 * 3 , 2 ; pen 4 )  | ( move ua + 3 , 2 ; pen 2 )  | ( move 3 + 2 , 2 ; move 4 , 0 )  | ( move 2 , 2 ; move ua + ul , ua )  | ( move 3 * 3 , ul + ul ; pen ua )  | ( v0 = 2 ; move ua + 3 , v0 )  | ( move ua + 3 , ul + ul ; v0 = 4 )  | ( move ua + 3 , 4 - 2 ; pen ua + ul )  | ( move ul , ul + ul ; move 4 * 2 , ua )  | ( move ua + 3 , 2 ; move ul + v0 , 0 )  | ( move ua + 3 , 2 ; pen ua ; v0 = 0 )  | ( v0 = ul ; move ua + 3 , v0 + v0 )  | ( move 4 * 2 , ua + 2 ; move ul , ua * 2 )  | ( move 3 , 2 - ua ; move ua , ua ; move 0 , 0 )  | ( move 3 * 3 , 2 ; pen 4 + ul ; v0 = ul )  | ( move ua + 3 , 2 ; pen ua * ua ; pen ul - ua )  | ( move ul + ul , 2 ; move 0 , ua ; move 4 + 3 , 0 )  | ( move ua + 3 , 2 ; v0 = 2 / ua ; v1 = v0 )  | ( ( pen ua + 2 ; move ua + 3 , ua + 2 ) ; pen 3 / 2 )  | ( v0 = 3 ; move v0 * v0 , 2 ; v1 = v0 * ua )  
[26] move 4 + 3 , 3  | move 4 * 2 , 3  | move ua + 2 , 3  | move ua + ul , 3  | move 4 + 3 , 2 + ul  | move 4 + 3 , ua + 3  | move 4 + 3 , 4 - ul  | move ua + 2 , ua + 3  | move ua + 2 , 3 - ua  | move ua + ul , ua + 3  | move ua + ul , 2 + ul  | move ua + ul , 3 - ua  | move ua + ul , 4 - ul  | ( pen ua ; move 4 + 3 , 3 )  | ( move ua + ul , 3 ; pen 0 )  | ( move ua + ul , 3 ; pen 4 )  | ( move ul , 3 ; move ua , ua )  | ( pen ul ; move ua + ul , 3 )  | ( move 0 , ul ; move 4 + 3 , 2 )  | ( move ua + ul , 3 ; v0 = 3 )  | ( move ua , ua + 3 ; move ul , 0 )  | ( v0 = ua ; move ua + ul , 3 )  | ( move ua + ul , 3 - ua ; pen 3 )  | ( pen 3 + ul ; move ua + ul , 3 )  | ( move ua + ul , 3 ; pen 4 + ul )  | ( move ua + ul , 2 + ul ; pen ua )  | ( move ua + ul , ua + 3 ; v0 = ua )  | ( ( move ua + ul , 3 ; pen 2 ) ; pen ua + 4 )  | ( v0 = ua ; move ua + ul , 3 ; v1 = ua )  | ( move ua + ul , 2 + ul ; ( pen ul ; pen 3 ) )  | ( pen 3 ; v0 = ul ; move ua + ul , v0 + 2 )  
[27] move 4 , 2 - 3  | move 4 , 3 - 4  | move 4 , 0 - ul  | move 4 , ul - 2  | move 4 , ua - ul  | move 2 * 2 , 0 - ul  | move 3 + ul , 3 - 4  | move 3 + ul , 0 - ul  | move 2 + 2 , ua - ul  | move 0 - 4 , ua - ul  | move 2 * 2 , ua - ul  | move 3 + ul , ul - 2  | move 3 + ul , ua - ul  | ( pen ua ; move 4 , 0 - ul )  | ( move 4 , ua - ul ; pen 3 )  | ( move 4 , ul - 2 ; pen ul )  | ( pen ua ; move 4 , ua - ul )  | ( move 0 , 0 ; move 4 , ul - 2 )  | ( move ul , 3 - 4 ; move 3 , 0 )  | ( pen ua ; move 0 - 4 , 2 - 3 )  | ( move 4 , ul - 2 ; v0 = ua )  | ( move ul , ua - ul ; move 3 , 0 )  | ( v0 = ua - ul ; move 4 , v0 )  | ( pen ua ; pen ua ; move 4 , ul - 2 )  | ( move 2 * 2 , ua - ul ; move 0 , ua )  | ( move 3 + ul , 0 - ul ; pen ua ; pen 0 )  | ( pen ua ; move 4 , ua - ul ; move 0 , 0 - ul )  | ( pen ul / ua ; pen ul / 2 ; move 4 , 3 - 4 )  | ( move 4 , 2 - 3 ; ( pen 3 - 4 ; move 0 , 0 ) )  | ( move 4 , 3 - 4 ; move 0 , 3 + 3 ; v0 = ul )  | ( v0 = ua - ul ; move 4 , ua - ul ; pen 3 * v0 )  
[28] move 3 * 3 , 3  | move ua + 2 , 3  | move 3 * 3 , 2 + ul  | move 3 * 3 , ua + 3  | move 3 * 3 , 3 - ua  | move 3 * 3 , 4 - ul  | ( pen 3 ; move 3 * 3 , 3 )  | ( move 3 * 3 , 3 ; pen 3 )  | ( move ua + 2 , 3 ; v0 = ua )  | ( move 4 * 2 , 3 ; move ul , ua )  | ( move 4 , 3 ; move 4 + ul , ua )  | ( v0 = 3 ; move v0 * v0 , 3 )  | ( v0 = 3 ; move 3 * v0 , v0 )  | ( v0 = 3 ; move v0 * 3 , v0 )  | ( move 3 * 3 , 3 ; move 0 , 2 - ul )  | ( move ua + 2 , 3 ; move 4 / ua , 0 )  | ( move 3 * 3 , 3 ; v0 = ul + ul )  | ( move 4 + ul , 2 + ul ; move 4 , ua )  | ( v0 = 3 ; move v0 * v0 , v0 )  | ( move ua + 2 , 2 + ul ; pen ul ; pen 0 )  | ( v0 = 4 - ul ; move v0 * 3 , v0 )  | ( v0 = 4 ; move 2 + v0 , 3 ; move 3 , 0 )  | ( pen 2 / ua ; ( pen ua ; move 3 * 3 , 3 ) )  | ( move 4 * 2 , 3 ; pen ua ; move ul , ua * 3 )  | ( ( pen ul ; move ul , 3 ) ; move 4 * 2 , ua )  | ( move 3 * 3 , 3 ; v0 = ul ; v1 = v0 )  | ( v0 = 3 ; pen v0 ; move 3 * v0 , v0 )  | ( v0 = 3 ; pen 4 ; move v0 * v0 , v0 )  | ( v0 = 3 ; move v0 * v0 , v0 ; pen v0 )  | ( move 3 * 3 , 3 ; v0 = ul ; v1 = 2 / v0 )  | ( ( v0 = 3 ; pen ul ) ; move v0 * v0 , v0 )  
[29] move 4 * 2 , 3  | move 4 + 4 , 3  | move ua + 2 , 3  | move 4 * 2 , 2 + ul  | move 4 * 2 , ua + 3  | move 4 + 4 , 2 + ul  | move 4 + 4 , 4 - ul  | move 4 * 2 , 4 - ul  | move ua + 2 , 2 + ul  | move ua + 2 , ua + 3  | move ua + 2 , 3 - ua  | move ua + 2 , 4 - ul  | ( move 4 * 2 , 3 ; pen ul )  | ( pen ul ; move ua + 2 , 3 )  | ( move 4 * 2 , 3 ; v0 = 2 )  | ( move 0 , ul ; move 4 * 2 , 2 )  | ( move ua + 2 , 3 ; v0 = 4 )  | ( move 4 + 4 , 3 ; v0 = ul )  | ( move 0 , 3 ; move ua + 2 , ua )  | ( move ua + 2 , ua + 3 ; pen 0 )  | ( v0 = ua + 2 ; move v0 , 3 )  | ( pen ul ; move ua + 2 , 3 ; pen 0 )  | ( move ul , ua + 3 ; move ua + ul , ua )  | ( move 4 + 4 , 3 - ua ; move ul - 4 , 0 )  | ( move 4 + 4 , 3 - ua ; v0 = ua / 3 )  | ( pen 3 ; move ua + 2 , 3 ; v0 = ua + 3 )  | ( move ua + 2 , 3 - ua ; ( pen ul ; pen 4 ) )  | ( move ua + ul , 2 + ul ; v0 = 2 ; move ul , ua )  | ( move 4 * 2 , 3 ; v0 = 3 ; move ul + ul , v0 )  | ( move ua + 2 , 2 + ul ; v0 = ua ; v1 = v0 )  | ( ( move ul , 0 ; move ua , 3 ; move 2 , ua ) ; move 2 , 3 )  | ( ( pen 0 ; pen ul ) ; move 4 * 2 , 3 ; move 0 , ua * ua )  
[30] move 4 , 4 + 3  | move 4 , 3 / 4  | move 0 - 4 , 4 + 3  | move 2 * 2 , 4 + 3  | move 3 + ul , 4 + 3  | ( move 0 , 3 ; move 4 , 4 )  | ( move 4 , 4 + 3 ; pen 0 )  | ( pen 3 ; move 4 , 4 + 3 )  | ( move 4 , 4 + 3 ; pen 4 )  | ( move 4 , 4 + 3 ; pen ul )  | ( move 4 , 4 + 3 ; v0 = 4 )  | ( move 0 , 4 ; move 3 + ul , 3 )  | ( move 0 , 3 - ua ; move 4 , 4 )  | ( move 4 , 4 + 3 ; v0 = ua )  | ( pen ul ; move 3 + ul , 4 + 3 )  | ( v0 = 4 + 3 ; move 4 , v0 )  | ( move 0 , 3 ; move 4 , 4 ; pen 4 )  | ( v0 = 4 ; move v0 , 3 + v0 )  | ( move 2 + 2 , 4 + 3 ; pen ua + 2 )  | ( move 0 , ua + 3 ; move 3 + ul , 4 )  | ( move 3 + ul , 4 + 3 ; move 0 , ul )  | ( pen 3 ; move 4 , 4 + 3 ; pen ua / 3 )  | ( v0 = 3 ; move 4 , v0 + 4 ; pen 0 )  | ( move 0 , 3 ; v0 = 4 ; move v0 , v0 )  | ( v0 = 4 + 3 ; move 4 , v0 ; pen v0 )  | ( move 4 , 4 + 3 ; move 0 , ua ; v0 = ua )  | ( v0 = 4 + 3 ; move 3 + ul , v0 - ua )  | ( move 0 , 3 ; move 4 , ua + 4 ; pen ul / 2 )  | ( move 4 , 4 + 3 ; v0 = 3 ; v1 = v0 )  | ( move 4 , 4 + 3 ; pen ua + ul ; pen 3 / ua )  | ( v0 = 4 ; move v0 , v0 + 3 ; v1 = ul )  | ( move 3 + ul , 4 + 3 ; ( pen 3 ; pen ul / 4 ) )  
[31] move 4 + 3 , 4  | move ua + ul , 4  | move 4 + 3 , 3 + ul  | move 4 + 3 , ua + 4  | move 4 + 3 , 4 - ua  | move ua + ul , 2 + 2  | move ua + ul , 2 * 2  | move ua + ul , ua + 4  | move ua + ul , 3 + ul  | move ua + ul , 4 - ua  | ( move ua , 4 ; move ul , 0 )  | ( move ul , 4 ; move ua , 0 )  | ( pen 4 ; move ua + ul , 4 )  | ( move ua , 4 ; move ul , ua )  | ( pen ul ; move ua + ul , 4 )  | ( move ul , 4 ; move 3 + 3 , ua )  | ( move ua , 4 ; move 2 - ul , ua )  | ( move ul , 4 ; move ua , ua * 2 )  | ( move ua + ul , 4 ; pen 2 - ua )  | ( pen ul + ul ; move ua + ul , 4 )  | ( move ul , 4 ; move 3 + 3 , ua + ua )  | ( move ua , 3 + ul ; move ul , ua * 2 )  | ( move ua + ul , 3 + ul ; v0 = ul )  | ( move 3 , 4 ; v0 = 4 ; move v0 , 0 )  | ( move ua , 4 ; v0 = 0 ; move ul , v0 )  | ( move 4 + 3 , 4 ; pen ua / 3 ; move 0 , 3 )  | ( move ul , 4 - ua ; move ua , ua ; v0 = ua - 4 )  | ( move ua + ul , 3 + ul ; v0 = ua ; v1 = v0 )  | ( move ua + ul , 4 ; v0 = ul + ul ; v1 = v0 )  | ( ( move ua , 3 + ul ; move ul , ua ) ; v0 = ua * 4 )  | ( ( move ua , 4 ; ( pen ul ; move 4 - 3 , ua ) ) ; pen ul )  
[32] move 4 * 2 , 4  | move 4 + 4 , 4  | move ua + 2 , 4  | move ua + 2 , 2 + 2  | move 4 * 2 , ua + 4  | move 4 * 2 , 3 + ul  | move 4 + 4 , 3 + ul  | move 4 + 4 , 4 - ua  | move ua + 2 , 3 + ul  | move ua + 2 , ua + 4  | move ua + 2 , 4 - ua  | ( move 4 + 4 , 4 ; pen 3 )  | ( move 2 , 4 ; move ua , 0 )  | ( move ua , 4 ; move 2 , 0 )  | ( move ua + 2 , 4 ; pen 4 )  | ( v0 = ul ; move 4 + 4 , 4 )  | ( move 2 , 4 ; move ua , ua * 2 )  | ( move ua + ul , 4 ; move ul , 0 )  | ( move 2 , 4 - ua ; move ua , ua )  | ( move ul + ul , 4 ; move ua , ua )  | ( pen 4 + 2 ; move ua , 4 ; move 2 , 0 )  | ( move ua + ul , 3 + ul ; move ul , ua )  | ( pen 3 / ua ; pen 3 ; move ua + 2 , 4 )  | ( move ua + 2 , 4 ; ( pen 2 ; pen ua ) )  | ( move ua , 4 ; move ul , 0 ; move ul , ua )  | ( move ul / 2 , 4 ; move ua + ul , ua + ua )  | ( move ua + 2 , 3 + ul ; pen 4 ; v0 = 0 )  | ( move 0 , ul ; move ua , 3 ; move ua / 4 , ua )  | ( move ul + ul , 4 ; move ua , ua ; v0 = 2 )  | ( ( v0 = 4 ; move v0 , v0 ) ; move v0 , ua )  | ( move 2 , ua + 4 ; v0 = ua ; move v0 , v0 + ua )  | ( move ua + 2 , 4 ; ( v0 = ul + ul ; pen v0 - ua ) )  
[33] move 4 , 3 * 3  | move 3 + ul , 3 * 3  | ( pen 3 ; move 4 , 3 * 3 )  | ( move 4 , 3 * 3 ; pen ua )  | ( pen ua ; move 4 , 3 * 3 )  | ( move 4 , 3 * 3 ; pen ul )  | ( move 4 , 3 * 3 ; v0 = 4 )  | ( pen 3 + 2 ; move 4 , 3 * 3 )  | ( move 0 , ul ; move 4 , 4 * 2 )  | ( move 0 , 4 + 4 ; move 4 , ul )  | ( move 0 , 4 * 2 ; move 4 , ul )  | ( move 4 , 3 * 3 ; v0 = ul )  | ( move 3 + ul , 3 * 3 ; pen 3 )  | ( move 4 , 3 * 3 ; v0 = ua + 2 )  | ( move 0 , 3 + ul ; move 4 , 4 + ul )  | ( move 3 , 3 * 3 ; move ul , ua * 3 )  | ( pen ua * 4 ; move 3 + ul , 3 * 3 )  | ( pen 4 ; move 4 , 3 * 3 ; v0 = ul )  | ( move 0 , 3 * 2 ; move 3 + ul , ua + 3 )  | ( move 0 , 3 + 3 ; move 4 , 3 ; move 0 , 2 )  | ( move ul + ul , 3 * 3 ; move ua / 3 , ua )  | ( pen 3 ; v0 = 3 ; move 4 , v0 * v0 )  | ( move 0 , 3 * 2 ; pen ul ; move 3 + ul , 3 )  | ( v0 = 3 ; move 4 , v0 * v0 ; pen ul )  | ( v0 = ul - 4 ; move 3 + ul , v0 * v0 )  | ( v0 = 4 ; move 0 , ul + v0 ; move v0 , 4 )  | ( v0 = 3 ; v1 = v0 ; move 4 , v0 * v0 )  | ( v0 = 3 * 3 ; move 0 - 4 , v0 ; v1 = ua )  | ( move 0 , 4 * 2 ; ( v0 = ul ; move 4 , v0 ) )  | ( v0 = 3 ; move v0 , v0 * v0 ; move ul , 0 )  | ( move 0 , 4 + ul ; v0 = 3 + ul ; move v0 , 4 )  | ( ( move 3 + ul , 3 * 3 ; pen ua * ua ) ; v0 = ul )  
[34] move 3 * 3 , 4  | move ua + 3 , 4  | move 3 * 3 , 2 + 2  | move ua + 3 , 2 + 2  | move ua + 3 , 2 * 2  | move 3 * 3 , 3 + ul  | move 3 * 3 , ua + 4  | move 3 * 3 , 4 - ua  | move ua + 3 , 3 + ul  | move ua + 3 , 4 - ua  | ( move ua + 3 , 4 ; pen 0 )  | ( move ua + 3 , 4 ; pen 2 )  | ( pen 2 ; move ua + 3 , 4 )  | ( move 3 , 3 + ul ; move ua , 0 )  | ( move ua - 3 , 4 ; move ua , 0 )  | ( pen ul ; move 3 , 4 ; move ua , ua )  | ( move ua + 3 , 3 + ul ; v0 = 0 )  | ( move ua + 3 , 4 ; v0 = ua / 2 )  | ( move ua + 3 , 3 + ul ; pen 3 * 3 )  | ( move 2 + ul , 3 + ul ; move ua , ua )  | ( move 4 - ul , ua + 4 ; move ua , ua )  | ( move ua , 4 ; pen 2 - ul ; move 3 , 0 )  | ( move 3 , 4 ; ( pen ul ; move ua , 0 ) )  | ( move 3 , 4 ; pen ua ; move ua , ua * 3 )  | ( move 3 , 4 ; move ua , 0 ; v0 = ul / 4 )  | ( ( move ua + 3 , 4 ; pen ua ) ; pen ul - 2 )  | ( pen ua ; move ua + 3 , 3 + ul ; v0 = ua )  | ( v0 = 3 * 3 ; move v0 , 4 ; v1 = ul )  | ( ( move 3 , 4 ; v0 = 2 + ul ) ; move ua , ua )  | ( ( pen ul ; move 4 , 3 + ul ) ; move 4 + ul , 0 )  | ( v0 = 4 ; move v0 , v0 ; move v0 + ul , ua )  | ( v0 = ua ; move v0 + 2 , 4 ; move ul , v0 * 4 )  
[35] move 4 , 2 / 3  | move 4 , 4 / ua  | move 0 - 4 , 2 / 3  | move 2 * 2 , 2 / 3  | move 3 + ul , 2 / 3  | ( pen 3 ; move 4 , 2 / 3 )  | ( move 4 , 2 / 3 ; pen 3 )  | ( pen ua ; move 4 , 2 / 3 )  | ( move 4 , 2 / 3 ; v0 = 0 )  | ( move 0 , ua ; move 4 , 2 / 3 )  | ( move 4 , 2 / 3 ; v0 = ua )  | ( move 2 + 2 , 2 / 3 ; pen ul )  | ( v0 = 2 ; move 4 , v0 / 3 )  | ( move 4 , 2 / 3 ; v0 = 3 * 2 )  | ( move 4 , 2 / 3 ; v0 = ua + ul )  | ( pen ua ; move 4 , 2 / 3 ; v0 = ul )  | ( v0 = ul ; move 4 , 2 / 3 ; pen v0 )  | ( move 2 + ul , 2 / 3 ; move ul , ua * 4 )  | ( move ul , 2 / 3 ; move ul , 0 ; move 2 , ua )  | ( pen 4 ; move ul , 2 / 3 ; move 4 - ul , ua )  | ( ( move 4 , 2 / 3 ; v0 = 4 ) ; pen v0 )  | ( v0 = 3 ; ( move 4 , 2 / v0 ; pen v0 ) )  | ( v0 = 3 ; move ul , 2 / v0 ; move v0 , 0 )  
[36] move 4 , 4 * 2  | move 4 , 4 + 4  | move 2 + 2 , 4 + 4  | move 0 - 4 , 4 * 2  | move 0 - 4 , 4 + 4  | move 2 * 2 , 4 + 4  | move 3 + ul , 4 * 2  | move 3 + ul , 4 + 4  | ( move 0 , 4 ; move 4 , 4 )  | ( move 4 , 4 + 4 ; pen 2 )  | ( pen ul ; move 4 , 4 * 2 )  | ( move 0 , 0 ; move 4 , 4 * 2 )  | ( v0 = 0 ; move 4 , 4 * 2 )  | ( move 4 , 4 * 2 ; v0 = 0 )  | ( pen 4 ; move 3 + ul , 4 * 2 )  | ( move 4 , 4 + 4 ; pen ul + ul )  | ( move 2 * 2 , 4 * 2 ; v0 = 0 )  | ( move 4 , 4 * 2 ; pen ua ; pen ul )  | ( v0 = 4 ; move 4 , v0 + v0 )  | ( v0 = 4 ; move v0 , v0 + v0 )  | ( pen 0 ; pen ua / 2 ; move 4 , 4 * 2 )  | ( v0 = 4 ; move 0 , v0 ; move v0 , 4 )  | ( v0 = 2 ; move v0 * v0 , 4 * v0 )  | ( v0 = 3 + ul ; move v0 , v0 + v0 )  | ( move 4 , 4 * 2 ; ( pen 0 - ua ; pen 4 ) )  | ( pen 3 - ul ; move 4 , 4 + 4 ; pen 4 + ul )  | ( v0 = 4 ; move 0 , v0 ; move v0 , v0 )  | ( ( pen ua ; v0 = 4 ) ; move 4 , v0 + 4 )  | ( v0 = 4 ; move v0 , v0 + v0 ; v1 = ul )  | ( ( v0 = 4 ; move 0 , 0 ) ; move v0 , v0 + 4 )  | ( v0 = 4 ; v1 = v0 ; move v1 , v0 + v0 )  | ( pen ul ; ( v0 = 3 + ul ; move v0 , v0 + v0 ) )  
[37] move 4 , 3 / 2  | move 2 + 2 , 3 / 2  | move 0 - 4 , 3 / 2  | move 2 * 2 , 3 / 2  | move 3 + ul , 3 / 2  | ( pen 3 ; move 4 , 3 / 2 )  | ( move 4 , 3 / 2 ; pen 4 )  | ( move 4 , 3 / 2 ; pen ua )  | ( pen ua ; move 4 , 3 / 2 )  | ( move 4 , 3 / 2 ; v0 = 0 )  | ( pen 4 + 2 ; move 4 , 3 / 2 )  | ( move 4 , 3 / 2 ; move 0 , ua )  | ( move 4 , 3 / 2 ; v0 = ul )  | ( pen ua * 3 ; move 4 , 3 / 2 )  | ( move 0 , ul ; move 4 , ul / 2 )  | ( move 0 , ul / 2 ; move 4 , ul )  | ( move ul , 3 / 2 ; move 3 , ua )  | ( v0 = 4 ; move v0 , 3 / 2 )  | ( move 4 , 3 / 2 ; pen 4 ; v0 = 4 )  | ( v0 = ul + ul ; move 4 , 3 / v0 )  | ( move 4 , 3 / 2 ; v0 = ul ; pen ul )  | ( move 3 , 3 / 2 ; move ul , ua ; pen ul )  | ( pen ul ; ( move 4 , 3 / 2 ; v0 = 4 ) )  | ( pen 2 + ul ; move 0 , ul / 2 ; move 4 , ul )  | ( v0 = ua * ua ; pen v0 ; move 4 , 3 / 2 )  | ( v0 = 4 ; move 0 , 4 / ua ; move v0 , v0 )  | ( move ul , 3 / 2 ; move 3 , 0 ; v0 = 3 + ul )  | ( pen ul ; v0 = 2 ; move v0 + v0 , 3 / v0 )  | ( ( v0 = 3 / 2 ; move 4 , v0 ) ; v1 = v0 )  | ( ( v0 = ua + 3 ; pen ua ) ; move 4 , v0 / ua )  | ( ( move 0 , ul ; move 0 , ul / ua ) ; move 4 , ul / 3 )  
[38] move 4 , 4 * 3  | move 2 + 2 , 4 * 3  | move 0 - 4 , 4 * 3  | move 2 * 2 , 4 * 3  | move 3 + ul , 4 * 3  | ( move 4 , 4 * 3 ; pen ul )  | ( move 4 , 4 * 3 ; v0 = 0 )  | ( move 4 , 4 * 3 ; v0 = ua )  | ( move 4 , 4 * 3 ; v0 = ul )  | ( move 4 , 4 * 3 ; pen 4 / ua )  | ( move ul , 4 * 3 ; move 3 , ua )  | ( v0 = 4 ; move 4 , v0 * 3 )  | ( v0 = 4 * 3 ; move 4 , v0 )  | ( pen ul ; pen ul ; move 4 , 4 * 3 )  | ( v0 = 4 ; move v0 , 3 * v0 )  | ( move 2 + 2 , 4 * 3 ; pen 3 - ul )  | ( move 4 , 4 * 3 ; ( pen 0 ; pen 4 ) )  | ( pen 3 ; move 4 , 4 * 3 ; v0 = ul )  | ( v0 = ua / 4 ; move 4 , ul - v0 )  | ( pen ua + 3 ; pen ua ; move 4 , 4 * 3 )  | ( move 4 , 4 * 3 ; pen ul ; pen 4 + ul )  | ( v0 = 3 + ul ; move v0 , v0 * 3 )  | ( move 2 , 4 * 3 ; v0 = 0 ; move 2 , 0 )  | ( pen ul ; move 3 + ul , 4 * 3 ; v0 = ul )  | ( move 3 + ul , 4 * 3 ; pen ul + ul ; pen ua )  | ( move 4 , 4 * 3 ; v0 = ua + ul ; pen v0 )  | ( v0 = 4 * 3 ; move 4 , v0 ; v1 = v0 )  | ( move 4 , 4 * 3 ; v0 = ul - ua ; v1 = 0 )  | ( move 2 + ul , 4 * 3 ; move ul , ua ; v0 = 4 )  | ( pen ua ; move 2 * 2 , 4 * 3 ; v0 = ul - ua )  | ( ( v0 = 4 * 3 ; v1 = v0 ) ; move 4 , v0 )  | ( pen ua * ua ; ( move 4 , 4 * 3 ; pen 3 ; pen ul ) )  
[39] move 4 , 2 / 4  | move 4 , ul / 2  | move 0 - 4 , 2 / 4  | move 2 * 2 , 2 / 4  | move 2 + 2 , ul / 2  | move 0 - 4 , ul / 2  | move 2 * 2 , ul / 2  | move 3 + ul , 2 / 4  | move 3 + ul , ul / 2  | ( move 4 , ul / 2 ; pen 0 )  | ( move 4 , 2 / 4 ; pen ul )  | ( move 4 , 2 / 4 ; v0 = 3 )  | ( move 3 , 2 / 4 ; move ul , 0 )  | ( move 4 , ul / 2 ; v0 = 0 )  | ( pen ua * 2 ; move 4 , 2 / 4 )  | ( move 0 , ul / 2 ; move 4 , ua )  | ( v0 = ua ; move 4 , ul / 2 )  | ( move 4 , ul / 2 ; v0 = ul )  | ( pen ua + ua ; move 4 , ul / 2 )  | ( v0 = ul ; move 4 , v0 / 2 )  | ( move 0 , 0 ; move 0 - 4 , ul / 2 )  | ( move 2 + 2 , 2 / 4 ; move 0 , ua )  | ( v0 = 4 ; move v0 , 2 / v0 )  | ( move 0 , 0 ; pen ul ; move 4 , ul / 2 )  | ( move 4 , 2 / 4 ; pen ua - ul ; pen ua )  | ( v0 = ul ; move v0 + 3 , v0 / 2 )  | ( move 2 * 2 , ul / 2 ; pen 2 ; v0 = 0 )  | ( v0 = 2 ; move v0 * v0 , ul / v0 )  | ( pen 0 ; pen 4 + 3 ; move 3 + ul , ul / 2 )  | ( move 4 , 2 / 4 ; v0 = 3 ; v1 = v0 )  | ( ( pen 2 ; move 2 , 2 / 4 ) ; move 2 , 0 ; pen ul )  | ( move 3 + ul , ul / 2 ; v0 = 3 + 3 ; v1 = v0 )  
[40] move 4 , 4 * 4  | move 4 , 2 / ua  | move 4 , ul / 3  | move 2 + 2 , 4 * 4  | move 0 - 4 , 4 * 4  | move 2 * 2 , 4 * 4  | move 3 + ul , 4 * 4  | move 3 + ul , ul / 3  | ( pen 2 ; move 4 , 4 * 4 )  | ( move 4 , 4 * 4 ; pen ul )  | ( move 4 , 4 * 4 ; move 0 , ua )  | ( pen 2 ; move 3 + ul , 4 * 4 )  | ( move 3 + ul , 4 * 4 ; pen 2 )  | ( move ul , 4 * 4 ; move 3 , ua )  | ( v0 = 4 * 4 ; move 4 , v0 )  | ( v0 = 4 ; move v0 , 4 * v0 )  | ( v0 = 4 ; move v0 , v0 * 4 )  | ( v0 = 4 ; move v0 , v0 * v0 )  | ( pen 2 ; move 4 , 4 * 4 ; move 0 , ua )  | ( v0 = ua - 3 ; move 4 , v0 + v0 )  | ( v0 = 4 ; pen v0 ; move 4 , 4 * v0 )  | ( v0 = 3 + ul ; move v0 , v0 * v0 )  | ( v0 = 4 ; pen ua ; move v0 , v0 * v0 )  | ( v0 = 4 ; pen ul ; move v0 , v0 * v0 )  | ( v0 = 4 ; pen v0 ; move v0 , v0 * v0 )  | ( ( pen ul ; v0 = 4 ) ; move v0 , v0 * 4 )  | ( v0 = 4 ; v1 = v0 ; move v1 , v1 * 4 )  | ( v0 = 4 ; move v0 , v0 * v0 ; v1 = ul )  | ( v0 = 4 ; v1 = v0 ; move v0 , v1 * v0 )  | ( v0 = 4 ; v1 = v0 ; move v1 , v1 * v0 )  | ( v0 = 4 ; v1 = v0 ; move v1 , v1 * v1 )  | ( ( v0 = 4 ; move v0 , v0 * v0 ) ; pen v0 )  
[41] move 4 , 4 / 3  | move 2 + 2 , 4 / 3  | move 0 - 4 , 4 / 3  | move 2 * 2 , 4 / 3  | move 3 + ul , 4 / 3  | ( move 4 , 4 / 3 ; pen 0 )  | ( pen 3 ; move 4 , 4 / 3 )  | ( pen ul ; move 4 , 4 / 3 )  | ( move 4 , 4 / 3 ; move 0 , ul )  | ( move 4 , 4 / 3 ; v0 = ul )  | ( move 4 , 4 / 3 ; pen ua * 2 )  | ( move 0 , ul ; move 4 , 2 / ua )  | ( move 4 , 4 / 3 ; v0 = 3 * 2 )  | ( move 4 , 4 / 3 ; v0 = 2 / ua )  | ( move 0 , ua + ul ; move 4 , ul / 3 )  | ( move 3 + ul , 4 / 3 ; pen ua - ul )  | ( move 4 , 4 / 3 ; ( pen 4 ; pen ul ) )  | ( move 4 , 4 / 3 ; pen 0 ; pen ul + ul )  | ( move 0 , ul ; move 4 , ul / 3 ; pen ul )  | ( pen ua ; ( move 4 , 4 / 3 ; move 0 , 2 ) )  | ( pen ua ; v0 = 4 ; move v0 , v0 / 3 )  | ( v0 = 4 ; move v0 , v0 / 3 ; pen ua )  | ( v0 = 4 ; move v0 , v0 / 3 ; move 0 , ul )  | ( move 4 , 4 / 3 ; v0 = ul ; pen v0 + v0 )  | ( ( move 2 , 4 / 3 ; pen 3 ) ; move ul + ul , ua )  | ( ( v0 = 3 / 2 ; move 4 , 2 / v0 ) ; pen 0 )  | ( ( v0 = ul / 3 ; pen 2 ) ; move 4 , ul + v0 )  | ( v0 = 2 + ul ; move v0 , 4 / v0 ; move ul , 0 )  | ( v0 = 2 / ua ; v1 = ul ; move 4 , v1 + v0 )  | ( ( pen ul ; pen ua ) ; move 4 , 4 / 3 ; pen ul + ul )  | ( ( v0 = 4 ; move v0 , v0 / 3 ) ; v1 = v0 )  | ( v0 = 4 - ul ; move v0 + ul , 4 / v0 ; pen v0 )  
[42] move ua , 0 - 2  | move ua , 2 - 4  | move ua , ua - 2  | move ua , ul - 3  | move 0 - ua , 0 - 2  | move 0 - ua , ua - 2  | move 0 - ua , ul - 3  | move ua + ul , ua - 2  | ( move ua , 0 - 2 ; pen 0 )  | ( move ua , 2 - 4 ; pen 4 )  | ( pen 2 ; move ua , ul - 3 )  | ( move ua , 2 - 4 ; pen ua )  | ( move ua , ua - 2 ; pen ul )  | ( move ua , ul - 3 ; pen ua )  | ( pen ul ; move ua , ul - 3 )  | ( v0 = 4 ; move ua , 2 - 4 )  | ( pen 4 - ul ; move ua , ul - 3 )  | ( pen ua + ul ; move ua , ua - 2 )  | ( v0 = ul - 3 ; move ua , v0 )  | ( v0 = ua ; move v0 , v0 - 2 )  | ( move ua , 0 - 2 ; v0 = ua + ua )  | ( move ua , ul - 3 ; move 0 , 2 - ua )  | ( move ua , ua - 2 ; v0 = ua - 4 )  | ( v0 = 4 + ul ; move ua , 3 - v0 )  | ( pen 2 ; move 0 , ul ; move ua , ul - 4 )  | ( v0 = 2 ; move ua , ua - v0 ; pen ul )  | ( v0 = 2 ; pen v0 ; move ua , ua - v0 )  | ( move ua , ul - 3 ; pen ua + ul ; v0 = ul )  | ( move ua , ua - 2 ; move 0 , ua + 2 ; v0 = 3 )  | ( move 0 , 2 - 4 ; move ua , 0 - ua ; pen ul / 4 )  | ( move ua , ua - 2 ; move 0 , ua / 4 ; pen 4 - ul )  | ( move ua , ua - 2 ; ( move 0 , ua ; pen ul + ul ) )  
[43] move ua , 0 - 3  | move ua , ua - 3  | move ua , ul - 4  | move ua , ul / ua  | move 0 - ua , ua - 3  | move 0 - ua , ul - 4  | move 0 - ua , ul / ua  | ( move ua , ul - 4 ; pen 4 )  | ( move ua , ul - 4 ; pen ua )  | ( pen ul ; move ua , ul - 4 )  | ( v0 = 0 ; move ua , ul - 4 )  | ( move ua , ul - 4 ; v0 = 0 )  | ( move ua , ua - 3 ; v0 = 2 )  | ( move ua , ul - 4 ; v0 = ua )  | ( move ua , ul - 4 ; v0 = ul )  | ( move ua , ul - 4 ; pen 4 - ua )  | ( v0 = ul - 4 ; move ua , v0 )  | ( pen 3 ; move ua , ua - 3 ; pen ul )  | ( v0 = ua ; move v0 , v0 - 3 )  | ( move ul , ua - 3 ; move ua - ul , ua )  | ( move 0 , ul ; move ua , 0 - 4 ; pen 4 )  | ( pen 3 ; move ua , ul - 4 ; pen ua - 3 )  | ( move ua , 0 - 3 ; v0 = ul ; v1 = 4 )  | ( move 0 , ua ; move 0 , ul ; move ua , ua - 4 )  | ( move 0 , ua ; v0 = ua - 3 ; move ua , v0 )  | ( v0 = ul - 4 ; move ua , v0 ; pen ua * ua )  | ( move ua , ua - 3 ; ( v0 = ua ; v1 = 0 ) )  | ( ( pen ua ; move ua , ua - 3 ) ; v0 = ua / 4 )  | ( v0 = ua ; move v0 , v0 - 3 ; v1 = v0 )  | ( v0 = 4 - ua ; move ua , ul - v0 ; v1 = v0 )  | ( v0 = 2 / 3 ; ( v1 = v0 ; move ua , ul - 4 ) )  | ( ( pen 3 ; pen ul ; move ua , 0 - 3 ) ; move 0 , ul / 4 )  
[44] move ua , 0 - 4  | move ua , ua - 4  | move 3 + 3 , 0 - 4  | move 3 * 2 , 0 - 4  | move 0 - ua , 0 - 4  | move 4 + 2 , ua - 4  | move 3 + 3 , ua - 4  | move 3 * 2 , ua - 4  | move 0 - ua , ua - 4  | ( pen 3 ; move ua , 0 - 4 )  | ( move ua , ua - 4 ; pen 2 )  | ( pen 3 ; move ua , ua - 4 )  | ( pen ul ; move ua , ua - 4 )  | ( move ua , 0 - 4 ; v0 = 2 )  | ( move 0 , 0 ; move ua , ua - 4 )  | ( move ua , ua - 4 ; move 0 , 4 )  | ( move ua , 0 - 4 ; v0 = ua )  | ( move 0 , ua ; move ua , ua - 4 )  | ( move ua , ua - 4 ; move 0 , ul )  | ( move ua , ua - 4 ; v0 = ul )  | ( v0 = ua ; move v0 , 0 - 4 )  | ( v0 = 4 ; move ua , ua - v0 )  | ( v0 = ua ; move ua , v0 - 4 )  | ( v0 = ua - 4 ; move ua , v0 )  | ( v0 = ua ; move v0 , v0 - 4 )  | ( move ua , ua - 4 ; v0 = ul / 3 )  | ( move ua - ul , ua - 4 ; move ul , 0 )  | ( pen ua - 4 ; move ua , ua - 4 ; pen 2 )  | ( pen ul ; ( pen 2 ; move ua , ua - 4 ) )  | ( pen ua - 4 ; move ua , ua - 4 ; pen ua / 4 )  | ( move ua , 0 - 4 ; v0 = 0 ; move v0 , v0 )  
[45] move ua , 3 + 2  | move ua , 4 + ul  | move 3 + 3 , 4 + ul  | move 4 + 2 , 4 + ul  | move 3 * 2 , 4 + ul  | move 0 - ua , 4 + ul  | ( move 0 , ul ; move ua , 4 )  | ( move 0 , 4 ; move ua , ul )  | ( move ua , 3 + 2 ; pen ul )  | ( pen 4 ; move 4 + 2 , 4 + ul )  | ( move 0 , 4 + ul ; move ua , 0 )  | ( move 0 , 2 * 2 ; move ua , ul )  | ( move ua , 3 + 2 ; v0 = ua )  | ( move ua , 4 + ul ; pen 0 - 3 )  | ( move 0 - ua , 4 + ul ; pen 3 )  | ( move ua , 4 + ul ; move 0 , ul )  | ( pen ua + ul ; move ua , 3 + 2 )  | ( move 0 , 3 - ua ; move ua , 3 - ul )  | ( move ua , 4 + ul ; v0 = ua - 3 )  | ( move 0 , ua + ul ; move ua , 3 + ul )  | ( move ua , 4 + ul ; move 0 , ua + ul )  | ( move 0 , ul ; move ua , 4 ; v0 = 0 )  | ( pen 3 + ul ; move 0 , ul ; move ua , 4 )  | ( pen ul ; move ua , 4 + ul ; move 0 , ul )  | ( move ua , 4 + ul ; pen ua ; pen 3 - ul )  | ( v0 = 4 ; move 0 , ul ; move ua , v0 )  | ( v0 = ul ; move ua , v0 + 4 ; pen v0 )  | ( move 0 , ul ; ( move 0 , ua ; move ua , 3 + ul ) )  | ( v0 = 3 * 2 ; move ua , 4 + ul ; v1 = v0 )  | ( v0 = ua ; ( move v0 , 4 + ul ; v1 = ul ) )  | ( pen 4 ; move 0 , ul ; ( v0 = ua ; move ua , 4 ) )  
[46] move ua , 2 - 3  | move ua , 3 - 4  | move ua , 0 - ul  | move ua , ul - 2  | move ua , ua - ul  | move 0 - ua , 0 - ul  | move 0 - ua , ua - ul  | ( pen 2 ; move ua , 0 - ul )  | ( pen ul ; move ua , 3 - 4 )  | ( move ua , ul - 2 ; pen ul )  | ( pen 3 ; move ua , ua - ul )  | ( move ua , ua - ul ; pen 4 )  | ( move 0 , 3 ; move ua , 0 - 4 )  | ( pen 4 + 3 ; move ua , 3 - 4 )  | ( move ua , 0 - ul ; move 0 , 3 )  | ( move ua , 0 - ul ; pen 3 + ul )  | ( move ua , 0 - ul ; pen ua / 3 )  | ( move ua , ul - 2 ; pen ua * 3 )  | ( move ua , ua - ul ; v0 = ua )  | ( v0 = 2 ; move ua , v0 - 3 )  | ( pen ul / ua ; move ua , ua - ul )  | ( v0 = ua - ul ; move ua , v0 )  | ( pen ul ; move ua , ul - 2 ; pen 2 )  | ( pen 4 ; move ua , ua - ul ; pen ul )  | ( v0 = ua ; move v0 , v0 - ul )  | ( pen ua ; move ua , ua - ul ; pen ul )  | ( move 0 , ua + ua ; move ua , 0 - ul )  | ( move 0 , ul - 3 ; move ua , ul - ua )  | ( move ua , ua - ul ; v0 = ua + 4 )  | ( ( pen 3 ; pen ul ) ; move ua , ul - 2 )  | ( move ua , ul - 2 ; pen ul ; v0 = ua )  | ( v0 = ua ; pen v0 + ua ; move v0 , ul - 2 )  
[47] move 3 + 2 , ul  | move 4 + ul , ul  | move 3 + 2 , 2 - ul  | move 3 + 2 , ua + ul  | move 4 + ul , 2 - ul  | move 4 + ul , ua + ul  | move 4 + ul , ul - ua  | ( move ul , ul ; move 4 , 0 )  | ( move 4 , ul ; move ul , 0 )  | ( move 4 + ul , ul ; pen 2 )  | ( move ul , ul ; move 4 , ua )  | ( pen ul ; move 4 + ul , ul )  | ( move ul , 2 - ul ; move 4 , 0 )  | ( move 3 + 2 , ul ; v0 = ua )  | ( move 4 + ul , ul ; v0 = 3 )  | ( move 3 , ul ; move 2 , ua + ua )  | ( move 4 + ul , ul ; pen ua + 2 )  | ( move ul , ul ; move 3 + ul , ua * 3 )  | ( move 3 + ul , ua + ul ; move ul , ua )  | ( move ul , ul - ua ; pen 2 ; move 4 , 0 )  | ( pen ua ; ( pen 3 ; move 4 + ul , ul ) )  | ( move 4 , ul ; pen ua * 3 ; move ul , ua )  | ( move 3 , ul ; ( v0 = ul ; move 2 , ua ) )  | ( move 4 + ul , ul ; v0 = ua / 4 ; pen ul )  | ( move ul , ua + ul ; pen ul ; move 4 , ua * 2 )  | ( move 4 + ul , ua + ul ; v0 = ua ; pen v0 )  | ( move 4 , ul ; ( move ul , ua ; pen ua ; pen 0 ) )  | ( move 4 - ul , 2 - ul ; move 2 , ua ; v0 = 4 )  | ( ( move ul , ul ; v0 = 0 - ul ) ; move 4 , ua )  | ( move ul , 2 - ul ; ( move 3 , ua + ua ; move ul , ua ) )  | ( move 3 + 2 , ul ; pen ua ; ( move 0 , ul ; pen ua * 4 ) )  
[48] move ua , 3 + 3  | move ua , 4 + 2  | move ua , 3 * 2  | move 3 + 3 , 3 + 3  | move 3 + 3 , 4 + 2  | move 4 + 2 , 3 + 3  | move 3 * 2 , 4 + 2  | move 3 * 2 , 3 * 2  | move 0 - ua , 3 + 3  | move 0 - ua , 3 * 2  | ( move 0 , 4 ; move ua , 2 )  | ( move ua , 4 + 2 ; pen 2 )  | ( pen ua ; move ua , 3 * 2 )  | ( move 0 , 0 ; move ua , 3 * 2 )  | ( move ua , 4 + 2 ; v0 = 0 )  | ( move 0 , 4 ; move ua , ua + 2 )  | ( move ua , 3 + 3 ; v0 = ua )  | ( move 0 - ua , 3 * 2 ; pen ul )  | ( pen 2 + ul ; move ua , 4 + 2 )  | ( move 0 , ul + ul ; move ua , 4 )  | ( v0 = ua ; move v0 , 3 * 2 )  | ( pen ua ; pen 4 ; move ua , 4 + 2 )  | ( v0 = 4 + 2 ; move v0 , v0 )  | ( v0 = ul + ul ; move ua , 3 * 2 )  | ( pen ua ; move 0 , ul ; move ua , 3 + 2 )  | ( pen ua ; v0 = 4 + 2 ; move v0 , v0 )  | ( move ua , 3 * 2 ; v0 = 0 ; v1 = v0 )  | ( move ul , 3 - ua ; v0 = 3 ; move ua , v0 )  | ( move ua , 3 * 2 ; v0 = 0 ; move v0 , v0 )  | ( v0 = 3 + 3 ; v1 = v0 ; move v0 , v0 )  | ( move 0 - ua , 4 + 2 ; move 0 , 3 - ul ; v0 = ua )  | ( move 3 * 2 , 3 + 3 ; v0 = ua * 4 ; v1 = v0 )  
[49] move 2 - ua , 4  | move ua - 2 , 4  | move 2 - ua , 2 * 2  | move ua - 2 , ua + 4  | move 2 - ua , 3 + ul  | move 2 - ua , ua + 4  | move ua - 2 , 3 + ul  | move 2 - ua , 4 - ua  | move ua - 2 , 4 - ua  | ( pen 4 ; move ua - 2 , 4 )  | ( pen ua ; move 2 - ua , 4 )  | ( move ua - 2 , 4 ; pen ul )  | ( move 3 , 4 ; move 4 / 3 , 0 )  | ( move 4 / 3 , 4 ; move 3 , 0 )  | ( move ua - 2 , 4 ; pen 2 + 2 )  | ( move 0 , 4 ; move 2 - ua , ua )  | ( move ul , 4 ; move ua / 2 , 0 )  | ( move 2 - ua , 4 ; v0 = ua )  | ( move ua - 2 , 4 ; v0 = ua )  | ( move ua - 2 , 4 ; v0 = ul )  | ( move ul / 3 , 4 ; move 4 , ua )  | ( move ua - 2 , 2 + 2 ; pen ul )  | ( pen ua + 4 ; move ua - 2 , 4 )  | ( move ul , 4 ; move ua / 2 , ua )  | ( pen ua + ul ; move ua - 2 , 4 )  | ( move ua - 2 , 3 + ul ; v0 = 4 )  | ( move 2 - ua , 4 ; pen 0 ; move 0 , ul )  | ( move 4 , 4 ; move 2 / ua , ua ; pen ua - 3 )  | ( move 2 - ua , 4 ; v0 = 2 ; v1 = v0 )  | ( move ul / 2 , 4 ; move 4 , ua ; move ul / 4 , 2 )  | ( move ua - 2 , 3 + ul ; v0 = ul ; v1 = 2 - 4 )  | ( v0 = ua ; move 2 / v0 , v0 ; move v0 - 2 , 4 )  
[50] move ua , 4 + 3  | move 4 + 2 , 4 + 3  | move 3 * 2 , 4 + 3  | move 0 - ua , 4 + 3  | ( move 0 , 3 ; move ua , 4 )  | ( move ua , 4 + 3 ; pen 3 )  | ( move ua , 4 + 3 ; pen ua )  | ( move ua , 4 + 3 ; move 0 , 0 )  | ( move 0 , 0 ; move ua , 4 + 3 )  | ( v0 = 4 ; move ua , 4 + 3 )  | ( move ua , 4 + 3 ; move 0 , ua )  | ( move 0 , 4 ; move ua , ua + 3 )  | ( move ua , 4 + 3 ; v0 = ua )  | ( move ul / 2 , 4 ; move ua , 3 )  | ( move ua , 4 + 3 ; v0 = ul )  | ( move ua , 4 + 3 ; pen 3 + ul )  | ( move 0 , 3 + 2 ; move 3 * 2 , 2 )  | ( move 0 , 4 ; move ua , 3 ; v0 = 0 )  | ( move 0 , 3 ; move ua , 4 ; pen 4 + 2 )  | ( move 0 , 4 + 3 ; pen 4 ; move ua , ua )  | ( move ua , 4 + 3 ; pen 0 ; v0 = ua )  | ( pen ul ; pen 3 / 2 ; move ua , 4 + 3 )  | ( move ua , 4 + 3 ; v0 = ul ; pen ul )  | ( move 0 , 3 ; ( pen 3 ; move ua , 2 + 2 ) )  | ( move 2 , 4 + 3 ; move ul , ua ; move 3 , ua )  | ( move 0 , 3 ; move ua , ua + 4 ; v0 = ul )  | ( move ul , 4 + 3 ; move 4 + ul , ua ; pen 0 )  | ( pen ua ; move ua , 4 + 3 ; v0 = 3 - ul )  | ( move ua , 4 + 3 ; v0 = ua ; move 0 , v0 )  | ( v0 = 3 + 3 ; move v0 , v0 + ul ; pen ul )  | ( pen ul ; v0 = 4 + 3 ; move ul - v0 , v0 )  | ( ( pen 3 / ua ; move ua , 4 + 3 ) ; move 0 , ul ; pen ul )  
[51] move 4 + 3 , ul  | move ua + ul , ul  | move 4 + 3 , 2 - ul  | move 4 + 3 , ua + ul  | move 4 + 3 , ul - ua  | move ua + ul , ua + ul  | ( move 4 , ul ; move 3 , 0 )  | ( move 3 , ul ; move 4 , ua )  | ( move 4 + 3 , ul ; pen ua )  | ( move ul , ul ; move 3 + 3 , 0 )  | ( move 4 , ul ; move 3 , ua + ua )  | ( move ul , ul ; move 3 * 2 , ua )  | ( move 4 , ul ; move ua / 2 , ua )  | ( move ul / 2 , ul ; move ua , ua )  | ( move 3 / ua , ul ; move ua , ua )  | ( move 4 / ua , ul ; move ua , ua )  | ( v0 = 4 + 3 ; move v0 , ul )  | ( move 4 , ul ; move 3 , 0 ; pen 0 )  | ( move ul , ul - ua ; move 3 + 3 , 0 )  | ( pen 2 ; move 4 + 3 , ul ; v0 = 2 )  | ( move 4 + 3 , ul ; v0 = 3 ; pen ul )  | ( move 4 , ul ; move 3 , ua ; pen ua + 3 )  | ( move 4 , ul ; move 4 - ul , ua ; pen 3 )  | ( move 3 + 2 , ul ; move 2 , ua ; v0 = ua )  | ( move 3 + ul , ul ; move 2 , ua ; move ul , 0 )  | ( move ul , ul ; move 3 * 2 , ua ; v0 = ua )  | ( move 4 + 3 , ul ; v0 = ua + ul ; v1 = 3 )  | ( move 4 + 3 , ul ; ( v0 = ul ; v1 = ua ) )  | ( move 3 , ul ; move 4 - ul , 0 - ua ; move ul , ua )  | ( pen ua * 4 ; move 4 - ul , ul ; move 4 , ua + ua )  | ( move ul , ul ; ( move 4 , ua ; move ul + ul , ua ) )  
[52] move ua , 4 * 2  | move ua , 4 + 4  | move 0 - ua , 4 * 2  | ( move ua , 4 * 2 ; pen 3 )  | ( pen ul ; move ua , 4 * 2 )  | ( move ua , 4 + 4 ; pen ul )  | ( move 0 , 3 ; move ua , 3 + 2 )  | ( move 0 , 4 ; move 0 - ua , 4 )  | ( move ua , 4 + 4 ; pen 3 * 2 )  | ( move ua , 4 + 4 ; move 0 , ua )  | ( pen ua - 3 ; move ua , 4 + 4 )  | ( move ua , 4 * 2 ; move v0 , 0 )  | ( v0 = 2 ; move ua , 4 * v0 )  | ( v0 = 2 ; move ua , v0 * 4 )  | ( move ua , 4 * 2 ; pen ul ; pen ua )  | ( move 0 , 2 + ul ; move ua , 3 + 2 )  | ( v0 = 4 ; move ua , v0 + v0 )  | ( move 0 - ua , 4 * 2 ; pen 2 - ua )  | ( move ua , 4 * 2 ; v0 = ua + ul )  | ( move ua , 4 + 4 ; v0 = ul + ul )  | ( move ua , 4 * 2 ; pen 3 ; v0 = ul )  | ( move 0 , 4 + 3 ; move ua , ul ; pen ul )  | ( pen ul ; move ua , 4 * 2 ; v0 = ua )  | ( move 0 , 3 * 2 ; v0 = ua ; move ua , 2 )  | ( move 0 , 3 ; ( move ua , 3 + 2 ; pen ua ) )  | ( ( pen 3 ; move ua , 4 * 2 ) ; move 0 , ua )  | ( move 0 , 4 - ua ; pen ua * 2 ; move ua , 4 )  | ( move ua , 4 * 2 ; pen 4 ; v0 = ua + ul )  | ( move ua , 4 * 2 ; v0 = 3 ; v1 = v0 )  | ( v0 = ua ; move 0 , 3 ; move v0 , 4 + ul )  | ( v0 = 2 ; v1 = v0 * 4 ; move ua , v1 )  | ( pen ua * 3 ; move ul , 4 * 2 ; move ua - ul , ua )  
[53] move ua , 3 * 3  | move 0 - ua , 3 * 3  | ( move ua , 3 * 3 ; pen 0 )  | ( pen 2 ; move ua , 3 * 3 )  | ( pen 3 ; move ua , 3 * 3 )  | ( pen 4 ; move ua , 3 * 3 )  | ( move ua , 3 * 3 ; pen ua )  | ( pen ul ; move ua , 3 * 3 )  | ( move ua , 3 * 3 ; pen 2 / 3 )  | ( move 0 , ul ; move ua , 4 * 2 )  | ( v0 = ua ; move ua , 3 * 3 )  | ( move ua , 3 * 3 ; v0 = ul )  | ( pen 3 + ul ; move ua , 3 * 3 )  | ( v0 = 3 * 3 ; move ua , v0 )  | ( pen ul ; move ua , 3 * 3 ; pen 2 )  | ( v0 = 3 ; move ua , v0 * v0 )  | ( move ua , 3 * 3 ; move 2 / ua , 3 )  | ( move ua , 3 * 3 ; v0 = 3 + ul )  | ( move ua , 3 * 3 ; v0 = ul / 4 )  | ( move 0 , 3 * 3 ; move ua , ua + ua )  | ( move ua , 3 * 3 ; move ul / ua , ua )  | ( v0 = 0 ; move ua , 3 * 3 ; pen v0 )  | ( v0 = 4 - ul ; move ua , v0 * v0 )  | ( ( move 0 , 4 + 4 ; move ua , ul ) ; pen ul )  | ( move 0 , 3 + ul ; move ua , 3 + 2 ; move 0 , 2 )  | ( v0 = 3 ; move ua , v0 * v0 ; v1 = v0 )  | ( ( v0 = ul ; move ua , 3 * 3 ) ; pen 4 - v0 )  | ( v0 = 4 - ua ; move 0 , 4 + v0 ; move ua , ul )  | ( pen 3 / ua ; v0 = 4 + ul ; move ua , v0 + 4 )  | ( v0 = 4 * 2 ; move ua , v0 + ul ; move 0 , v0 )  | ( ( move 0 , ul ; pen 0 ) ; ( pen 4 ; move ua , 4 * 2 ) )  | ( ( move ua , 3 * 3 ; pen ua ; pen ua ) ; v0 = 3 / 4 )  
[54] move ua , 2 / 3  | move 0 - ua , 2 / 3  | ( move ua , 2 / 3 ; pen 0 )  | ( move ua , 2 / 3 ; pen 4 )  | ( pen ua ; move ua , 2 / 3 )  | ( move ua , 2 / 3 ; pen ua )  | ( pen ul ; move ua , 2 / 3 )  | ( move ua , 2 / 3 ; move 0 , ua )  | ( move ua , 2 / 3 ; v0 = ua )  | ( move ua , 2 / 3 ; v0 = ul )  | ( v0 = 2 ; move ua , v0 / 3 )  | ( v0 = 2 / 3 ; move ua , v0 )  | ( pen ul ; move ua , 2 / 3 ; pen ul )  | ( move ua , 2 / 3 ; v0 = 3 - ua )  | ( move ua , 2 / 3 ; move 0 , ul / ua )  | ( move ua , 2 / 3 ; pen 4 ; move 0 , ul )  | ( move ua , 2 / 3 ; move 0 , ua ; pen ul )  | ( pen 0 ; pen ua + ul ; move ua , 2 / 3 )  | ( pen ua ; ( pen ul ; move ua , 2 / 3 ) )  | ( pen ul ; ( move ua , 2 / 3 ; pen ul ) )  | ( move 2 + ul , 2 / 3 ; move ua - 3 , 0 )  | ( move ua , 2 / 3 ; move 0 , ul ; v0 = 0 )  | ( move ua , 2 / 3 ; pen 0 ; v0 = 3 + ul )  | ( move 0 , 2 / 3 ; move ua , ua ; move 0 , ul )  | ( move ua , 2 / 3 ; v0 = ul ; v1 = ua )  | ( v0 = 3 ; v1 = 0 ; move ua , 2 / v0 )  | ( v0 = 0 ; move v0 , 2 / 3 ; move ua , v0 )  | ( v0 = 2 / 3 ; move ua , v0 ; pen 4 * v0 )  | ( move ua , 2 / 3 ; ( pen ul ; move 0 , 2 / ua ) )  | ( pen ul ; ( move ua , 2 / 3 ; move 0 , 2 / ua ) )  | ( ( move ua , 2 / 3 ; v0 = 3 - ua ) ; pen ua )  | ( move ua , 2 / 3 ; ( v0 = ua ; move v0 - ua , ua ) )  
[55] move ua + 4 , 4  | move ua + 4 , 2 + 2  | move ua + 4 , 2 * 2  | move ua + 4 , ua + 4  | move ua + 4 , 3 + ul  | move ua + 4 , 4 - ua  | ( move 4 , 4 ; move ua , 0 )  | ( move ua + 4 , 4 ; pen 2 )  | ( move ua , 4 ; move 4 , ua )  | ( move ua + 4 , 4 ; pen ul )  | ( move ua + 4 , 4 ; v0 = 3 )  | ( move 0 , ul ; move ua + 4 , 3 )  | ( move ua + 4 , 4 ; v0 = ua )  | ( move ul , 4 ; move ua + 3 , ua )  | ( move 4 , 3 + ul ; move ua , ua )  | ( move ua + 4 , 4 ; pen ua + ul )  | ( v0 = 4 ; move v0 + ua , 4 )  | ( move 4 , 4 ; move ua , 0 ; pen ua )  | ( v0 = ua + 4 ; move v0 , v0 )  | ( v0 = 4 ; move ua + v0 , v0 )  | ( move ua + 4 , 4 ; pen 3 + 2 ; pen 4 )  | ( move 0 , 3 ; pen 4 ; move ua + 4 , ul )  | ( v0 = 3 + ul ; move v0 + ua , v0 )  | ( v0 = ua + 4 ; pen ul ; move v0 , 4 )  | ( v0 = ua + 4 ; move v0 , v0 ; pen 4 )  | ( ( move 3 * 3 , 4 ; move ul , 0 ) ; pen ul )  | ( move 0 , 4 ; move 3 , ua ; move ua + ul , ua )  | ( v0 = ua + 4 ; move v0 , v0 ; pen v0 )  | ( v0 = 4 ; pen v0 ; move ua + v0 , v0 )  | ( v0 = ua + 4 ; move v0 , v0 ; move 0 , 2 )  | ( move ua + ul , ua + 4 ; move 4 - ul , 0 ; v0 = ua )  | ( move 0 , ul ; ( move ua + 4 , 3 ; v0 = ua ) ; pen 3 )  
[56] move ua , 3 / 2  | move 0 - ua , 3 / 2  | ( move ua , 3 / 2 ; pen 0 )  | ( move ua , 3 / 2 ; pen 2 )  | ( pen 2 ; move ua , 3 / 2 )  | ( pen 3 ; move ua , 3 / 2 )  | ( move ua , 3 / 2 ; pen ua )  | ( move ua , 3 / 2 ; pen ul )  | ( pen ul ; move ua , 3 / 2 )  | ( move ua , 3 / 2 ; move 0 , ua )  | ( move ua , 3 / 2 ; v0 = ua )  | ( move ua , 3 / 2 ; v0 = ul )  | ( move ua , 3 / 2 ; pen 3 + ul )  | ( pen ua + ua ; move ua , 3 / 2 )  | ( pen ua + ul ; move ua , 3 / 2 )  | ( move ua , 3 / 2 ; pen ul + ul )  | ( v0 = 3 / 2 ; move ua , v0 )  | ( v0 = ua ; move v0 , 3 / 2 )  | ( move ua , 3 / 2 ; pen ua ; pen ul )  | ( move ua , 3 / 2 ; v0 = 4 + ul )  | ( move 0 , ul / 2 ; move ua , ua + ul )  | ( move 0 , ul / 2 ; move ua , ul - ua )  | ( v0 = ul + ul ; move ua , 3 / v0 )  | ( move ua , 3 / 2 ; v0 = 0 ; move 0 , 0 )  | ( ( move ua , 3 / 2 ; pen ul ) ; pen 2 - ua )  | ( move ua , 3 / 2 ; ( pen ua / 4 ; pen ul ) )  | ( move ua , 3 / 2 ; move 0 , ua * 2 ; v0 = 0 )  | ( move 0 , ul / 2 ; move ua , ul ; move 0 , ul + ul )  | ( move ua , 3 / 2 ; move ul / ua , ua ; v0 = ua )  | ( move ua , 3 / 2 ; v0 = ua ; move v0 - ua , ul )  | ( ( v0 = ua ; v1 = 3 / 2 ) ; move v0 , v1 )  | ( pen ul ; ( ( pen ua ; pen ul ) ; move ua , 3 / 2 ) )  
[57] move ua , 4 * 3  | move 0 - ua , 4 * 3  | ( move ua , 4 * 3 ; pen ua )  | ( pen ua ; move ua , 4 * 3 )  | ( pen ul ; move ua , 4 * 3 )  | ( move ua , 4 * 3 ; pen ul )  | ( move ua , 4 * 3 ; v0 = 0 )  | ( move ua , 4 * 3 ; v0 = 2 )  | ( move ua , 4 * 3 ; v0 = 4 )  | ( move ua , 4 * 3 ; v0 = ua )  | ( v0 = ul ; move ua , 4 * 3 )  | ( move ua , 4 * 3 ; v0 = ul )  | ( move 0 , ul ; move ua , ua / 4 )  | ( move ua , 4 * 3 ; pen ua + ul )  | ( move ua , 4 * 3 ; pen ul / ua )  | ( v0 = 4 * 3 ; move ua , v0 )  | ( move ua , 4 * 3 ; pen ul ; pen 0 )  | ( move 0 , 0 ; move 0 - ua , 4 * 3 )  | ( move ua , 4 * 3 ; v0 = 3 * 2 )  | ( move 0 , ua * 3 ; move ua , 4 * 3 )  | ( move ua , 4 * 3 ; move ul / 4 , 3 )  | ( v0 = ua + 4 ; move ua , v0 * 3 )  | ( pen ua ; move ua , 4 * 3 ; v0 = ul )  | ( move 0 , 4 * 3 ; pen 4 ; move 4 + 2 , ua )  | ( move ua , 4 * 3 ; v0 = 0 ; pen 3 / ua )  | ( ( pen ul ; move ua , 4 * 3 ) ; v0 = ul )  | ( move ua , 4 * 3 ; v0 = ul ; v1 = v0 )  | ( move ua , 4 * 3 ; v0 = ul ; pen ua * v0 )  | ( v0 = 3 ; move 0 , v0 * v0 ; move ua , 3 )  | ( v0 = ua / 4 ; move ua , ul + v0 ; pen v0 )  | ( move ua , 4 * 3 ; move 0 , 2 / ua ; pen ua + ua )  | ( pen ua - ul ; ( move ua , 4 * 3 ; pen ua ; pen ul ) )  
[58] move 4 + 4 , ul  | move 4 * 2 , ul  | move ua + 2 , ul  | move ua + 3 , ul  | move ua + 4 , ul  | move 4 * 2 , 4 - 3  | move 4 + 4 , 4 - 3  | move 4 * 2 , 2 - ul  | move 4 + 4 , 2 - ul  | move 4 * 2 , ua + ul  | move 4 + 4 , ua + ul  | move 4 * 2 , ul - ua  | move 4 + 4 , ul - ua  | move 3 * 3 , ul - ua  | move ua + 2 , ul - ua  | ( move 4 , ul ; move 4 , 0 )  | ( move 4 * 2 , ul ; pen 3 )  | ( pen ul ; move 4 * 2 , ul )  | ( move 4 * 2 , ul ; v0 = ul )  | ( move 4 * 2 , ul ; pen ul - 2 )  | ( move 4 + 3 , ul ; move ul , ua )  | ( v0 = 4 ; move v0 + v0 , ul )  | ( move 4 + 4 , ul ; v0 = 4 + ul )  | ( move 0 , ul ; pen 2 ; move 4 * 2 , 0 )  | ( move 4 , ul ; move 4 , ua ; v0 = 2 )  | ( move 4 * 2 , ua + ul ; move 0 , ua / 3 )  | ( move 4 , ul ; ( v0 = 4 ; move v0 , 0 ) )  | ( move 4 * 2 , ul ; v0 = 4 / 3 ; v1 = v0 )  | ( move ul , ul ; move 4 + 3 , ua ; v0 = ul / ua )  | ( move 0 , ua + ul ; move 4 + 4 , 0 ; v0 = 0 - ua )  
[59] move ua , 2 / 4  | move ua , ul / 2  | move ua , 3 / ua  | move 3 + 3 , 2 / 4  | move 3 * 2 , 2 / 4  | move 3 + 3 , ul / 2  | move 3 * 2 , ul / 2  | move 0 - ua , ul / 2  | ( pen ua ; move ua , 2 / 4 )  | ( pen 4 ; move ua , ul / 2 )  | ( pen ua ; move ua , ul / 2 )  | ( move ua , ul / 2 ; pen ul )  | ( move ua , 2 / 4 ; v0 = 0 )  | ( pen 3 + 2 ; move ua , 2 / 4 )  | ( pen ua ; move 3 * 2 , 2 / 4 )  | ( move ua , ul / 2 ; v0 = 0 )  | ( pen ua * 2 ; move ua , 2 / 4 )  | ( pen 4 + ul ; move ua , ul / 2 )  | ( move ua , ul / 2 ; pen ul - 4 )  | ( move ua , ul / 2 ; pen ul / 3 )  | ( v0 = ua ; move v0 , 2 / 4 )  | ( move ua , 2 / 4 ; pen ua ; pen ua )  | ( pen 3 ; pen ul ; move ua , ul / 2 )  | ( pen ul ; move ua , ul / 2 ; pen 4 )  | ( move ua , 2 / 4 ; v0 = ua - 3 )  | ( move ua , 3 / ua ; pen ul + ul ; pen ua )  | ( ( pen ul ; move 0 , 0 ) ; move ua , 2 / 4 )  | ( v0 = ua ; pen v0 ; move v0 , ul / 2 )  | ( v0 = ua + ua ; move ua , ua / v0 ; pen ul )  | ( move 0 , 0 ; v0 = ua - ul ; move ua , ul / 2 )  | ( ( pen ua ; move 0 - ua , ul / 2 ) ; move 0 , ul )  
[60] move 4 , 2 / ua  | move 4 , ul / 3  | move 2 + 2 , 2 / ua  | move 0 - 4 , 2 / ua  | move 2 * 2 , 2 / ua  | move 3 + ul , 2 / ua  | move 2 - ua , ul / 3  | ( move 4 , 2 / ua ; pen 0 )  | ( pen 2 ; move 4 , 2 / ua )  | ( pen 4 ; move 4 , 2 / ua )  | ( move 4 , 2 / ua ; pen ua )  | ( pen ua ; move 4 , 2 / ua )  | ( move 4 , 2 / ua ; v0 = 0 )  | ( pen 3 + 2 ; move 4 , 2 / ua )  | ( move 4 , 2 / ua ; move 0 , ul )  | ( move 4 , 2 / ua ; v0 = ul )  | ( v0 = ul ; move 4 , 2 / ua )  | ( move 4 , 2 / ua ; pen ua + ul )  | ( pen ua + ul ; move 4 , 2 / ua )  | ( v0 = 2 / ua ; move 4 , v0 )  | ( move 4 , 2 / ua ; move 0 , 2 + ul )  | ( v0 = 2 / ua ; move 4 , v0 - ua )  | ( move 4 , 2 / ua ; pen ul ; pen 3 + ul )  | ( move 0 , 2 / ua ; move 4 , 0 ; v0 = 0 )  | ( v0 = 2 / ua ; pen v0 ; move 4 , v0 )  | ( move 4 , 2 / ua ; pen ua ; move 0 , 3 / 2 )  | ( move 0 , 0 ; move ul , 2 / ua ; move 3 , ua )  | ( move 3 + ul , 2 / ua ; move 0 , ua ; pen ul )  | ( ( move 4 , 2 / ua ; pen ua + ul ) ; move 0 , ul )  | ( move ul + ul , 2 / ua ; pen 2 ; move ul + ul , ua )  | ( v0 = ua ; ( move 4 , 2 / v0 ; v1 = v0 ) )  
[61] move 3 * 3 , ul  | move ua + 3 , ul  | move ua + 3 , 3 - 2  | move ua + 3 , 4 - 3  | move 3 * 3 , 2 - ul  | move ua + 3 , 2 - ul  | move 3 * 3 , ul - ua  | move ua + 3 , ua + ul  | move ua + 3 , ul - ua  | ( move ua , ul ; move 3 , 0 )  | ( move ua + 3 , ul ; pen 0 )  | ( pen 4 ; move ua + 3 , ul )  | ( move 3 , ul ; move ua , ua )  | ( move 3 * 3 , ul ; v0 = 2 )  | ( move 3 , ul ; move 3 + 3 , ua )  | ( move ua + 3 , ul ; pen ua * 3 )  | ( pen ul ; move ua , ul ; move 3 , 0 )  | ( v0 = 3 ; move v0 * v0 , ul )  | ( move 3 , ul - ua ; move 3 * 2 , 0 )  | ( pen ul ; move ua , ul ; move 3 , ua )  | ( move ua , 3 - 2 ; move 3 , ua + ua )  | ( move ua + 3 , ul - ua ; pen 4 * 3 )  | ( move ua + 4 , ul - ua ; v0 = ua + ul )  | ( pen 4 * 4 ; move 4 * 2 , ul ; move ul , 0 )  | ( move ua , ul ; move 3 , ua * 2 ; v0 = 3 )  | ( move 3 , ul ; move ua , ua * 2 ; pen ua * 3 )  | ( move 3 , ul ; pen ua + 2 ; move ua , ua + ua )  | ( pen ua + ul ; move ua - ul , ul ; move 4 , ua )  | ( move ua , ul ; move 3 , 0 - ua ; v0 = ua + 3 )  | ( v0 = ua ; move v0 , ul - v0 ; move 3 , v0 )  | ( move ua , ul - ua ; ( move 3 , 0 ; v0 = ul / 3 ) )  
[62] move ua , 4 * 4  | move ua , 2 / ua  | move ua , ul / 3  | move 3 + 3 , 4 * 4  | move 4 + 2 , 4 * 4  | move 3 * 2 , 4 * 4  | move 0 - ua , 4 * 4  | ( move ua , 4 * 4 ; pen 0 )  | ( move ua , 4 * 4 ; pen ua )  | ( pen ul ; move ua , 4 * 4 )  | ( move ua , 4 * 4 ; pen ul )  | ( pen 4 ; move ua , ul / 3 )  | ( move ua , 4 * 4 ; v0 = 4 )  | ( move ua , 4 * 4 ; move 0 , ul )  | ( pen 4 - ul ; move ua , 4 * 4 )  | ( v0 = 4 ; move ua , 4 * v0 )  | ( v0 = 4 * 4 ; move ua , v0 )  | ( move ua / 3 , 4 * 4 ; move 4 , 0 )  | ( v0 = 4 ; move ua , v0 * v0 )  | ( v0 = 2 + ul ; move ua , 4 * 4 )  | ( move ua , 4 * 4 ; pen ua * 2 ; pen ua )  | ( v0 = ua - 3 ; move ua , v0 + v0 )  | ( move ua , 4 * 4 ; v0 = 3 ; v1 = ua )  | ( pen 4 ; v0 = 4 ; move ua , v0 * v0 )  | ( move ua , 4 * 4 ; pen ul ; move 0 , ul - 3 )  | ( v0 = ul ; pen v0 ; move 0 - ua , 4 * 4 )  | ( v0 = 4 ; move ua , v0 * v0 ; move 0 , 4 )  | ( v0 = 4 ; ( pen v0 ; move ua , v0 * 4 ) )  | ( ( move 0 , ua ; move 3 * 2 , 4 * 4 ) ; pen ul )  | ( ( move 0 , 0 ; v0 = 4 * 4 ) ; move ua , v0 )  | ( pen ua + ul ; move ua , 4 * 4 ; v0 = ua - ul )  | ( ( v0 = 4 * 4 ; move ua , v0 ) ; v1 = ua )  
[63] move ua , 4 / 3  | move 0 - ua , 4 / 3  | ( move ua , 4 / 3 ; pen 4 )  | ( move ua , 4 / 3 ; pen ua )  | ( move ua , 4 / 3 ; pen ul )  | ( pen ul ; move ua , 4 / 3 )  | ( move ua , 4 / 3 ; move 0 , 4 )  | ( move ua , 4 / 3 ; v0 = 0 )  | ( move ua , 4 / 3 ; v0 = 2 )  | ( move 0 , 4 ; move ua , 3 / ua )  | ( move ua , 4 / 3 ; v0 = ul )  | ( pen 2 + ul ; move ua , 4 / 3 )  | ( move 0 , ul / 3 ; move ua , ul )  | ( pen ua - ul ; move ua , 4 / 3 )  | ( move ua , 4 / 3 ; pen ul / ua )  | ( v0 = 4 / 3 ; move ua , v0 )  | ( move ua , 4 / 3 ; move 0 , ul - ua )  | ( move ua , 4 / 3 ; v0 = ul / ua )  | ( pen 0 ; ( pen 3 ; move ua , 4 / 3 ) )  | ( move ua , 4 / 3 ; pen 0 ; v0 = ul )  | ( pen 4 ; move ua , 4 / 3 ; v0 = ua )  | ( move ua , 4 / 3 ; move 0 , 4 + ul ; pen 0 )  | ( ( pen 2 ; move ua , 4 / 3 ) ; v0 = ul )  | ( move 0 , ul / 3 ; move ua , ua + ul ; pen 3 )  | ( move 0 , 3 / ua ; v0 = 4 ; move ua , v0 )  | ( move ua , 4 / 3 ; v0 = ul ; v1 = v0 )  | ( v0 = 3 ; v1 = v0 ; move ua , 4 / v1 )  | ( v0 = 3 ; ( v1 = 4 ; move ua , v1 / v0 ) )  | ( pen ul ; ( move 0 , ul / 3 ; pen ua ; move ua , ul ) )  | ( move ua - ul , 4 / 3 ; v0 = 0 ; move ul , 4 * v0 )  
[64] move ua , 3 / 4  | move 0 - ua , 3 / 4  | ( pen 2 ; move ua , 3 / 4 )  | ( move ua , 3 / 4 ; pen 3 )  | ( pen 3 ; move ua , 3 / 4 )  | ( move ua , 3 / 4 ; pen ua )  | ( pen ua ; move ua , 3 / 4 )  | ( pen ul ; move ua , 3 / 4 )  | ( move ua , 3 / 4 ; move 0 , 2 )  | ( move ua , 3 / 4 ; move 0 , 3 )  | ( move ua , 3 / 4 ; v0 = 3 )  | ( move ua , 3 / 4 ; v0 = 4 )  | ( pen 4 + 3 ; move ua , 3 / 4 )  | ( move 0 , ua ; move ua , 3 / 4 )  | ( move ua , 3 / 4 ; v0 = ua )  | ( move ua , 3 / 4 ; pen ul / 2 )  | ( pen ua / 3 ; move ua , 3 / 4 )  | ( v0 = 3 / 4 ; move ua , v0 )  | ( v0 = ua ; move v0 , 3 / 4 )  | ( v0 = 4 ; move ua , 3 / v0 )  | ( move 0 - ua , 3 / 4 ; v0 = ua )  | ( v0 = ul - ua ; move ua , 3 / 4 )  | ( v0 = ul ; move ua * v0 , 3 / 4 )  | ( pen ua ; move ua , 3 / 4 ; v0 = 0 )  | ( move ua , 3 / 4 ; pen 4 - ul ; pen ua )  | ( move ua , 3 / 4 ; move 0 , 4 ; v0 = ul )  | ( move ua , 3 / 4 ; ( v0 = 0 ; pen v0 ) )  | ( pen 2 ; ( move ua , 3 / 4 ; move 0 , 2 + ul ) )  | ( v0 = 3 / 4 ; ( pen v0 ; move ua , v0 ) )  | ( move ua / 2 , 3 / 4 ; move ul , 0 ; move 2 , ua )  | ( pen ua + 3 ; ( v0 = ua ; move ua , 3 / 4 ) )  | ( ( v0 = ul / 4 ; pen ul ) ; move ua , ul - v0 )  
[65] move 4 , 4 / ua  | move 3 + ul , 4 / ua  | ( v0 = 4 / ua ; move 4 , v0 )  | ( move 0 , ul ; v0 = ua + 2 ; move 4 , v0 / 3 )  
[66] move 4 , ua / 4  | move 2 + 2 , ua / 4  | move 0 - 4 , ua / 4  | move 2 * 2 , ua / 4  | move 2 - ua , ua / 4  | move 3 + ul , ua / 4  | ( move 4 , ua / 4 ; pen 0 )  | ( move 4 , ua / 4 ; pen 2 )  | ( move 4 , ua / 4 ; pen ua )  | ( pen ua ; move 4 , ua / 4 )  | ( move 4 , ua / 4 ; pen ul )  | ( pen ul ; move 4 , ua / 4 )  | ( move 4 , ua / 4 ; move 0 , 3 )  | ( move 4 , ua / 4 ; v0 = 0 )  | ( move 4 , ua / 4 ; v0 = 2 )  | ( move 4 , ua / 4 ; v0 = 4 )  | ( move 4 , ua / 4 ; v0 = ua )  | ( move 3 , ua / 4 ; move ul , ua )  | ( pen ul ; move 2 - ua , ua / 4 )  | ( v0 = 4 ; move v0 , ua / 4 )  | ( v0 = 4 ; move v0 , ua / v0 )  | ( move 2 * 2 , ua / 4 ; move 0 , ul )  | ( v0 = ua + ul ; move 4 , ua / 4 )  | ( ( pen 4 ; move 4 , ua / 4 ) ; pen 2 )  | ( pen ul ; move 4 , ua / 4 ; v0 = 2 )  | ( pen ua * ua ; move 4 , ua / 4 ; pen 0 )  | ( pen 4 - ul ; pen ul ; move 4 , ua / 4 )  | ( move 4 , ua / 4 ; v0 = ua ; pen v0 )  | ( move 4 , ua / 4 ; v0 = ul - 4 ; v1 = ul )  | ( move 2 + ul , ua / 4 ; move ul , 0 ; v0 = ua )  | ( ( pen 4 + ul ; move 4 , ua / 4 ) ; v0 = ua )  | ( ( pen 2 + ul ; move 4 , ua / 4 ; pen ul / 3 ) ; pen 3 )  
[67] move 4 , ul / 4  | move 2 + 2 , ul / 4  | move 0 - 4 , ul / 4  | move 2 * 2 , ul / 4  | move 3 + ul , ul / 4  | ( move 4 , ul / 4 ; pen 0 )  | ( pen 2 ; move 4 , ul / 4 )  | ( pen ua ; move 4 , ul / 4 )  | ( move 4 , ul / 4 ; pen ul )  | ( move 0 , ul / 4 ; move 4 , 0 )  | ( move 3 , ul / 4 ; move ul , 0 )  | ( pen 2 / ua ; move 4 , ul / 4 )  | ( move 3 , ul / 4 ; move ul , ua )  | ( move 4 , ul / 4 ; pen ua * ua )  | ( v0 = ul ; move 4 , v0 / 4 )  | ( v0 = ul / 4 ; move 4 , v0 )  | ( move 4 , ul / 4 ; v0 = 4 - 2 )  | ( pen ua ; pen ua ; move 4 , ul / 4 )  | ( v0 = 4 ; move v0 , ul / v0 )  | ( move 4 , ul / 4 ; v0 = ua / 3 )  | ( move ul / ua , ul / 4 ; move 4 , ua )  | ( move 3 , ul / 4 ; move ul , 0 ; pen ua )  | ( move 4 , ul / 4 ; pen ua - ul ; pen 2 )  | ( v0 = 3 + ul ; move v0 , ul / v0 )  | ( move 4 , ul / 4 ; v0 = 4 ; v1 = 4 )  | ( move 4 , ul / 4 ; pen ua + ul ; v0 = 0 )  | ( move 2 , ul / 4 ; pen ul ; move ua / 3 , ua )  | ( v0 = 2 + ul ; v1 = v0 ; move 4 , ul / 4 )  | ( pen 3 + 2 ; ( v0 = 4 ; move v0 , ul / v0 ) )  | ( v0 = 2 + 2 ; v1 = ul ; move v0 , ul / v0 )  | ( pen ua + ua ; move 4 , ul / 4 ; ( pen 4 ; pen ul ) )  | ( v0 = ul ; v1 = ul / 4 ; move v0 / v1 , v1 )  
[68] move ua - ul , 2  | move ul - ua , 2  | move ul - ua , 4 - 2  | move ua - ul , 4 - 2  | move ua - ul , 4 / 2  | move ua - ul , ua + 2  | move ul - ua , ua + 2  | move ua - ul , 2 - ua  | move ul - ua , 2 - ua  | move ua - ul , 3 - ul  | move ul - ua , 3 - ul  | move ua - ul , ul + ul  | move ul - ua , ul + ul  | ( move ul - ua , 2 ; pen 0 )  | ( move ul - ua , 2 ; pen ua )  | ( move 4 , 2 ; move 3 / 2 , 0 )  | ( move ua - ul , 2 ; v0 = 0 )  | ( move ul - ua , 2 ; v0 = ua )  | ( move ul - ua , 2 ; pen ul - 2 )  | ( move ul - ua , 2 ; pen ul - 4 )  | ( move ua - ul , 2 ; pen ul - ua )  | ( v0 = ul ; move v0 - ua , 2 )  | ( move ul - ua , ua + 2 ; v0 = 0 )  | ( move ul - ua , 2 ; move ul - 2 , 3 )  | ( move ua - ul , 2 ; v0 = ul / ua )  | ( move 0 , ul ; move ua - ul , ul ; pen 3 )  | ( pen ua ; v0 = ua - ul ; move v0 , 2 )  | ( move ua - ul , 2 ; pen 0 ; v0 = ul / ua )  | ( v0 = ul ; move 0 , v0 ; move ua - v0 , v0 )  | ( move ul - ua , ua + 2 ; v0 = ua - 4 ; v1 = ul )  | ( move ul - ua , ul + ul ; move ul , 4 + 2 ; pen ul / 2 )  | ( ( move ul / ua , 2 ; v0 = ua ) ; move 4 + ul , v0 )  
[69] move ua + 4 , ul  | move ua + 4 , 4 - 3  | move ua + 4 , 2 - ul  | move ua + 4 , ua + ul  | move ua + 4 , ul - ua  | ( move ua , ul ; move 4 , 0 )  | ( move 4 , ul ; move ua , 0 )  | ( pen 2 ; move ua + 4 , ul )  | ( move ua , ul ; move 4 , ua )  | ( move 4 , ul ; move ua , ua )  | ( pen ua ; move ua + 4 , ul )  | ( v0 = 0 ; move ua + 4 , ul )  | ( move ua - 2 , ul ; move ua , 0 )  | ( move ua + 4 , ul ; move 0 , ul )  | ( move 4 , ul ; move ua , ua * 3 )  | ( move ua + 4 , ua + ul ; pen ul )  | ( pen ul / ua ; move ua + 4 , ul )  | ( v0 = ul ; move ua + 4 , v0 )  | ( move 0 , ul ; move ua + 4 , ua * 3 )  | ( move ua + ul , ul ; move 2 + ul , 0 )  | ( move ua + ul , ua + ul ; move 3 , 0 )  | ( move ua + 4 , ul ; v0 = ul + ul )  | ( move ua + 4 , ul ; v0 = ua - ul )  | ( move 4 , ul ; pen ua * ua ; move ua , 0 )  | ( ( move ua + 4 , ul ; pen ul ) ; pen ua )  | ( move ua , ul ; ( move 4 , ua ; v0 = 3 ) )  | ( pen 3 ; ( move ua + 4 , ul ; pen 2 ; pen ua ) )  | ( move 4 , ul ; v0 = 0 ; move v0 + ua , v0 )  | ( move 4 , ul ; ( v0 = ua ; move v0 , v0 ) )  | ( ( move ua , ul ; move 3 , 0 ; pen ua + 4 ) ; move ul , 0 )  | ( move 3 + ul , ul - ua ; ( pen 2 ; move ua , ua ; pen ua ) )  | ( ( move 3 , ul ; move ua + ul , ua ) ; pen ul ; pen ua - 3 )  
[70] move ua , 2 / ua  | move ua , ul / 3  | move 4 + 2 , 2 / ua  | move 3 * 2 , 2 / ua  | move 0 - ua , 2 / ua  | ( pen 2 ; move ua , 2 / ua )  | ( pen 4 ; move ua , 2 / ua )  | ( pen ua ; move ua , 2 / ua )  | ( move ua , 2 / ua ; pen ua )  | ( move ua , 2 / ua ; pen ul )  | ( pen ul ; move ua , 2 / ua )  | ( move ua , 2 / ua ; move 0 , 3 )  | ( move ua , 2 / ua ; move 0 , 4 )  | ( move ua , 2 / ua ; v0 = 0 )  | ( move ua , 2 / ua ; v0 = 3 )  | ( v0 = 3 ; move ua , 2 / ua )  | ( move 4 + 2 , 2 / ua ; pen ua )  | ( move ua , 2 / ua ; v0 = ua )  | ( move ua , ul / 3 ; v0 = ul )  | ( v0 = 2 / ua ; move ua , v0 )  | ( move ua , 2 / ua ; pen 4 ; pen ua )  | ( move ua , 2 / ua ; v0 = 4 + ul )  | ( move ua , 2 / ua ; move 0 , ul + ul )  | ( pen ul ; move ua , 2 / ua ; v0 = ul )  | ( move ua , 2 / ua ; v0 = 0 ; pen v0 )  | ( pen ul ; move ua , 2 / ua ; pen ua + ul )  | ( move ua , 2 / ua ; v0 = ul ; pen v0 )  | ( move ua , 2 / ua ; v0 = 3 - ul ; pen ul )  | ( move 0 , 0 ; v0 = 2 ; move ua , v0 / ua )  | ( move 4 + 2 , 2 / ua ; v0 = 0 ; v1 = ul )  | ( ( move ua , 2 / ua ; v0 = ul ) ; v1 = ul )  
[71] move ua , ua / 3  | move 0 - ua , ua / 3  | ( pen 2 ; move ua , ua / 3 )  | ( move ua , ua / 3 ; pen 3 )  | ( move ua , ua / 3 ; pen 4 )  | ( pen ua ; move ua , ua / 3 )  | ( move ua , ua / 3 ; pen ul )  | ( pen ul ; move ua , ua / 3 )  | ( move 0 , 0 ; move ua , ua / 3 )  | ( move ua , ua / 3 ; v0 = 0 )  | ( move ua , ua / 3 ; v0 = 3 )  | ( move ua , ua / 3 ; v0 = 4 )  | ( move 0 , ua ; move ua , ua / 3 )  | ( move ua , ua / 3 ; v0 = ua )  | ( move ua , ua / 3 ; v0 = ul )  | ( move ua , ua / 3 ; pen 2 + ul )  | ( move ua , ua / 3 ; pen ul / 4 )  | ( v0 = ua / 3 ; move ua , v0 )  | ( pen 4 ; move ua , ua / 3 ; v0 = ua )  | ( move ua , ua / 3 ; pen ul ; v0 = ua )  | ( move ua , ua / 3 ; pen ul ; v0 = ul )  | ( pen ua - ul ; move ua , ua / 3 ; pen ua )  | ( pen 3 ; move ua , ua / 3 ; v0 = 3 - ul )  | ( pen ul ; move ua , ua / 3 ; v0 = ul + ul )  | ( pen ul / ua ; move ua , ua / 3 ; v0 = ua )  | ( v0 = 3 ; v1 = ua / v0 ; move ua , v1 )  | ( move 0 , ua / 2 ; ( move ua , ua / 3 ; pen 4 ) )  | ( ( pen ul ; move ua , ua / 3 ) ; v0 = 3 * 2 )  | ( ( move ua , ua / 3 ; pen 0 - ul ) ; v0 = ul )  | ( v0 = ua ; move v0 , v0 / 3 ; v1 = v0 )  | ( v0 = ua / 3 ; move 4 , ua / 3 ; move v0 , 0 )  | ( ( move ua , ua / 3 ; v0 = ua ) ; move 0 , v0 * 4 )  
[72] move 4 , ua * ua  | move 2 + 2 , ua * ua  | move 0 - 4 , ua * ua  | move 2 * 2 , ua * ua  | move 3 + ul , ua * ua  | ( pen ua ; move 4 , ua * ua )  | ( move 4 , ua * ua ; pen ua )  | ( move 4 , ua * ua ; pen ul )  | ( move 4 , ua * ua ; move 0 , 3 )  | ( move 4 , ua * ua ; v0 = 4 )  | ( move 4 , ua * ua ; pen 3 + 2 )  | ( move 4 , ua * ua ; move 0 , ua )  | ( move 4 , ua * ua ; v0 = ul )  | ( move 3 + ul , ua * ua ; pen 0 )  | ( move 3 + ul , ua * ua ; pen 2 )  | ( move 4 , ua * ua ; pen ua * 2 )  | ( move 4 , ua * ua ; pen ua + ul )  | ( v0 = ua * ua ; move 4 , v0 )  | ( move 2 + 2 , ua * ua ; move 0 , 4 )  | ( v0 = ua ; move 4 , v0 * v0 )  | ( move 4 , ua * ua ; move 0 , ua + 4 )  | ( v0 = ul - 2 ; move 4 , ua * ua )  | ( move 4 , ua * ua ; pen 4 ; v0 = ua )  | ( ( move 4 , ua * ua ; pen 3 ) ; pen 2 + 2 )  | ( ( pen ua / 2 ; move 4 , ua * ua ) ; pen 3 )  | ( move 4 , ua * ua ; ( v0 = 0 ; pen v0 ) )  | ( move 4 , ua * ua ; ( v0 = ua ; v1 = 4 ) )  | ( move 0 , 0 ; ( pen ua * ua ; move 4 , ua * ua ) )  | ( v0 = ua ; move 4 , v0 * v0 ; v1 = v0 )  | ( move 4 , ua * ua ; ( v0 = ua ; v1 = v0 ) )  | ( move 4 , ua * ua ; v0 = ua ; v1 = v0 - ua )  | ( pen ul ; ( move 4 , ua * ua ; pen 4 + ul ; v0 = ua ) )  
[73] move ua , ua / 4  | move 0 - ua , ua / 4  | ( move ua , ua / 4 ; pen 0 )  | ( pen 3 ; move ua , ua / 4 )  | ( pen 4 ; move ua , ua / 4 )  | ( move ua , ua / 4 ; pen ua )  | ( pen ua ; move ua , ua / 4 )  | ( pen ul ; move ua , ua / 4 )  | ( move ua , ua / 4 ; pen ul )  | ( move ua , ua / 4 ; move 0 , 0 )  | ( move ua , ua / 4 ; v0 = 0 )  | ( move ua , ua / 4 ; v0 = 2 )  | ( move ua , ua / 4 ; v0 = 4 )  | ( move ua , ua / 4 ; pen 4 * 2 )  | ( move 0 , ua / 4 ; move ua , ua )  | ( move ua , ua / 4 ; v0 = ua )  | ( move ua , ua / 4 ; v0 = ul )  | ( pen ua * 3 ; move ua , ua / 4 )  | ( move ua , ua / 4 ; pen ul - ua )  | ( v0 = ua / 4 ; move ua , v0 )  | ( pen ua ; pen ua ; move ua , ua / 4 )  | ( move ua , ua / 4 ; v0 = 3 / ua )  | ( move ua , ua / 4 ; v0 = ua + ua )  | ( move ua , ua / 4 ; pen 4 ; v0 = 4 )  | ( move ua , ua / 4 ; move 0 , ul ; pen 0 )  | ( move ua , ua / 4 ; pen ua ; pen ua / 4 )  | ( move 0 , ua / 4 ; move ua , 0 ; v0 = 2 )  | ( pen ua ; move ua , ua / 4 ; v0 = 0 - ua )  | ( ( pen ua ; move ua , ua / 4 ) ; v0 = ua * 3 )  | ( pen 3 ; move ua , ua / 4 ; ( v0 = ua ; pen v0 ) )  | ( move ua , ua / 4 ; ( pen ua + 2 ; pen ul ; v0 = 0 ) )  | ( move ua , ua / 4 ; ( pen 3 ; v0 = ua + ul ) ; pen 0 )  
[74] move ua , 4 / ua  | move 0 - ua , 4 / ua  | ( move ua , 4 / ua ; pen 0 )  | ( pen ua ; move ua , 4 / ua )  | ( move ua , 4 / ua ; pen ul )  | ( pen ul ; move ua , 4 / ua )  | ( move ua , 4 / ua ; v0 = 0 )  | ( move ua , 4 / ua ; v0 = 4 )  | ( move 0 , ua ; move ua , 4 / ua )  | ( move ua , 4 / ua ; move 0 , ul )  | ( move ua , 4 / ua ; v0 = ua )  | ( move ua , 4 / ua ; v0 = ul )  | ( pen ua + ua ; move ua , 4 / ua )  | ( move ua , 4 / ua ; pen ul + ul )  | ( move ua , 4 / ua ; pen ua * ua )  | ( pen ul / ua ; move ua , 4 / ua )  | ( move ua , 4 / ua ; pen 4 ; pen ul )  | ( v0 = ua ; move v0 , 4 / v0 )  | ( move ua , 4 / ua ; v0 = ua / 3 )  | ( move ua , 4 / ua ; move 0 , 4 ; pen 0 )  | ( v0 = ua ; move ua , 4 / ua ; pen 0 )  | ( pen 4 ; v0 = ul ; move ua , 4 / ua )  | ( pen 3 ; move ua , 4 / ua ; pen ua / 3 )  | ( pen ul ; move ua , 4 / ua ; pen ul / 2 )  | ( move 0 , 4 / ua ; pen 3 + 3 ; move ua , ua )  | ( move ua , 4 / ua ; v0 = ul ; v1 = v0 )  | ( pen ua + ua ; v0 = 4 / ua ; move ua , v0 )  | ( ( v0 = ua ; move v0 , 4 / v0 ) ; pen 2 )  | ( v0 = 4 / ua ; v1 = v0 ; move ua , v0 )  | ( v0 = 4 / ua ; v1 = v0 ; move ua , v1 )  | ( move ua , 4 / ua ; v0 = ul ; v1 = ua + ua )  | ( move 0 , ul + ul ; v0 = ua ; move ua , v0 * v0 )  
[75] move 4 , ul / ua  | move 2 + 2 , ul / ua  | move 0 - 4 , ul / ua  | move 2 * 2 , ul / ua  | move 2 - ua , ul / ua  | move 3 + ul , ul / ua  | ( move 4 , ul / ua ; pen 0 )  | ( move 4 , ul / ua ; pen 3 )  | ( move 4 , ul / ua ; pen 4 )  | ( move 4 , ul / ua ; pen ua )  | ( pen ul ; move 4 , ul / ua )  | ( move 0 , ua ; move 4 , ul / ua )  | ( move 4 , ul / ua ; v0 = ua )  | ( move 4 , ul / ua ; v0 = ul )  | ( move 2 * 2 , ul / ua ; pen ua )  | ( pen ua / 4 ; move 4 , ul / ua )  | ( v0 = ul ; move 4 , v0 / ua )  | ( v0 = ul / ua ; move 4 , v0 )  | ( move 4 , ul / ua ; pen ul ; pen 3 )  | ( move 4 , ul / ua ; v0 = 4 - ua )  | ( move 2 + 2 , ul / ua ; pen ua / 2 )  | ( move 3 + ul , ul / ua ; v0 = ul )  | ( move ul , ul / ua ; move ua / 2 , ua )  | ( v0 = ul ; move 3 + v0 , ul / ua )  | ( v0 = ul / ua ; move 4 , ua + v0 )  | ( pen ua ; move 4 , ul / ua ; v0 = 3 )  | ( move 4 , ul / ua ; ( v0 = ua ; pen 4 ) )  | ( pen ua ; ( move 3 , ul / ua ; move ul , 0 ) )  | ( pen ua / 4 ; move 4 , ul / ua ; v0 = ua )  | ( move 4 , ul / ua ; v0 = 0 - 2 ; v1 = 0 )  | ( move 0 , 2 / ua ; move ua - 3 , 3 ; move ul , 0 )  | ( v0 = ua * 4 ; pen v0 ; move 4 , v0 * v0 )  
[76] move ua , ul / 4  | move 0 - ua , ul / 4  | ( move ua , ul / 4 ; pen 3 )  | ( move ua , ul / 4 ; pen 4 )  | ( move ua , ul / 4 ; pen ua )  | ( pen ua ; move ua , ul / 4 )  | ( pen ul ; move ua , ul / 4 )  | ( move ua , ul / 4 ; pen ul )  | ( move 0 , ul / 4 ; move ua , 0 )  | ( move ua , ul / 4 ; v0 = 2 )  | ( move ua , ul / 4 ; v0 = 4 )  | ( move ua , ul / 4 ; pen 4 + 2 )  | ( pen 3 / 4 ; move ua , ul / 4 )  | ( move 0 , ua ; move ua , ul / 4 )  | ( move ua , ul / 4 ; v0 = ua )  | ( move ua , ul / 4 ; v0 = ul )  | ( move ua , ul / 4 ; pen ul - 3 )  | ( move ua , ul / 4 ; pen ul / ua )  | ( v0 = ua ; move v0 , ul / 4 )  | ( pen 4 ; move ua , ul / 4 ; pen 4 )  | ( pen ua ; pen ua ; move ua , ul / 4 )  | ( move ua , ul / 4 ; move 0 , ua + 4 )  | ( move 0 - ua , ul / 4 ; v0 = ul )  | ( move ua , ul / 4 ; v0 = 4 + ul )  | ( v0 = 3 + ul ; move ua , ul / v0 )  | ( v0 = ul / 4 ; pen ul ; move ua , v0 )  | ( v0 = ul ; v1 = ua ; move v1 , ul / 4 )  | ( v0 = ua ; move v0 , ul / 4 ; move 0 , v0 )  | ( v0 = ul / 4 ; move ua , v0 ; move 0 , 2 * 2 )  | ( move ua , ul / 4 ; ( v0 = 4 ; v1 = v0 ) )  | ( v0 = ul ; ( v1 = v0 ; move ua , v1 / 4 ) )  | ( pen ul ; ( ( pen ua + 4 ; move ua , ul / 4 ) ; pen ua ) )  
[77] move ua , ua * ua  | move 0 - ua , ua * ua  | move ul - ua , ua * ua  | move ua - ul , ua * ua  | ( pen 2 ; move ua , ua * ua )  | ( move ua , ua * ua ; pen 2 )  | ( pen 4 ; move ua , ua * ua )  | ( move ua , ua * ua ; pen ua )  | ( move ua , ua * ua ; move 0 , 2 )  | ( move ua , ua * ua ; v0 = ua )  | ( move ua , ua * ua ; pen 2 + ul )  | ( pen ua + ua ; move ua , ua * ua )  | ( v0 = ua * ua ; move ua , v0 )  | ( v0 = ua ; move ua , v0 * ua )  | ( move ua , ua * ua ; pen 0 ; pen ul )  | ( v0 = ua ; move v0 , v0 * ua )  | ( v0 = ua ; move v0 , ua * v0 )  | ( v0 = 4 * 4 ; move ua , ua * ua )  | ( v0 = ua ; move v0 , v0 * v0 )  | ( v0 = ua * ua ; move ua , v0 ; pen ua )  | ( move 0 , ua * ua ; move ua , ua ; move 0 , 4 )  | ( move ua , ua * ua ; v0 = ua ; v1 = ul )  | ( ( move ua , ua * ua ; pen ua ) ; pen ul - 3 )  | ( move ua , ua * ua ; v0 = ua ; v1 = v0 )  | ( move ua , ua * ua ; ( v0 = 2 + ul ; pen 2 ) )  | ( v0 = ua ; move v0 , v0 * v0 ; v1 = 0 )  | ( move 0 , ua ; v0 = ua ; move v0 , v0 * v0 )  | ( v0 = ua ; move v0 , v0 * v0 ; v1 = ul )  | ( move ua , ua * ua ; ( v0 = ua ; move 0 , v0 ) )  | ( move 0 , ua * ua ; v0 = 0 - ua ; move v0 , v0 )  | ( ( v0 = ua ; move v0 , v0 * v0 ) ; v1 = 0 )  | ( v0 = ua ; move ua , v0 * v0 ; v1 = v0 - ua )  
[78] move ua , ul / ua  | move 4 + 2 , ul / ua  | move 3 * 2 , ul / ua  | move 0 - ua , ul / ua  | ( move ua , ul / ua ; pen 3 )  | ( move ua , ul / ua ; pen ua )  | ( pen ul ; move ua , ul / ua )  | ( move ua , ul / ua ; pen ul )  | ( move ua , ul / ua ; move 0 , 0 )  | ( move ul , 2 / ua ; move ua , 3 )  | ( move ua , ul / ua ; v0 = 2 )  | ( move ua , ul / ua ; move 0 , ua )  | ( move ua , ul / ua ; v0 = ua )  | ( move ua , ul / ua ; pen ua * 2 )  | ( move ua , ul / ua ; pen ua / 4 )  | ( v0 = ul / ua ; move ua , v0 )  | ( v0 = ua ; move v0 , ul / v0 )  | ( move ua , ul / ua ; v0 = 3 - ua )  | ( move ul , ul / 3 ; move ua , 4 - ul )  | ( move ua , ul / ua ; move 0 , ua + ul )  | ( move ua , ul / ua ; v0 = 3 ; pen ul )  | ( v0 = ul / ua ; move ua + v0 , v0 )  | ( v0 = ul / ua ; move ul / v0 , v0 )  | ( pen ua * ua ; move ua , ul / ua ; pen ul )  | ( move ul , ul / 3 ; move ua , 3 ; v0 = 3 )  | ( ( move 0 , 0 ; pen 3 ) ; move ua , ul / ua )  | ( v0 = ul / ua ; pen v0 ; move ua , v0 )  | ( move ua , ul / ua ; v0 = ul ; pen 2 * v0 )  | ( move ua , ul / ua ; v0 = ua + 3 ; pen 3 + v0 )  | ( move ua , ul / ua ; v0 = ua - ul ; pen v0 + v0 )  | ( v0 = 4 ; v1 = v0 * ua ; move ua , v1 * v1 )  | ( v0 = ua ; ( v1 = v0 ; move v0 , ul / v0 ) )  
[79] move 3 + 2 , 0 - 2  | move 3 + 2 , 2 - 4  | move 4 + ul , 0 - 2  | move 3 + 2 , ua - 2  | move 3 + 2 , ul - 3  | move 4 + ul , 2 - 4  | move 4 + ul , ua - 2  | move 4 + ul , ul - 3  | move ua - ul , ua - 2  | move ul - ua , ul - 3  | move ua - ul , ul - 3  | ( move 2 , ua - 2 ; move 3 , ua )  | ( move 4 , ua - 2 ; move ul , 0 )  | ( move 4 , ul - 3 ; move ul , 0 )  | ( move 3 + 2 , ul - 3 ; pen ul )  | ( move 0 , ul - 3 ; move 4 + ul , 0 )  | ( move ul , 2 - 4 ; move 3 + ul , 0 )  | ( move ul , ua - 2 ; move 4 , ua ; pen 0 )  | ( move 0 , ua - ul ; move 4 + ul , ul - 2 )  | ( move 0 , 0 - 3 ; move 2 , ul ; move 3 , ua )  | ( move 3 + 2 , 2 - 4 ; v0 = ul ; pen ua )  | ( move ul , ul - 3 ; ( pen 4 ; move 4 , 0 ) )  | ( move 0 , ul - 3 ; move ul , ua ; move 4 , ua )  | ( move 2 , ul - 3 ; v0 = 0 ; move 3 , v0 )  | ( ( move 4 , ua - 2 ; pen ua ) ; move ul , ua )  | ( move ul , 0 - 2 ; v0 = 4 ; move v0 , ua )  | ( move 4 , ul - 3 ; ( move ul , 0 ; v0 = 4 ) )  | ( move 4 , 0 - 2 ; ( move ul , ua ; pen 3 - ul ) )  | ( move 4 + ul , ul - 3 ; v0 = 3 ; pen v0 - ua )  
[80] move 3 + 2 , 0 - 3  | move 4 + ul , 0 - 3  | move 3 + 2 , ua - 3  | move 3 + 2 , ul - 4  | move ua - ul , 0 - 3  | move 4 + ul , ua - 3  | move 4 + ul , ul - 4  | move ul - ua , ul - 4  | move ua - ul , ul - 4  | ( move 3 , ul - 4 ; move 2 , 0 )  | ( move 4 , ua - 3 ; move ul , 0 )  | ( move 4 + ul , ul - 4 ; pen 0 )  | ( pen 4 ; move 4 + ul , ua - 3 )  | ( move 4 , ul - 4 ; move ul , ua )  | ( pen ua ; move 4 + ul , ua - 3 )  | ( pen ul ; move 4 + ul , ul - 4 )  | ( move 4 + ul , 0 - 3 ; v0 = 3 )  | ( move 4 + ul , ul - 4 ; v0 = 0 )  | ( pen ua + ul ; move 3 + 2 , 0 - 3 )  | ( move ul , ua - 3 ; move 3 + ul , 0 )  | ( move 0 , ul ; move 4 + ul , ua - 4 )  | ( move 4 , 0 - 3 ; pen ul ; move ul , 0 )  | ( move 2 - ul , ua - 3 ; move 3 + ul , ua )  | ( move 0 , ua - ul ; move 4 + ul , ul - 3 )  | ( move 3 + ul , ua - 3 ; move ul , 0 ; pen ul )  | ( move 4 + ul , ul - 4 ; pen ul - ua ; pen 0 )  | ( v0 = ua ; move 4 , ua - 3 ; move ul , v0 )  | ( v0 = 3 ; move v0 , ua - v0 ; move 2 , ua )  | ( ( move ul , ul - 4 ; move ul , 0 ) ; move 3 , ua )  | ( move ul , ul - 4 ; ( v0 = 0 ; move 4 , v0 ) )  
[81] move 4 + 3 , 0 - 2  | move 4 + 3 , 2 - 4  | move 4 + 3 , ua - 2  | move 4 + 3 , ul - 3  | move ua + ul , 0 - 2  | move ua + ul , 2 - 4  | move ua + ul , ua - 2  | move ua + ul , ul - 3  | ( move 3 , ua - 2 ; move 4 , ua )  | ( move ua + ul , 2 - 4 ; pen 2 )  | ( move ua , ua - 2 ; move ul , 0 )  | ( move ua + ul , ul - 3 ; pen 0 )  | ( move ua , ua - 2 ; move ul , ua )  | ( move ua , ul - 3 ; move ul , ua )  | ( move ua + ul , ua - 2 ; pen ul )  | ( move ua + ul , 2 - 4 ; v0 = 0 )  | ( move 4 / ua , ua - 2 ; move ua , 0 )  | ( move ua + ul , 2 - 4 ; pen ul / 2 )  | ( v0 = 4 + 3 ; move v0 , ul - 3 )  | ( move ua , ul - 3 ; move ul , ua + ua )  | ( move ua + ul , ul - 3 ; pen ua - ul )  | ( move ua , ul - 3 ; move ul , 0 ; pen 0 )  | ( pen 2 ; move ua , ul - 3 ; move ul , ua )  | ( pen ua ; move ua + ul , ul - 3 ; pen ua )  | ( move ul , ul - ua ; move ua + ul , ul - 4 )  | ( move ua + ul , ul - 3 ; pen ul ; v0 = 0 )  | ( pen ua * 3 ; move ul , ul - 3 ; move ua , ua )  | ( v0 = ul ; move ua + v0 , v0 - 3 ; pen ua )  | ( pen ul ; move 2 , ua + ul ; move ua + ul , ua - 3 )  | ( move ua , ul - 3 ; ( v0 = ua ; move 3 - 2 , v0 ) )  
[82] move 3 + 2 , 0 - 4  | move 4 + ul , 0 - 4  | move 3 + 2 , ua - 4  | move 4 + ul , ua - 4  | move ua - ul , ua - 4  | ( move 3 , ua - 4 ; move 2 , 0 )  | ( pen ul ; move 4 + ul , ua - 4 )  | ( move 2 , 0 - 4 ; move 2 + ul , 0 )  | ( move 3 + 2 , ua - 4 ; v0 = ua )  | ( move 4 + ul , ua - 4 ; v0 = ul )  | ( pen ul / ua ; move 3 + 2 , ua - 4 )  | ( move 4 , ua - 4 ; move ul , ua + ua )  | ( move 4 + ul , ua - 4 ; v0 = 3 * 2 )  | ( move 0 , ul / 2 ; move 3 + 2 , ua * ua )  | ( v0 = 4 + ul ; move v0 , ul - v0 )  | ( move 4 , 0 - 4 ; move ul , 0 ; v0 = 4 )  | ( move 2 , ua - 4 ; ( move 3 , ua ; pen 4 ) )  | ( v0 = ul ; move 4 , ua - 4 ; move ul , 0 )  | ( v0 = ua - 2 ; move 4 + ul , v0 + v0 )  | ( v0 = ul - 3 ; move 3 - v0 , v0 + v0 )  | ( move 4 , ua - 4 ; move ul , 0 - ua ; move 0 , 2 )  
[83] move 3 + 2 , 3 + 2  | move 3 + 2 , 4 + ul  | move 4 + ul , 3 + 2  | move 4 + ul , 4 + ul  | move ua - ul , 4 + ul  | ( move 2 , 4 + ul ; move 3 , 0 )  | ( move 0 , 4 ; move 4 + ul , ul )  | ( move 4 , 4 + ul ; move ul , 0 )  | ( move 4 + ul , 4 + ul ; pen ul )  | ( v0 = 3 ; move 3 + 2 , 3 + 2 )  | ( v0 = 3 + 2 ; move v0 , v0 )  | ( move 0 , 3 - ul ; move 3 + 2 , 3 )  | ( move 3 + 2 , 3 + 2 ; v0 = ul )  | ( move 3 + 2 , 4 + ul ; v0 = 3 )  | ( v0 = 4 + ul ; move v0 , v0 )  | ( move 4 + ul , 4 + ul ; v0 = 0 )  | ( move 3 , 4 + ul ; move 2 , ua * 3 )  | ( v0 = 4 + ul ; move v0 , 4 + ul )  | ( pen ul ; v0 = 3 + 2 ; move v0 , v0 )  | ( ( pen ul ; move 0 , ul ) ; move 4 + ul , 4 )  | ( ( pen 2 ; v0 = 4 + ul ) ; move v0 , v0 )  | ( v0 = 4 + ul ; pen ua * 4 ; move v0 , v0 )  | ( move ul , 4 + ul ; move 4 , ua ; v0 = ua + ua )  | ( v0 = 4 + ul ; v1 = v0 ; move v0 , v0 )  | ( v0 = 4 + ul ; v1 = v0 ; move v1 , v0 )  | ( move 4 , 3 + 2 ; v0 = ua ; move ul , ua + v0 )  | ( v0 = 4 + ul ; ( move v0 , v0 ; v1 = v0 ) )  | ( v0 = 4 + ul ; move v0 , v0 ; v1 = ul + v0 )  | ( ( move 0 , 4 ; move 4 , ul ) ; v0 = ul ; move ul , ua )  | ( ( move 0 , 4 ; move 4 + ul , ul ) ; pen ul ; v0 = ua )  | ( move 3 , 4 + ul ; v0 = ul + ul ; move v0 , ua + ua )  
[84] move 3 * 3 , 0 - 2  | move 3 * 3 , 2 - 4  | move ua + 3 , 0 - 2  | move ua + 3 , 2 - 4  | move 3 * 3 , ua - 2  | move 3 * 3 , ul - 3  | move ua + 3 , ua - 2  | move ua + 3 , ul - 3  | ( move ua + 3 , 2 - 4 ; pen 4 )  | ( move ua + 3 , ua - 2 ; pen 4 )  | ( move ua + 3 , ul - 3 ; pen ua )  | ( move ua + 3 , ua - 2 ; move 0 , 0 )  | ( move ua + ul , ua - 2 ; move 2 , ua )  | ( v0 = ul - 3 ; move ua + 3 , v0 )  | ( v0 = 3 ; move v0 + ua , ul - v0 )  | ( v0 = 2 + ul ; move v0 * v0 , ul - 3 )  | ( pen ua * 2 ; move 0 , ul ; move 3 * 3 , ua - 3 )  | ( move ua + ul , ul - 3 ; pen ul ; move 2 , ua * 2 )  | ( move 3 * 3 , ul - 3 ; v0 = ul ; v1 = ul / ua )  | ( move 0 , ul ; v0 = 0 - 3 ; move v0 * v0 , v0 )  
[85] move 4 + 3 , 0 - 3  | move 4 + 3 , ua - 3  | move 4 + 3 , ul - 4  | move ua + ul , 0 - 3  | move 4 + 3 , ul / ua  | move ua + ul , ua - 3  | move ua + ul , ul - 4  | move ua + ul , ul / ua  | ( move 4 + 3 , ua - 3 ; pen ul )  | ( pen ul ; move ua + ul , 0 - 3 )  | ( pen ul ; move ua + ul , ul - 4 )  | ( move ua + ul , ul / ua ; pen 3 )  | ( move 4 + 3 , 0 - 3 ; pen ua * 3 )  | ( move ua + ul , 0 - 3 ; v0 = ua )  | ( move ua + ul , ul - 4 ; v0 = 0 )  | ( move ua + ul , ul - 4 ; v0 = 2 )  | ( move ua + ul , ul - 4 ; v0 = 3 )  | ( move ua + ul , ul - 4 ; pen 4 * 3 )  | ( move ua + ul , ul / ua ; v0 = 3 )  | ( pen 4 + ul ; move ua + ul , ua - 3 )  | ( move ua + ul , ul - 4 ; pen ua + 4 )  | ( move ua + ul , ul - 4 ; pen 3 / ua )  | ( v0 = ua + ul ; move v0 , ul - 4 )  | ( move ua + ul , ul - 4 ; pen 0 ; pen ul )  | ( move ua + ul , ul - 4 ; v0 = ua - 4 )  | ( pen ua + 3 ; move 4 + 3 , ul - 4 ; v0 = ua )  | ( move ua + ul , ul - 4 ; v0 = ul ; v1 = v0 )  | ( ( pen 3 ; pen ua ; move ua + ul , 0 - 3 ) ; pen 2 + ul )  
[86] move 4 * 2 , 0 - 2  | move 4 + 4 , 0 - 2  | move 4 + 4 , 2 - 4  | move 4 * 2 , 2 - 4  | move ua + 2 , 0 - 2  | move ua + 3 , 2 - 4  | move 4 * 2 , ua - 2  | move 4 + 4 , ua - 2  | move 4 + 4 , ul - 3  | move 4 * 2 , ul - 3  | move ua + 2 , ul - 3  | ( move 4 , ua - 2 ; move 4 , 0 )  | ( move 4 , ul - 3 ; move 4 , ua )  | ( move 4 * 2 , ul - 3 ; pen ul )  | ( pen ua * 4 ; move 4 + 4 , 0 - 2 )  | ( move ua , 2 - 4 ; move 3 / 2 , ua )  | ( move 4 + 4 , ul - 3 ; v0 = ul )  | ( move 4 + 4 , ul - 3 ; pen ua + ul )  | ( v0 = ul ; move 4 * 2 , v0 - 3 )  | ( move 4 , ul - 3 ; move 4 , ua ; pen 4 )  | ( move 4 * 2 , 2 - 4 ; v0 = ua * 2 )  | ( v0 = 4 ; move v0 + v0 , 2 - v0 )  | ( move 4 * 2 , ua - 2 ; v0 = 0 ; pen ua )  | ( v0 = ul ; move 4 * 2 , v0 - 3 ; v1 = v0 )  | ( move 4 * 2 , ul - 3 ; move 0 , ul ; v0 = ua / 4 )  | ( v0 = ul - 3 ; move v0 * v0 , v0 ; move 4 , ua )  | ( pen ul ; ( move 4 * 2 , ua - 2 ; pen 4 ) ; v0 = ua )  
[87] move 3 + 2 , 2 - 3  | move 3 + 2 , 3 - 4  | move 3 + 2 , 0 - ul  | move 3 + 2 , ul - 2  | move 4 + ul , 2 - 3  | move 4 + ul , 3 - 4  | move 3 + 2 , ua - ul  | move 4 + ul , 0 - ul  | move 4 + ul , ul - 2  | move 4 + ul , ua - ul  | ( move 3 , ul - 2 ; move 2 , 0 )  | ( move 4 , 2 - 3 ; move ul , 0 )  | ( move 2 , 3 - 4 ; move 3 , ua )  | ( move ul , 0 - ul ; move 4 , 0 )  | ( move 2 , ua - ul ; move 3 , ua )  | ( move 4 , 0 - ul ; move ul , ua )  | ( move 3 , ua - ul ; move 2 , ua )  | ( move ul , ul - 2 ; move 4 , ua )  | ( move 4 , ua - ul ; move ul , ua )  | ( move 4 + ul , ua - ul ; pen ua )  | ( move 4 + ul , 0 - ul ; v0 = ua )  | ( move 3 + 2 , ua - ul ; pen 0 - ul )  | ( pen ul / 2 ; move 4 + ul , ul - 2 )  | ( pen 2 / ua ; move 4 + ul , ua - ul )  | ( move 4 , 0 - ul ; move 3 - 2 , ua ; pen 4 )  | ( move 2 , ua - ul ; move 3 , 0 ; v0 = ul )  | ( move ul , 0 - ul ; move ul , 0 ; move 3 , ua )  | ( move 0 , ua - ul ; move 4 + ul , ua ; move 0 , 2 )  | ( move ul , ul - 2 ; v0 = ua ; move 2 + 2 , v0 )  | ( pen ua ; v0 = ul + ul ; move v0 + 3 , ul - v0 )  | ( v0 = ul ; v1 = 4 ; move v1 + v0 , v0 - 2 )  | ( ( move ul , ua - ul ; move 4 , ua + ua ) ; pen ul + ul )  | ( ( pen 2 / ua ; move 4 , 0 - ul ; move ul , ua ) ; pen 0 )  
[88] move 3 + 2 , 3 + 3  | move 3 + 2 , 4 + 2  | move 3 + 2 , 3 * 2  | move 4 + ul , 4 + 2  | move 4 + ul , 3 + 3  | move 4 + ul , 3 * 2  | ( move 4 + ul , 4 + 2 ; pen 2 )  | ( move 4 + ul , 3 + 3 ; pen ua )  | ( move 4 + ul , 4 + 2 ; pen ua )  | ( move 0 , 3 + 3 ; move 3 + 2 , ua )  | ( move 4 + ul , 3 + 3 ; v0 = 0 )  | ( move 3 + 2 , 3 * 2 ; v0 = ul )  | ( move ul , 4 + 2 ; move 3 + ul , ua )  | ( move 0 , 4 ; move 4 + ul , ul + ul )  | ( move 0 , 2 ; move 4 , 4 ; move ul , 0 )  | ( pen 2 ; move ul , 3 + 3 ; move 4 , 0 )  | ( v0 = 4 + 2 ; move ul - v0 , v0 )  | ( v0 = 3 + 3 ; move v0 - ul , v0 )  | ( move ul , 3 * 2 ; move 2 * 2 , ua * 3 )  | ( move ul , 3 * 2 ; move 3 + ul , 0 ; pen 0 )  | ( move 0 , 4 ; move ul , 2 ; move 4 , ua + ua )  | ( v0 = 2 ; move 3 + v0 , 3 * v0 ; pen 4 )  | ( move 0 , 4 ; ( move ul , 2 ; move 4 , 0 - ua ) )  | ( move ul , 4 + 2 ; move 4 , ua ; v0 = ua * ua )  | ( ( move 2 , 3 * 2 ; v0 = 3 ) ; move v0 , ua )  | ( move ul , 4 + 2 ; ( move 3 + ul , ua ; pen ua ) )  | ( pen 4 * 4 ; v0 = 4 + ul ; move v0 , 4 + 2 )  | ( move 3 , 3 * 2 ; v0 = ul + ul ; move v0 , 0 )  | ( ( move 0 , 2 ; pen ul ; move ul , 4 ) ; move 4 , 0 )  | ( move 4 + ul , 3 * 2 ; v0 = ua ; pen v0 * ua )  | ( v0 = 3 + 2 ; move v0 , ul + v0 ; move 0 , 4 )  
[89] move 4 + 3 , 3 + 2  | move 4 + 3 , 4 + ul  | move ua + ul , 3 + 2  | move ua + ul , 4 + ul  | ( move 4 , 4 + ul ; move 3 , 0 )  | ( move 3 , 3 + 2 ; move 4 , ua )  | ( move 0 , 4 ; move 4 + 3 , ul )  | ( move 3 , 4 + ul ; move 4 , ua )  | ( move 4 + 3 , 4 + ul ; pen ua )  | ( move 0 , ul ; move 4 + 3 , 2 * 2 )  | ( move 4 + 3 , 4 + ul ; v0 = 0 )  | ( move ua , 3 + 2 ; move 4 / ua , 0 )  | ( move 2 , 4 + ul ; move 3 + 2 , ua )  | ( move 3 * 2 , 4 + ul ; move ul , ua )  | ( move ua + ul , 4 + ul ; v0 = ul )  | ( v0 = 4 + ul ; move 2 + v0 , v0 )  | ( move 0 , 4 - ul ; move 4 + 3 , ul + ul )  | ( move ul / ua , 4 + ul ; move 4 + 3 , ua )  | ( pen ul + ul ; move 4 + 3 , 4 + ul ; v0 = ua )  | ( v0 = 4 + ul ; move 3 - ul , v0 ; move v0 , 0 )  | ( move ul , 2 ; move ua , 3 ; ( move ul , ua ; v0 = ua ) )  
[90] move 4 * 2 , 0 - 3  | move 4 + 4 , 0 - 3  | move ua + 2 , 0 - 3  | move 4 * 2 , ua - 3  | move 4 + 4 , ua - 3  | move 4 + 4 , ul - 4  | move 4 * 2 , ul - 4  | move ua + 2 , ua - 3  | move ua + 2 , ul - 4  | ( move 4 , ua - 3 ; move 4 , ua )  | ( move 2 , ul / ua ; move ua , 0 )  | ( move 2 , ul - 4 ; move ua , ua )  | ( move ua , ul - 4 ; move 2 , ua )  | ( pen ua ; move ua + 2 , ua - 3 )  | ( move ua + 2 , ua - 3 ; v0 = 2 )  | ( move 3 + ul , ul - 4 ; move 4 , 0 )  | ( move 4 * 2 , ua - 3 ; v0 = ul )  | ( move 4 * 2 , ua - 3 ; pen 2 + ul )  | ( pen 2 - ul ; move 4 * 2 , ua - 3 )  | ( move 4 + 4 , 0 - 3 ; pen 3 ; pen 0 )  | ( v0 = 0 ; move ua + 2 , v0 - 3 )  | ( v0 = 4 * 2 ; move v0 , ua - 3 )  | ( v0 = ua + 2 ; move v0 , ul - 4 )  | ( move 4 * 2 , 0 - 3 ; v0 = ua * 3 )  | ( move 2 - ul , ua - 3 ; move 4 + 3 , ua )  | ( move 4 + 4 , ua - 3 ; move 0 , 4 ; pen 0 )  | ( move ua , ua - 3 ; move 2 , 0 ; v0 = ul )  | ( move 4 * 2 , ul - 4 ; pen 3 + 2 ; v0 = ul )  | ( ( move ua + 2 , ua - 3 ; pen ul ) ; v0 = 0 )  | ( move 4 , ul - 4 ; ( move 4 , ua ; pen ul / ua ) )  | ( pen ua + 2 ; move ua + 2 , ua - 3 ; pen ua + ul )  
[91] move 3 + 2 , 4 + 3  | move 4 + ul , 4 + 3  | ( move 0 , 3 ; move 4 + ul , 4 )  | ( move 4 + ul , 4 + 3 ; pen 0 )  | ( move ul , 4 + 3 ; move 4 , ua )  | ( move 3 + ul , 4 + 3 ; move ul , 0 )  | ( move 0 , 3 + ul ; move 4 + ul , 3 )  | ( move 4 + ul , 4 + 3 ; v0 = ul )  | ( move ul , 4 + 3 ; move 4 , 0 ; pen 0 )  | ( move 0 , ul ; move ul , 3 * 2 ; move 4 , 0 )  | ( move ul , 4 + 3 ; ( move 4 , 0 ; pen ua ) )  | ( move 0 , 2 ; v0 = ul ; move 3 + 2 , 4 + ul )  | ( move 2 * 2 , 4 + 3 ; v0 = ul ; move ul , 0 )  | ( move 3 , 4 + 3 ; ( v0 = ua ; move 2 , v0 ) )  
[92] move 4 + 3 , 0 - 4  | move 4 + 3 , ua - 4  | move ua + ul , 0 - 4  | move ua + ul , ua - 4  | ( move 3 , ua - 4 ; move 4 , 0 )  | ( move ul , 0 - 4 ; move ua , 0 )  | ( move ua + ul , 0 - 4 ; pen 0 )  | ( move 4 + 3 , ua - 4 ; pen ul )  | ( move ul , 0 - 4 ; move ua , ua )  | ( move ua , ua - 4 ; move ul , 0 )  | ( pen 2 ; move ua + ul , ua - 4 )  | ( pen 3 ; move ua + ul , ua - 4 )  | ( move ul , ua - 4 ; move ua , ua )  | ( move ua , ua - 4 ; move ul , ua )  | ( move ua , ua - 4 ; move ul / 2 , 0 )  | ( move ua + ul , ua - 4 ; v0 = 3 )  | ( move ua , ua - 4 ; move ul / 2 , ua )  | ( move ua + ul , ua - 4 ; pen 4 + ul )  | ( move ua + ul , ua - 4 ; v0 = 2 / ua )  | ( move ul , ua - 4 ; move ua , 0 ; v0 = 3 )  | ( move 4 + 3 , ua - 4 ; pen ua + ul ; pen 0 )  | ( move ua + ul , ua - 4 ; pen ul + ul ; pen 0 )  | ( pen ul ; v0 = ua ; move ua + ul , v0 - 4 )  | ( ( move ua , ua - 4 ; move ul , ua ) ; v0 = 0 )  | ( ( move ua + ul , 0 - 4 ; v0 = 3 ) ; v1 = 0 )  | ( pen ua ; ( pen ua ; pen ua ; move ua + ul , ua - 4 ) )  | ( move ua + ul , ua - 4 ; ( pen ul ; pen ul ; pen ul ) )  | ( pen ua - ul ; move ua + ul , ua - 4 ; v0 = ua - 4 )  | ( pen ua - ul ; ( move ua + ul , ua - 4 ; pen 4 - ul ) )  | ( move ul , ua - 4 ; ( pen 2 * 2 ; pen ua ) ; move ua , 0 )  | ( ( move ua + ul , ua - 4 ; v0 = ua + ul ) ; pen v0 )  
[93] move 3 + 2 , 3 * 3  | move 4 + ul , 3 * 3  | ( move 3 , 3 * 3 ; move 2 , ua )  | ( move 4 , 3 * 3 ; move ul , ua )  | ( move 4 , 3 * 3 ; move 2 - ul , 0 )  | ( v0 = 4 + ul ; move v0 , 4 + v0 )  | ( v0 = 3 ; move v0 + 2 , v0 * v0 ; pen 3 )  | ( move 0 , 4 + 2 ; ( move 0 , 2 ; move 4 + ul , ul ) )  | ( v0 = 3 ; v1 = v0 ; move v1 + 2 , v1 * 3 )  
[94] move 4 * 2 , 0 - 4  | move 4 + 4 , 0 - 4  | move ua + 2 , 0 - 4  | move 4 + 4 , ua - 4  | move 4 * 2 , ua - 4  | move ua + 2 , ua - 4  | move ua + ul , ua - 4  | ( pen ul ; move 4 * 2 , 0 - 4 )  | ( move 2 , ua - 4 ; move ua , 0 )  | ( move 4 , 0 - 4 ; move 4 , ua * 4 )  | ( pen ua - 2 ; move 4 + 3 , 0 - 4 )  | ( move ul + ul , 0 - 4 ; move ua , 0 )  | ( move ua , ua - 4 ; move 3 - ul , 0 )  | ( move ul , ua - 4 ; move 4 + 3 , ua )  | ( move ul , 0 - 4 ; move ua + ul , ua )  | ( move ua , ua - 4 ; move ul + ul , ua )  | ( pen ua ; move 2 , ua - 4 ; move ua , 0 )  | ( move ua , ua - 4 ; pen ul ; move 2 , 0 )  | ( pen 3 ; move ua + 2 , ua - 4 ; pen ua )  | ( pen ul ; pen ul ; move 4 + 4 , ua - 4 )  | ( pen ul ; move ua + 2 , ua - 4 ; pen ul )  | ( move ua + 2 , ua - 4 ; v0 = 3 + ul )  | ( move ua , ua - 4 ; move 3 / 2 , ua + ua )  | ( pen 3 ; ( move ua , 0 - 4 ; move 2 , 0 ) )  | ( move ul , ua - 4 ; move ua + ul , ua * 2 )  | ( move 4 , ua - 4 ; move 4 , ua ; move 0 , 0 )  | ( move ua , ua - 4 ; v0 = 2 ; move v0 , 0 )  | ( move ua + ul , ua - 4 ; ( move ul , 0 ; pen 4 ) )  | ( move ua , ua - 4 ; pen ua ; ( move 2 , 0 ; v0 = ua ) )  
[95] move 4 + 3 , 4 + 2  | move 4 + 3 , 3 + 3  | move 4 + 3 , 3 * 2  | move ua + ul , 4 + 2  | move ua + ul , 3 + 3  | move ua + ul , 3 * 2  | ( move 3 , 3 * 2 ; move 4 , ua )  | ( move 3 , 3 * 2 ; move 4 , ua + ua )  | ( v0 = 3 + 3 ; move ul + v0 , v0 )  | ( v0 = 3 * 2 ; move v0 + ul , v0 )  | ( v0 = 4 + 3 ; move v0 , v0 - ul )  | ( ( move 3 , 4 + 2 ; pen ul ) ; pen ul ; move 4 , 0 )  | ( v0 = 3 + 3 ; v1 = ul + v0 ; move v1 , v0 )  | ( v0 = ua + 4 ; pen v0 ; move v0 - 3 , 2 + v0 )  | ( v0 = 3 * 2 ; move v0 , v0 ; move ua / v0 , ua )  
[96] move 3 * 3 , 0 - 4  | move ua + 3 , 0 - 4  | move 3 * 3 , ua - 4  | move ua + 3 , ua - 4  | ( move ua , ua - 4 ; move 3 , 0 )  | ( pen ul ; move 3 * 3 , ua - 4 )  | ( move 3 , ua - 4 ; move ua , ua )  | ( move ua , ua - 4 ; move 3 , ua )  | ( move ua + 3 , ua - 4 ; pen ul )  | ( move ua + 3 , ua - 4 ; v0 = ua )  | ( v0 = ul ; move ua + 3 , ua - 4 )  | ( move ul , ua - 4 ; move 4 * 2 , ua )  | ( move 3 , ua - 4 ; move ua , 0 ; pen ul )  | ( move ua - ul , ua - 4 ; move 4 , 0 - ua )  | ( move ua , 0 - 4 ; move 3 , ua ; v0 = ul )  | ( move 3 , ua - 4 ; move ua , 0 ; v0 = 4 + ul )  
[97] move 3 + 2 , 4 * 2  | move 3 + 2 , 4 + 4  | move 4 + ul , 4 + 4  | move 4 + ul , 4 * 2  | move ua - ul , 4 * 2  | ( move ul , 4 * 2 ; move 4 , ua )  | ( move ul , 4 + 4 ; move 4 , ua )  | ( move 0 , 4 * 2 ; move 4 + ul , 0 )  | ( v0 = 4 * 2 ; move 4 + ul , v0 )  | ( pen ua ; move 4 + ul , 4 * 2 ; pen 3 )  | ( move 0 , 3 * 2 ; move 4 + ul , ua + 2 )  | ( move 0 , 2 ; move 4 + ul , 4 + 2 ; pen 0 )  | ( v0 = 4 ; move v0 + ul , v0 + v0 )  | ( pen 2 + 2 ; move 4 , 4 * 2 ; move ul , ua )  | ( move ul , 4 + 4 ; ( pen ua + 3 ; move 4 , 0 ) )  | ( move 0 , 3 + 2 ; move 4 + ul , 2 + ul ; pen ua )  | ( move 0 , 4 * 2 ; v0 = 4 + ul ; move v0 , ua )  | ( ( move 4 , 4 * 2 ; v0 = ua ) ; move ul , v0 )  | ( move 4 + ul , 4 + 4 ; v0 = ul ; v1 = 4 / 3 )  | ( v0 = 2 ; move 0 , v0 + 4 ; move 3 + v0 , v0 )  
[98] move 4 * 2 , 3 + 2  | move 4 + 4 , 3 + 2  | move ua + 2 , 3 + 2  | move 4 * 2 , 4 + ul  | move 4 + 4 , 4 + ul  | move ua + 2 , 4 + ul  | ( move 4 , 3 + 2 ; move 4 , 0 )  | ( move 2 , 3 + 2 ; move ua , ua )  | ( move ua + 2 , 4 + ul ; pen 0 )  | ( move 2 , 4 + ul ; move ua , ua )  | ( move 4 + 4 , 4 + ul ; move 0 , ul )  | ( move ua + 2 , 4 + ul ; v0 = 4 )  | ( move 4 + 4 , 4 + ul ; v0 = ul )  | ( move ua + 2 , 4 + ul ; pen ua * 2 )  | ( pen 4 + ul ; move ua + 2 , 4 + ul )  | ( pen ua / 2 ; move ua + 2 , 4 + ul )  | ( move ua , 4 + ul ; move ul , ua * 3 )  | ( v0 = 3 + 2 ; move 3 + v0 , v0 )  | ( move ua , 4 + ul ; move 2 , ua ; pen 3 )  | ( move ua - 4 , 4 + ul ; move 4 + 2 , 0 )  | ( move ua + 2 , 4 + ul ; v0 = ua + ul )  | ( v0 = 4 ; move v0 + v0 , ul + v0 )  | ( move 2 , 3 + 2 ; move ua , ua ; v0 = 0 )  | ( v0 = 4 ; move v0 + v0 , v0 + ul )  | ( move ua - 2 , 4 + ul ; move 4 , 0 ; pen ua )  | ( move 2 , 4 + ul ; ( move ua , ua ; pen 0 ) )  | ( move ua , 4 + ul ; pen ul + ul ; move 2 , ua )  | ( move 0 , ul ; ( move 4 + ul , 4 ; move 3 , 0 ) )  | ( pen ua - ul ; move 4 * 2 , 3 + 2 ; v0 = ul )  | ( move ua , 4 + ul ; pen ua + ua ; move 4 - 2 , 0 )  | ( move ul , 4 + ul ; v0 = ua + ul ; move v0 , 0 )  
[99] move 3 + 2 , 2 / 3  | move 4 + ul , 2 / 3  | move ua - ul , 2 / 3  | ( move ul , 2 / 3 ; move 4 , ua ; pen 0 )  | ( move ul , 2 / 3 ; move 4 , ua ; pen 2 )  | ( move 0 , ua * 2 ; move 4 + ul , 2 / 3 ; pen 2 )  
[100] move 3 * 3 , 3 + 2  | move ua + 3 , 3 + 2  | move 3 * 3 , 4 + ul  | move ua + 3 , 4 + ul  | ( move 0 , 2 ; move 3 * 3 , 3 )  | ( move 3 , 3 + 2 ; move ua , 0 )  | ( move ua , 3 + 2 ; move 3 , ua )  | ( move ua , 4 + ul ; move 3 , ua )  | ( move ua + 3 , 4 + ul ; pen 4 + 3 )  | ( move ua + ul , 3 + 2 ; move 2 , ua )  | ( move 4 , 4 + ul ; move ua - ul , 0 )  | ( pen ul + ul ; move ua + 3 , 4 + ul )  | ( pen 2 ; move 0 , ul ; move ua + 3 , 4 )  | ( move 0 , ul ; move 3 , 4 ; move ua , ua )  | ( pen ua ; move ua , 4 + ul ; move 3 , 0 )  | ( v0 = ua + 3 ; move v0 , v0 + 2 )  | ( move ua , 4 + ul ; move 3 , ua ; pen ul )  | ( move ua + 3 , 4 + ul ; v0 = ua * 3 )  | ( v0 = 2 - ua ; move ua + 3 , v0 + 3 )  | ( move 4 , 4 + ul ; move ua - ul , 0 ; pen ul )  | ( v0 = 3 + 2 ; pen 3 ; move ua + 3 , v0 )  | ( move ua , 4 + ul ; v0 = 3 ; move v0 , 0 )  | ( v0 = ua - ul ; move v0 + 4 , 4 - v0 )  | ( move 4 + 3 , 4 + ul ; move ua - 4 , ua * 4 )  | ( move ua + 3 , 4 + ul ; ( pen 3 ; move 0 , 0 ) )  | ( move 3 + 3 , 4 + ul ; move 3 , ua ; pen 4 - ua )  | ( pen ua ; ( move 3 * 3 , 3 + 2 ; v0 = 4 * 3 ) )  | ( move 0 , 3 ; move ua + 3 , 2 - ua ; v0 = ua + 3 )  | ( move 2 + ul , 4 + ul ; v0 = ua ; move v0 , v0 )  | ( move ua + 3 , 4 + ul ; v0 = ul - 3 ; pen ul - 4 )  | ( v0 = 4 + ul ; move v0 , v0 ; move 4 , v0 * ua )  
[101] move 3 + 2 , 3 / 2  | move 4 + ul , 3 / 2  | move ul - ua , 3 / 2  | ( move 4 + ul , 3 / 2 ; move 0 , 2 )  | ( move 3 + 2 , 3 / 2 ; v0 = ua + ul ; pen ul )  | ( move 0 , ua ; v0 = ua - ul ; move v0 , 3 / 2 )  
[102] move 4 + 3 , 4 + 3  | move ua + ul , 4 + 3  | ( move 4 , 4 + 3 ; move 3 , ua )  | ( pen 3 ; move ua + ul , 4 + 3 )  | ( move ua + ul , 4 + 3 ; pen 4 )  | ( move ua , 4 + 3 ; move ul , ua )  | ( move ul , 4 + 3 ; move ua , ua )  | ( v0 = 4 + 3 ; move v0 , v0 )  | ( move ua + ul , 4 + 3 ; v0 = ua )  | ( move ul , 4 + 3 ; pen 2 ; move ua , 0 )  | ( pen 3 ; v0 = 4 + 3 ; move v0 , v0 )  | ( move 0 , 4 - ul ; move 3 , 4 ; move 4 , ua )  | ( v0 = 4 + 3 ; move v0 , v0 ; pen v0 )  | ( v0 = 4 + 3 ; move v0 , v0 ; pen 3 * v0 )  | ( v0 = 4 + 3 ; move v0 , v0 ; pen v0 - ul )  | ( v0 = 4 + 3 ; move v0 , v0 + ua ; move 0 , 3 )  | ( v0 = 4 + 3 ; pen v0 + v0 ; move v0 , v0 )  | ( move ua + ul , 4 + 3 ; pen 3 ; ( pen ua ; pen ua ) )  | ( v0 = 4 + 3 ; move v0 , v0 ; v1 = ul / v0 )  | ( pen ul ; ( v0 = 4 + 3 ; move v0 , v0 ; pen 3 ) )  
[103] move 4 * 2 , 3 + 3  | move 4 + 4 , 3 + 3  | move 4 + 4 , 4 + 2  | move 4 * 2 , 4 + 2  | move 4 + 4 , 3 * 2  | move 4 * 2 , 3 * 2  | move ua + 2 , 4 + 2  | move ua + 2 , 3 + 3  | move ua + 2 , 3 * 2  | ( move 4 * 2 , 3 * 2 ; pen 0 )  | ( pen ul ; move ua + 2 , 3 + 3 )  | ( pen ua ; move ua + 2 , 3 * 2 )  | ( move 0 , 3 ; move 4 + 4 , 4 - ul )  | ( move 3 + ul , 4 + 2 ; move 4 , ua )  | ( move ua / 4 , 4 + 2 ; move ua , ua )  | ( move ua + 2 , 3 + 3 ; v0 = 4 - 2 )  | ( v0 = ua + ul ; move v0 + ul , 4 + 2 )  | ( move 0 , 4 ; v0 = 4 ; move v0 + 4 , 2 )  | ( pen ua ; move ua + 2 , 3 * 2 ; pen ua / 3 )  | ( move 4 * 2 , 3 * 2 ; v0 = ua ; pen v0 )  | ( move ua + ul , 4 + 2 ; pen ul ; move ul , ua )  | ( move 0 , 0 ; move 0 , 4 + 2 ; move 4 + 4 , ua )  | ( move ua + ul , 4 + 2 ; v0 = ua ; move ul , v0 )  | ( ( move ua + 2 , 3 * 2 ; pen 4 ) ; v0 = ua * 2 )  
[104] move 3 + 2 , 4 * 3  | move 4 + ul , 4 * 3  | move ul - ua , 4 * 3  | move ua - ul , 4 * 3  | ( move ul , 4 * 3 ; move 4 , 0 )  | ( move 4 + ul , 4 * 3 ; pen 0 )  | ( move 3 + 2 , 4 * 3 ; pen ua )  | ( move 4 , 4 * 3 ; move ul , ua )  | ( move 4 , 4 * 3 ; move ul , ua ; pen 0 )  | ( move 2 , 4 * 3 ; move 3 , ua ; pen ul )  | ( v0 = 4 ; move ul + v0 , v0 * 3 )  | ( move 4 , 4 * 3 ; v0 = ua ; move ul , ua )  | ( ( move 3 + 2 , 4 * 3 ; pen 4 ) ; v0 = ua )  | ( move 0 , ul ; move 4 + ul , ua / 4 ; v0 = ua )  
[105] move 4 + 4 , 2 - 3  | move 4 * 2 , 2 - 3  | move 4 * 2 , 3 - 4  | move 4 + 4 , 3 - 4  | move 4 + 4 , 0 - ul  | move 4 * 2 , 0 - ul  | move 4 * 2 , ul - 2  | move 4 + 4 , ul - 2  | move 4 * 2 , ua - ul  | move 4 + 4 , ua - ul  | move ua + ul , 0 - ul  | ( pen 2 ; move 4 + 4 , 0 - ul )  | ( pen 2 ; move 4 + 4 , ua - ul )  | ( move 4 * 2 , 3 - 4 ; v0 = 0 )  | ( move 4 * 2 , ul - 2 ; v0 = 2 )  | ( move 4 * 2 , ua - ul ; move 0 , 0 )  | ( pen ua + ul ; move 4 * 2 , 2 - 3 )  | ( move 3 , ua - ul ; move 4 + ul , ua )  | ( v0 = 4 * 2 ; move v0 , ua - ul )  | ( pen ul ; move 4 , ua - ul ; move 4 , 0 )  | ( move ua + ul , 0 - ul ; move ul / 2 , 0 )  | ( v0 = 4 ; move v0 + v0 , 3 - v0 )  | ( move ua + ul , ul - 2 ; move 3 / 4 , ua )  | ( move 4 * 2 , 0 - ul ; pen ul + ul ; pen 3 )  | ( move 3 , ua - ul ; move ul , ua ; move 4 , ua )  | ( move 4 + 3 , ua - ul ; pen ua ; move ul , ua )  | ( move 0 , ul - 3 ; move 4 + 4 , ul ; v0 = ul )  | ( v0 = 4 ; move 2 * v0 , ua - ul ; pen v0 )  | ( move 4 , ul - 2 ; v0 = 2 ; move v0 + 2 , 0 )  | ( move 4 + 4 , ua - ul ; pen ua / 4 ; v0 = ul )  
[106] move 3 + 2 , 2 / 4  | move 3 + 2 , ul / 2  | move 4 + ul , 2 / 4  | move 4 + ul , ul / 2  | move ul - ua , 2 / 4  | move ua - ul , ul / 2  | move ul - ua , ul / 2  | ( move ul , ul / 2 ; move 4 , 0 )  | ( move ul , ul / 2 ; move 4 , ua )  | ( move ul , ul / 2 ; move 2 * 2 , 0 )  | ( pen ua + ul ; move 4 + ul , 2 / 4 )  | ( pen ul / 4 ; move 4 + ul , ul / 2 )  | ( move ul - ua , ul / 2 ; move ul , ua )  | ( move 4 , 2 / 4 ; pen ul ; move ul , 0 )  | ( pen ua ; move 2 , ul / 2 ; move 3 , ua )  | ( move 4 , ul / 2 ; move ul , ua ; pen ul )  | ( ( move 2 + ul , ul / 2 ; v0 = 2 ) ; move v0 , ua )  | ( ( pen 2 ; move ua - ul , ul / 2 ) ; pen ul ; v0 = 0 )  | ( ( pen ua * 4 ; move 4 + ul , ul / 2 ) ; pen ul ; pen ul )  
[107] move 3 * 3 , 3 + 3  | move 3 * 3 , 4 + 2  | move 3 * 3 , 3 * 2  | move ua + 3 , 4 + 2  | move ua + 3 , 3 + 3  | move ua + 3 , 3 * 2  | ( pen 2 ; move ua + 3 , 4 + 2 )  | ( move ua , 4 + 2 ; move 3 , ua )  | ( move ua + 3 , 3 * 2 ; pen ul )  | ( move ua + ul , 4 + 2 ; move 2 , 0 )  | ( move 4 + ul , 4 + 2 ; move 4 , ua )  | ( move ua , 4 + 2 ; move 2 + ul , ua )  | ( pen ul ; pen 3 ; move ua + 3 , 3 * 2 )  | ( v0 = ua + 3 ; move v0 , v0 + 3 )  | ( move 3 , 4 + 2 ; move ua , 0 ; v0 = 4 )  | ( v0 = 3 ; move ua + v0 , v0 + v0 )  | ( v0 = ua + 3 ; move v0 , v0 + v0 )  | ( move 0 , 3 ; v0 = ua ; move ua + 3 , 3 )  | ( v0 = 3 ; move v0 * v0 , v0 + v0 )  | ( pen ul ; v0 = 3 ; move ua + 3 , 3 + v0 )  | ( ( pen ul ; v0 = 0 ) ; move ua + 3 , 3 + 3 )  | ( v0 = 4 - ul ; move ua + v0 , v0 + v0 )  | ( pen ua ; v0 = 3 ; move ua + v0 , v0 + 3 )  | ( move ua + 3 , 3 * 2 ; v0 = ul / 2 ; pen ul )  | ( ( move 0 , ul + ul ; move 3 , 4 ) ; move ua , ua )  | ( pen ua + ul ; v0 = ua + 3 ; move v0 , 3 + 3 )  | ( v0 = 3 ; move v0 * v0 , v0 + v0 ; pen ul )  
[108] move 4 * 2 , 4 + 3  | move 4 + 4 , 4 + 3  | move ua + 2 , 4 + 3  | move ua + ul , 4 + 3  | ( move 0 , 4 ; move 4 * 2 , 3 )  | ( move 2 , 4 + 3 ; move ua , ua * 3 )  | ( move 4 + 3 , 4 + 3 ; move ul , ua )  | ( move ul , 4 + 3 ; move 4 + 3 , ua )  | ( move ua , 4 + 3 ; move ul + ul , 0 )  | ( pen 3 ; move ua + 2 , 4 + 3 ; pen ua )  | ( v0 = 4 + 3 ; move ul + v0 , v0 )  | ( v0 = 4 * 2 ; move v0 , v0 - ul )  | ( move 0 , 4 ; move 3 , 3 ; move 4 + ul , 0 )  | ( v0 = 4 ; move v0 , 3 + v0 ; move v0 , ua )  | ( move ua + 2 , 4 + 3 ; v0 = ul ; v1 = v0 )  | ( ( move 0 , 4 ; move 2 , 4 - ul ) ; move 4 + 2 , ua )  
[109] move 3 + 2 , 4 * 4  | move 4 + ul , 4 * 4  | move 4 + ul , 2 / ua  | move 4 + ul , ul / 3  | move ul - ua , 2 / ua  | move ua - ul , 2 / ua  | move ul - ua , ul / 3  | ( pen 3 / ua ; move 3 + 2 , 4 * 4 )  | ( v0 = 4 ; move 4 + ul , v0 * v0 )  | ( v0 = 4 * 4 ; pen ua ; move 3 + 2 , v0 )  | ( move 4 , 4 * 4 ; move ul , ua ; v0 = 2 + ul )  | ( v0 = 2 + 2 ; pen ul ; move ul + v0 , v0 * v0 )  
[110] move 3 * 3 , 4 + 3  | move ua + 3 , 4 + 3  | ( v0 = 4 + 3 ; move v0 + 2 , v0 )  | ( move 0 , 4 ; move 3 * 3 , 3 ; v0 = ua )  | ( move 3 , 4 + 3 ; v0 = ul / ua ; move ua , 0 )  | ( ( move ul , 4 + 3 ; move 2 , ua ) ; move ua , ua )  
[111] move 3 + 2 , 4 / 3  | move 4 + ul , 4 / 3  | ( move 2 , 4 / 3 ; move 3 , ua )  | ( move 4 , 4 / 3 ; move ul , 0 )  | ( move ul , 4 / 3 ; move 4 , ua )  | ( move 3 , 4 / 3 ; move 2 , ua * 3 )  | ( move 4 + ul , 4 / 3 ; v0 = 3 )  | ( move 3 + 2 , 4 / 3 ; pen ul ; pen 3 )  | ( move 4 + ul , 4 / 3 ; v0 = ua - ul )  | ( pen 3 ; move 4 + ul , 4 / 3 ; v0 = ul )  
[112] move 4 + 3 , 4 + 4  | move 4 + 3 , 4 * 2  | move 4 + 4 , 4 * 2  | move 4 * 2 , 4 + 4  | move ua + 2 , 4 * 2  | move ua + 2 , 4 + 4  | move ua + ul , 4 + 4  | move ua + ul , 4 * 2  | ( move 0 , 4 ; move 4 + 3 , 4 )  | ( move ul , 4 * 2 ; move ua , 0 )  | ( move ua + ul , 4 + 4 ; pen 2 )  | ( move ua , 4 * 2 ; move ul , ua )  | ( move ul , 4 + 4 ; move ua , ua )  | ( move ul , 4 * 2 ; move ua , ua )  | ( pen ua ; move ua + ul , 4 * 2 )  | ( v0 = 4 + 4 ; move v0 , v0 )  | ( v0 = 4 * 2 ; move v0 , v0 )  | ( move ua + ul , 4 * 2 ; v0 = 4 )  | ( pen ua * 4 ; move ua + ul , 4 + 4 )  | ( move ua + ul , 4 * 2 ; pen 3 / ua )  | ( pen ua ; move ul , 4 + 4 ; move ua , 0 )  | ( move ul , 4 * 2 ; pen 3 ; move ua , ua )  | ( v0 = 4 + 3 ; move v0 , v0 + ul )  | ( move ul , 4 * 2 ; move ua , 0 ; v0 = 0 )  | ( move ua , 4 * 2 ; ( pen 2 ; move ul , ua ) )  | ( pen ua - ul ; move ua + ul , 4 * 2 ; pen 0 )  | ( move ua , 4 * 2 ; v0 = ul ; move v0 , ua )  | ( v0 = ua + 2 ; pen ul ; move v0 , 4 * v0 )  | ( move ua + ul , 4 * 2 ; pen 3 / 4 ; v0 = ul )  | ( ( move 0 , 4 ; v0 = 4 ) ; move 3 + v0 , v0 )  | ( v0 = 4 ; v1 = v0 ; move ua + ul , v0 + v0 )  
[113] move 4 + 3 , 3 * 3  | move ua + ul , 3 * 3  | ( move ul , 3 * 3 ; move ua , 0 )  | ( pen 3 ; move ua + ul , 3 * 3 )  | ( move ul , 3 * 3 ; move ua , ua )  | ( pen ua ; move ua + ul , 3 * 3 )  | ( move ua + ul , 3 * 3 ; v0 = ul )  | ( move ua + ul , 3 * 3 ; pen 2 - ua )  | ( move ua , 3 * 3 ; move ul , ua + ua )  | ( v0 = 3 * 3 ; move ua + ul , v0 )  | ( v0 = 4 + 3 ; move v0 , 2 + v0 )  | ( move 4 + 3 , 3 * 3 ; v0 = ua ; pen v0 )  | ( move ul , 3 * 3 ; v0 = ua ; move v0 , 0 )  | ( move ua + ul , 3 * 3 ; v0 = 2 ; pen v0 )  | ( move ua , 3 * 3 ; move 4 / ua , 0 ; pen 0 - 4 )  
[114] move 3 + 2 , 3 / 4  | move 4 + ul , 3 / 4  | move ua - ul , 3 / 4  | ( pen ua * ua ; move 3 + 2 , 3 / 4 )  | ( move 2 , 3 / 4 ; move 3 , 0 ; pen 3 )  | ( ( move 4 + ul , 3 / 4 ; pen ua / 3 ) ; v0 = ul )  
[115] move 4 + 4 , 3 * 3  | move 4 * 2 , 3 * 3  | ( v0 = 3 * 3 ; move v0 - ul , v0 )  | ( pen ul - 3 ; pen ul ; move ua + 2 , 3 * 3 )  | ( move 0 , 2 ; v0 = 4 ; move v0 + v0 , 3 + v0 )  
[116] move 3 * 3 , 2 / 3  | move ua + 3 , 2 / 3  | move ua + 4 , 2 / 3  | ( move 3 , 2 / 3 ; move ua , ua )  | ( v0 = 3 ; move v0 * v0 , 2 / v0 )  | ( move ua + 4 , 2 / 3 ; pen 2 - ul ; v0 = 3 )  
[117] move 4 * 2 , 3 / 2  | move 4 + 4 , 3 / 2  | move ua + 2 , 3 / 2  | ( move ua , 3 / 2 ; move 2 , ua )  | ( pen ua ; move ua + 2 , 3 / 2 )  | ( move 0 , ul ; move 4 * 2 , ul / 2 )  | ( move 4 , 3 / 2 ; move 4 , ua ; move 0 , 4 )  | ( pen ul ; pen ua + ul ; move 3 * 3 , 3 / 2 )  | ( v0 = ul + ul ; move v0 + ua , 3 / v0 )  | ( v0 = 3 / 2 ; move v0 , v0 ; move ua , 0 )  | ( v0 = ua ; move ua , 3 / 2 ; move ul + ul , v0 )  
[118] move 3 * 3 , 3 - 4  | move ua + 3 , 2 - 3  | move 3 * 3 , 0 - ul  | move ua + 4 , 2 - 3  | move ua + 3 , 3 - 4  | move 3 * 3 , ul - 2  | move ua + 3 , 0 - ul  | move ua + 3 , ul - 2  | move ua + 4 , ul - 2  | move 3 * 3 , ua - ul  | move ua + 3 , ua - ul  | move ua + 4 , ua - ul  | ( move 3 * 3 , 0 - ul ; pen 2 )  | ( move ua , 0 - ul ; move 3 , 0 )  | ( move ua , 0 - ul ; move 3 , ua )  | ( move ua + 3 , ua - ul ; pen 4 )  | ( move 3 * 3 , ua - ul ; pen ul )  | ( move 4 + ul , ul - 2 ; move 4 , 0 )  | ( move 3 , ua - ul ; move ua , ua * 2 )  | ( move 4 * 2 , ua - ul ; move ul , ua )  | ( move 3 , ua - ul ; move ua , ua + ua )  | ( move 2 , ua - ul ; move ua + ul , ua )  | ( v0 = 0 - ul ; move ua + 3 , v0 )  | ( move ua + 3 , 2 - 3 ; move v0 , v0 )  | ( pen ul ; move ua , 0 - ul ; move 3 , ua )  | ( pen ul ; move ua , ua - ul ; move 3 , 0 )  | ( move 2 , 0 - ul ; move ua + ul , ua + ua )  | ( move 3 , 2 - 3 ; move ua , ua * 4 ; pen ua )  | ( move ua , ul - 2 ; pen ua + ul ; move 3 , 0 )  | ( move ua / 2 , 0 - ul ; pen ua - 3 ; move ua , ua )  | ( v0 = ua - ul ; pen v0 ; move v0 + 4 , v0 )  | ( ( move ua , 3 - 4 ; move ul , ua ) ; move ul + ul , ua )  
[119] move 4 + 4 , 4 * 2  | move 4 * 2 , 4 + 4  | move 4 * 2 , 4 * 2  | move 4 + 4 , 4 + 4  | move ua + 2 , 4 + 4  | move ua + 2 , 4 * 2  | ( move 4 , 4 + 4 ; move 4 , 0 )  | ( move 4 , 4 * 2 ; move 4 , 0 )  | ( move ua , 4 * 2 ; move 2 , 0 )  | ( v0 = 4 + 4 ; move v0 , v0 )  | ( v0 = 4 * 2 ; move v0 , v0 )  | ( move 0 , 3 ; move 4 * 2 , 4 + ul )  | ( move 3 , 4 + 4 ; move 4 + ul , ua )  | ( move 4 * 2 , 4 + 4 ; pen ua * ua )  | ( move ua - ul , 4 * 2 ; move 3 , ua )  | ( v0 = 4 ; move 4 * 2 , v0 + 4 )  | ( move ua + 2 , 4 * 2 ; v0 = 4 - ua )  | ( v0 = 4 ; move v0 + 4 , v0 + v0 )  | ( v0 = 4 + 4 ; move v0 , v0 ; pen ul )  | ( v0 = 4 * 2 ; pen ul ; move v0 , v0 )  | ( v0 = 4 + 4 ; pen v0 ; move v0 , v0 )  | ( v0 = 4 * 2 ; move v0 , v0 ; pen v0 )  | ( v0 = 4 * 2 ; pen v0 ; move v0 , v0 )  | ( v0 = 4 + 4 ; move v0 , v0 ; pen v0 )  | ( v0 = 4 * 2 ; move v0 , v0 ; move 0 , v0 )  | ( v0 = 4 * 2 ; move v0 , v0 ; v1 = v0 )  | ( v0 = 4 * 2 ; move v0 , v0 ; pen v0 * ua )  | ( ( pen 4 + ul ; v0 = 4 * 2 ) ; move v0 , v0 )  | ( move ua , 4 * 2 ; move ul + ul , ua ; v0 = 0 - 4 )  | ( ( move ul , 4 * 2 ; move ua + ul , ua ) ; pen ul - ua )  
[120] move 4 + 4 , 2 / 3  | move 4 * 2 , 2 / 3  | move ua + 2 , 2 / 3  | move ua + ul , 2 / 3  | ( move 4 * 2 , 2 / 3 ; pen ul )  | ( pen ua ; move ua + 2 , 2 / 3 )  | ( move ul + ul , 2 / 3 ; move ua , ua )  | ( v0 = ul ; move ua + v0 , 2 / 3 )  | ( v0 = ua + ul ; move v0 , 2 / 3 )  
[121] move 3 * 3 , 3 * 3  | move ua + 3 , 3 * 3  | ( v0 = 3 * 3 ; move v0 , v0 )  | ( v0 = 3 * 3 ; move v0 , v0 - ua )  | ( v0 = 3 ; move v0 * v0 , v0 * v0 )  | ( v0 = 3 * 3 ; move v0 , v0 ; pen v0 )  | ( v0 = 3 * 3 ; move v0 , v0 ; v1 = 2 )  | ( move 0 , ua + 2 ; move ul , 4 ; move ua + 3 , 3 )  | ( v0 = ua + 3 ; v1 = 3 * v0 ; move v0 , v1 )  
[122] move 4 + 3 , 4 / 3  | move ua + ul , 4 / 3  | ( move ua + ul , 4 / 3 ; pen ua )  | ( move ul , 4 / 3 ; move ua , ua ; pen 3 )  | ( pen ul ; move ua + ul , 4 / 3 ; v0 = ul )  | ( move ul , 4 / 3 ; ( move ua , ua ; v0 = 2 ) )  | ( move ul , 4 / 3 ; move ua , ua * 2 ; pen ul / 4 )  | ( ( move ua + ul , 4 / 3 ; pen ul ) ; move 0 , 2 - ul )  
[123] move 4 + 4 , 4 * 3  | move 4 * 2 , 4 * 3  | move ua + 2 , 4 * 3  | ( move 4 + 4 , 4 * 3 ; move 0 , 0 )  | ( move ua / 4 , 4 * 3 ; move ua , 0 )  | ( move 0 , ul ; move 4 * 2 , ua / 4 )  | ( move 3 + ul , 4 * 3 ; move 4 , ua )  | ( move 3 + ul , 4 * 3 ; move 3 + ul , ua )  | ( pen ua ; move 0 , ua ; move 4 + 4 , 4 * 3 )  | ( pen ua ; v0 = 4 * 3 ; move 4 - v0 , v0 )  | ( move ua + 2 , 4 * 3 ; pen ua * 2 ; v0 = 3 )  | ( move 3 / 4 , 4 * 3 ; move ul , ua ; move ua , ua + ua )  
[124] move 4 + 3 , 4 * 4  | ( v0 = ua + ul ; move v0 , 2 / v0 ; pen ul / v0 )  
[125] move 4 + 4 , 2 / 4  | move 4 * 2 , 2 / 4  | move ua + 2 , 2 / 4  | move 4 * 2 , ul / 2  | move 4 + 4 , ul / 2  | move ua + 2 , ul / 2  | ( move 4 , ul / 2 ; move 4 , ua )  | ( move 0 , ul / 2 ; move 4 * 2 , ua )  | ( pen ul / ua ; move 4 + 4 , ul / 2 )  | ( move 4 , 2 / 4 ; ( pen 4 + ul ; move 4 , ua ) )  | ( v0 = 4 ; move v0 , 2 / v0 ; move v0 , 0 )  | ( move ul , ul / 2 ; move ua + ul , ua * 3 ; pen 0 )  | ( move 3 + ul , ul / 2 ; ( pen ul ; move 4 , 0 ) ; pen ua )  
[126] move 3 * 3 , 4 * 3  | move ua + 3 , 4 * 3  | ( move 3 , 4 * 3 ; move ua , 0 )  | ( move 0 , 3 ; move 3 * 3 , 3 * 3 )  | ( move ua + 4 , 4 * 3 ; v0 = 3 )  | ( move ua + 3 , 4 * 3 ; v0 = ul )  | ( v0 = 3 ; move ua + v0 , 4 * 3 )  | ( move ua , 4 * 3 ; move 3 , 0 ; pen 4 )  | ( move ua + 2 , 4 * 3 ; move 2 - ul , ua )  
[127] move 4 + 3 , 3 / 4  | move ua + ul , 3 / 4  | ( pen 2 ; move 4 + 3 , 3 / 4 )  | ( move ua , 3 / 4 ; move ul , 0 )  | ( move ul , 3 / 4 ; move ua , ua )  | ( move ua + ul , 3 / 4 ; v0 = 4 )  | ( move ul , 3 / 4 ; v0 = 3 ; move ua , 0 )  | ( move ua + ul , 3 / 4 ; pen ua ; v0 = 0 )  | ( ( pen ua ; move ua , 3 / 4 ) ; move ul , 0 )  
[128] move 3 * 3 , 2 / 4  | move 3 * 3 , ul / 2  | move ua + 3 , ul / 2  | ( move 3 * 3 , ul / 2 ; v0 = 3 )  | ( move 4 + 4 , ul / 2 ; move ul , 0 )  | ( move 4 , ul / 2 ; move 4 , ua + ua ; move ul , ua )  
[129] move 3 * 3 , 4 * 4  | ( pen ul ; move ua + 2 , 4 * 4 ; move ul , ua )  | ( move 3 + ul , 4 * 4 ; move ul , ua ; move 4 , 0 )  
[130] move 3 * 3 , 3 / 4  | move ua + 2 , 3 / 4  | move ua + 3 , 3 / 4  
[131] move 4 * 2 , 4 / 3  | move 4 + 4 , 4 / 3  | move ua + 2 , 4 / 3  | ( move 4 + ul , 4 / 3 ; move 3 , 0 )  | ( move 4 * 2 , 4 / 3 ; v0 = ul - 2 )  | ( v0 = 4 / 3 ; move v0 * ua , v0 )  | ( move ua + 2 , 4 / 3 ; move ul / ua , ua )  
[132] move 4 * 2 , 4 * 4  | move 4 + 4 , 4 * 4  | move ua + 2 , 4 * 4  | move ua + ul , 4 * 4  | ( pen 3 ; move 4 + 4 , 4 * 4 )  | ( pen 3 ; move ua + 2 , 4 * 4 ; pen ua )  | ( v0 = 4 * 2 ; move v0 , v0 + v0 )  | ( v0 = 4 + 4 ; move v0 , v0 + v0 )  
[133] move 3 * 3 , 4 / 3  
[134] move 4 * 3 , 3 / 4  | ( v0 = 4 * 3 ; move v0 , 3 / 4 )  
[135] move ua + 4 , 0 - 4  | move ua + 4 , ua - 4  | ( move ua + 4 , ua - 4 ; pen 0 )  | ( move ua , 0 - 4 ; pen ul ; move 4 , ua )  | ( pen 4 ; ( move 4 , 0 - 4 ; move ua , ua ) )  | ( v0 = 2 * 2 ; move v0 + ua , ua - v0 )  | ( move ua - 4 , ul - 2 ; move 4 , ul - 4 ; move ua , 0 )  
[136] move ua + 4 , 2 - 3  | move ua + 4 , 3 - 4  | move ua + 4 , 0 - ul  | move ua + 4 , ul - 2  | move ua + 4 , ua - ul  | ( move 4 , 2 - 3 ; move ua , ua )  | ( pen 2 ; move ua + 4 , ul - 2 )  | ( move ua , ua - ul ; move 4 , 0 )  | ( move 4 , ua - ul ; move ua , 0 )  | ( move ua + 4 , ua - ul ; pen 0 )  | ( move 4 , ua - ul ; move ua , ua )  | ( move ua + 4 , ua - ul ; pen ua )  | ( move 0 , 0 ; move ua + 4 , ua - ul )  | ( move ua , 0 - ul ; move 4 , ua * 2 )  | ( move ua + 4 , 0 - ul ; pen 2 - ua )  | ( move ul , ul - 2 ; move ua + 3 , ua )  | ( v0 = ua + 4 ; move v0 , ua - ul )  | ( v0 = ua - ul ; move ua + 4 , v0 )  | ( v0 = ua ; move ua + 4 , v0 - ul )  | ( v0 = ua - ul ; move v0 * 2 , v0 )  | ( ( pen 3 ; move ua , ul - 2 ) ; move 4 , 0 )  | ( v0 = ua - ul ; move v0 + v0 , v0 )  | ( move 4 , ua - ul ; move ua , 0 ; v0 = 0 )  | ( move ua , 3 - 4 ; move ua - 2 , ua ; pen 4 )  | ( ( move 4 , ua - ul ; move ua , ua ) ; pen 0 )  | ( move ul , ua - ul ; move 3 , ua ; move ua , ua )  | ( pen ul ; move ua + 4 , 2 - 3 ; v0 = ua / 2 )  | ( move ua + 4 , ua - ul ; move 0 , 2 + ul ; pen ua )  | ( move ua , ua - ul ; move ua - 2 , ua ; v0 = ul )  | ( pen ul ; move ua + 4 , ua - ul ; move ul , 4 - ua )  | ( move ua + 4 , ul - 2 ; v0 = 4 - ul ; v1 = 3 )  
[137] move 3 + 2 , 2 / ua  | move 3 + 2 , ul / 3  | move 4 + ul , 2 / ua  | move 4 + ul , ul / 3  | ( move 3 , 2 / ua ; move 2 , ua )  | ( move 4 , 2 / ua ; move ul , ua )  | ( move 3 , 2 / ua ; move ul + ul , 0 )  | ( move 0 , 2 / ua ; move 4 + ul , ua )  | ( move 4 + ul , 2 / ua ; v0 = ua )  | ( move 4 + ul , 2 / ua ; pen 4 - ua )  | ( pen 0 ; pen 4 ; move 4 + ul , 2 / ua )  | ( move ul , 2 / ua ; pen ua ; move 4 , ua )  | ( move ul , 2 / ua ; move ul , 0 ; move 3 , 0 )  | ( ( move 4 + ul , 2 / ua ; pen ul ) ; pen 3 )  | ( move 4 , 2 / ua ; move ul , ua ; v0 = 3 + ul )  | ( move 4 + ul , 2 / ua ; move 0 , ua * 4 ; pen ul )  | ( move 4 + ul , 2 / ua ; move 0 , 4 / ua ; pen ul )  | ( ( move ul , ul / 3 ; move 4 , ua + ua ) ; v0 = ul )  
[138] move 3 + 2 , ua / 3  | move 4 + ul , ua / 3  | move ua - ul , ua / 3  | move ul - ua , ua / 3  | ( move 4 , ua / 3 ; move ul , 0 )  | ( move ul , ua / 3 ; move 4 , 0 )  | ( move 4 , ua / 3 ; move ul , ua )  | ( move 3 , ua / 3 ; pen ua ; move 2 , 0 )  | ( move 4 , ua / 3 ; pen 3 ; move ul , 0 )  | ( move 2 , ua / 3 ; move 2 + ul , ua * 3 )  | ( move 2 + ul , ua / 3 ; move 3 - ul , ua )  | ( move 4 + ul , ua / 3 ; pen 2 ; move 0 , ua + 2 )  | ( v0 = ua / 3 ; move 4 + ul , v0 ; v1 = ul )  
[139] move ua + 4 , 4 + 3  | ( move ua + 4 , 4 + 3 ; pen 4 )  | ( move 4 * 2 , 4 + 3 ; move 2 , ua )  | ( move ul , 4 ; move ua , 3 ; move 4 , 0 )  | ( v0 = ua + 4 ; move v0 , v0 + 3 )  | ( move 0 , 4 ; pen ua * 4 ; move ua + 4 , 3 )  | ( move 0 , 4 + 2 ; move ua + 4 , ul ; pen ua )  | ( move 0 , 3 ; v0 = ua + 4 ; move v0 , v0 )  | ( v0 = ua + 4 ; move v0 , 3 + v0 ; pen v0 )  
[140] move 3 + 2 , 3 / ua  | move 4 + ul , 3 / ua  | move 4 + ul , ul / 2  | move ul - ua , 3 / ua  | move ua - ul , 3 / ua  | move ua - ul , ul / 2  | ( move 4 , 3 / ua ; move ul , 0 )  | ( move ul , 3 / ua ; move 4 , 0 )  | ( pen ul ; move 3 + 2 , 3 / ua )  | ( move 4 , 3 / ua ; move ul , ua )  | ( move ul - ua , 3 / ua ; pen 3 )  | ( pen ua ; move ul - ua , 3 / ua )  | ( pen ul ; move ul - ua , 3 / ua )  | ( move 2 , 3 / ua ; move 2 + ul , 0 )  | ( move 3 + 2 , 3 / ua ; v0 = ul )  | ( move 4 + ul , 3 / ua ; v0 = 3 )  | ( move ua - ul , 3 / ua ; pen 3 * 2 )  | ( move ul , 3 / ua ; move 3 + ul , ua )  | ( v0 = 3 / ua ; move ul - ua , v0 )  | ( move 4 + ul , 3 / ua ; v0 = ua + ul )  | ( move 4 , 3 / ua ; move ul , ua ; v0 = ul )  | ( move 2 + 2 , 3 / ua ; move ul , 0 ; pen 4 - 3 )  | ( pen ul ; ( move 4 + ul , 3 / ua ; v0 = ul ) )  | ( move ul - ua , 3 / ua ; pen ul ; v0 = ua + ul )  
[141] move 3 + 2 , 4 / ua  | move 4 + ul , 4 / ua  | ( move 4 + ul , 4 / ua ; pen 0 )  | ( move 3 + 2 , 4 / ua ; v0 = ul )  | ( move 4 , 4 / ua ; move ul , ua * 3 )  | ( move ul , 4 / ua ; move 4 , ua + ua )  | ( move 3 , 4 / ua ; move ul - ua , ua )  | ( move ul , 4 / ua ; move ul , 0 ; move 3 , 0 )  | ( move 4 , 4 / ua ; pen ua + 2 ; move ul , ua )  | ( move 3 + 2 , 4 / ua ; v0 = 0 ; pen v0 )  | ( pen 2 / ua ; v0 = 4 / ua ; move 4 + ul , v0 + ua )  
[142] move 3 + 2 , ul / 3  | move 4 + ul , ul / 3  | move ul - ua , ul / 3  | ( pen ul ; move 4 + ul , ul / 3 )  | ( pen ua ; move 4 , ul / 3 ; move ul , 0 )  | ( move ua - ul , ul / 3 ; move 0 , ua * ua ; pen 4 )  | ( ( move ul , 0 ; move ul - ua , ul / 3 ) ; v0 = 2 )  
[143] move 3 + 2 , ua / 4  | move 4 + ul , ua / 4  | move ul - ua , ua / 4  | move ua - ul , ua / 4  | ( move ul , ua / 4 ; move 4 , 0 )  | ( move 4 , ua / 4 ; move ul , 0 )  | ( move 4 + ul , ua / 4 ; v0 = 3 )  | ( move 4 + ul , ua / 4 ; pen 3 * 2 )  | ( move 4 + ul , ua / 4 ; v0 = ua )  | ( pen 2 / ua ; move ua - ul , ua / 4 )  | ( move 4 , ua / 4 ; pen ua ; move ul , ua )  | ( move 3 + 2 , ua / 4 ; v0 = ua ; pen 3 )  | ( v0 = ua / 4 ; pen v0 ; move 4 + ul , v0 )  | ( ( move 4 , ua / 4 ; move ul , ua ) ; v0 = ua + ul )  | ( move 4 + ul , ua / 4 ; v0 = 3 ; v1 = v0 / ua )  
[144] move ua + 4 , 2 / 3  
[145] move 4 + 3 , 2 / ua  | ( move ul , 2 / ua ; move 4 + 2 , ua ; pen 0 )  | ( ( pen ul ; move ul , 2 / ua ; pen 3 ) ; move 3 * 2 , 0 )  
[146] move 3 + 2 , ul / 4  | move 4 + ul , ul / 4  | move ul - ua , ul / 4  | move ua - ul , ul / 4  | ( move 3 , ul / 4 ; move 2 , 0 )  | ( move 3 , ul / 4 ; move 2 , ua )  | ( move 4 , ul / 4 ; move ul , 0 )  | ( move 4 , ul / 4 ; move ul , ua )  | ( move ul , ul / 4 ; move 4 , ua )  | ( move 2 , ul / 4 ; move 3 , ua + ua )  | ( move 4 + ul , ul / 4 ; v0 = ul )  | ( v0 = 4 ; move ul + v0 , ul / v0 )  | ( v0 = 4 ; move v0 + ul , ul / v0 )  | ( move ua / 2 , ul / 4 ; move ul + ul , 0 )  | ( move 2 , ul / 4 ; move 4 - ul , ua + ua )  | ( move 3 , ul / 4 ; move 2 , ua ; v0 = ua )  | ( move ua - ul , ul / 4 ; pen ua + ul ; pen ua )  | ( move ul , ul / 4 ; move 4 , ua ; v0 = 4 - ul )  | ( pen 3 ; ( move 4 + ul , ul / 4 ; pen 3 + ul ) )  | ( move 4 , ul / 4 ; move ul , ua + ua ; v0 = ua )  | ( pen ul ; ( move 2 , ul / 4 ; move 3 , 0 ; pen 0 ) )  | ( move 4 + ul , ul / 4 ; v0 = ua ; v1 = v0 )  | ( v0 = ul ; v1 = v0 ; move 4 + ul , ul / 4 )  | ( move 4 + ul , ul / 4 ; move 0 , ul - ua ; v0 = ua )  
[147] move ua + 4 , 4 * 3  | ( move ua , 4 * 3 ; move 4 , ua )  | ( pen ul ; move ua + 4 , 4 * 3 )  | ( move ua + 4 , 4 * 3 ; move 0 , ua )  | ( pen ul ; move 4 , 4 * 3 ; move ua , 0 )  | ( v0 = 4 ; move v0 + ua , v0 * 3 )  | ( move ua , 4 * 3 ; pen ul + ul ; move 4 , ua )  | ( v0 = 4 ; move ua + v0 , v0 * 3 ; v1 = v0 )  
[148] move 4 + 3 , 3 / ua  | move 4 * 2 , 3 / ua  | move ua + 2 , 3 / ua  | ( move 3 , 3 / ua ; move 4 , ua )  | ( move 4 + 3 , 3 / ua ; move 0 , ul )  | ( move ul , 3 / ua ; move 4 + 2 , ua )  | ( move 4 + 3 , 3 / ua ; v0 = ul - 2 )  | ( pen ua - ul ; move 3 / 4 , 3 / ua ; move ua , 0 )  
[149] move 4 * 2 , 2 / ua  | move 4 + 4 , 2 / ua  | move 4 * 2 , ul / 3  | move ua + 2 , 2 / ua  | move ua + 2 , ul / 3  | move ua + 3 , ul / 3  | ( move 4 , 2 / ua ; move 4 , ua * 3 )  | ( move ua , ul / 3 ; move 2 , ua * 4 )  | ( move ua + ul , 2 / ua ; move ul / 2 , 0 )  | ( move 3 / ua , 2 / ua ; move ua + ul , ua )  
[150] move 3 * 3 , 2 / ua  | move 3 * 3 , ul / 3  | move ua + 3 , 2 / ua  | move ua + 3 , ul / 3  | ( move 3 * 3 , 2 / ua ; pen 3 )  | ( move 3 , 2 / ua ; move ua , 0 )  | ( move 3 , 2 / ua ; move ua , ua )  | ( v0 = ua ; move 3 + v0 , 2 / v0 )  | ( v0 = 3 ; move ua + v0 , ul / v0 )  | ( move 3 , 2 / ua ; move ua , ua * 4 ; pen ul )  | ( v0 = ua ; move 3 , 2 / ua ; move v0 , v0 )  | ( move ua + ul , 2 / ua ; move 2 , 0 ; v0 = ua )  
[151] move 4 + 3 , ua / 3  | move ua + ul , ua / 3  | ( move 3 , ua / 3 ; move 4 , ua )  | ( pen 3 ; move ua + ul , ua / 3 )  | ( move ul , ua / 3 ; move ua , ua )  | ( move 0 , ua / 3 ; move 4 + 3 , 0 )  | ( move ua , ua / 3 ; move ul / 2 , ua )  | ( move 4 + 3 , ua / 3 ; move 0 , 3 + ul )  
[152] move 4 * 2 , ua / 3  | move 4 + 4 , ua / 3  | move ua + 2 , ua / 3  | ( move ua , ua / 3 ; move 2 , 0 )  | ( pen ua * 4 ; move 4 * 2 , ua / 3 )  | ( move ua , ua / 3 ; move 2 , 0 - ua )  | ( pen ul / 2 ; move ua + 2 , ua / 3 )  | ( move ua + ul , ua / 3 ; move ul , 0 )  | ( move ul + ul , ua / 3 ; move ua , 0 )  | ( move 3 + ul , ua / 3 ; move 4 , 0 ; pen 0 )  | ( ( pen ul ; move ua , ua / 3 ) ; move 3 - ul , ua )  | ( move ua + ul , ua / 3 ; v0 = ua ; move ul , v0 )  | ( v0 = ua / 3 ; move ua , v0 + ua ; move v0 , 0 )  | ( move ua + 2 , ua / 3 ; ( pen 4 ; v0 = 3 - ua ) )  | ( v0 = ua / 3 ; move ua + v0 , v0 ; v1 = v0 )  
[153] move 4 + 3 , ul / 3  | move ua + ul , ul / 3  | ( move ul - 2 , ua ; pen 3 ; move ua + ul , ul / 3 )  
[154] move 4 + 3 , ua / 4  | move ua + ul , ua / 4  | ( move ua , ua / 4 ; move ul , ua )  | ( move ua + ul , ua / 4 ; pen ul )  | ( move 4 , ua / 4 ; ( pen ul ; move 3 , 0 ) )  
[155] move 3 * 3 , ua / 3  | move ua + 3 , ua / 3  | move ua + 4 , ua / 3  | ( move 4 , ua / 3 ; move 4 , ua ; move ul , 0 )  
[156] move 3 * 3 , 3 / ua  | move ua + 3 , 3 / ua  | ( move ua + 3 , 3 / ua ; pen ua )  | ( move ua + 3 , 3 / ua ; v0 = 3 )  | ( move ua + 3 , 3 / ua ; pen ua + 2 )  
[157] move 4 * 2 , 3 / ua  | move 4 + 4 , 3 / ua  | move ua + 2 , 3 / ua  | ( move 4 * 2 , 3 / ua ; move 0 , ul - 2 )  | ( move 4 , 3 / ua ; move 3 + ul , ua * 2 )  | ( move ua , 3 / ua ; move ul , ua ; move 3 / 4 , ua )  | ( move 4 + ul , 3 / ua ; v0 = 0 ; move 3 , v0 )  
[158] move ua + 4 , 3 / 4  | ( pen 3 ; move ua + 4 , 3 / 4 )  | ( move ua + 4 , 3 / 4 ; pen ul ; v0 = 2 * 2 )  | ( ( move ua + 4 , 3 / 4 ; pen 3 / 4 ) ; pen 2 / 3 )  
[159] move 4 * 2 , 4 / ua  | move 4 + 4 , 4 / ua  | move ua + 2 , 4 / ua  | move ua + ul , 4 / ua  | ( move 2 , 4 / ua ; move ua , ua )  | ( pen ul ; move ua + 2 , 4 / ua )  | ( move ua + 2 , 4 / ua ; v0 = ua )  | ( pen 3 - ul ; move ua + 2 , 4 / ua )  | ( move 4 * 2 , 4 / ua ; pen ul - ua )  | ( move ul + ul , 4 / ua ; move ua , ua )  | ( v0 = 4 ; move 2 * v0 , v0 / ua )  | ( ( pen ul ; move 4 , 4 / ua ) ; move 4 , 0 )  | ( move ua + 2 , 4 / ua ; pen 4 ; v0 = ua )  
[160] move 3 * 3 , 4 / ua  | move ua + 3 , 4 / ua  | ( pen 4 ; move 3 * 3 , 4 / ua )  | ( move 4 + ul , 4 / ua ; move 3 + ul , 0 )  | ( move 4 * 2 , 4 / ua ; move ul , ua ; v0 = ul )  
[161] move 4 * 2 , ua / 4  | move 4 + 4 , ua / 4  | move ua + 2 , ua / 4  | ( move 4 * 2 , ua / 4 ; pen ul )  | ( move 4 + 4 , ua / 4 ; pen ua - 4 )  | ( move ua + 2 , ua / 4 ; move 0 , ul )  | ( move ua + 2 , ua / 4 ; v0 = ul )  | ( pen ul ; move ua + 2 , ua / 4 ; pen 2 )  | ( v0 = 4 ; move v0 + v0 , ua / 4 )  | ( move ua + 2 , ua / 4 ; v0 = ul + ul )  
[162] move 4 * 2 , ul / 4  | move 4 + 4 , ul / 4  | move ua + ul , ul / 4  | ( move 4 , ul / 4 ; move 4 , ua )  | ( move ua , ul / 4 ; move ul , 0 )  | ( move ul , ul / 4 ; move ua , ua )  | ( move 4 + 4 , ul / 4 ; v0 = 2 )  | ( move 4 * 2 , ul / 4 ; v0 = 3 )  | ( move 4 + 4 , ul / 4 ; pen ua + ul )  | ( move 4 * 2 , ul / 4 ; v0 = ua ; pen ul )  | ( v0 = 4 ; move 4 , ul / v0 ; move v0 , 0 )  | ( ( move 3 + ul , ul / 4 ; move 4 , ua ) ; pen 2 / 4 )  | ( move ua / 4 , ul / 4 ; move ua , ua * 3 ; v0 = ul )  
[163] move 3 * 3 , ul / 4  | move ua + 3 , ul / 4  | ( move 3 , ul / 4 ; move ua , 0 )  | ( move 3 , ul / 4 ; move ua , ua )  | ( move ua + 3 , ul / 4 ; pen ua )  | ( move ua + 2 , ul / 4 ; move ul , ua )  | ( move 3 * 3 , ul / 4 ; v0 = 4 - ua )  | ( move ua + 3 , ul / 4 ; v0 = ua - 2 )  | ( pen 4 / 3 ; pen 4 ; move ua + 3 , ul / 4 )  | ( move ua , ul / 4 ; move 3 , ua * 3 ; pen 3 )  | ( move 0 , 0 ; move 2 , ul / 4 ; move ua + ul , 0 )  | ( move 0 , ua ; move 4 + ul , ul / 4 ; move 4 , ua )  | ( move ua + 3 , ul / 4 ; pen 2 / 4 ; v0 = ul - 4 )  | ( ( pen 2 ; pen 2 ; move 2 + ul , ul / 4 ) ; move ua , 0 )  
[164] move 3 + 2 , ua * ua  | move 4 + ul , ua * ua  | ( move 4 , ua * ua ; move ul , 0 )  | ( move ul , ua * ua ; move 4 , 0 )  | ( move 3 , ua * ua ; move 2 , ua )  | ( pen 3 ; move 4 + ul , ua * ua )  | ( move ul , ua * ua ; move 4 , ua )  | ( move 4 , ua * ua ; move ul , ua )  | ( move 4 + ul , ua * ua ; move 0 , 0 )  | ( move 4 + ul , ua * ua ; v0 = 3 )  | ( move 4 + ul , ua * ua ; v0 = 4 )  | ( move ul + ul , ua * ua ; move 3 , 0 )  | ( move 4 + ul , ua * ua ; move 0 , ul )  | ( move 3 , ua * ua ; move 3 - ul , ua )  | ( move 4 + ul , ua * ua ; v0 = ua )  | ( move 4 + ul , ua * ua ; v0 = ul )  | ( pen ua * ua ; move 4 + ul , ua * ua )  | ( v0 = 4 + ul ; move v0 , ua * ua )  | ( pen 0 ; pen 2 ; move 4 + ul , ua * ua )  | ( move 2 , ua * ua ; pen ul ; move 3 , ua )  | ( move 3 + 2 , ua * ua ; move v0 , v0 )  | ( move 4 , ua * ua ; move ul , ua ; pen ul )  | ( move 4 + ul , ua * ua ; ( pen 3 ; pen 0 ) )  | ( move 3 , ua * ua ; move 2 , ua + ua ; pen 4 )  | ( move 4 + ul , ua * ua ; pen 4 + ul ; pen ul )  | ( move ul , ua * ua ; v0 = 4 ; move v0 , ua )  | ( move 2 + ul , ua * ua ; move 2 , ua ; v0 = 0 )  | ( v0 = ua ; move 2 , v0 * v0 ; move 3 , v0 )  | ( ( pen ul ; move ul - 4 , ua * ua ) ; move ul - 3 , ua )  
[165] move ua - ul , 3 + 2  | move ul - ua , 3 + 2  | move ua - ul , 4 + ul  | move ul - ua , 4 + ul  | ( move 0 , 2 ; move ul - ua , 3 )  | ( move 0 , ul ; move ua - ul , 4 )  | ( move 0 , ul ; move ul - ua , 4 )  | ( move ul - ua , 3 + 2 ; pen ua )  | ( pen ul ; move ua - ul , 4 + ul )  | ( pen 2 / 4 ; move ua - ul , 4 + ul )  | ( move 0 , ul ; move ul - ua , ua + 4 )  | ( move ua - ul , 4 + ul ; v0 = ua )  | ( move ul - ua , 4 + ul ; v0 = ul )  | ( move ul - ua , 4 + ul ; pen ua * 4 )  | ( move ua - ul , 3 + 2 ; v0 = 3 + ul )  | ( move ul / 3 , 4 + ul ; move 3 + 2 , ua )  | ( move ua - ul , 3 + 2 ; v0 = ul + ul )  | ( move 0 , 3 ; move 0 , ul ; move ul - ua , ul )  | ( ( move ul - ua , 4 + ul ; pen ua ) ; pen 3 )  | ( move ua - ul , 3 + 2 ; pen 3 - ua ; move 0 , 4 )  | ( move ua - ul , 3 + 2 ; ( pen 2 * 2 ; pen ua ) )  | ( pen ul ; move ul - ua , 4 + ul ; move ul / ua , ua )  | ( move ul - ua , 4 + ul ; move ul , ul / 4 ; v0 = 2 )  
[166] move 2 - ua , 2 / ua  | move ua - 2 , 2 / ua  | move 2 - ua , ul / 3  | ( move 2 - ua , 2 / ua ; v0 = ua )  | ( move 0 , ul / 2 ; pen ul ; move 3 + ul , 3 )  | ( move ul , ul / 2 ; ( move 0 , 3 ; move 4 , ua ) )  | ( v0 = 2 / ua ; pen ul ; move 4 + v0 , v0 )  
[167] move 2 - ua , ua / 3  | move ua - 2 , ua / 3  | ( move ul / 3 , ua / 3 ; move 4 , ua )  | ( pen ua - ul ; move ua - 2 , ua / 3 )  | ( v0 = ua - 4 ; pen ul ; move 4 , v0 * v0 )  | ( move 4 , ua / 3 ; v0 = 3 ; move ul / v0 , ua )  | ( v0 = ua / 3 ; move v0 * v0 , v0 ; pen ul )  
[168] move ua - 2 , ua / 4  | move 2 - ua , ua / 4  | ( move 0 , 0 ; move 2 - ua , ua / 4 )  | ( v0 = ua / 4 ; move v0 * 3 , v0 )  | ( v0 = ua / 4 ; move v0 , v0 ; move 3 , 0 )  | ( v0 = ua / 4 ; move ua - v0 , v0 ; pen ul + v0 )  
[169] move ua + 4 , ua / 3  | ( move 4 , ua / 3 ; move ua , 0 )  | ( move ua + 4 , ua / 3 ; pen ul - ua )  | ( move ua , ua / 3 ; move 4 , ua ; v0 = 3 )  | ( move 4 , ua / 3 ; move ua , 0 - ua ; pen ul )  | ( pen ul ; move 4 , ua / 3 ; move ua , ua * 4 )  | ( pen ul + ul ; pen ul ; move ua + 4 , ua / 3 )  | ( ( move ua + 4 , ua / 3 ; pen 3 ) ; move 0 , 0 )  | ( move 4 , ua / 3 ; v0 = ua ; move v0 , v0 + v0 )  | ( ( pen ua ; move ua , ua / 3 ) ; v0 = ua ; move 4 , ua )  
[170] move 4 + 4 , ua * ua  | move 4 * 2 , ua * ua  | move ua + 2 , ua * ua  | ( move ua + 2 , ua * ua ; pen 3 )  | ( pen ua ; move 4 * 2 , ua * ua )  | ( move 2 , ua * ua ; move ua , ua )  | ( move ua + 2 , ua * ua ; pen ua )  | ( move ua + 2 , ua * ua ; v0 = 0 )  | ( move ua + 2 , ua * ua ; pen 4 - 2 )  | ( move ua + 2 , ua * ua ; v0 = ul )  | ( move ua , ua * ua ; move 2 , ua + ua )  | ( pen ua - ul ; move ua + 2 , ua * ua )  | ( v0 = 4 * 2 ; move v0 , ua * ua )  | ( v0 = 2 ; move ua + v0 , ua * ua )  | ( v0 = ua + 2 ; move v0 , v0 * ua )  | ( v0 = ua + 2 ; move v0 , ua * v0 )  | ( move 0 , ua * 2 ; move 4 * 2 , ua * ua )  | ( move ua + 2 , ua * ua ; pen ua ; pen ua )  | ( move 3 + ul , ua * ua ; move 3 + ul , ua )  | ( v0 = ua ; move v0 + 2 , v0 * v0 )  | ( move 4 * 2 , ua * ua ; v0 = ul ; pen 3 )  | ( move 2 , ua * ua ; move ua , ua ; v0 = 2 )  | ( move ua , ua * ua ; move 2 , ua ; v0 = ul )  | ( move ul , ua * ua ; move ua + ul , 0 ; pen ul )  | ( move 4 , ua * ua ; move 4 , 0 ; v0 = ua / 4 )  | ( move 2 , ua * ua ; v0 = ua ; move v0 , v0 )  | ( v0 = ua ; move 2 , v0 * v0 ; move v0 , v0 )  | ( move 3 + 3 , ua * ua ; move 2 , ua * 4 ; v0 = 3 )  | ( v0 = ua + 2 ; ( pen ul ; move v0 , ua * v0 ) )  | ( v0 = ua + 2 ; v1 = v0 ; move v0 , v1 * ua )  | ( ( v0 = ua ; move v0 + 2 , v0 * v0 ) ; pen ul )  | ( pen ul / ua ; move 4 * 2 , ua * ua ; v0 = ul / ua )  
[171] move ua + 4 , 4 / ua  | ( move ua + 4 , 4 / ua ; pen 2 )  | ( pen 3 ; move ua + 4 , 4 / ua )  | ( move 4 , 4 / ua ; move ua , ua )  | ( pen ua ; move ua + 4 , 4 / ua )  | ( move ua + 4 , 4 / ua ; v0 = 4 )  | ( move ua + 3 , 4 / ua ; move ul , 0 )  | ( move 3 + ul , 4 / ua ; move ua , 0 )  | ( move ua , 4 / ua ; move 4 , ua ; move ul , 4 )  | ( move ua + 3 , 4 / ua ; pen 3 ; move 2 - ul , ua )  | ( ( move ua , 4 / ua ; pen ua + ua ) ; move 4 , 0 )  
[172] move 4 + 4 , ul / ua  | move 4 * 2 , ul / ua  | move ua + 2 , ul / ua  | ( move 4 , ul / ua ; move 4 , ua )  | ( pen ua ; move 4 * 2 , ul / ua )  | ( pen ul ; move 4 + 4 , ul / ua )  | ( move 4 , ul / ua ; move 3 + ul , ua )  | ( move ua , ul / ua ; move ua / 4 , ua )  | ( pen 4 ; move 4 * 2 , ul / ua ; pen 0 )  | ( v0 = 4 ; move v0 + v0 , ul / ua )  | ( move 4 * 2 , ul / ua ; v0 = ul / ua )  | ( move ul - 3 , ul / ua ; move ua + 2 , ua )  | ( move 4 , ul / ua ; v0 = 4 ; move v0 , ua )  | ( move 4 * 2 , ul / ua ; move 0 , 4 * 4 ; pen 0 )  | ( ( move 2 , ul / ua ; move 4 + 2 , 0 ; pen 0 ) ; pen 2 )  
[173] move 3 * 3 , ul / ua  | ( move 3 * 3 , ul / ua ; pen ua )  | ( move 4 + 4 , ul / ua ; move ul , 0 )  | ( move 4 + ul , ul / ua ; move 4 , ua )  | ( v0 = ua ; move 3 * 3 , ul / v0 ; v1 = v0 )  
[174] move ul - ua , ul / ua  | move ua - ul , ul / ua  | ( move ua - ul , ul / ua ; pen 3 )  | ( pen 3 ; move ul - ua , ul / ua )  | ( pen 4 ; move ua - ul , ul / ua )  | ( pen ua ; move ul - ua , ul / ua )  | ( move ul - ua , ul / ua ; pen ua )  | ( pen ua ; move ua - ul , ul / ua )  | ( move ul - ua , ul / ua ; pen ul )  | ( move ua - ul , ul / ua ; pen ul )  | ( pen ul ; move ua - ul , ul / ua )  | ( move 0 , 4 * 4 ; move ul - ua , 3 )  | ( move ua - ul , ul / ua ; v0 = 0 )  | ( move 0 , ul / ua ; move ua - ul , ua )  | ( move ul - ua , ul / ua ; move 0 , ul )  | ( move ua - ul , ul / ua ; v0 = ua )  | ( pen 3 - ul ; move ua - ul , ul / ua )  | ( pen 2 / ua ; move ua - ul , ul / ua )  | ( v0 = ul - ua ; move v0 , ul / ua )  | ( v0 = ul / ua ; move ul - ua , v0 )  | ( v0 = ul ; move v0 - ua , v0 / ua )  | ( v0 = ua - ul ; move v0 , ul / v0 )  | ( move ul - ua , ul / ua ; v0 = 3 + ul )  | ( move ua - ul , ul / ua ; move ul - ua , 0 )  | ( v0 = ul ; pen v0 ; move ul - ua , v0 / ua )  | ( pen ul + ul ; move ul - ua , ul / ua ; pen 3 - 2 )  | ( v0 = ul ; v1 = v0 ; move ua - v0 , v0 / ua )  | ( ( pen ul ; move ul - ua , ul / ua ) ; move 0 , ua + ul )  | ( pen 0 ; pen ua ; ( move ul - ua , ul / ua ; v0 = ul ) )  | ( ( pen ua ; move 0 , ul / ua ; pen ul ) ; move ua - ul , ua )  
[175] ( move 2 , 0 ; move 2 , 2 )  | ( move 2 , ua ; move 2 , 2 )  | ( move 2 , 0 ; move 2 , 4 - 2 )  | ( move ul + ul , 0 ; move 2 , 2 )  | ( move 2 , ua ; move 3 - ul , 2 )  | ( move 2 , ua ; move 2 , ul + ul )  | ( move ul + ul , 0 ; move ul + ul , 2 )  | ( move ul + ul , ua ; move 3 - ul , 2 )  | ( move 2 , ua ; move 2 , 2 ; v0 = 4 )  | ( move ul + ul , ua ; move 2 , ul + ul )  | ( move 2 , 0 ; move ul + ul , 2 ; pen 4 )  | ( v0 = 2 ; move v0 , 0 ; move v0 , 2 )  | ( move 2 , 0 ; v0 = 2 ; move v0 , v0 )  | ( v0 = 2 ; move 2 , ua ; move v0 , v0 )  | ( move 2 , ua ; v0 = 2 ; move v0 , v0 )  | ( v0 = 2 ; move v0 , 0 ; move v0 , v0 )  | ( ( move 2 , ua ; pen ul ) ; move ul + ul , 2 )  | ( v0 = 2 ; move v0 , ua ; move v0 , v0 )  | ( v0 = 3 - ul ; move v0 , 0 ; move 2 , v0 )  | ( move 2 , 0 ; ( move 2 , 2 ; move 0 , ul - ua ) )  | ( v0 = 2 ; ( move v0 , ua ; move 2 , v0 ) )  | ( move 2 , 0 ; v0 = ul + ul ; move v0 , v0 )  | ( move ul + ul , ua ; move 2 , 2 ; v0 = 3 + 2 )  | ( move 2 , ua ; v0 = ul + ul ; move v0 , v0 )  | ( move ul + ul , ua + ua ; move 2 , 2 ; v0 = 0 )  | ( ( v0 = 2 ; move v0 , ua ) ; move v0 , v0 )  | ( v0 = 2 ; ( move v0 , ua ; move v0 , v0 ) )  | ( move 0 , ua * 3 ; move 2 , ua * 2 ; move ul + ul , 2 )  | ( move ul + ul , ua ; v0 = 3 - ul ; move v0 , v0 )  | ( ( move 2 , ua ; move 4 / 2 , ul + ul ) ; pen 4 + ul )  | ( v0 = 2 ; ( move v0 , ua ; pen ul ; move 2 , v0 ) )  | ( v0 = ul + ul ; move v0 , ua ; move v0 , v0 - ua )  
[176] ( move 2 , 0 ; move 3 , 2 )  | ( move 2 , ua ; move 3 , 2 )  | ( move 3 - ul , 0 ; move 3 , 2 )  | ( pen ul ; move 2 , 0 ; move 3 , 2 )  | ( move 4 / 2 , ua * 4 ; move 3 , 2 )  | ( move 2 , 0 ; move 2 + ul , 3 - ul )  | ( move ul + ul , ua * 4 ; move 3 , 2 )  | ( move 2 , ua + ua ; move 3 , ul + ul )  | ( move ul + ul , ua ; move 4 - ul , 2 )  | ( move 2 , ua ; move 3 , 2 ; v0 = 2 )  | ( ( pen ul ; move 2 , 0 ) ; move 3 , 2 )  | ( pen 2 ; move ul + ul , ua ; move 3 , 2 )  | ( move 2 , ua ; pen ua ; move 3 , 3 - ul )  | ( ( move 2 , 0 ; move 3 , 2 ) ; pen ua - 2 )  | ( pen 2 / 3 ; move 2 , ua * 4 ; move 3 , 2 )  | ( v0 = 2 ; move v0 , ua ; move v0 + ul , 2 )  | ( move 2 , ua * 3 ; move 2 + ul , 2 ; v0 = ua )  | ( move 2 , ua ; move 4 - ul , 2 ; v0 = ul - 4 )  | ( ( move ul , ua ; move ul , ua * 4 ) ; move 3 , 2 )  | ( move 2 , ua ; pen 3 ; ( move 2 , 2 ; move ul , 0 ) )  | ( move ul + ul , ua ; move 3 , ul + ul ; v0 = 2 + ul )  | ( move ul + ul , ua ; ( v0 = 3 ; move v0 , 2 - ua ) )  
[177] ( move 3 , 0 ; move 2 , 2 )  | ( move 3 , 0 ; move 2 , ua + 2 )  | ( move 2 + ul , ua ; move 2 , 2 )  | ( move 3 , ua ; move ul + ul , 2 )  | ( move 3 , 0 ; move 2 , 2 ; pen 0 )  | ( move 3 , 0 ; pen 2 ; move 2 , 2 )  | ( pen ul ; move 3 , ua ; move 2 , 2 )  | ( move 4 - ul , ua * 3 ; move 2 , 2 )  | ( move 2 + ul , ua ; move 2 , 3 - ul )  | ( move 3 , 0 ; move 0 , 2 ; move 2 , ua )  | ( move 3 , ua ; move ul + ul , ua + 2 )  | ( ( move 3 , 0 ; pen ul ) ; move 2 , 2 )  | ( move 3 , ua ; move 2 , 2 ; v0 = ua )  | ( move 3 , 0 ; v0 = 2 ; move v0 , 2 )  | ( pen ul ; move 3 , ua ; move ul + ul , 2 )  | ( pen ua + 4 ; ( move 3 , ua ; move 2 , 2 ) )  | ( move 3 , 0 ; move 2 , ul + ul ; pen ul - ua )  | ( move 3 , ua ; v0 = 3 - ul ; move v0 , v0 )  | ( v0 = 2 ; move 3 , v0 - 2 ; move v0 , v0 )  | ( move ul + ul , ua ; move ul , 0 ; move 2 , ul + ul )  | ( move 3 , ua ; ( pen ul ; v0 = 4 ; move 2 , 2 ) )  | ( move 2 + ul , ua ; move ul + ul , ul + ul ; v0 = ua )  
[178] ( move 2 , 0 ; move 2 , 3 )  | ( move 2 , ua ; move 2 , 3 )  | ( move 2 , 0 ; move 2 , ua + 3 )  | ( move 2 , 0 ; move 2 , 4 - ul )  | ( move 2 , 0 ; move ua - 4 , 3 )  | ( move 2 , ua ; move 4 / 2 , 3 )  | ( move 2 , 0 ; move ul + ul , 3 )  | ( move 3 - ul , ua ; move 2 , 3 )  | ( move 2 , 0 ; move 4 / 2 , 4 - ul )  | ( move 2 , ua * 2 ; move 2 , 3 - ua )  | ( move ul + ul , 0 ; move 2 , ua + 3 )  | ( move 3 - ul , ua ; move 2 , 2 + ul )  | ( move ul + ul , ua * 3 ; move 2 , 3 )  | ( move 2 , 0 ; move 4 / 2 , 3 ; pen 3 )  | ( move 2 , ua ; move 0 , 3 ; move 2 , 0 )  | ( move 0 , ua ; move 2 , 0 ; move 2 , 3 )  | ( move 2 , 0 ; pen 2 ; move 2 , ua + 3 )  | ( move 2 , ua ; move 2 , 3 ; pen 0 - 2 )  | ( move 2 , ua * 2 ; pen ua ; move 2 , 3 )  | ( ( move 2 , ua ; move 2 , 3 ) ; pen ul )  | ( move 2 , 0 ; ( move 2 , 3 ; pen 4 * 2 ) )  | ( move 2 , 0 ; move ul + ul , 3 ; pen ua - ul )  | ( move 2 , ua ; pen 2 + ul ; move ul + ul , 3 )  | ( move ul + ul , ua ; move ul , 3 ; move ul , 0 )  | ( move 2 , ua ; v0 = 3 ; move ua / v0 , v0 )  | ( ( move 2 , ua ; move 0 , ul - ua ) ; move 2 , 2 )  | ( move ul + ul , ua * 3 ; move 2 , 3 ; pen ul - 2 )  | ( v0 = 2 ; move v0 , ua * v0 ; move v0 , 3 )  | ( ( pen ul + ul ; pen ul ; move 2 , 0 ) ; move 2 , 3 )  | ( move ul + ul , ua ; ( pen 3 ; move 2 , 3 ; pen 3 ) )  | ( v0 = ul + ul ; ( move v0 , 0 ; move v0 , 3 ) )  
[179] ( move 3 , 0 ; move 2 , 3 )  | ( move 3 , ua ; move 2 , 3 )  | ( move 3 , 0 ; move 2 , 2 + ul )  | ( move 3 , ua ; move 2 , 2 + ul )  | ( move 3 , ua ; move ua / 3 , 3 )  | ( move 3 , ua ; move ul + ul , 3 )  | ( pen ul ; move 3 , ua ; move 2 , 3 )  | ( move 3 , 0 ; move ua / 3 , 2 + ul )  | ( move 3 , ua ; move ul + ul , 3 - ua )  | ( move 4 - ul , ua ; move ul + ul , 3 )  | ( move 3 , 0 ; pen ua * 3 ; move 2 , 3 )  | ( move 3 , ua ; ( pen 4 ; move 2 , 3 ) )  | ( move 3 , ua ; ( move 2 , 3 ; pen 4 ) )  | ( move 4 - ul , ua ; move 2 , 3 ; pen 2 )  | ( move ul , ua ; move 2 , ua ; move 2 , 3 )  | ( move 3 , 0 ; move ul + ul , 3 ; pen ul )  | ( v0 = 3 ; move v0 , ua ; move 2 , v0 )  | ( move 0 , ua ; move 3 , 0 ; move ul + ul , 3 )  | ( move 3 , ua ; move 0 , 3 ; move ua / 3 , ua )  | ( pen ua ; move 2 + ul , 0 ; move ua / 3 , 3 )  | ( move 3 , ua ; v0 = 3 ; move v0 - ul , v0 )  | ( move 3 , ua ; move 3 - ul , 3 ; v0 = ua * 3 )  | ( move 3 , 0 ; move 2 , 3 ; ( v0 = 0 ; pen ul ) )  | ( move 3 , ua ; move 2 , ua + 3 ; move ul / ua , ul )  
[180] ( move 2 , 0 ; move 3 , 3 )  | ( move 2 , ua ; move 3 , 3 )  | ( move ul , ua ; move 3 , 3 )  | ( move 2 , ua * 2 ; move 3 , 3 )  | ( move 2 - 3 , 3 ; move 3 , ua )  | ( move 4 - 2 , ua ; move 3 , 3 )  | ( move ul , 0 ; move 2 + ul , 3 )  | ( move 2 , ua ; move 2 + ul , 3 )  | ( move ul + ul , 0 ; move 3 , 3 )  | ( pen 3 ; move 2 , ua ; move 3 , 3 )  | ( move ul , ua ; move 3 , 3 ; pen 2 )  | ( move 0 - ul , 3 - ua ; move 3 , 0 )  | ( move 0 - 3 , 3 ; move ul + ul , 0 )  | ( move 2 , ua * 2 ; move 3 , ua + 3 )  | ( move 2 , 0 ; ( pen 4 ; move 3 , 3 ) )  | ( move ul + ul , ua ; move 3 , 2 + ul )  | ( move 2 , ua ; move 3 , ua + 3 ; pen 3 )  | ( move 2 , ua ; move 3 , 3 ; pen ul - ua )  | ( move ul , ua * 3 ; move 3 , 3 ; pen ul )  | ( ( move 2 , 0 ; move 3 , 3 ) ; pen ua * 3 )  | ( move ul , 0 ; move 4 - ul , 3 ; v0 = 2 )  | ( move 2 , 0 ; pen 2 - ul ; move 2 + ul , 3 )  | ( move ul , ua ; move 3 , 3 ; v0 = ua - ul )  | ( move 2 , ua ; v0 = 3 ; move v0 , 2 + ul )  | ( v0 = 3 ; move v0 - ul , 0 ; move 3 , v0 )  | ( v0 = 3 ; ( move 2 , ua ; move v0 , v0 ) )  | ( move 2 , 0 ; pen 3 - ul ; move 2 + ul , ua + 3 )  | ( pen ua + 4 ; move ul + ul , ua ; move 3 , ua + 3 )  | ( ( pen 4 / ua ; pen 2 ; move 2 , 0 ) ; move 3 , 3 )  | ( move 2 , 0 ; ( move 3 , 2 + ul ; pen 0 ; pen ul ) )  | ( move 2 , 0 ; ( move 3 , 3 ; pen 0 - 3 ; v0 = 3 ) )  | ( move ul , ua ; ( v0 = 3 ; move v0 , v0 ) ; pen ul )  
[181] ( move 2 , 0 ; move 2 , 4 )  | ( move 2 , ua ; move 2 , 4 )  | ( move 2 , 0 ; move 2 , ua + 4 )  | ( move 2 , 0 - ua ; move 2 , 4 )  | ( move ul + ul , 0 ; move 2 , 4 )  | ( move 3 - ul , ua ; move 2 , 4 )  | ( move 2 , ua ; move ul + ul , 4 )  | ( move 3 - ul , ua ; move 2 , 4 - ua )  | ( v0 = 2 ; move v0 , 0 ; move 2 , 4 )  | ( move 2 , 0 ; move ul + ul , 4 ; pen ul )  | ( pen ua ; move ul + ul , ua ; move 2 , 4 )  | ( move 2 , 0 ; ( move 2 , 4 ; v0 = 3 ) )  | ( move 3 - ul , 0 ; move ul , 4 ; move ul , 0 )  | ( move ul , ua ; move ul , 0 ; move 2 , ua + 4 )  | ( move ul + ul , ua ; move 2 , 4 ; pen ul / 3 )  | ( move 2 , 0 ; ( move 2 , 4 ; v0 = 0 - ua ) )  | ( v0 = 3 - ul ; move v0 , ua ; move v0 , 4 )  | ( move 3 - ul , 0 ; move ul + ul , 4 ; v0 = 0 )  | ( move 2 , ua * 4 ; ( pen ul ; move 3 - ul , 4 ) )  | ( move 2 , ua + ua ; move 2 , ua + 4 ; v0 = ul )  | ( move ul + ul , ua ; v0 = ua * 4 ; move 2 , 4 )  | ( move 2 , ua ; ( move ul , 4 ; move ul , ua + ua ) )  | ( ( move 2 , ua ; move ul , 4 ) ; move ul , ua ; pen ul )  | ( ( pen ua + 4 ; pen 4 ; move 2 , ua ) ; move 2 , 3 + ul )  
[182] ( move 2 , 0 ; move 4 , 2 )  | ( move 2 , ua ; move 4 , 2 )  | ( move 2 , 0 ; move 3 + ul , 2 )  | ( move 2 , ua * 4 ; move 4 , 2 )  | ( move 2 , ua + ua ; move 4 , 2 )  | ( move 2 , ua ; move 3 + ul , 2 )  | ( move 3 - ul , ua ; move 4 , 2 )  | ( move 2 , ua ; pen ul ; move 4 , 2 )  | ( move 2 , 0 ; move 4 , 2 ; v0 = 3 )  | ( move 2 , 0 ; pen 3 + ul ; move 4 , 2 )  | ( move 2 , 0 ; pen ua ; move 4 , ul + ul )  | ( ( move 2 , ua ; pen 2 ) ; move 2 * 2 , 2 )  | ( v0 = 2 ; move v0 , ua ; move 4 , v0 )  | ( move ul + ul , 0 ; move 4 , 3 - ul ; pen 0 )  | ( move 2 , ua ; move 0 , ul ; move 4 , ua + ul )  | ( v0 = 2 ; ( move v0 , ua ; move 4 , v0 ) )  | ( move 2 , ua * 4 ; v0 = 0 ; move v0 + 4 , 2 )  | ( v0 = 2 ; move v0 , 0 ; move v0 * v0 , v0 )  | ( v0 = 2 ; move v0 , ua ; move v0 + v0 , v0 )  | ( ( move 2 , 0 ; move 0 , ul ) ; pen ua + 4 ; move 4 , ul )  
[183] ( move 4 , 0 ; move 2 , 2 )  | ( move 4 , ua ; move 2 , 2 )  | ( move 3 + ul , 0 ; move 2 , 2 )  | ( move 3 + ul , ua ; move 2 , 2 )  | ( move 4 , 0 ; move ul + ul , 2 )  | ( move 4 , ua + ua ; move 2 , 2 )  | ( move 4 , ua ; move ul + ul , 2 )  | ( move 4 , ua ; move 2 , ul + ul )  | ( move 4 , ua ; pen 4 ; move 2 , 2 )  | ( move 4 , 0 ; move 2 , 2 ; v0 = ul )  | ( move 4 , ua ; pen 3 ; move 2 , 3 - ul )  | ( v0 = 2 ; move 4 , 0 ; move v0 , 2 )  | ( pen 4 - 2 ; move 2 + 2 , 0 ; move 2 , 2 )  | ( move 4 , ua ; v0 = 2 ; move v0 , v0 )  | ( move 4 , ua ; v0 = ua ; move 2 , 4 / 2 )  | ( move 4 , ua ; move 2 , 2 ; move ul / ua , 3 )  | ( move 4 , 0 ; move 2 , ul + ul ; pen ul / 2 )  | ( move 4 , ua * 2 ; move ul , 2 ; move ul , ua )  | ( move 4 , ua ; ( v0 = 2 ; move 2 , v0 ) )  | ( move 4 , ua ; v0 = 2 ; move 3 - ul , v0 )  | ( move 4 , ua * 3 ; v0 = 2 ; move v0 , v0 )  | ( move 4 , 0 ; ( move ul + ul , 2 ; v0 = ul ) )  | ( move 4 , ua ; ( pen ua ; pen ul ) ; move 2 , ul + ul )  | ( move 4 , ua ; ( move 3 - ul , ul + ul ; v0 = ul ) )  | ( pen ua ; ( v0 = 2 ; move 4 , ua ; move v0 , v0 ) )  
[184] ( move 3 , 0 ; move 3 , 3 )  | ( move 3 , ua ; move 3 , 3 )  | ( move 3 , 0 ; move 3 , 2 + ul )  | ( move 3 , ua * 4 ; move 3 , 3 )  | ( move 3 , ua ; move 3 , ua + 3 )  | ( move 2 + ul , ua ; move 3 , 3 )  | ( move 3 , ua ; move 3 , 3 - ua )  | ( move 3 , ua ; move 4 - ul , 3 )  | ( move 3 , 0 ; v0 = ul ; move 3 , 3 )  | ( move 3 , 0 ; move 2 , 3 ; move ul , ua )  | ( pen 3 + ul ; move 3 , ua ; move 3 , 3 )  | ( move 3 , ua ; move 3 , 4 - ul ; pen ul )  | ( ( move 3 , 0 ; v0 = 3 ) ; move 3 , 3 )  | ( ( move 3 , 0 ; move 3 , 3 ) ; pen ua * 3 )  | ( move 3 , ua ; v0 = 3 ; move v0 , v0 )  | ( v0 = 3 ; move v0 , 0 ; move v0 , v0 )  | ( ( move 3 , 0 ; move 3 , 3 ) ; pen 0 ; pen 0 )  | ( v0 = 3 ; move v0 , ua ; move v0 , v0 )  | ( v0 = 2 + ul ; move 3 , 0 ; move v0 , v0 )  | ( ( v0 = 3 ; move v0 , 0 ) ; move v0 , v0 )  | ( ( move 3 , ua ; move 3 , 3 ; v0 = ul ) ; pen 0 )  | ( v0 = 3 ; move v0 , ua + ua ; move v0 , 4 - ul )  | ( move 3 , 0 ; ( move 3 , ua + 3 ; pen ul ) ; move 0 , 2 )  | ( move 3 , 0 ; ( move ul , 2 + ul ; pen 3 ) ; move 2 , ua )  | ( move 3 , ua ; v0 = 3 ; ( pen ul ; move v0 , v0 ) )  
[185] ( move 3 , 2 ; move 2 , 2 )  | ( move 3 , 2 ; move 2 , ul + ul )  | ( move 3 , ul + ul ; move 2 , 2 )  | ( pen ua ; move 3 , 2 ; move 2 , 2 )  | ( move 3 , ua + 2 ; move 3 - ul , 2 )  | ( move 0 , ul ; move 3 , ul ; move 2 , 2 )  | ( move 2 + ul , 2 ; move 2 , 2 ; pen ul )  | ( move 3 , 2 ; ( move 2 , 2 ; v0 = 0 ) )  | ( move 3 , 2 ; v0 = 2 ; move v0 , v0 )  | ( move 4 - ul , 2 ; v0 = 2 ; move 2 , v0 )  | ( move 3 , 2 ; v0 = ul + ul ; move v0 , v0 )  | ( move 0 , ua ; move 4 - ul , 2 ; move 2 , ul + ul )  | ( v0 = 2 ; ( move 2 + ul , v0 ; move 2 , v0 ) )  | ( v0 = 2 ; move v0 + ul , v0 ; move v0 , v0 )  | ( move 3 , 2 ; v0 = 2 ; ( pen v0 ; move v0 , 2 ) )  
[186] ( move 4 , 0 ; move 2 , 3 )  | ( move 4 , ua ; move 2 , 3 )  | ( move 4 , 0 ; move 2 , 2 + ul )  | ( move 4 , ua ; move ul + ul , 3 )  | ( move 4 , 0 ; move 2 , 3 ; move 0 , 0 )  | ( move 4 , 0 ; move 2 , 2 + ul ; pen 0 )  | ( ( move 4 , 0 ; move 2 , 3 ) ; pen ul )  | ( pen 2 ; move 4 , ua + ua ; move 2 , 3 )  | ( move 4 , ua * 4 ; move ul + ul , 2 + ul )  | ( move 4 , ua ; move 2 , 3 ; v0 = 3 - 2 )  | ( move 4 , ua * 3 ; move 2 , 3 ; v0 = 3 )  | ( move 4 , ua * 4 ; v0 = 3 ; move 2 , 3 )  | ( move 3 , ua ; move ul , 0 ; move 2 , 2 + ul )  | ( move 4 , ua ; ( move 2 , 3 ; pen ua * 3 ) )  | ( move 4 , ua * 4 ; ( pen ul ; move 2 , 3 ) )  | ( pen ul ; move 3 + ul , ua ; move 2 , ua + 3 )  | ( pen ul ; move 4 , ua ; move 3 - ul , 3 - ua )  | ( move 4 , ua ; v0 = 2 + ul ; move 2 , v0 )  | ( ( move 4 , ua ; move 2 , 3 ) ; move 0 , ua * 4 )  | ( move 4 , 0 ; move ul + ul , 3 ; move 0 , ul - 2 )  | ( move 3 + ul , ua ; move 2 - ul , 3 ; move ul , 0 )  | ( v0 = 4 ; ( move v0 , ua ; move v0 - 2 , 3 ) )  | ( move 4 , ua * 4 ; ( move 0 , 2 ; move 2 , ua + ul ) )  | ( pen ul ; ( pen 4 ; move 3 + ul , 0 ) ; move ul + ul , 3 )  
[187] ( move 3 , 0 ; move 4 , 2 )  | ( move 3 , ua ; move 4 , 2 )  | ( move 3 , ua * 4 ; move 4 , 2 )  | ( move 3 , 0 ; move 4 , ul + ul )  | ( move 2 + ul , ua ; move 4 , ua + 2 )  | ( move 3 , 0 ; move 4 , 2 ; v0 = 2 )  | ( move 3 , 0 ; move 4 , 2 ; v0 = 3 )  | ( pen 4 ; move 3 , ua ; move 4 , 4 / 2 )  | ( move 3 , ua ; move 3 , 2 ; move ul , ua )  | ( move 3 , 0 ; pen ul ; move 4 , ul + ul )  | ( move 3 , ua ; v0 = 2 ; move 4 , v0 )  | ( move 3 , ua ; move 4 , ul + ul ; pen ua )  | ( move 3 , ua ; ( v0 = 0 ; move 4 , 2 ) )  | ( move 3 , 0 ; move 4 , 2 ; ( pen 3 ; pen 0 ) )  | ( move 3 , ua ; pen ua ; move 3 + ul , 2 - ua )  | ( v0 = ul ; move 3 , ua ; move 4 , v0 + v0 )  | ( move 3 , ua ; pen 3 ; ( move 0 , 0 ; move 4 , 2 ) )  | ( ( move ul , 0 ; move 2 , 0 ; move 4 , 2 ) ; pen 4 + ul )  | ( move 3 , 0 ; pen ul ; ( move 0 , ul + ul ; move 4 , 0 ) )  | ( ( move 2 , ua ; move ul , ua ) ; move 4 , 2 ; move 0 , ua )  | ( ( ( move 3 , ua ; pen ul ) ; move 4 , ul + ul ) ; pen ul )  
[188] ( move 2 , 0 ; move 4 , 3 )  | ( move 3 , 0 ; move 4 , 3 )  | ( move 2 , ua ; move 4 , 3 )  | ( move 4 , ua ; move 4 , 3 )  | ( move 2 , 0 - ua ; move 4 , 3 )  | ( move 2 , ua ; move 2 * 2 , 3 )  | ( move 3 - ul , 0 ; move 4 , 3 )  | ( move 2 , ua * 4 ; move 4 , 3 )  | ( move 2 , ua ; move 4 , 2 + ul )  | ( move 2 + ul , ua ; move 4 , 3 )  | ( move 3 , ua ; pen ua ; move 4 , 3 )  | ( move 4 / 2 , 0 ; move 3 + ul , 3 )  | ( move 4 , 0 - ua ; move 4 , ua + 3 )  | ( move 2 , ua * 3 ; move 3 + ul , 3 )  | ( move 2 , 0 ; move 0 , ul ; move 4 , 2 )  | ( move ul + ul , ua ; move 3 + ul , 3 )  | ( move 2 , 0 ; move 4 , 3 ; v0 = ul )  | ( move ul , 0 ; move ul , ua ; move 4 , 3 )  | ( move 4 , ua ; v0 = 3 ; move 4 , v0 )  | ( v0 = 3 ; move v0 , ua ; move 4 , v0 )  | ( move ua / 2 , 0 ; ( move 4 , 3 ; pen ua ) )  | ( move ul , 0 - ua ; move ul , 0 ; move 4 , 3 )  | ( move 2 , ua ; move 4 , 3 ; move 0 , ul + ul )  | ( move ul + ul , ua ; move 4 , 3 ; pen 0 - 3 )  | ( move 2 , ua ; move ul , 3 ; move ua / 2 , ua )  | ( v0 = 0 ; move 2 , v0 + v0 ; move 4 , 3 )  | ( ( pen 3 + ul ; move 3 , ua ) ; move 2 * 2 , 3 )  | ( v0 = 3 ; move v0 , ua ; move ul + v0 , v0 )  | ( pen ul ; ( move 4 , ua ; v0 = 4 ; move v0 , 3 ) )  
[189] ( move 4 , 0 ; move 3 , 2 )  | ( move 2 + 2 , ua ; move 3 , 2 )  | ( move 4 , 0 ; move ua / 2 , 2 )  | ( move 3 + ul , ua ; move 3 , 2 )  | ( move 4 , 0 ; move 3 , ul + ul )  | ( move 4 , ua ; move 4 - ul , 2 )  | ( move 4 , ua ; move 3 , ul + ul )  | ( move 3 + ul , 0 ; move 3 , ua + 2 )  | ( move 4 , ua ; move 4 - ul , 2 - ua )  | ( move 4 , 0 ; ( move 3 , 2 ; pen 0 ) )  | ( move 4 , ua ; move 2 , 2 ; move ul , 0 )  | ( move 4 , 0 ; move 3 , 2 ; pen ua + ul )  | ( move 4 , ua ; move 3 , ul + ul ; v0 = ul )  | ( move 4 , ua ; move 3 , ul + ul ; pen 4 - ul )  | ( ( move 4 , 0 ; move 3 , 2 ) ; v0 = ua - ul )  | ( move 3 , 0 ; move ul , ua + ua ; move 2 + ul , 2 )  | ( ( v0 = 3 ; move 4 , 0 ) ; move v0 , ua + 2 )  | ( move 4 , 0 ; pen ua ; ( move 3 , 2 ; v0 = ul ) )  | ( move 4 , 0 ; ( pen ul ; move 3 , 2 ; pen ua * ua ) )  
[190] ( move 3 , 0 ; move 2 , 4 )  | ( move 2 + ul , 0 ; move 2 , 4 )  | ( move 3 , 0 ; move 3 - ul , 4 )  | ( move 4 - ul , 0 ; move 2 , 4 )  | ( move 3 , ua + ua ; move 2 , 4 )  | ( move 3 , 0 ; move ul + ul , 4 )  | ( move 3 , ua ; move 2 , 3 + ul )  | ( move 3 , ua ; move 2 , ua + 4 )  | ( move 3 , ua ; move ul + ul , 4 )  | ( move 3 , ua * 3 ; move 2 , ua + 4 )  | ( move 2 + ul , 0 ; move ul + ul , 4 )  | ( move 3 , 0 ; move ul + ul , 4 - ua )  | ( move 3 , ua ; move ul + ul , 3 + ul )  | ( move 2 , ua ; move ul , 0 ; move 2 , 4 )  | ( move 3 , 0 ; pen ul ; move ua / 3 , 4 )  | ( move 3 , ua ; move ul , 4 ; move ul , 0 )  | ( move 2 + ul , ua ; move 2 , 4 ; pen ua )  | ( move 4 - ul , 0 ; move 2 , 4 ; v0 = ua )  | ( move 3 , 0 ; pen ul ; move 4 / 2 , ua + 4 )  | ( ( v0 = 2 ; move 3 , ua ) ; move v0 , 4 )  | ( move 3 , 0 ; v0 = ul + ul ; move v0 , 4 )  | ( pen ul ; ( move 3 , ua ; move 2 , ua + 4 ) ; pen ua )  | ( move 3 , ua ; move ul + ul , ua + 4 ; v0 = ua * 4 )  | ( pen ul ; move 2 + ul , ua ; ( move ul , 4 ; move ul , ua ) )  
[191] ( move 4 , 2 ; move 2 , 2 )  | ( move 4 , ua + 2 ; move 2 , 2 )  | ( move 4 , 2 ; move 2 , 2 ; v0 = ua )  | ( move 4 , 2 ; move 0 , ul ; move 2 , ul )  | ( move 4 , 2 ; v0 = 2 ; move v0 , v0 )  | ( ( move 4 , 2 ; pen 4 ; pen ua ) ; move 2 , 2 )  | ( v0 = 2 ; move 4 , v0 ; move v0 , ua + v0 )  | ( move 3 + ul , ul + ul ; v0 = 2 - 4 ; move 2 , 2 )  | ( ( v0 = ul + ul ; move 4 , v0 ) ; move v0 , v0 )  
[192] ( move 2 , 2 ; move 3 , 3 )  | ( move ul + ul , 2 ; move 2 + ul , 3 )  | ( move 2 , 2 ; move 3 , 3 ; pen ul - 4 )  | ( move 2 , 2 ; v0 = 3 ; move v0 , v0 )  | ( move 2 , 2 ; move 0 , ua * 3 ; move 3 , 3 )  | ( move 2 , 2 ; move 3 , 3 ; v0 = 0 - ul )  | ( move ul , 2 ; ( move ul , ua ; move 3 , 3 ) )  | ( move 2 , ul + ul ; v0 = 3 ; move v0 , v0 )  | ( move 2 , ul + ul ; ( move 4 - ul , 3 ; pen ul ) )  | ( ( move ul + ul , 2 ; pen ul ; move 3 , 3 ) ; pen ul )  | ( move 3 - ul , ul + ul ; move 3 , 4 - ul ; pen ua - 3 )  | ( ( pen ul ; pen ua / 3 ; move 2 , 3 - ul ) ; move 3 , 3 )  
[193] ( move 3 , 0 ; move 4 , 3 )  | ( move 3 , ua ; move 4 , 3 )  | ( move 3 , 0 ; move 2 + 2 , 3 )  | ( move 2 + ul , 0 ; move 4 , 3 )  | ( move 4 - ul , 0 ; move 4 , 3 )  | ( move 3 , ua ; move 3 + ul , 3 )  | ( move 3 , ua ; move 4 , 3 ; pen ua )  | ( move 2 + ul , ua ; move 3 + ul , 3 )  | ( move ua - 3 , ua ; move ua - 2 , 3 )  | ( move 3 , 0 ; move 0 , ua ; move 4 , 3 )  | ( pen ul / 2 ; move 3 , 0 ; move 4 , 3 )  | ( v0 = 3 ; move v0 , ua ; move 4 , v0 )  | ( ( v0 = 4 - ul ; move v0 , ua ) ; move 4 , v0 )  
[194] ( move 2 , 3 ; move 3 , 2 )  | ( move 2 , 3 ; move 2 + ul , 2 )  | ( move ul + ul , 3 ; move 3 , 2 )  | ( pen 3 ; ( move 2 , 3 ; move 3 , 2 ) )  | ( ( move 2 , 3 ; v0 = ul + ul ) ; move 3 , v0 )  | ( ( move 2 , 3 ; move ul , ul + ul ) ; move 4 / 2 , ua )  | ( v0 = 2 ; move v0 , ul + v0 ; move 3 , v0 - ua )  
[195] ( move 2 , 4 ; move 2 , 2 )  | ( move 2 , 4 ; move 2 , ul + ul )  | ( move 2 , 4 ; move ul + ul , 2 )  | ( v0 = 2 ; move v0 , 4 ; move 2 , 2 )  | ( ( move 2 , 4 - ua ; pen ul ) ; move 2 , 2 - ua )  | ( v0 = ul + ul ; move v0 , 4 ; move v0 , v0 )  | ( v0 = 2 ; move v0 , v0 + v0 ; move 2 , v0 )  | ( v0 = 2 ; move v0 , v0 + v0 ; move v0 , 2 )  | ( move 2 , 4 ; v0 = 3 - ul ; move 4 / v0 , v0 )  | ( v0 = 2 ; move v0 , v0 * v0 ; move v0 , v0 )  
[196] ( move 4 , 0 ; move 3 , 3 )  | ( move 4 , ua ; move 3 , 3 )  | ( move 3 + ul , ua ; move 3 , 3 )  | ( move 4 , ua ; move 2 + ul , 3 )  | ( move 4 , ua ; move 3 , 3 ; move 0 , 2 )  | ( move 4 , ua ; v0 = 2 ; move 3 , 3 )  | ( move 3 , ua ; move ul , 0 ; move 3 , 3 )  | ( move 4 , ua ; ( move 3 , 3 ; pen ua ) )  | ( move 4 , ua ; v0 = 3 ; move v0 , 3 )  | ( v0 = 4 ; move v0 , ua ; move 3 , 3 )  | ( move 4 , ua * 4 ; move 3 , 3 ; v0 = 2 )  | ( move 3 + ul , ua ; move 0 , 3 ; move 3 , 0 )  | ( move 0 , 0 ; move 3 + ul , ua ; move 3 , 3 )  | ( v0 = 3 ; move 4 , ua ; move v0 , v0 )  | ( move 4 , ua ; v0 = 3 ; move v0 , v0 )  | ( move 4 , ua + ua ; v0 = 3 ; move v0 , v0 )  
[197] ( move 4 , 0 ; move 4 , 2 )  | ( move 4 , ua ; move 4 , 2 )  | ( move 4 , 0 ; move 4 , ua + 2 )  | ( move 4 , 0 ; move 4 , ul + ul )  | ( move 4 , ua ; move 4 , ul + ul )  | ( pen ul ; move 4 , 0 ; move 4 , 2 )  | ( move 4 , ua ; move 4 , 2 ; pen ul )  | ( move 3 + ul , ua ; move 4 , ul + ul )  | ( move 4 , ua ; move 3 + ul , ul + ul )  | ( move 4 , 0 ; move 4 , 2 ; v0 = ua )  | ( move ul , ua ; move 3 , 0 ; move 4 , 2 )  | ( move 4 , ua ; move 4 , 2 ; v0 = ul )  | ( move 4 , ua ; pen 2 + ul ; move 4 , 2 )  | ( v0 = 4 ; move v0 , ua ; move 4 , ua + 2 )  | ( move 3 + ul , ua ; move 0 , ul ; move 4 , ua + ul )  | ( pen 2 ; ( move 4 , 0 ; move 4 , 4 - 2 ; pen ul - ua ) )  
[198] ( move 3 , 0 ; move 3 , 4 )  | ( move 3 , ua ; move 3 , 4 )  | ( move 3 , 0 ; move 3 , ua + 4 )  | ( move 3 , 0 ; move 3 , 3 + ul )  | ( move 3 , ua ; move 3 , 3 + ul )  | ( move 3 , ua ; move 3 , 4 ; pen 4 )  | ( move 3 , 0 ; pen 3 * 2 ; move 3 , 4 )  | ( move ul , 0 ; move 2 , ua ; move 3 , 4 )  | ( move 3 , ua ; move 3 , 4 ; v0 = ul )  | ( pen 3 + ul ; move 3 , ua ; move 3 , 4 )  | ( move 3 , ua ; move 3 , 4 ; pen 2 - ul )  | ( move 3 , 0 ; ( move 0 , ua ; move 3 , 4 ) )  | ( move 3 , ua ; v0 = 2 / 4 ; move 3 , 4 )  | ( ( move 3 , 0 ; move 3 , 4 ) ; pen ua - 3 )  | ( move ul , 0 ; move 2 , 0 ; move 2 + ul , 4 )  | ( move 3 , ua ; ( v0 = ua ; move 3 , 4 ) )  | ( pen ua ; move 2 + ul , ua ; move 2 + ul , 4 )  | ( move 3 , ua ; v0 = 3 ; move v0 , 4 - ua )  | ( move 3 , 0 ; ( move 3 , 4 ; v0 = 4 + ul ) )  | ( ( move 3 , ua ; v0 = 3 + ul ) ; move 3 , 4 )  | ( move 3 , 0 ; move 0 , 3 ; move 2 + ul , ul - ua )  | ( v0 = 2 + ul ; move v0 , ua ; move v0 , 4 )  | ( move 3 , ua * 2 ; v0 = 3 ; move v0 , 3 + ul )  | ( ( pen 4 ; move 3 , ua ; move 2 , 4 ) ; move ul , ua + ua )  
[199] ( move 2 , 0 ; move 4 , 4 )  | ( move 2 , ua ; move 4 , 4 )  | ( move 2 , ua * 4 ; move 4 , 4 )  | ( move 2 , ua ; move 3 + ul , 4 )  | ( move 2 , ua ; move 4 , 3 + ul )  | ( move ul + ul , 0 ; move 4 , 4 )  | ( move ul + ul , ua ; move 4 , 4 )  | ( move ul + ul , 0 ; move 2 * 2 , 4 )  | ( move 3 - ul , ua ; move 4 , ua + 4 )  | ( move 2 , 0 ; move 4 , 4 ; v0 = ul )  | ( move ul + ul , 0 ; move 4 , 4 ; pen ua )  | ( v0 = 2 ; move v0 , ua ; move 4 , 4 )  | ( move 2 , ua ; v0 = 4 ; move v0 , v0 )  | ( move ul + ul , 0 ; ( pen ul ; move 4 , 4 ) )  | ( move ul + ul , 0 ; move 3 , 4 ; move ul , ua )  | ( move ul + ul , 0 ; v0 = 4 ; move 4 , v0 )  | ( ( move 2 , 0 ; v0 = 4 ) ; move v0 , v0 )  | ( ( move 2 , 0 ; v0 = ul - 3 ) ; move 4 , 4 )  | ( move ua / 3 , 0 ; v0 = 4 ; move v0 , v0 )  | ( move ul + ul , ua ; v0 = 4 ; move v0 , v0 )  | ( v0 = 2 ; move v0 , 0 ; move 4 , v0 + v0 )  | ( move ul + ul , ua ; v0 = ul ; move 4 , v0 + 3 )  | ( ( move ul + ul , ua ; v0 = 4 ) ; move v0 , v0 )  
[200] ( move 3 , 2 ; move 2 , 3 )  | ( move 3 , ua + 2 ; move 2 , 3 )  | ( move 3 , 2 ; move 2 , ua + 3 )  | ( move 2 + ul , 2 ; move ul + ul , 3 )  | ( move 3 , 2 ; move ul + ul , 3 - ua )  | ( move 3 , 4 / 2 ; pen 2 ; move 2 , 3 )  | ( move 3 , ul + ul ; move ul + ul , 3 )  | ( move 3 , 2 ; move 2 , ua + 3 ; v0 = 4 )  | ( v0 = 2 + ul ; move v0 , 2 ; move 2 , v0 )  | ( ( v0 = 2 ; move 3 , v0 ) ; move v0 , 3 - ua )  | ( ( v0 = 2 ; move 3 , v0 ) ; move v0 , v0 + ul )  
[201] ( move 2 , 2 ; move 4 , 2 )  | ( move ua / 3 , 2 ; move 4 , 2 )  | ( move 4 - 2 , 2 ; move 4 , 4 - 2 )  | ( move ul + ul , ul + ul ; move 4 , 2 )  | ( move 2 , 2 ; pen ua * 2 ; move 4 , 2 )  | ( move ul + ul , 2 ; move 4 , 2 ; pen ua )  | ( move 2 , 2 - ua ; move 3 + ul , ul + ul )  | ( v0 = 2 ; move v0 , v0 ; move 4 , 2 )  | ( move 2 , 2 ; ( pen ua ; move 4 , ua + 2 ) )  | ( v0 = 2 ; move v0 , v0 ; move 4 , v0 )  | ( move 0 , ua * 4 ; move 2 , 2 ; move 3 + ul , 2 )  | ( move ul + ul , 2 ; move 4 , 4 / 2 ; v0 = 4 )  | ( move 2 , 2 ; move 3 , ul + ul ; move ul , ua * 2 )  | ( move 2 , ul + ul ; v0 = 2 ; move v0 * v0 , v0 )  | ( move 0 , ua ; ( move 2 , ua + 2 ; pen ul ) ; move 4 , 2 )  
[202] ( move 2 , 4 ; move 3 , 2 )  | ( move 2 , ua + 4 ; move 3 , 2 )  | ( move 2 , 4 ; move 3 , 3 - ul )  | ( move ul + ul , 4 ; move 2 + ul , 3 - ul )  | ( v0 = 2 ; move v0 , 4 ; move v0 + ul , v0 )  
[203] ( move 4 , 0 ; move 4 , 3 )  | ( move 4 , ua ; move 4 , 3 )  | ( move 4 , 0 ; move 4 , 4 - ul )  | ( move 3 + ul , ua ; move 4 , 3 )  | ( move 4 , ua + ua ; move 4 , 3 )  | ( pen 2 ; move 4 , 0 ; move 4 , 3 )  | ( move 4 , 0 ; move 3 + ul , 2 + ul )  | ( move 4 , ua ; ( move 4 , 3 ; pen ul ) )  | ( move 4 , ua ; move ul , 3 ; move 3 , ua )  | ( move 4 , 0 ; v0 = 4 ; move v0 , 3 )  | ( move 4 , ua ; move 4 , 2 + ul ; pen ul )  | ( v0 = ua ; ( move 4 , ua ; move 4 , 3 ) )  | ( pen ua ; ( move 4 , 0 ; move 4 , 4 - ul ) )  | ( move 4 , ua * 3 ; move ul , 3 ; move 3 , ua )  | ( move 4 , 0 ; move 3 + ul , ua + 3 ; pen ul )  | ( move 2 , ua ; move ul + ul , ua ; move 4 , 3 )  | ( move 4 , 0 ; v0 = ua ; move 4 , v0 + 3 )  | ( move 4 , 0 ; v0 = ua + 3 ; move 4 , v0 )  | ( pen ua ; ( move ua - 2 , ua * 4 ; move 4 , 3 ) )  | ( move 4 , ua ; ( pen ul ; move 3 + ul , 3 ) ; pen ul + ul )  
[204] ( move 4 , 0 ; move 3 , 4 )  | ( move 4 , ua ; move 3 , 4 )  | ( move 4 , ua ; move 3 , 3 + ul )  | ( move 4 , ua ; pen 2 ; move 3 , 4 )  | ( move 4 , ua ; move 3 , 4 ; pen ul )  | ( move 4 , ua ; move 0 , 4 ; move 3 , 0 )  | ( move 4 , 0 ; move 3 , 4 ; move 0 , ua )  | ( move ul , 0 ; move 3 , 0 ; move 3 , 4 )  | ( move 4 , ua ; move 3 , 4 ; v0 = 0 )  | ( move 4 , ua ; v0 = 3 ; move v0 , 4 )  | ( v0 = 4 ; move v0 , ua ; move 3 , v0 )  | ( ( move 0 , ua ; move 4 , ua ) ; move 3 , 4 )  | ( ( move 4 , ua ; move 0 , ua + 3 ) ; move 3 , ul )  | ( v0 = 4 ; move v0 , ua ; move v0 - ul , v0 )  | ( v0 = 4 ; ( move v0 , ua ; move 2 + ul , v0 ) )  
[205] ( move 3 , 3 ; move 2 , 3 )  | ( move 3 , 3 ; move 2 - 4 , 0 )  | ( move 3 , 3 - ua ; move 2 , 3 )  | ( pen 2 ; move 3 , 3 ; move 2 , 3 )  | ( pen ul ; move 3 , 3 ; move 2 , 3 )  | ( move 2 + ul , 3 ; move 2 , 3 - ua )  | ( move 3 , ua + 3 ; move ul + ul , 3 )  | ( move 2 + ul , 3 ; move 2 , 3 ; pen ua )  | ( v0 = 3 ; move v0 , v0 ; move 4 / 2 , v0 )  | ( v0 = 3 ; move v0 , v0 ; move ua / 3 , v0 )  | ( v0 = 3 ; move v0 , v0 ; move ul + ul , v0 )  | ( v0 = 3 ; move v0 , v0 ; move ua / v0 , v0 )  | ( v0 = 3 - ua ; move ua + v0 , v0 ; move 2 , v0 )  | ( move 2 + ul , 3 ; ( pen 3 + 2 ; move 2 , 3 ; pen ul ) )  
[206] ( move 4 , 3 ; move 2 , 2 )  | ( move 4 , 3 ; move 2 , ua + 2 )  | ( move 4 , 3 ; move 3 - ul , 2 )  | ( move 4 , 3 ; move ul + ul , 2 )  | ( move 3 + ul , 2 + ul ; move 2 , 2 )  | ( pen 3 ; move 4 , 3 ; move 2 , 4 - 2 )  | ( move 4 , 3 ; move 2 , 2 ; move 0 , ua )  | ( v0 = 2 ; move 4 , 3 ; move v0 , v0 )  | ( move 4 , 3 ; v0 = 2 ; move v0 , v0 )  | ( move 0 , ua ; move 4 , 3 ; move 3 - ul , 2 )  | ( move 3 + ul , 3 ; v0 = ua ; move 2 , 2 )  | ( move 4 , 3 ; move 2 , 2 ; v0 = ul - ua )  | ( ( v0 = 2 ; move 4 , 3 ) ; move v0 , 2 )  | ( move 4 , 3 - ua ; move ul , 2 ; move ul , ua )  | ( move 2 + 2 , 3 ; move 2 , 2 ; v0 = ul / ua )  | ( move 0 , ul ; move 3 + ul , 2 ; move 2 , ua + 2 )  | ( move 0 , 2 ; ( move 4 , ul ; move 2 , ul + ul ) )  
[207] ( move 2 , 2 ; move 4 , 3 )  | ( move 2 , 3 - ul ; move 4 , 3 )  | ( move ul + ul , 2 ; move 4 , 3 )  | ( move ua / 3 , 4 / 2 ; move 4 , 2 + ul )  | ( move 2 , 2 ; ( move 0 , 2 ; move 4 , ul ) )  
[208] ( move 3 , 2 ; move 3 , 3 )  | ( move 3 , 2 ; move 3 , ua + 3 )  | ( move 3 , 2 ; move 3 , 2 + ul )  | ( move 3 , ul + ul ; move 3 , 3 )  | ( move 3 , 2 ; pen ua ; move 3 , 3 )  | ( move 3 , ul + ul ; move 2 + ul , 3 )  | ( move 3 , ul + ul ; move 3 , 2 + ul )  | ( move 3 , 2 ; move 3 , 3 ; v0 = ul )  | ( move 3 , ua + 2 ; move 4 - ul , 4 - ul )  | ( move 3 , 2 ; ( v0 = 3 ; move v0 , 3 ) )  | ( v0 = 3 ; move v0 , 2 ; move v0 , v0 )  | ( ( move 3 , 2 ; v0 = 3 ) ; move v0 , v0 )  | ( pen 4 ; ( move 2 + ul , 4 / 2 ; move 3 , 3 ) )  | ( move 2 , 2 ; ( move ul , 0 ; move 3 , 3 - ua ) )  | ( move 4 - ul , 2 ; move 0 , ul ; move 3 , ul + ul )  | ( pen ul ; ( move 3 , 2 ; move 3 , 3 ; v0 = ul ) )  
[209] ( move 4 , 2 ; move 3 , 2 )  | ( move 4 , 2 ; move 3 , ul + ul )  | ( move 4 , ul + ul ; move 3 , 3 - ul )  | ( pen 4 * 4 ; move 4 , 2 ; move 3 , 2 )  | ( move 4 , 2 ; move 3 , 2 ; pen 4 + ul )  | ( move ul , 0 ; move 4 , 2 ; move 3 , ul + ul )  | ( move 4 , 2 ; pen ul ; ( pen ua ; move 3 , 2 ) )  | ( v0 = 2 ; move 4 , v0 ; move ul + v0 , 2 )  | ( move 4 , ul + ul ; move 4 - ul , 2 ; move 0 , ul )  
[210] ( move 3 , 2 ; move 2 , 4 )  | ( move 3 , 2 ; move 2 , 2 * 2 )  | ( move 4 - ul , 2 ; move 2 , 4 )  | ( move 3 , ul + ul ; move 2 , 4 )  | ( move 3 , 2 ; move 3 - ul , 3 + ul )  | ( move 2 , 2 ; move ul , 0 ; move ul + ul , 4 )  | ( move 2 + ul , 2 ; pen 2 ; move ul + ul , 4 )  | ( ( v0 = 2 ; move 3 , v0 ) ; move v0 , 2 * v0 )  
[211] ( move 2 , 3 ; move 3 , 3 )  | ( move 2 , 3 ; v0 = 0 ; move 3 , 3 )  | ( move 2 , 2 + ul ; move 3 , 3 ; pen ul )  | ( move 2 , 3 ; v0 = 3 ; move 3 , v0 )  | ( move 2 , 3 ; v0 = 3 ; move v0 , v0 )  | ( pen 4 + ul ; move 2 , 3 ; move 3 , 3 - ua )  | ( v0 = 3 ; move 2 , v0 ; move v0 , v0 )  | ( ( v0 = 3 ; move 2 , v0 ) ; move 3 , v0 )  | ( move 2 , 3 ; v0 = 2 + ul ; move v0 , v0 )  
[212] ( move 3 , 3 ; move 3 , 2 )  | ( move 3 , 3 ; move 3 , ul + ul )  | ( move 3 , 3 ; ( move 3 , 2 ; pen ua ) )  | ( move 2 + ul , 3 ; move 3 , 2 ; pen 0 - 2 )  | ( move 3 , 3 ; move 3 , 3 - ul ; v0 = ua )  | ( v0 = 3 ; move v0 , v0 ; move v0 , 2 )  | ( ( move 3 , 3 ; move ul , ul + ul ) ; move 2 , ua )  | ( v0 = 3 ; ( move v0 , 3 ; move 3 , 2 ) ; pen ul )  | ( move 0 , 4 / 2 ; move 2 + ul , ul ; move 3 , ul + ul )  
[213] ( move 3 , 4 ; move 2 , 2 )  | ( pen ul ; move 3 , 4 ; move 2 , 2 )  | ( move 3 , 4 ; v0 = 2 ; move v0 , v0 )  | ( pen 4 * 3 ; move 3 , 4 ; move 2 , ua + 2 )  | ( move 3 , 4 ; move 0 , ul ; move 3 - ul , ul )  | ( move 3 , 4 ; pen ua * ua ; move 2 , ul + ul )  | ( ( move 2 , 4 ; move ul , ua ) ; move 2 , ul + ul )  | ( pen 4 - ul ; move 4 - ul , 4 ; move ul + ul , 3 - ul )  
[214] ( move 3 , 0 ; move 4 , 4 )  | ( move 3 , ua ; move 4 , 4 )  | ( move 2 + ul , 0 ; move 4 , 4 )  | ( move 3 , 0 ; move 4 , 3 + ul )  | ( move 3 , ua ; move 4 , 3 + ul )  | ( move 3 , 0 ; pen ul ; move 4 , 4 )  | ( move 3 , 0 ; move 4 , 4 ; v0 = 0 )  | ( move 2 + ul , ua ; pen 4 ; move 4 , 4 )  | ( move 3 , 0 ; v0 = 4 ; move v0 , 4 )  | ( move 3 , ua ; move 2 + 2 , 4 ; v0 = 0 )  | ( move 3 , 0 ; move 4 , 3 + ul ; pen 3 + 2 )  | ( move 3 , 0 ; move 0 , ua + 3 ; move 4 , ul )  | ( v0 = 4 ; move 3 , ua ; move v0 , v0 )  | ( move 3 , ua * 4 ; move 4 , 4 ; pen ul - 3 )  | ( pen ua + ul ; move 4 - ul , ua ; move 4 , 4 )  | ( v0 = 4 ; pen ul ; ( move 3 , ua ; move 4 , 4 ) )  | ( move 4 - ul , ua ; move 0 , 2 ; move 3 + ul , ul + ul )  
[215] ( move 2 , 3 ; move 4 , 2 )  | ( move ul + ul , 3 ; move 4 , 2 )  | ( move 2 , 3 ; move 2 * 2 , 3 - ul )  | ( move 4 - 2 , 3 ; move 4 , ul + ul )  | ( move 2 , ua + 3 ; move 4 , 2 ; pen 3 )  | ( pen ua - 4 ; move 2 , 3 ; move 4 , 2 )  | ( move 2 , 3 ; move 3 + ul , 2 ; pen 3 - ua )  | ( move 2 , 3 ; ( v0 = 2 ; move 4 , v0 ; pen 3 ) )  
[216] ( move 2 , 2 ; move 3 , 4 )  | ( move 2 , 2 ; move 3 , 3 + ul )  | ( move 2 , 2 - ua ; move 3 , 4 )  | ( move 2 , 3 - ul ; move 3 , ua + 4 )  | ( move 2 , 2 ; move ul , 3 + ul ; move 2 , 0 )  | ( move 2 , ul + ul ; move 3 , 3 + ul ; v0 = ul )  | ( move ul + ul , 2 ; ( move 2 , 3 + ul ; move ul , 0 ) )  
[217] ( move 4 , 0 ; move 4 , 4 )  | ( move 4 , ua ; move 4 , 4 )  | ( move 4 , 0 ; move 4 , 3 + ul )  | ( move 4 , ua * 2 ; move 4 , 4 )  | ( move 4 , ua ; move 4 , 3 + ul )  | ( pen ua ; move 4 , ua ; move 4 , 4 )  | ( move 4 , ua * 3 ; move 4 , 3 + ul )  | ( move 3 + ul , ua ; move 4 , 3 + ul )  | ( pen ua - 4 ; move 4 , ua ; move 4 , 4 )  | ( pen ul ; ( move 4 , ua ; move 4 , 4 ) )  | ( move 4 , 0 ; v0 = 4 ; move v0 , v0 )  | ( v0 = 4 ; move v0 , 0 ; move v0 , v0 )  | ( move 4 , ua ; move 3 , 3 + ul ; move ul , ua )  | ( v0 = 4 ; move v0 , ua ; move v0 , v0 )  | ( move 4 , 0 ; ( move 4 , 2 * 2 ; v0 = 0 ) )  | ( move 4 , 0 ; v0 = 2 * 2 ; move v0 , v0 )  | ( move 4 , ua ; ( move 4 , 4 ; pen 4 ; pen ul ) )  | ( v0 = 2 ; move v0 + v0 , ua ; move 4 , 4 )  | ( ( move 4 , ua * 4 ; move 4 , 4 ) ; v0 = ul )  | ( v0 = 4 ; move v0 , v0 * ua ; move v0 , v0 )  
[218] ( move 4 , 3 ; move 3 , 2 )  | ( move 3 + ul , 3 ; move 3 , 2 )  | ( ( move 4 , 3 ; pen ua ) ; move 3 , 2 )  | ( move 4 , 3 ; v0 = 2 ; move 3 , v0 )  | ( v0 = 3 ; move ul + v0 , v0 ; move 3 , 2 )  | ( move 4 , 3 ; move 3 , 3 - ul ; ( pen ul ; pen 4 + 2 ) )  
[219] ( move 4 , 3 ; move 2 , 3 )  | ( move 4 , 3 ; move ua - 4 , 3 )  | ( move 4 , 3 ; move 3 - ul , 2 + ul )  | ( v0 = 3 ; move 4 , v0 ; move 2 , v0 )  | ( move 3 , 3 ; move ul , ua ; move 2 , 2 + ul )  | ( v0 = 2 ; move 4 , 3 ; move 2 , ul + v0 )  | ( move 3 + ul , 3 ; move ul + ul , 3 ; pen ul )  | ( move 3 + ul , 2 + ul ; move 2 , ua + 3 ; v0 = 0 )  
[220] ( move 2 , 2 ; move 4 , 4 )  | ( move 2 , 4 - 2 ; move 4 , 4 )  | ( move 2 , ul + ul ; move 4 , 4 )  | ( move 2 , 2 ; v0 = 4 ; move v0 , v0 )  | ( move 2 , 2 ; move 4 , 3 + ul ; v0 = ua )  | ( v0 = 2 ; move v0 , v0 ; move 4 , 2 * v0 )  | ( ( pen 3 ; move ul , 2 ; move ul , ua ) ; move 4 , 4 )  | ( ( move ul + ul , 2 ; v0 = 4 ) ; move v0 , v0 )  | ( move 0 , ul ; move ul + ul , 2 - ul ; move 3 + ul , 4 )  | ( ( move 2 , 2 ; pen ua + 2 ; move 3 , 4 ) ; move ul , 0 )  
[221] ( move 4 , 2 ; move 4 , 2 )  | ( move 4 , ul + ul ; move 4 , ul + ul )  | ( v0 = 2 ; move 4 , v0 ; move 4 , v0 )  | ( pen ul ; ( move 4 , 2 ; move 4 , ul + ul ) )  | ( v0 = 3 + ul ; move v0 , 2 ; move 4 , 2 )  | ( move 4 , 2 ; move 4 , 2 ; ( pen 0 ; pen ul - 4 ) )  | ( move 4 , ul + ul ; v0 = ul ; move 4 , v0 + v0 )  | ( v0 = ul + ul ; move 4 , v0 ; move v0 + v0 , 2 )  
[222] ( move 2 , 3 ; move 4 , 3 )  | ( move 2 , 2 + ul ; move 4 , 3 )  | ( move 2 , 3 ; move 3 + ul , 3 )  | ( move ul + ul , 3 ; move 2 + 2 , 3 )  | ( move 2 , 2 + ul ; move 4 , 2 + ul )  | ( move 2 , 3 ; move 3 + ul , ua + 3 )  | ( move ul + ul , ua + 3 ; move 4 , 3 )  | ( move 2 , 3 ; pen 3 + ul ; move 4 , 3 )  | ( move 2 , 3 ; move 3 , 3 ; move ul , ua )  | ( move 2 , 3 ; v0 = 4 ; move v0 , 3 )  | ( v0 = 3 ; move 2 , v0 ; move 4 , 3 )  | ( v0 = 3 ; move 2 , v0 ; move 4 , v0 )  | ( v0 = ul ; move v0 + v0 , 3 ; move 4 , 3 )  | ( move ul + ul , 3 ; move 4 , 3 ; v0 = 3 - 4 )  | ( v0 = ua + 2 ; move ul + ul , 3 ; move 4 , 3 )  | ( ( pen ua ; move 2 , 3 ) ; move 3 + ul , 2 + ul )  
[223] ( move 4 , 2 ; move 3 , 3 )  | ( move 3 + ul , 2 ; move 3 , 3 )  | ( move 4 , ua + 2 ; move 3 , 3 )  | ( move 4 , ul + ul ; move ua / 2 , 3 )  | ( move 4 , 4 - 2 ; v0 = 3 ; move v0 , v0 )  | ( move 3 + ul , 2 ; move 3 - ul , 3 ; move ul , ua )  
[224] ( move 3 , 2 ; move 3 , 4 )  | ( move 2 + ul , 4 / 2 ; move 3 , 4 )  | ( move 3 , 2 ; move 3 , 4 ; v0 = ua )  | ( move 3 , 2 ; move 3 , 4 ; v0 = ul )  | ( move 2 + ul , 2 ; move ul , 4 ; move 2 , ua )  | ( move 3 , 2 ; move 3 - ul , 4 ; move ul , ua )  | ( move 3 , 2 ; ( pen 4 ; move 4 - ul , 4 ; move 0 , 2 ) )  
[225] ( move 3 , 2 ; move 4 , 3 )  | ( move 3 , 2 ; move 4 , 2 + ul )  | ( move 3 , 2 ; move 4 , ua + 3 )  | ( move 3 , 2 ; move 3 + ul , 2 + ul )  | ( move 0 , 2 ; move 2 + ul , ua ; move 4 , 4 - ul )  | ( move 2 , ul + ul ; ( move ul , 0 ; move 4 , 3 ) )  | ( move 3 , 2 ; ( pen 4 + ul ; move 4 , 3 ; move 0 , 3 ) )  
[226] ( move 2 , 4 ; move 4 , 2 )  | ( move 2 , ua + 4 ; move 4 , 2 )  | ( move 2 , 4 ; pen 2 ; move 4 , 2 )  | ( move 2 , ua + 4 ; move 3 + ul , 2 )  | ( move 2 , 4 ; move 3 + ul , ua + 2 )  | ( move 2 , 2 + 2 ; move 3 - ul , 2 ; move 2 , ua )  | ( move 0 , ul ; move ul + ul , 2 + ul ; move 4 , 2 )  
[227] ( move 4 , 2 ; move 2 , 4 )  | ( move 2 * 2 , 2 ; move 2 , 4 )  | ( move 4 , 2 ; pen ul ; move 2 , 4 )  | ( move 4 , 2 ; v0 = 2 ; move v0 , 4 )  | ( move 4 , 3 - ul ; pen 2 ; move 3 - ul , 4 )  | ( move 4 , ua + 2 ; move 4 - 3 , 2 * 2 ; move ul , ua )  | ( ( pen ul ; move 3 , 2 ; move ul , ua ) ; move 2 , 3 + ul )  
[228] ( move 3 , 4 ; move 3 , 2 )  | ( move 2 + ul , 4 ; move 3 , 2 )  | ( move 3 , 4 ; move 2 + ul , 2 )  | ( move 3 , 3 + ul ; move 3 , 2 )  | ( move 3 , ua + 4 ; move 3 , 2 )  | ( v0 = 3 ; move v0 , 4 ; move v0 , 2 )  | ( v0 = 3 ; move v0 , ul + v0 ; move v0 , 2 )  
[229] ( move 4 , 3 ; move 2 , 4 )  | ( move 3 + ul , 3 ; move 2 , 4 )  | ( move 4 , 3 ; move ul + ul , 4 )  | ( move 3 + ul , 3 ; move 2 , 4 ; pen ul )  | ( ( move 4 , 3 ; move 2 , 4 ) ; v0 = ua )  | ( move 4 , 3 ; move ul + ul , 4 ; v0 = 3 + ul )  | ( pen ua ; move 3 + ul , 3 ; ( move 2 , 4 ; pen 2 ) )  | ( move 4 , ua + 3 ; ( move 2 - ul , 4 ; move ul , ua ) )  
[230] ( move 3 , 4 ; move 2 , 4 )  | ( ( move 3 , 4 ; pen ua * 2 ) ; move 2 , 4 )  | ( move 2 , 3 + ul ; ( move ul , ua ; move 2 , 4 ) )  
[231] ( move 3 , 3 ; move 3 , 4 )  | ( move 3 , 3 ; move 3 , 3 + ul )  | ( pen ul ; move 3 , 3 ; move 3 , 4 )  | ( move 0 , 3 ; move 3 , ua ; move 3 , 4 )  | ( ( move 3 , 3 ; move 3 , 4 ) ; move 0 , ul )  | ( v0 = 3 ; move v0 , v0 ; move v0 , 4 )  | ( pen 4 ; move 3 , 3 ; ( move 3 , 2 * 2 ; pen ua ) )  | ( pen ul ; ( pen ua ; move 3 , ua + 3 ; move 3 , 2 + 2 ) )  
[232] ( move 3 , 4 ; move 4 , 2 )  | ( move 2 + ul , 4 ; move 4 , 2 )  | ( pen ua ; move 3 , 4 ; move 4 , 2 )  | ( move 3 , 4 ; move 4 , 3 - ul ; v0 = 2 )  | ( move 3 , 3 + ul ; v0 = 2 ; move v0 * v0 , v0 )  
[233] ( move 4 , 4 ; move 3 , 2 )  | ( pen 2 ; move 4 , 4 ; move 3 , 2 )  | ( move 4 , 4 ; move 2 + ul , 4 / 2 )  | ( move 3 + ul , 4 ; move 3 , 2 - ua )  | ( move 4 , 4 ; move 3 , 2 ; move 0 , ua )  | ( move 4 , 4 ; pen 2 ; move 2 + ul , 2 )  | ( move 4 , 4 ; move 3 , ul + ul ; pen ul )  | ( move 4 , 4 ; ( move 3 , 2 ; v0 = 4 ) )  | ( move 4 , 4 ; ( move 3 , 2 ; v0 = ul ) )  | ( move ul / 4 , ul ; move 3 + ul , 3 ; move 4 - ul , 2 )  
[234] ( move 4 , 2 ; move 4 , 3 )  | ( move 4 , 4 / 2 ; move 4 , 3 )  | ( move 4 , 2 ; move 4 , ua + 3 )  | ( move 4 , 2 ; move 4 , 2 + ul )  | ( move 4 , 2 ; move 4 , 3 ; pen 2 )  | ( pen 3 ; move 4 , 2 ; move 4 , 3 )  | ( ( move 4 , 2 ; pen ua ) ; move 4 , 3 )  | ( move 4 , 4 - 2 ; move 0 , 3 ; move 4 , ua )  
[235] ( move 3 , 4 ; move 3 , 3 )  | ( move 2 + ul , 4 ; move 3 , 3 )  | ( move 3 , 4 - ua ; move 3 , 3 )  | ( move 2 + ul , 2 * 2 ; move 4 - ul , 3 )  | ( move 3 , 4 ; v0 = 3 ; move v0 , v0 )  | ( move 0 , ul ; ( move 3 , 3 ; move 3 , 3 ) )  | ( move 2 , 4 ; move ul , ua ; move 2 + ul , 3 )  | ( move 3 , ua + 4 ; v0 = 3 ; move v0 , 3 )  | ( move 2 + ul , 4 ; move 2 + ul , 3 ; v0 = ua + ul )  
[236] ( move 4 , 4 ; move 2 , 3 )  | ( move 4 , 4 ; move 2 , 2 + ul )  | ( move 4 , 4 ; move ul + ul , 3 )  | ( move 4 , 4 ; pen ul ; move 2 , 3 )  | ( pen ua * 2 ; move 4 , 4 ; move 2 , 3 )  | ( move 4 , 4 ; pen ua ; move 2 , 4 - ul )  | ( move 3 , 4 ; move ul , ua ; move 2 , 2 + ul )  | ( move 4 , 4 ; move ul , 3 ; move ul , ua * 3 )  | ( pen ua - 4 ; move 4 , 4 ; move ul + ul , ua + 3 )  
[237] ( move 2 , 4 ; move 3 , 4 )  | ( move 2 , 4 ; move 3 , ua + 4 )  | ( move 2 , ua + 4 ; move 3 , 2 * 2 )  | ( ( move 2 , 4 ; move 3 , 4 ) ; v0 = ua )  | ( move 2 , 4 ; pen ua + 4 ; move 3 , ua + 4 )  
[238] ( move 3 , 3 ; move 4 , 3 )  | ( move 3 , ua + 3 ; move 3 + ul , 3 )  | ( ( move 3 + ul , 3 ; pen 4 ) ; move 4 , 3 )  | ( v0 = 3 ; ( move v0 , v0 ; move 3 + ul , v0 ) )  
[239] ( move 4 , 4 ; move 4 , 2 )  | ( move 4 , 4 ; move 4 , 4 - 2 )  | ( move 4 , 4 ; pen ul ; move 4 , 2 )  | ( move 4 , 3 + ul ; move 4 , ua + 2 )  | ( v0 = 4 ; move v0 , v0 ; move 4 , 2 )  | ( v0 = 4 ; move v0 , v0 ; move v0 , 2 )  | ( ( move 4 , 4 - ua ; move ul , ua + 2 ) ; move 3 , ua )  
[240] ( move 3 , 4 ; move 3 , 4 )  | ( move 3 , 4 ; move 3 , ua + 4 )  | ( move 3 , 4 ; move 3 , 4 ; pen ul )  | ( ( move 3 , 4 ; v0 = 3 ) ; move 3 , 4 )  | ( pen 4 + 2 ; move 3 , 4 ; move 2 + ul , 4 )  | ( move ul , 3 + ul ; move 2 , ua ; move 3 , 4 )  
[241] ( move 4 , 4 ; move 3 , 3 )  | ( move 4 , 4 ; move 3 , 3 - ua )  | ( move 4 , 4 ; move 3 , 3 ; move 0 , 2 )  | ( move 4 , 4 ; v0 = 3 ; move v0 , v0 )  | ( move 4 , ua + 4 ; move 2 , 3 ; move ul , 0 )  | ( v0 = ua / 2 ; ( move 4 , 4 ; move v0 , 3 ) )  
[242] ( move 2 , 4 ; move 4 , 4 )  | ( move 2 , 3 + ul ; move 4 , 4 ; v0 = 3 )  | ( move 2 , 4 ; move 0 , ul ; move 4 , 2 + ul )  | ( v0 = 4 ; move 2 , v0 ; move v0 , v0 )  | ( pen 4 * 3 ; ( move 2 , 4 ; move 4 , ua + 4 ) )  | ( move ul + ul , 4 ; v0 = 4 ; move v0 , v0 )  | ( v0 = 4 ; move 2 , ua + v0 ; move v0 , v0 )  | ( v0 = 4 ; move 2 , v0 ; move v0 , v0 - ua )  
[243] ( move 4 , 2 ; move 4 , 4 )  | ( move 2 * 2 , 2 ; move 4 , 4 )  | ( move 4 , 2 ; move 3 + ul , 4 )  | ( move 4 , 3 - ul ; move 4 , 4 )  | ( move 4 , 2 ; move 4 , 4 ; pen ua )  | ( pen ul ; move 4 , ul + ul ; move 4 , 4 )  | ( move 4 , 2 ; move 3 , ua + 4 ; move ul , 0 )  | ( ( v0 = 4 ; move 4 , 2 ) ; move v0 , v0 )  | ( move 4 , ul + ul ; move 3 + ul , 4 ; v0 = ua )  
[244] ( move 4 , 4 ; move 2 , 4 )  | ( move 3 + ul , 4 ; move 2 , 4 )  | ( move 4 , 4 ; move 2 , ua + 4 )  | ( move 4 , ua + 4 ; move 2 , 4 )  | ( move 4 , 4 ; move 2 , 4 ; v0 = ua )  | ( move 4 , 4 ; pen ua * 3 ; move 2 , 4 )  | ( move 4 , 4 ; v0 = 4 ; move 2 , v0 )  | ( v0 = 4 ; move v0 , v0 ; move 2 , v0 )  | ( move 4 , 4 - ua ; move 2 , 4 ; move 0 , ua + ul )  | ( v0 = 4 ; move v0 , v0 ; move v0 / 2 , v0 )  | ( ( move 3 , 4 ; move ul , ua * 4 ) ; move ul + ul , 4 )  
[245] ( move 3 , 4 ; move 4 , 3 )  | ( move 2 + ul , 4 ; move 4 , 3 )  | ( move 3 , 3 + ul ; move 4 , 3 )  | ( move ul , 4 ; move 2 , ua ; move 4 , 3 )  | ( move 3 , 4 - ua ; v0 = 4 ; move v0 , 3 )  | ( v0 = 3 ; ( move v0 , 4 ; move 4 , v0 ; pen ul ) )  
[246] ( move 4 , 3 ; move 4 , 4 )  | ( pen 2 ; move 4 , 3 ; move 4 , 4 )  | ( move 3 + ul , 2 + ul ; move 4 , 4 )  | ( move 4 , ua + 3 ; move 4 , 3 + ul )  | ( pen 3 * 3 ; move 4 , 3 ; move 4 , 4 )  | ( move 4 , 3 ; v0 = 4 ; move v0 , v0 )  | ( move 4 , 2 + ul ; ( move 4 , 4 ; pen 3 ) )  | ( move 4 , ua + 3 ; v0 = 4 ; move v0 , v0 )  
[247] ( move 3 , 4 ; move 4 , 4 )  | ( move 3 , 3 + ul ; move 4 , 4 )  | ( move 3 , 4 ; move 3 + ul , 4 - ua )  | ( v0 = 4 ; move 3 , v0 ; move v0 , 4 )  | ( v0 = 4 ; move 3 , v0 ; move v0 , v0 )  | ( v0 = 2 * 2 ; move 3 , v0 ; move 4 , v0 )  | ( move 3 , 4 ; move 4 , 3 + ul ; v0 = ua + 4 )  | ( v0 = 4 ; ( move 3 , v0 ; move v0 , v0 ) )  | ( ( pen 2 ; move 3 , 4 ; v0 = 4 ) ; move v0 , v0 )  
[248] ( move 4 , 4 ; move 4 , 4 )  | ( move 4 , 4 ; move 3 + ul , 4 )  | ( move 4 , 4 ; move 4 , 4 ; pen 3 )  | ( move 0 , ul ; move 4 , 3 ; move 4 , 4 )  | ( move ul , 4 ; move 3 , 0 ; move 4 , 2 + 2 )  | ( v0 = 4 ; move 4 , v0 ; move v0 , v0 )  | ( v0 = 4 ; move v0 , 4 ; move v0 , v0 )  | ( v0 = 4 ; move v0 , v0 ; move 4 , v0 )  | ( v0 = 4 ; move v0 , v0 ; move v0 , v0 )  | ( v0 = 4 ; ( move v0 , v0 ; move v0 , v0 ) )  | ( ( v0 = 4 ; move v0 , v0 ) ; move v0 , v0 )  | ( v0 = 4 ; move v0 , v0 ; move v0 , v0 - ua )  | ( ( v0 = 4 ; move v0 , ua + v0 ) ; move 4 , v0 )  
[249] ( move 2 , 0 ; move ua , 2 )  | ( move 2 , ua ; move ua , 2 )  | ( move 2 , 0 ; move ua , 2 - ua )  | ( move 4 / 2 , ua ; move ua , 2 )  | ( move 2 , ua ; move ua , ul + ul )  | ( move ul + ul , ua ; move ua , 2 )  | ( move 3 - ul , 0 ; move ua , ul + ul )  | ( move 2 , 0 ; v0 = 4 ; move ua , 2 )  | ( move 2 , ua ; move 0 , 0 ; move ua , 2 )  | ( move 0 , ua ; move 2 , 0 ; move ua , 2 )  | ( move 2 , 0 ; move ua , 2 ; v0 = ua )  | ( move 2 , ua ; move ua , 2 ; v0 = 2 )  | ( move 2 , 0 ; move 0 , ul ; move ua , ul )  | ( move 2 , ua ; move ua , 2 ; pen ul / ua )  | ( v0 = ua ; move 2 , v0 ; move ua , 2 )  | ( ( move 2 , 0 ; v0 = 3 ) ; move ua , 2 )  | ( ( move 2 , ua ; move ua , 2 ) ; v0 = 2 )  | ( v0 = 2 ; move v0 , ua ; move ua , v0 )  | ( move ul + ul , 0 ; move ua , 2 ; v0 = 2 )  | ( move 2 , ua ; move ua , 2 ; move 2 , ua / 2 )  | ( move ul , 0 ; ( move ul , 0 ; move ua , 2 ) )  | ( ( pen ul ; move 2 , 0 ) ; move ua , 2 - ua )  | ( move ul , 0 ; move ul , 0 ; move ua , ul + ul )  | ( pen ul ; move ua / 3 , 0 ; move ua , ul + ul )  | ( pen ua * 4 ; move 2 , ua ; move ua , ul + ul )  | ( move 2 , 0 ; move ua , 4 - 2 ; v0 = 4 * 3 )  | ( move 4 - 2 , ua ; move ua , 2 ; v0 = 4 - 2 )  | ( v0 = 2 ; move v0 , 0 ; move ua , v0 - ua )  | ( ( pen 3 ; move 2 , 0 ; move 0 , 2 ) ; move ua , 0 )  | ( move 2 , ua + ua ; move 0 , ul ; move ua , 2 - ul )  | ( move 3 - ul , ua ; move ua , 2 ; v0 = ua + ul )  | ( ( pen ul ; pen ul ) ; move 2 , ua ; move ua , ua + 2 )  
[250] ( move ua , 0 ; move 2 , 2 )  | ( move ua , ua ; move 2 , 2 )  | ( move ua , 0 ; move 2 , 4 - 2 )  | ( move ua , 0 ; move 2 , ua + 2 )  | ( move ua , 0 - ua ; move 2 , 2 )  | ( move ua , 0 ; move 3 - ul , 2 )  | ( move ua , ua * 4 ; move 2 , 2 )  | ( move ua , ua ; move 2 , ua + 2 )  | ( move ua , 0 ; move ul + ul , 2 )  | ( move ua , 0 ; move 2 , ul + ul )  | ( move ua , ua ; move 2 , 2 - ua )  | ( move ua , ua ; move ul + ul , 2 )  | ( ( move ua , 0 ; move 2 , 2 ) ; pen 2 )  | ( move ua , ua ; move 3 - ul , ul + ul )  | ( pen 2 - ul ; move ua , 0 ; move 2 , 2 )  | ( pen 4 * 2 ; move ua , ua ; move 2 , 2 )  | ( move ua , 0 ; move 0 , ul ; move 2 , ul )  | ( move ua , ua ; pen 4 ; move 2 , ul + ul )  | ( v0 = 2 ; move ua , 0 ; move v0 , v0 )  | ( move ua , 0 ; v0 = 2 ; move v0 , v0 )  | ( move ua , 0 ; move 0 , 4 ; move 2 , ua - 2 )  | ( move ua , 0 ; v0 = 3 ; move 2 , 2 - ua )  | ( move ua , ua ; v0 = 2 ; move v0 , v0 )  | ( move ua , ua ; move 2 , 2 ; v0 = ua - 4 )  | ( move ua , ua ; move 2 , 2 ; move 0 , ua - ul )  | ( move ua , ua ; pen 2 + ul ; move 2 , ul + ul )  | ( move ua , ua ; move ul , 2 ; move ul , ua + ua )  | ( pen ua + ul ; move ua , ua ; move 2 , ul + ul )  | ( move ua , ua * 2 ; v0 = 2 ; move v0 , v0 )  | ( move ua , 0 ; v0 = ul + ul ; move v0 , v0 )  | ( v0 = ul ; ( move ua , ua ; move 2 , 2 ) ; pen ua )  | ( ( move ua , ua ; move ul + ul , 2 ) ; v0 = ua ; pen ua )  
[251] ( move ua , 0 ; move 3 , 2 )  | ( move ua , ua ; move 3 , 2 )  | ( move ua , 0 ; move 2 + ul , 2 )  | ( move ua , 0 - ua ; move 3 , 2 )  | ( move ua , ua * 3 ; move 3 , 2 )  | ( move ua , 0 ; move 3 , ul + ul )  | ( move ua , ua ; move 3 , 3 - ul )  | ( pen ua ; move ua , 0 ; move 3 , 2 )  | ( move ua , ua ; move 3 , 2 ; pen ul )  | ( move ua , 0 ; move 4 - ul , 3 - ul )  | ( move 0 , 0 ; move ua , 0 ; move 3 , 2 )  | ( move ua , 0 ; move 0 , 2 ; move 3 , 0 )  | ( move ua , 0 ; pen ua / 3 ; move 3 , 2 )  | ( move ua , ua ; ( pen ul ; move 3 , 2 ) )  | ( move ua , ua ; pen ul ; move 4 - ul , 2 )  | ( v0 = 2 ; move ua , ua ; move 3 , v0 )  | ( move ua , 0 ; move 3 , 2 ; v0 = 3 + ul )  | ( move ua , 0 ; move 3 , ul + ul ; v0 = 3 )  | ( move ua , ua * 4 ; pen 3 + ul ; move 3 , 2 )  | ( ( move ua , 0 ; pen ul + ul ) ; move 3 , 2 )  | ( move ua , ua ; move 3 , 2 - ua ; v0 = ua )  | ( pen ua - ul ; ( move ua , ua ; move 3 , 2 ) )  | ( ( pen ul ; move ua , ua ) ; move 3 , 3 - ul )  | ( move ua , ua ; move 2 + ul , ul + ul ; pen 0 )  | ( move ua , ua ; move ul + ul , 2 ; move ul , ua )  | ( move ua , ua ; v0 = ul ; move 3 , v0 + v0 )  | ( move ua , ua ; ( move 0 , ul ; move 2 + ul , ul ) )  | ( ( move ua , 0 ; pen 3 ) ; pen 3 ; move 2 + ul , 2 )  | ( v0 = 0 ; ( move ua , v0 ; move v0 + 3 , 2 ) )  | ( ( move ua , 0 ; ( pen 3 ; pen ua ) ) ; move 2 + ul , 2 )  | ( pen ul ; move ua , ua ; ( move 3 , ul + ul ; v0 = 0 ) )  
[252] ( move 2 , 0 ; move 2 , ul )  | ( move 2 , ua ; move 2 , ul )  | ( move 2 , 0 ; move 3 - ul , ul )  | ( move 2 , ua * 3 ; move 2 , ul )  | ( move 2 , ua ; move 4 - 2 , ul )  | ( move ul + ul , 0 ; move 2 , ul )  | ( move 2 , 0 ; move ul + ul , ul )  | ( move 2 , ua + ua ; move 2 , ul )  | ( move 2 , ua ; move 3 - ul , ul )  | ( move 2 , ua ; move ul + ul , ul )  | ( pen ul ; move 2 , 0 ; move 2 , ul )  | ( move 2 , ua ; pen ul ; move 2 , ul )  | ( move 4 / 2 , 0 ; move 2 , ua + ul )  | ( move ul + ul , 0 - ua ; move 2 , ul )  | ( move 2 , ua ; move ul + ul , ua + ul )  | ( move 2 , 0 ; pen 4 + ul ; move 2 , ul )  | ( move ul + ul , ua ; move ul + ul , ul )  | ( pen 3 ; move 2 , ua ; move 2 , ua + ul )  | ( move ul , ua ; move ul , 0 ; move 2 , ul )  | ( move 2 , 0 ; move ul + ul , ul ; pen ul )  | ( pen ul ; move ul + ul , ua ; move 2 , ul )  | ( v0 = 2 ; move v0 , 0 ; move v0 , ul )  | ( move 2 , ua ; move 2 , ul ; move 0 , ua + 2 )  | ( move 4 / 2 , ua ; move 2 , ul ; move 0 , ua )  | ( move 2 , ua ; move 3 - ul , ul ; v0 = ul )  | ( move ul , 0 ; move ul , ua ; move 2 , ua + ul )  | ( move ul , ua ; ( move ul , ua ; move 2 , ul ) )  | ( ( move 2 , ua ; v0 = 2 ) ; move v0 , ul )  | ( pen ul ; move ul + ul , ua ; move ul + ul , ul )  | ( move 2 , ua ; move 2 , ua + ul ; v0 = 3 - 4 )  | ( move 2 , 0 ; ( move ul + ul , ul ; pen 0 ) ; pen 2 )  | ( move 2 , ua ; pen 2 - ul ; ( pen ul ; move 2 , ul ) )  
[253] ( move 2 , 0 ; move ua , 3 )  | ( move 2 , ua ; move ua , 3 )  | ( move 2 , 0 ; move ua , ua + 3 )  | ( move 2 , 0 ; move ua , 2 + ul )  | ( move 2 , 0 ; move ua , 3 - ua )  | ( move 2 , ua ; move ua , 2 + ul )  | ( move ul + ul , 0 ; move ua , 3 )  | ( move 2 , ua ; move ua , 3 - ua )  | ( move 3 - ul , ua ; move ua , 3 )  | ( move ua / 3 , ua ; move ua , 3 )  | ( move ul + ul , ua ; move ua , 3 )  | ( move 2 , 0 ; pen ua ; move ua , 3 )  | ( move 2 , ua ; move ua , 3 ; pen ul )  | ( move ul + ul , ua ; move ua , 4 - ul )  | ( move 2 , ua ; move ua , 3 ; v0 = 0 )  | ( move 2 , 0 ; move ua , 3 ; v0 = ul )  | ( move 2 , ua ; move ua , 2 + ul ; pen 3 )  | ( pen ua ; move ul + ul , ua ; move ua , 3 )  | ( ( move 2 , 0 ; move ua , 3 ) ; v0 = 4 )  | ( move 2 , 0 ; move ua , ua + 3 ; v0 = 4 )  | ( move 2 , 0 - ua ; move ua , 3 ; v0 = 3 )  | ( ( move 2 , 0 ; move ua , 3 ) ; v0 = ua )  | ( move 2 , 0 ; ( move ua , 3 ; pen 0 - ul ) )  | ( move ul + ul , ua ; move 0 , 3 ; move ua , 0 )  | ( move ul + ul , ua ; move ua , 3 ; move 0 , ua )  | ( move 2 , ua ; v0 = 2 + ul ; move ua , v0 )  | ( move 2 , 0 ; v0 = ua ; move v0 , v0 + 3 )  | ( move 2 - ul , 0 ; ( move ul , 0 ; move ua , 3 ) )  | ( move 2 , ua ; move ua , 2 + ul ; v0 = 3 + ul )  | ( ( pen 3 ; move ul + ul , ua ) ; move ua , 4 - ul )  | ( pen ul ; ( move 2 , 0 ; v0 = ua ; move ua , 3 ) )  | ( ( move 2 , ua ; move ua , 3 ; v0 = ul ) ; pen ua )  
[254] ( move ua , 0 ; move 2 , 3 )  | ( move ua , ua ; move 2 , 3 )  | ( move ua , ua * 2 ; move 2 , 3 )  | ( move ua , 0 ; move ua / 3 , 3 )  | ( move ua , 0 ; move ul + ul , 3 )  | ( move ua , ua ; move 2 , 2 + ul )  | ( move ua , ua ; move 3 - ul , 3 )  | ( move ua , ua ; move ua - 4 , 3 )  | ( move ua , ua ; move ul + ul , 3 )  | ( pen 3 ; move ua , 0 ; move 2 , 3 )  | ( move ua , ua ; move 2 , 3 ; pen 0 )  | ( move ua , ua * 3 ; move 3 - ul , 3 )  | ( move ua , 0 ; move ul + ul , 2 + ul )  | ( move ua , 0 ; move 2 , 3 ; move 0 , 0 )  | ( move ua , ua ; pen 2 + ul ; move 2 , 3 )  | ( move ua , 0 ; move 2 , 4 - ul ; move 0 , 0 )  | ( move ua , 0 ; move 2 , 3 - ua ; pen 2 / 3 )  | ( move ua , ua * 4 ; ( move 2 , 3 ; pen 3 ) )  | ( move ua , 0 ; move 3 / 2 , 4 - ul ; pen ul )  | ( move ua , ua ; ( move 2 , 4 - ul ; pen 0 ) )  | ( ( move ua , ua ; move 3 - ul , 3 ) ; pen 3 )  | ( move ua , ua ; move 2 , 3 ; v0 = ua * ua )  | ( pen ul ; move ua , ua * 3 ; move ul , ua + 3 )  | ( move ua , ua ; v0 = 4 - ul ; move 2 , v0 )  | ( move ua , ua ; pen ul ; move ul + ul , 4 - ul )  | ( ( pen ua ; pen ua ) ; move ua , ua ; move 2 , 3 )  | ( move ua , ua + ua ; move 2 , 2 + ul ; move ul , 3 )  | ( move ua , ua ; v0 = 2 + ul ; move ul + ul , v0 )  | ( ( v0 = ua ; pen 2 ; move v0 , ua ) ; move 2 , 3 )  | ( move ua , ua ; pen 3 ; ( pen ua ; move ul + ul , 3 ) )  | ( pen ua * 4 ; ( move ua , ua ; move 2 , 3 ) ; v0 = ua )  | ( move ua , ua ; ( move 2 , 3 ; v0 = ua ) ; pen ua + ua )  
[255] ( move 3 , 0 ; move ua , 2 )  | ( move 3 , ua ; move ua , 2 )  | ( move 3 , 0 ; move ua , 2 - ua )  | ( move 4 - ul , 0 ; move ua , 2 )  | ( move 3 , ua * 2 ; move ua , 2 )  | ( move 3 , ua ; move ua , ua + 2 )  | ( move 3 , ua + ua ; move ua , 2 )  | ( move 3 , ua ; move ua , 2 - ua )  | ( move 4 - ul , ua ; move ua , 2 )  | ( move 3 , ua ; move ua , ul + ul )  | ( pen 3 ; move 3 , 0 ; move ua , 2 )  | ( move 3 , ua ; move ua , 2 ; pen 0 )  | ( move 3 , 0 ; pen ua ; move ua , 2 )  | ( move 4 - ul , ua * 4 ; move ua , 2 )  | ( move 3 , 0 ; move ua , 2 ; v0 = 4 )  | ( move 3 , ua ; move 0 , 2 ; move ua , 0 )  | ( move 2 , ua ; move ul , 0 ; move ua , 2 )  | ( move 3 , 0 ; move ua , ua + 2 ; pen ul )  | ( move 3 , 0 - ua ; move ua , 2 ; pen ua )  | ( move 2 + ul , ua ; pen 2 ; move ua , 2 )  | ( move 3 , ua ; move ua , 2 ; pen ua * 2 )  | ( move 4 - ul , ua ; move ua , 2 ; pen 3 )  | ( move 3 , ua * 4 ; move ua , 2 ; move 0 , ua )  | ( v0 = ua ; ( move 3 , v0 ; move ua , 2 ) )  | ( move 3 , ua ; v0 = ul + ul ; move ua , v0 )  | ( move 2 + ul , 0 ; move ua , 2 ; v0 = ul - 2 )  | ( move 0 , 0 ; ( move 3 , ua ; move ua , 3 - ul ) )  | ( ( move 3 , 0 ; move ua , ul + ul ) ; v0 = 2 )  | ( ( move 3 , ua ; pen 3 + ul ) ; pen ul ; move ua , 2 )  | ( move 4 - ul , ua ; v0 = ul + ul ; move ua , v0 )  | ( v0 = ul ; move 3 , ua / v0 ; move ua , v0 + v0 )  
[256] ( move ul , 0 ; move 3 , 2 )  | ( move ul , ua ; move 3 , 2 )  | ( move 4 - 3 , ua ; move 3 , 2 )  | ( move ul , ua * 3 ; move 3 , 2 )  | ( move ul , ua ; move 2 + ul , 2 )  | ( move ul , ua ; move 4 - ul , 2 )  | ( move ul , ua ; move 3 , ul + ul )  | ( move ul , 0 ; pen ul ; move 3 , 2 )  | ( pen 3 ; move ul , ua ; move 3 , 2 )  | ( pen ul ; move ul , ua ; move 3 , 2 )  | ( move ul , ua * 2 ; move 2 + ul , 2 )  | ( pen 2 ; move ul , 0 - ua ; move 3 , 2 )  | ( move ul , 0 ; ( pen ua ; move 3 , 2 ) )  | ( ( move ul , 0 ; move 3 , 2 ) ; pen ua )  | ( ( pen 3 ; move ul , ua ) ; move 3 , 2 )  | ( move ul , ua ; move 3 , 2 ; move 0 , ul )  | ( move ul , 0 ; move 2 + ul , 2 ; pen ul )  | ( move ul , 0 ; pen ul ; move 3 , 3 - ul )  | ( move ul , ua * 4 ; pen ua ; move 3 , 2 )  | ( move ul , ua ; move 0 , ul ; move 3 , ul )  | ( v0 = 3 ; move ul , 0 ; move v0 , 2 )  | ( move ul , 0 ; v0 = 2 ; move 3 , v0 )  | ( pen ua ; move ul , ua ; move 3 , ua + 2 )  | ( pen ul ; move ul , ua ; move 2 + ul , 2 )  | ( move ul , ua ; move 3 , 2 ; v0 = ul / 3 )  | ( move ul , ua ; pen ua + ul ; move 3 , ua + 2 )  | ( move ul , 0 ; move 3 , ul + ul ; pen ul - ua )  | ( ( move ul , ua + ua ; move 3 , 2 ) ; pen 2 * 2 )  | ( ( move ul , ua ; move ul , 2 ) ; move 3 - ul , 0 )  | ( move ul , 0 ; move 3 , 4 - 2 ; ( pen 2 ; pen 2 ) )  | ( v0 = ul ; move v0 , ua ; move v0 * 3 , v0 + ul )  | ( ( pen ul ; pen 3 ) ; move ul , ua * 2 ; move 3 , ul + ul )  
[257] ( move 2 , 0 ; move ua , 4 )  | ( move 3 , 0 ; move ua , 4 )  | ( move 3 , ua ; move ua , 4 )  | ( move 3 , 0 ; move ua , ua + 4 )  | ( move 4 - ul , 0 ; move ua , 4 )  | ( move 3 , ua ; move ua , 3 + ul )  | ( move ua - 3 , ua ; move ua , 4 )  | ( move 3 , ua ; move ua , 4 - ua )  | ( move ua / 2 , ua ; move ua , 4 )  | ( pen ua ; move 3 , ua ; move ua , 4 )  | ( move 3 , ua ; move ua , 4 ; pen ul )  | ( move ua - 3 , 0 ; move ua , 3 + ul )  | ( move ua - 3 , 0 - ua ; move ua , 4 )  | ( move 2 + ul , ua ; move ua , 3 + ul )  | ( move 3 , 0 ; move 0 , 0 ; move ua , 4 )  | ( move ua / 2 , ua ; move ua , 4 - ua )  | ( pen ua + ua ; move 3 , 0 ; move ua , 4 )  | ( move 3 , 0 ; pen ul ; move ua , ua + 4 )  | ( move 3 , ua ; move ua , 4 ; pen ul / 4 )  | ( ( move 3 , 0 ; move ua , 4 ) ; v0 = 3 )  | ( move 3 , 0 ; move ua , 4 ; v0 = ul + ul )  | ( move 3 , ua ; move ua , 4 ; v0 = 4 - ua )  | ( ( move ua - 3 , ua ; pen ua ) ; move ua , 4 )  | ( v0 = ua ; move 3 , 0 ; move v0 , v0 + 4 )  | ( ( move 0 , 0 ; move 3 , 0 ) ; move ua , ua + 4 )  | ( move 3 , ua * 3 ; move ua , 4 ; v0 = 0 - 2 )  | ( ( pen ua ; move 3 , ua ; move ua , 4 ) ; pen ul )  | ( ( move 3 , ua ; move 0 , 2 ; move ua , 2 ) ; pen 0 )  | ( pen ua ; ( pen 4 + ul ; move 3 , 0 ; move ua , 4 ) )  | ( ( move 3 , 0 ; pen ul ) ; move ua , 4 ; pen ua + 4 )  | ( move 4 - ul , ua * 2 ; move ua , ua + 4 ; v0 = 0 )  | ( v0 = ua ; ( move 3 , v0 ; move v0 , 4 ) ; pen ul )  
[258] ( move 3 , 0 ; move 2 , ul )  | ( move 3 , ua ; move 2 , ul )  | ( move 3 , ua ; move 2 , 4 - 3 )  | ( move 3 , ua ; move 2 , 2 - ul )  | ( move 4 - ul , 0 ; move 2 , ul )  | ( move 3 , ua ; move 2 , ua + ul )  | ( move 2 + ul , ua ; move 2 , ul )  | ( move 3 , ua ; pen ua ; move 2 , ul )  | ( move 2 + ul , ua ; move 4 / 2 , ul )  | ( move 2 + ul , ua ; move 2 , ua + ul )  | ( move 3 , 0 ; move ul + ul , ua + ul )  | ( move 2 + ul , ua + ua ; move 2 , ul )  | ( move 4 - ul , 0 ; move ul + ul , ul )  | ( move 3 , ua ; v0 = 0 ; move 2 , ul )  | ( move 3 , 0 ; pen ul ; move 4 / 2 , ul )  | ( pen ua ; move 2 + ul , 0 ; move 2 , ul )  | ( move 3 , 0 ; move ul , ul ; move ul , ua )  | ( move 3 , ua ; move 2 , ua + ul ; pen ul )  | ( v0 = ua ; move 3 , v0 ; move 2 , ul )  | ( move 3 , 0 ; move 2 , ul ; move 0 , 4 - 2 )  | ( ( move 3 , 0 ; move 2 , ul ) ; pen 2 / 3 )  | ( move 3 , 0 - ua ; move 4 - 2 , ul ; pen 3 )  | ( move 3 , ua + ua ; move ul + ul , ua + ul )  | ( ( pen ul ; move 3 , 0 ) ; move ul + ul , ul )  | ( move 3 , 0 ; ( move 4 - 2 , ul ; v0 = 0 ) )  | ( move 3 , ua ; move 2 , 3 - 2 ; v0 = 4 + ul )  | ( move 3 , ua ; v0 = ul ; move v0 + v0 , ul )  | ( move 3 , ua ; v0 = ul ; move v0 + ul , v0 )  | ( move 0 , 0 ; ( move 3 , ua ; move ul + ul , ul ) )  | ( move 2 + ul , ua ; ( move 2 , ul ; move 0 , ul ) )  | ( move 4 - ul , 0 ; move ul , ul ; move ul , ua + ua )  | ( move 3 , ua ; v0 = ul ; move v0 + v0 , v0 )  
[259] ( move ua , 0 ; move 2 , 4 )  | ( move ua , ua ; move 2 , 4 )  | ( move ua , 0 ; move 2 , 3 + ul )  | ( move ua , 0 ; move 2 , ua + 4 )  | ( move ua , 0 - ua ; move 2 , 4 )  | ( move ua , ua ; move 2 , 2 * 2 )  | ( move ua , ua * 2 ; move 2 , 4 )  | ( move ua , ua ; move 4 - 2 , 4 )  | ( move ua , ua ; move 2 , 3 + ul )  | ( move ua , ua ; move 2 , 4 ; pen 0 )  | ( move ua , 0 ; pen ul ; move 2 , 4 )  | ( move ua , 0 ; move ul + ul , 4 - ua )  | ( move ua , 0 ; move 2 , 4 ; pen ua / 2 )  | ( ( move ua , ua ; pen ul ) ; move 2 , 4 )  | ( move ua , ua ; move ul , 4 ; move ul , 0 )  | ( move ua , ua ; ( move 2 , 4 ; pen 3 - 4 ) )  | ( move ua , 0 ; ( v0 = 2 ; move v0 , 4 ) )  | ( move ua , ua ; move ul , ua + 4 ; move ul , ua )  | ( ( move 0 , 0 ; move ua , 0 ) ; move 2 , 4 - ua )  | ( move ua , 0 ; move 4 / 2 , ua + 4 ; move 0 , 4 )  | ( move ua , ua ; move 2 , 2 + 2 ; v0 = 4 - 3 )  | ( ( move ua , 0 ; move ul + ul , 4 ) ; move 0 , 3 )  | ( move ua , 0 ; move 3 - ul , 3 + ul ; v0 = ua )  | ( ( move ua , 0 ; move ul + ul , 4 ) ; v0 = ul )  | ( move ua , 0 ; v0 = 2 ; move v0 , v0 + v0 )  | ( move ua , ua ; v0 = 2 ; move v0 , v0 * v0 )  | ( ( move ua , ua ; v0 = 2 ) ; pen ua ; move v0 , 4 )  | ( pen ul ; ( v0 = 4 ; move ua , ua ; move 2 , v0 ) )  | ( move ua , ua ; ( move 0 , 4 ; move ul , 0 ) ; move ul , 0 )  | ( move ua , 0 ; ( move 3 - ul , 2 + 2 ; pen 2 ; pen ul ) )  | ( move ua , 0 ; ( move 0 , ua ; move ul + ul , 4 ; pen ul ) )  
[260] ( move 2 , 2 ; move ua , 2 )  | ( move 2 , 4 - 2 ; move ua , 2 )  | ( move 2 , 2 ; move ua , ul + ul )  | ( move 2 , 2 ; move ua , 2 ; pen ua )  | ( move 2 , ul + ul ; move ua , ua + 2 )  | ( move 2 , 2 ; v0 = 2 ; move ua , 2 )  | ( move 3 - ul , 2 ; pen ul ; move ua , 2 )  | ( v0 = 2 ; move v0 , 2 ; move ua , v0 )  | ( v0 = 2 ; move v0 , v0 ; move ua , v0 )  | ( move ul , 2 ; move ul , ua ; move ua , ul + ul )  | ( move 2 , 2 ; move 0 , ul + ul ; move ua , ua * 3 )  | ( v0 = 4 / 2 ; move v0 , v0 ; move ua , v0 )  | ( ( v0 = 2 ; move v0 , v0 ) ; move ua , v0 )  | ( v0 = 2 ; ( move v0 , v0 ; move ua , v0 ) )  | ( v0 = ul + ul ; move v0 , v0 ; move ua , v0 )  | ( ( move 3 - ul , ua + 2 ; v0 = ua ) ; move ua , 2 )  | ( move 2 , ul + ul ; ( move ua , 2 - ua ; v0 = ul ) )  
[261] ( move ua , 0 ; move 3 , 3 )  | ( move ua , ua ; move 3 , 3 )  | ( move ua , 0 ; move 3 , 4 - ul )  | ( move ua , ua ; move 2 + ul , 3 )  | ( move ua , ua ; move 3 , ua + 3 )  | ( move ua , ua ; move 4 - ul , 3 )  | ( move ua , ua ; move 3 , 3 ; pen 0 )  | ( move 0 , 0 ; move ua , ua ; move 3 , 3 )  | ( move ua , ua ; move 3 , 3 ; v0 = 2 )  | ( pen ul ; ( move ua , 0 ; move 3 , 3 ) )  | ( move ua , ua ; move 2 , 3 ; move ul , 0 )  | ( move ua , 0 ; move ul , 3 ; move 2 , ua )  | ( ( pen ul ; move ua , ua ) ; move 3 , 3 )  | ( move ua , 0 ; ( move 3 , 3 ; v0 = 3 ) )  | ( move ua , 0 ; v0 = 3 ; move v0 , v0 )  | ( move ua , 0 ; move 0 , ua + 2 ; move 3 , ul )  | ( move ua , ua ; v0 = 2 ; move 3 , 2 + ul )  | ( move ua , ua ; move 3 , 3 ; v0 = 4 / ua )  | ( ( move ua , ua ; v0 = ua ) ; move 3 , 3 )  | ( move ua , ua ; move ul , 3 ; move 4 / 2 , ua )  | ( ( v0 = 3 ; move ua , ua ) ; move v0 , 3 )  | ( ( move ua , 0 ; v0 = 3 ) ; move v0 , v0 )  | ( ( move ua , ua ; v0 = 3 ) ; move v0 , v0 )  | ( move ua , ua ; ( v0 = 3 ; move v0 , v0 ) )  | ( move ua , 0 ; move 3 , 4 - ul ; v0 = ua + 4 )  | ( ( move ua , ua ; v0 = 2 / ua ) ; move 3 , 3 )  | ( move ua , ua ; ( v0 = ul ; move 3 , ua + 3 ) )  | ( v0 = 3 ; move ua , ua * v0 ; move v0 , v0 )  | ( ( ( move ua , 0 ; pen ua ) ; pen ul ) ; move 3 , 3 )  | ( ( v0 = 3 ; move ua , ua ) ; move 3 , v0 ; pen ul )  | ( move ua , ua ; ( move ul , 3 ; move 2 , 0 ) ; v0 = 0 )  
[262] ( move ua , 0 ; move 4 , 2 )  | ( move ua , ua ; move 4 , 2 )  | ( move ua , 0 - ua ; move 4 , 2 )  | ( move ua , 0 ; move 4 , 3 - ul )  | ( move ua , ua * 3 ; move 4 , 2 )  | ( move ua , ua ; move 3 + ul , 2 )  | ( move ua , 0 ; move 4 , ul + ul )  | ( move ua , ua ; move 4 , ua + 2 )  | ( move ua , ua ; move 4 , ul + ul )  | ( move ua , 0 ; move 4 , 2 ; pen ua )  | ( move ua , ua ; move 4 , 2 ; pen 0 )  | ( move ua , ua * 3 ; move 3 + ul , 2 )  | ( v0 = ua ; move v0 , 0 ; move 4 , 2 )  | ( pen ul + ul ; move ua , ua ; move 4 , 2 )  | ( v0 = ua ; move v0 , ua ; move 4 , 2 )  | ( pen ul ; move ua , ua ; move 4 , ul + ul )  | ( move ua , 0 - ua ; move 4 , 2 ; move 0 , 3 )  | ( move ua , ua ; move 4 , 2 ; v0 = 3 + ul )  | ( move ua , 0 ; v0 = 4 / 2 ; move 4 , v0 )  | ( move ua , 0 ; ( v0 = 2 ; move 4 , v0 ) )  | ( ( move ua , ua ; pen 2 ) ; move 4 , ul + ul )  | ( v0 = ul ; move ua , ua / v0 ; move 4 , 2 )  | ( move ua , ua ; move 4 , ul + ul ; move 0 , 3 - 4 )  | ( move ua , ua + ua ; move 4 , 2 ; move 0 , ul + ul )  | ( move ua , ua ; move 4 , ul + ul ; move ul / 4 , 3 )  | ( ( pen 3 ; move ua , 0 ) ; move 4 , 2 ; v0 = ua )  | ( move ua , ua ; pen 3 ; ( v0 = ua ; move 4 , 2 ) )  | ( ( move ua , ua ; pen 3 ; move 4 , ul + ul ) ; pen 2 )  | ( ( move ua , ua ; move 3 + ul , 2 ) ; v0 = ua + ua )  
[263] ( move 4 , 0 ; move ua , 2 )  | ( move 4 , ua ; move ua , 2 )  | ( move 4 , 0 ; move ua , 4 / 2 )  | ( move 3 + ul , 0 ; move ua , 2 )  | ( move 4 , ua ; move ua , 4 / 2 )  | ( move 3 + ul , ua ; move ua , 2 )  | ( move 4 , ua ; move ua , ul + ul )  | ( move 4 , ua ; pen ul ; move ua , 2 )  | ( pen ul ; move 4 , ua ; move ua , 2 )  | ( ( move 4 , 0 ; pen 3 ) ; move ua , 2 )  | ( move 4 , 0 ; move 0 , ua ; move ua , 2 )  | ( move 3 + ul , ua ; move ua , ul + ul )  | ( move 0 , ua ; move 4 , 0 ; move ua , 2 )  | ( move 4 , ua ; v0 = ua ; move ua , 2 )  | ( move 4 , 0 ; move ua , ul + ul ; pen 0 )  | ( move 3 + ul , 0 ; pen ul ; move ua , 2 )  | ( move 4 , ua ; move ua , ua + 2 ; pen 2 )  | ( move 3 + ul , ua ; move ua , 2 ; pen ul )  | ( move 4 , ua + ua ; pen ul ; move ua , 2 )  | ( ( move 4 , 0 ; move ua , 2 ) ; v0 = 4 )  | ( move 4 , 0 ; move ua , 2 ; v0 = ua - ul )  | ( move 4 , ua ; move ua , 2 - ua ; v0 = 2 )  | ( move 4 , ua * 2 ; move ua , 2 ; v0 = ua )  | ( pen 3 ; move 4 , ua + ua ; move ua , ul + ul )  | ( move 4 , ua ; pen ua + 3 ; move ua , ul + ul )  | ( move 4 , ua ; move ua , ul + ul ; pen ua / 3 )  | ( move 4 , ua ; ( move 0 , ul - 2 ; move ua , 3 ) )  | ( move 3 + ul , ua ; v0 = 4 ; move ua , 2 - ua )  | ( ( pen 2 ; move 4 , 0 ) ; move 0 , ul ; move ua , ul )  | ( pen ua ; move 3 , ua ; ( move ul , 0 ; move ua , 2 ) )  | ( move 4 , ua ; ( v0 = 0 ; v1 = ua ; move ua , 2 ) )  | ( pen ul + ul ; ( move 0 , 0 ; move 4 , 0 ; move ua , 2 ) )  
[264] ( move 3 , 0 ; move ul , 2 )  | ( move 3 , ua ; move ul , 2 )  | ( move 2 + ul , 0 ; move ul , 2 )  | ( move 3 , ua * 3 ; move ul , 2 )  | ( move 2 + ul , ua ; move ul , 2 )  | ( move 3 , ua ; move ul , ua + 2 )  | ( move 3 , ua + ua ; move ul , 2 )  | ( move 3 , 0 ; move ul , ul + ul )  | ( move 3 , ua ; move ul , 2 - ua )  | ( move 3 , ua ; move ul , ul + ul )  | ( pen ua ; move 3 , 0 ; move ul , 2 )  | ( move 3 , ua ; move ul , 2 ; pen ua )  | ( move 3 , 0 ; v0 = 4 ; move ul , 2 )  | ( move 2 + ul , 0 ; move ul , 2 ; pen 0 )  | ( move 2 , ua ; move ul , 0 ; move ul , 2 )  | ( move 3 , ua ; move ul , 2 ; pen 4 + ul )  | ( move 2 , ua ; move ul , ua ; move ul , 2 )  | ( move 3 , 0 ; v0 = ul ; move v0 , 2 )  | ( move 2 + ul , ua ; move ul , 2 ; v0 = 4 )  | ( move 3 , 0 ; move ul , 2 ; v0 = ul / ua )  | ( move 2 + ul , 0 ; move ul , 2 ; pen 4 - ua )  | ( pen ua ; ( move 3 , 0 ; move ul , 3 - ul ) )  | ( move 3 - ul , ua ; move ul , 0 ; move ul , 2 )  | ( move 3 , ua ; move ul , ul + ul ; v0 = ul )  | ( ( move 3 , 0 ; move ul , 2 ) ; move 0 , 0 - ua )  | ( move 3 , 0 ; v0 = ul ; move ul , v0 + v0 )  | ( pen ua ; ( move 3 , ua * 3 ; move ul , 2 - ua ) )  | ( ( move 2 + ul , ua ; pen 4 ) ; move ul , ul + ul )  | ( ( pen 4 ; move 3 , 0 ; move ul , ua + 2 ) ; pen 4 )  | ( ( v0 = ul ; move 3 , ua / v0 ) ; move v0 , 2 )  | ( move ul , 0 ; v0 = 0 ; ( move 2 , 0 ; move ul , 2 ) )  | ( ( move 3 , ua ; move ul , 2 ; v0 = ul ) ; v1 = ua )  | ( move 3 , ua ; ( move ul , ua + 2 ; v0 = ua ; pen ua ) )  
[265] ( move 3 , 0 ; move ua , 3 )  | ( move 3 , ua ; move ua , 3 )  | ( move ua / 2 , 0 ; move ua , 3 )  | ( move 3 , ua * 2 ; move ua , 3 )  | ( move 3 , ua ; move ua , 2 + ul )  | ( move ua / 2 , ua ; move ua , 3 )  | ( move 4 - ul , ua ; move ua , 3 )  | ( move 3 , ua ; move ua , 4 - ul )  | ( pen ua ; move 3 , 0 ; move ua , 3 )  | ( move 3 , ua ; pen ul ; move ua , 3 )  | ( move 2 + ul , 0 - ua ; move ua , 3 )  | ( move 3 , ua * 2 ; move ua , ua + 3 )  | ( ( move 3 , 0 ; pen 3 ) ; move ua , 3 )  | ( move 2 + ul , 0 ; pen ua ; move ua , 3 )  | ( pen 2 ; move 3 , ua ; move ua , 4 - ul )  | ( ( pen ua ; move 3 , ua ) ; move ua , 3 )  | ( pen ul ; ( move 3 , ua ; move ua , 3 ) )  | ( move 3 , 0 ; v0 = 3 ; move ua , v0 )  | ( move 3 , ua ; pen ua ; move ua , ua + 3 )  | ( move 3 , ua ; pen ul ; move ua , 3 - ua )  | ( move 3 , ua ; v0 = 3 ; move ua , v0 )  | ( move 3 , ua ; v0 = ua ; move v0 , 3 )  | ( move 2 + ul , 0 ; move 0 , ua ; move ua , 3 )  | ( v0 = 3 ; move v0 , ua ; move ua , v0 )  | ( v0 = ua + ul ; move 3 , ua ; move ua , 3 )  | ( pen ul ; move 3 , ua * 3 ; move ua , 3 - ua )  | ( move 2 + ul , 0 ; move ua , 3 ; v0 = 2 + 2 )  | ( move 3 , ua ; ( pen 3 ; v0 = 0 ; move ua , 3 ) )  | ( pen ua / 4 ; ( move 3 , 0 ; pen 3 ; move ua , 3 ) )  | ( ( move ul , ua * 2 ; move 2 , 0 ) ; move ua , 3 ; pen 4 )  | ( move 2 + ul , 0 ; move ua , 3 ; ( v0 = ul ; pen ul ) )  
[266] ( move ua , 2 ; move 2 , 2 )  | ( move ua , 2 ; move 3 - ul , 2 )  | ( move ua , 2 ; move 2 , ul + ul )  | ( move ua , ul + ul ; move 2 , 3 - ul )  | ( move ua , 2 ; move ul + ul , ul + ul )  | ( pen ua ; ( move ua , 2 ; move 4 - 2 , 2 ) )  | ( pen ua - ul ; move ua , 2 - ua ; move 2 , 2 )  | ( v0 = 2 ; move ua , v0 ; move v0 , v0 )  | ( pen ul ; move ua , ul + ul ; move 2 , 2 - ua )  | ( move ua , ul + ul ; v0 = 2 ; move v0 , 2 )  | ( move ua , 2 ; v0 = ul ; move v0 + ul , 2 )  | ( move ua , 2 ; v0 = 3 - ul ; move v0 , v0 )  | ( move ua , ul + ul ; move 0 , 4 ; move 2 , ua - 2 )  | ( move 0 , ua + ul ; move ua , ua + ul ; move 2 , 2 )  | ( move ua , 2 ; move ul + ul , ul + ul ; v0 = 4 )  | ( ( v0 = 2 ; move ua , v0 ) ; move v0 , v0 )  | ( ( pen ua ; move ua , 2 ) ; move 2 , 2 ; v0 = ua )  | ( v0 = ua + 2 ; move v0 - 2 , v0 ; move 2 , v0 )  | ( v0 = 2 ; ( pen ul ; move ua , 2 ) ; move v0 , v0 )  | ( ( v0 = ul + ul ; move ua , v0 ) ; move v0 , v0 )  | ( ( pen ul / ua ; move ua , 2 ) ; move 2 , 2 ; v0 = ua )  
[267] ( move 2 , 0 ; move 3 , ul )  | ( move 2 , ua ; move 3 , ul )  | ( move 2 , 0 ; move 2 + ul , ul )  | ( move 2 , 0 ; move 3 , ua + ul )  | ( move 3 - ul , 0 ; move 3 , ul )  | ( move 2 , ua * 2 ; move 3 , ul )  | ( move 2 , ua * 3 ; move 3 , ul )  | ( move 2 , ua ; move 3 , ua + ul )  | ( move 2 , ua ; move 2 + ul , ul )  | ( move 2 , 0 ; move 3 , ul ; pen 3 )  | ( move 2 , ua ; move 3 , ul ; pen 4 )  | ( pen ua ; move 2 , ua ; move 3 , ul )  | ( move 4 / 2 , ua * 3 ; move 3 , ul )  | ( move 3 - ul , 0 ; move 3 , ul ; pen 3 )  | ( move 2 , ua ; move 3 , ul ; move 0 , ul )  | ( move 2 , ua ; move 3 , ul ; move ul , 3 )  | ( move 2 , ua ; v0 = ua ; move 3 , ul )  | ( move 2 , 0 ; pen ul + ul ; move 3 , ul )  | ( move 2 , 0 ; v0 = ul ; move 3 , v0 )  | ( v0 = 2 ; move v0 , 0 ; move 3 , ul )  | ( pen ul ; move ul + ul , ua ; move 3 , ul )  | ( ( move 2 , 0 ; v0 = ul ) ; move 3 , ul )  | ( move 2 , ua ; move 3 , ul ; v0 = ul / 2 )  | ( move ul , 0 ; move ul , 0 ; move 2 + ul , ul )  | ( move ul , 0 ; move ul , ua ; move 4 - ul , ul )  | ( move ul + ul , ua ; pen ua - 4 ; move 3 , ul )  | ( move 3 - ul , 0 ; move 2 , ul ; move 2 - ul , ua )  | ( move ul + ul , 0 ; move 3 , ul ; v0 = ua + ul )  | ( pen ul + ul ; move 3 - ul , ua ; move 3 , ul - ua )  | ( ( move ul + ul , ua ; pen ul ) ; move 2 + ul , ul )  | ( move 4 / 2 , 0 ; move 2 + ul , ua + ul ; pen 3 / ua )  | ( move ul + ul , ua ; move 3 , 3 - 2 ; v0 = ua + ul )  
[268] ( move 2 , 0 ; move 4 , ul )  | ( move 2 , ua ; move 4 , ul )  | ( move 2 , 0 ; move 4 , ua + ul )  | ( move 2 , 0 ; move 3 + ul , ul )  | ( move 2 , 0 - ua ; move 4 , ul )  | ( move 3 - ul , 0 ; move 4 , ul )  | ( move 2 , ua * 2 ; move 4 , ul )  | ( move ul + ul , 0 ; move 4 , ul )  | ( move 3 - ul , ua ; move 4 , ul )  | ( move ul + ul , ua ; move 4 , ul )  | ( move 2 , 0 ; move 4 , ul ; pen 2 )  | ( move 2 , ua ; move 3 + ul , ua + ul )  | ( move ul + ul , 0 - ua ; move 4 , ul )  | ( pen ua * ua ; move 2 , 0 ; move 4 , ul )  | ( pen ul ; move 2 , ua * 3 ; move 4 , ul )  | ( move ul , ua ; move ul , ua ; move 4 , ul )  | ( move 2 , ua + ua ; move 3 + ul , ul - ua )  | ( move 2 , ua * 3 ; move 4 , ul ; move 0 , 4 )  | ( move 2 , ua * 2 ; v0 = ul ; move 4 , ul )  | ( move ul + ul , ua ; move 0 , ul ; move 4 , 0 )  | ( move 4 - 2 , 0 ; v0 = 4 ; move v0 , ul )  | ( move 2 , ua ; v0 = 3 + ul ; move v0 , ul )  | ( v0 = ul ; move ul + v0 , ua ; move 4 , ul )  | ( move 4 - 2 , 0 ; v0 = 3 + ul ; move 4 , ul )  | ( ( move 2 , ua * 2 ; move 3 , ul ) ; move ul , 0 )  | ( move ul + ul , 0 ; pen ua - 2 ; move 3 + ul , ul )  | ( move 2 , ua ; ( move 0 , 0 ; pen 4 ; move 4 , ul ) )  | ( ( move 2 , ua * 2 ; pen 2 ) ; pen ul ; move 4 , ul )  | ( ( move 2 , ua * 3 ; move 3 + ul , ul ) ; v0 = 0 )  | ( move 2 , 0 ; ( move 3 + ul , ul ; v0 = ua / 4 ) )  | ( move ul + ul , ua ; ( v0 = 0 ; move 4 - v0 , ul ) )  | ( ( move ul , ua ; move ul , ua ) ; pen ua + ua ; move 4 , ul )  
[269] ( move 4 , 0 ; move ua , 3 )  | ( move 4 , ua ; move ua , 3 )  | ( move 3 + ul , 0 ; move ua , 3 )  | ( move 4 , 0 ; move ua , 4 - ul )  | ( move 4 , ua * 4 ; move ua , 3 )  | ( move 4 , ua ; move ua , 2 + ul )  | ( move 3 + ul , ua ; move ua , 3 )  | ( move 4 , ua ; move ua , 4 - ul )  | ( pen ul ; move 4 , ua ; move ua , 3 )  | ( move 4 , ua * 2 ; pen 4 ; move ua , 3 )  | ( move 4 , ua ; move ua , 3 ; v0 = ua )  | ( move 4 , ua ; move ua , 3 ; pen ua + 4 )  | ( move 4 , ua ; ( pen ua ; move ua , 3 ) )  | ( move 4 , ua ; pen ua + ul ; move ua , 3 )  | ( move 4 , ua ; pen ua - ul ; move ua , 3 )  | ( move 4 , ua * 2 ; move ua , 3 ; v0 = 2 )  | ( move 4 , ua ; v0 = ul / 4 ; move ua , 3 )  | ( pen ua ; ( move 4 , 0 ; move ua , 2 + ul ) )  | ( move 4 , ua ; move 0 , 2 ; move ua , ul - ua )  | ( ( pen ul ; move 4 , ua ) ; move ua , 3 - ua )  | ( v0 = ua ; ( move 4 , ua ; move v0 , 3 ) )  | ( ( pen ul ; move 4 , 0 ) ; move ua , 3 ; pen 3 )  | ( v0 = 4 + ul ; ( move 4 , 0 ; move ua , 3 ) )  | ( move 4 , ua ; ( move ua , 3 ; v0 = ul / 2 ) )  | ( ( pen 4 + ul ; move 4 , ua ) ; move ua , ua + 3 )  | ( move 4 , ua ; ( move ua , 3 ; move 0 , ul ; pen ua ) )  | ( ( move 4 , ua ; v0 = ua ) ; pen ua ; move ua , 3 )  | ( move 2 * 2 , ua ; move 0 , ua + ul ; move ua , ua + 2 )  | ( move 4 , 0 ; ( move ua , 3 ; pen ua ) ; v0 = 2 / ua )  | ( ( move 2 + 2 , ua ; pen ul ) ; move 0 , ua ; move ua , 3 )  | ( ( move 3 , ua ; move ul , ua ; pen ua + ul ) ; move ua , 3 )  
[270] ( move 3 , 0 ; move 3 , ul )  | ( move 3 , ua ; move 3 , ul )  | ( move 2 + ul , 0 ; move 3 , ul )  | ( move 3 , 0 ; move 3 , ua + ul )  | ( move 3 , ua * 2 ; move 3 , ul )  | ( move 2 + ul , ua ; move 3 , ul )  | ( move 3 , ua ; move 2 + ul , ul )  | ( move 3 , ua ; move 3 , ul - ua )  | ( move 4 - ul , ua ; move 3 , ul )  | ( move 3 , ua ; move 3 , ul ; pen ul )  | ( move 2 + ul , 0 ; move 2 + ul , ul )  | ( move 4 - ul , ua * 3 ; move 3 , ul )  | ( ( move 3 , 0 ; move 3 , ul ) ; pen 0 )  | ( move 3 , 0 ; move 3 , ul ; move 0 , ul )  | ( move 3 , 0 ; move 3 , ul ; v0 = ul )  | ( move ul , ua ; move 2 , 0 ; move 3 , ul )  | ( move 3 , ua ; move ul , ul ; move 2 , 0 )  | ( move 3 , ua ; v0 = 3 ; move v0 , ul )  | ( move 3 , 0 ; ( v0 = 2 ; move 3 , ul ) )  | ( v0 = 3 ; move v0 , 0 ; move v0 , ul )  | ( move 2 + ul , ua ; move 3 , ul ; v0 = 3 )  | ( ( move 3 , ua ; pen 4 ) ; move 2 + ul , ul )  | ( move 4 - ul , ua ; move 3 , ul ; v0 = ua )  | ( pen ua ; move 3 , ua * 4 ; move 2 + ul , ul )  | ( pen ua ; ( move 3 , ua ; move 3 , ul ) ; pen 4 )  | ( move 3 , ua ; move ua / 2 , ul ; v0 = ua - 4 )  | ( v0 = 3 ; move v0 , 3 - v0 ; move v0 , ul )  | ( move 3 , 0 ; move 3 , ul ; ( move 0 , ul ; pen ul ) )  | ( pen ua ; ( move 3 , ua ; move 3 , ul ; v0 = 0 ) )  | ( move 4 - ul , ua ; ( move 2 + ul , ul ; move 0 , 2 ) )  | ( ( move 3 , 0 ; move 3 , ul ) ; v0 = ul ; v1 = 4 )  | ( move 3 - ul , ua ; ( move ul , ua ; move 2 + ul , ul ) )  
[271] ( move 3 , 0 ; move ul , 3 )  | ( move 3 , ua ; move ul , 3 )  | ( move 3 , 0 ; move ul , 2 + ul )  | ( move 3 , 0 ; move ul , ua + 3 )  | ( move 2 + ul , 0 ; move ul , 3 )  | ( move 3 , 0 ; move ul , 3 - ua )  | ( move 4 - ul , 0 ; move ul , 3 )  | ( move 3 , 0 ; move ul , 4 - ul )  | ( move 3 , ua ; move ul , 4 - ul )  | ( move 3 , ua ; pen ua ; move ul , 3 )  | ( move 3 , ua ; pen ul ; move ul , 3 )  | ( move 2 + ul , 0 ; move ul , 2 + ul )  | ( move 3 , 0 ; move ul , 3 ; v0 = 2 )  | ( move 3 , 0 ; move ul , 3 ; move 0 , ul )  | ( ( move 3 , 0 ; move ul , 3 ) ; pen ul )  | ( move 3 , ua ; move ul , 3 ; v0 = ul )  | ( move 3 , 0 ; move ul , 3 ; pen ul / ua )  | ( move 3 , ua ; pen 3 + ul ; move ul , 3 )  | ( ( pen ul ; move 3 , ua ) ; move ul , 3 )  | ( move 3 , ua ; v0 = 3 ; move ul , v0 )  | ( v0 = ua ; move 3 , v0 ; move ul , 3 )  | ( move 3 , 0 ; move ul , 2 + ul ; pen 3 - 4 )  | ( ( move 3 , 0 ; pen 3 - ul ) ; move ul , 3 )  | ( move 2 + ul , 0 ; v0 = ua ; move ul , 3 )  | ( move 3 , ua * 3 ; v0 = ul ; move ul , 3 )  | ( ( move 3 , ua ; v0 = 3 ) ; move ul , v0 )  | ( move 3 , ua ; v0 = 2 + ul ; move ul , v0 )  | ( move 4 - ul , ua ; v0 = 3 ; move ul , v0 )  | ( move 3 , ua ; move ul , ua + 3 ; v0 = 4 * 2 )  | ( move 3 , ua ; pen ua ; ( move ul , 3 ; v0 = ua ) )  | ( move 3 , ua ; ( move ul , 3 ; v0 = ul ) ; pen ul )  | ( move 3 , ua ; move ul , 3 ; ( pen 3 ; v0 = ua * ua ) )  
[272] ( move 4 , 0 ; move ul , 2 )  | ( move 4 , ua ; move ul , 2 )  | ( move 2 + 2 , 0 ; move ul , 2 )  | ( move 4 , 0 ; move ul , ua + 2 )  | ( move 4 , ua * 2 ; move ul , 2 )  | ( move 4 , ua * 3 ; move ul , 2 )  | ( move 4 , ua ; move ul , ua + 2 )  | ( move 4 , 0 ; move ul , ul + ul )  | ( move 4 , ua ; move ul , 3 - ul )  | ( move 4 , ua ; move ul , ul + ul )  | ( move 2 + 2 , ua ; move 2 - ul , 2 )  | ( move 3 + ul , ua ; move ul , ul + ul )  | ( move ul , 0 ; move 3 , ua ; move ul , 2 )  | ( move 4 , ua ; move ul , 2 ; move 0 , ul )  | ( move 4 , ua ; move ul , 2 ; v0 = ua )  | ( move ul , ua ; move 3 , ua ; move ul , 2 )  | ( move 3 + ul , ua ; pen ua ; move ul , 2 )  | ( v0 = 4 ; move v0 , ua ; move ul , 2 )  | ( v0 = 4 ; ( move v0 , 0 ; move ul , 2 ) )  | ( move 3 + ul , ua ; move 0 , ul ; move ul , ul )  | ( v0 = 3 + ul ; move v0 , 0 ; move ul , 2 )  | ( move 3 + ul , 0 ; move ul , ul + ul ; pen ul )  | ( ( move 4 , 0 ; move ul , 2 ; pen 0 ) ; move 0 , ul )  | ( move 4 , ua * 3 ; move ul , ul + ul ; pen ul + ul )  | ( move 3 + ul , 0 ; v0 = 2 ; move 3 - v0 , v0 )  | ( ( move 4 , ua ; pen ul ; move ul , 2 ) ; v0 = ua )  | ( ( pen 4 ; move 4 , ua ) ; pen ua - ul ; move ul , 2 )  | ( move 4 , ua + ua ; move ul , 3 - ul ; v0 = 3 + ul )  | ( move 4 , 0 ; ( v0 = ul ; move v0 , v0 + v0 ) )  | ( pen 2 / 3 ; move 4 , ua ; ( move 3 - 2 , 2 ; pen 0 ) )  | ( ( move 4 , ua ; move ul , 2 ; v0 = ul ) ; pen 0 - ua )  
[273] ( move 2 , 3 ; move ua , 2 )  | ( move ul + ul , 3 ; move ua , ul + ul )  | ( move 2 , 3 ; move ua , 2 ; move 0 , ul )  | ( move 2 , 3 ; pen ua ; move ua , ua + 2 )  | ( move 2 , 3 ; move ua , ua + 2 ; v0 = 4 )  | ( move 0 , 0 ; move ul + ul , 3 ; move ua , 2 )  | ( move ul + ul , ua + 3 ; move ua , ul + ul )  | ( move 2 , 2 + ul ; move ua , 2 ; v0 = ua )  | ( move 2 , 3 ; ( v0 = 2 ; move ua , v0 ) )  | ( move 3 - ul , 4 - ul ; v0 = ul ; move ua , 2 )  
[274] ( move ua , 2 ; move 3 , 2 )  | ( move ua , 2 ; move 2 + ul , 2 )  | ( move ua , ua + 2 ; move 3 , 2 )  | ( move ua , 2 ; move 3 , 3 - ul )  | ( move ua , 2 ; move 3 , ul + ul )  | ( move ua , 2 ; pen 4 ; move 3 , 2 )  | ( move ua , ua + 2 ; move 3 , ua + 2 )  | ( move ua , 2 ; move 3 , 2 ; v0 = ul )  | ( move ua , 2 ; move 0 , ul ; move 3 , ul )  | ( pen ua + ul ; move ua , 2 ; move 3 , 2 )  | ( pen ua ; move ua , 2 ; move 3 , ul + ul )  | ( ( move ua , 2 ; v0 = ua * 3 ) ; move 3 , 2 )  | ( move ua , ul + ul ; ( pen 4 + 3 ; move 3 , 2 ) )  | ( ( move ua , ul + ul ; move 2 , 2 ) ; move ul , ua )  | ( v0 = ul + ul ; ( move ua , v0 ; move 3 , 2 ) )  | ( ( pen ua ; ( move ua , 2 ; pen ua ) ) ; move 3 , 2 )  | ( ( move ua , ua + 2 ; move 3 , 2 ) ; v0 = ul - ua )  
[275] ( move ua , 0 ; move 3 , 4 )  | ( move ua , ua ; move 3 , 4 )  | ( move ua , 0 ; move 3 , ua + 4 )  | ( move ua , 0 ; move 3 , 3 + ul )  | ( move ua , ua * 4 ; move 3 , 4 )  | ( move ua , ua ; move 3 , 3 + ul )  | ( move ua , ua ; move 2 + ul , 4 )  | ( move ua , 0 ; pen 2 ; move 3 , 4 )  | ( move ua , ua + ua ; move 3 , 4 - ua )  | ( move ua , 0 ; move 3 , 4 ; pen ua + 2 )  | ( move ua , 0 ; move 2 + ul , 4 ; pen 4 )  | ( move ua , 0 ; move ul , 4 ; move 2 , ua )  | ( move ua , ua ; move ul , 4 ; move 2 , 0 )  | ( move ua , 0 ; move 3 , 4 ; pen ua + ua )  | ( move ua , ua ; move 3 , 4 ; pen ua + ul )  | ( v0 = 3 ; move ua , ua ; move v0 , 4 )  | ( move ua , 0 ; ( move 0 , ua ; move 3 , 4 ) )  | ( ( move ua , ua ; move 3 , 4 ) ; v0 = 0 )  | ( move ua , 0 ; move 3 , ua + 4 ; v0 = ua )  | ( move ua , 0 ; move 3 , ua + 4 ; v0 = ul )  | ( move ua , ua ; move 3 , 4 ; move 0 , ul / ua )  | ( move ua , ua ; move 3 , ua + 4 ; v0 = ul )  | ( move ua , ua ; move 2 , 3 + ul ; move ul , ua )  | ( move ua , 0 ; ( pen 4 ; move 3 , 4 ; pen 2 ) )  | ( move ua , ua ; v0 = 3 ; move v0 , ul + v0 )  | ( move ua , ua ; ( move 3 , 4 ; pen ua ; v0 = ul ) )  | ( move ua , 0 ; ( pen ul ; v0 = 3 ; move v0 , 4 ) )  | ( pen ua ; move ua , ua ; ( v0 = 3 ; move v0 , 4 ) )  | ( move ua , ua ; move 0 , 4 ; ( move 2 , ua ; move ul , 0 ) )  | ( move ua , ua ; ( move 0 , ul ; move 3 , 3 ; v0 = ul ) )  | ( ( pen ua * ua ; move ua , ua * 4 ) ; pen ua ; move 3 , 4 )  
[276] ( move 3 , 2 ; move ua , 2 )  | ( move ul , 0 ; move 3 , 2 ; move ua , 2 )  
[277] ( move 3 , 0 ; move ua , 4 )  | ( move 4 , 0 ; move ua , 4 )  | ( move 3 , ua ; move ua , 4 )  | ( move 4 , ua ; move ua , 4 )  | ( move 2 + ul , 0 ; move ua , 4 )  | ( move 2 + 2 , ua ; move ua , 4 )  | ( move 4 , ua * 3 ; move ua , 4 )  | ( move 4 , ua ; move ua , ua + 4 )  | ( move 4 , ua ; move ua , 3 + ul )  | ( move 3 , 0 ; move ua , 4 ; pen 4 )  | ( move 4 , ua ; move ua , 4 ; pen ua )  | ( move 4 , ua ; move ua , 4 ; pen ul )  | ( move 4 , 0 ; move 0 , 0 ; move ua , 4 )  | ( pen 3 ; move 4 , 0 ; move ua , ua + 4 )  | ( move 4 , ua * 4 ; move ua , 4 ; v0 = ua )  | ( ( move 4 , ua ; v0 = 4 ) ; move ua , v0 )  | ( ( move 4 , ua ; move ua , 4 ) ; pen ul ; pen 4 )  
[278] ( move ua , 2 ; move 2 , 3 )  | ( move ua , 2 ; move 2 , 2 + ul )  | ( move ua , 2 ; move 2 , 3 - ua )  | ( move ua , 2 ; move 2 , 4 - ul )  | ( move ua , 2 ; move ua / 3 , 3 )  | ( move ua , 2 ; move ul + ul , 3 )  | ( move ua , 2 ; pen ua ; move 2 , 3 )  | ( move ua , 4 / 2 ; move ul + ul , 3 )  | ( pen 3 ; move ua , 2 ; move 3 - ul , 3 )  | ( move 0 , ul ; move ua , ul ; move 2 , 3 )  | ( move ua , 2 ; pen ul ; move 2 , 2 + ul )  | ( move ua , 2 ; move ul + ul , 3 ; pen 3 )  | ( move ua , 2 ; move 2 , 3 ; v0 = 3 / 2 )  | ( move ua , ul + ul ; move 0 , 3 ; move 2 , 0 )  | ( move ua , ul + ul ; move 2 , 3 ; v0 = 0 - ul )  | ( pen 4 ; move ua , ul + ul ; ( pen ul ; move 3 , 3 ) )  | ( ( move ua , 2 ; move 2 , 3 ; v0 = 0 ) ; v1 = ua )  
[279] ( move 2 , 2 ; move ua , 3 )  | ( move 2 , 2 ; move ua , ua + 3 )  | ( move 2 , 2 ; move ua , 3 - ua )  | ( move 2 , 2 ; move ua , 4 - ul )  | ( move 2 , ul + ul ; move ua , 3 )  | ( move 2 , 2 ; move ua , 3 ; pen 0 )  | ( pen 2 ; move 2 , 2 ; move ua , 3 )  | ( move 2 , ua + 2 ; move ua , 2 + ul )  | ( move ua - 4 , 2 ; move ua , 3 - ua )  | ( move ua / 3 , 2 ; move ua , 4 - ul )  | ( move ul + ul , 2 ; move ua , ua + 3 )  | ( move 4 / 2 , 2 ; move ua , 3 ; pen 0 )  | ( pen ua + ul ; move 2 , 2 ; move ua , 3 )  | ( move 2 , 2 ; move ua , 4 - ul ; pen ul )  | ( move ul + ul , 2 - ua ; move ua , ua + 3 )  | ( move 0 , 0 ; move 2 , ul + ul ; move ua , 3 )  | ( move ul / ua , ua ; move 2 , 2 ; move ua , 3 )  | ( pen ua * 4 ; move 2 , ul + ul ; move ua , 3 )  | ( move 2 , ul + ul ; move ua , 2 + ul ; move 0 , 3 / ua )  | ( move 2 , 2 ; ( v0 = 4 ; v1 = ua ; move ua , 3 ) )  
[280] ( move ua , 3 ; move 2 , 2 )  | ( move ua , 3 - ua ; move 2 , 2 )  | ( move ua , 3 ; move 2 , 2 - ua )  | ( move ua , 3 ; move 2 , 3 - ul )  | ( pen ua ; move ua , 3 ; move 2 , 2 )  | ( move ua , ua + 3 ; move 2 , ua + 2 )  | ( pen 4 / 3 ; move ua , 3 ; move 2 , 2 )  | ( ( move ua , 3 ; move 2 , 2 ) ; pen 3 - 4 )  | ( move 0 , ua * 4 ; move ua , 3 ; move 2 , 2 )  | ( move ua , 2 + ul ; move 2 , 2 ; v0 = ua )  | ( move ua , 3 ; v0 = 3 - ul ; move v0 , 2 )  | ( move ua , 3 ; pen ul + ul ; move ul + ul , 2 )  | ( pen 3 ; move ua , 2 + ul ; move 3 - ul , ul + ul )  | ( ( move ua , 3 ; move 2 , 2 ; v0 = ul ) ; v1 = ul )  
[281] ( move ul , 0 ; move 4 , 2 )  | ( move ul , ua ; move 4 , 2 )  | ( move ul , ua ; move 2 + 2 , 2 )  | ( move ul , ua ; move 2 * 2 , 2 )  | ( move ul , 0 ; move 4 , 3 - ul )  | ( move ul , ua * 4 ; move 4 , 2 )  | ( move 4 / ua , ua ; move 4 , 2 )  | ( move ul , ua ; move 3 + ul , 2 )  | ( move ul , ua ; move 4 , ul + ul )  | ( move ul , 0 ; move 4 , 2 ; pen 2 )  | ( move ul , 0 ; move 4 , 2 ; pen ua )  | ( move ul , 0 ; move 2 + 2 , ul + ul )  | ( move ul , ua + ua ; move 4 , ua + 2 )  | ( pen 3 ; move ul , 0 ; move 4 , 4 / 2 )  | ( move ul , ua ; move 4 , 2 ; move 0 , 2 )  | ( move ul , 0 ; move 4 , ua + 2 ; pen 2 )  | ( pen ul ; move ul , 0 ; move 4 , 4 - 2 )  | ( move ul , 0 ; move 3 , 2 ; move ul , ua )  | ( move ul , 0 ; pen 2 ; move 4 , ul + ul )  | ( move ul , ua ; pen ua - 2 ; move 4 , 2 )  | ( move ul , ua ; move 4 , 2 ; pen 2 - ua )  | ( pen ul / 2 ; move ul , ua ; move 4 , 2 )  | ( pen ul ; move ul , ua * 4 ; move 4 , 2 )  | ( move ul , 0 ; move 4 , 2 ; v0 = ua + 2 )  | ( move ul , ua ; move 4 , 3 - ul ; v0 = 0 )  | ( ( move ul , ua ; move 4 , ul + ul ) ; pen 2 )  | ( move ul , ua ; v0 = 3 ; move 4 , v0 - ul )  | ( ( move ul , ua * 4 ; move 4 , 2 ) ; pen 4 + ul )  | ( move ul , ua ; move 3 , ul + ul ; move 2 - ul , ua )  | ( pen 4 ; move ul , 0 ; ( v0 = 4 ; move v0 , 2 ) )  | ( move ul , ua ; pen 2 ; ( move 4 , ul + ul ; pen 4 ) )  | ( ( move ul / 2 , ua ; move 3 , 2 ) ; pen ua ; move ul , ua )  
[282] ( move 2 , 2 ; move 2 , ul )  | ( move 2 , 2 ; move 2 , ua + ul )  | ( move 2 , 2 ; move 2 , ul - ua )  | ( move 2 , 2 - ua ; move 2 , ul )  | ( move 3 - ul , 2 ; move 2 , ul )  | ( move 2 , 2 ; move 3 - ul , ul )  | ( pen ul ; move 2 , 2 ; move 2 , ul )  | ( move 3 - ul , 3 - ul ; move 2 , ul )  | ( move 2 , ua + 2 ; move ul + ul , ul )  | ( move ul + ul , 2 ; move 2 , ua + ul )  | ( move ul + ul , 2 - ua ; move 2 , ul )  | ( move 2 , 3 - ul ; move ul + ul , ul )  | ( move 2 , 2 ; move 4 / 2 , ul ; pen ua )  | ( pen ua ; ( move 2 , 2 ; move 2 , ul ) )  | ( move 2 , 2 ; ( pen ua ; move 2 , ul ) )  | ( move 2 , 3 - ul ; v0 = ul ; move 2 , ul )  | ( move 2 , 2 ; ( v0 = ul ; move 2 , v0 ) )  | ( move ul + ul , 2 ; ( move 2 , ul ; pen ua ) )  | ( v0 = 2 ; move v0 , v0 ; move v0 , ul )  | ( move 2 , 2 ; v0 = ul - ua ; move 2 , v0 )  | ( move 2 , 2 ; v0 = ul ; move v0 + ul , v0 )  | ( ( move 2 , 3 - ul ; move 2 , ul ) ; pen ua + 4 )  | ( move 2 , 2 ; ( pen 4 - ul ; move 3 - ul , ul ) )  | ( move 3 - ul , 2 ; move ul + ul , ul ; v0 = 4 )  | ( v0 = 4 / 2 ; move v0 , v0 ; move v0 , ul )  | ( ( v0 = 2 ; move v0 , v0 ) ; move v0 , ul )  | ( move ul + ul , 2 ; v0 = 0 ; move v0 + 2 , ul )  | ( move 3 - ul , 2 ; v0 = ul ; move v0 + v0 , v0 )  | ( ( v0 = ul + ul ; move v0 , v0 ) ; move v0 , ul )  | ( move 2 , ul + ul ; ( pen ua ; pen 2 + ul ) ; move 2 , ul )  
[283] ( move ul , 0 ; move 3 , 3 )  | ( move 3 , 3 ; move ul , 3 )  | ( move ul , ua ; move 3 , 3 )  | ( move ul , 0 ; move 3 , ua + 3 )  | ( move ul - 2 , 3 ; move 3 , ua )  | ( move 3 , 3 ; move ul , 2 + ul )  | ( move 3 , 3 ; move ul , ul - 4 )  | ( move ul , ua ; move 3 , 4 - ul )  | ( move ul , 0 ; move 3 , 3 ; pen ul )  | ( move ul , ua ; move 3 , 3 ; pen ua )  | ( move ul , 0 ; move 3 , 3 ; v0 = 3 )  | ( move 2 , 3 ; move ul , ua ; move ul , 3 )  | ( v0 = 3 ; move ul , ua ; move v0 , 3 )  | ( move ul , 0 ; v0 = 3 ; move v0 , v0 )  | ( v0 = 3 ; move v0 , 3 ; move ul , v0 )  | ( v0 = 3 ; move 3 , v0 ; move ul , v0 )  | ( move ul , ua * 2 ; v0 = 2 ; move 3 , 3 )  | ( move 0 - 3 , 4 - ul ; move ul , 0 ; pen 3 )  | ( move ul , ua ; v0 = 3 ; move v0 , v0 )  | ( move ul , 0 ; v0 = ul / ua ; move 3 , 3 )  | ( pen 2 ; move ul , ua * 3 ; move 3 , ua + 3 )  | ( move ul , ua ; move 0 , 2 ; move 2 + ul , ul )  | ( move ul , 0 ; move ul , 2 + ul ; move 2 , ua )  | ( move ul , 0 ; v0 = 0 ; move 3 , 3 / v0 )  | ( v0 = 3 ; move v0 , v0 ; move ul , v0 )  | ( v0 = 3 ; ( move ul , 0 ; move v0 , v0 ) )  | ( move ul , 0 ; ( v0 = 3 ; move v0 , v0 ) )  | ( move ul , ua * 3 ; v0 = 3 ; move v0 , v0 )  | ( ( move ul , ua ; v0 = 3 ) ; move v0 , v0 )  | ( move ul , ua ; move 3 , 2 + ul ; v0 = ua * 2 )  | ( pen 3 + ul ; move ul , 0 ; move 2 + ul , 2 + ul )  | ( pen 2 ; move 3 , 2 + ul ; move ul - 2 , ul / ua )  | ( v0 = 3 ; move ul , v0 - 3 ; move v0 , v0 )  
[284] ( move 4 , 0 ; move 2 , ul )  | ( move 4 , ua ; move 2 , ul )  | ( move 2 * 2 , 0 ; move 2 , ul )  | ( move 4 , 0 ; move 2 , 2 - ul )  | ( move 4 , 0 ; move 2 , ua + ul )  | ( move 4 , ua ; move 2 , 2 - ul )  | ( move 4 , ua + ua ; move 2 , ul )  | ( move 4 , 0 ; move 2 , ul ; pen ua )  | ( move 4 , 0 ; move 2 , ul ; pen ul )  | ( move 4 , ua ; move 2 , ul ; pen 2 )  | ( pen 3 ; move 4 , ua ; move 2 , ul )  | ( move 4 , ua ; pen 3 ; move 2 , ul )  | ( move 3 + ul , 0 ; move 2 , ua + ul )  | ( move 3 + ul , 0 ; move 2 , ul - ua )  | ( move 4 , 0 ; move 2 , ua + ul ; pen ul )  | ( move 4 , 0 ; move ul + ul , ul ; pen ul )  | ( move 3 + ul , ua ; move 2 , ul ; pen ul )  | ( move 4 , ua ; move ul , ul ; move ul , ua )  | ( move 4 , 0 ; move 2 , ul ; v0 = 4 * 2 )  | ( move 4 , 0 ; pen 3 + 2 ; move 2 , ul - ua )  | ( move 4 , ua + ua ; move ul + ul , ua + ul )  | ( move 4 , 0 ; move 2 , ul ; v0 = ua + ul )  | ( move 3 + ul , ua ; move 2 , ul ; pen 3 * 2 )  | ( pen ua + 4 ; move 4 , ua ; move 4 - 2 , ul )  | ( ( move 4 , ua ; move 2 , 2 - ul ) ; pen ua )  | ( move 4 , ua ; pen ua * ua ; move ul + ul , ul )  | ( move 4 , ua ; move 4 - 2 , ul ; move 0 , ua + 2 )  | ( move 4 , ua ; v0 = ul ; move 3 - v0 , v0 )  | ( move 4 , ua ; ( move 2 , ul ; v0 = ua * 4 ) )  | ( ( move 4 , 0 ; move ul + ul , ul ) ; v0 = ul )  | ( move 4 , ua ; ( v0 = 4 ; move 2 , ul ) ; pen ul )  | ( pen ua * 4 ; pen 2 + ul ; ( move 4 , ua ; move 2 , ul ) )  
[285] ( move 2 , 2 ; move ua , 4 )  | ( move 2 , 2 ; move ua , 2 + 2 )  | ( move 2 , ua + 2 ; move ua , 4 )  | ( move 3 - ul , 2 ; move ua , 4 )  | ( move 2 , ul + ul ; move ua , 4 )  | ( move 2 , 2 - ua ; move ua , ua + 4 )  | ( move 2 , ul + ul ; move ua , 3 + ul )  | ( ( move 2 , 2 - ua ; move ua , 4 ) ; pen ua )  | ( move 2 , ul + ul ; move 0 , 3 ; move ua , ul )  | ( move ul , 3 - ul ; move ul , ua ; move ua , 4 )  | ( v0 = 2 ; move v0 , 2 ; move ua , v0 * v0 )  | ( ( move ul + ul , 2 ; v0 = 4 ) ; move ua , v0 )  | ( ( move ul + ul , 2 ; pen 3 * 3 ) ; move ua , 3 + ul )  | ( move ul + ul , ua + 2 ; move 0 , ua + ul ; move ua , 3 )  | ( v0 = 2 ; move v0 , ul + ul ; move ua , v0 * v0 )  
[286] ( move ul , 0 ; move 4 , 3 )  | ( move ul , ua ; move 4 , 3 )  | ( move ul - 2 , 3 ; move 4 , 0 )  | ( move 2 - ua , 3 ; move ul , 0 )  | ( move ul , 0 ; move 3 + ul , 3 )  | ( move ul , 0 ; move 4 , 2 + ul )  | ( move ul , 0 ; move 4 , ua + 3 )  | ( move ul , ua ; move 3 + ul , 3 )  | ( move ul , ua ; move 4 , 2 + ul )  | ( move ul , ua ; move 4 , 3 - ua )  | ( move ul , 0 ; pen ua ; move 4 , 3 )  | ( move ul , 0 ; pen ul ; move 4 , 3 )  | ( move ul , ua ; pen ua ; move 4 , 3 )  | ( move ul , ua * 3 ; move 4 , 2 + ul )  | ( move ul , ua ; move 3 + ul , 2 + ul )  | ( pen 3 + 2 ; move ul , 0 ; move 4 , 3 )  | ( move ul , ua ; move 4 , 3 ; v0 = 4 )  | ( move ul , ua ; move 4 , 3 ; v0 = ul )  | ( move ul , ua ; pen ua + ua ; move 4 , 3 )  | ( move 3 - 2 , ua ; move 0 , 2 ; move 4 , ul )  | ( move ul , 0 ; move 4 , 3 ; v0 = ua + ua )  | ( move ul , ua ; move 3 / ua , 3 ; move 4 , 0 )  | ( move ul , 0 ; ( pen ul ; move 4 , 2 + ul ) )  | ( move ul , ua ; move 4 , ua + 3 ; v0 = ul )  | ( move ul , ua ; move 4 , 2 + ul ; v0 = ul )  | ( move 3 - ul , ua ; move 4 / ua , 3 ; move 4 , 0 )  | ( move ul , ua * 4 ; move 4 , 2 + ul ; pen ul / 4 )  | ( move ul , ua ; move ul + ul , 3 ; move ul + ul , 0 )  | ( move ul , ua ; move 4 , 3 ; ( pen 3 ; move 0 , 3 ) )  | ( ( move ul , ua ; move 3 + ul , 3 ) ; v0 = 3 + 2 )  | ( pen ua / 2 ; ( move ul , ua ; move 4 , 3 ) ; pen ul - 3 )  
[287] ( move ua , 4 ; move 2 , 2 )  | ( move ua , 4 ; move 4 / 2 , 2 )  | ( move ua , 4 ; move 2 , ul + ul )  | ( move ua , 4 ; move 3 - ul , ul + ul )  | ( move ua , 4 ; v0 = 2 ; move v0 , v0 )  | ( v0 = 2 ; move ua , 4 ; move v0 , v0 )  | ( move ua , 4 ; move 2 , 3 - ul ; v0 = 0 )  | ( move ua , 4 ; v0 = 2 ; move v0 , v0 + ua )  | ( move ua , 4 ; v0 = 3 - ul ; move v0 , v0 )  | ( move ua , 4 - ua ; ( move 2 , 2 ; v0 = ul ) )  | ( move ua , 4 - ua ; pen 3 + ul ; move 2 , ul + ul )  | ( v0 = 2 ; ( move ua , v0 + v0 ; move 2 , v0 ) )  | ( move ua , 4 ; v0 = 4 ; ( move ul , 2 ; move ul , ua ) )  
[288] ( move 3 , 3 ; move ua , 2 )  | ( move 3 , 3 ; move ua , 3 - ul )  | ( move 4 - ul , 3 ; move ua , 2 )  | ( move 3 , 3 ; move ua , ul + ul )  | ( move 3 , 3 - ua ; move ua , 4 / 2 )  | ( move 3 , 3 - ua ; move ua , ua + 2 )  | ( move 3 , ua + 3 ; move ua , 3 - ul )  | ( move 3 , 2 + ul ; move ua , 2 ; pen 2 )  | ( move 3 , 3 ; ( pen ul ; move ua , 2 ) )  | ( move 3 , 3 ; move 0 , ul ; move ua , ul )  | ( v0 = 2 ; move 3 , 3 ; move ua , v0 )  | ( move 3 , 3 ; move ua , ul + ul ; pen ua )  | ( move 2 + ul , ua + 3 ; move ua , 3 - ul )  
[289] ( move 4 , 0 ; move 3 , ul )  | ( move 4 , ua ; move 3 , ul )  | ( move 2 + 2 , 0 ; move 3 , ul )  | ( move 4 , 0 ; move 4 - ul , ul )  | ( move 4 , ua ; move 3 , ua + ul )  | ( move 4 , ua ; move 2 + ul , ul )  | ( move 4 , ua + ua ; move 3 , ul )  | ( pen ua ; move 4 , 0 ; move 3 , ul )  | ( move 4 , ua ; pen ul ; move 3 , ul )  | ( move 4 , 0 ; move 2 + ul , 2 - ul )  | ( move 3 + ul , 0 ; move 2 + ul , ul )  | ( move 3 + ul , ua * 4 ; move 3 , ul )  | ( move 3 + ul , ua ; move 4 - ul , ul )  | ( ( move 4 , 0 ; pen 3 ) ; move 3 , ul )  | ( move 3 + ul , 0 ; move 3 , ul ; pen 0 )  | ( v0 = ua ; move 4 , v0 ; move 3 , ul )  | ( v0 = 3 ; move 4 , ua ; move v0 , ul )  | ( ( move 4 , 0 ; move 3 , ul ) ; v0 = ua )  | ( move 3 + ul , 0 ; move 3 , ul ; v0 = ul )  | ( move 4 , 0 ; move 3 , ul ; v0 = ua + ul )  | ( pen ua ; ( move 4 , 0 ; move 2 + ul , ul ) )  | ( move 4 , ua ; ( move 3 , ul ; v0 = 3 * 3 ) )  | ( ( move 4 , 0 ; move 3 , ul - ua ) ; pen 0 - 3 )  | ( move 3 + ul , ua + ua ; move 4 - ul , ul - ua )  | ( move 4 , ua ; move ul , 3 - 2 ; move 2 , ua * 3 )  | ( move 3 , 0 ; ( move ul , ua ; move 3 , ua + ul ) )  | ( move 4 , ua ; ( move 3 , ua + ul ; v0 = 4 + ul ) )  | ( move 0 , 0 ; move 4 , 0 ; ( move 3 , ul ; pen ua - 4 ) )  | ( pen 3 ; ( move 3 + ul , 0 ; move 3 , ul ; v0 = 4 ) )  | ( move 3 + ul , 0 ; ( v0 = ul - ua ; move 3 , v0 ) )  | ( ( move 0 , ul ; pen ua ) ; move 4 , ua - ul ; move 3 , ul )  
[290] ( move 2 , 2 ; move 3 , ul )  | ( move 2 , 2 ; move 3 , 2 - ul )  | ( move 2 , 2 ; move 2 + ul , ul )  | ( move 2 , 2 - ua ; move 3 , ul )  | ( move ul + ul , 2 ; move 3 , ul )  | ( move 2 , ul + ul ; move 3 , ul )  | ( move 2 , 2 ; move 3 , ul ; pen 0 )  | ( move 2 , 2 ; move 3 , ul ; pen 4 )  | ( move 2 , ua + 2 ; move 3 , ul - ua )  | ( move 3 - ul , ua + 2 ; move 3 , ul )  | ( pen 2 ; move 3 - ul , 2 ; move 3 , ul )  | ( move 2 , 2 ; move 3 , ua + ul ; pen ua )  | ( move 2 , 2 ; move 2 + ul , ul ; pen ul )  | ( move 4 / 2 , 2 ; move ul , ul ; move 2 , 0 )  | ( move 2 , 2 ; ( move 2 , ul ; move ul , 0 ) )  | ( move 0 , ul ; move 2 , ul ; move 2 + ul , ul )  | ( ( move ul + ul , 2 ; pen ua ) ; move 3 , ul )  | ( move ul + ul , 2 ; ( move 3 , ul ; pen ua ) )  | ( pen ul ; ( move ul + ul , 2 ; move 3 , ul ) )  | ( ( move 2 , 2 ; pen 4 ) ; move 3 , ul ; pen ua )  | ( move 2 , 2 ; pen ul ; ( move 3 , ul ; pen ul ) )  | ( move 0 , ul + ul ; move ul + ul , ua ; move 3 , ul )  | ( ( v0 = 2 ; move v0 , v0 ) ; move ul + v0 , ul )  
[291] ( move 4 , 2 ; move ua , 2 )  | ( move 4 , 2 ; move ua , ul + ul )  | ( move 4 , ul + ul ; move ua , 2 )  | ( move 4 , 2 ; pen ul ; move ua , 2 )  | ( move 4 , 2 ; move ua , 2 ; v0 = 3 )  | ( pen 3 ; move 4 , 2 ; move ua , 4 / 2 )  | ( move 4 , ul + ul ; move ua , ul + ul )  | ( move 4 , 2 ; move 0 , 2 ; move ua , ua )  | ( ( v0 = 0 ; move 4 , 2 ) ; move ua , 2 )  | ( v0 = 2 ; move 4 , v0 ; move ua , v0 )  | ( move 4 , 2 ; move ua , ul + ul ; pen ua + ul )  | ( ( pen ul ; move 4 , 2 ; move ua , 2 ) ; pen ul )  
[292] ( move 2 , 3 ; move 2 , ul )  | ( move 3 - ul , 3 ; move 2 , ul )  | ( move ul + ul , 3 ; move 2 , ul )  | ( move 2 , 3 ; move 2 , ul ; pen 3 )  | ( move 2 , ua + 3 ; move 2 , 2 - ul )  | ( move 2 , 2 + ul ; move 2 , ul - ua )  | ( pen 3 ; ( move 2 , 3 ; move 2 , ul ) )  | ( move 2 , 3 ; pen 2 ; move 2 , ua + ul )  | ( move 2 , 3 ; ( move 2 , ul ; pen ul ) )  | ( move ul , 3 ; move ul , 0 ; move 2 , ul )  | ( move 2 , 3 ; move ul , ul ; move ul , 0 )  | ( move 2 , 3 ; pen ua ; move 3 - ul , ul )  | ( move 2 , 3 ; v0 = ul ; move 2 , v0 )  | ( move 2 , 3 ; move 2 , ua + ul ; pen ul - 3 )  | ( ( pen ul + ul ; move 2 , 3 ) ; move 2 , ul )  | ( ( move 3 - ul , 3 ; pen 3 + ul ) ; move 2 , ul )  | ( move 2 , 3 ; move 0 , 2 - ul ; move ul + ul , ua )  | ( move 2 , ua + 3 ; move 2 , ul ; v0 = ua + ua )  | ( move ul + ul , 2 + ul ; move 2 , ul ; v0 = ul )  | ( ( move ul , 3 ; move ul , ua ) ; move 2 , ul - ua )  | ( move ul + ul , 3 ; pen ua * 2 ; move 3 - ul , ul )  | ( move 2 , 3 ; ( move 2 , ul ; pen ul / 4 ; pen ul ) )  | ( move ul , 3 ; ( move ul , ua * 3 ; move ul + ul , ul ) )  | ( ( move 3 - ul , 3 ; move 0 , ul ) ; move 2 , ua ; pen 0 )  
[293] ( move 3 , 2 ; move ul , 2 )  | ( move 4 - ul , 2 ; move ul , 2 )  | ( move 3 , ul + ul ; move ul , 2 )  | ( move 3 , 2 ; move ul , 2 ; pen ul )  | ( move 3 , ua + 2 ; move ul , ua + 2 )  | ( move 2 + ul , ua + 2 ; move ul , 2 )  | ( move 3 , 4 - 2 ; move ul , ul + ul )  | ( move 3 , 2 ; move ul , 2 ; v0 = 2 )  | ( move 3 , 2 ; move ul , 2 ; v0 = ua )  | ( move 3 , 2 ; move ul , 2 ; pen ua * 3 )  | ( move 3 , 2 ; move 0 , ul ; move ul , ul )  | ( move 3 , 2 ; move ul , ul + ul ; pen 0 )  | ( move 4 - ul , ul + ul ; move ul , 4 / 2 )  | ( move 3 , 2 ; move 2 - ul , 2 ; v0 = 4 )  | ( move 3 , 2 ; ( v0 = 3 ; move ul , 2 ) )  | ( move 2 + ul , 2 ; move ul , 2 ; move 0 , 0 )  | ( move 2 + ul , ul + ul ; move ul , 3 - ul )  | ( move 3 , 2 ; move ul , ul + ul ; move 0 , 3 )  | ( move 3 , 2 ; move ul , 2 ; v0 = ul - ua )  | ( move 3 , 3 - ul ; v0 = 3 / ua ; move ul , 2 )  | ( ( pen 2 ; move 3 , ul + ul ) ; move ul , ul + ul )  | ( pen 4 ; ( move 3 , ua + 2 ; move ul , 2 ) ; move 0 , 4 )  
[294] ( move 2 , 3 ; move ua , 3 )  | ( move 2 , 3 ; move ua , 2 + ul )  | ( move 2 , 4 - ul ; move ua , 3 )  | ( move ua / 3 , 3 ; move ua , 3 )  | ( move 2 , 3 ; move ua , 3 ; pen 0 )  | ( move 3 - ul , 3 ; move ua , 4 - ul )  | ( move ul + ul , 3 ; move ua , 2 + ul )  | ( move 2 , 3 ; move ua , 3 ; v0 = 4 )  | ( move 2 , 3 ; move ua , 3 ; move 0 , ua )  | ( move 2 , 3 ; move ua , 3 ; v0 = ua )  | ( move ul + ul , 3 ; pen 2 ; move ua , 3 )  | ( move ua / 3 , 2 + ul ; move ua , 3 - ua )  | ( move 2 , 3 ; move ua , 3 ; v0 = 2 - ul )  | ( move 2 , 4 - ul ; v0 = ul ; move ua , 3 )  | ( move 2 , ua + 3 ; v0 = ua ; move v0 , 3 )  | ( move 2 , 3 ; v0 = 3 ; move 3 + v0 , v0 )  | ( move 2 , 4 - ul ; ( move ua , 3 ; v0 = 4 ) )  | ( v0 = 3 ; move ul + ul , v0 ; move ua , v0 )  | ( move 0 , ua ; move ul + ul , 3 - ua ; move ua , 3 )  | ( ( move 2 , 3 ; pen 2 ; move 0 , 2 ) ; move ua , ul )  | ( ( pen 0 ; pen ua ; move 2 , 3 ) ; move ua , 4 - ul )  | ( move 3 - ul , ua + 3 ; move ua , 3 ; v0 = ua + ul )  | ( move 2 , ua + 3 ; v0 = 0 ; ( move ua , 3 ; pen 0 ) )  | ( ( move ul / ua , ul ; move ul + ul , 2 ) ; move ua , 3 )  | ( ( move ul , 3 ; move ul , 0 ) ; move ua , 3 ; v0 = 3 )  | ( move 2 , 4 - ul ; ( pen 0 ; pen ul ; move ua , ua + 3 ) )  
[295] ( move 3 , 2 ; move 2 , ul )  | ( move 3 , 2 ; move 2 , ua + ul )  | ( move 2 + ul , 2 ; move 2 , ul )  | ( move 3 , 2 - ua ; move 2 , ul )  | ( move 3 , ul + ul ; move 2 , ul )  | ( move 3 , 2 ; move ul + ul , ul )  | ( move 3 , ul + ul ; move 2 , ua + ul )  | ( move 3 , ul + ul ; move 2 , ul - ua )  | ( ( move 3 , 2 ; move 2 , ul ) ; pen 0 )  | ( move 3 , ul + ul ; move ul + ul , ul )  | ( v0 = 2 ; move 3 , 2 ; move v0 , ul )  | ( move 3 , 2 ; ( move 2 , ul ; v0 = 2 ) )  | ( v0 = 2 ; move 3 , v0 ; move v0 , ul )  | ( move 3 , 2 ; pen ul + ul ; move ul + ul , ul )  | ( move 3 , 2 - ua ; ( v0 = 3 ; move 2 , ul ) )  | ( v0 = ul + ul ; move 3 , v0 ; move v0 , ul )  | ( ( move 3 , 2 - ua ; move 2 , ul - ua ) ; pen ul )  | ( move 0 , ul ; ( move 3 , ul ; move ul + ul , ul ) )  | ( ( move 2 + ul , 2 ; v0 = ul ) ; move 2 , v0 )  | ( pen 2 ; pen ua ; ( move 3 , ul + ul ; move 2 , ul ) )  | ( ( move 2 , 2 ; move ul , ua ) ; move 0 , ul ; move 2 , ua )  | ( ( move 2 , 2 ; pen ul ; move ul , 0 ) ; move ul + ul , ul )  | ( move 0 , ul ; pen ua ; ( move 4 - ul , ul ; move 2 , ul ) )  
[296] ( move ua , 3 ; move 3 , 2 )  | ( move ua , 2 + ul ; move 3 , 2 )  | ( move ua , 3 ; move 4 - ul , 2 )  | ( move ua , 3 ; move 3 , ul + ul )  | ( move ua , 3 ; move 3 , 2 ; pen ua )  | ( move ua , 3 ; move 2 + ul , ua + 2 )  | ( move ua , 3 - ua ; move 2 + ul , ul + ul )  | ( ( move ua , 3 ; v0 = 2 ) ; move 3 , v0 )  | ( pen 3 ; ( move ua , 2 + ul ; move 2 + ul , 2 ) )  | ( pen ua + 2 ; move ua , 4 - ul ; move 4 - ul , 2 )  | ( ( move ua , 3 ; v0 = 2 + ul ) ; move v0 , 2 )  | ( pen ua ; move ua , 3 ; ( move 3 , 2 ; move 0 , 4 ) )  | ( ( move ua , 3 ; v0 = ul ) ; move 3 , v0 + v0 )  
[297] ( move 4 , 0 ; move ul , 3 )  | ( move 4 , ua ; move ul , 3 )  | ( move 4 , 0 ; move ul , ua + 3 )  | ( move 2 + 2 , ua ; move ul , 3 )  | ( move 3 + ul , 0 ; move ul , 3 )  | ( move 4 , ua * 2 ; move ul , 3 )  | ( move 3 + ul , ua ; move ul , 3 )  | ( move 4 , ua ; move ul , ua + 3 )  | ( move 4 , ua ; move ul , 2 + ul )  | ( move 4 , ua ; move ul , 3 - ua )  | ( move 4 , 0 ; pen 3 ; move ul , 3 )  | ( move 4 , ua ; move ul , 3 ; pen 4 )  | ( move 4 , ua ; pen ul ; move ul , 3 )  | ( pen ul ; move 4 , ua ; move ul , 3 )  | ( move 3 + ul , 0 ; move ul , ua + 3 )  | ( move 4 , ua * 2 ; move ul , 2 + ul )  | ( move 4 , ua ; v0 = 2 ; move ul , 3 )  | ( move 0 , ua ; move 4 , ua ; move ul , 3 )  | ( move 4 , ua * 4 ; pen ua ; move ul , 3 )  | ( pen ua ; move 4 , ua + ua ; move ul , 3 )  | ( v0 = 3 ; move 4 , ua ; move ul , v0 )  | ( move 0 - ul , 3 - ua ; move 4 , ul / ua )  | ( ( move 3 , 0 ; move ul , 0 ) ; move ul , 3 )  | ( move 4 , ua ; ( move 0 , 3 ; move ul , ua ) )  | ( move 4 , 0 ; ( pen ul ; move ul , 3 ; pen 4 ) )  | ( move 4 , 0 ; ( v0 = ua + ul ; move ul , 3 ) )  | ( move 2 + 2 , ua ; move 0 , ua + 3 ; move ul , ua )  | ( move 4 , ua ; v0 = 3 - 4 ; move ul , 2 - v0 )  | ( ( move 4 , 0 ; v0 = 3 ; move ul , 3 ) ; pen v0 )  | ( move 4 , ua ; v0 = 2 ; move v0 / 2 , v0 + ul )  | ( pen ua ; ( pen ua * 3 ; move 2 * 2 , 0 ) ; move ul , 3 )  | ( move 4 , ua ; move ul , 4 - ul ; ( pen 0 ; v0 = ul ) )  
[298] ( move 2 , 4 ; move ua , 2 )  | ( move 2 , 4 ; move ua , ua + 2 )  | ( move 2 , 4 ; move ua , ul + ul )  | ( move ul + ul , 4 ; move ua , 2 )  | ( move 2 , 4 ; move ua , 2 ; pen 4 )  | ( move ul + ul , ua + 4 ; move ua , 2 )  | ( v0 = 2 ; move v0 , 4 ; move ua , v0 )  | ( move 0 , 4 ; move ul + ul , 0 ; move ua , 2 )  | ( move 3 - ul , 4 ; move ua , 2 ; v0 = ua )  | ( move ul , 3 + ul ; move ul , 0 ; move ua , 2 )  | ( move ul , 4 ; move ul , ua + ua ; move ua , 2 )  | ( move ul , ua + 4 ; move ul , ua ; move ua , 2 )  | ( move 2 , 4 - ua ; pen ua ; move ua , ul + ul )  | ( ( move 2 , 4 ; move ua , ul + ul ) ; v0 = 0 )  | ( move 3 - 2 , ua + 4 ; move ul , ua ; move ua , 2 )  | ( ( pen ul ; v0 = ua ; move 2 , 4 ) ; move v0 , 2 )  | ( move 0 , 3 ; ( move 2 , 2 - ul ; move ua , ul + ul ) )  | ( move ul / 3 , ul ; ( move 2 , ua + 3 ; move ua , 2 ) )  | ( move 2 , 4 ; ( pen ul ; pen 2 ; move ua , 2 ) ; pen ul )  
[299] ( move ua , 2 ; move 4 , 2 )  | ( move ua , 2 ; move 2 + 2 , 2 )  | ( move ua , ua + 2 ; move 4 , 2 )  | ( move ua , 2 ; move 4 , ua + 2 )  | ( move ua , 3 - ul ; move 4 , ua + 2 )  | ( move 0 , 2 ; move ua , 0 ; move 4 , 2 )  | ( move ua , 2 ; pen ul ; move 4 , ua + 2 )  | ( v0 = 2 ; move ua , 2 ; move 4 , v0 )  | ( move ua , ul + ul ; move 4 , 2 ; pen ua )  | ( move ua , 2 ; move 3 , 2 ; move 2 - 3 , 3 )  | ( move ua , ul + ul ; move 2 * 2 , ul + ul )  | ( move 0 , ul ; move ua , ul ; move 3 + ul , 2 )  | ( v0 = 0 ; move ua , 2 ; move 4 / v0 , ul + ul )  | ( move 0 , 2 ; move ua , 0 ; ( pen ul + ul ; move 4 , 2 ) )  
[300] ( move 3 , ua ; move 3 , 2 )  | ( move 2 + ul , 0 ; move 3 , 2 )  | ( move 3 , 0 ; move ua / 2 , 2 )  | ( move 4 - ul , 0 ; move 3 , 2 )  | ( move 3 , ua ; move 3 , ul + ul )  | ( move 4 - ul , 0 ; pen ua ; move 3 , 2 )  | ( move 3 , ua ; ( pen ul ; move 3 , 2 ) )  | ( move 3 , ua * 4 ; move 2 + ul , ul + ul )  | ( move 3 , 0 ; move 3 , 2 ; v0 = 4 / ua )  | ( move 3 , 0 ; ( move 3 , 2 ; pen 2 + ul ) )  | ( ( move 3 , ua * 4 ; pen ul ) ; move 3 , 2 )  | ( move 3 , ua ; pen ua - 3 ; move 3 , 2 - ua )  | ( pen ul ; move 3 , ua ; move 2 + ul , ua + 2 )  | ( ( move 2 + ul , 0 ; move 3 , 2 ) ; v0 = 0 )  | ( move 2 + ul , 0 ; move 3 , ul + ul ; v0 = ul )  | ( move 3 , 0 ; ( move 3 , ul + ul ; pen ua + ua ) )  | ( pen ul ; ( move 3 , 0 ; move ul , 2 ) ; move 2 , ua )  | ( move 3 , ua ; move ul / ua , ul + ul ; move 2 + ul , 0 )  | ( move 3 , ua ; v0 = ul ; move v0 * 3 , v0 + v0 )  | ( ( move 3 , ua ; move 3 , 2 ) ; move 0 , ua ; pen 2 - ua )  
[301] ( move 3 , 0 ; move ul , 4 )  | ( move 3 , ua ; move ul , 4 )  | ( move 3 , 0 ; move ul , ua + 4 )  | ( move 3 , 0 ; move ul , 4 - ua )  | ( move 3 , ua * 3 ; move ul , 4 )  | ( move 3 , ua * 4 ; move ul , 4 )  | ( move 3 , ua ; move ul , 3 + ul )  | ( move 3 , ua + ua ; move ul , 4 )  | ( move 2 + ul , ua ; move ul , 4 )  | ( pen ul ; move 3 , 0 ; move ul , 4 )  | ( move 3 , ua ; pen ua ; move ul , 4 )  | ( move 2 + ul , ua + ua ; move ul , 4 )  | ( move 3 , 0 ; v0 = 3 ; move ul , 4 )  | ( ( pen 3 ; move 3 , 0 ) ; move ul , 4 )  | ( move 3 , ua ; move ul , 4 ; v0 = 0 )  | ( move 4 - ul , 0 ; move ul , 4 ; pen 4 )  | ( pen ua + 4 ; move 3 , ua ; move ul , 4 )  | ( pen ua * 2 ; move 3 , ua ; move ul , 4 )  | ( pen ul / 4 ; move 3 , ua ; move ul , 4 )  | ( move 3 , 0 ; v0 = ul ; move v0 , 4 )  | ( pen ua ; move 3 , ua ; move ul , 3 + ul )  | ( move 3 , ua ; move ul , 4 ; pen ua + ul )  | ( move 3 , ua ; move ul , 4 ; move 0 , 4 * 2 )  | ( move 2 , 0 ; move ul , ua * 3 ; move ul , 4 )  | ( move 3 , 0 ; move ul , 4 ; v0 = ul - ua )  | ( move 2 + ul , ua ; v0 = 2 ; move ul , 4 )  | ( move ua / 2 , ua ; pen ul ; move ul , 2 + 2 )  | ( ( pen ul ; move 3 , ua ) ; move ul , ua + 4 )  | ( ( move 3 , ua ; v0 = 3 + ul ) ; move ul , v0 )  | ( ( move 4 - ul , 0 ; move ul , ua + 4 ) ; v0 = ul )  | ( move 4 - ul , ua ; ( move ul , 3 + ul ; v0 = ua ) )  | ( move 3 , 0 ; v0 = ul ; ( pen v0 ; move v0 , 4 ) )  
[302] ( move 3 , 0 ; move 4 , ul )  | ( move 3 , ua ; move 4 , ul )  | ( move 3 , 0 ; move 4 , ua + ul )  | ( move 3 , 0 ; move 3 + ul , ul )  | ( move 3 , ua ; move 3 + ul , ul )  | ( move 3 , ua ; move 4 , ua + ul )  | ( move 4 - ul , ua ; move 4 , ul )  | ( pen ul ; move 3 , ua ; move 4 , ul )  | ( move 3 , ua ; pen ul ; move 4 , ul )  | ( move 2 + ul , 0 ; move 2 * 2 , ul )  | ( move 2 + ul , ua ; move 4 , ua + ul )  | ( move 3 , ua ; move 3 + ul , ua + ul )  | ( move 3 , 0 ; move 2 + 2 , ul ; pen ul )  | ( move 3 , ua ; move 3 , ul ; move ul , 0 )  | ( move ul , 0 ; move 2 , ua ; move 4 , ul )  | ( move 3 , 0 ; move 4 , ul ; pen ua + ul )  | ( move 3 , ua ; pen ua ; move 4 , ua + ul )  | ( v0 = 4 ; move 3 , ua ; move v0 , ul )  | ( move 3 , ua ; v0 = ul ; move 4 , v0 )  | ( move 2 + ul , ua + ua ; move 4 , ul - ua )  | ( move 3 , ua ; ( move 2 , ul ; move 2 , 0 ) )  | ( move 3 , ua ; move 4 , ua + ul ; v0 = ul )  | ( move 3 , ua ; move 4 , ua + ul ; pen ua / 4 )  | ( move 2 + ul , ua ; move 3 + ul , ul ; pen ul )  | ( pen ua ; ( move 3 , 0 ; pen 3 ) ; move 4 , ul )  | ( ( pen ua ; move 3 , ua ) ; move 4 , ul ; pen 0 )  | ( move 3 , 0 ; move ul , 3 - 2 ; move 3 , ua * 4 )  | ( move 3 , ua * 2 ; move 4 , 2 - ul ; v0 = 3 )  | ( move 2 + ul , ua ; move 0 , ul ; move 4 , ua + ua )  | ( ( move 3 , ua ; move 4 , ul ; v0 = 0 ) ; v1 = 2 )  | ( ( ( move 3 , ua ; move 4 , ul ) ; pen 0 ) ; v0 = ua )  
[303] ( move 3 , 2 ; move ua , 3 )  | ( move 3 , 2 ; move ua , 3 - ua )  | ( move 3 , ul + ul ; move ua , 3 )  | ( move 3 , 2 ; pen ua ; move ua , 3 )  | ( pen ul ; move 3 , 2 ; move ua , 3 )  | ( move 4 - ul , ul + ul ; move ua , 3 )  | ( move 3 , 2 ; pen 2 + ul ; move ua , 3 )  | ( move 3 , 2 ; move ua , 4 - ul ; pen ul )  | ( move 2 + ul , 2 ; move ua , 3 ; pen ua - 3 )  | ( ( pen ul ; move 3 , ul + ul ) ; move ua , 3 )  | ( move 3 , ul + ul ; move ua , 3 ; v0 = 3 + ul )  | ( move 3 , ul + ul ; move ua , 3 ; v0 = ua * 3 )  | ( move 3 , ua + 2 ; ( move ua , 2 + ul ; move 0 , 2 ) )  | ( move ua / 3 , 0 - ul ; ( move 3 , 3 ; move ua , 3 ) )  
[304] ( move ul , 0 ; move 3 , 4 )  | ( move ul , ua ; move 3 , 4 )  | ( move ul , ua ; move 3 , 2 + 2 )  | ( move ul , 0 ; move 2 + ul , 4 )  | ( move ul , 0 ; move 3 , 4 - ua )  | ( move ul , ua ; move 3 , 2 * 2 )  | ( move ul , ua * 2 ; move 3 , 4 )  | ( move ul , ua * 4 ; move 3 , 4 )  | ( move ul , ua ; move 3 , ua + 4 )  | ( move ul , ua ; move 2 + ul , 4 )  | ( move ul , ua ; move 3 , 3 + ul )  | ( move ul , ua ; move 4 - ul , 4 )  | ( move ul , 0 ; pen ul ; move 3 , 4 )  | ( pen ua ; move ul , ua ; move 3 , 4 )  | ( move ul , ua ; move 2 + ul , ua + 4 )  | ( ( move ul , 0 ; move 3 , 4 ) ; pen ul )  | ( move ul , ua ; move 3 , 4 ; v0 = ua )  | ( ( move ul , ua ; move 3 , 4 ) ; pen ua )  | ( ( pen ua ; move ul , ua ) ; move 3 , 4 )  | ( move ul , ua ; move 3 , 4 ; v0 = 3 - ul )  | ( move ul , ua ; move 3 , ua + 4 ; v0 = ua )  | ( move ul , ua ; move 2 , 4 ; move ul , ua * 4 )  | ( move ul , 0 ; pen ua * ua ; move 3 , 3 + ul )  | ( pen 4 + 2 ; move ul , 0 ; move 2 + ul , 2 * 2 )  | ( ( move ul , 0 ; move 3 , 4 ; v0 = ul ) ; pen 2 )  | ( v0 = ul - ua ; move ul , 0 ; move 3 , 4 * v0 )  | ( ( move ul , ua * 2 ; move 3 , ua + 4 ) ; v0 = 0 )  | ( v0 = 3 ; move v0 / 3 , ua ; move v0 , ul + v0 )  | ( move ul , ua ; ( pen ua ; pen ul ; pen 2 ) ; move 3 , 4 )  | ( ( ( pen ua ; move ul , 0 ) ; move 3 , 4 ) ; v0 = ul )  | ( move ul , 0 ; ( move 3 , 4 ; ( pen ul ; v0 = ul ) ) )  
[305] ( move ua , 0 ; move 4 , 4 )  | ( move ua , ua ; move 4 , 4 )  | ( move ua , 0 ; move 3 + ul , 4 )  | ( move ua , ua ; move 2 * 2 , 4 )  | ( move ua , ua * 2 ; move 4 , 4 )  | ( move ua , ua ; move 4 , 4 - ua )  | ( pen ua ; move ua , 0 ; move 4 , 4 )  | ( move ua , 0 ; move 4 , 4 ; pen ua )  | ( move ua , 0 ; move 4 , 4 ; pen ul )  | ( move ua , ua ; move 4 , 4 ; pen 4 )  | ( move ua , ua ; move 4 , 4 ; pen ua )  | ( move ua , ua * 4 ; move 3 + ul , 4 )  | ( move ua , ua ; move 4 , 4 ; v0 = ul )  | ( move ua , 0 ; move 4 , ua + 4 ; pen ul )  | ( v0 = 4 ; move ua , ua ; move 4 , v0 )  | ( v0 = 4 ; move ua , 0 ; move v0 , v0 )  | ( move ua , 0 ; v0 = 4 ; move v0 , v0 )  | ( v0 = ua ; move v0 , v0 ; move 4 , 4 )  | ( move ua , ua ; v0 = 4 ; move v0 , v0 )  | ( move ua , ua ; move 4 , 4 ; v0 = 3 + ul )  | ( pen ua + 4 ; move ua , ua * 4 ; move 4 , 4 )  | ( move ua , ua ; v0 = ul ; move 3 + ul , 4 )  | ( move ua , ua + ua ; ( pen ul ; move 4 , 4 ) )  | ( move ua , 0 ; v0 = 4 ; move v0 , 3 + ul )  | ( move ua , 0 ; ( move 0 , 3 ; move 4 , ua + ul ) )  | ( ( move ua , ua ; v0 = 4 ) ; move v0 , v0 )  | ( move ua , ua ; move 3 + ul , 4 ; v0 = ul - 4 )  | ( move ua , ua * 3 ; ( v0 = 4 ; move v0 , v0 ) )  | ( ( move ua , 0 ; ( move 4 , 4 ; pen 0 ) ) ; move 3 , 4 )  | ( v0 = ua ; ( v1 = ua ; move ua , ua ; move 4 , 4 ) )  | ( move ua , 0 ; pen 2 ; ( move 4 , 3 + ul ; pen ua + ua ) )  | ( ( move ua , ua ; move 4 , 4 ) ; pen ua + ul ; v0 = ua )  
[306] ( move 2 , ul ; move 3 , 2 )  | ( move 2 , 2 - ul ; move 3 , 2 )  | ( move 2 , ul ; move 3 , ua + 2 )  | ( move 2 , ul ; move 3 , ul + ul )  | ( move ul + ul , ul ; move 3 , 2 )  | ( move 2 , ul ; move 3 , 2 ; pen 2 )  | ( move 2 , ul ; move 3 , 2 ; pen ua )  | ( move 2 , ua + ul ; move 3 , 2 - ua )  | ( move 2 , ul ; ( move 3 , 2 ; pen ua ) )  | ( move ul + ul , ul ; pen 4 ; move 3 , 2 )  | ( ( move 2 , ul ; pen 3 ) ; move 3 , 2 - ua )  | ( ( move 2 , ul ; v0 = 2 ) ; move 3 , v0 )  | ( v0 = 2 ; ( move v0 , ul ; move 3 , v0 ) )  | ( move 2 , ul - ua ; move 0 , ua ; move 3 , ul + ul )  | ( move ul , ul ; move ul , ua ; move 2 + ul , ua + 2 )  | ( pen ul ; ( pen 2 ; move 2 , ul ) ; move 2 + ul , 2 )  | ( move 2 , ul ; pen ua + ul ; ( pen ul ; move 3 , 2 ) )  | ( ( v0 = 2 ; move v0 , ul ) ; move ul + v0 , v0 )  | ( move 2 , ua + ul ; move 4 - ul , ua + 2 ; pen ua + ul )  
[307] ( move ua , 2 ; move 3 , 3 )  | ( move ua , 2 ; move 4 , 3 )  | ( move ua , 4 - 2 ; move 3 , 3 )  | ( move ua , 2 ; move 3 , 2 + ul )  | ( move ua , 3 - ul ; move 3 , 3 )  | ( move ua , 2 ; move 2 + ul , ua + 3 )  | ( move ua , 2 ; move 3 , 2 + ul ; pen ua )  | ( pen ul ; move ua , 2 ; move 3 , 2 + ul )  | ( move ua , 2 ; ( move 3 , 3 ; move 0 , 4 ) )  | ( v0 = 3 ; move ua , 2 ; move v0 , v0 )  | ( move ua , 3 - ul ; move 3 , 3 ; v0 = ul )  | ( v0 = ul ; move ua , v0 + ul ; move 3 , 3 )  | ( move ua , ua + 2 ; pen 3 + ul ; move 3 , ua + 3 )  | ( ( move ua , 2 ; pen ul ; move 0 , ul ) ; move 3 , 2 )  | ( v0 = 0 ; move ua , 2 / v0 ; move 3 , v0 + 3 )  
[308] ( move ua , 3 ; move 2 , 3 )  | ( move ua , 3 ; move 3 , 3 )  | ( move ua , 3 ; move 2 , 2 + ul )  | ( move ua , ua + 3 ; move 2 , 3 )  | ( move ua , 3 ; move 2 , ua + 3 )  | ( move ua , 2 + ul ; move 3 , 3 )  | ( move ua , 3 ; move 2 + ul , 3 )  | ( move ua , 3 ; move 3 , 3 - ua )  | ( move ua , 3 ; move 4 - ul , 3 )  | ( move ua , 3 ; move 3 , 3 ; v0 = ua )  | ( move ua , 3 ; move 3 , 3 ; v0 = ul )  | ( v0 = 3 ; move ua , 3 ; move v0 , v0 )  | ( move 0 , ul ; move ua , 2 ; move 2 , 2 + ul )  | ( move ua , 3 ; move 2 + ul , 3 ; v0 = ul )  | ( pen ul + ul ; ( move ua , 3 ; move 3 , 3 ) )  | ( v0 = 3 ; move ua , v0 ; move v0 , v0 )  | ( v0 = 2 ; move ua , 3 ; move v0 + ul , 3 )  | ( v0 = 2 + ul ; move ua , 3 ; move v0 , v0 )  | ( ( v0 = 3 ; move ua , v0 ) ; move v0 , v0 )  | ( v0 = 3 ; move ua , v0 ; move v0 , v0 + ua )  | ( v0 = 3 ; ( move ua , 3 ; move v0 , v0 ) ; pen 4 )  
[309] ( move 3 , ul ; move 2 , 2 )  | ( move 3 , ul ; move 2 , 2 - ua )  | ( move 3 , ul ; move 2 , 3 - ul )  | ( move 3 , ul ; move 2 , ul + ul )  | ( move 3 , ul ; move ul + ul , 2 )  | ( move 3 , ul ; move 2 , 2 ; pen 0 )  | ( move 4 - ul , ul ; move 2 , 3 - ul )  | ( move 3 , ul ; move 2 , 2 ; v0 = 0 )  | ( move 3 , ul - ua ; pen 3 ; move 2 , 2 )  | ( move 2 + ul , ul ; move 2 , 2 ; pen ul )  | ( move 2 + ul , ua + ul ; move 3 - ul , 2 )  | ( move 3 , ul ; v0 = 2 ; move v0 , v0 )  | ( move 3 , ul ; move 2 , 3 - ul ; pen ua - 3 )  | ( move 3 , ul ; move ul + ul , ua + 2 ; pen 4 )  | ( move 3 , ul ; move ul + ul , 2 ; pen ua * 3 )  | ( move 3 , ul ; pen 4 ; move ul + ul , 3 - ul )  | ( move 3 , ul ; v0 = 2 ; move v0 , ul + ul )  | ( move 3 , ul ; ( move ul + ul , 2 ; v0 = ua ) )  | ( move 3 , 2 - ul ; move 3 - ul , 2 ; v0 = ua - 4 )  | ( move 3 , ua + ul ; ( move 2 , ul + ul ; v0 = ul ) )  | ( move 3 , ul ; ( pen 4 ; v0 = 2 ; move v0 , v0 ) )  | ( ( move ul , ul ; v0 = ul ) ; move 2 , 0 ; move 2 , 2 )  | ( move 3 , ul ; ( pen ul ; v0 = 2 ) ; move v0 , v0 )  | ( move 3 , ul ; move 3 - ul , 2 ; ( pen ua ; v0 = 0 ) )  | ( ( move ul + ul , ul ; move ul , ua ) ; move ul + ul , 2 )  | ( ( pen 4 ; move 3 , ul - ua ) ; move ul , 2 ; move ul , ua )  
[310] ( move ua , 2 ; move 2 , 4 )  | ( move ua , 4 - 2 ; move 2 , 4 )  | ( move ua , 2 ; move 2 , 3 + ul )  | ( move ua , ul + ul ; move 2 , 4 )  | ( move ua , 2 ; move ul + ul , 4 )  | ( move ua , 2 ; pen 3 ; move 2 , 4 )  | ( move ua , 2 ; move 2 , 4 ; pen ul )  | ( move ua , 4 / 2 ; move 2 , 3 + ul )  | ( move ua , 2 ; move ul + ul , ua + 4 )  | ( move ua , 2 ; move 2 , 4 ; v0 = 0 )  | ( pen 3 ; move ua , 2 ; move 2 , 4 - ua )  | ( ( move ua , 2 ; move 2 , 4 ) ; pen ul + ul )  | ( move ua , ul + ul ; move 2 , 4 ; pen 4 - ul )  | ( move ua , ul + ul ; move ul , 4 ; move ul , ua * 3 )  | ( move ua , 2 ; ( move ul + ul , 4 ; v0 = ul + ul ) )  | ( ( move ua , 2 ; v0 = 2 + ul ) ; move ua / v0 , 4 )  
[311] ( move ul , 2 ; move 3 , 2 )  | ( move ul , ua + 2 ; move 3 , 2 )  | ( move ul , ul + ul ; move 3 , 2 )  | ( move ul , 2 ; move 3 , ul + ul )  | ( move ul , 2 ; pen ul ; move 3 , 2 )  | ( move ul , 2 ; move 3 , 2 ; pen 3 / 4 )  | ( move ul , 2 ; v0 = 2 ; move 3 , v0 )  | ( v0 = 3 ; move ul , 2 ; move v0 , 2 )  | ( move ul , 2 ; move 3 , 2 ; move 0 , ua * 3 )  | ( move ul , 2 ; move 3 , ul + ul ; pen 4 - ua )  | ( pen ua ; ( move ul , 2 ; move 3 , ul + ul ) )  | ( move ul , 2 ; move 3 , 4 / 2 ; v0 = ul / 3 )  | ( move ul , 4 / 2 ; move 0 , ua + ul ; move 3 , ul )  | ( move ul , ul + ul ; move 0 , ul ; move 3 , ua + ul )  | ( move ul , 2 ; move ul , ul + ul ; move ul + ul , 0 )  | ( v0 = 2 ; ( move ul , 2 ; move ul + v0 , v0 ) )  | ( move ul , ua + 2 ; move 4 - ul , ul + ul ; v0 = 3 )  | ( move ul , 2 ; ( move 3 , 2 - ua ; pen ul / 2 ; pen ul ) )  
[312] ( move ua , 2 ; move 3 , 4 )  | ( move ua , ua + 2 ; move 2 + ul , 4 )  | ( move ua , 2 ; move 3 , 4 ; v0 = 3 )  | ( move ua , 2 ; ( move 0 , 4 ; move 3 , ua ) )  | ( move ua , ua + 2 ; ( move 3 , 4 ; v0 = ua ; pen ul ) )  
[313] ( move ua , 4 ; move 2 , 3 )  | ( move ua , 4 ; move 2 , 3 - ua )  | ( move ua , 2 * 2 ; move 2 , ua + 3 )  | ( move ua , 4 ; ( move 2 , 3 ; pen ul ) )  | ( move ua , 4 ; pen ua + ua ; move 2 , 3 )  | ( move ua , 4 ; move ul + ul , 3 ; pen 4 * 2 )  | ( move ua , 3 + ul ; pen 4 ; move ul + ul , 3 )  | ( ( move ua , 4 ; pen 4 ) ; move 2 , 3 ; pen ua * 2 )  | ( move ua , 4 - ua ; ( move ul + ul , 4 - ul ; pen ul ) )  
[314] ( move 2 , ul ; move 3 , 3 )  | ( move 2 , ul ; move 3 , ua + 3 )  | ( move 2 , ul ; move 4 - ul , 3 )  | ( move ul + ul , ul ; move 3 , 3 )  | ( move 2 , ul ; move 3 , 3 ; pen ua )  | ( move ua / 3 , ul ; move 2 + ul , 3 )  | ( move ul + ul , ul ; move 3 , 2 + ul )  | ( move 2 , ul ; v0 = 3 ; move v0 , v0 )  | ( v0 = 3 ; move 2 , ul ; move v0 , v0 )  | ( move 2 , ul ; v0 = 3 ; move 2 + ul , v0 )  | ( move ua / 3 , ul ; v0 = 3 ; move v0 , 3 )  | ( move 2 , ul ; v0 = 4 - ul ; move v0 , v0 )  | ( ( pen 2 + ul ; move ul + ul , ul ) ; move 3 , 3 )  
[315] ( move 3 , 3 ; move 2 , ul )  | ( move 3 , 3 ; move 4 - 2 , ul )  | ( move 3 , 3 ; move 4 / 2 , ul )  | ( move 2 + ul , 3 ; move 2 , ul )  | ( move 3 , 2 + ul ; move 2 , ul )  | ( move 3 , ua + 3 ; move 2 , ul )  | ( move 4 - ul , 3 ; move 2 , ul )  | ( move 3 , 3 ; move 3 - ul , ul )  | ( move 3 , 3 ; move ul + ul , ul )  | ( move 3 , 3 ; pen ul ; move 2 , ul )  | ( move 3 , 3 ; move 2 , ul ; pen ul )  | ( move 4 - ul , 2 + ul ; move 2 , ul )  | ( move 2 + ul , 3 ; move ul + ul , ul )  | ( move 3 , 3 ; move 2 , ul ; v0 = 4 )  | ( v0 = 3 ; move v0 , 3 ; move 2 , ul )  | ( ( move 3 , 3 ; pen ua + ul ) ; move 2 , ul )  | ( move 4 - ul , 3 ; ( pen ul ; move 2 , ul ) )  | ( move 3 , 3 ; v0 = 2 ; move v0 , ua + ul )  | ( v0 = ul ; move 3 , v0 * 3 ; move 2 , ul )  | ( move 2 + ul , 3 ; move ul + ul , ul ; pen ul )  | ( move 2 - ul , 3 ; ( move 2 , ua ; move 2 , ul ) )  | ( ( move 3 , ua + 3 ; move ul + ul , ul ) ; pen 0 )  | ( move 3 , 3 ; v0 = ul ; move v0 + v0 , v0 )  | ( move 3 , 2 + ul ; ( move 2 , 2 - ul ; pen ua - ul ) )  
[316] ( move ul , 0 ; move 4 , 4 )  | ( move ul , ua ; move 4 , 4 )  | ( move 2 - ul , 0 ; move 4 , 4 )  | ( move ul , 0 ; move 4 , 3 + ul )  | ( move ul , ua ; move 2 * 2 , 4 )  | ( move ul , ua ; move 4 , 2 * 2 )  | ( move 2 - ul , ua ; move 4 , 4 )  | ( move ul , ua * 3 ; move 4 , 4 )  | ( move ul , ua * 4 ; move 4 , 4 )  | ( move ul , ua ; move 4 , 3 + ul )  | ( move ul , ua ; move 4 , ua + 4 )  | ( move ul , 0 ; move 4 , 4 ; pen ua )  | ( pen ua ; move ul , 0 ; move 4 , 4 )  | ( pen ul ; move ul , 0 ; move 4 , 4 )  | ( pen ua ; move ul , 0 ; move 4 , ua + 4 )  | ( pen ua + 2 ; move ul , ua ; move 4 , 4 )  | ( pen ul ; move ul , ua + ua ; move 4 , 4 )  | ( v0 = 4 ; move ul , 0 ; move v0 , v0 )  | ( pen 2 - ul ; ( move ul , 0 ; move 4 , 4 ) )  | ( move ul , 0 ; move 4 , 4 ; move 0 , ul + ul )  | ( v0 = 4 ; move ul , ua ; move v0 , v0 )  | ( move ul , ua ; ( move ul , 4 ; move 3 , 0 ) )  | ( move ul , ua + ua ; move 4 , 4 ; v0 = 3 )  | ( ( move ul , ua ; v0 = ul ) ; move 4 , 4 )  | ( move ul , ua ; pen ul ; move 2 + 2 , 3 + ul )  | ( move ul , 0 ; ( move 4 , 4 ; v0 = ua + ua ) )  | ( ( move ul , ua ; v0 = ul / 4 ) ; move 4 , 4 )  | ( move ul , ua ; move 4 , ua + 4 ; v0 = ul / ua )  | ( v0 = ul - 3 ; move v0 + 3 , ua ; move 4 , 4 )  | ( move ul , ua ; ( v0 = 2 * 2 ; move v0 , v0 ) )  | ( v0 = 2 ; move ul , ua ; move 2 + v0 , v0 * v0 )  | ( ( move 0 , ua ; move ul , ua ; move 4 , 4 ) ; v0 = 4 )  
[317] ( move 3 , 3 ; move ul , 2 )  | ( move 3 , 3 ; move ul , ua + 2 )  | ( move 2 + ul , 3 ; move ul , 2 )  | ( move ul , 2 ; move ul - 4 , ul )  | ( move 3 , 3 ; pen ua ; move ul , 2 )  | ( move 3 , 2 + ul ; move ul , ua + 2 )  | ( move 2 + ul , 3 ; move ul , ua / 3 )  | ( move 3 , 3 ; move ul , 2 ; move 0 , 0 )  | ( pen 4 ; move 2 + ul , 3 ; move ul , 2 )  | ( move 3 , 3 ; v0 = ul ; move v0 , 2 )  | ( move 3 , 3 ; move 4 - 3 , 2 ; pen ua / 4 )  | ( ( v0 = 3 ; move v0 , v0 ) ; move ul , 2 )  | ( move 3 , 3 ; v0 = ul ; move ul , v0 + v0 )  | ( move 3 , 3 ; ( move ul , ua + 2 ; v0 = ua ) )  | ( move ul / 3 , ul ; move 3 , ua + 2 ; move ul , 2 )  | ( move 2 + ul , 3 - ua ; move ul , 4 - 2 ; v0 = 3 )  | ( move 2 + ul , 3 ; v0 = ul ; move v0 , v0 + v0 )  
[318] ( move 4 , 0 ; move ul , 4 )  | ( move 4 , ua ; move ul , 4 )  | ( move 4 , 0 ; move ul , ua + 4 )  | ( move 4 , ua * 4 ; move ul , 4 )  | ( move 3 + ul , ua ; move ul , 4 )  | ( move 4 , ua ; move ul , ua + 4 )  | ( move 4 , ua ; move ul , 3 + ul )  | ( move 4 , ua ; move ul , 4 ; pen 2 )  | ( pen ua ; move 4 , ua ; move ul , 4 )  | ( pen ul ; move 4 , ua ; move ul , 4 )  | ( move 4 , ua ; pen ul ; move ul , 4 )  | ( move 3 + ul , 0 ; move ul , ua + 4 )  | ( move 4 , ua * 4 ; move ul , 4 - ua )  | ( move 3 + ul , ua ; move ul , 3 + ul )  | ( move 3 + ul , ua ; move ul , ua + 4 )  | ( move 3 + ul , ua ; move ul , 4 - ua )  | ( move 4 , ua ; ( pen 3 ; move ul , 4 ) )  | ( move 3 , ua ; move ul , 0 ; move ul , 4 )  | ( move ul , 0 ; move 3 , ua ; move ul , 4 )  | ( move 4 , ua ; move 3 - 2 , 4 ; move 0 , 2 )  | ( v0 = 4 ; move v0 , 0 ; move ul , v0 )  | ( v0 = 4 ; move v0 , ua ; move ul , v0 )  | ( move 4 , ua ; v0 = 0 - ul ; move ul , 4 )  | ( move 4 , ua ; ( move ul , 4 ; move 0 , ul ) )  | ( v0 = ul ; move v0 + 3 , ua ; move v0 , 4 )  | ( v0 = ul ; move 4 , ua ; move v0 , v0 * 4 )  | ( ( v0 = 4 ; move 4 , ua ) ; move ul , ua + v0 )  | ( ( move 4 , 0 ; pen ua ; move ul , 4 ) ; v0 = ua )  | ( pen 4 ; ( move 3 + ul , 0 ; move ul , 4 ) ; pen ua )  | ( ( move 4 , ua ; pen ul ) ; ( pen ua ; move ul , 4 ) )  | ( pen ua ; move 4 , 0 ; ( move ul , 4 ; pen ul ; pen ul ) )  | ( ( move 4 , ua ; move ul , 4 ) ; v0 = ul / 2 ; pen 4 )  
[319] ( move 3 , 2 ; move ua , 4 )  | ( move 2 + ul , 2 ; move ua , 4 )  | ( move 3 , 2 ; move ua , 3 + ul )  | ( move 4 - ul , 2 ; move ua , 4 )  | ( move 3 , 2 ; move ua , 4 ; pen ul )  | ( move 3 , ul + ul ; move ua , 3 + ul )  | ( move 3 , 2 ; ( pen 2 ; move ua , 4 ) )  | ( pen ua ; move 2 + ul , 2 ; move ua , 4 )  | ( move 3 , 2 ; v0 = 4 ; move ua , v0 )  | ( v0 = 4 ; move 3 , 2 ; move ua , v0 )  | ( move 0 , 3 - 2 ; move 2 + ul , ul ; move ua , 4 )  
[320] ( move 2 , 4 ; move 2 , ul )  | ( move 2 , ua + 4 ; move 2 , ul )  | ( move 2 , 3 + ul ; move 2 , ul )  | ( move 2 , 4 ; move ul + ul , ul )  | ( move ul + ul , 4 ; move 2 , ul )  | ( pen 4 ; move 2 , 4 ; move 2 , ul )  | ( move 2 , 4 ; move 2 , ul ; pen ul )  | ( pen ul ; move 2 , 4 ; move 2 , ul )  | ( move 2 , ua + 4 ; move ul + ul , ul )  | ( move ul + ul , 4 ; move 2 , ua + ul )  | ( move ul + ul , 4 ; move ul + ul , ul )  | ( move 2 , 4 ; move 2 , ul ; v0 = ua )  | ( move 2 , 4 ; ( pen ul ; move 2 , ul ) )  | ( move 2 , 4 ; v0 = ul ; move 2 , v0 )  | ( v0 = 2 ; move 2 , 4 ; move v0 , ul )  | ( move 2 , 4 ; pen ul ; move ul + ul , ul )  | ( move 3 - ul , 4 ; move 3 - ul , ul - ua )  | ( move 2 , 4 ; v0 = ua * 2 ; move 2 , ul )  | ( ( move 2 , 4 ; move 2 , ul ) ; v0 = ul )  | ( ( pen 4 + ul ; move 2 , 4 ) ; move 2 , ul )  | ( move 2 , 3 + ul ; move 0 , ua ; move 2 , ul )  | ( move ul + ul , 4 ; pen ua / 2 ; move 2 , ul )  | ( move 2 , 4 ; move 2 , ul ; ( pen ua ; pen ua ) )  | ( v0 = ul ; move 2 , 4 ; move v0 + ul , v0 )  | ( move 4 / 2 , 4 ; move ul + ul , ul ; v0 = 2 )  | ( move 2 , 4 ; ( move 2 , ul ; pen 0 ; v0 = ua ) )  | ( move 2 , 4 ; move 2 , ul ; ( v0 = 2 - ul ; pen ua ) )  
[321] ( move 4 , 0 ; move 4 , ul )  | ( move 4 , ua ; move 4 , ul )  | ( move 4 , ua ; move 2 * 2 , ul )  | ( move 3 + ul , ua ; move 4 , ul )  | ( move 4 , ua ; move 3 + ul , ul )  | ( move 4 , ua * 2 ; move 3 + ul , ul )  | ( move 4 , 0 ; move 4 , ul ; v0 = 2 )  | ( move 4 , 0 ; move 4 , ul ; pen 3 + ul )  | ( ( pen ua ; move 4 , 0 ) ; move 4 , ul )  | ( ( pen 2 ; move 4 , ua ) ; move 4 , ul )  | ( move 4 , ua ; move 4 , ul ; move ul , 3 )  | ( move 4 , 0 ; move 4 , ul ; pen ul - ua )  | ( move 4 , 0 ; pen ua - ul ; move 4 , ul )  | ( move ul , ua ; move 3 , ua ; move 4 , ul )  | ( v0 = ul ; move 4 , 0 ; move 4 , v0 )  | ( move 4 , 0 ; v0 = 4 ; move v0 , ul )  | ( move 4 , ua ; pen ul ; move 4 , ua + ul )  | ( move 4 , ua ; v0 = ul ; move 4 , v0 )  | ( move 3 + ul , ua ; move 3 + ul , ua + ul )  | ( move ul , 0 ; ( move 3 , 0 ; move 4 , ul ) )  | ( move 2 * 2 , ua ; move 4 , ul ; v0 = 3 )  | ( move 4 , 0 ; ( move 4 , ul ; v0 = ul ) )  | ( ( v0 = ul ; move 4 , 0 ) ; move 4 , ul )  | ( v0 = 4 ; move v0 , ua ; move v0 , ul )  | ( ( move 4 , 0 ; v0 = 4 ) ; move v0 , ul )  | ( move 4 , ua ; move ul , ul ; move 4 - ul , ua )  | ( move 4 , 0 ; ( pen 0 ; pen ul ) ; move 4 , ul )  | ( ( move 4 , 0 ; move 2 , ul ) ; move 2 , ua * 3 )  | ( move 4 , ua ; move 2 + 2 , ul ; move 0 , 4 + ul )  | ( move 4 , 0 ; ( pen ua * ua ; move 4 , ul ) ; pen ua )  | ( ( move 4 , 0 ; v0 = ul ; pen ua ) ; move 4 , v0 )  | ( ( move 4 , ua ; v0 = 0 ; move 4 , ul ) ; v1 = 4 )  
[322] ( move 3 , 4 ; move ua , 2 )  | ( move 3 , ua + 4 ; move ua , 2 )  | ( pen 2 ; move 3 , 4 ; move ua , 2 )  | ( move 3 , 4 ; move ua , 2 ; pen ua )  | ( move 2 + ul , 4 ; move ua , ua + 2 )  | ( move 3 , ua + 4 ; move ua , ul + ul )  | ( move 3 , 3 + ul ; move ua , ul + ul )  | ( move 3 , 4 ; pen ua ; move ua , 2 - ua )  | ( move 3 , 4 ; v0 = 2 ; move ua , v0 )  | ( move 3 , 4 ; move ua , 2 ; v0 = 4 / 2 )  | ( move 2 + ul , 4 ; move ua , 2 ; move 0 , 0 )  | ( move 3 , 3 + ul ; ( pen ua ; move ua , ul + ul ) )  | ( move 0 , 2 - ul ; ( move 3 , 3 ; move ua , ul + ul ) )  
[323] ( move ua , 3 ; move 2 , 4 )  | ( move ua , 2 + ul ; move ul + ul , 4 )  | ( move ua , 3 ; move 2 , 4 ; v0 = ul )  | ( move ua , 3 ; pen ul ; move 2 , 3 + ul )  | ( move ua , 2 + ul ; move ul + ul , 3 + ul )  | ( move 0 , ua - ul ; move ua , 4 ; move 2 , 4 )  | ( move ua , 3 ; move ul + ul , 4 ; pen 0 - 2 )  | ( move ua , 3 ; v0 = 2 ; move v0 , v0 + v0 )  
[324] ( move 3 , ul ; move 2 , 3 )  | ( move 3 , ul ; move 2 , 2 + ul )  | ( move 2 + ul , ul ; move 2 , 3 )  | ( move 3 , ua + ul ; move 2 , 3 )  | ( move 3 , ul ; move ua / 3 , 3 )  | ( move 3 , ul ; move ul + ul , 3 )  | ( move 3 , ul ; move 2 , 3 ; pen 0 )  | ( pen 2 ; move 3 , ul ; move 2 , 3 )  | ( move 3 , 2 - ul ; move 3 - ul , 3 )  | ( move 2 + ul , ul ; move 2 , ua + 3 )  | ( move 4 - ul , ul ; move 3 - ul , 3 )  | ( move 3 , ul ; pen 3 + 3 ; move 2 , 3 )  | ( move 3 , ul ; move 0 , 3 ; move 2 , ua )  | ( pen ul ; move 3 , ua + ul ; move 2 , 3 )  | ( v0 = 2 ; move 3 , ul ; move v0 , 3 )  | ( pen ul ; move 3 , ul ; move ul + ul , 3 )  | ( move 3 , ul ; move 2 , 3 ; v0 = 2 / ua )  | ( move 3 , ul ; move ul / 2 , ua ; move 2 , 3 )  | ( pen ua ; ( move 3 , ul ; move 2 , 4 - ul ) )  | ( move 3 , ul ; move ul , 2 + ul ; move ul , 0 )  | ( pen ul ; move 3 , ua + ul ; move 2 , 2 + ul )  | ( move 2 + ul , ul ; v0 = 2 ; move v0 , 3 )  | ( v0 = 4 - ul ; move v0 , ul ; move 2 , v0 )  | ( pen 4 - ul ; move 3 , ul ; move ul + ul , ua + 3 )  | ( move 4 - ul , ul ; ( move 0 , ul ; move 2 , ul + ul ) )  | ( move 3 , ua + ul ; move ul , ua + 3 ; move ul , ua * 3 )  
[325] ( move 3 , 2 ; move 3 , ul )  | ( move 3 , 4 - 2 ; move 3 , ul )  | ( move 3 , 4 / 2 ; move 3 , ul )  | ( move 3 , 2 ; move 2 + ul , ul )  | ( move 3 , ul + ul ; move 3 , ul )  | ( move 3 , 2 ; move 3 , ul ; v0 = 0 )  | ( move 3 , 2 ; move 3 , ul ; v0 = 2 )  | ( move 0 , ua ; move 3 , 2 ; move 3 , ul )  | ( move 3 , 2 ; move ul , ul ; move 2 , ua )  | ( move 3 , 2 ; v0 = 3 ; move v0 , ul )  | ( move 3 , ul + ul ; pen ul ; move 3 , ul )  | ( v0 = 3 ; move v0 , 2 ; move v0 , ul )  | ( v0 = 3 ; move 3 , 2 ; move 2 + ul , ul )  | ( v0 = ua ; ( move 3 , 2 ; move 3 , ul ) )  | ( move 2 + ul , 2 ; move 0 , ul ; move 3 , ua )  | ( move 3 , 2 ; move 4 - ul , ul ; v0 = ul )  | ( move 3 , ul + ul ; pen ua + 3 ; move 3 , ul )  | ( v0 = 3 ; move v0 , v0 - ul ; move v0 , ul )  
[326] ( move 2 , ua ; move 3 , 4 )  | ( move 2 , 0 ; move 3 , 2 * 2 )  | ( move 2 , 0 ; move 2 + ul , 4 )  | ( move 2 , ua ; move 3 , ua + 4 )  | ( move 3 - ul , ua ; move 3 , 4 )  | ( move ul + ul , ua ; move 3 , 4 )  | ( move ul + ul , ua ; move 3 , 3 + ul )  | ( move 2 , ua ; move 3 , 4 ; v0 = ua )  | ( move 2 , 0 ; pen ul ; move 3 , ua + 4 )  | ( move 2 , ua ; move 2 , 4 ; move ul , ua )  | ( v0 = 2 ; move v0 , ua ; move 3 , 4 )  | ( ( move 2 , ua ; move 3 , 4 ) ; v0 = ua )  | ( pen ul ; ( move 2 , 0 ; move 3 , ua + 4 ) )  | ( move ul + ul , 0 ; move 0 , 3 ; move 3 , ul )  | ( pen ua + 2 ; move ul + ul , 0 ; move 3 , 4 )  | ( ( move ul + ul , ua ; pen ua ) ; move 3 , 4 )  | ( move ul + ul , 0 ; move 0 , 2 ; move 2 + ul , 2 )  | ( pen ua ; ( move 2 , 0 ; move 0 , 4 ; move 3 , 0 ) )  | ( ( move 2 , ua ; pen ul ) ; move 3 , 4 ; pen 4 * 2 )  | ( pen ua ; move 2 , 0 ; ( pen ul ; move 2 + ul , 4 ) )  
[327] ( move 4 , 2 ; move 2 , ul )  | ( move 4 , ua + 2 ; move 2 , ul )  | ( move 3 + ul , 2 ; move 2 , ul )  | ( move 4 , 2 ; move 2 , ul - ua )  | ( move 4 , 2 ; move ul + ul , ul )  | ( move 4 , ul + ul ; move 2 , ul )  | ( move 4 , 2 ; move 2 , ul ; pen 3 )  | ( pen ul ; move 4 , 2 ; move 2 , ul )  | ( move 4 , 2 ; pen ul ; move 2 , ul )  | ( move 3 + ul , 2 ; move 4 / 2 , ul )  | ( move 4 , ul + ul ; move 2 , 2 - ul )  | ( move 4 , ul + ul ; move 2 , ua + ul )  | ( move 4 , 2 ; move 2 , ul ; pen 0 - ul )  | ( move 4 , 2 - ua ; move 2 , ul ; pen 2 )  | ( move 4 , 2 ; pen 4 + ul ; move 2 , ul )  | ( ( move 4 , 2 ; move 2 , ul ) ; pen ua * 4 )  | ( move 4 , ua + 2 ; move 2 , ul ; move 0 , ul )  | ( ( move 4 , 2 ; move 2 , ul - ua ) ; pen ua )  | ( ( move 4 , 2 ; move ul + ul , ul ) ; pen 4 )  | ( move 4 , 2 ; move 2 - ul , ul ; move ul , ua )  | ( move 3 + ul , 2 ; move 2 , ul ; v0 = 0 - 3 )  | ( v0 = 2 ; move 4 , v0 ; move v0 , v0 - ul )  | ( move 2 + ul , 2 ; move ul , ua ; move ul + ul , ul )  | ( move 2 , 2 ; ( move ul , ua ; move ul , 0 ; move 2 , ul ) )  
[328] ( move 4 , 2 ; move ul , 2 )  | ( move 2 * 2 , 2 ; move ul , 2 )  | ( move 4 , 4 / 2 ; move ul , 2 )  | ( move 4 , 2 ; move ul , 4 / 2 )  | ( move 4 , 2 ; move ul , ua + 2 )  | ( move 4 , 2 - ua ; move ul , 2 )  | ( move 4 , 3 - ul ; move ul , 2 )  | ( move 4 , ul + ul ; move ul , 2 )  | ( move 4 , 2 ; move ul , 2 ; pen ua )  | ( move 3 , 2 ; move ul , 0 ; move ul , 2 )  | ( ( move 4 , 2 - ua ; move ul , 2 ) ; pen 0 )  | ( pen 3 + ul ; move 4 , 3 - ul ; move ul , 2 )  | ( move 4 , ul + ul ; v0 = ul ; move v0 , 2 )  | ( ( move 4 , 2 ; move ul , ul + ul ) ; v0 = 0 )  | ( ( pen 2 ; pen 4 + 4 ) ; move 4 , 2 ; move ul , ul + ul )  
[329] ( move 3 , 2 ; move ul , 3 )  | ( move ul , 2 ; move 0 - 3 , 0 )  | ( move 3 , 2 ; move ul - 4 , 0 )  | ( move 3 , 2 ; move ul , 3 - ua )  | ( move 3 , 2 - ua ; move ul , 3 )  | ( move 4 - ul , 2 ; move ul , 3 )  | ( move 3 , 3 - ul ; move ul , 3 )  | ( move 3 , ul + ul ; move ul , 3 )  | ( move ul , 2 ; move ul - 4 , ua )  | ( pen 3 ; move 3 , 2 ; move ul , 3 )  | ( move 3 , 2 ; move ul , 3 ; pen 4 )  | ( move 3 , 2 ; move 4 - ul , ua / 2 )  | ( move 4 - ul , 2 ; move ul , ua + 3 )  | ( move 3 , ul + ul ; move ul , 2 + ul )  | ( move 3 , ul + ul ; move ul , 4 - ul )  | ( move 3 , 2 ; v0 = 3 ; move ul , 3 )  | ( ( move 3 , 2 ; pen 3 ) ; move ul , 3 )  | ( move 3 , 2 ; pen 2 ; move ul , 4 - ul )  | ( pen ua ; ( move 3 , 2 ; move ul , 3 ) )  | ( move 0 , ul ; move 3 , ul ; move ul , 3 )  | ( move 3 , ua + 2 ; pen ua ; move ul , 3 )  | ( move 3 , 2 ; ( v0 = 0 ; move ul , 3 ) )  | ( move 0 , 0 ; move ul - 4 , 2 ; move 3 , ua )  | ( v0 = 3 ; move v0 , 2 ; move ul , v0 )  | ( move ul - 4 , 4 - 2 ; move 3 , ua ; pen 2 )  | ( move 3 , ua + 2 ; move ul , 3 ; pen ua + 3 )  | ( ( move ua / 2 , 2 ; pen 2 ) ; move ul , 2 + ul )  | ( move 3 , 2 ; move ul - 2 , ua + ua ; v0 = ua )  | ( move 4 - ul , ul + ul ; move ul , 3 ; pen ul / ua )  | ( move 2 + ul , ua + 2 ; move ul , 2 + ul ; v0 = ul )  | ( ( pen ua ; move ul , ul + ul ) ; pen ua ; move ul - 4 , 0 )  
[330] ( move 2 , 2 ; move 4 , ul )  | ( move 2 , 2 ; move 3 + ul , ul )  | ( move 2 , 2 - ua ; move 4 , ul )  | ( move ul + ul , 2 ; move 4 , ul )  | ( move 2 , ul + ul ; move 4 , ul )  | ( move 2 , ul + ul ; move 3 + ul , ul )  | ( move 4 / 2 , 2 ; move 4 , ul ; pen 0 )  | ( move ul + ul , ul + ul ; move 4 , ul )  | ( move 2 , 2 ; move 4 , ul ; v0 = ul )  | ( pen 3 ; move 2 , 2 ; move 4 , ua + ul )  | ( move 2 , 2 ; pen ul ; move 4 , ua + ul )  | ( move ul + ul , 2 ; move 4 , ul ; pen 2 )  | ( v0 = 2 ; move v0 , v0 ; move 4 , ul )  | ( move 2 , 2 ; move 4 , ul ; v0 = ul - 3 )  | ( pen 2 / ua ; ( move 2 , 2 ; move 4 , ul ) )  | ( pen 3 ; move ul + ul , 4 - 2 ; move 4 , ul )  | ( move 2 , ul + ul ; move 4 , ua + ul ; pen ul )  | ( move 2 , 2 ; ( pen ul ; move 4 , ul ) ; pen ul )  | ( pen ul / ua ; move 2 , ul + ul ; move 3 + ul , ul )  | ( v0 = 2 ; move v0 , v0 ; move v0 + v0 , ul )  | ( move 2 , ul + ul ; move 3 , ua + ul ; move ul , ua * 2 )  | ( move 0 , ul ; move ul + ul , ua + ul ; move 4 , ul - ua )  
[331] ( move 2 , 4 ; move ua , 3 )  | ( move 4 - 2 , 4 ; move ua , 3 )  | ( move 2 , ua + 4 ; move ua , 3 )  | ( move ua / 3 , 4 ; move ua , 3 )  | ( move 2 , 4 ; pen 4 ; move ua , 3 )  | ( move 2 , 4 ; move ua , 3 ; pen ul )  | ( move ul , 4 ; move 3 - 2 , 0 ; move ua , 3 )  | ( move ul + ul , 3 + ul ; pen ua ; move ua , 3 )  | ( move ul , ul ; ( move ul , 3 - ua ; move ua , 2 + ul ) )  
[332] ( move 2 , 3 ; move ua , 4 )  | ( move 2 , 3 ; move ua , 4 - ua )  | ( move ua / 3 , 3 ; move ua , 4 )  | ( move 2 , 3 - ua ; move ua , 3 + ul )  | ( move 2 , 3 ; v0 = 4 ; move ua , v0 )  | ( v0 = 2 ; move v0 , 3 ; move ua , 4 )  | ( move ul + ul , 3 ; move ua , 4 ; v0 = 2 + ul )  | ( ( move ul + ul , 3 ; move ua , 4 ) ; v0 = ul )  
[333] ( move 4 , 2 ; move ua , 3 )  | ( move 4 , 4 / 2 ; move ua , 3 )  | ( move 4 , 2 ; move ua , 2 + ul )  | ( move 4 , ua + 2 ; move ua , 3 )  | ( move 2 * 2 , ua + 2 ; move ua , 3 )  | ( move 3 + ul , 2 ; move ua , 4 - ul )  | ( move 4 , ul + ul ; move ua , 4 - ul )  | ( move 4 , 2 ; move 0 , 3 ; move ua , ua )  | ( pen 4 ; move 4 , 2 ; move ua , ua + 3 )  | ( move 4 , ua + 2 ; move ua , 3 ; pen ua )  | ( move 4 , 2 ; v0 = 3 ; move ua , v0 )  | ( pen ua ; ( move 4 , 2 ; move ua , 2 + ul ) )  | ( ( v0 = ua ; move 4 , 2 ) ; move v0 , 3 )  | ( v0 = ul ; move 4 , v0 + v0 ; move ua , 3 )  | ( move 2 + 2 , 2 ; ( pen ul ; move ua , ua + 3 ) )  | ( move 4 , 2 ; ( v0 = 0 ; move ua , 3 + v0 ) )  | ( ( move 2 + 2 , 2 - ua ; move 0 , 3 ) ; move ua , ua )  | ( ( pen 4 + ul ; move 2 + 2 , 2 ) ; move ua , ua + 3 )  
[334] ( move 2 , ul ; move 4 , 2 )  | ( move 2 , ul ; move 3 + ul , 2 )  | ( move 2 , ul ; move 4 , ua + 2 )  | ( move ul + ul , ul ; move 4 , 2 )  | ( move 2 , ul ; move 3 + ul , 4 - 2 )  | ( move 2 , ul ; move 3 + ul , 2 - ua )  | ( pen 4 ; move 2 , ul ; move 3 + ul , 2 )  | ( pen ul ; move 2 , ul ; move 4 , ul + ul )  | ( move 3 - ul , ul ; move 3 + ul , ua + 2 )  | ( v0 = 2 ; move v0 , ul ; move 4 , v0 )  | ( move 2 , ul ; pen ua + 2 ; move 4 , ua + 2 )  | ( move 2 , ul ; move 4 , ul + ul ; v0 = ul )  | ( move 2 , ul ; move 3 + ul , 2 ; pen ua + ul )  | ( move ul + ul , 2 - ul ; move ul , 2 ; move 3 , 0 )  | ( move 0 , 0 ; move 2 , ul ; ( pen 3 ; move 4 , 2 ) )  | ( ( move 2 , ul ; v0 = 2 - ua ) ; move 4 , v0 )  | ( ( ( pen ua ; move 2 , ul ) ; move 4 , 2 ) ; pen ua )  
[335] ( move 3 , 3 ; move ua , 3 )  | ( move 4 , 3 ; move ua , 3 )  | ( move 3 , 3 ; move ua , 3 - ua )  | ( move 3 , 3 ; move ua , 3 ; pen 2 )  | ( pen ul ; move 3 , 3 ; move ua , 3 )  | ( move 3 , 3 ; pen 2 ; move ua , ua + 3 )  | ( ( move 2 , 3 ; move 2 , ua ) ; move ua , 3 )  | ( move 3 , 4 - ul ; move ua , 3 ; v0 = ul )  | ( move ua / 2 , 3 ; pen ul ; move ua , 2 + ul )  | ( v0 = 3 ; move v0 , v0 ; move ua , v0 )  | ( v0 = 3 ; ( move v0 , v0 ; move ua , v0 ) )  | ( ( move 4 , 3 ; v0 = 4 - ul ) ; move ua , v0 )  | ( ( pen ua ; move 3 , 3 ; move 0 , ul + ul ) ; move ua , ul )  
[336] ( move ul , 2 ; move 3 , 3 )  | ( move 2 - ul , 2 ; move 3 , 3 )  | ( move ul , 4 / 2 ; move 3 , 3 )  | ( move ul , 2 ; move 3 , 2 + ul )  | ( move ul , 2 ; move 3 , 3 - ua )  | ( move ul , ul + ul ; move 3 , 3 )  | ( move ul , 2 ; move 3 , 3 ; pen 0 )  | ( move ul , 2 ; pen 4 ; move 3 , 3 )  | ( pen 4 ; move ul , 2 ; move 3 , 3 )  | ( move ul , 3 - ul ; move 3 , 3 - ua )  | ( move ul , 2 ; move 4 - ul , 4 - ul )  | ( move ul , 2 ; move 3 , 3 ; v0 = 2 )  | ( move ul , ua + 2 ; move 3 , 3 ; pen ua )  | ( move ul , 2 ; pen ua * ua ; move 3 , 3 )  | ( move ul , 2 ; move 3 , 3 ; pen ul - ua )  | ( move ul , 2 ; move 3 , 3 ; v0 = 0 - 4 )  | ( move 0 , ul ; move ul , ul ; move 3 , 2 + ul )  | ( move ul , 2 ; ( v0 = 3 ; move v0 , v0 ) )  | ( ( pen 4 ; move ul , 4 - 2 ) ; move 3 , 4 - ul )  | ( move ul , 4 - 2 ; move 3 , ua + 3 ; v0 = ua )  | ( ( move 2 - ul , ul + ul ; move 3 , 3 ) ; pen ul )  | ( ( move ul , 2 ; pen 3 ; move 3 , 3 ) ; pen 0 - 4 )  | ( pen ua ; ( move ul , 2 ; v0 = 3 ; move v0 , v0 ) )  | ( ( ( move ul , 2 ; pen ua * 4 ) ; pen ua ) ; move 3 , 3 )  
[337] ( move ul , 2 ; move 4 , 2 )  | ( move ul , 2 ; move 3 + ul , 2 )  | ( move ul , 3 - ul ; move 4 , 2 )  | ( move ul , 2 ; move 4 , 3 - ul )  | ( move ul , ul + ul ; move 4 , 2 )  | ( move ul , ua + 2 ; move 2 + 2 , 2 )  | ( move ul , ul + ul ; move 4 , ua + 2 )  | ( move ul , 2 ; move 4 , 2 ; v0 = 0 )  | ( ( move ul , 2 ; pen 2 ) ; move 4 , 2 )  | ( move ul , ua + 2 ; move 3 + ul , 2 - ua )  | ( move 2 - ul , ul + ul ; move 4 , 3 - ul )  | ( move ul , 4 - 2 ; move 3 , 2 ; move ul , 0 )  | ( move ul , 2 ; pen 2 + ul ; move 3 + ul , 2 )  | ( move ul , 2 ; ( pen 4 ; move 4 , ul + ul ) )  | ( pen 2 ; move ul , ul + ul ; move 3 + ul , 2 )  | ( ( move ul , 2 - ua ; move 4 , 2 ) ; v0 = 4 )  | ( move ul , 2 ; ( move 4 , 2 ; pen 2 ) ; v0 = 2 )  | ( move ul , 2 ; v0 = 2 ; move v0 * v0 , v0 )  | ( ( v0 = 4 ; move ul , 2 ) ; move 4 , 2 ; v1 = 3 )  | ( move ul , 2 ; ( move 4 , ul + ul ; pen ua + ul ) ; pen 0 )  | ( ( pen ul ; pen ua + 3 ; move ul , 2 ) ; move 4 , ul + ul )  
[338] ( move ua , 4 ; move 3 , 2 )  | ( move ua , ua + 4 ; move 3 , 2 )  | ( move ua , 4 ; move 3 , ua + 2 )  | ( move ua , 4 - ua ; move 3 , 2 )  | ( pen ua ; move ua , 4 ; move 3 , 2 )  | ( move ua , 4 ; move 3 , 2 ; pen ua )  | ( move ua , 3 + ul ; move 3 , ua + 2 )  | ( move 0 , ua ; move ua , 4 ; move 3 , 2 )  | ( move ua , 4 ; move 3 , 2 ; v0 = ua )  | ( pen ul ; move ua , 3 + ul ; move 3 , 2 )  | ( move ua , 4 ; pen ua + ul ; move 3 , 2 - ua )  | ( move ua , 4 ; v0 = 3 ; move v0 , v0 - ul )  | ( move ua , 4 ; pen 4 ; ( move 2 + ul , 2 ; pen 0 ) )  | ( move ua , 3 + ul ; move 2 + ul , 2 ; v0 = 4 + 2 )  | ( ( v0 = 3 ; move ua , ul + v0 ) ; move v0 , 2 )  | ( move ua , 3 + ul ; v0 = ua + ua ; move 3 , 2 + v0 )  
[339] ( move 4 , 3 ; move ua , 2 )  | ( move 4 , ua + 3 ; move ua , 2 )  | ( move 4 , 3 - ua ; move ua , 2 )  | ( move 4 , 4 - ul ; move ua , 2 )  | ( move 4 , 3 ; move ua , ul + ul )  | ( move 0 , ua ; move 4 , 3 ; move ua , 2 )  | ( pen ul ; ( move 4 , 3 ; move ua , 2 ) )  | ( move 4 , 3 ; v0 = 2 ; move ua , v0 )  | ( move ul , 3 ; move 3 , ua ; move ua , 2 - ua )  | ( move 4 , 2 + ul ; move 0 , ul + ul ; move ua , 0 )  | ( move 4 , 2 + ul ; v0 = ul + ul ; move ua , 2 )  | ( move 4 , 4 - ul ; move 0 , ua + ul ; move ua , ul )  | ( move 4 , 3 ; ( pen ul ; move ua , 2 ) ; move 0 , ul )  | ( ( pen ua + ua ; move 4 , 3 ; move ua , 2 ) ; v0 = 2 )  
[340] ( move 3 , ul ; move 3 , 2 )  | ( move 3 , 2 - ul ; move 3 , 2 )  | ( move 2 + ul , ul ; move 3 , 2 )  | ( move 3 , ua + ul ; move 3 , 2 )  | ( move 3 , ul - ua ; move 3 , 2 )  | ( move 3 , ul ; move 3 , ul + ul )  | ( move 3 , ul ; move 3 , 2 ; pen ul )  | ( ( pen 4 ; move 3 , ul ) ; move 3 , 2 )  | ( move 4 - ul , ul ; move 3 , 2 ; pen 3 )  | ( ( move 3 , ul ; pen ua ) ; move 3 , 2 )  | ( v0 = 3 ; move v0 , ul ; move 3 , 2 )  | ( move 3 , ul ; move 3 , 2 ; v0 = 4 - 2 )  | ( move 3 , ul ; move 3 , 2 - ua ; move 0 , 2 )  | ( move 3 , ul ; move 3 , 2 ; v0 = ua * ua )  | ( move 3 , ul ; move 2 , 3 - ul ; move ul , ua )  | ( v0 = 2 + ul ; move v0 , ul ; move v0 , 2 )  | ( move 2 + ul , ul ; ( move 0 , 2 ; move 3 , ua ) )  | ( move 3 , ua + ul ; move 0 , 2 - ua ; move 3 , ua )  | ( pen 3 ; ( move 3 , ul ; move 3 , 2 ) ; v0 = ul )  | ( move 2 + ul , ul ; ( v0 = ul ; move 3 , 2 * v0 ) )  | ( ( move 3 , ul ; pen 2 ) ; move 3 , 2 ; v0 = ul + ul )  | ( move ul , ul ; ( move 2 , ua ; move 2 , 2 ) ; move ul , 0 )  
[341] ( move ua , 3 ; move 4 , 2 )  | ( move ua , 2 + ul ; move 4 , 2 )  | ( move ua , 3 ; move 4 , ua + 2 )  | ( move ua , 4 - ul ; move 4 , 2 )  | ( move ua , 3 ; move 4 , ul + ul )  | ( move ua , 3 - ua ; move 3 + ul , 2 )  | ( ( pen ua ; move ua , 3 ) ; move 4 , 2 )  | ( move ua , 3 ; ( v0 = ul ; move 4 , 2 ) )  | ( move ua , ua + 3 ; v0 = ua ; move 4 , 2 )  | ( move ua , 3 ; ( move 4 , 2 ; pen ua ; pen ua ) )  | ( move ua , 3 ; v0 = ua / 4 ; move 4 , 2 - ua )  
[342] ( move 4 , ul ; move 2 , 2 )  | ( move 4 , 3 - 2 ; move 2 , 2 )  | ( move 2 + 2 , ul ; move 2 , 2 )  | ( move 3 + ul , ul ; move 2 , 2 )  | ( move 2 + 2 , ul ; move 2 , 3 - ul )  | ( move 4 , ua + ul ; move 2 , ul + ul )  | ( move 4 , ul ; move ul + ul , 2 - ua )  | ( move ul , ul ; move 3 , ua ; move 2 , 2 )  | ( move 4 , ul ; v0 = 2 ; move 2 , v0 )  | ( move 4 , ul ; v0 = 2 ; move v0 , v0 )  | ( move 4 , ul ; ( move 2 , 2 ; v0 = ul ) )  | ( pen ul ; ( move 4 , ul ; move 2 , 4 / 2 ) )  | ( move 4 , ul ; v0 = ul ; move ul + ul , 2 )  | ( move 4 , ul ; ( v0 = 2 ; move v0 , v0 ) )  | ( ( move 4 , ul ; v0 = 2 ) ; move v0 , v0 )  | ( move 4 , ul ; v0 = ul ; move 2 , v0 + v0 )  | ( move 0 , ul ; move 3 + ul , ua ; move 2 , 4 / 2 )  | ( move 0 , ua ; move 3 + ul , ua + ul ; move 2 , 2 )  | ( move 4 , ul ; v0 = ul + ul ; move v0 , v0 )  | ( move 4 , ul ; move 2 , ul + ul ; v0 = ua + ul )  | ( move 4 , ul ; move 0 , ua * 4 ; move 4 - 2 , ul + ul )  | ( move 3 + ul , ul - ua ; move 0 , ul ; move 2 , ua + ul )  
[343] ( move ul , 3 ; move 3 , 2 )  | ( move ul , 3 ; move 3 , 4 / 2 )  | ( move ul , 3 ; move 3 , ua + 2 )  | ( move ul , 2 + ul ; move 3 , 2 )  | ( move ul , ua + 3 ; move 3 , 2 )  | ( move ul , 4 - ul ; move 3 , 2 )  | ( move ul , 3 ; move 3 , ul + ul )  | ( move ul , 3 - ua ; move 2 + ul , 2 )  | ( move ul , 3 ; move 4 - ul , ua + 2 )  | ( ( move ul , 3 ; move 3 , 2 ) ; pen 2 )  | ( move ul , 3 ; move 0 , 2 ; move 3 , ua )  | ( move ul , ua ; move ul , 3 ; move 3 , 2 )  | ( move ul , 2 + ul ; move 3 , 2 ; pen ua )  | ( move ul , 3 ; move 3 , ul + ul ; pen ul )  | ( move ul , 3 ; ( v0 = ul ; move 3 , 2 ) )  | ( ( move ul , 3 ; move 2 , 2 ) ; move ul , ua )  | ( move ul , 3 ; move 3 , ua + 2 ; pen ua * 4 )  | ( move ul , 3 ; move 3 , ul + ul ; v0 = ul )  | ( move ul , 3 ; move 3 - ul , ul + ul ; move ul , ua )  | ( v0 = 2 + ul ; move ul , v0 ; move v0 , v0 - ul )  
[344] ( move 3 , ul ; move 3 , 3 )  | ( move 3 , ul ; move 3 , 2 + ul )  | ( move 3 , ul ; move 2 + ul , 3 )  | ( pen 3 ; move 3 , ul ; move 3 , 3 )  | ( move 3 , ul ; pen ua ; move 3 , 3 )  | ( move 2 + ul , ul ; move 3 , 2 + ul )  | ( move 3 , ul ; pen ul ; move 3 , ua + 3 )  | ( move 3 , ul ; move ua / 2 , 3 ; pen ul )  | ( v0 = 3 ; move 3 , ul ; move v0 , 3 )  | ( v0 = 3 ; move v0 , ul ; move 3 , v0 )  | ( ( pen ul + ul ; move 3 , ul ) ; move 3 , 3 )  | ( v0 = 3 ; move v0 , ul ; move v0 , v0 )  | ( v0 = 3 ; move v0 , v0 - 2 ; move 3 , v0 )  | ( move 3 , ua + ul ; ( move 3 , 2 + ul ; pen ul ) )  | ( move 3 , ul ; ( v0 = ua ; move 3 , 3 - v0 ) )  | ( v0 = 4 - ul ; move v0 , ul ; move v0 , v0 )  | ( v0 = 3 ; move v0 , 3 / v0 ; move v0 , v0 )  | ( move ul , ul ; ( move 2 , 0 ; move 3 , 3 ; v0 = 3 ) )  | ( ( move 3 , ul ; v0 = 3 ; move 3 , v0 ) ; pen v0 )  | ( move 3 , ul ; ( move 3 , 3 ; v0 = ul + ul ) ; pen 0 )  
[345] ( move 3 , 2 ; move ul , 4 )  | ( move 3 , 4 - 2 ; move ul , 4 )  | ( move 3 , ul + ul ; move ul , 4 )  | ( pen 4 ; move 3 , 2 ; move ul , 4 )  | ( move 2 + ul , 2 ; move ul - 2 , ul )  | ( move 2 + ul , ul + ul ; move ul , 4 )  | ( pen ua ; move 2 + ul , 2 ; move ul , 4 )  | ( ( move 3 , ul + ul ; move ul , 4 ) ; pen 4 )  | ( v0 = ul ; move 3 , 2 / v0 ; move v0 , 4 )  | ( move 3 , 2 ; ( move 3 - 4 , ul ; pen 0 - ul ) )  | ( v0 = 0 ; ( move 3 , 2 ; move v0 + ul , 4 ) )  
[346] ( move ua , 3 ; move 4 , 3 )  | ( move ua , 3 ; move 2 + 2 , 3 )  | ( move ua , 3 ; move 4 , ua + 3 )  | ( move ua , ua + 3 ; move 4 , 3 )  | ( move ua , 3 ; move 4 , 3 ; pen ua )  | ( move ua , 3 ; move 4 , 3 ; pen ul )  | ( move ua , 3 ; move 4 , 3 ; move 0 , ul - 2 )  | ( pen ua * 4 ; move ua , 3 ; move 4 , ua + 3 )  | ( v0 = ua + 3 ; move ua , v0 ; move 4 , 3 )  | ( pen ul ; ( move ua , 3 ; pen ul ) ; move 4 , 3 )  | ( move ua , ua + 3 ; move 0 , 2 ; move 2 + 2 , ul )  | ( move ua , ua + 3 ; move ul , 3 ; move 3 , 0 - ua )  | ( move 0 , ul + ul ; move ua , ul ; move 4 , 2 + ul )  | ( ( move ua , 3 ; pen ua ) ; move 4 , 2 + ul ; pen ul )  
[347] ( move 2 , 4 ; move ua , 4 )  | ( move 4 - 2 , 4 ; move ua , 4 )  | ( move 2 , 4 ; move ua , ua + 4 )  | ( move 2 , 3 + ul ; move ua , 4 )  | ( move 2 , 4 ; move ua , 3 + ul )  | ( move ul + ul , 4 ; move ua , 4 )  | ( pen ul ; move 2 , 4 ; move ua , 4 )  | ( move 2 , 3 + ul ; move ua , ua + 4 )  | ( move ul + ul , 4 ; move ua , 3 + ul )  | ( move 2 , 4 ; move ua , 4 ; move 0 , 4 )  | ( pen 2 ; move 2 , 4 ; move ua , 3 + ul )  | ( move 2 , 4 ; ( move ua , 4 ; v0 = ua ) )  | ( ( move 2 , 4 ; v0 = ua ) ; move ua , 4 )  | ( move ul , 4 ; ( move ul , 0 ; move ua , 4 ) )  | ( move ul + ul , 4 ; v0 = 4 ; move ua , v0 )  | ( move 2 , 4 ; ( move ua , 4 ; v0 = ul / ua ) )  | ( move ul , 4 ; move ul , ua * 4 ; move ua , ua + 4 )  | ( move 2 , 4 ; ( move ua , 4 ; pen ua ; v0 = ul ) )  
[348] ( move 4 , 3 ; move ul , 2 )  | ( move 2 + 2 , 3 ; move ul , 2 )  | ( move 4 , 3 ; move ul , 4 / 2 )  | ( move 4 , 3 ; move ul , ua + 2 )  | ( move 4 , 3 ; move ul , ul + ul )  | ( move 3 + ul , 3 ; move ul , 2 - ua )  | ( move 2 + 2 , 3 ; pen 3 ; move ul , 2 )  | ( ( move 4 , 3 ; pen 3 ) ; move ul , 2 )  | ( pen 3 ; move 4 , ua + 3 ; move 2 - ul , 2 )  | ( move 4 , 3 ; v0 = 3 ; move ul , ul + ul )  | ( move 4 , 3 ; pen ua + ul ; move ul , 4 / 2 )  | ( move ul , 3 ; move 2 + ul , 0 ; move ul , 2 - ua )  | ( move 2 + 2 , 3 ; move ul , ua + 2 ; pen ul / ua )  | ( ( move 4 , 3 ; v0 = ul ) ; move ul , v0 + v0 )  | ( ( move 3 + ul , 3 ; move ul , 2 ) ; pen ua ; v0 = 2 )  
[349] ( move 3 , 3 ; move ua , 4 )  | ( move 3 , 3 ; move ua , 3 + ul )  | ( move 2 + ul , 3 ; move ua , 4 )  | ( move 3 , 3 ; pen 3 ; move ua , 4 )  | ( move 3 , 3 ; move ua , 4 ; pen ua )  | ( move 2 + ul , 2 + ul ; move ua , 4 )  | ( move 2 + ul , 3 - ua ; move ua , 4 )  | ( move 3 , 3 ; move 0 , 0 ; move ua , 4 )  | ( move 3 , 3 ; move ua , 2 + 2 ; v0 = ua + ul )  | ( move 2 + ul , ua + 3 ; move ua , 4 ; v0 = 3 )  | ( move 3 , 3 ; move 0 , 3 - ua ; move ua , ul - ua )  | ( v0 = 3 ; ( move v0 , 4 - ul ; move ua , 4 ) )  | ( ( move 3 , 3 ; pen 4 ; move ua , 3 + ul ) ; pen ul )  | ( move 3 , 2 + ul ; ( move ua , 4 - ua ; pen 0 - ul ) )  | ( ( move 3 , 3 ; move ua , 4 ; v0 = ua + 2 ) ; pen 0 )  | ( v0 = 4 - ua ; pen ul ; ( move 3 , 3 ; move ua , 4 ) )  
[350] ( move 3 , 4 ; move ul , 2 )  | ( move 3 , 3 + ul ; move ul , 2 )  | ( move 3 , 4 ; move ul , ul + ul )  | ( move 3 , 3 + ul ; move ul , 2 - ua )  | ( move 4 - ul , 3 + ul ; move ul , 2 )  | ( move 3 , ua + 4 ; move ul , ul + ul )  | ( ( move 3 , 4 ; move ul , 2 ) ; pen 0 )  | ( move 0 , ul ; move 3 , 3 ; move ul , 2 )  | ( move 3 , 4 ; move ul , 2 ; move 0 , ul )  | ( move 3 , 4 ; move ul , ua + 2 ; pen 4 )  | ( ( move 3 , 4 ; move ul , 2 ) ; pen ua )  | ( move 3 , 4 ; move ul , 4 - 2 ; v0 = 0 )  | ( ( move 3 , 4 ; move 0 , ua ) ; move ul , 2 )  | ( move 2 + ul , 4 ; move ul , 2 ; v0 = 3 )  | ( ( move 3 , 4 - ua ; move ul , 2 ) ; pen 4 )  | ( move 3 , 4 ; move ul , 2 ; v0 = ua + ul )  | ( ( move ul , 4 ; move 2 , ua ) ; move ul , 2 )  | ( move 2 + ul , 2 + 2 ; move 0 , ul ; move ul , ul )  | ( move 2 + ul , 4 ; move ul , 2 ; v0 = ua * ua )  | ( v0 = 2 ; move 3 , v0 * v0 ; move ul , v0 )  | ( pen 2 ; ( move 3 , ua + 4 ; move ul , 2 ) ; pen 3 )  | ( move 3 , 4 ; ( move ul , 2 ; pen 2 + 2 ) ; v0 = ul )  
[351] ( move 3 , ul ; move 2 , 4 )  | ( move 3 , ul ; move 4 - 2 , 4 )  | ( move 3 , ul ; move 2 , 3 + ul )  | ( move 3 , ua + ul ; move 2 , 4 )  | ( move 3 , ul ; move 2 , 4 - ua )  | ( move 3 , ul ; move 3 - ul , 4 )  | ( move 3 , ul ; move ua / 3 , 4 )  | ( move 3 , ul ; move ul + ul , 4 )  | ( move 2 + ul , ul ; move ul + ul , 4 )  | ( ( pen ul ; move 3 , ul ) ; move 2 , 4 )  | ( ( move 3 , ul ; pen ul ) ; move 2 , 3 + ul )  | ( move 3 , ul ; move ul + ul , 3 + ul ; v0 = ul )  | ( move 3 , ua + ul ; pen ul ; ( move 2 , 4 ; pen 2 ) )  | ( move 3 , ua + ul ; ( pen ua ; move 2 , 4 ; v0 = ul ) )  
[352] ( move 4 , 3 ; move 2 , ul )  | ( move 2 + 2 , 3 ; move 2 , ul )  | ( move 4 , 3 ; move 4 / 2 , ul )  | ( move 4 , 2 + ul ; move 2 , ul )  | ( move 3 + ul , 3 ; move 2 , ul )  | ( move 4 , 3 ; move 3 - ul , ul )  | ( move 4 , 3 ; move ul + ul , ul )  | ( move 3 + ul , 3 - ua ; move 2 , ul )  | ( move 4 , 4 - ul ; move 2 , ul - ua )  | ( move 4 , 3 ; move 0 , 0 ; move 2 , ul )  | ( v0 = 0 ; move 4 , 3 ; move 2 , ul )  | ( pen ua - ul ; move 4 , 3 ; move 2 , ul )  | ( pen ul ; move 4 , 3 ; move ul + ul , ul )  | ( move 4 , ua + 3 ; move 2 , ul ; v0 = 3 )  | ( move 4 , 3 ; v0 = ul + ul ; move 2 , ul )  | ( v0 = 3 ; move 4 , 3 ; move v0 - ul , ul )  | ( ( move 4 , 2 + ul ; move 2 , ul ) ; v0 = ul )  | ( v0 = 0 ; move 4 , 3 ; ( pen ul ; move 2 , ul ) )  
[353] ( move 2 , ul ; move 4 , 3 )  | ( move 2 , ul ; move 2 * 2 , 3 )  | ( move 2 , 2 - ul ; move 4 , 3 )  | ( move 2 , ul ; move 4 , 3 - ua )  | ( move ul + ul , ul ; move 4 , 3 )  | ( move 2 , ul ; pen ul ; move 4 , 3 )  | ( move 2 , ua + ul ; move 3 + ul , 3 )  | ( move 2 , ul ; move 3 + ul , 3 - ua )  | ( pen 2 ; ( move 2 , ul ; move 4 , 3 ) )  | ( move 2 , ul ; move 0 , 2 ; move 4 , ul )  | ( move 2 , ul ; ( pen ul ; move 4 , 3 ) )  | ( v0 = 2 ; move v0 , ul ; move 4 , 3 )  | ( move 2 , ul ; v0 = 4 ; move v0 , 3 )  | ( pen ul ; move ul + ul , ul ; move 4 , 3 )  | ( move 2 , ul ; ( v0 = 0 ; move 4 , 3 ) )  | ( pen 3 + 2 ; move 2 , ul ; move 2 + 2 , 3 )  | ( move 2 , ul ; move 4 , 3 ; move 0 , ua + 2 )  | ( move 2 , ul ; ( move 3 , 3 ; move ul , 0 ) )  | ( move 2 , ul ; move 4 , 3 ; move 0 , ul / ua )  | ( move 2 , ul ; move 4 , ua + 3 ; v0 = 3 / 2 )  | ( move ul + ul , ul ; move 4 , ua + 3 ; v0 = 0 )  | ( move 2 , ul ; ( pen ua + ul ; move 4 , 4 - ul ) )  | ( move 2 , ua + ul ; v0 = 3 + ul ; move v0 , 3 )  | ( v0 = ul ; move 2 , v0 ; move v0 + 3 , v0 * 3 )  
[354] ( move 3 , 3 ; move 3 , ul )  | ( move 3 , ua + 3 ; move 3 , ul )  | ( move 3 , 3 ; move 3 , ua + ul )  | ( move 3 , 4 - ul ; move 3 , ul )  | ( move 4 - ul , 3 ; move 3 , ul )  | ( move 2 + ul , 4 - ul ; move 3 , ul )  | ( move 3 , 3 ; ( move 3 , ul ; pen 2 ) )  | ( move 3 , 3 ; move 4 - ul , ul ; pen 0 )  | ( move 3 , 2 + ul ; move 3 , ul ; pen 3 )  | ( pen ua ; move 3 , 3 ; move 2 + ul , ul )  | ( move 0 , ua * 4 ; move 3 , 3 ; move 3 , ul )  | ( pen 3 ; ( move 3 , 3 ; move 3 , ua + ul ) )  | ( move 3 , 2 + ul ; move 3 , ul ; v0 = ua )  | ( move 4 - ul , 3 ; move 3 , ul - ua ; pen ul )  | ( v0 = 3 ; move v0 , v0 ; move v0 , ul )  | ( v0 = 4 - ul ; move v0 , 3 ; move v0 , ul )  | ( move 2 + ul , 3 ; move 2 , ul ; move ul , 0 - ua )  | ( move 2 + ul , ua + 3 ; ( pen ua ; move 3 , ul ) )  | ( move 3 , 3 ; ( ( move 3 , ul ; pen 2 ) ; pen 0 ) )  | ( move 3 , 4 - ul ; ( v0 = ul ; move 3 , v0 ) )  | ( v0 = 2 + ul ; move v0 , v0 ; move v0 , ul )  | ( v0 = 3 ; move v0 , v0 ; move v0 , ua + ul )  | ( v0 = 3 ; move v0 , v0 ; move v0 , 3 / v0 )  | ( ( v0 = 2 + ul ; move v0 , 3 ) ; move v0 , ul )  | ( ( move 2 + ul , 3 ; move 2 , ul ) ; move 2 - ul , 0 )  | ( move 2 + ul , 3 ; v0 = ul - 3 ; move 4 - ul , ul )  | ( pen ua - ul ; ( move 3 , 4 - ul ; move 2 + ul , ul ) )  | ( ( pen 3 + 3 ; move 3 , 3 - ua ; pen 2 ) ; move 3 , ul )  
[355] ( move ul , 2 ; move 3 , 4 )  | ( move ul , 2 ; move 3 , 3 + ul )  | ( move ul , 2 ; move 3 , ua + 4 )  | ( move ul , 2 ; move 2 + ul , 4 )  | ( move ul , ul + ul ; move 3 , 4 )  | ( move ul , ua + 2 ; move 3 , 4 ; pen 4 )  | ( move ul , 2 ; ( move 3 , 4 ; pen ul ) )  | ( pen ul ; ( move ul , 2 ; move 3 , 4 ) )  | ( pen 2 ; move ul , ul + ul ; move 3 , 4 )  | ( pen 3 ; move ul , ul + ul ; move 3 , 4 )  | ( move ul , 2 ; v0 = 3 ; move v0 , 4 )  | ( move ul , 2 ; move 4 - ul , 4 ; move 0 , ua )  | ( move ul , 2 ; move 3 , 3 + ul ; pen ua + 4 )  | ( move ul , ul + ul ; move 3 , 4 ; v0 = ua )  | ( pen ul + ul ; move ul , ul + ul ; move 3 , 4 )  | ( move ul , 2 ; ( v0 = ul - ua ; move 3 , 4 ) )  | ( move ul , 2 ; ( move 3 , 3 + ul ; pen ua - 3 ) )  | ( move ul , 2 ; move 2 , 4 ; ( move ul , ua ; pen ul ) )  | ( ( move ul , 2 ; v0 = 3 ) ; move v0 , ul + v0 )  | ( move ul , 2 ; ( v0 = ua ; move 3 , 4 ; pen v0 ) )  | ( ( pen ul ; v1 = 4 ) ; move ul , 2 ; move 3 , v1 )  
[356] ( move ua , 2 ; move 4 , 4 )  | ( move ua , 2 ; move 3 + ul , 4 )  | ( move ua , 2 - ua ; move 4 , 4 )  | ( move ua , 2 ; move 4 , 4 - ua )  | ( move ua , ua + 2 ; move 4 , 2 * 2 )  | ( move ua , 2 ; v0 = 4 ; move v0 , v0 )  | ( move ua , 2 - ua ; v0 = 4 ; move v0 , v0 )  
[357] ( move 4 , 4 ; move ua , 2 )  | ( move 4 , 4 ; move ua , ua + 2 )  | ( move 4 , 4 ; pen ul ; move ua , 2 )  | ( move 4 , 4 ; move ua , 2 ; pen ul )  | ( move 4 , 4 - ua ; move ua , ul + ul )  | ( move 2 + ul , 4 ; move ul , ua ; move ua , 2 )  | ( v0 = 2 ; move 2 * v0 , 4 ; move ua , v0 )  | ( move 4 , 3 + ul ; move ua , 2 - ua ; move 0 , 3 )  | ( move ul , 4 ; ( move 3 , 0 ; move ua , ua + 2 ) )  | ( pen ua + ul ; ( move 4 , 4 ; pen 2 ; move ua , ul + ul ) )  
[358] ( move ul , 4 ; move 3 , 2 )  | ( move ul , 3 + ul ; move 3 , 2 )  | ( move ul , ua + 4 ; move 3 , 2 )  | ( move ul , 4 ; move 3 , ul + ul )  | ( move ul , 4 ; move 3 , 2 ; pen 2 )  | ( move 0 , 0 ; move ul , 4 ; move 3 , 2 )  | ( move ul , 4 ; move 0 , ul ; move 3 , ul )  | ( move ul , 4 ; pen 3 ; move 3 , ul + ul )  | ( move ul , 4 ; v0 = 2 ; move 3 , v0 )  | ( move 0 , ua + 3 ; move ul , ul ; move 3 , 2 )  | ( move ul , 4 ; move 0 , ua ; move 2 + ul , 2 )  | ( move ul , 3 + ul ; move 3 , ul + ul ; move 0 , ua )  | ( move 0 , ua ; ( pen ul ; move ul , 4 ) ; move 3 , 2 )  | ( move ul , 4 ; ( pen ul ; move 3 , 2 ) ; move 0 , ul )  | ( move ul , 4 ; ( move 3 , 2 ; v0 = ua / 3 ; pen 0 ) )  | ( pen 4 - 3 ; ( move ul , ua + 4 ; move 3 , 2 ) ; pen 3 )  
[359] ( move 4 , 2 ; move ua , 4 )  | ( move 4 , 2 ; move ua , ua + 4 )  | ( move 4 , 4 - 2 ; move ua , 4 ; v0 = 4 )  | ( v0 = 4 ; move v0 , 2 ; move ua , v0 )  | ( move 3 , 4 / 2 ; move ul , ua ; move ua , 4 )  | ( move 4 , ul + ul ; pen 4 + 2 ; move ua , 4 )  | ( pen ua ; move 3 + ul , 2 ; move ua , ua + 4 )  | ( v0 = 4 ; ( move 4 , 2 ; move ua , v0 ) )  | ( ( move 4 , ul + ul ; v0 = 3 ) ; move ua , 4 )  | ( move 4 , 2 ; ( move ua , 4 ; pen 0 ) ; move ul , 4 )  | ( pen 2 ; move ul , ul + ul ; ( move 3 , ua ; move ua , 4 ) )  
[360] ( move 4 , 2 ; move 3 , ul )  | ( move 4 , 2 ; move 2 + ul , ul )  | ( move 4 , 2 ; move 3 , ua + ul )  | ( move 4 , ul + ul ; move 3 , ul )  | ( move 4 , ua + 2 ; move 3 , 2 - ul )  | ( move 4 , 2 ; move 0 , ua ; move 3 , ul )  | ( move ul , 2 ; move 3 , 0 ; move 3 , ul )  | ( move 4 , 2 ; move 3 , ul ; v0 = ul )  | ( v0 = ul ; move 4 , 2 ; move 3 , v0 )  | ( move 4 , ua + 2 ; move 3 , ul ; pen ua + ul )  | ( move 3 , ul + ul ; move ul , ua ; move 3 , ul )  | ( move 4 , ul + ul ; v0 = ul ; move 3 , v0 )  | ( v0 = 2 ; move 4 , v0 ; move ul + v0 , ul )  | ( move 4 , 2 ; ( move ul , ul ; move 2 , 0 - ua ) )  
[361] ( move 2 , ul ; move 3 , 4 )  | ( move 2 , ul ; move 3 , 3 + ul )  | ( move 2 , ul ; move 2 + ul , 4 )  | ( move 2 , ua + ul ; move 3 , 4 )  | ( move ul + ul , ul ; move 3 , 4 )  | ( move 2 , ul - ua ; move 2 + ul , 4 )  | ( move ul + ul , ul ; move 3 , 3 + ul )  | ( move 2 , ul ; move 3 , 4 ; v0 = 4 )  | ( move 0 , ul ; move 2 , ua ; move 3 , 4 )  | ( pen ua * 4 ; move 2 , ul ; move 3 , 4 )  | ( move 2 , ul ; move ul , 4 ; move 2 , ua )  | ( pen ua ; move 2 , ul ; move 3 , ua + 4 )  | ( pen ul ; move 3 - ul , ul ; move 3 , 4 )  | ( move 2 , ul ; v0 = 3 ; move v0 , 4 )  | ( move 2 , ul ; v0 = ua * 4 ; move 3 , 4 )  | ( move 2 , ul ; move 0 , ua ; move 3 , 4 - ua )  | ( move 3 - ul , ul ; move 2 , 4 ; move ul , ua )  | ( move 3 - ul , ul - ua ; move 4 - ul , 3 + ul )  | ( move ul + ul , ul ; move 3 , 3 + ul ; pen ul / 4 )  | ( pen 4 ; ( move 2 , ul ; move 2 , 4 ) ; move ul , ua )  | ( move 3 - ul , ul ; ( move 3 , ua + 4 ; move 0 , 4 ) )  
[362] ( move 3 , 4 ; move 2 , ul )  | ( move 3 , 2 + 2 ; move 2 , ul )  | ( move 3 , 4 ; move ul + ul , ul )  | ( move 3 , 4 ; move 2 , ul ; pen ua )  | ( move 3 , 4 ; move 2 , ul ; pen ul )  | ( move 3 , ua + 4 ; move 3 - ul , ul )  | ( move ul , 4 ; move 2 , 0 ; move 2 , ul )  | ( ( move 3 , 4 ; pen ul ) ; move 2 , ul )  | ( move 3 , 4 ; move 2 , ul ; v0 = 0 - ua )  | ( move 3 , 4 ; move 2 , ul ; move 0 , ua + ua )  | ( move 3 , 4 ; ( move 2 , ua + ul ; pen ul ) )  | ( move 2 + ul , 4 - ua ; pen ua ; move 2 , ul )  | ( move 3 , 2 * 2 ; pen ua ; move ul + ul , ul )  | ( move 2 + ul , 4 ; v0 = ul ; move 2 , v0 )  | ( move 0 , ul ; move 3 , ua + 3 ; move ul + ul , ul )  | ( pen 2 ; ( pen 4 ; ( move 3 , 4 ; move 2 , ul ) ) )  | ( move 3 , 4 ; ( v0 = ua + ul ; move ul + ul , v0 ) )  | ( ( pen ul ; move 3 , 4 ) ; move ul + ul , ul ; pen ua + ul )  
[363] ( move ul , 3 ; move 4 , 2 )  | ( move ul , 3 ; move 4 , ua + 2 )  | ( move ul , ua + 3 ; move 4 , 2 )  | ( move ul , 2 + ul ; move 4 , 2 )  | ( move ul , 3 - ua ; move 4 , 2 )  | ( move ul , 3 ; move 3 + ul , ul + ul )  | ( move ul , 3 - ua ; pen 4 ; move 4 , 2 )  | ( move ul , 4 - ul ; pen ua ; move 4 , 2 )  | ( move ul , 3 ; pen ua ; move 4 , ul + ul )  | ( ( move ul , 3 ; move 4 , 2 ) ; move 0 , 4 )  | ( move ul , 2 + ul ; move 4 , 2 ; move 0 , 3 )  | ( move ul , 2 + ul ; v0 = 4 ; move v0 , 2 )  | ( move ul , ua + 3 ; move 4 , 3 - ul ; v0 = 4 )  | ( move ul , ua + 3 ; move 3 + ul , 2 ; v0 = ul )  | ( move ul , 3 ; move 4 , ul + ul ; move 0 , ua * ua )  | ( ( move 0 , 3 ; move ul , ua ) ; move 4 , 2 ; pen 3 )  | ( move 0 , ul ; move ul , 2 ; ( move 4 , 2 ; pen ua ) )  | ( move ul , 3 - ua ; v0 = ul ; move 4 , v0 + v0 )  | ( ( move ul , 3 ; move 3 + ul , ul + ul ) ; v0 = ul )  | ( ( pen ul ; move ul , 3 ) ; move 4 , ul + ul ; pen ua * ua )  
[364] ( move 2 , 3 ; move 4 , ul )  | ( move 2 , 2 + ul ; move 4 , ul )  | ( move 2 , 3 ; move 4 , ua + ul )  | ( move 2 , 3 ; move 4 , ul - ua )  | ( move ul + ul , 3 ; move 4 , ul )  | ( move 4 - 2 , ua + 3 ; move 4 , ul )  | ( move 2 , 3 ; move 3 + ul , ua + ul )  | ( move 2 , 2 + ul ; move 3 + ul , ul )  | ( move 2 , 3 ; pen 3 ; move 4 , 2 - ul )  | ( move 2 , 3 ; move ul , ul ; move 3 , ua )  | ( move 2 , 3 ; move 2 + 2 , ul ; v0 = ua )  | ( move 2 , 3 ; move 3 + ul , ul ; v0 = 0 )  | ( move 2 , 2 + ul ; move 4 , ul ; v0 = 2 )  | ( move 2 , 3 ; ( move 4 , ul ; v0 = ua ) )  | ( pen 4 * 2 ; move 2 , 2 + ul ; move 4 , ul )  | ( move 2 , 3 ; move 4 , ul ; v0 = ua + ul )  | ( ( move 2 , 3 ; v0 = 4 ) ; move v0 , ul )  | ( v0 = 2 + ul ; move 2 , v0 ; move 4 , ul )  | ( v0 = 2 ; move v0 , 3 ; move 2 * v0 , ul )  | ( move 2 , 3 ; ( move ul , ul ; move 4 - ul , 0 ) )  | ( move ul + ul , 3 ; move 3 , ul ; move ul , ua * 3 )  | ( ( move 2 , 2 + ul ; move 4 , ul ) ; pen 0 ; v0 = ua )  
[365] ( move 3 , 2 ; move 4 , ul )  | ( move 3 , ul + ul ; move 4 , ul )  | ( pen ul ; move 3 , 2 ; move 4 , ul )  | ( move 2 , 2 ; move ul , 0 ; move 4 , ul )  | ( move 3 , 2 ; move 4 , ul ; v0 = ua )  | ( move 3 , ua + 2 ; pen ua ; move 4 , ul )  | ( move 3 , 2 ; move 4 , ua + ul ; pen ul )  | ( move 3 , 2 ; move ul , ul ; move 3 , ua * 2 )  | ( move 3 , ua + 2 ; move 4 , ul ; v0 = ua )  | ( ( move 3 , ua + 2 ; pen ua ) ; move 4 , ul )  | ( move 3 , 2 ; v0 = 2 ; move v0 * v0 , ul )  | ( v0 = ul ; move 3 , v0 + v0 ; move 4 , ul )  | ( ( move 3 , 2 ; move 4 , ul ) ; v0 = ul - ua )  | ( pen ua - ul ; move 2 + ul , 4 / 2 ; move 4 , ul )  | ( move 3 , ul + ul ; v0 = 0 ; move 4 , ul / v0 )  | ( ( move 3 , 2 ; move 2 + 2 , ul ; pen ua ) ; pen ul )  | ( move 3 , 2 ; ( move 0 , ua ; move 3 + ul , ul - ua ) )  
[366] ( move ua , 4 ; move 2 , 4 )  | ( move ua , 4 ; move 2 , 2 * 2 )  | ( move ua , 3 + ul ; move 2 , 2 * 2 )  | ( move ua , 4 ; move ua / 4 , 3 + ul )  | ( move ua , ua + 4 ; move 0 - ul , ul )  | ( move ua , 4 ; move 0 , 3 ; move 2 , ul )  | ( ( move ua , 4 ; move 2 , 4 ) ; v0 = ua )  | ( move ua , 3 + ul ; move 2 , 4 ; pen 4 - ua )  | ( pen ua - 4 ; move ua , 4 ; move ua / 3 , 4 )  | ( move ua , 4 ; pen ua ; move ua / 3 , 3 + ul )  | ( move ua , 4 ; move ul - 2 , ul ; move ul , ua )  
[367] ( move 4 , ul ; move 2 , 3 )  | ( move 4 , ua + ul ; move 2 , 3 )  | ( move 4 , ul ; move 3 - ul , 3 )  | ( move 4 , ul ; move ul + ul , 3 )  | ( move 4 , ul ; move 2 , 3 ; pen ul )  | ( move 4 , 2 - ul ; move ul + ul , 3 )  | ( move 4 , ul ; move 2 , 3 ; v0 = ul )  | ( move 2 + 2 , ul ; pen ul ; move 2 , 3 )  | ( move 4 , ul ; pen 3 ; move 2 , ua + 3 )  | ( move 3 + ul , ul ; pen 4 ; move 2 , 3 )  | ( move 4 , ul ; move ul + ul , 3 ; pen 3 )  | ( move 4 , ul ; move ul + ul , 3 ; pen ul )  | ( move 4 , ul ; ( v0 = ul ; move 2 , 3 ) )  | ( ( move 3 + ul , ul ; move 2 , 3 ) ; pen 0 )  | ( v0 = 4 ; move v0 , ul ; move v0 / 2 , 3 )  | ( move 4 , ul ; pen ua - ul ; move ul + ul , 2 + ul )  | ( move 4 , ua + ul ; ( move 2 , 3 ; move ul , 3 ) ; pen 0 )  
[368] ( move ua , 4 ; move 3 , 3 )  | ( move ua , 4 ; move 4 , 3 )  | ( move ua , 4 - ua ; move 4 , 3 )  | ( v0 = 3 ; move ua , 4 ; move v0 , v0 )  | ( ( move ua , 4 ; v0 = 3 ) ; move v0 , v0 )  | ( move ua , 4 ; move 3 + ul , 3 - ua ; pen ua / 3 )  | ( ( move ua , 4 ; v0 = 3 ; move 3 , v0 ) ; pen ul )  
[369] ( move 3 , 3 ; move ul , 3 )  | ( move ul , 3 ; move 3 - ua , 0 )  | ( move 2 + ul , 3 ; move ul , 3 )  | ( move ua - 3 , 3 ; pen 0 ; move 2 , 3 )  | ( move 3 , 3 ; ( v0 = ul ; move v0 , 3 ) )  | ( v0 = 3 ; move v0 , v0 ; move ul , v0 )  | ( ( move 3 , 3 - ua ; move ul , 2 + ul ) ; move 0 , ul )  
[370] ( move ul , 3 ; move 3 , 3 )  | ( move 3 / 2 , 3 ; move 3 , 3 )  | ( move ul , ua + 3 ; move 3 , 3 )  | ( move ul , 2 + ul ; move 3 , 3 )  | ( move ul , 3 ; move 4 - ul , 3 )  | ( move ul , 3 ; move 3 , 3 ; pen 2 )  | ( move ul , 3 ; move 3 , 3 ; pen 4 )  | ( pen ua ; move ul , 3 ; move 3 , 3 )  | ( move ul , 3 ; move 2 + ul , 2 + ul )  | ( move ul , ua + 3 ; move 3 , ua + 3 )  | ( move ul , 0 ; move ul , 3 ; move 3 , 3 )  | ( v0 = 3 ; move ul , 3 ; move v0 , 3 )  | ( v0 = 3 ; move ul , v0 ; move v0 , 3 )  | ( ( move 0 , 2 ; move ul , ul ) ; move 3 , 3 )  | ( ( v0 = ul ; move ul , 3 ) ; move 3 , 3 )  | ( move ul , 3 ; ( v0 = ul ; move 3 , 3 ) )  | ( move ul , 3 ; ( move 3 , 3 ; pen ua * ua ) )  | ( v0 = 3 ; move ul , v0 ; move v0 , v0 )  | ( move ul , ua + 3 ; v0 = 3 ; move 3 , v0 )  | ( move 2 - ul , 3 ; v0 = 3 ; move v0 , v0 )  | ( move ul , ua + 3 ; v0 = 3 ; move v0 , v0 )  | ( move ul , 3 ; v0 = 4 - ul ; move v0 , v0 )  | ( ( v0 = 3 ; move ul , v0 ) ; move v0 , v0 )  | ( move ul , 3 ; move ul + ul , 4 - ul ; move ul , ua )  
[371] ( move 3 , 4 ; move ua , 3 )  | ( move 3 , 3 + ul ; move ua , 3 )  | ( move 3 , ua + 4 ; move ua , 3 )  | ( move 3 , 4 ; move ua , ua + 3 )  | ( move 2 + ul , 4 ; move ua , 2 + ul )  | ( move 3 , 4 ; move ua , 3 ; v0 = 3 )  | ( move ua / 2 , 4 ; pen ua ; move ua , 3 )  | ( move 2 + ul , 4 ; move ua , 3 ; v0 = 0 )  | ( move 0 , 4 - ul ; move 3 , ul ; move ua , 3 )  | ( move 4 - ul , 4 ; move ua , 3 ; v0 = ua )  | ( move 3 , 4 ; v0 = ul ; move ua , 4 - v0 )  | ( move 3 , 4 - ua ; pen ua + 2 ; move ua , ua + 3 )  | ( move 3 , 4 ; ( move ua , 3 ; v0 = ul ) ; pen 0 )  | ( pen ua ; v0 = 3 ; ( move v0 , 4 ; move ua , v0 ) )  
[372] ( move ua , 3 ; move 3 , 4 )  | ( move ua , 3 ; move 3 , 2 * 2 )  | ( move ua , 3 ; move 3 , ua + 4 )  | ( move ua , 3 ; move 2 + ul , 4 )  | ( move ua , 3 ; move 3 , 4 - ua )  | ( move ua , 2 + ul ; move 2 + ul , 4 )  | ( move ua , 4 - ul ; move 3 , 3 + ul )  | ( ( move ua , 3 ; move 3 , 4 ) ; v0 = 4 )  | ( ( move ul , 0 ; move ua , 3 ) ; move 3 , 4 )  | ( move ua , 4 - ul ; move 3 , 4 ; v0 = ul )  | ( move ua , 3 ; ( v0 = ul ; move 2 + v0 , 4 ) )  | ( ( move ua , 3 ; move 3 , 4 ; v0 = 0 ) ; pen v0 )  | ( ( pen 4 ; move ua , 3 ; move ul , 4 ) ; move ul + ul , 0 )  
[373] ( move ua , 4 ; move 4 , 2 )  | ( move ua , 4 ; move 3 + ul , 2 )  | ( move ua , 2 + 2 ; move 4 , ua + 2 )  | ( move ua , ua + 4 ; move 4 , ua + 2 )  | ( move ua , 4 ; pen 2 ; move 4 , 4 - 2 )  | ( move 0 , 4 ; move ua , ua ; move 4 , 2 )  | ( move ua , 4 ; move 3 , 2 ; move ul , 0 )  | ( move ua , 4 ; ( move 4 , 2 ; pen ua ) )  | ( v0 = 4 ; move ua , v0 ; move v0 , 2 )  | ( pen 3 + ul ; move ua , 4 ; move 4 , ul + ul )  | ( pen 4 / ua ; move ua , 3 + ul ; move 3 + ul , 2 )  | ( ( move ua , 4 ; v0 = 4 ; pen v0 ) ; move v0 , 2 )  
[374] ( move 4 , ua ; move 2 , 4 )  | ( move 4 , 0 ; move 3 - ul , 4 )  | ( move 4 , 0 ; move 2 , 4 ; pen ul )  | ( move 4 , ua * 4 ; move 2 , 3 + ul )  | ( move 3 + ul , ua ; move ul + ul , 4 )  | ( move 4 , 0 ; move 2 , ua + 4 ; pen ul )  | ( pen 4 / ua ; move 4 , ua ; move 2 , 4 )  | ( pen ul + ul ; move 4 , ua ; move 2 , 4 )  | ( move 4 , ua ; move 2 , 4 ; move 0 , ua - 3 )  | ( move 4 , ua ; v0 = 0 ; move 2 - v0 , 4 )  | ( move 4 , 0 ; pen ul ; move ul + ul , ua + 4 )  | ( move 4 , ua ; pen 3 ; move ul + ul , 3 + ul )  
[375] ( move 3 , ul ; move 4 , 2 )  | ( move 2 + ul , ul ; move 4 , 2 )  | ( move 3 , ul ; move 4 , 3 - ul )  | ( pen ua ; move 3 , ul ; move 4 , 2 )  | ( move 2 + ul , ul - ua ; move 4 , 2 )  | ( move 3 , ua + ul ; move 4 , 2 - ua )  | ( move 2 + ul , ul ; move 4 , 2 - ua )  | ( move 3 , ul - ua ; move 4 , 3 - ul )  | ( move 3 , ul ; pen ua ; move 4 , ua + 2 )  | ( move 2 + ul , ul ; move 3 + ul , ul + ul )  | ( pen ul ; ( pen ul ; move 3 , ul ) ; move 4 , 2 )  | ( ( move 3 , ul ; v0 = ul ) ; move v0 + 3 , 2 )  | ( move 4 - ul , ua + ul ; move 0 , ua ; move 3 + ul , 2 )  
[376] ( move 4 , ul ; move 3 , 2 )  | ( move 4 , ul ; move 3 , 4 / 2 )  | ( move 4 , ul ; move 4 - ul , 2 )  | ( move 4 , ul ; move 3 , ul + ul )  | ( move 4 , ul ; move 3 , 2 ; pen 2 )  | ( move 3 + ul , ul ; move 2 + ul , 2 )  | ( move 4 , ul ; move 2 + ul , ua + 2 )  | ( move 4 , 2 - ul ; move 3 , ul + ul )  | ( move 3 + ul , ul ; move 4 - ul , 2 )  | ( move 3 + ul , ul ; move 3 , ul + ul )  | ( move 4 , ul ; move 2 + ul , ul + ul )  | ( v0 = ua ; move 4 , ul ; move 3 , 2 )  | ( move 3 + ul , ul ; move 3 , 2 ; pen 3 )  | ( move 4 , ul ; move 3 , 2 ; pen ua + ua )  | ( pen ul ; move 4 , ul ; move 3 , ul + ul )  | ( move 4 , ul ; pen ua * 2 ; move 3 , 4 - 2 )  | ( pen ul ; ( move 4 , ul ; move 3 , ua + 2 ) )  | ( move 4 , ua + ul ; move 2 , 2 ; move ul , ua )  | ( move 4 , ul ; move 3 , ul + ul ; v0 = ua )  | ( move 4 , ul ; pen 2 ; move 4 - ul , ul + ul )  | ( move 4 , ul ; ( v0 = 3 ; move v0 , 2 ) )  | ( pen ul / ua ; move 2 * 2 , ul ; move 3 , ua + 2 )  | ( move 4 , ua + ul ; ( move 2 + ul , 2 ; pen ua ) )  | ( v0 = ul ; move 4 , v0 ; move 3 , v0 + v0 )  | ( ( move 4 , ul ; v0 = ul - 4 ) ; move 4 - ul , 2 )  
[377] ( move 2 , 4 ; move 3 , ul )  | ( move 2 , 4 ; move 3 , 2 - ul )  | ( move 2 , ua + 4 ; move 3 , ul )  | ( move 2 , 3 + ul ; move 3 , ul )  | ( move 2 , 4 ; move 4 - ul , ul )  | ( move 3 - ul , 4 ; move 3 , ul )  | ( move ul + ul , 4 ; move 3 , ul )  | ( move ul + ul , 2 + 2 ; move 3 , ul )  | ( move 3 - ul , 4 - ua ; move 3 , ul )  | ( move ul + ul , 4 ; move 2 + ul , ul )  | ( move ul + ul , 3 + ul ; move 3 , ul )  | ( move ul + ul , 4 ; move 3 , ua + ul )  | ( move ul + ul , 4 ; move 4 - ul , ul )  | ( move 2 , 4 ; v0 = ua ; move 3 , ul )  | ( pen 2 ; move 2 , 4 ; move 2 + ul , ul )  | ( move 2 , 4 ; move 3 , ul - ua ; pen ul )  | ( move ul + ul , 4 ; pen 3 ; move 3 , ul )  | ( move ul + ul , 4 ; move 3 , ul ; pen ul )  | ( move 2 , 3 + ul ; move 3 , ul ; move 0 , 3 )  | ( move 2 , 4 ; move 3 , ul ; v0 = ul - 4 )  | ( move 2 , 4 ; ( v0 = ul ; move 3 , v0 ) )  | ( ( pen 3 ; move ul + ul , 3 + ul ) ; move 3 , ul )  | ( pen ul ; move 3 - ul , 4 ; ( move 3 , ul ; v0 = 0 ) )  
[378] ( move ul , 4 ; move 4 , 2 )  | ( move ul , 4 ; move 4 , ul + ul )  | ( move ul , 3 + ul ; move 3 + ul , 2 )  | ( move ul , 4 ; move 4 , 2 ; move 0 , ua )  | ( move ul , 4 ; move 4 , 2 ; v0 = ul )  | ( move ul , 4 ; pen ua ; move 4 , ul + ul )  | ( move ul , 4 ; pen ul ; move 4 , ul + ul )  | ( v0 = 4 ; move ul , v0 ; move v0 , 2 )  | ( move 0 , 4 ; ( move ul , ua ; move 4 , 2 ) )  | ( move 3 - 2 , 3 + ul ; pen ua ; move 4 , 2 )  | ( ( v0 = 4 ; move ul , v0 ) ; move v0 , 2 )  | ( move ul , 4 ; move 4 , 3 - ul ; v0 = ul + ul )  | ( move ul , 4 ; v0 = 2 ; move v0 + v0 , v0 )  | ( move ul , 4 ; ( pen ua ; move 4 , 2 ) ; v0 = ul - 2 )  
[379] ( move 4 , 4 ; move ul , 2 )  | ( move 4 , 4 ; move 4 - 3 , 2 )  | ( move 3 + ul , 4 ; move ul , 2 )  | ( move 4 , 4 ; move ul , ul + ul )  | ( move 3 + ul , 4 ; move 2 - ul , 2 )  | ( move 3 + ul , 4 ; move ul , 2 - ua )  | ( move 3 + ul , 4 ; move ul , ul + ul )  | ( move 4 , 4 ; move ul , 2 ; move 0 , 4 )  | ( move 4 , 4 ; v0 = 3 ; move ul , 2 )  | ( v0 = 4 ; move v0 , v0 ; move ul , 2 )  | ( move 0 , 4 ; move 4 , 0 ; move ul , 3 - ul )  | ( move ul + ul , 4 ; move 2 , 0 ; move ul , 2 )  | ( move 4 , 4 ; v0 = ul + ul ; move ul , 2 )  | ( move 3 + ul , 4 ; move 0 , ul ; move ul , ul )  | ( move 3 , 3 + ul ; move ul , ua ; move ul , 2 )  | ( move 0 , 3 ; move 4 , ua + ul ; move ul , 2 - ua )  | ( ( pen ua ; move 4 , 3 + ul ) ; move ul , ul + ul )  | ( ( move 4 , 4 ; pen ul ) ; move ul , 2 ; v0 = 3 )  | ( move 4 , 4 - ua ; move ul , 2 ; ( pen ul ; v0 = ua ) )  
[380] ( move 4 , 4 ; move ua , 3 )  | ( move 4 , 4 ; move 4 + 2 , 3 )  | ( move 2 * 2 , 4 ; move ua , 4 - ul )  | ( move 3 + ul , 4 ; move ua , ua + 3 )  | ( move 4 , 4 ; move ua , 3 ; v0 = 3 )  | ( move 4 , 4 ; ( move ua , 3 ; pen 4 ) )  | ( move 4 , 4 ; ( move ua , 3 ; pen 3 * 2 ) )  | ( move 3 + ul , 3 + ul ; move ua , 3 ; pen ua )  | ( move 3 + ul , 4 ; ( move ua , 3 ; v0 = ua ) )  | ( ( move 4 , 4 ; move ua , 2 + ul ) ; pen ua - ul )  | ( pen ua + ul ; move 3 + ul , 4 ; move ua , 3 - ua )  | ( move 4 , 4 ; ( move ua , 3 ; move 0 , ul - 3 ; pen ul ) )  
[381] ( move 4 , 2 ; move ul , 4 )  | ( move 4 , 2 ; move ul , 3 + ul )  | ( move 4 , 2 - ua ; move ul , 4 )  | ( pen 2 ; move 4 , 2 ; move ul , 4 )  | ( move 4 , 2 ; move ul , 4 ; pen 2 )  | ( pen ul ; move 4 , 2 ; move ul , 4 )  | ( move 4 , 4 - 2 ; move ul , 4 - ua )  | ( move 4 , ua + 2 ; move ul , 3 + ul )  | ( move 4 , ul + ul ; move ul , ua + 4 )  | ( move 4 , 2 - ua ; move ul , 4 ; pen ua )  | ( move 4 , 2 ; v0 = 4 ; move ul , v0 )  | ( v0 = 4 ; move v0 , 2 ; move ul , v0 )  | ( move 3 + ul , 2 ; v0 = 2 ; move ul , 4 )  | ( ( move 0 , 2 ; move 4 , ua ) ; move ul , 4 )  | ( pen 3 - ul ; move 3 + ul , 2 ; move ul , 4 )  | ( pen ua + 4 ; move 4 , ul + ul ; move ul , 4 )  | ( pen ua ; ( move 3 + ul , 2 ; move ul , 3 + ul ) )  | ( ( pen 2 ; pen 2 ; move 4 , 2 ) ; move ul , ua + 4 )  | ( move 3 + ul , ul + ul ; move ul , 4 ; v0 = ul - 2 )  
[382] ( move 3 , 3 ; move 4 , ul )  | ( move 3 , ua + 3 ; move 4 , ul )  | ( move 3 , 3 ; move 4 , ua + ul )  | ( move 2 + ul , 3 ; move 4 , ul )  | ( move 3 , 3 ; move 4 , ul ; pen 0 )  | ( pen 3 ; move 3 , 3 ; move 4 , ul )  | ( move 3 , 3 ; move 4 , ul ; pen 4 )  | ( pen ua ; move 3 , 3 ; move 4 , ul )  | ( move 3 , 3 ; move 3 + ul , ul - ua )  | ( move 3 , 4 - ul ; move 4 , ua + ul )  | ( move 3 , 3 ; move 4 , ul ; v0 = 3 )  | ( move 3 , 2 + ul ; move 4 , ul ; pen ua )  | ( move 3 , 3 ; v0 = ul ; move 4 , v0 )  | ( move 4 - ul , 3 ; move 3 + ul , 2 - ul )  | ( move 3 , 3 ; ( move 4 , ul ; v0 = ua ) )  | ( move 3 , ua + 3 ; pen ul ; move 4 , 2 - ul )  | ( v0 = 2 + ul ; ( move v0 , 3 ; move 4 , ul ) )  | ( move 3 , 3 ; ( move ul , ul ; move 3 , 0 ; v0 = ua ) )  
[383] ( move 4 , 2 ; move 4 , ul )  | ( move 2 * 2 , 2 ; move 4 , ul )  | ( move 4 , 2 ; move 2 * 2 , ul )  | ( move 4 , 2 ; move 4 , 2 - ul )  | ( move 3 + ul , 2 ; move 4 , ul )  | ( move 4 , 2 ; move 3 + ul , ul )  | ( move 4 , 2 - ua ; move 4 , ul )  | ( move 4 , 3 - ul ; move 4 , ul )  | ( move 4 , ul + ul ; move 4 , ul )  | ( move 4 , 2 ; pen 3 ; move 4 , ul )  | ( move 4 , 2 ; move 4 , ul ; pen 3 + 2 )  | ( move 4 , 2 ; move 4 , ul ; v0 = ua )  | ( move 4 , 2 ; move 4 , ul ; v0 = ul )  | ( ( move 4 , 2 ; move 4 , ul ) ; pen ul )  | ( move 0 , ul ; move 4 , ul ; move 4 , ul )  | ( move 4 , 2 ; move 4 , ul ; pen ua + ul )  | ( move 2 , 2 ; ( move 2 , 0 ; move 2 + 2 , ul ) )  | ( v0 = 4 - ul ; move v0 + ul , 2 ; move 4 , ul )  | ( v0 = 3 - ul ; move 4 , v0 ; move 4 , v0 / 2 )  
[384] ( move 3 , 4 ; move ua , 4 )  | ( move 2 + ul , 4 ; move ua , 4 )  | ( ( move 3 , 4 ; move ua , 4 ) ; pen 3 )  | ( move 3 , 4 ; pen ul ; move ua , 3 + ul )  | ( move 3 , 4 ; ( move ua , 4 ; move 0 , 3 ) )  | ( move 3 , 2 + 2 ; move 0 , 4 ; move ua , ua )  | ( move 0 , ua * 3 ; move 3 , 4 ; move ua , 4 )  | ( pen ul / ua ; move 3 , 4 ; move ua , 2 + 2 )  | ( ( move 3 , 4 ; move ua , 4 ) ; move 0 , ua + ul )  | ( move 2 + ul , ua + 4 ; move ua , ua + 4 ; pen ul )  | ( move 3 , 3 + ul ; move 0 , 3 - ul ; move ua , 4 / 2 )  | ( ( pen 2 ; ( move 3 , 4 ; move ua , 4 ) ) ; v0 = 2 )  
[385] ( move ul , 3 ; move 3 , 4 )  | ( move ul , 3 ; move 3 , 3 + ul )  | ( move ul , 3 ; move 2 + ul , 4 )  | ( move ul , 3 ; move 4 - ul , 4 )  | ( pen ul ; move ul , 3 ; move 3 , 4 )  | ( move ul , 3 ; move 3 , 4 ; pen ul )  | ( ( move ul , 3 ; v0 = 0 ) ; move 3 , 4 )  | ( move 0 , ua * 4 ; move ul , 3 ; move 3 , 4 )  | ( move ul , 3 ; v0 = 3 + ul ; move 3 , 4 )  | ( move ul , 3 - ua ; v0 = 4 ; move 3 , 4 )  | ( move ul , 4 - ul ; move 3 , 4 ; move 0 , ul )  | ( move ul , 3 - ua ; move 3 , 4 ; v0 = ul )  | ( move ul , 3 ; move 3 , 4 - ua ; pen ua - 2 )  | ( move ul , 3 ; pen 3 + ul ; move 3 , ua + 4 )  | ( move ul , 3 ; move ul + ul , 4 ; move ul , ua )  | ( move ul , 2 + ul ; move ul , 4 ; move ul + ul , 0 )  
[386] ( move 3 , 4 ; move ul , 3 )  | ( move 3 , 3 + ul ; move ul , 3 )  | ( move 3 , 4 ; move ul , 3 - ua )  | ( move 4 - ul , 4 ; move ul , 3 )  | ( move 3 , 4 ; move ul , 4 - ul )  | ( move 3 , 4 ; move ul , 3 ; pen 0 )  | ( pen ul ; move 3 , 4 ; move ul , 3 )  | ( move 3 , 4 ; move ul , 3 ; pen ul - ua )  | ( move 3 , 4 ; move 2 - ul , 3 ; v0 = ul )  | ( move 2 + ul , 4 ; move ul , 3 ; pen 4 / 3 )  | ( move 3 , 4 ; ( move ul , 3 ; pen 2 - ul ) )  | ( move 3 , ua + 4 ; move ul , 3 ; v0 = ul )  | ( move 3 , ua + 4 ; pen ua * ua ; move ul , 3 )  | ( move 3 , 4 ; move ul , 3 ; ( pen 2 ; pen 3 ) )  | ( ( move 2 + ul , 4 ; move 0 , 3 ) ; move ul , 0 )  | ( move ul , 4 ; move ul + ul , ua ; move ul , 3 - ua )  | ( ( move 3 , 4 ; move ul , 3 ; v0 = ua ) ; v1 = 3 )  
[387] ( move 4 , ul ; move 2 , 4 )  | ( move 4 , ul ; move 2 , 3 + ul )  | ( move 3 + ul , ul ; move 2 , 4 )  | ( move 4 , ua + ul ; move 2 , 4 )  | ( move 4 , ul - ua ; move 2 , 4 )  | ( move 4 , ul ; move ua / 3 , 4 )  | ( move 4 , ul ; move ul + ul , 4 )  | ( move 4 , ul ; pen ua ; move 2 , 4 )  | ( move 4 , ul ; move 2 , 4 ; pen ua )  | ( pen ul ; move 4 , ul ; move 2 , 4 )  | ( v0 = 2 ; move 4 , ul ; move 2 , 4 )  | ( v0 = ua ; move 4 , ul ; move 2 , 4 )  | ( pen 4 ; move 4 , ul ; move ua / 3 , 4 )  | ( move 4 , ul ; move ul , 4 ; move ul , ua )  | ( move 4 , 2 - ul ; move ua / 3 , ua + 4 )  | ( move 4 , ul ; move 2 , 4 ; v0 = ua * 3 )  | ( move 3 + ul , ul ; move 2 , 4 ; v0 = ul )  | ( move 4 , ul ; move 2 , 3 + ul ; move 0 , 3 + 3 )  | ( move 3 + ul , ul ; v0 = 3 ; move 2 , ul + v0 )  | ( v0 = 3 + ul ; ( move v0 , ul ; move 2 , v0 ) )  | ( move 4 , 3 - 2 ; v0 = 2 ; move v0 , v0 + v0 )  | ( move 4 , ua + ul ; move ul + ul , 4 ; v0 = ua / 3 )  | ( move 0 , 0 ; ( move ul , ul ; move 3 , ua ) ; move 2 , 4 )  | ( ( move 4 , ul ; pen ua * 4 ; move 2 , 4 ) ; v0 = ul )  | ( ( move ul , ul - ua ; move 3 , ua ; pen ul ) ; move 2 , 4 )  
[388] ( move 4 , 3 ; move 3 , ul )  | ( move 3 + ul , 3 ; move 3 , ul )  | ( move 4 , 2 + ul ; move 3 , ul )  | ( move 4 , 3 ; move 3 , ul ; v0 = ul )  | ( move 4 , 3 ; pen 3 ; move 4 - ul , ul )  | ( move 3 , 3 ; move ul , ua ; move 3 , ul )  | ( move 3 + ul , 3 ; pen ul ; move 3 , ul )  | ( move 4 , 3 ; v0 = ul ; move 3 , v0 )  | ( move 3 + ul , 4 - ul ; move 3 , ua + ul )  | ( move ul , 3 ; move 3 , ua * 4 ; move 3 , ul )  | ( move 4 , 4 - ul ; move 3 , ul ; v0 = ul )  | ( move 4 , 3 ; ( v0 = ul ; move 3 , v0 ) )  | ( v0 = 3 ; move 4 , v0 + ua ; move v0 , ul )  | ( move 3 + ul , 2 + ul ; move ul , ul ; move 2 , ua )  | ( move 2 + 2 , 3 - ua ; ( pen 4 ; pen ul ; move 3 , ul ) )  
[389] ( move 3 , ul ; move 4 , 3 )  | ( move 2 + ul , ul ; move 4 , 3 )  | ( move 4 - ul , ul ; move 4 , 3 )  | ( move 3 , ua + ul ; move 3 + ul , 3 )  | ( move 2 + ul , ul ; move 4 , 2 + ul )  | ( move 2 + ul , ul ; move 4 , 3 - ua )  | ( move 3 , ul ; move 4 , 3 ; v0 = ua )  | ( ( move 3 , ul ; pen ua ) ; move 4 , 3 )  | ( move ul , ul ; move 2 , ua ; move 4 , 3 )  | ( v0 = 3 ; move v0 , ul ; move 4 , v0 )  | ( move 3 , ul ; move 4 , 3 ; v0 = 4 + ul )  | ( ( move 3 , ul ; v0 = ua ) ; move 4 , 3 )  | ( move 3 , ul ; move 3 + ul , 3 ; pen 4 + ul )  | ( move 2 - ul , ul ; move 3 - ul , ua ; move 4 , 3 )  | ( ( move ul , ul ; pen 4 ; move 2 , ua ) ; move 4 , 3 )  
[390] ( move 4 , ul ; move 3 , 3 )  | ( move 3 + ul , ul ; move 3 , 3 )  | ( move 4 , ul ; move 3 , ua + 3 )  | ( move 4 , ul ; move 2 + ul , 3 )  | ( move 4 , ul ; move 4 - ul , 3 )  | ( move 4 , ul ; pen ua ; move 3 , 3 )  | ( move 4 , ul ; move 3 , 3 ; pen ua )  | ( move 4 , ul ; move 4 - ul , 4 - ul )  | ( pen 2 - ul ; move 4 , ul ; move 3 , 3 )  | ( ( pen ul ; move 4 , ul ) ; move 3 , 3 )  | ( move 4 , ul ; v0 = 3 ; move v0 , v0 )  | ( move 4 , ul ; pen ua + 2 ; move 3 , 2 + ul )  | ( pen 2 ; move 4 , ul - ua ; move 3 , 2 + ul )  | ( move 4 , ul ; v0 = ua / 2 ; move v0 , 3 )  | ( move 4 , ul ; move 3 , 2 + ul ; v0 = ul - 2 )  | ( move ul + ul , ul ; move 2 , 0 ; move 3 , 2 + ul )  | ( ( move 2 , ul ; v0 = ua ) ; move 2 , ua ; move 3 , 3 )  
[391] ( move 3 , 4 ; move 3 , ul )  | ( move 3 , ua + 4 ; move 3 , ul )  | ( move 3 , 3 + ul ; move 3 , ul )  | ( move 3 , 4 ; move 3 , ul - ua )  | ( move 3 , 4 ; move 4 - ul , ul )  | ( move 4 - ul , 4 ; move 3 , ua + ul )  | ( move 3 , 4 ; v0 = ul ; move 3 , ul )  | ( move 3 , 4 ; move 3 , ul ; v0 = 2 + ul )  | ( ( move ul , 4 ; move 2 , ua ) ; move 3 , ul )  | ( move 2 + ul , 4 ; move 3 , ul ; pen ul / 3 )  | ( move 3 , 4 ; v0 = 0 ; move v0 + 3 , ul )  | ( pen ul + ul ; move 3 , 4 ; move 4 - ul , ul )  | ( move 3 , ua + 4 ; pen ul + ul ; move 3 , ua + ul )  
[392] ( move ua , 4 ; move 4 , 3 )  | ( move ua , 3 + ul ; move ua - 2 , 3 )  | ( move ua , 4 ; pen ua * 2 ; move 4 , 3 )  
[393] ( move 2 , 4 ; move 4 , ul )  | ( move 2 , 4 ; move 4 , ua + ul )  | ( move 2 , 4 ; move 3 + ul , ul )  | ( move 3 - ul , 4 ; move 4 , ul )  | ( move 2 , 4 ; move 4 , ul ; pen 0 )  | ( move 2 , 4 ; pen 4 ; move 4 , ul )  | ( pen ul ; move 2 , 4 ; move 4 , ul )  | ( v0 = ua ; move 2 , 4 ; move 4 , ul )  | ( move 2 , 4 ; v0 = ul ; move 4 , ul )  | ( move 2 , 4 ; v0 = ul ; move 4 , v0 )  | ( v0 = 4 ; move 2 , v0 ; move v0 , ul )  | ( ( pen 2 ; move 2 , 4 ) ; move 3 + ul , ul )  | ( move ul + ul , 4 ; v0 = 0 ; move 4 , ul )  | ( move ul , 4 ; ( move ul , 0 ; move 4 , ul ) )  | ( pen ul ; ( pen ua ; move 2 , 4 ) ; move 4 , ul )  | ( v0 = 4 ; move v0 - 2 , v0 ; move 4 , ul )  | ( v0 = 4 ; move v0 - 2 , 4 ; move v0 , ul )  | ( ( move 2 , 4 ; move 4 , ul ) ; v0 = 3 + ul )  | ( move ul + ul , 4 ; pen ua + 2 ; move 4 , 2 - ul )  | ( move ul + ul , 4 - ua ; move 3 + ul , ul ; pen ul )  
[394] ( move 2 , ul ; move 4 , 4 )  | ( move 2 , 2 - ul ; move 4 , 4 )  | ( move 2 , ua + ul ; move 4 , 4 )  | ( move 2 , ul ; move 4 , 4 ; pen 0 )  | ( move ul + ul , ul ; move 4 , 2 * 2 )  | ( move ul + ul , ul ; move 3 + ul , 4 )  | ( move 2 , ul ; move 4 , 4 ; v0 = ul )  | ( move 2 , ul ; pen 3 ; move 4 , 4 - ua )  | ( move 3 - ul , ul ; move 4 , 4 ; pen ul )  | ( ( pen 4 ; move 2 , ul ) ; move 2 + 2 , 4 )  | ( move 2 , ul ; v0 = 4 ; move v0 , v0 )  | ( move 2 , ul ; ( pen ua ; pen ul ; move 4 , 4 ) )  | ( v0 = 4 ; move v0 / 2 , ul ; move 4 , v0 )  | ( ( move 2 , ul ; move 3 , 4 ) ; move ul , 0 ; pen ul )  | ( ( move 0 , 0 ; move 3 - ul , ul ) ; move 4 , 3 + ul )  | ( pen ua ; v0 = 4 ; ( move 2 , ul ; move 4 , v0 ) )  | ( move 2 , ul ; ( pen 3 ; v0 = 4 ) ; move v0 , v0 )  | ( v0 = 2 ; ( move v0 , ul ; pen v0 ; move 4 , 4 ) )  | ( v0 = ul + ul ; move v0 , ul ; move v0 + v0 , 4 )  | ( pen 2 ; ( pen ul ; ( move ul + ul , ul ; move 4 , 4 ) ) )  
[395] ( move 4 , 3 ; move ua , 4 )  | ( move 3 + ul , 3 ; move ua , 4 )  | ( move 4 , 3 ; move ua , 3 + ul )  | ( move 4 , 3 ; move ua , 4 ; pen 3 )  | ( move 4 , 3 ; move ua , 4 ; pen ul )  | ( move 4 , 3 ; v0 = 4 ; move ua , v0 )  | ( v0 = 4 ; move v0 , 3 ; move ua , v0 )  | ( move 4 , 4 - ul ; move ua , 4 ; move 0 , 3 + ul )  
[396] ( move ul , 2 ; move 4 , 4 )  | ( move ul , 2 ; move 4 , 4 - ua )  | ( move ul , 2 ; move 4 , 4 ; pen 0 )  | ( move ul , 2 ; move 4 , 4 ; pen ua )  | ( move ul , 2 ; move 3 + ul , 3 + ul )  | ( move ul , 2 ; move 4 , 4 ; v0 = 4 )  | ( move ul , 4 / 2 ; pen 4 ; move 4 , 4 )  | ( v0 = ul ; move ul , 2 ; move 4 , 4 )  | ( move ul , ul + ul ; move 4 , 4 ; pen 2 )  | ( move ul , 2 ; v0 = 4 ; move v0 , 4 )  | ( move ul , 2 ; v0 = 4 ; move v0 , v0 )  | ( move ul , ua + 2 ; ( pen ul ; move 4 , 4 ) )  | ( ( move ul , ul + ul ; pen ul ) ; move 4 , 4 )  | ( v0 = ua ; move ul , 2 ; move 4 , 4 - v0 )  | ( move ul , ua + 2 ; v0 = 4 ; move v0 , v0 )  | ( move ul , 4 - 2 ; move 4 , 4 - ua ; v0 = ua )  | ( v0 = 2 ; move ul , v0 ; move 4 , v0 + v0 )  | ( pen ul ; ( move ul , 2 ; v0 = 4 ) ; move 4 , v0 )  
[397] ( move ua , 4 ; move 3 , 4 )  | ( move ua , 3 + ul ; move 3 , 4 )  | ( move ua , 4 ; move 2 + ul , 4 )  | ( move ua , 4 ; move 3 , 3 + ul )  | ( pen ua ; move ua , 4 ; move 3 , 4 )  | ( move ua , 3 + ul ; move 3 , 3 + ul )  | ( move ua , 4 ; move 2 + ul , 4 - ua )  | ( move ua , 4 ; move 4 - ul , 4 - ua )  | ( move ua , 4 ; ( pen ua ; move 3 , 4 ) )  | ( pen ul ; move ua , 4 ; move 3 , 4 - ua )  | ( move ua , 4 ; pen ul ; move 4 - ul , 4 )  | ( ( pen 2 ; move ua , 4 ) ; move 3 , ua + 4 )  | ( move ua , 2 + 2 ; move 3 , 4 ; v0 = 4 / 3 )  | ( move ua , 4 ; ( move 2 + ul , 4 ; v0 = ul ) )  | ( pen ua - 3 ; move ua , 3 + ul ; move 3 , 3 + ul )  
[398] ( move 4 , ul ; move 4 , 2 )  | ( move 3 + ul , ul ; move 4 , 2 )  | ( move 4 , ua + ul ; move 4 , 2 )  | ( move 4 , ul ; move 4 , ua + 2 )  | ( move 4 , ul ; move 4 , ul + ul )  | ( move 4 , ul ; pen ua ; move 4 , 2 )  | ( move 3 + ul , ua + ul ; move 4 , 2 )  | ( move 4 , ul ; move 4 , ua + 2 ; pen 2 )  | ( move 4 , ul ; pen ua + ul ; move 4 , 2 )  | ( ( move 4 , ul ; move 4 , 2 ) ; move 0 , 3 )  | ( move 2 + 2 , ul ; ( move 4 , 2 ; pen 0 ) )  | ( pen ua ; ( move 3 + ul , ul ; move 4 , 2 ) )  | ( move 4 , ul ; move 0 , ul + ul ; move 4 , ua )  | ( move 4 , ul ; move 4 , ul + ul ; move 0 , ua )  | ( move 3 + ul , ul - ua ; move 3 + ul , 3 - ul )  | ( move 4 , ul ; ( move 2 , ua + 2 ; move 2 , 0 ) )  | ( v0 = 4 ; ( move v0 , ul ; move v0 , 2 ) )  | ( move 3 + ul , ul - ua ; v0 = 2 ; move 4 , v0 )  | ( move 3 + ul , ul ; v0 = 4 ; move v0 , 2 - ua )  | ( move 3 + ul , ua + ul ; move 4 , 4 - 2 ; v0 = 3 )  
[399] ( move 3 , ul ; move 3 , 4 )  | ( move 3 , ul ; move 3 , 2 * 2 )  | ( move 3 , ua + ul ; move 3 , 4 )  | ( move 3 , ul ; move 2 + ul , 4 )  | ( move 3 , ul ; move 3 , 4 - ua )  | ( move 4 - ul , ul ; move 3 , 4 )  | ( move 3 , ul ; move 4 - ul , 4 )  | ( move 3 , ul ; move 3 , 4 ; pen ua )  | ( move 3 , ul - ua ; move 3 , ua + 4 )  | ( move 3 , ul ; move 3 , 4 ; v0 = 3 )  | ( move 3 , ul - ua ; move 3 , 4 ; pen 3 )  | ( ( pen ua ; move 3 , ul ) ; move 3 , 4 )  | ( ( move 3 , ul ; move 3 , 4 ) ; pen ua )  | ( move 3 , ul ; pen ua ; move 3 , ua + 4 )  | ( move 3 , ul ; move 0 , 3 ; move 3 , ua + ul )  | ( move 4 - ul , ul ; move ul , 4 ; move 2 , ua )  | ( move 2 + ul , ul ; v0 = 4 ; move 3 , v0 )  | ( v0 = 2 ; ( move 3 , ul ; move 3 , 3 + ul ) )  | ( move 3 , ul ; move 3 , 3 + ul ; v0 = ul - 4 )  | ( move 3 , ul ; move 3 , 3 + ul ; v0 = ua * ua )  | ( move 0 , 0 ; ( move 3 , ul ; move 3 , 4 ) ; pen 0 )  | ( pen ua / 4 ; move 2 + ul , ua + ul ; move 3 , ua + 4 )  
[400] ( move 4 , 4 ; move 2 , ul )  | ( move 2 * 2 , 4 ; move 2 , ul )  | ( move 4 , 4 ; move 2 , ua + ul )  | ( move 4 , 3 + ul ; move 2 , ul )  | ( move 4 , 4 ; move 3 - ul , ul )  | ( move 4 , 4 ; move ul + ul , ul )  | ( move 4 , 4 ; move 2 , ul ; pen ua )  | ( move 4 , 3 + ul ; move 2 , ua + ul )  | ( move 4 , 4 ; v0 = ua ; move 2 , ul )  | ( pen 3 ; move 4 , 4 - ua ; move 2 , ul )  | ( move 4 , 4 ; pen ua / 2 ; move 2 , ul )  | ( move 4 , 4 ; move ul , ul ; move ul , 0 )  | ( move 4 , ua + 4 ; pen ua ; move 2 , ul )  | ( pen ul ; move 4 , 4 - ua ; move 2 , ul )  | ( v0 = ul ; move 4 , 4 ; move 2 , v0 )  | ( v0 = 4 ; move v0 , v0 ; move 2 , ul )  | ( move 3 + ul , 4 ; v0 = ul ; move 2 , v0 )  | ( move 2 * 2 , 4 ; move 3 - ul , ua + ul ; pen 0 )  | ( pen 4 * 3 ; move 4 , 4 ; move ul + ul , ua + ul )  | ( move 2 + ul , 3 + ul ; move ul , ua ; move 2 , ul )  | ( move 4 , 4 ; ( pen ua ; pen ul ) ; move 4 / 2 , ul )  | ( ( move 4 , 4 ; v0 = 2 ; pen ua ) ; move v0 , ul )  
[401] ( move 3 , 3 ; move ul , 4 )  | ( move 3 , 3 ; move ul , ua + 4 )  | ( move 3 , 2 + ul ; move ul , 4 )  | ( move 4 - ul , 3 ; move ul , 4 )  | ( pen 3 ; move 3 , 3 ; move ul , 4 )  | ( move 3 , 2 + ul ; move ul , 4 ; pen 0 )  | ( move 4 - ul , 3 ; pen 2 ; move ul , 4 )  | ( move 3 , 3 ; v0 = 4 ; move ul , v0 )  | ( move 3 , 3 ; v0 = ul ; move v0 , 4 )  | ( move 3 , 3 ; ( move ul , 4 ; v0 = 4 ) )  | ( v0 = 0 ; move 3 , 3 ; move ul , ua + 4 )  | ( move 3 , 3 ; move ul , 4 ; v0 = ua + 2 )  | ( move 3 , 3 ; move ul , ua + 4 ; v0 = 3 )  | ( move 0 , ul ; move 2 + ul , 2 ; move ul , 4 )  | ( v0 = 3 ; ( move v0 , v0 ; move ul , 4 ) )  | ( v0 = 3 ; move v0 , 3 ; move ul , v0 + ul )  | ( v0 = 2 + ul ; move v0 , v0 ; move ul , 4 )  | ( ( move 3 , 3 ; pen 3 + ul ; move 0 , 2 ) ; move ul , 2 )  
[402] ( move ul , 3 ; move 4 , 4 )  | ( move 4 / 3 , 3 ; move 4 , 4 )  | ( move ul , 3 ; move 4 , 3 + ul )  | ( move 4 - 3 , 3 ; move 4 , 3 + ul )  | ( move 0 , ul ; move ul , 2 ; move 4 , 4 )  | ( move ul , 3 ; v0 = 4 ; move v0 , 4 )  | ( move ul , 3 ; v0 = 4 ; move v0 , v0 )  | ( move 0 , 2 ; move ul , ul ; move 4 , 3 + ul )  
[403] ( move 4 , 4 ; move 3 , ul )  | ( move 4 , 4 ; move 3 , 3 - 2 )  | ( move 4 , 2 * 2 ; move 3 , ul )  | ( move 4 , 4 ; move 3 , 2 - ul )  | ( move 3 + ul , 4 ; move 3 , ul )  | ( move 4 , 4 ; move 2 + ul , ul )  | ( pen ua ; move 4 , 4 ; move 3 , ul )  | ( move 4 , 4 ; v0 = ul ; move 3 , ul )  | ( move 4 , ua + 4 ; move 3 , ul ; pen 0 )  | ( move 4 , 4 ; ( pen ul ; move 3 , ul ) )  | ( pen ul ; move 4 , 4 ; move 3 , ul - ua )  | ( move 4 , 4 ; v0 = ul ; move 3 , v0 )  | ( ( move 4 , 4 ; move 2 , ul ) ; move ul , 0 )  | ( pen ua - ul ; move 4 , 4 ; move 2 + ul , ul )  | ( v0 = 4 ; ( move v0 , v0 ; move 3 , ul ) )  | ( move 4 , 4 ; move 3 , ua + ul ; v0 = 3 - ua )  | ( move 4 , 2 + 2 ; v0 = ul ; move v0 * 3 , v0 )  
[404] ( move 3 , 4 ; move 4 , ul )  | ( move 3 , ua + 4 ; move 4 , ul )  | ( move 2 + ul , 4 ; move 4 , ul )  | ( move 3 , 4 ; move 3 + ul , ul )  | ( move 3 , 3 + ul ; move 4 , ul )  | ( move 3 , 4 ; move 4 , ul - ua )  | ( move 3 , 4 - ua ; move 4 , ul )  | ( move 3 , 4 ; move 4 , ul ; pen 0 )  | ( move 3 , 4 ; pen ua ; move 4 , ul )  | ( move 3 , 3 + ul ; move 4 , ua + ul )  | ( move 4 - ul , ua + 4 ; move 4 , ul )  | ( pen 2 ; move 3 , ua + 4 ; move 4 , ul )  | ( move 3 , 4 ; move 3 + ul , ul ; pen ua )  | ( move 3 , 4 ; v0 = ul ; move 4 , v0 )  | ( v0 = 4 ; move 3 , v0 ; move v0 , ul )  | ( v0 = 3 + ul ; move 3 , 4 ; move v0 , ul )  | ( move 3 , 4 ; v0 = ul - ua ; move 4 , v0 )  | ( v0 = ul ; ( move 3 , 4 ; ( pen ul ; move 4 , ul ) ) )  
[405] ( move ul , 4 ; move 3 , 4 )  | ( move 2 - ul , 4 ; move 3 , 4 )  | ( move ul , 4 - ua ; move 3 , 4 )  | ( move ul , 3 + ul ; move 3 , ua + 4 )  | ( move ul , 4 ; v0 = 2 ; move 3 , 4 )  | ( move ul , 4 ; pen 3 + ul ; move 3 , 4 )  | ( pen 4 ; move ul , 4 ; move 3 , 3 + ul )  | ( move ul , 4 ; ( move 3 , 4 ; pen ua ) )  | ( move ul , 4 ; v0 = 4 ; move 3 , v0 )  | ( v0 = 4 ; move ul , v0 ; move 3 , v0 )  | ( move ul , 2 + 2 ; v0 = ul ; move 3 , 4 )  | ( pen ua - 2 ; move ul , 3 + ul ; move 3 , 4 )  | ( pen ua ; ( move ul , 4 ; move 3 , 3 + ul ) )  | ( move ul , 3 + ul ; move ul , 4 ; move 2 , ua )  | ( move ul , 4 ; pen ul ; ( move 3 , 4 ; move 0 , 3 ) )  | ( pen ua ; ( move ul , 4 ; move 3 , 4 ; pen ua + 2 ) )  | ( pen ul ; ( v0 = 4 ; move ul , v0 ; move 3 , v0 ) )  | ( ( v0 = 4 ; move ul , v0 ) ; move 3 , v0 ; pen ul )  
[406] ( move 3 , 4 ; move ul , 4 )  | ( move 3 , 4 ; move 2 - ul , 4 )  | ( move 3 , 4 ; move 0 - ul , ul )  | ( move 3 , 3 + ul ; move ul , 4 )  | ( move 2 + ul , 4 ; move ul , 4 )  | ( move 3 , 4 ; ( move ul , 4 ; pen 0 ) )  | ( move 3 , ua + 4 ; pen ul ; move ul , 4 )  | ( v0 = 4 ; move 3 , v0 ; move ul , v0 )  | ( pen 3 * 2 ; move 3 , 4 ; move ul , 3 + ul )  | ( move 2 , 4 ; move ul , ua * 4 ; move ul , 4 )  | ( move 3 , 3 + ul ; move ul , 3 + ul ; v0 = 0 )  | ( move 3 , 4 ; ( pen 4 ; move 0 , ua ) ; move ul , 4 )  | ( move 3 , 4 ; ( pen 3 ; pen ua + 2 ; move ul , 4 ) )  | ( ( v0 = 4 ; move 3 , v0 - ua ) ; move ul , v0 )  
[407] ( move 4 , 3 ; move ul , 4 )  | ( move 3 + ul , 3 ; move ul , 4 )  | ( move 4 , 3 ; move ul , ua + 4 )  | ( move 3 + ul , 3 ; move ul , 4 ; pen 2 )  | ( pen 4 ; move 4 , 2 + ul ; move ul , 4 )  | ( move 4 , 3 ; v0 = 2 + ul ; move ul , 4 )  | ( move 4 , 3 ; move ul , 4 ; v0 = ua * 3 )  | ( move 2 + 2 , 3 ; pen 4 ; move ul , ua + 4 )  | ( move 3 + ul , ua + 3 ; move 4 - 3 , 4 ; pen ua )  
[408] ( move 4 , 3 ; move 4 , ul )  | ( move 4 , ua + 3 ; move 4 , ul )  | ( move 4 , 2 + ul ; move 4 , ul )  | ( move 4 , 3 ; move 4 , ul - ua )  | ( move 3 + ul , 3 ; move 4 , ua + ul )  | ( move 4 , 4 - ul ; move 3 + ul , ul )  | ( move 4 , 3 ; move 4 , ul ; v0 = 0 )  | ( move 4 , 3 ; move 0 , ua ; move 4 , ul )  | ( move 4 , 3 ; v0 = ul ; move 4 , ul )  | ( pen ua + 3 ; move 4 , 3 ; move 4 , ul )  | ( pen ul / 4 ; move 4 , 3 ; move 4 , ul )  | ( move 4 , 3 ; v0 = 4 ; move v0 , ul )  | ( move 4 , 3 ; ( move 4 , ul ; v0 = ua ) )  | ( ( v0 = 3 ; move 4 , v0 ) ; move 4 , ul )  | ( move 4 , ua + 3 ; move 2 * 2 , ul ; v0 = ua )  | ( move 2 + ul , ua + 3 ; move ul , 0 ; move 4 , ul )  
[409] ( move 3 , ul ; move 4 , 4 )  | ( move 3 , ul ; move 4 , 2 + 2 )  | ( move 3 , ua + ul ; move 4 , 4 )  | ( move 3 , ul ; move 3 + ul , 4 )  | ( move 3 , ul ; move 4 , 3 + ul )  | ( move 4 - ul , ul ; move 4 , 4 )  | ( move 2 + ul , ul ; move 4 , ua + 4 )  | ( ( pen ua ; move 3 , ul ) ; move 4 , 4 )  | ( move 3 , ul ; move 3 + ul , 4 ; pen ua )  | ( move 3 , ul ; v0 = 4 ; move v0 , v0 )  | ( v0 = 4 ; move 3 , ul ; move v0 , v0 )  | ( pen 4 + ul ; ( move 3 , ul ; move 4 , 4 ) )  | ( move 0 , ul ; move 3 , ua ; move 4 , ua + 4 )  | ( move 3 , ul ; move 3 - ul , 4 ; move 2 , ua )  | ( move 3 , ul ; move 4 , 4 ; v0 = ua + ul )  | ( move 4 - ul , ul ; v0 = 4 ; move 4 , v0 )  | ( move ul , ul ; move 4 / 2 , 0 ; move 4 , ua + 4 )  | ( move 3 , ul ; ( pen ua ; move ul , 4 ) ; move 3 , ua )  | ( pen 4 ; move 3 , ul ; ( v0 = 4 ; move v0 , v0 ) )  
[410] ( move 4 , 4 ; move ua , 4 )  | ( move 4 , ua + 4 ; move ua , 4 )  | ( move 4 , 4 ; move ua , 3 + ul )  | ( v0 = 4 ; move 4 , v0 ; move ua , v0 )  | ( v0 = 4 ; move v0 , 4 ; move ua , v0 )  | ( move 3 + ul , 4 ; v0 = ul ; move ua , 4 )  | ( move ul , 4 ; ( move 3 , ua ; move ua , 4 ) )  | ( pen 4 / ua ; move 4 , 3 + ul ; move ua , 4 )  | ( move 4 , 2 + 2 ; v0 = ua ; move v0 , 4 )  | ( v0 = 4 ; move v0 , v0 ; move ua , v0 )  | ( move 4 , ua + 4 ; move 0 , 3 ; move ua , ua + ul )  | ( move 4 , 3 + ul ; ( pen ua ; move ua , 4 - ua ) )  | ( v0 = 4 ; ( move v0 , v0 ; move ua , v0 ) )  | ( v0 = 2 * 2 ; ( move v0 , v0 ; move ua , 4 ) )  | ( ( v0 = 3 + ul ; move 4 , v0 ) ; move ua , v0 )  | ( move 4 , 3 + ul ; move ua , 4 - ua ; move 0 , ua + 3 )  
[411] ( move ua , 4 ; move 4 , 4 )  | ( move ua , 4 ; move 3 + ul , 4 )  | ( move ua , 4 ; move 4 , 3 + ul )  | ( move ua , 4 ; pen ua ; move 4 , 4 )  | ( move ua , 4 - ua ; move 3 + ul , 4 )  | ( move ua , ua + 4 ; move 4 , 4 ; pen 3 )  | ( move ua , 4 ; v0 = 4 ; move v0 , 4 )  | ( v0 = 4 ; move ua , 4 ; move v0 , v0 )  | ( move ua , 4 ; move 4 , 3 + ul ; pen 3 + ul )  | ( move ua , 4 ; move ul , 4 ; move 4 - ul , ua )  | ( v0 = 4 ; move ua , v0 ; move v0 , v0 )  | ( move ua , 4 ; v0 = 3 + ul ; move v0 , v0 )  | ( v0 = 4 ; ( move ua , v0 ; move v0 , v0 ) )  | ( ( v0 = 4 ; move ua , v0 ) ; move v0 , v0 )  | ( v0 = 3 + ul ; move ua , v0 ; move v0 , v0 )  | ( move ua , 4 ; move ua - 2 , 4 - ua ; v0 = ua / 4 )  
[412] ( move 4 , ul ; move 4 , 3 )  | ( move 4 , ua + ul ; move 4 , 3 )  | ( move 4 , ul ; move 4 , ua + 3 )  | ( move 4 , ul ; move 3 + ul , 3 )  | ( move 4 , ul - ua ; move 4 , 2 + ul )  | ( move 3 + ul , ul ; move 4 , 4 - ul )  | ( v0 = ul ; move 4 , ul ; move 4 , 3 )  | ( pen ua ; move 3 + ul , ul ; move 4 , 3 )  | ( move 3 + ul , ul ; pen ul ; move 4 , 3 )  | ( move 4 , ul ; move 0 , 3 - ua ; move 4 , ua )  | ( v0 = 4 ; move 4 , ul ; move v0 , v0 - ul )  | ( move 4 , ua + ul ; ( move 0 , 2 ; move 4 , ul ) )  | ( move 4 , ua + ul ; move 0 , 2 ; move 4 , ua + ul )  | ( move 4 , ul ; move ul , 3 ; move ul - 4 , ua / 2 )  | ( v0 = 2 ; ( move 4 , ul ; move v0 * v0 , 3 ) )  | ( v0 = ua + ul ; move 4 , v0 ; move 4 , v0 * 3 )  | ( move 4 , ul ; ( move ul , ua + 3 ; move 3 , 0 ) ; pen ul )  
[413] ( move 4 , ul ; move 3 , 4 )  | ( move 4 , ul ; move 3 , 4 - ua )  | ( move 3 + ul , ul ; move 3 , 3 + ul )  | ( move 4 , ul ; pen ua - 3 ; move 3 , 4 )  | ( pen ul ; move 4 , ul ; move 3 , ua + 4 )  | ( move 4 , ul ; move 3 , 2 * 2 ; move 0 , ua )  | ( move 4 , ul ; move 3 , 4 ; move 0 , ul / 3 )  | ( move 3 + ul , ul ; move 3 , 2 * 2 ; pen 0 )  | ( v0 = 3 + ul ; move v0 , ul ; move 3 , v0 )  | ( pen ua ; move 4 , ul ; ( move 3 , 4 ; pen ua + ua ) )  
[414] ( move 4 , 4 ; move ul , 4 )  | ( move 4 , 4 ; move ul , ua + 4 )  | ( move 4 , 4 ; move ul , 3 + ul )  | ( move 4 , 4 - ua ; move ul , 4 )  | ( move 4 , 4 ; move ul , 4 ; pen 0 )  | ( move 4 , 2 + 2 ; move ul , ua + 4 )  | ( move 4 , 3 + ul ; move 2 - ul , 4 )  | ( move 4 , 4 ; move ul , 4 ; v0 = 3 )  | ( move 0 , ua ; move 4 , 4 ; move ul , 4 )  | ( move 4 , 4 ; v0 = ul ; move ul , 4 )  | ( pen ua ; move 4 , ua + 4 ; move ul , 4 )  | ( move 3 , 4 ; move ul , 0 ; move ul , 2 * 2 )  | ( v0 = 4 ; move 4 , v0 ; move ul , v0 )  | ( v0 = 4 ; move v0 , v0 ; move ul , 4 )  | ( v0 = 4 ; move v0 , v0 ; move ul , v0 )  | ( move 4 , 4 ; ( pen ua ; pen ua ) ; move ul , 4 )  | ( ( v0 = 4 ; move v0 , v0 ) ; move ul , 4 )  | ( ( pen 3 ; move 4 , 2 + 2 ) ; move ul , 3 + ul )  | ( move 4 , 4 ; v0 = 3 + 3 ; move ua / v0 , 4 )  | ( v0 = 4 ; ( move v0 , v0 ; move ul , v0 ) )  | ( v0 = 3 + ul ; move v0 , v0 ; move ul , v0 )  | ( v0 = 4 ; move v0 , v0 ; move ul , v0 - ua )  | ( move 4 , 4 ; ( move ul , 4 ; pen ul - ua ; pen ua + 2 ) )  
[415] ( move 4 , 4 ; move 4 , ul )  | ( move 3 + ul , 4 ; move 4 , ul )  | ( move 4 , 4 ; move 4 , ua + ul )  | ( move 4 , ua + 4 ; move 4 , ua + ul )  | ( move 3 + ul , ua + 4 ; move 4 , ul )  | ( move 4 , 4 ; move 4 , ul ; pen 0 - 2 )  | ( move 4 , 4 ; move 3 , ul ; move ul , ua )  | ( v0 = 4 ; move 4 , v0 ; move v0 , ul )  | ( ( move 4 , 4 ; move 4 , ua + ul ) ; pen 0 )  | ( ( pen ua / 2 ; move 4 , 4 ) ; move 4 , ul )  | ( move 3 + ul , ua + 4 ; pen ul ; move 4 , ul )  | ( move 3 + ul , 4 ; pen ul ; move 4 , ua + ul )  | ( v0 = 4 ; move v0 , v0 ; move v0 , ul )  | ( ( v0 = 4 ; move 4 , v0 ) ; move v0 , ul )  | ( move 4 , 4 - ua ; move 2 + 2 , ul ; v0 = ul )  | ( move 4 , 4 ; move 4 , ua + ul ; v0 = 3 + ul )  | ( v0 = 2 + 2 ; move v0 , v0 ; move v0 , ul )  | ( ( v0 = 4 ; move v0 , v0 ) ; move v0 , ul )  | ( v0 = 3 + ul ; move v0 , v0 ; move v0 , ul )  
[416] ( move 4 , ul ; move 4 , 4 )  | ( move 4 , ua + ul ; move 4 , 4 )  | ( move 3 + ul , ul ; move 4 , 4 )  | ( pen ul ; move 4 , ul ; move 4 , 4 )  | ( move 4 , ul ; pen 4 ; move 4 , 3 + ul )  | ( move 4 , ul ; move 4 , 3 + ul ; pen ul )  | ( move 4 , ul ; v0 = 4 ; move v0 , v0 )  | ( v0 = 4 ; move v0 , ul ; move 4 , v0 )  | ( pen 3 * 2 ; ( move 4 , ul ; move 4 , 4 ) )  | ( ( move 3 + ul , ul ; pen 4 ) ; move 4 , 4 )  | ( move 4 , ul ; move 3 + ul , 4 ; move 0 , ua )  | ( v0 = 4 ; move v0 , ul ; move v0 , v0 )  | ( move 4 , 4 - 3 ; v0 = 4 ; move v0 , v0 )  | ( ( move 4 , ul ; move 4 , 4 ) ; v0 = 2 - 3 )  | ( ( move 4 , ul ; v0 = 4 ) ; move v0 , v0 )  | ( move 4 , ul ; move 3 + ul , ua + 4 ; v0 = ua / 4 )  
[417] ( move ul , 4 ; move 4 , 4 )  | ( move ul , 3 + ul ; move 4 , 4 )  | ( move ul , ua + 4 ; move 4 , 4 )  | ( move ul , 4 ; move 4 , 4 ; pen ul )  | ( move ul , 4 ; move 4 , 4 ; v0 = 2 )  | ( pen 4 ; move ul , 4 ; move 4 , 3 + ul )  | ( move ul , 3 + ul ; move 3 + ul , ua + 4 )  | ( move ul , ua + 4 ; move 0 , 0 ; move 4 , 4 )  | ( v0 = 4 ; move ul , v0 ; move v0 , 4 )  | ( v0 = 4 ; move ul , v0 ; move v0 , v0 )  | ( ( move 0 , 0 ; move ul , 4 ) ; move 3 + ul , 4 )  | ( ( move ul , 4 ; v0 = 4 ) ; move v0 , v0 )  | ( v0 = 4 ; move ul , v0 + ua ; move v0 , v0 )  | ( ( move ul , 4 ; move 4 , 4 ; pen ua ) ; v0 = ua )  | ( move ul , 3 + ul ; v0 = 2 + 2 ; move v0 , v0 )  | ( v0 = 3 + ul ; ( move ul , v0 ; move v0 , v0 ) )  | ( ( v0 = 4 ; pen ul ) ; move ul , v0 ; move v0 , 4 )  
[418] ( move ua , 0 ; move ua , 2 )  | ( move ua , ua ; move ua , 2 )  | ( move ua , ua * 2 ; move ua , 2 )  | ( move ua , 0 ; move ua , ul + ul )  | ( move ua , ua ; move ua , ua + 2 )  | ( move ua , ua ; move ua , ul + ul )  | ( move ua , 0 ; pen ua ; move ua , 2 )  | ( move ua , ua ; move ua , 2 ; pen 2 )  | ( move ua , ua ; move ua , 2 ; pen ua )  | ( pen ua ; ( move ua , 0 ; move ua , 2 ) )  | ( move ua , 0 ; move ua , 2 - ua ; pen ul )  | ( move ua , ua ; pen ua + 3 ; move ua , 2 )  | ( move ua , 0 ; move ua , 2 ; pen ul / ua )  | ( move ua , ua ; v0 = 2 ; move ua , v0 )  | ( ( move ua , 0 ; move ua , 2 ) ; v0 = ul )  | ( move ua , 0 ; move ua , ua + 2 ; v0 = ul )  | ( move ua , ua ; move ua , 2 ; v0 = 4 + ul )  | ( ( move ua , ua ; move ua , 2 ) ; v0 = ua )  | ( move ua , ua * 4 ; ( pen ul ; move ua , 2 ) )  | ( move ua , ua ; move ua , 2 ; move ul / ua , 2 )  | ( v0 = ua ; move v0 , v0 ; move v0 , 2 )  | ( move ua , ua ; move ua , 3 - ul ; v0 = ul )  | ( v0 = ua ; move ua , ua ; move ua , v0 + 2 )  | ( move ua , ua ; move ua , 3 - ul ; v0 = ul - 4 )  | ( v0 = 2 + ul ; move ua , ua ; move ua , ul + ul )  | ( ( move ua , 0 ; v0 = ua + 2 ) ; move ua , v0 )  | ( ( v0 = 0 ; move ua , v0 * v0 ) ; move ua , 2 )  | ( ( move ua , ua ; move ua , 2 ) ; ( pen ul ; pen ul ) )  | ( move ua , ua ; ( move 0 , ua + ua ; move ua , 2 - ua ) )  | ( ( pen ul ; ( move ua , 0 ; move ua , ul + ul ) ) ; pen 2 )  | ( ( pen ul ; move ua , ua ) ; move ua , ul + ul ; pen ua + ua )  
[419] ( move 2 , 0 ; move ua , ul )  | ( move 2 , ua ; move ua , ul )  | ( move 2 , ua ; move ua , 2 - ul )  | ( move 2 , ua + ua ; move ua , ul )  | ( move ul + ul , 0 ; move ua , ul )  | ( move 3 - ul , ua ; move ua , ul )  | ( move ul + ul , ua ; move ua , ul )  | ( move 2 , 0 ; move ua , ul ; pen 2 )  | ( move 2 , ua * 2 ; move ua , 2 - ul )  | ( move 2 , ua + ua ; move ua , 2 - ul )  | ( move 2 , ua + ua ; move ua , ul - ua )  | ( move ul + ul , ua * 3 ; move ua , ul )  | ( move ul + ul , ua ; move ua , ul - ua )  | ( v0 = 3 ; move 2 , ua ; move ua , ul )  | ( move 2 , 0 ; move ua , ua + ul ; pen 4 )  | ( pen ul ; move 2 , ua ; move ua , 4 - 3 )  | ( ( move 2 , 0 ; pen ul ) ; move ua , ul )  | ( move 2 , 0 ; pen ul ; move ua , ua + ul )  | ( ( pen ul ; move 2 , ua ) ; move ua , ul )  | ( v0 = 2 ; move v0 , ua ; move ua , ul )  | ( move 2 , ua ; move ua , 4 - 3 ; v0 = 0 )  | ( move 2 , ua ; move ua , 2 - ul ; v0 = 0 )  | ( move ul + ul , 0 ; move ua , ul ; v0 = 3 )  | ( move 2 , ua ; ( move ua , ul ; v0 = ua ) )  | ( move 2 , ua ; move ua , ul ; move 0 , ul + ul )  | ( move 2 , ua ; move ua , ua + ul ; v0 = ul )  | ( pen 3 - 2 ; move ul + ul , ua ; move ua , ul )  | ( ( move 2 , 0 ; move ua , ul ; pen ul ) ; pen ua )  | ( v0 = ul ; move 2 , ua / v0 ; move ua , v0 )  | ( move ul , 0 ; ( move ul , ua ; move ua , ua + ul ) )  | ( ( pen ua ; move 2 , ua ; pen ua * ua ) ; move ua , ul )  | ( move 2 , ua ; ( v0 = ul ; move ua , ul ) ; pen 2 - 3 )  
[420] ( move ua , 0 ; move ua , 3 )  | ( move ua , ua ; move ua , 3 )  | ( move ua , 0 ; move ua , ua + 3 )  | ( move ua , 0 ; move ua , 2 + ul )  | ( move ua , ua ; move ua , 2 + ul )  | ( move ua , 0 ; pen ua ; move ua , 3 )  | ( move ua , ua ; move ua , 3 ; pen 0 )  | ( pen ul ; move ua , 0 ; move ua , 3 )  | ( move ua , ua ; pen 2 ; move ua , 3 )  | ( move ua , ua ; move ua , 3 ; pen 2 )  | ( move ua , ua ; pen 3 ; move ua , 3 )  | ( move ua , ua ; pen 4 ; move ua , 3 )  | ( move ua , ua ; move ua , 3 ; pen ul )  | ( move ua , ua ; pen ul ; move ua , 3 )  | ( move ua , ua + ua ; move ua , 2 + ul )  | ( move ua , 0 ; move ua , 3 ; v0 = ua )  | ( move ua , 0 ; pen ua / 3 ; move ua , 3 )  | ( move ua , ua ; move 0 , 3 ; move ua , ua )  | ( pen 3 / ua ; move ua , ua ; move ua , 3 )  | ( v0 = ua ; move v0 , 0 ; move v0 , 3 )  | ( v0 = ua ; move v0 , v0 ; move ua , 3 )  | ( move ua , ua ; ( move 0 , ua ; move ua , 3 ) )  | ( move ua , 0 ; v0 = ul / ua ; move ua , 3 )  | ( v0 = ua ; move v0 , v0 ; move v0 , 3 )  | ( move ua , 0 ; pen ua + ua ; move ua , 2 + ul )  | ( pen ua + ul ; move ua , 0 ; move ua , 4 - ul )  | ( ( move ua , 0 ; v0 = 3 ) ; move ua , v0 )  | ( ( move ua , 0 ; pen ul ; move ua , 3 ) ; pen ul )  | ( move ua , 0 ; ( move ua , 3 ; v0 = ua * 2 ) )  | ( move ua , ua ; pen ul - ua ; ( pen 4 ; move ua , 3 ) )  | ( pen ul ; ( move ua , ua ; move ua , 3 ) ; pen ua - ul )  | ( pen 3 ; ( ( move ua , ua ; move ua , 4 - ul ) ; pen 0 ) )  
[421] ( move ua , 0 ; move 2 , ul )  | ( move ua , ua ; move 2 , ul )  | ( move ua , 0 ; move 2 , ua + ul )  | ( move ua , ua ; move 2 , ua + ul )  | ( move ua , 0 ; move ul + ul , ul )  | ( move ua , ua ; move 2 , ul - ua )  | ( move ua , ua ; move ul + ul , ul )  | ( move ua , ua ; pen 2 ; move 2 , ul )  | ( move ua , ua ; move 2 , ul ; pen ul )  | ( move ua , ua ; pen ul ; move 2 , ul )  | ( move ua , ua * 2 ; move 2 , ua + ul )  | ( ( pen 2 ; move ua , 0 ) ; move 2 , ul )  | ( move ua , 0 ; move 2 , ul ; pen 2 - ua )  | ( pen ua - ul ; move ua , 0 ; move 2 , ul )  | ( move ua , ua ; pen 2 ; move 2 , ua + ul )  | ( move ua , ua ; pen 4 + ul ; move 2 , ul )  | ( move ua , 0 ; v0 = ul ; move 2 , v0 )  | ( v0 = ul ; move ua , ua ; move 2 , v0 )  | ( move ua , ua ; v0 = 2 ; move v0 , ul )  | ( move ua , ua ; ( move 2 , ul ; v0 = 0 ) )  | ( move ua , ua * 2 ; move 2 , ul ; v0 = 4 )  | ( ( move ua , ua ; v0 = 4 ) ; move 2 , ul )  | ( move ua , 0 ; move 2 , ul ; v0 = ul + ul )  | ( move ua , ua ; ( move ul , ul ; move ul , 0 ) )  | ( v0 = ul ; move ua * v0 , 0 ; move 2 , v0 )  | ( v0 = ua ; move v0 , v0 * 4 ; move 2 , ul )  | ( move ua , ua ; move 3 - ul , 2 - ul ; v0 = 2 )  | ( ( move ua , 0 ; move ul + ul , ul ) ; v0 = ua )  | ( v0 = ua ; move v0 , v0 ; move 2 , ul - v0 )  | ( move ua , ua * 2 ; ( pen ul ; move ul + ul , ul ) )  | ( v0 = ul ; ( move ua , 0 ; move ul + v0 , v0 ) )  | ( move ua , 0 ; ( v0 = ul ; move v0 + v0 , v0 ) )  
[422] ( move ua , 0 ; move ul , 2 )  | ( move ua , ua ; move ul , 2 )  | ( move ua , 0 ; move ul , 3 - ul )  | ( move ua , ua * 4 ; move ul , 2 )  | ( move ua , 0 ; move ul , ul + ul )  | ( move ua , ua ; move ul , ua + 2 )  | ( move ua , 0 ; pen ua ; move ul , 2 )  | ( move ua , ua ; move ul , 2 ; pen 0 )  | ( move ua , ua ; pen 4 ; move ul , 2 )  | ( move ua , ua ; pen ua ; move ul , 2 )  | ( move ua , ua ; pen ul ; move ul , 2 )  | ( move ua , ua * 4 ; move 2 - ul , 2 )  | ( move ua , ua + ua ; move 2 - ul , 2 )  | ( move ua , ua * 2 ; move ul , ua + 2 )  | ( move ua , ua * 4 ; move ul , ul + ul )  | ( move ua , ua ; move ul , 2 ; move 0 , 4 )  | ( move ua , ua ; move 0 , ua ; move ul , 2 )  | ( pen ul ; move ua , ua ; move ul , 3 - ul )  | ( v0 = ua ; move v0 , v0 ; move ul , 2 )  | ( move ua , ua ; move ul , 2 ; v0 = 2 + 2 )  | ( move ua , ua ; move ul , 2 ; v0 = ua + ul )  | ( move ua , 0 ; ( pen ua ; move ul , ul + ul ) )  | ( move ua , ua ; ( pen ua * ua ; move ul , 2 ) )  | ( move ua , ua ; v0 = ul + ul ; move ul , v0 )  | ( move 0 - ul , 0 ; move ua , 0 ; move 2 - ul , 2 )  | ( move ua , 0 ; v0 = ul ; move ul , v0 + v0 )  | ( move ua , 0 ; move ul , 2 - ua ; v0 = 3 - ul )  | ( ( move ua , 0 ; move ul , ul + ul ) ; v0 = 4 )  | ( pen ul ; ( move ua , 0 ; pen 2 ; move ul , 2 ) ; pen ul )  | ( move ua , ua ; ( move ul , 2 ; v0 = 4 - ua ) ; pen 3 )  | ( move ua , ua + ua ; ( pen 3 + ul ; pen ul ) ; move ul , 2 )  
[423] ( move ul , 0 ; move ua , 2 )  | ( move ul , ua ; move ua , 2 )  | ( move 3 - 2 , ua ; move ua , 2 )  | ( move ul , 0 ; move ua , ua + 2 )  | ( move ul , 0 - ua ; move ua , 2 )  | ( move ul , ua ; move ua , 4 - 2 )  | ( move ul , ua * 4 ; move ua , 2 )  | ( move ul , ua + ua ; move ua , 2 )  | ( move ul , ua ; move ua , 3 - ul )  | ( move ul , ua ; move ua , 2 ; pen ul )  | ( move ul , 0 ; ( move ua , 2 ; pen 0 ) )  | ( move ul , 0 ; move ua , 2 ; v0 = ul )  | ( move 2 - ul , 0 ; move ua , 2 ; pen ul )  | ( pen 4 ; ( move ul , ua ; move ua , 2 ) )  | ( move ul , 0 ; pen 3 ; move ua , ul + ul )  | ( ( pen ua ; move ul , ua ) ; move ua , 2 )  | ( move 0 , 0 ; move ul , 0 ; move ua , ul + ul )  | ( move 0 , 0 - ul ; move ul , ul ; move ua , 2 )  | ( move ul , 0 ; v0 = ua - ul ; move ua , 2 )  | ( move ul , ua ; ( v0 = ua ; move ua , 2 ) )  | ( pen ua ; move 4 - 3 , ua ; move ua , 3 - ul )  | ( move ul , ua * 3 ; move 0 , ul ; move ua , ul )  | ( move ul , ua ; move ua , ua + 2 ; v0 = ul )  | ( move ul , 0 ; pen ua - 4 ; move ua , ul + ul )  | ( v0 = 0 ; move ul , v0 ; move ua , ul + ul )  | ( move ul , ua ; ( pen ul ; move ua , 2 ) ; pen ul )  | ( move ul , ua ; ( v0 = ua ; move ua , 2 + v0 ) )  | ( ( pen ul ; move ul , 0 ; move 0 , ul ) ; move ua , ul )  | ( ( move ul , ua ; move ua , 2 ; v0 = 3 ) ; v1 = 3 )  | ( move ul , ua ; ( v0 = 2 ; pen v0 ; move ua , v0 ) )  | ( move ul , ua ; move ua , 2 ; ( v0 = ua * 2 ; pen 4 ) )  
[424] ( move ua , 2 ; move ua , 2 )  | ( move ua , 4 - 2 ; move ua , 2 )  | ( move ua , ua + 2 ; move ua , 2 )  | ( move ua , 3 - ul ; move ua , 2 )  | ( move ua , ul + ul ; move ua , 2 )  | ( move ua , 2 ; move ua , ul + ul )  | ( move ua , 2 ; move ua , 2 ; pen ua )  | ( pen ul ; move ua , 2 ; move ua , 2 )  | ( move ua , 2 ; pen ul ; move ua , 2 )  | ( move ua , ul + ul ; move ua , 4 / 2 )  | ( move ua , 2 ; move 0 , 2 ; move ua , 0 )  | ( move ua , 2 ; move ua , 2 ; move 0 , 2 )  | ( move ua , ul + ul ; move ua , 3 - ul )  | ( move ua , 3 - ul ; move ua , ul + ul )  | ( move ua , 2 ; move 0 , 2 ; move ua , ua )  | ( move ua , ul + ul ; move ua , ul + ul )  | ( ( move ua , 2 ; move ua , 2 ) ; pen 2 / 3 )  | ( v0 = 2 ; move ua , v0 ; move ua , v0 )  | ( move ua , 2 ; move 0 , ul ; move ua , ua + ul )  | ( ( pen 2 ; move ua , 2 ; move ua , 2 ) ; pen 0 )  | ( v0 = ua ; move v0 , 2 ; move ua , ua + 2 )  | ( move ua , 3 - ul ; move ua , ul + ul ; pen ua )  | ( move ua , ul + ul ; v0 = ua ; move v0 , 2 )  | ( move ua , 2 ; move ua , 2 ; ( pen ul ; pen ua ) )  | ( ( move ua , 2 - ua ; move ua , 2 ) ; move 0 , 4 )  | ( move ua , ua + 2 ; move ua , 2 ; v0 = 3 / 4 )  | ( move ua , 2 ; move 0 , ul - 2 ; move ua , 4 - ul )  | ( move ua , ul + ul ; v0 = 3 + ul ; move ua , 2 )  | ( move ua , 2 ; ( move 0 , ul ; pen ua ) ; move ua , ul )  
[425] ( move ul , 0 ; move ua , 3 )  | ( move ul , ua ; move ua , 3 )  | ( move ul , 0 ; move ua , 2 + ul )  | ( move ul , 0 ; move ua , 4 - ul )  | ( move ul , ua * 2 ; move ua , 3 )  | ( move ul , ua ; move ua , ua + 3 )  | ( move ul , ua + ua ; move ua , 3 )  | ( move ul , ua ; move ua , 2 + ul )  | ( move ul , 0 ; pen 4 ; move ua , 3 )  | ( move ul , ua ; pen ul ; move ua , 3 )  | ( move ul , 0 ; move ua , 3 ; v0 = ul )  | ( move ul , ua * 3 ; move ua , 3 ; pen 3 )  | ( move 0 , ua ; move ul , ua ; move ua , 3 )  | ( move ul , ua ; move ua , 3 ; v0 = ua )  | ( move ul , 0 - ua ; pen ul ; move ua , 3 )  | ( move ul , ua + ua ; pen 3 ; move ua , 3 )  | ( pen ua + 3 ; move ul , ua ; move ua , 3 )  | ( move ul , 0 ; v0 = ua ; move v0 , 3 )  | ( move ul , ua ; pen ua + ua ; move ua , 3 )  | ( move ul , 0 ; v0 = 0 - 2 ; move ua , 3 )  | ( move ul , ua ; move ua , 3 ; v0 = 4 * 3 )  | ( ( move ul , 0 ; pen 4 ) ; move ua , 2 + ul )  | ( move ul , 0 ; move 0 , 3 ; move ua , ua + ua )  | ( move ul , ua * 3 ; move ua , 3 ; move 0 , ul )  | ( move ul , 0 ; ( pen ua ; move ua , ua + 3 ) )  | ( ( move ul , ua ; pen ul ) ; move ua , 4 - ul )  | ( pen ul / ua ; move ul , ua ; move ua , 3 - ua )  | ( move ul - 2 , 3 ; v0 = ua ; move v0 , v0 )  | ( move 2 - ul , 0 ; move ua , 3 ; v0 = ua + ua )  | ( move ul , 0 ; move ua , 3 - ua ; move 0 , ul / ua )  | ( move ul , ua + ua ; ( v0 = ul / ua ; move ua , 3 ) )  | ( move ul , ua ; v0 = ua ; ( move ua , 3 ; v1 = ul ) )  
[426] ( move ua , 0 ; move ul , 3 )  | ( move ua , ua ; move ul , 3 )  | ( move ua , ua ; move 4 - 3 , 3 )  | ( move ua , 0 ; move ul , ua + 3 )  | ( move ua , ua * 2 ; move ul , 3 )  | ( move ua , ua * 3 ; move ul , 3 )  | ( move ua , ua * 4 ; move ul , 3 )  | ( move ua , ua ; move ul , 2 + ul )  | ( move ua , ua ; move ul , ua + 3 )  | ( move ua , ua ; move ul , 3 - ua )  | ( move ua , 0 ; move ul / ua , ul )  | ( move ua , ua ; move ul , 4 - ul )  | ( move ua , ua ; pen 2 ; move ul , 3 )  | ( pen ua ; move ua , ua ; move ul , 3 )  | ( move ua , ua ; pen ul ; move ul , 3 )  | ( move ua , ua * 4 ; move ul , 2 + ul )  | ( move ua , ua * 4 ; move ul , 4 - ul )  | ( move ua , 0 ; move ul , 3 ; v0 = ul )  | ( move ua , 0 ; ( pen ua ; move ul , 3 ) )  | ( move ua , ua ; move 0 , 3 ; move ul , ua )  | ( move ua , ua ; move ul , 3 - ua ; pen 0 )  | ( move ua , ua ; pen ul ; move 2 - ul , 3 )  | ( v0 = 0 ; move ua , v0 ; move ul , 3 )  | ( move ua , ua ; move ul , 3 - ua ; pen ua )  | ( move ua , 0 ; move ul , 3 ; move 0 , ua - 3 )  | ( v0 = ua ; move v0 , v0 ; move ul , 3 )  | ( move ua , ua ; move ul , 3 ; move 0 , 3 + ul )  | ( move ua , 0 - ua ; move ul , 3 ; v0 = ua )  | ( move ua , ua ; v0 = ul ; move ul , v0 + 2 )  | ( pen ul ; move ua , 0 ; ( move ul , 3 ; pen ul ) )  | ( v0 = ua ; move v0 , 0 ; move ul , 3 - v0 )  | ( ( move ua , ua ; move ul , 3 ; pen 2 - ua ) ; v0 = ua )  
[427] ( move 3 , 0 ; move ua , ul )  | ( move 3 , ua ; move ua , ul )  | ( move 3 , 0 ; move ua , 2 - ul )  | ( move 2 + ul , 0 ; move ua , ul )  | ( move 4 - ul , 0 ; move ua , ul )  | ( move 3 , ua ; move ua , 2 - ul )  | ( move 3 , ua * 4 ; move ua , ul )  | ( move 3 , ua ; move ua , ua + ul )  | ( move 3 , ua + ua ; move ua , ul )  | ( move 2 + ul , ua ; move ua , ul )  | ( move 3 , 0 ; move ua , ul ; pen 4 )  | ( move 3 , ua ; pen 2 ; move ua , ul )  | ( move 3 , ua ; pen 3 ; move ua , ul )  | ( move 3 , ua ; pen ul ; move ua , ul )  | ( move 2 + ul , ua * 3 ; move ua , ul )  | ( move 3 , 0 ; move 0 , ul ; move ua , 0 )  | ( move 0 , 0 ; move 3 , ua ; move ua , ul )  | ( move 3 , 0 ; move ua , ul ; v0 = ua )  | ( move 3 , ua ; move ua , ul ; pen 2 - ua )  | ( move 3 , ua * 2 ; pen ul ; move ua , ul )  | ( move 2 , ua ; move ul , ua ; move ua , ul )  | ( v0 = ua ; move 3 , 0 ; move v0 , ul )  | ( move 3 , 0 ; move ua , 3 - 2 ; v0 = ul )  | ( ( move 3 , 0 ; move ua , ul ) ; v0 = 3 )  | ( move 0 , 0 ; move 2 + ul , 0 ; move ua , ul )  | ( move 3 , 0 - ua ; v0 = 2 ; move ua , ul )  | ( ( v0 = 3 ; move v0 , ua ) ; move ua , ul )  | ( move 3 , 0 ; ( move ua , ul ; pen ul ) ; pen ul )  | ( v0 = 0 ; move 3 , v0 ; move ua , ul / v0 )  | ( move 0 , 0 ; ( pen ua ; move 3 , ua ; move ua , ul ) )  | ( ( pen 2 ; move 3 , ua ) ; move ua , ua + ul ; move 0 , ua )  | ( ( move ul , ua ; move ul , 0 ; move ul , ua ) ; move ua , ul )  
[428] ( move ua , 0 ; move ua , 4 )  | ( move ua , ua ; move ua , 4 )  | ( move ua , 0 ; move ua , 2 * 2 )  | ( move ua , ua ; move ua , 2 + 2 )  | ( move ua , 0 ; move ua , 3 + ul )  | ( move ua , 0 ; move ua , ua + 4 )  | ( move ua , ua ; move ua , ua + 4 )  | ( move ua , ua ; move ua , 3 + ul )  | ( pen ul ; move ua , 0 ; move ua , 4 )  | ( pen ul ; move ua , ua ; move ua , 4 )  | ( move ua , ua * 3 ; move ua , ua + 4 )  | ( move ua , 0 ; move ua , 4 ; move 0 , ul )  | ( move ua , 0 ; move ua , ua + 4 ; pen 0 )  | ( move ua , 0 ; move ua , 4 ; pen ua + 4 )  | ( move ua , ua ; ( move ua , 4 ; pen 0 ) )  | ( move ua , ua ; move ua , 4 ; v0 = ul )  | ( move ua , ua ; v0 = ul ; move ua , 4 )  | ( move ua , 0 ; move ua , 4 ; pen ul / ua )  | ( move ua , ua ; move ua , 4 ; pen ua - 4 )  | ( move ua , 0 ; v0 = ua ; move v0 , 4 )  | ( move ua , ua ; move ua , 4 - ua ; pen ul )  | ( move ua , ua ; v0 = ua ; move v0 , 4 )  | ( move ua , ua * 3 ; move ua , 4 ; v0 = ul )  | ( move ua , ua ; move ua , 4 ; v0 = ul + ul )  | ( v0 = ua ; move v0 , v0 ; move v0 , 4 )  | ( pen ul ; ( move ua , ua ; move ua , 3 + ul ) )  | ( v0 = ul ; move ua , 0 ; move ua , 4 / v0 )  | ( move ua , 0 ; v0 = ua ; move v0 , 4 + v0 )  | ( move ua , 0 ; move ua , 4 ; move ul / 3 , 2 + ul )  | ( move ua , ua ; v0 = ua + 3 ; move ua , v0 + ul )  | ( v0 = ua ; move v0 , v0 + v0 ; move v0 , 4 )  | ( ( move ua , 0 ; v0 = 4 ) ; move ua , v0 ; pen v0 )  
[429] ( move ua , 0 ; move 3 , ul )  | ( move ua , ua ; move 3 , ul )  | ( move ua , 0 ; move 3 , ua + ul )  | ( move ua , 0 ; move 2 + ul , ul )  | ( move ua , 0 ; move 4 - ul , ul )  | ( move ua , ua * 4 ; move 3 , ul )  | ( move ua , ua ; move 3 , ua + ul )  | ( move ua , ua ; move 3 , ul - ua )  | ( move ua , 0 ; pen ul ; move 3 , ul )  | ( move ua , ua ; pen 3 ; move 3 , ul )  | ( move ua , 0 ; ( pen 4 ; move 3 , ul ) )  | ( move ua , 0 ; move 3 , ul ; v0 = ua )  | ( pen 3 ; ( move ua , ua ; move 3 , ul ) )  | ( move ua , ua ; move 3 , ul ; v0 = ul )  | ( move ua , ua ; move 3 , ul ; pen 3 - ul )  | ( pen ul / 2 ; move ua , ua ; move 3 , ul )  | ( v0 = 3 ; move ua , ua ; move v0 , ul )  | ( move 0 , 0 ; ( move ua , 0 ; move 3 , ul ) )  | ( move ua , ua * 2 ; v0 = ua ; move 3 , ul )  | ( move ua , ua ; move 3 , ul ; v0 = 3 + ul )  | ( move ua , ua ; v0 = ul ; move 3 , ua + ul )  | ( move ua , ua ; move 2 , ua + ul ; move ul , ua )  | ( move ua , ua ; pen ul + ul ; move 2 + ul , ul )  | ( move ua , 0 ; move 0 , 0 ; move 2 + ul , ua + ul )  | ( ( pen 2 + 2 ; move ua , 0 ) ; move 4 - ul , ul )  | ( move ua , ua ; v0 = ul ; move 2 + v0 , v0 )  | ( pen ul ; ( move ua , ua ; pen ul ; move 3 , ul ) )  | ( move ua , ua ; move 0 , ua * 3 ; move 3 , 2 - ul )  | ( v0 = 0 ; ( move ua , ua ; move 3 , ul - v0 ) )  | ( move ua , ua ; move 3 , ul ; ( pen 0 ; pen ua - 4 ) )  | ( ( move ua , ua ; move ul , ul ) ; pen ul ; move 2 , 0 )  | ( move ua , ua ; ( pen ua * ua ; v0 = 3 ; move 3 , ul ) )  
[430] ( move ua , 0 ; move ul , 4 )  | ( move ua , ua ; move ul , 4 )  | ( move ua , 0 ; move ul , 3 + ul )  | ( move ua , ua ; move ul , ua + 4 )  | ( move ua , ua + ua ; move ul , 4 )  | ( move ua , ua ; move ul , 4 - ua )  | ( pen ul ; move ua , 0 ; move ul , 4 )  | ( move ua , ua ; pen ua ; move ul , 4 )  | ( move ua , ua ; pen ul ; move ul , 4 )  | ( move ua , ua ; v0 = 2 ; move ul , 4 )  | ( move ua , ua ; move ul , 4 ; v0 = 4 )  | ( move ua , ua * 2 ; move ul , 4 ; pen 2 )  | ( ( move ua , 0 ; pen ua ) ; move ul , 4 )  | ( move ua , ua ; pen ua + 2 ; move ul , 4 )  | ( move ua , 0 ; move ul , 4 ; pen ul / ua )  | ( move ua , ua ; move ul , 4 ; pen ul / 2 )  | ( move ua , ua ; pen ua - ul ; move ul , 4 )  | ( v0 = ua ; move ua , v0 ; move ul , 4 )  | ( move ua , 0 ; move ul , ua + 4 ; move 0 , 0 )  | ( move ua , 0 ; ( move ul , 4 ; v0 = ua ) )  | ( move ua , ua ; move ul , 4 ; v0 = 3 + ul )  | ( move ua , ua ; move ul , 4 ; v0 = ul / 4 )  | ( ( pen ua / 2 ; move ua , ua ) ; move ul , 4 )  | ( ( move ua , ua ; move ul , 3 + ul ) ; pen ul )  | ( move ua , ua ; pen ua * ua ; move ul , 3 + ul )  | ( ( move ua , ua ; v0 = 4 ) ; move ul , v0 )  | ( ( v0 = ua ; move v0 , v0 ) ; move ul , 4 )  | ( pen ul / 3 ; move ua , ua ; move 2 - ul , 3 + ul )  | ( move ua , 0 ; ( pen 3 - ul ; pen ul ) ; move ul , 4 )  | ( ( pen ul ; move ua , ua ; v0 = ul ) ; move v0 , 4 )  | ( move ua , 0 ; move ul , ua + 4 ; ( move 0 , ul ; pen 4 ) )  | ( ( pen ua ; move ua , ua ) ; move ul , 4 ; v0 = ul / 2 )  
[431] ( move ul , 0 ; move 3 , ul )  | ( move ul , ua ; move 3 , ul )  | ( move ul , 0 ; move 2 + ul , ul )  | ( move ul , 0 ; move 3 , ua + ul )  | ( move ul , 0 ; move 4 - ul , ul )  | ( move ul , ua * 4 ; move 3 , ul )  | ( move ul , ua ; move 2 + ul , ul )  | ( move ul , ua ; move 4 - ul , ul )  | ( move ul , 0 ; pen ua ; move 3 , ul )  | ( pen ua ; move ul , 0 ; move 3 , ul )  | ( move ul , 0 ; move 3 , ul ; pen ul )  | ( pen ul ; move ul , 0 ; move 3 , ul )  | ( move ul , ua ; move 3 , ul ; pen 3 )  | ( move ul , ua ; move 2 + ul , 4 - 3 )  | ( move ul , ua ; move 2 + ul , ua + ul )  | ( move 0 , 0 ; move ul , ua ; move 3 , ul )  | ( move ul , 0 ; v0 = ul ; move 3 , ul )  | ( move ul , ua ; move 3 , ul ; v0 = 4 )  | ( ( pen 3 ; move ul , ua ) ; move 3 , ul )  | ( move ul , 0 ; move 2 , ul ; move ul , ua )  | ( v0 = ul ; move ul , 0 ; move 3 , v0 )  | ( move ul , ua + ua ; pen ua ; move 3 , ul )  | ( move ul , ua ; pen ua ; move 2 + ul , ul )  | ( v0 = ul ; move ul , ua ; move 3 , v0 )  | ( move ul , 0 ; move 0 , 2 ; move 3 , ul - 2 )  | ( move ul , ua ; move 3 , ul ; move 0 , 4 / ua )  | ( move ul , ua * 3 ; move 3 , ul ; pen ul - 2 )  | ( move ul , ua ; move 4 - ul , ul ; v0 = ua )  | ( move ul , ua ; v0 = ul ; move 4 - v0 , ul )  | ( move ul , 0 ; ( move 3 , ul ; v0 = ua ) ; pen 0 )  | ( ( move ul , ua ; v0 = ul ) ; move 4 - ul , v0 )  | ( v0 = ul ; ( move v0 , ua ; move 3 , v0 ) ; pen ul )  
[432] ( move 4 , 0 ; move ua , ul )  | ( move 4 , ua ; move ua , ul )  | ( move 4 , 0 ; move ua , ua + ul )  | ( move 3 + ul , 0 ; move ua , ul )  | ( move 4 , 0 ; move ua , ul - ua )  | ( move 4 , ua + ua ; move ua , ul )  | ( move 4 , 0 ; move ua , ul ; pen 4 )  | ( move 4 , 0 ; move ua , ul ; pen ua )  | ( pen ul ; move 4 , ua ; move ua , ul )  | ( v0 = 0 ; move 4 , 0 ; move ua , ul )  | ( move 4 , 0 ; pen 3 ; move ua , 2 - ul )  | ( move 4 , 0 ; v0 = ua ; move ua , ul )  | ( pen 3 ; move 4 , ua * 3 ; move ua , ul )  | ( pen ua - 2 ; move 4 , ua ; move ua , ul )  | ( move 4 , ua ; v0 = ul ; move ua , v0 )  | ( move 4 , 0 ; move 0 , 2 - ul ; move ua , 0 )  | ( move 2 - ul , 0 ; move 3 , 0 ; move ua , ul )  | ( v0 = ua ; move 4 , v0 ; move v0 , ul )  | ( move 3 + ul , 0 ; move ua , ul ; v0 = 4 )  | ( move 4 , ua * 2 ; move ua , ul ; pen ua + 3 )  | ( ( move 3 + ul , ua ; move ua , ul ) ; pen 3 )  | ( move 3 + ul , ua ; move ua , ul ; move 0 , ua )  | ( move 4 , ua ; move ua , ua + ul ; v0 = ul )  | ( pen ua / 4 ; move 3 + ul , ua ; move ua , ul )  | ( move 4 , ua * 4 ; pen ua * ua ; move ua , ul )  | ( move 4 , ua ; ( v0 = ua ; move v0 , ul ) )  | ( move 4 , ua * 4 ; move ua , ua + ul ; v0 = 3 )  | ( move 4 , ua * 3 ; move ua , ul ; v0 = ua + ua )  | ( move 4 , 0 ; ( pen ua ; move ua , ul ) ; v0 = 2 )  | ( v0 = 3 + ul ; move v0 , ua ; move ua , ul - ua )  | ( move ul , ua ; move 3 , ua ; ( move ua , ul ; pen 0 - ua ) )  | ( pen ul / ua ; move 4 , ua ; ( v0 = ua ; move ua , ul ) )  
[433] ( move ua , 2 ; move ua , 3 )  | ( move ua , 2 ; move ua , ua + 3 )  | ( move ua , 2 ; move ua , 2 + ul )  | ( move ua , 2 - ua ; move ua , 3 )  | ( move ua , 2 ; move ua , 3 - ua )  | ( move ua , 2 ; move ua , 4 - ul )  | ( move ua , ul + ul ; move ua , 3 )  | ( move ua , 2 ; move ua , 3 ; pen ul )  | ( move ua , 3 - ul ; move ua , ua + 3 )  | ( move ua , 2 ; move ua , 3 ; v0 = ul )  | ( move 0 , ul ; move ua , ul ; move ua , 3 )  | ( move ua , ua + 2 ; move ua , 3 ; pen ua )  | ( move ua , 3 - ul ; pen ul ; move ua , 3 )  | ( move ua , 2 ; v0 = ua ; move v0 , 3 )  | ( move ua , 2 ; ( move ua , 3 ; v0 = ul ) )  | ( move ua , 2 ; ( move ua , ua + 3 ; pen 3 ) )  | ( move ua , 2 ; move 0 , 4 - ul ; move ua , ua )  | ( move ua , ul + ul ; move ua , 3 ; v0 = 0 )  | ( move ua , ul + ul ; move ua , 3 ; v0 = ua )  | ( ( v0 = ua ; move v0 , 2 ) ; move ua , 3 )  | ( move ua , ul + ul ; v0 = 3 ; move ua , v0 )  | ( ( move ua , 2 ; move ua , ua + 3 ) ; v0 = 2 )  | ( move 0 , 2 - ul ; move ua , 2 - ul ; move ua , 3 )  | ( move 0 , 3 - ul ; move ua , ua ; move ua , 2 + ul )  | ( ( pen 2 ; move ua , ul + ul ) ; move ua , ua + 3 )  | ( move ua , ul + ul ; move ua , ua + 3 ; v0 = ua )  | ( ( move ua , ul + ul ; v0 = ua ) ; move v0 , 3 )  | ( ( move ua , 2 ; v0 = ua ; move v0 , 3 ) ; pen v0 )  | ( ( move ua , 2 ; pen ul ; move ua , 3 ) ; pen ul ; pen ua )  | ( move ua , ua + 2 ; ( move ua , 2 + ul ; pen 2 ; pen 4 ) )  
[434] ( move 3 , 0 ; move ul , ul )  | ( move 3 , ua ; move ul , ul )  | ( move 3 , 0 ; move ul , 2 - ul )  | ( move 3 , 0 ; move ul , ul - ua )  | ( move 3 , ua * 2 ; move ul , ul )  | ( move 3 , ua ; move ul , ua + ul )  | ( move 3 , ua + ua ; move ul , ul )  | ( move 2 + ul , ua ; move ul , ul )  | ( move 3 , 0 ; move ul , ul ; pen ul )  | ( move 3 , ua ; pen ul ; move ul , ul )  | ( move 3 , 0 ; move 0 , ul ; move ul , 0 )  | ( move 3 , 0 ; move ul , ul ; move 0 , ua )  | ( v0 = 3 ; move 3 , ua ; move ul , ul )  | ( move 3 , ua ; move ul , ul ; v0 = ua )  | ( move 3 , 0 ; move ul , ul - ua ; pen ul )  | ( move 3 , ua ; pen 3 ; move ul , ua + ul )  | ( pen ul ; ( move 3 , ua ; move ul , ul ) )  | ( move 3 , ua ; move ul , ul ; pen ul / ua )  | ( v0 = ua ; move 3 , v0 ; move ul , ul )  | ( v0 = ul ; move 3 , ua ; move v0 , v0 )  | ( move 2 + ul , ua ; v0 = ua ; move ul , ul )  | ( v0 = ul ; ( move 3 , 0 ; move v0 , ul ) )  | ( move 4 - ul , ua ; pen 4 + ul ; move ul , ul )  | ( v0 = ul ; move 3 , ul - v0 ; move ul , ul )  | ( move 4 - ul , 0 ; v0 = ul ; move v0 , v0 )  | ( move 3 , ua * 4 ; ( v0 = ul ; move ul , ul ) )  | ( ( move 2 + ul , ua ; v0 = ul ) ; move ul , ul )  | ( ( move 3 , ua ; pen ua + ua ) ; move ul , ua + ul )  | ( pen ul ; ( move 3 , 0 ; v0 = ul ) ; move ul , v0 )  | ( pen ua ; ( move 3 , 0 ; move ul , ua + ul ) ; v0 = 3 )  | ( move ul , ua ; move ul , 0 ; ( move ul , 0 ; move ul , ul ) )  
[435] ( move ul , 2 ; move ua , 2 )  | ( move ul , ua + 2 ; move ua , 2 )  | ( move ul , 2 ; move ua , ua + 2 )  | ( move ul , 2 - ua ; move ua , 2 )  | ( move ul , 3 - ul ; move ua , 2 )  | ( move ul , 2 ; move ua , 3 - ul )  | ( move ul , ul + ul ; move ua , 2 )  | ( move ul , 2 ; pen 2 ; move ua , 2 )  | ( move ul , 2 ; pen 3 ; move ua , 2 )  | ( move ul , 2 ; pen ua ; move ua , 2 )  | ( move ul , 4 - 2 ; pen 3 ; move ua , 2 )  | ( move ul , ul + ul ; move ua , ul + ul )  | ( move ul , 2 ; pen 2 ; move ua , ul + ul )  | ( v0 = 2 ; move ul , 2 ; move ua , v0 )  | ( v0 = 2 ; move ul , v0 ; move ua , v0 )  | ( move ul , 2 ; v0 = ul / 3 ; move ua , 2 )  | ( move ul , 2 ; move ua , 2 ; move 0 , ul + ul )  | ( move 0 , ul ; move ul , 2 - ul ; move ua , 2 )  | ( move ul , 2 ; move ua , ua + 2 ; v0 = ua )  | ( ( move 0 , ul ; move ul , ul ) ; move ua , 2 )  | ( move ul , 3 - ul ; move 0 , ul ; move ua , ul )  | ( v0 = 2 ; ( move ul , v0 ; move ua , v0 ) )  | ( move ul , ua + 2 ; move ua , 2 - ua ; move 0 , 2 )  | ( v0 = 2 ; move ul , v0 ; move ua , v0 + ua )  | ( v0 = ul ; move v0 , 2 ; move ua , v0 + v0 )  | ( move ul , 2 ; ( move ua , 2 ; v0 = 2 ) ; pen 3 )  | ( v0 = 2 ; move v0 - ul , v0 ; move ua , v0 )  | ( move ul , 2 - ua ; pen ua * 2 ; move ua , ul + ul )  | ( pen 3 ; move ul , 2 ; ( move ua , 2 ; move 0 , ua ) )  | ( ( move ul , 2 ; move ua , 3 - ul ) ; v0 = 4 / ua )  | ( move ul , 2 ; move ua , 2 ; ( v0 = ua - 3 ; pen 2 ) )  | ( v0 = 2 ; move v0 - ul , v0 - ua ; move ua , v0 )  
[436] ( move ua , ul ; move 2 , 2 )  | ( move ua , ul ; move 2 , ua + 2 )  | ( move ua , ul ; move 2 , 2 - ua )  | ( move ua , ul - ua ; move 2 , 2 )  | ( move ua , ul ; move 3 - ul , 2 )  | ( move ua , ul ; move ua / 3 , 2 )  | ( move ua , ul ; move ul + ul , 2 )  | ( move ua , ul ; move 2 , ul + ul )  | ( move ua , ua + ul ; move ul + ul , 2 )  | ( move ua , ua + ul ; move 2 , ul + ul )  | ( move 0 , 0 ; move ua , ul ; move 2 , 2 )  | ( move ua , ul ; move ua / 3 , ul + ul )  | ( move ua , ul ; move ul + ul , ul + ul )  | ( move ua , ul ; move 0 , ul ; move 2 , ul )  | ( move ua , ul ; move ul , 2 ; move ul , 0 )  | ( move ua , ul ; move 2 , 2 ; pen ua + ua )  | ( move ua , ul ; pen ul + ul ; move 2 , 2 )  | ( move ua , ul ; pen 2 ; move 2 , ul + ul )  | ( move ua , ul ; move 2 , 3 - ul ; pen ul )  | ( move ua , ul ; move ul , 2 ; move ul , ua )  | ( move ua , ul ; v0 = 2 ; move 2 , v0 )  | ( v0 = ua ; move v0 , ul ; move 2 , 2 )  | ( move ua , ul ; ( move 2 , 2 ; v0 = 2 ) )  | ( move ua , ul ; v0 = 2 ; move v0 , v0 )  | ( move ua , ul - ua ; v0 = 0 ; move 2 , 2 )  | ( move ua , ul ; move ua / 3 , 2 ; pen ua + 4 )  | ( v0 = 2 ; move ua , ul ; move 2 , 4 / v0 )  | ( ( move ua , ul ; v0 = 2 ) ; move v0 , v0 )  | ( move ua , ua + ul ; move ul , 2 ; move ul , 0 - ua )  | ( move ua , ul ; ( v0 = ul + ul ; move v0 , 2 ) )  | ( move ua , ua + ul ; v0 = ul + ul ; move v0 , v0 )  | ( move ua , ua + ul ; ( v0 = ul ; move 2 , 2 * v0 ) )  
[437] ( move ua , 2 ; move 2 , ul )  | ( move ua , 4 - 2 ; move 2 , ul )  | ( move ua , 4 / 2 ; move 2 , ul )  | ( move ua , ua + 2 ; move 2 , ul )  | ( move ua , 2 - ua ; move 2 , ul )  | ( move ua , 2 ; move 3 - ul , ul )  | ( move ua , ul + ul ; move 2 , ul )  | ( pen 3 ; move ua , 2 ; move 2 , ul )  | ( move ua , 2 ; move 2 , ul ; pen 3 )  | ( move ua , 2 ; move 2 , ul ; pen ul )  | ( pen ul ; move ua , 2 ; move 2 , ul )  | ( move ua , 3 - ul ; move 2 , ua + ul )  | ( move ua , 2 ; move ul + ul , ua + ul )  | ( move ua , 2 ; move 0 , 0 ; move 2 , ul )  | ( move ua , 2 ; move 2 , ul ; move 0 , 2 )  | ( move ua , 2 ; v0 = 0 ; move 2 , ul )  | ( move ua , 2 ; move 2 , ul ; v0 = 2 )  | ( move ua , 2 ; move 2 , ul ; move 0 , ul )  | ( move ua , 2 ; move 2 , ul ; v0 = ua )  | ( move ua , 2 ; move 2 , ul ; pen ul / 2 )  | ( move ua , 2 ; move ul , ul ; move ul , 0 )  | ( move 0 , ul ; move ua , ul ; move 2 , ul )  | ( move ua , 2 ; move ul + ul , ul ; pen ul )  | ( move ua , 2 ; pen ua / 4 ; move 4 - 2 , ul )  | ( move 0 , ua + ul ; move ua , ul ; move 2 , ul )  | ( ( move ua , 2 ; move ul , ul ) ; move ul , ua )  | ( v0 = ul + ul ; move ua , v0 ; move 2 , ul )  | ( v0 = 2 ; move ua , ua + v0 ; move v0 , ul )  | ( move ua , 2 ; v0 = ul ; move v0 + ul , v0 )  | ( ( move ua , 4 / 2 ; pen ul ) ; move 2 , ua + ul )  | ( move 0 , ul ; ( move ua , ul ; move 3 - ul , ul ) )  | ( move ua , ul + ul ; ( move 2 , ul ; v0 = ua ; pen 4 ) )  
[438] ( move ua , 2 ; move ul , 2 )  | ( move ua , ua + 2 ; move ul , 2 )  | ( move ua , 2 ; move ul , 2 - ua )  | ( move ua , 2 ; move ul , ul + ul )  | ( move ua , ul + ul ; move ul , 2 )  | ( pen ua ; move ua , 2 ; move ul , 2 )  | ( pen ul ; move ua , 2 ; move ul , 2 )  | ( move ua , ul + ul ; move ul , 3 - ul )  | ( move ua , 2 ; move ul , 2 ; v0 = 0 )  | ( move ua , 2 ; move ul , 2 ; pen ul - 3 )  | ( move ua , 2 ; pen 4 + ul ; move ul , 2 )  | ( move 0 , ul ; move ua , ul ; move ul , 2 )  | ( pen ua ; move ua , ua + 2 ; move ul , 2 )  | ( move ua , 2 ; v0 = 2 ; move ul , v0 )  | ( move ua , 4 / 2 ; move ul , 2 ; v0 = 3 )  | ( move ua , 2 ; ( move ul , 2 ; v0 = 3 ) )  | ( v0 = 2 ; move ua , v0 ; move ul , v0 )  | ( move ua , 2 ; v0 = 4 + ul ; move ul , 2 )  | ( move ua , 2 ; move ul , 2 ; v0 = ul - 4 )  | ( ( move ua , 2 ; pen 4 + ul ) ; move ul , 2 )  | ( move ul , ul ; move 0 - ua , ul ; move 0 , 4 )  | ( move ua , 2 ; move ul , ua + 2 ; v0 = ul )  | ( pen ul ; move ua , 2 - ua ; move 2 - ul , 2 )  | ( ( move ua , 2 - ua ; move ul , 2 ) ; pen ua )  | ( move ua , 2 ; v0 = ua + 2 ; move ul , v0 )  | ( ( move ua , 2 ; pen ua ) ; move ul , 2 ; pen 0 )  | ( ( move ua , 2 ; move ul , ua + 2 ) ; v0 = 4 )  | ( v0 = ul + ul ; move ua , v0 ; move ul , v0 )  | ( move ua , ua + 2 ; move ul , ul + ul ; pen ul + ul )  | ( v0 = ul ; move ua , ul + ul ; move ul , v0 * 2 )  | ( move ua , ua + 2 ; move ul , ua + 2 ; v0 = ua + ul )  | ( move ua , 2 ; ( move ul , 2 ; ( v0 = ul ; pen 4 ) ) )  
[439] ( move 2 , 2 ; move ua , ul )  | ( move 2 , ua + 2 ; move ua , ul )  | ( move 2 , 3 - ul ; move ua , ul )  | ( move 2 , ul + ul ; move ua , ul )  | ( move ul + ul , 2 ; move ua , ul )  | ( move ul + ul , ua + 2 ; move ua , ul )  | ( move 2 , 4 - 2 ; pen 2 ; move ua , ul )  | ( ( move 2 , 2 ; pen ul ) ; move ua , ul )  | ( pen 2 ; move ul + ul , 2 ; move ua , ul )  | ( move 2 , 2 ; v0 = ua ; move v0 , ul )  | ( pen ua ; move ul + ul , 2 ; move ua , ul )  | ( move 2 , ul + ul ; move ua , ul ; v0 = 2 )  | ( move 2 , 2 - ua ; move ua , ul ; pen ua - 4 )  | ( move 0 , ul ; move 3 - ul , ul ; move ua , ul )  | ( move ul , 2 ; move ul , ua ; move ua , ua + ul )  | ( v0 = ul ; move 2 , ua + 2 ; move ua , v0 )  | ( move 3 - ul , 2 ; v0 = ua ; move v0 , ul )  | ( ( v0 = 2 ; move v0 , v0 ) ; move ua , ul )  | ( move 2 , ul + ul ; ( move 0 , ul ; move ua , 0 ) )  | ( move 3 - ul , 2 ; move ua , ul ; v0 = 3 - ul )  | ( move ul , 2 ; move ul , ua * 3 ; move ua , 2 - ul )  | ( ( pen 3 ; move 2 , 3 - ul ) ; move ua , ul ; pen 3 )  | ( v0 = 3 - ul ; ( move v0 , v0 ; move ua , ul ) )  | ( move ul + ul , 2 ; ( pen ua ; pen ul ; move ua , ul ) )  | ( pen ul ; move 2 , 2 ; ( move ua , ul ; v0 = ul - 2 ) )  | ( v0 = ul + ul ; move v0 , v0 ; move ua , v0 - ul )  | ( ( move 2 , ul + ul ; pen 3 + ul ) ; pen 2 ; move ua , ul )  | ( ( pen ul ; move 2 , 3 - ul ; move ua , ua + ul ) ; pen 3 )  | ( move ul + ul , ul + ul ; ( v0 = ul ; move ua , v0 ) )  | ( move ul , 4 / 2 ; ( move ul , ua ; pen ua ) ; move ua , ul )  
[440] ( move 2 , ul ; move ua , 2 )  | ( move 2 , 2 - ul ; move ua , 2 )  | ( move 4 / 2 , ul ; move ua , 2 )  | ( move 2 , ul ; move ua , 2 - ua )  | ( move ul + ul , ul ; move ua , 2 )  | ( move 2 , ul ; move ua , ul + ul )  | ( move 2 , ul ; move ua , 2 ; pen ul )  | ( move 2 , ul ; move 0 , 0 ; move ua , 2 )  | ( v0 = 0 ; move 2 , ul ; move ua , 2 )  | ( move ul + ul , ul ; move ua , ul + ul )  | ( move 2 , ul ; move ua , 2 ; v0 = ul )  | ( pen ul + ul ; move 2 , ul ; move ua , 2 )  | ( v0 = ua ; move 2 , ul ; move v0 , 2 )  | ( v0 = ul ; move 2 , v0 ; move ua , 2 )  | ( move 3 - ul , ul ; move ua , 2 ; v0 = ua )  | ( move 2 , ul ; move ua , 2 - ua ; pen 2 / ua )  | ( move ul + ul , ul ; v0 = ua ; move ua , 2 )  | ( move 2 , ul - ua ; pen ul ; move ua , 2 - ua )  | ( pen 2 - ul ; move 2 , ul ; move ua , ul + ul )  | ( v0 = 2 ; ( move v0 , ul ; move ua , v0 ) )  | ( v0 = 2 ; move v0 , ul ; move ua , ua + v0 )  | ( move 3 - ul , ul ; move ua , 2 ; v0 = ua * 2 )  | ( ( move 2 , ul ; move 0 , ul ) ; move ua , ua + ul )  | ( ( v0 = ua ; move ul + ul , ul ) ; move v0 , 2 )  | ( move ul + ul , ul ; v0 = ul ; move ua , 2 * v0 )  | ( pen ul ; ( pen 2 ; move 3 - ul , ul ; move ua , 2 ) )  | ( move 2 , ul ; pen ua ; ( move 0 , ul ; move ua , ul ) )  | ( ( move 2 , ul ; pen 0 ; pen 0 ) ; pen 3 ; move ua , 2 )  | ( ( move 2 , ul ; pen ua + 4 ) ; move ua , 2 ; move 0 , 3 )  | ( ( move 2 - ul , ul ; move ul , 0 ) ; move ua , 2 ; pen ua )  | ( move 2 , ul ; ( move ua , 3 - ul ; move 0 , ua ) ; pen ul )  | ( move ul , ul ; pen ua * ua ; ( move ul , 0 ; move ua , 2 ) )  
[441] ( move ua , 0 ; move 4 , ul )  | ( move ua , ua ; move 4 , ul )  | ( move ua , 0 ; move 3 + ul , ul )  | ( move ua , 0 - ua ; move 4 , ul )  | ( move ua , ua * 2 ; move 4 , ul )  | ( move ua , ua ; move 4 , ua + ul )  | ( move ua , ua + ua ; move 4 , ul )  | ( move ua , 0 ; pen 3 ; move 4 , ul )  | ( move ua , 0 ; move 4 , ul ; pen ul )  | ( move ua , ua ; pen 3 ; move 4 , ul )  | ( move ua , ua * 3 ; move 2 + 2 , ul )  | ( move ua , ua ; move 3 + ul , 2 - ul )  | ( move ua , ua ; move 0 , 0 ; move 4 , ul )  | ( move ua , 0 ; move 4 , ul ; v0 = ul )  | ( move ua , 0 ; pen 2 ; move 3 + ul , ul )  | ( ( pen ul ; move ua , 0 ) ; move 4 , ul )  | ( move ua , 0 ; move 4 , ua + ul ; pen ua )  | ( move ua , ua ; move 4 , ul ; pen 3 / ua )  | ( move ua , ua ; ( pen ul ; move 4 , ul ) )  | ( move ua , ua ; move 4 , ul ; pen ua - ul )  | ( move ua , ua ; v0 = 4 ; move v0 , ul )  | ( ( move ua , 0 ; move 4 , ul ) ; v0 = 4 )  | ( move ua , 0 ; move 2 * 2 , ul ; v0 = ul )  | ( move ua , 0 ; move 3 + ul , ul ; move 0 , ua )  | ( move ua , 0 ; ( move 3 , ul ; move ul , ua ) )  | ( move ua , ua * 2 ; move 4 , ul ; v0 = ua )  | ( move ua , 0 ; v0 = 3 ; move ul + v0 , ul )  | ( move ua , ua ; v0 = 4 - 3 ; move v0 + 3 , v0 )  | ( v0 = ul ; move ua , ua ; ( move 4 , ul ; pen ua ) )  | ( pen ul + ul ; move ua , ua ; ( move 4 , ul ; pen ul ) )  | ( move ua , ua ; move 3 + ul , ul ; ( pen 4 ; v0 = 4 ) )  | ( ( move ua , ua ; pen 4 - ul ; move 4 , ua + ul ) ; pen ua )  
[442] ( move ua , 3 ; move ua , 2 )  | ( move ua , 3 ; move ua , 4 - 2 )  | ( move ua , 3 ; move ua , 2 - ua )  | ( move ua , 3 ; move ua , ul + ul )  | ( move ua , 3 ; pen ul ; move ua , 2 )  | ( pen ul ; move ua , 3 ; move ua , 2 )  | ( move ua , 2 + ul ; move ua , 4 - 2 )  | ( move ua , 2 + ul ; move ua , ua + 2 )  | ( move ua , 3 ; move 0 , 2 ; move ua , ua )  | ( move ua , 3 ; ( pen ul ; move ua , 2 ) )  | ( move ua , 3 ; move ua , ul + ul ; pen ua )  | ( v0 = ua ; move v0 , 3 ; move v0 , 2 )  | ( ( move ua , 2 + ul ; pen 4 ) ; move ua , 2 )  | ( move ua , 3 ; ( pen ul + ul ; move ua , 2 ) )  | ( ( v0 = 3 ; move ua , v0 ) ; move ua , 2 )  | ( pen ua + ul ; move ua , 3 ; move ua , ul + ul )  | ( ( v0 = ua ; move v0 , 4 - ul ) ; move v0 , 2 )  | ( ( move ul - ua , 2 + ul ; move ua , ua ) ; move ua , 2 )  
[443] ( move ul , 0 ; move ua , 4 )  | ( move ul , ua ; move ua , 4 )  | ( move ul , 0 - ua ; move ua , 4 )  | ( move ul - 2 , 3 ; move ua , ul )  | ( move ul , ua ; move ua , 3 + ul )  | ( move ul , 0 ; pen ua ; move ua , 4 )  | ( pen 2 ; move ul , ua ; move ua , 4 )  | ( move ul , ua ; move ua , 4 ; pen ul )  | ( move ul , 0 ; move 0 , 0 ; move ua , 4 )  | ( move ul , 0 ; move ua , 4 ; move 0 , 0 )  | ( move ul , ua ; v0 = 0 ; move ua , 4 )  | ( move ul , ua ; move ua , 4 ; v0 = 4 )  | ( move ul , ua ; move ua , 4 ; v0 = ua )  | ( move ul , ua ; move ua , 4 ; v0 = ul )  | ( ( pen ul ; move ul , ua ) ; move ua , 4 )  | ( move ul , 0 ; v0 = ua ; move v0 , 4 )  | ( move ul , ua ; pen ul ; move ua , ua + 4 )  | ( move ul , ua ; v0 = ua ; move v0 , 4 )  | ( move ul , 0 ; move ua , ua + 4 ; move 0 , 4 )  | ( move ul , 0 ; move ua , 4 ; move 0 , ua * 3 )  | ( move ul , 0 ; ( move ua , 4 ; v0 = ua ) )  | ( move ul , ua ; ( v0 = 4 ; move ua , 4 ) )  | ( ( move ul , ua * 4 ; move ua , 4 ) ; pen 4 )  | ( move ul / ua , 0 ; move ul , ua ; move ua , 4 )  | ( v0 = ua ; move ul , ua ; move ua , 4 - v0 )  | ( ( move ul , 0 ; move ua , 2 * 2 ) ; v0 = 4 )  | ( move ul , 0 - ua ; v0 = 2 - 3 ; move ua , 4 )  | ( ( move ul , ua ; v0 = ul ) ; move ua , ua + 4 )  | ( move 2 - ul , ua ; v0 = 0 ; move ua + v0 , 4 )  | ( ( pen ul ; move ul , ua ) ; v0 = 4 ; move ua , 4 )  | ( pen ul ; ( move ul , 0 ; ( move ua , 4 ; v0 = ua ) ) )  | ( move ul , ua ; pen ul ; ( v0 = 3 - ul ; move ua , 4 ) )  
[444] ( move ua , ul ; move 3 , 2 )  | ( move ua , ul ; move 3 , 4 - 2 )  | ( move ua , ua + ul ; move 3 , 2 )  | ( move ua , ul ; move 2 + ul , 2 )  | ( move ua , ul ; move ua / 2 , 2 )  | ( move ua , ul ; move 4 - ul , 2 )  | ( move ua , ul ; move 3 , ul + ul )  | ( move ua , ul ; move 3 , 2 ; pen 0 )  | ( pen 3 ; move ua , ul ; move 3 , 2 )  | ( move ua , ul ; pen 4 ; move 3 , 2 )  | ( move ua , ul ; move 2 + ul , 2 - ua )  | ( move ua , ua + ul ; move 3 , ul + ul )  | ( move ua , ul ; move 2 + ul , ul + ul )  | ( move 0 , 0 ; move ua , ul ; move 3 , 2 )  | ( move ua , ul ; pen ua ; move 3 , ua + 2 )  | ( pen ul ; move ua , ul ; move 3 , ua + 2 )  | ( move ua , ul ; move 3 , ua + 2 ; pen ul )  | ( move ua , ul ; pen ul ; move 3 , ul + ul )  | ( move ua , ul ; move 2 + ul , 2 ; v0 = ua )  | ( v0 = ul ; move ua , v0 ; move v0 + 2 , 2 )  | ( move ua , ul ; ( v0 = ul / 2 ; move 3 , 2 ) )  | ( move ua , ul ; v0 = 3 ; move v0 , v0 - ul )  | ( move ua , ul ; move 0 , 2 ; move 4 - ul , ua * 2 )  | ( ( move ua , ul ; move 3 , ul + ul ) ; v0 = ul )  | ( move ua , ua + ul ; ( move 3 , ul + ul ; pen ul ) )  | ( move ua , ul ; ( pen ua ; move 4 - ul , ul + ul ) )  | ( move ua , ul ; ( move ul , 2 ; pen 4 ; move 2 , 0 ) )  | ( pen ua ; ( move ua , ul ; move 3 , 2 ; v0 = 0 ) )  | ( ( move ua , ul ; pen 4 ) ; move 3 , 2 ; pen ua - ul )  | ( move ua , ul ; v0 = ul ; move 4 - v0 , ul + v0 )  | ( move ua , ul ; ( ( move 3 , 2 ; pen 0 ) ; v0 = 0 ) )  | ( ( move ua , ul ; move 3 , ua + 2 ; pen ua ) ; v0 = 0 )  
[445] ( move ul , 0 ; move 4 , ul )  | ( move ul , ua ; move 4 , ul )  | ( move 3 - 2 , 0 ; move 4 , ul )  | ( move ul , 0 ; move 3 + ul , ul )  | ( move ul , 0 ; move 4 , ul - ua )  | ( move 2 - ul , ua ; move 4 , ul )  | ( move ul , ua * 4 ; move 4 , ul )  | ( move ul , ua + ua ; move 4 , ul )  | ( move ul , ua ; move 3 + ul , ul )  | ( move ul , 0 ; move 4 , ul ; pen 4 )  | ( move ul , ua ; move 4 , ul ; pen ul )  | ( move ul , ua ; pen ul ; move 4 , ul )  | ( move ul , ua ; move 3 + ul , ua + ul )  | ( move ul , ua ; move 3 + ul , ul - ua )  | ( move ul , 0 ; v0 = 0 ; move 4 , ul )  | ( move ul , 0 ; move 3 , ul ; move ul , 0 )  | ( move ul , 0 ; pen 2 + ul ; move 4 , ul )  | ( move ul , ua ; move 4 , ul ; v0 = ua )  | ( move ul , ua ; ( move 4 , ul ; pen ua ) )  | ( ( move ul , ua ; pen ul ) ; move 4 , ul )  | ( move ul , 0 ; v0 = 4 ; move v0 , ul )  | ( pen ul ; move ul , ua + ua ; move 4 , ul )  | ( move ul , ua ; v0 = 4 ; move v0 , ul )  | ( move ul , ua ; move 2 + 2 , ul ; move 0 , 3 )  | ( pen 3 + 2 ; ( move ul , ua ; move 4 , ul ) )  | ( ( move ul , 0 ; move ul , ul ) ; move 4 - ul , ua )  | ( move ul , ua ; ( move 3 + ul , ul ; v0 = ul ) )  | ( ( move ul , ua ; pen 2 ; pen 2 ) ; move 4 , ua + ul )  | ( v0 = ua ; ( pen ua ; move ul , v0 ; move 4 , ul ) )  | ( move 2 - ul , ua ; ( pen ua ; move 0 , ua ; move 4 , ul ) )  | ( ( move ul , ua ; pen ua - ul ; move 0 , ul ) ; move 4 , ua )  
[446] ( move ua , 3 ; move ul , 2 )  | ( move ua , 3 ; move ul , ua + 2 )  | ( move ua , ua + 3 ; move ul , 2 )  | ( move ua , 3 ; move ul , 3 - ul )  | ( move ua , 3 ; move ul , ul + ul )  | ( move ua , 3 ; move ul , 2 ; pen 0 )  | ( move ua , 3 ; pen ul ; move ul , 2 )  | ( move ua , 2 + ul ; move ul , ul + ul )  | ( move ua , 3 - ua ; move ul , ul + ul )  | ( move ua , 3 ; move ul , 2 ; move 0 , 4 )  | ( move ua , 3 ; v0 = 2 ; move ul , 2 )  | ( move 0 , 2 ; move ua , ul ; move ul , 2 )  | ( move ua , 3 ; move ul , 2 ; v0 = ua )  | ( v0 = ua ; move ua , 3 ; move ul , 2 )  | ( move ua , 3 ; move ul , 4 - 2 ; pen ua )  | ( pen ul ; move ua , 3 ; move ul , 2 - ua )  | ( move ua , 3 ; move ul , ul + ul ; pen ul )  | ( move ua , 3 - ua ; move ul , 2 ; move 0 , 4 )  | ( move ua , 3 ; pen ua + 3 ; move ul , 3 - ul )  | ( pen ua + ua ; ( move ua , 3 ; move ul , 2 ) )  | ( move ua , 3 ; v0 = 0 - ul ; move v0 , v0 )  | ( move ua , ua + 3 ; ( move ul , 2 ; v0 = 0 ) )  | ( move ua , 2 + ul ; move ul , ua + 2 ; v0 = 2 )  | ( move ua , 3 ; ( v0 = ul - ua ; move ul , 2 ) )  | ( move ua , 3 ; move ul , ul + ul ; v0 = ua + 3 )  | ( ( move ua , 3 ; move ul , 2 - ua ) ; move v0 , ul )  
[447] ( move ua , 3 ; move 2 , ul )  | ( move ua , 2 + ul ; move 2 , ul )  | ( move ua , ua + 3 ; move 2 , ul )  | ( move ua , 3 ; move 2 , ul - ua )  | ( move ua , 3 ; move 3 - ul , ul )  | ( move ua , 3 ; move ul + ul , ul )  | ( move ua , 3 ; pen 4 ; move 2 , ul )  | ( pen 4 ; move ua , 3 ; move 2 , ul )  | ( move ua , 3 ; move ul + ul , ua + ul )  | ( move ua , 3 ; move 2 , ul ; move 0 , 3 )  | ( move ua , 3 ; move 2 , ul ; v0 = 0 )  | ( v0 = 0 ; move ua , 3 ; move 2 , ul )  | ( move ua , 3 ; move 2 , ul ; v0 = ul )  | ( move ua , 3 ; pen ua - 4 ; move 2 , ul )  | ( ( pen ul ; move ua , 3 ) ; move 2 , ul )  | ( move ua , 3 ; move ul + ul , ul ; pen 4 )  | ( move ua , 3 ; move ul , ul ; move ul , ua )  | ( move ua , 3 ; ( move 2 , ul ; v0 = 0 ) )  | ( ( move ua , 3 ; v0 = 0 ) ; move 2 , ul )  | ( move ua , 3 ; ( move 2 , ul ; v0 = 3 ) )  | ( move ua , 3 ; move 2 , ul ; v0 = 4 - ua )  | ( move 0 , 2 ; move ua , ul ; move 3 - ul , ul )  | ( move ua , ua + 3 ; move 3 - ul , ul ; pen 2 )  | ( move ua , 4 - ul ; move ul + ul , ul ; pen 0 )  | ( ( move ua , 3 ; pen 3 ) ; move 2 , ul ; v0 = 3 )  | ( move ua , 3 ; ( v0 = ua + ul ; move 2 , v0 ) )  | ( ( move ua , 3 - ua ; pen ua ) ; move ul + ul , ul )  | ( move ua , ua + 3 ; v0 = ua + ul ; move 2 , v0 )  | ( ( move ua , 3 ; pen 0 ; pen ua ) ; move 3 - ul , ul )  | ( move ua , 3 ; v0 = ul ; ( v1 = 2 ; move 2 , ul ) )  | ( v0 = ul ; move ua , 3 / v0 ; move ul + v0 , v0 )  | ( pen ua + 4 ; move 0 , ul ; ( move ua , 2 ; move 2 , ul ) )  
[448] ( move 2 , 3 ; move ua , ul )  | ( move 4 - 2 , 3 ; move ua , ul )  | ( move 2 , 2 + ul ; move ua , ul )  | ( move 2 , 3 ; move ua , ua + ul )  | ( move 2 , 4 - ul ; move ua , ul )  | ( move 3 - ul , 3 ; move ua , ul )  | ( move ul + ul , 3 ; move ua , ul )  | ( move 2 , 3 ; pen 4 ; move ua , ul )  | ( move 2 , 3 ; move ua , ul ; pen 4 )  | ( pen ul ; move 2 , 3 ; move ua , ul )  | ( move 2 , 2 + ul ; move ua , 3 - 2 )  | ( move ul + ul , 2 + ul ; move ua , ul )  | ( move 2 , 3 ; move ua , ul ; v0 = 0 )  | ( move 2 , 3 ; ( move ua , ul ; pen 0 ) )  | ( move 2 , 2 + ul ; pen 4 ; move ua , ul )  | ( pen ul / 3 ; move 2 , 3 ; move ua , ul )  | ( ( move 2 , 3 ; move ua , ul ) ; pen ua )  | ( ( move 2 , 3 ; pen ua ) ; move ua , ul )  | ( move 2 , 3 ; v0 = ul ; move ua , v0 )  | ( move 2 , 3 ; move ua , ul ; v0 = ua * 3 )  | ( v0 = ul ; move 2 , 3 / v0 ; move ua , v0 )  | ( move 2 , ua + 3 ; move ua , ul ; v0 = 3 * 3 )  | ( move 2 , 3 ; ( v0 = ua + ul ; move ua , ul ) )  | ( move 2 , 2 + ul ; ( v0 = ua ; move v0 , ul ) )  | ( move ul + ul , 3 ; pen ua + ul ; move ua , ul - ua )  | ( move 4 - 2 , 3 ; ( move ua , ul ; v0 = ua * 3 ) )  | ( ( move 2 , ua + 3 ; move ua , ul ) ; move 0 , ul / ua )  | ( ( move 2 , 2 + ul ; v0 = ul ) ; move v0 * ua , ul )  | ( pen ua ; ( move 2 , 3 ; move ua , ul ) ; v0 = 2 + ul )  | ( ( move 0 , 2 ; move 2 , ul ; pen ul ) ; move ua , ua + ul )  | ( pen ua ; move 2 , ua + 3 ; ( pen 4 + ul ; move ua , ul ) )  | ( ( move ul , 4 - ul ; move ul , ua ; move ua , ul ) ; pen 3 )  
[449] ( move 4 , 0 ; move ul , ul )  | ( move 4 , ua ; move ul , ul )  | ( move 2 + 2 , 0 ; move ul , ul )  | ( move 2 * 2 , 0 ; move ul , ul )  | ( move 4 , 0 ; move ul , 2 - ul )  | ( move 3 + ul , 0 ; move ul , ul )  | ( move 3 + ul , ua ; move ul , ul )  | ( move 4 , ua ; move ul , ua + ul )  | ( move 4 , ua + ua ; move ul , ul )  | ( move 4 , ua ; move ul , ul - ua )  | ( move 4 , ua ; move ul , ul ; pen 0 )  | ( pen 4 ; move 4 , ua ; move ul , ul )  | ( move 4 , ua * 3 ; move ul , 4 - 3 )  | ( move 3 + ul , ua ; move ul , ua + ul )  | ( move 4 , ua ; v0 = 0 ; move ul , ul )  | ( ( move 4 , 0 ; pen ul ) ; move ul , ul )  | ( pen ua ; move 3 + ul , ua ; move ul , ul )  | ( move 4 , ua ; v0 = ul ; move v0 , ul )  | ( move 4 , ua * 3 ; pen 4 + 3 ; move ul , ul )  | ( move 4 , 0 ; move ul , ua + ul ; v0 = ul )  | ( move 3 + ul , 0 ; move ul , ul ; v0 = ul )  | ( move 4 , ua ; move ul , ul ; v0 = ul / ua )  | ( ( move 4 , 0 ; v0 = ul ) ; move v0 , ul )  | ( move 4 , ua * 2 ; move ul , ul ; pen ul + ul )  | ( move 4 , ua * 2 ; v0 = ul ; move v0 , ul )  | ( ( v0 = ul ; move 4 , ua ) ; move ul , v0 )  | ( move 4 , 0 ; ( move ul , ul ; v0 = ua * 3 ) )  | ( v0 = ul ; move 3 + v0 , ua ; move v0 , ul )  | ( pen ua ; ( move 3 + ul , ua * 3 ; move ul , ul ) )  | ( ( move 4 , ua ; move ul , ul ) ; move 0 , ul ; pen ua )  | ( move 3 , ua ; ( move 0 , ua ; move ul , 0 ; move ul , ul ) )  | ( move 3 + ul , 0 ; ( pen ua - ul ; pen ua ) ; move ul , ul )  
[450] ( move ua , 2 ; move 3 , ul )  | ( move ua , 2 ; move 3 , 3 - 2 )  | ( move ua , 2 ; move 3 , 2 - ul )  | ( move ua , 2 ; move 2 + ul , ul )  | ( move ua , ua + 2 ; move 3 , ul )  | ( move ua , 2 ; move 3 , ua + ul )  | ( move ua , 2 ; move 4 - ul , ul )  | ( move ua , ul + ul ; move 3 , ul )  | ( move ua , 2 ; move 3 , ul ; pen 3 )  | ( move ua , 2 ; move 3 , ul ; pen 4 )  | ( move ua , 2 ; move 3 , ul ; pen ua )  | ( pen ul ; move ua , 2 ; move 3 , ul )  | ( move ua , 2 - ua ; move 4 - ul , ul )  | ( move ua , 2 ; ( pen 2 ; move 3 , ul ) )  | ( move ua , 2 ; v0 = ul ; move 3 , ul )  | ( move ua , 2 ; pen 4 ; move 3 , ua + ul )  | ( move ua , 2 ; move 3 , ua + ul ; pen 4 )  | ( pen ua * 2 ; move ua , 2 ; move 3 , ul )  | ( ( move ua , 2 ; pen ul ) ; move 3 , ul )  | ( move ua , ua + 2 ; pen ul ; move 3 , ul )  | ( move ua , 2 ; v0 = 3 ; move v0 , ul )  | ( pen ua + 3 ; ( move ua , 2 ; move 3 , ul ) )  | ( ( move ua , 2 ; move 2 , ul ) ; move ul , ua )  | ( ( pen ua ; move ua , 2 ) ; move 3 , ua + ul )  | ( move ua , ul + ul ; move 3 , ul ; v0 = ua )  | ( ( move ua , 2 ; v0 = ul ) ; move 3 , v0 )  | ( move ua , ua + 2 ; v0 = 3 ; move v0 , ul )  | ( ( pen 3 ; move ua , ul + ul ) ; move 3 , ua + ul )  | ( v0 = ul ; move ua , v0 + v0 ; move 3 , v0 )  | ( ( pen ua ; v0 = 2 ; move ua , v0 ) ; move 3 , ul )  | ( ( move ua , 2 ; v0 = 3 ; pen v0 ) ; move v0 , ul )  | ( ( move ua , 2 ; move 3 , ul - ua ) ; pen ul ; v0 = ul )  
[451] ( move 2 , ul ; move 2 , ul )  | ( move 2 , ul ; move 4 / 2 , ul )  | ( move 2 , ul ; move 2 , ua + ul )  | ( move 3 - ul , ul ; move 2 , ul )  | ( move 2 , ul ; move ul + ul , ul )  | ( move ul + ul , ul ; move 2 , ul )  | ( move 2 , ul ; move 2 , ul ; pen 0 )  | ( move 2 , ul ; move 2 , ul ; pen ua )  | ( move 2 , ua + ul ; move 3 - ul , ul )  | ( move 2 , ul ; move ul + ul , ua + ul )  | ( v0 = ul ; move 2 , ul ; move 2 , ul )  | ( move 2 , ua + ul ; move 2 , ul ; pen ul )  | ( move ul + ul , ul ; move 2 , ul ; pen ua )  | ( pen ua ; move 2 , ul ; move ul + ul , ul )  | ( move 3 - ul , ul ; move ul + ul , ua + ul )  | ( v0 = 2 ; move v0 , ul ; move v0 , ul )  | ( move 2 , ul - ua ; v0 = 0 ; move 2 , ul )  | ( move ul + ul , ul ; move ul + ul , ul - ua )  | ( move 2 , ua + ul ; pen ul + ul ; move 2 , ul )  | ( move 2 , ul ; v0 = ul ; move 3 - v0 , v0 )  | ( move 2 , ul ; v0 = 4 - 2 ; move v0 , 4 - 3 )  | ( ( move 3 - ul , ul ; pen 2 ) ; move 3 - ul , ul )  | ( move ul , ul ; ( move ul , 0 ; move 2 , ul - ua ) )  | ( v0 = 2 ; move v0 , ul ; move v0 , v0 - ul )  | ( move 2 , ul ; move 2 , ul ; ( move 0 , 0 ; pen ul ) )  | ( v0 = 2 ; ( move 2 , ul ; move v0 , v0 - ul ) )  | ( v0 = ul ; ( move 3 - v0 , v0 ; move 2 , ul ) )  | ( ( pen ua ; move 2 , ul - ua ; pen ua ) ; move 2 , ul )  | ( move 3 - ul , ul ; v0 = ul ; move v0 + v0 , ul )  | ( v0 = ul ; move ul + ul , v0 ; move 2 / v0 , ul )  | ( ( pen ul ; ( move 2 , ul ; move 2 , ul ) ) ; v0 = ua )  | ( ( move 2 , ua + ul ; move ul , ul ; move ul , 0 ) ; pen ua )  
[452] ( move ua , ul ; move 2 , 3 )  | ( move ua , ua + ul ; move 2 , 3 )  | ( move ua , ul ; move 2 , 2 + ul )  | ( move ua , ul - ua ; move 2 , 3 )  | ( move ua , ul ; move ul + ul , 3 )  | ( pen ua ; move ua , ul ; move 2 , 3 )  | ( move ua , ul ; move 2 , 3 ; pen ua )  | ( move ua , ul ; pen ul ; move 2 , 3 )  | ( move ua , 2 - ul ; move ul + ul , 3 )  | ( move ua , ul ; move 3 - ul , 3 - ua )  | ( move ua , ul ; move ua / 3 , 2 + ul )  | ( move ua , ul ; move ul + ul , 2 + ul )  | ( move ua , ul ; move ul + ul , 4 - ul )  | ( pen 4 - 3 ; move ua , ul ; move 2 , 3 )  | ( move ua , ul ; ( pen ul ; move 2 , 3 ) )  | ( move ua , ul ; move ul , 3 ; move ul , 0 )  | ( move ua , ul ; move ul , 3 ; move ul , ua )  | ( move ua , ul ; v0 = 3 ; move 2 , v0 )  | ( move ua , 2 - ul ; move ul + ul , 2 + ul )  | ( move ua , ul ; move 4 - 2 , 3 ; move 0 , 2 )  | ( move ua , ul ; move 2 , 3 ; v0 = 2 + ul )  | ( move ua , ul ; ( move 2 , 3 ; v0 = ua ) )  | ( move ua , ul ; pen ua + 3 ; move 4 / 2 , 3 )  | ( pen ua - 4 ; ( move ua , ul ; move 2 , 3 ) )  | ( move ua , ul ; move 3 - ul , 3 ; v0 = ul )  | ( pen 4 ; move ua , ul ; move ua / 3 , 2 + ul )  | ( move ua , ua + ul ; move 2 , 2 + ul ; move 0 , 2 )  | ( move ua , ul ; ( move 2 - ul , 3 ; move ul , ua ) )  | ( pen ua ; ( move ua , ul ; move 2 , 3 ; v0 = ua ) )  | ( move ua , ul ; v0 = ul ; ( move 2 , 3 ; pen ua ) )  | ( move ua , ul ; ( move 2 , ua + 3 ; v0 = ul / 4 ) )  | ( ( move ua , ul - ua ; pen 3 ) ; ( pen 2 ; move 2 , 3 ) )  
[453] ( move ul , 3 ; move ua , 2 )  | ( move 2 - ul , 3 ; move ua , 2 )  | ( move ul , 3 ; move ua , 4 - 2 )  | ( move ul , ua + 3 ; move ua , 2 )  | ( move ul , 3 - ua ; move ua , 2 )  | ( move ul , 3 ; move ua , ul + ul )  | ( pen ua ; move ul , 3 ; move ua , 2 )  | ( move ul , 3 ; move ua , 2 ; pen ul )  | ( move ul , 2 + ul ; move ua , 2 - ua )  | ( move ul , 3 - ua ; move ua , 2 - ua )  | ( move ul , 4 - ul ; move ua , ua + 2 )  | ( move ul , 3 ; move ua , 2 ; move 0 , 0 )  | ( move ul , 3 - ua ; move ua , ul + ul )  | ( move 0 , ua ; move ul , 3 ; move ua , 2 )  | ( v0 = ua ; move ul , 3 ; move ua , 2 )  | ( pen ul ; move ul , ua + 3 ; move ua , 2 )  | ( move ul , 3 ; v0 = ua ; move v0 , 2 )  | ( v0 = ul ; move v0 , 3 ; move ua , 2 )  | ( move 2 - ul , 3 ; v0 = 3 ; move ua , 2 )  | ( move ul , 2 + ul ; move ua , 2 ; v0 = 3 )  | ( move ul , 4 - ul ; move ua , 2 ; v0 = 2 )  | ( move ul , 3 ; move ua , 4 / 2 ; v0 = ua )  | ( ( pen ua ; move ul , 3 - ua ) ; move ua , 2 )  | ( ( move ul , ua + 3 ; move ua , 2 ) ; pen ul )  | ( move ul , ua + 3 ; move ua , ul + ul ; pen 3 )  | ( pen ul ; move ul , 3 - ua ; move ua , 3 - ul )  | ( v0 = 2 ; ( move ul , 3 ; move ua , v0 ) )  | ( move ul , ua + 3 ; pen ua ; move ua , ul + ul )  | ( ( move ul , 3 ; move ua , ua + 2 ) ; pen ul + ul )  | ( ( move ul , 3 ; pen 4 + 2 ) ; move ua , 2 ; pen 3 )  | ( v0 = ul ; move ul , 4 - v0 ; move ua , v0 + v0 )  | ( ( move ul , 3 ; move 0 , ul ; move ua , ul ) ; v0 = 2 )  
[454] ( move 2 , ul ; move ua , 3 )  | ( move 2 , ua + ul ; move ua , 3 )  | ( move 2 , ul ; move ua , 2 + ul )  | ( move 2 , ul ; move ua , 3 - ua )  | ( move 3 - ul , ul ; move ua , 3 )  | ( move 2 , ul ; move ua , 4 - ul )  | ( move ua / 3 , ul ; move ua , 3 )  | ( move ul + ul , ul ; move ua , 3 )  | ( move 2 , ul ; move ua , 3 ; pen 2 )  | ( pen 4 ; move 2 , ul ; move ua , 3 )  | ( move 2 , ul ; move ua , 3 ; pen ua )  | ( move 3 - ul , 3 - 2 ; move ua , 3 )  | ( move 2 , ua + ul ; move ua , 4 - ul )  | ( move ul + ul , ul ; move ua , 2 + ul )  | ( move ul + ul , ul ; move ua , 4 - ul )  | ( move 2 , ul ; move ua , 3 ; v0 = ul )  | ( move 2 , ul ; ( pen ua ; move ua , 3 ) )  | ( move ul , ul ; move ul , 0 ; move ua , 3 )  | ( move ul + ul , ul ; pen 3 ; move ua , 3 )  | ( move 2 , ul ; ( move ua , 3 ; v0 = 2 ) )  | ( move 3 - ul , ul ; move ua , 2 + ul ; pen ul )  | ( move ul , ul ; move ul , ua ; move ua , 4 - ul )  | ( v0 = ua + ul ; move 2 , v0 ; move ua , 3 )  | ( v0 = ul ; move 2 , v0 ; move ua , 3 / v0 )  | ( ( move 2 , 4 - 3 ; v0 = ua ) ; move v0 , 3 )  | ( move ul + ul , ul ; move ua , 3 ; v0 = ua * 4 )  | ( pen ua - 2 ; move 3 - ul , ul ; move ua , 2 + ul )  | ( move ul + ul , ul ; move ua , 4 - ul ; pen ua - ul )  | ( ( v0 = ua ; pen v0 ; move 2 , ul ) ; move v0 , 3 )  | ( ( pen ua + ua ; move 2 , ul ) ; v0 = 4 ; move ua , 3 )  | ( ( move ua / 3 , ul ; pen ua ; move ua , 3 ) ; v0 = ul )  
[455] ( move ua , 3 ; move ua , 3 )  | ( move ua , 2 + ul ; move ua , 3 )  | ( move ua , 3 ; move ua , 2 + ul )  | ( move ua , 3 ; move ua , 4 - ul )  | ( move ua , 4 - ul ; move ua , 3 )  | ( pen 2 ; move ua , 3 ; move ua , 3 )  | ( move ua , 3 ; move ua , 3 ; v0 = ul )  | ( move ua , 4 - ul ; move ua , 3 ; pen ul )  | ( move ua , 3 ; move ua , 3 ; v0 = ul / 3 )  | ( ( pen ul / 2 ; move ua , 3 ) ; move ua , 3 )  | ( v0 = 0 ; move ua , 3 / v0 ; move ua , 3 )  | ( ( v0 = ua ; move v0 , 3 ) ; move v0 , 3 )  | ( move ua , 3 ; ( move ua , 3 - ua ; move 0 , 4 ) )  | ( move ua , 4 - ul ; ( move ua , 3 ; v0 = 0 ) )  | ( ( move ua , 3 ; move ua , ua + 3 ) ; v0 = ul )  | ( ( move ua , 3 ; move ua , ua + 3 ) ; pen 3 / ua )  | ( move ua , 2 + ul ; move ua , 3 ; v0 = ua + ul )  | ( v0 = ua ; move v0 , 3 ; move v0 , 3 + v0 )  | ( move ul , 3 - ua ; move ua - ul , ua ; move ua , 3 )  | ( ( move ua , 3 ; move ua , 3 ) ; pen 2 ; pen ul - 2 )  | ( move ua , ua + 3 ; ( move ua , 3 ; pen ul ) ; pen ua )  
[456] ( move 3 , 2 ; move ua , ul )  | ( move 3 , 2 ; move ua , ua + ul )  | ( move 3 , ua + 2 ; move ua , ul )  | ( move 3 , 2 ; move ua , ul - ua )  | ( move 4 - ul , 2 ; move ua , ul )  | ( move 3 , 3 - ul ; move ua , ul )  | ( move 3 , ul + ul ; move ua , ul )  | ( move 3 , 2 ; move ua , ul ; pen 0 )  | ( pen ua ; move 3 , 2 ; move ua , ul )  | ( move 3 , 2 ; pen ul ; move ua , ul )  | ( move 4 - ul , 2 ; move ua , ua + ul )  | ( move 4 - ul , ul + ul ; move ua , ul )  | ( move 3 , 2 ; move ua , ul ; v0 = 3 )  | ( v0 = ua ; move 3 , 2 ; move ua , ul )  | ( pen ua + 4 ; move 3 , 2 ; move ua , ul )  | ( move 3 , ul + ul ; move ua , ul ; pen 2 )  | ( pen ul ; move 4 - ul , 2 ; move ua , ul )  | ( move 3 , 2 ; v0 = ua ; move v0 , ul )  | ( move 3 , ul + ul ; move ua , ul ; move 0 , ua )  | ( move 3 , 2 ; v0 = 0 ; move ua , v0 + ul )  | ( move 3 , ul + ul ; move ua , ul ; pen 3 - ua )  | ( ( move 3 , 2 ; move ua , 2 - ul ) ; pen 2 + ul )  | ( move 4 - ul , 2 ; ( move 0 , ua ; move ua , ul ) )  | ( ( move 0 , ul ; move 3 , ul ) ; move ua , ul - ua )  | ( ( move 4 - ul , 2 ; v0 = ua ) ; move v0 , ul )  | ( move 3 , 2 ; pen ua ; ( pen 4 ; move ua , ua + ul ) )  | ( move 3 , 4 - 2 ; v0 = ul ; move ua * v0 , v0 )  | ( move ul , ua + 2 ; ( move ul + ul , ua ; move ua , ul ) )  
[457] ( move ua , 2 ; move ua , 4 )  | ( move ua , 2 ; move ua , 3 + ul )  | ( move ua , 2 ; move ua , ua + 4 )  | ( move ua , ua + 2 ; move ua , 4 )  | ( move ua , 3 - ul ; move ua , 4 )  | ( move ua , ul + ul ; move ua , 4 )  | ( pen ua ; move ua , 2 ; move ua , 4 )  | ( pen ul ; move ua , 2 ; move ua , 4 )  | ( move 0 , 0 ; move ua , 2 ; move ua , 4 )  | ( move ua , ul + ul ; move ua , 3 + ul )  | ( move ua , 2 ; v0 = 0 ; move ua , 4 )  | ( move ua , 2 ; ( move ua , 4 ; pen 4 ) )  | ( move ua , 2 ; move 0 , ua ; move ua , 4 )  | ( pen ua * 2 ; move ua , 2 ; move ua , 4 )  | ( ( move ua , 2 ; pen ul ) ; move ua , 4 )  | ( pen ua ; move ua , 2 ; move ua , ua + 4 )  | ( move ua , 2 ; v0 = ua ; move v0 , 4 )  | ( move ua , ul + ul ; pen ua ; move ua , 4 )  | ( move ua , 2 ; move ua - 2 , 4 ; move 2 , 0 )  | ( move ua , 3 - ul ; move ua , 4 ; v0 = 2 )  | ( move ua , ul + ul ; move ua , 4 ; v0 = 0 )  | ( move ua , ua + 2 ; pen 4 ; move ua , 3 + ul )  | ( ( pen ua ; move ua , 2 ; pen ul ) ; move ua , 4 )  | ( move ua , 2 ; move ua , 3 + ul ; move 0 , ua + 4 )  | ( move ua , 2 ; ( v0 = 4 ; move ua , v0 ; pen v0 ) )  | ( ( pen ua ; move ua , 2 ) ; move ua , 3 + ul ; v0 = 0 )  
[458] ( move 3 , ul ; move ua , 2 )  | ( move 3 , ul ; move ua , ua + 2 )  | ( move 2 + ul , ul ; move ua , 2 )  | ( move 3 , ul ; move ua , 2 - ua )  | ( move 4 - ul , ul ; move ua , 2 )  | ( move 3 , ul ; move ua , ul + ul )  | ( pen 2 ; move 3 , ul ; move ua , 2 )  | ( move 3 , ul ; pen ua ; move ua , 2 )  | ( move 4 - ul , 3 - 2 ; move ua , 2 )  | ( move 3 , ua + ul ; move ua , ua + 2 )  | ( move 3 , ua + ul ; move ua , ul + ul )  | ( move ua / 2 , ul ; move ua , ul + ul )  | ( move 3 , ul ; v0 = 0 ; move ua , 2 )  | ( move 3 , ul ; pen 3 * 3 ; move ua , 2 )  | ( ( move 3 , ul ; pen 3 ) ; move ua , 2 )  | ( move 3 , ul ; move ua , 2 ; v0 = ul )  | ( pen ul ; move 3 , ul - ua ; move ua , 2 )  | ( pen ul / ua ; move 3 , ul ; move ua , 2 )  | ( move 3 , ul ; v0 = 2 ; move ua , v0 )  | ( move 2 + ul , 2 - ul ; move ua , 2 - ua )  | ( move 2 + ul , ul - ua ; move ua , 4 - 2 )  | ( move 3 , ul ; move ua , 2 ; v0 = 4 * 3 )  | ( move 3 , ul ; ( pen ua * ua ; move ua , 2 ) )  | ( move 2 + ul , ul ; pen ul + ul ; move ua , 2 )  | ( move 3 , ul ; v0 = ul + ul ; move ua , v0 )  | ( move 3 , ul ; v0 = ul ; move ua , v0 + v0 )  | ( move 3 , ua + ul ; v0 = ua + 2 ; move ua , 2 )  | ( move 3 , ul ; ( move ua , 2 ; v0 = ua + ua ) )  | ( move 2 , 2 - ul ; move ul , ua + ua ; move ua , 2 )  | ( move 3 , ua + ul ; ( v0 = ua ; move v0 , 2 ) )  | ( v0 = 3 ; ( v1 = 2 ; move 3 , ul ; move ua , 2 ) )  | ( v0 = ul ; move v0 + 2 , ul ; move ua , v0 + v0 )  
[459] ( move ua , 4 ; move ua , 2 )  | ( move ua , ua + 4 ; move ua , 2 )  | ( move ua , 3 + ul ; move ua , 2 )  | ( move ua , 4 ; move ua , ua + 2 )  | ( move ua , 4 - ua ; move ua , 2 )  | ( move ua , 4 ; move ua , 2 - ua )  | ( move ua , 4 ; move ua , 3 - ul )  | ( move ua , 4 ; move ua , ul + ul )  | ( pen ua ; move ua , 4 ; move ua , 2 )  | ( move ua , 2 + 2 ; move ua , 4 / 2 )  | ( move ua , 4 ; v0 = ua ; move v0 , 2 )  | ( move 0 , 4 ; ( move ua , ua ; move ua , 2 ) )  | ( move ua , 4 ; v0 = ua ; move ua , 4 - 2 )  | ( move ua , ua + 4 ; ( pen 2 ; move ua , 2 ) )  | ( move ua , 3 + ul ; v0 = 2 ; move ua , v0 )  | ( ( move ua , 4 ; pen 2 ) ; pen ul ; move ua , 2 )  | ( ( pen ua ; move ua , 2 + 2 ) ; move ua , 2 ; v0 = 0 )  
[460] ( move 3 , ul ; move ua , 3 )  | ( move 4 , ul ; move ua , 3 )  | ( move 2 + ul , ul ; move ua , 3 )  | ( move 3 , ul ; move ua , ua + 3 )  | ( move 3 , ul - ua ; move ua , 3 )  | ( move ua / 2 , ul ; move ua , 3 )  | ( move 4 - ul , ul ; move ua , 3 )  | ( move 3 , ul ; pen ul ; move ua , 3 )  | ( move 3 , ul ; v0 = 0 ; move ua , 3 )  | ( move 3 , ul ; v0 = ul ; move ua , 3 )  | ( move 3 , ul ; pen ua / 3 ; move ua , 3 )  | ( v0 = 3 ; move v0 , ul ; move ua , v0 )  | ( move 3 , ul ; move ua , 2 + ul ; v0 = 4 )  | ( move 3 , ul ; move ua , 2 + ul ; v0 = ul )  | ( move ua / 2 , ul ; move ua , 3 ; pen ua + 3 )  | ( v0 = 2 + ul ; move v0 , ul ; move ua , 3 )  | ( ( v0 = 3 ; move v0 , ul ) ; move ua , v0 )  | ( ( move 3 , ul ; move ua , 4 - ul ) ; v0 = 4 * 2 )  | ( v0 = 3 ; move v0 , ul ; ( move ua , v0 ; pen 3 ) )  | ( move 3 , ul ; ( move ua , 3 ; move 0 , 2 ; pen ua / 2 ) )  
[461] ( move ua , 3 ; move 3 , ul )  | ( move ua , ua + 3 ; move 3 , ul )  | ( move ua , 3 ; move 2 + ul , ul )  | ( move ua , 3 - ua ; move 3 , ul )  | ( move ua , 4 - ul ; move 3 , ul )  | ( move ua , 3 ; pen ua ; move 3 , ul )  | ( move ua , 3 ; ( move 3 , ul ; pen ua ) )  | ( ( move ua , 3 ; pen ua ) ; move 3 , ul )  | ( move ua , 3 ; move 2 , ul ; move ul , ua )  | ( move ua , 4 - ul ; move 3 , ul ; pen ul )  | ( move 0 , ua + 2 ; move ua , ul ; move 3 , ul )  | ( move ua , 4 - ul ; move 3 , ul ; v0 = ul )  | ( move ua , 4 - ul ; pen 2 ; move 3 , ul - ua )  | ( pen ul / 3 ; move ua , ua + 3 ; move 3 , ul )  | ( move ua , 2 + ul ; ( move 3 , ul ; pen ul ) )  | ( move ua , 2 + ul ; move 2 + ul , ul ; pen ua )  | ( move ua , 3 ; v0 = 3 ; move v0 , v0 / 3 )  | ( move ua , 3 ; move 3 , ul - ua ; v0 = 4 + 3 )  | ( v0 = 2 + ul ; move ua , v0 ; move v0 , ul )  | ( move ua , 2 + ul ; move 3 , ul ; v0 = ua - 4 )  | ( move ua , 2 + ul ; ( v0 = ul ; move 3 , ul ) )  | ( move ua , 3 ; ( move 4 - ul , ul ; v0 = 3 - 2 ) )  | ( move ua , 3 ; ( move ul , 3 - 2 ; move ul + ul , 0 ) )  | ( move ua , 3 ; ( move 3 , ul ; move 0 , 2 / 3 ; pen 2 ) )  | ( pen 3 ; ( move ua , 3 ; move 0 , ul ; move 2 + ul , 0 ) )  | ( move ua - ul , 3 ; ( move ul , 0 ; pen ul ) ; move 3 , ul )  | ( ( move ua , 2 + ul ; pen ua ) ; move ul , ul ; move 2 , ua )  
[462] ( move ul , ul ; move 3 , 2 )  | ( move ul , 2 - ul ; move 3 , 2 )  | ( move ul , ul ; move 2 + ul , 2 )  | ( move ul , ul ; move 3 , ua + 2 )  | ( move ul , ul ; move 4 - ul , 2 )  | ( move ul , ul ; move 3 , ul + ul )  | ( move ul , ul ; pen 3 ; move 3 , 2 )  | ( move 2 - ul , 3 - 2 ; move 3 , 2 )  | ( move ul , ul ; pen ul ; move 3 , 2 )  | ( move ul , 4 - 3 ; move 3 , 2 - ua )  | ( move ul , ul ; move 2 + ul , ul + ul )  | ( move ul , ul ; v0 = 3 ; move 3 , 2 )  | ( move ul , ul ; move 3 , 2 ; v0 = 4 )  | ( move ul , ul ; move 2 , 2 ; move ul , 0 )  | ( move ul , ul ; move 3 , 2 ; v0 = ua )  | ( move ul , ul ; move 3 , 2 ; pen 3 + ul )  | ( v0 = ul ; move v0 , v0 ; move 3 , 2 )  | ( move ul , ul ; move 2 + ul , 2 ; pen 4 + 2 )  | ( move ul , ul ; move 3 , ul + ul ; v0 = 2 )  | ( move ul , ul ; move 3 , ul + ul ; v0 = 4 )  | ( move ul , ul ; move 2 + ul , 2 ; pen 3 - ua )  | ( move ul , ul ; move 0 , ul - ua ; move 3 , ul )  | ( v0 = 2 ; move v0 - ul , ul ; move 3 , 2 )  | ( move ul , ul ; v0 = ul ; move 3 , v0 + v0 )  | ( move ul , ul ; ( move 3 , ul + ul ; v0 = 0 ) )  | ( move 4 - 3 , ul ; ( v0 = 2 ; move 3 , v0 ) )  | ( move ul , ua + ul ; move 3 , ul + ul ; v0 = 3 )  | ( ( move ul , ul ; v0 = 4 / 2 ) ; move 3 , v0 )  | ( move ul , ul ; move 2 + ul , ul + ul ; v0 = ul )  | ( ( move ul , ul ; move 3 , 2 ) ; pen ul ; move 0 , 0 )  | ( v0 = ul ; move v0 , v0 ; move 3 , v0 + v0 )  | ( move ul , ul ; ( pen 3 ; move 2 + ul , 2 ) ; pen ul / ua )  
[463] ( move 3 , ul ; move ul , 2 )  | ( move 3 , 4 - 3 ; move ul , 2 )  | ( move 3 , ua + ul ; move ul , 2 )  | ( move 3 , ul ; move ul , ua + 2 )  | ( move 3 , ul - ua ; move ul , 2 )  | ( move ul , 0 ; move ul - 4 , ul )  | ( move 4 - ul , ul ; move ul , 2 )  | ( move 3 , ul ; move ul , ul + ul )  | ( move ul , ua ; move ul - 4 , ul )  | ( move 3 , ul ; move ul , 2 ; pen 2 )  | ( move 3 , ul ; move ul , 2 ; pen 3 )  | ( move 3 , ul ; pen 4 ; move ul , 2 )  | ( pen ul ; move 3 , ul ; move ul , 2 )  | ( move 2 + ul , ua + ul ; move ul , 2 )  | ( move 3 , ua + ul ; move ul , ul + ul )  | ( move 3 , ul ; move ul , 2 ; v0 = ua )  | ( move ul , ul ; move 2 , ua ; move ul , 2 )  | ( move 2 + ul , ul - ua ; move ul , ua + 2 )  | ( move 3 , ul ; move 0 , 0 ; move ul , 2 - ua )  | ( move 2 + ul , ul ; v0 = 2 ; move ul , 2 )  | ( move 3 , ul ; move ul , 2 ; move 0 , ua - ul )  | ( move 4 - ul , ul ; move ul , 2 ; pen ua + 2 )  | ( ( move 3 , ul ; move ul , ul + ul ) ; pen 0 )  | ( ( move 3 , ul ; move ul , 2 ) ; pen ua + ul )  | ( move 4 - ul , ul ; move 0 , ul ; move ul , ul )  | ( pen ua + ul ; move 3 , ul ; move ul , ul + ul )  | ( move 4 - ul , ul ; ( move ul , 2 ; v0 = ul ) )  | ( move 3 , ul ; move ul , ul + ul ; move 0 , ul / 4 )  | ( ( move 3 , ul ; pen ul ; move ul , 2 ) ; v0 = 4 )  | ( v0 = ul ; move 3 , v0 ; move v0 , v0 + v0 )  | ( v0 = ul + ul ; move 3 , ul ; move ul , v0 - ua )  | ( move 3 , ua + ul ; ( move ul , 2 ; v0 = 4 + ul ) )  
[464] ( move 3 , 2 ; move ul , ul )  | ( move 3 , ua + 2 ; move ul , ul )  | ( move 2 + ul , 2 ; move ul , ul )  | ( move 3 , 2 ; move ul , ua + ul )  | ( move 3 , 2 ; move ul , ul - ua )  | ( move 3 , 3 - ul ; move ul , ul )  | ( move 3 , ul + ul ; move ul , ul )  | ( move 2 + ul , ua + 2 ; move ul , ul )  | ( move 3 , 2 ; move ul , ul ; move 0 , ua )  | ( move 3 , 2 ; v0 = ua ; move ul , ul )  | ( move 3 , 2 ; move ul , ul ; v0 = ul )  | ( ( move 3 , 2 ; move ul , ul ) ; pen ua )  | ( move 3 , 2 ; pen ua + ua ; move ul , ul )  | ( pen ua * ua ; move 3 , 2 ; move ul , ul )  | ( move 3 , ul + ul ; move ul , ul ; pen 3 )  | ( move 3 , 2 ; v0 = ul ; move v0 , ul )  | ( move 3 , 2 ; v0 = ul ; move v0 , v0 )  | ( ( v0 = 0 ; move 3 , 2 ) ; move ul , ul )  | ( move 3 , 2 ; ( move ul , ul ; v0 = 2 ) )  | ( ( move 3 , 2 ; v0 = ua ) ; move ul , ul )  | ( move 2 + ul , 2 ; ( pen 3 ; move ul , ul ) )  | ( move 0 , ua + 2 ; move 3 , ua ; move ul , ul )  | ( move 2 + ul , 2 ; pen ua + ul ; move ul , ul )  | ( move 2 + ul , 2 ; v0 = ul ; move ul , v0 )  | ( pen ua ; ( move 3 , 2 ; pen ua ) ; move ul , ul )  | ( v0 = ul ; move 3 , 2 ; move v0 , ua + v0 )  | ( move 3 , 2 ; v0 = ul ; move v0 , v0 - ua )  | ( move 3 , ul + ul ; move ul , ul ; v0 = 3 + ul )  | ( v0 = ul ; move 3 , v0 + v0 ; move ul , v0 )  | ( move ul , 2 ; move ul + ul , ua ; move ul , ua + ul )  | ( v0 = ul ; ( move 3 , ul + v0 ; move v0 , v0 ) )  | ( ( move 3 , 2 ; pen 2 ) ; ( pen ul + ul ; move ul , ul ) )  
[465] ( move ua , ul ; move 4 , 2 )  | ( move ua , ul ; move 3 + ul , 2 )  | ( move ua , ul ; move 4 , ul + ul )  | ( move ua , ul ; pen 2 ; move 4 , 2 )  | ( move ua , ul ; move 3 + ul , 3 - ul )  | ( move ua , ul ; move ul , 2 ; move 3 , 0 )  | ( move ua , ul ; move 4 , 2 ; v0 = ul )  | ( move ua , ul ; move 4 , 2 ; pen ul - 4 )  | ( pen ul ; move ua , ul ; move 4 , ul + ul )  | ( move ua , ul ; move 4 , ua + 2 ; v0 = 4 )  | ( ( pen ua * 3 ; move ua , ul ) ; move 4 , 2 )  | ( move ua , ul ; move 4 , ul + ul ; v0 = 2 )  | ( move ua , ul ; move 4 , 3 - ul ; v0 = ul )  | ( ( move ua , ul ; pen ul ) ; move 4 , ul + ul )  | ( move ua , ul ; pen 3 ; ( move 0 , ul ; move 4 , ul ) )  | ( ( pen ua ; pen ua ) ; move ua , ul - ua ; move 4 , 2 )  
[466] ( move 2 , ul ; move ua , 4 )  | ( move 2 , ua + ul ; move ua , 4 )  | ( move 2 , ul ; move ua , 3 + ul )  | ( move 2 , ul - ua ; move ua , 4 )  | ( move 2 , ul ; move ua , 4 - ua )  | ( move 3 - ul , ul ; move ua , 4 )  | ( move ul + ul , ul ; move ua , 4 )  | ( move 2 , ul ; move ua , 4 ; pen 2 )  | ( move 2 , ul ; move ua , 4 ; pen ul )  | ( move 2 , 4 - 3 ; move ua , 3 + ul )  | ( move 2 , ul ; move ua , 4 ; move 0 , 0 )  | ( move ul + ul , ul ; move ua , 3 + ul )  | ( move 2 , ul ; move ua , 4 ; v0 = 2 )  | ( move 2 , ul ; v0 = ua ; move ua , 4 )  | ( move 2 , ul ; move ua , 4 ; v0 = ul )  | ( move 2 , ul ; ( move ua , 4 ; pen ua ) )  | ( move ul + ul , ul - ua ; move ua , 2 * 2 )  | ( move 2 , ul ; move ua , 3 + ul ; v0 = 0 )  | ( pen ul ; move ul + ul , ua + ul ; move ua , 4 )  | ( move ul + ul , ul ; pen ul ; move ua , ua + 4 )  | ( move ul + ul , ul ; move ua , 3 + ul ; pen ul )  | ( move 2 , ul ; ( v0 = ua + 2 ; move ua , 4 ) )  | ( move ul + ul , ul ; v0 = ul ; move ua , 2 * 2 )  | ( v0 = 0 ; move 2 + v0 , ul ; move ua , 4 - ua )  | ( move ul + ul , ul ; pen ua + 2 ; move ua , 3 + ul )  | ( v0 = ua ; ( move 2 , v0 / ua ; move ua , 4 ) )  | ( move ul + ul , ul ; ( move ua , 4 ; pen ua + ua ) )  | ( move ul + ul , ul ; ( pen ul ; move ua , 3 + ul ) )  | ( ( move 2 , ul ; move ua , 4 ) ; ( pen 0 ; pen ul ) )  | ( pen 2 ; ( move ul , ul ; move ul , ua ) ; move ua , 4 )  | ( ( pen ul ; v0 = 4 ; move 2 , ul ) ; move ua , v0 )  | ( move ul , ul ; ( move ul , ua ; move ua , 4 ) ; move 0 , ul )  
[467] ( move 4 , ul ; move ua , 2 )  | ( move 3 + ul , ul ; move ua , 2 )  | ( move 4 , ua + ul ; move ua , 2 )  | ( move 4 , ul ; move ua , ua + 2 )  | ( move 4 , ul ; move ua , 2 - ua )  | ( move 4 , ul ; move ua , 3 - ul )  | ( move 4 , ul ; move ua , ul + ul )  | ( pen ua ; move 4 , ul ; move ua , 2 )  | ( move 4 , ul ; pen ul ; move ua , 2 )  | ( move 3 + ul , ua + ul ; move ua , 2 )  | ( move 3 + ul , ul ; move ua , ua + 2 )  | ( move 3 + ul , ul ; move ua , 2 - ua )  | ( move 2 * 2 , ul ; move ua , ul + ul )  | ( move 4 , ul ; move ua , 2 ; v0 = ul )  | ( move 4 , ul ; move ua , ua + 2 ; pen 3 )  | ( move 4 , ul ; pen ul ; move ua , 2 - ua )  | ( v0 = 2 ; move 4 , ul ; move ua , v0 )  | ( v0 = ua ; move 4 , ul ; move v0 , 2 )  | ( v0 = 3 + 2 ; move 4 , ul ; move ua , 2 )  | ( move 2 * 2 , ul ; move ua , 2 ; v0 = 3 )  | ( move 2 , ul ; move 2 , ua * 2 ; move ua , 2 )  | ( ( pen ul ; move 4 , ul ) ; move ua , 4 / 2 )  | ( pen 2 ; move 4 , ul - ua ; move ua , ua + 2 )  | ( move 3 , ul ; move ul , ua ; move ua , ul + ul )  | ( move 3 + ul , ul ; ( move ua , 2 ; v0 = 3 ) )  | ( move 4 , ul ; move ua , ul + ul ; move 0 , ua / 3 )  | ( move 3 + ul , ul ; ( v0 = 2 ; move ua , v0 ) )  | ( move 4 , ul ; move ua , 2 ; ( pen 4 ; v0 = ul ) )  | ( pen ul ; move 4 , ul ; ( pen ua + ua ; move ua , 2 ) )  | ( ( move 4 , ua + ul ; move ua , 3 - ul ) ; move 0 , ul )  | ( move 4 , ul ; move ua , 2 ; ( pen ua ; v0 = 3 - ul ) )  | ( move 3 , ul ; move ul , 0 ; ( pen ul ; move ua , ul + ul ) )  
[468] ( move ul , 4 ; move ua , 2 )  | ( move ul , 4 ; move ua , ua + 2 )  | ( move ul , 3 + ul ; move ua , 2 )  | ( move ul , 4 - ua ; move ua , 2 )  | ( move ul , 4 ; move ua , ul + ul )  | ( move ul , 4 ; pen ul ; move ua , 2 )  | ( move 3 - 2 , ua + 4 ; move ua , 2 )  | ( move ul , ua + 4 ; move ua , ul + ul )  | ( move ul , 3 + ul ; move ua , ul + ul )  | ( move ul , 4 ; move ua , 2 ; pen 2 / 4 )  | ( move ul , 4 ; move ua , 2 ; v0 = ua )  | ( ( move ul , 4 ; pen ua ) ; move ua , 2 )  | ( move ul , 4 ; move ua , 2 ; pen ua * ua )  | ( v0 = 2 ; move ul , 4 ; move ua , v0 )  | ( move 0 , 0 ; ( move ul , 4 ; move ua , 2 ) )  | ( ( move ul , 4 ; move 0 , 2 ) ; move ua , ua )  | ( move 0 , 3 ; move ul , ul ; move ua , 2 - ua )  | ( move ul , 4 - ua ; move ua , 2 ; v0 = ua )  | ( move ul , 4 - ua ; pen ul + ul ; move ua , 2 )  | ( move ul , 4 ; move ua , ul + ul ; pen ua + 4 )  | ( move ul , 4 ; ( move ua , ul + ul ; pen ua ) )  | ( ( move ul , 4 ; move ua , 2 ) ; v0 = ul / 2 )  | ( move ul , ua + 4 ; move ua , 2 ; v0 = ul / 2 )  | ( ( move ul , 4 ; move 0 , 3 + ul ) ; move ua , 2 - 4 )  | ( move ul , 4 ; ( move ua , ul + ul ; v0 = 3 / 2 ) )  | ( move 2 - ul , 4 ; move ua , 2 ; ( pen ul / ua ; pen 0 ) )  | ( move 0 , ul ; pen ul ; ( move ul , 3 ; move ua , ul + ul ) )  
[469] ( move 4 , 2 ; move ua , ul )  | ( move 2 * 2 , 2 ; move ua , ul )  | ( move 4 , 2 ; move ua , ua + ul )  | ( move 3 + ul , 2 ; move ua , ul )  | ( move 4 , ul + ul ; move ua , ul )  | ( move 4 , 2 ; move 0 , 0 ; move ua , ul )  | ( move 4 , 2 ; move ua , ul ; move 0 , 2 )  | ( move 4 , 2 ; ( move ua , ul ; pen 3 ) )  | ( move 4 , ua + 2 ; move ua , ul ; pen 0 )  | ( move 4 , 2 ; pen 2 - ul ; move ua , ul )  | ( ( move 4 , 2 ; pen ua ) ; move ua , ul )  | ( move 4 , 2 ; pen ul ; move ua , ua + ul )  | ( pen ua - ul ; move 4 , 2 ; move ua , ul )  | ( move 4 , 2 ; pen ul ; move ua , ul - ua )  | ( move 4 , 2 ; move ua , ul ; v0 = 2 + ul )  | ( move 4 , 2 ; move ua , ul ; v0 = ua - 3 )  | ( move 4 , 2 ; ( move ua , ul ; v0 = ul ) )  | ( move 4 , 3 - ul ; move ua , ul ; v0 = ul )  | ( ( pen ul ; move 4 , 2 ) ; move ua , ua + ul )  | ( move 4 , ul + ul ; pen 4 - ul ; move ua , ul )  | ( move 4 , ua + 2 ; move ua , ul ; move 0 , 4 - ul )  | ( ( move 4 , ua + 2 ; v0 = ul ) ; move ua , ul )  | ( pen ul ; ( move 2 , 2 ; move 2 , ua ; move ua , ul ) )  | ( move 4 , 2 ; pen ua ; ( move ua , ul ; pen ul - 2 ) )  | ( move 3 + ul , 2 ; move ua , ua + ul ; v0 = ul + ul )  | ( pen ul ; ( move 4 , 3 - ul ; move ua , ul ) ; pen ul / ua )  
[470] ( move ua , ua ; move 4 , 3 )  | ( move ua , 0 ; move 4 , 2 + ul )  | ( move ua , 0 ; move 3 + ul , 3 )  | ( move ua , ua ; move 4 , 2 + ul )  | ( move ua , ua ; move 3 + ul , 3 )  | ( move ua , ua ; move 4 , ua + 3 )  | ( move ua , ua + ua ; move 4 , 3 )  | ( move ua , ua ; move 4 , 3 - ua )  | ( pen 3 ; move ua , 0 ; move 4 , 3 )  | ( pen ua ; move ua , ua ; move 4 , 3 )  | ( move ua , ua ; pen ul ; move 4 , 3 )  | ( move ua , ua ; move 3 + ul , ua + 3 )  | ( move ua , 0 ; move 4 , 3 ; v0 = 0 )  | ( move ua , 0 ; move 4 , 3 ; pen 4 * 4 )  | ( move ua , 0 ; move 0 , 2 ; move 4 , ul )  | ( move ua , ua ; move 4 , 3 ; v0 = 2 )  | ( move ua , ua ; move 4 , 3 ; v0 = ua )  | ( move ua , ua * 4 ; pen ul ; move 4 , 3 )  | ( move ua , 0 ; v0 = 4 - 3 ; move 4 , 3 )  | ( move ua , ua ; v0 = ua + 3 ; move 4 , 3 )  | ( move ua , ua ; ( move 0 , 2 ; move 4 , ul ) )  | ( ( move ua , ua ; v0 = ua ) ; move 4 , 3 )  | ( move ua , ua ; ( move 4 , 3 ; v0 = ua ) )  | ( ( pen 3 + ul ; move ua , ua ) ; move 4 , 3 )  | ( move ua , ua ; v0 = ua ; move 4 , 2 + ul )  | ( move ua , ua ; move ul , 3 - ua ; move 3 , ua )  | ( ( move ua , ua * 3 ; move 4 , 3 ) ; pen 2 / 4 )  | ( move ua , ua ; v0 = 3 ; move ul + v0 , v0 )  | ( ( move ua , 0 ; v0 = 4 ) ; move v0 , ua + 3 )  | ( move ua , ua ; ( v0 = 3 ; move 4 , ua + v0 ) )  | ( move ua , ua ; move 4 , ua + 3 ; ( pen 0 ; pen 0 ) )  | ( ( v0 = ua ; move v0 , v0 ) ; move 4 , 3 ; pen ua )  
[471] ( move 2 , 4 ; move ua , ul )  | ( move 4 / 2 , 4 ; move ua , ul )  | ( move 2 , ua + 4 ; move ua , ul )  | ( move 2 , 3 + ul ; move ua , ul )  | ( move ul + ul , 4 ; move ua , ul )  | ( move 2 , 4 ; pen 2 ; move ua , ul )  | ( move 2 , 4 ; move ua , ul ; pen 4 )  | ( pen ul ; move 2 , 4 ; move ua , ul )  | ( move 2 , 4 ; move ua , ul ; v0 = 3 )  | ( pen 2 ; ( move 2 , 4 ; move ua , ul ) )  | ( ( move 2 , 4 ; pen ua ) ; move ua , ul )  | ( v0 = 4 ; move 2 , v0 ; move ua , ul )  | ( move 3 - ul , ua + 4 ; move ua , ul - ua )  | ( ( move 2 , 4 ; move ua , ul ) ; move 0 , 0 )  | ( ( move 2 , 4 ; move ua , ul ) ; v0 = 3 )  | ( move 2 , 2 + 2 ; move 0 , ul ; move ua , ua )  | ( move 3 - ul , 4 ; move ua , ul ; move 0 , 4 )  | ( move 2 , 4 ; ( move 0 , ul ; move ua , ua ) )  | ( ( move 2 , 4 ; move ua , ul ) ; pen 3 + ul )  | ( v0 = ul + ul ; move v0 , 4 ; move ua , ul )  | ( move 2 , 3 + ul ; move ua , 3 - 2 ; pen 0 - 4 )  | ( move 0 , 3 - ua ; move ul + ul , ul ; move ua , ul )  | ( ( pen ul ; pen ua / 3 ; move 2 , 4 ) ; move ua , ul )  | ( v0 = ul ; ( move 2 , 4 ; pen ul ; move ua , v0 ) )  | ( ( move 2 , 4 ; move ua , ul ; v0 = ul ) ; v1 = 0 )  | ( move 4 / 2 , ua + 4 ; ( v0 = ua ; move v0 , ul ) )  | ( move ul + ul , 4 ; ( move ua - ul , ul ; move ul , ua ) )  | ( ( move ul + ul , 4 ; pen 3 ) ; move ua , ul ; pen 2 - ul )  | ( move ul , 4 ; ( move ul , ua ; pen 4 + ul ) ; move ua , ul )  
[472] ( move ua , 2 ; move 4 , ul )  | ( move ua , 2 ; move 4 , 3 - 2 )  | ( move ua , 4 - 2 ; move 4 , ul )  | ( move ua , ua + 2 ; move 4 , ul )  | ( move ua , 2 ; move 3 + ul , ul )  | ( move ua , 3 - ul ; move 4 , ul )  | ( move ua , ul + ul ; move 4 , ul )  | ( move ua , 2 ; move 4 , ul ; pen 0 )  | ( move ua , 2 ; move 4 , ul ; pen ul )  | ( move ua , 2 - ua ; move 4 , ua + ul )  | ( move ua , 2 ; move 4 , ul ; v0 = 0 )  | ( move ua , 2 ; move 4 , ul ; v0 = 4 )  | ( move ua , 2 ; move 4 , ul ; v0 = ul )  | ( pen 4 + ul ; move ua , 2 ; move 4 , ul )  | ( move ua , 2 ; pen ua + ul ; move 4 , ul )  | ( move ua , 2 ; move 4 , ua + ul ; pen ul )  | ( move ua , 2 ; move 4 , ua + ul ; v0 = 0 )  | ( move ua , 2 ; move 4 , ul ; v0 = ua * 2 )  | ( move ua , 2 ; ( move 4 , ul ; v0 = ua ) )  | ( move 0 , ua + ua ; move ua , 2 ; move 4 , ul )  | ( move ua , 2 ; v0 = 4 ; move 4 , v0 - 3 )  | ( move ua , 2 ; pen ua + ua ; move 4 , ua + ul )  | ( pen ul ; move ua , 2 - ua ; move 3 + ul , ul )  | ( move ua , 2 - ua ; move 0 , ul ; move 2 + 2 , 0 )  | ( move ul , 4 / 2 ; move ua - ul , 0 ; move 4 , ul )  | ( move ua , 2 - ua ; move 4 , ul ; v0 = ua / 4 )  | ( ( move ua , ua + 2 ; v0 = ul ) ; move 4 , ul )  | ( ( move ua , 2 - ua ; move 4 , ul - ua ) ; pen ua )  | ( move ua , 4 - 2 ; v0 = ua + ul ; move 4 , v0 )  | ( move ua , 2 ; ( pen ul ; move 4 , ul ; v0 = ua ) )  | ( pen ua ; ( move ua , 2 ; move 4 , ul ) ; pen ua - ul )  | ( pen ul ; ( move ua , 2 ; ( move 4 , ul ; v0 = ul ) ) )  
[473] ( move ua , 4 ; move ul , 2 )  | ( move ua , 2 + 2 ; move ul , 2 )  | ( move ua , 3 + ul ; move ul , 2 )  | ( move ua , ua + 4 ; move ul , 2 )  | ( move ua , 4 ; move ul , 3 - ul )  | ( move ua , 4 ; move ul , ul + ul )  | ( move ua , 4 ; pen 3 ; move ul , 2 )  | ( move ua , 4 ; move ul , 2 ; pen 4 )  | ( move ua , 4 ; move ul , 2 ; v0 = 0 )  | ( move ua , 4 ; move ul , 2 ; v0 = 3 )  | ( move ua , 4 ; move ul , 2 ; pen ul - ua )  | ( pen ua - ul ; move ua , 4 ; move ul , 2 )  | ( move ua , 4 ; move ul , ul + ul ; pen ua )  | ( move 0 , 4 ; ( move ua , ua ; move ul , 2 ) )  | ( move ua , 4 ; move ul , 2 - ua ; v0 = ul )  | ( move ua , 4 ; move ul , ul + ul ; move 0 , ua )  | ( move ua , 4 ; v0 = 4 - 2 ; move ul , v0 )  | ( ( pen ua ; move ua , 4 ) ; pen ua ; move ul , 2 )  | ( v0 = ua ; move v0 , 4 ; move v0 / ua , 2 )  | ( move ua , 4 - ua ; v0 = 2 * 2 ; move ul , 2 )  | ( move ua , 4 ; v0 = ul ; move ul , v0 + v0 )  | ( ( move ua , 4 ; move 0 , 2 - ua ) ; move ul , ua )  | ( move ua , 3 + ul ; ( move ul , 2 ; move 0 , ul ) )  | ( move ua , 4 ; v0 = ul ; move v0 , v0 + v0 )  | ( move ua , 4 ; ( ( pen 0 ; pen ul ) ; move ul , 2 ) )  | ( ( move ua , ua + 4 ; move ul , 2 ) ; move 0 , 4 + ul )  | ( ( move ua , 4 ; move ul , ua + 2 ) ; v0 = ua * 2 )  | ( move ua , 4 ; move ul , 2 ; ( v0 = ul ; pen v0 ) )  
[474] ( move 3 , 3 ; move ua , ul )  | ( move 3 , 3 ; move ua , ua + ul )  | ( move 2 + ul , 3 ; move ua , ul )  | ( move 3 , ua + 3 ; move ua , ul )  | ( move 3 , 2 + ul ; move ua , ul )  | ( move 3 , 3 - ua ; move ua , ul )  | ( move 4 - ul , 3 ; move ua , ul )  | ( move 3 , 4 - ul ; move ua , ul )  | ( move 2 + ul , 2 + ul ; move ua , ul )  | ( move 3 , 2 + ul ; move ua , ul - ua )  | ( move 3 , 3 ; move ua , ul ; v0 = ul )  | ( move 3 , 4 - ul ; move ua , ul ; pen 0 )  | ( move 2 + ul , 3 ; move ua , ul ; pen 3 )  | ( pen ua ; move 3 , 3 ; move ua , ua + ul )  | ( move 3 , 3 ; v0 = ul ; move ua , v0 )  | ( move 3 , 3 ; v0 = ua ; move v0 , ul )  | ( move 3 , 3 ; move ua , ul ; move 0 , ul / 4 )  | ( move 3 , 3 ; ( move ua , ul ; v0 = ul ) )  | ( move 3 , 2 + ul ; ( move ua , ul ; pen 2 ) )  | ( move 3 , 2 + ul ; v0 = ul ; move ua , ul )  | ( pen ua + 3 ; move 3 , 3 ; move ua , ua + ul )  | ( pen 4 + ul ; move 3 , 3 ; move ua , ua + ul )  | ( pen ul ; move 2 + ul , 3 ; move ua , ua + ul )  | ( move 3 , 2 + ul ; v0 = ul ; move ua , v0 )  | ( v0 = 3 ; ( move v0 , v0 ; move ua , ul ) )  | ( ( move 3 , 3 ; move ua , ul ) ; v0 = ua + ul )  | ( move 4 - ul , 3 ; v0 = 3 - 2 ; move ua , v0 )  | ( move ul + ul , 2 + ul ; move ul , ua ; move ua , ul )  | ( pen ul ; move 3 , 3 ; ( move ua , ua + ul ; pen ul ) )  | ( ( v0 = 3 ; move 3 , v0 ; pen ua ) ; move ua , ul )  | ( ( move 3 , 3 ; v0 = ul ; move ua , v0 ) ; pen ua )  | ( ( move 3 , 3 ; pen 3 ; move ua , ul ) ; pen ua ; pen 0 )  
[475] ( move 2 , ul ; move 3 , ul )  | ( move 2 , ul ; move 3 , 4 - 3 )  | ( move 2 , 2 - ul ; move 3 , ul )  | ( move 2 , ul ; move 2 + ul , ul )  | ( move 2 , ul ; move 3 , ua + ul )  | ( move 2 , ul - ua ; move 3 , ul )  | ( move ul + ul , ul ; move 3 , ul )  | ( move ul + ul , ul ; move 4 - ul , ul )  | ( move 2 , ul ; move 3 , ul ; v0 = 2 )  | ( move 2 , ul ; ( pen 2 ; move 3 , ul ) )  | ( move 2 , ul ; move 3 , ul ; v0 = ul )  | ( move 2 , ul ; move 2 , ul ; move ul , ua )  | ( move 2 , ul ; pen ul + ul ; move 3 , ul )  | ( move ul + ul , ul ; pen 4 ; move 3 , ul )  | ( move 2 , ul ; v0 = 3 ; move v0 , ul )  | ( move ul + ul , ul ; pen ua ; move 3 , ul )  | ( pen 4 ; move 3 - ul , ul ; move 3 , 3 - 2 )  | ( move 2 , ul ; move 3 , ul ; v0 = 2 / ua )  | ( move ul + ul , ul ; move 3 , ul ; pen ua - 2 )  | ( ( move ul + ul , ul ; pen ul ) ; move 3 , ul )  | ( move ul , ul ; move ul , ua ; move 2 + ul , ul )  | ( ( move 2 , ul ; move 3 , ul ) ; v0 = ua / 4 )  | ( move ul + ul , ul ; move ul , 2 - ul ; move 2 , 0 )  | ( v0 = ul ; move 2 , v0 ; move v0 + 2 , v0 )  | ( ( move 0 , ua ; move ul + ul , ul ) ; move 3 , ul )  | ( ( pen 2 ; move 2 , ul ; move 3 , ul ) ; move 0 , ua )  | ( move ul , ua + ul ; move ul , ua ; move 2 + ul , ul )  | ( move 2 , ul ; ( move 3 , ul ; pen 4 / 3 ) ; pen ua )  | ( pen 4 + ul ; move 2 , ul ; ( move 3 , ul ; pen ua ) )  | ( ( v0 = ul ; move ul + v0 , ul ) ; move 3 , v0 )  | ( move 2 , ul ; ( move 3 , ul ; v0 = 3 - ul ) ; pen 0 )  | ( ( ( pen ul ; move ul , ul ) ; move ul , 0 ) ; move 3 , ul )  
[476] ( move ua , ul ; move 2 , 4 )  | ( move ua , 3 - 2 ; move 2 , 4 )  | ( move ua , ul ; move 2 , 2 * 2 )  | ( move ua , ul ; move 2 , ua + 4 )  | ( move ua , ul ; move 2 , 3 + ul )  | ( move ua , ua + ul ; move 2 , 4 )  | ( move ua , ul - ua ; move 2 , 4 )  | ( move ua , ul ; move ul + ul , 4 )  | ( move ua , ua + ul ; move 2 , 4 - ua )  | ( move ua , ul ; move ul + ul , 3 + ul )  | ( move ua , ul - ua ; move ul + ul , 4 )  | ( move ua , ul ; move 2 , 4 ; v0 = 0 )  | ( pen 3 ; move ua , ul ; move 4 / 2 , 4 )  | ( pen 3 ; move ua , ul ; move 2 , 4 - ua )  | ( move ua , ul ; move 3 - ul , 4 ; pen 3 )  | ( ( move ua , ul ; move 2 , 4 ) ; pen ua )  | ( ( pen ua ; move ua , ul ) ; move 2 , 4 )  | ( ( move ua , ul ; pen ul ) ; move 2 , 4 )  | ( pen ul / ua ; move ua , ul ; move 2 , 4 )  | ( move ua , ul ; move ul , 4 ; move ul , ua )  | ( move ua , ul ; v0 = 2 ; move v0 , 4 )  | ( move ua , ul ; pen ua ; move ul + ul , 4 )  | ( move ua , ul ; pen ul ; move ul + ul , 4 )  | ( move ua , ul ; ( move 2 , 4 ; move 0 , ul ) )  | ( move ua , 2 - ul ; move 2 , 4 ; v0 = ul )  | ( move ua , ul ; pen 4 / 2 ; move ul + ul , 4 )  | ( move ua , ul ; move 2 , 4 - ua ; move 3 / ua , 3 )  | ( move ua , ul ; ( move 2 , 4 ; v0 = ul / ua ) )  | ( ( move ua , ul ; move ul , 4 ) ; move ul , 0 ; pen 4 )  | ( move ua , ul ; ( move 4 - 2 , 4 ; v0 = ua + ua ) )  | ( ( v0 = 2 ; move ua , ul ) ; move v0 , v0 * v0 )  
[477] ( move ua , 4 ; move ua , 3 )  | ( move ua , ua + 4 ; move ua , 3 )  | ( move ua , 4 ; move ua , ua + 3 )  | ( move ua , 4 ; move ua , 2 + ul )  | ( move ua , 4 ; move ua , 3 - ua )  | ( move ua , 4 - ua ; move ua , 3 )  | ( pen ul ; move ua , 4 ; move ua , 3 )  | ( move ua , ua + 4 ; move ua , 2 + ul )  | ( move ua , 3 + ul ; move ua , 2 + ul )  | ( move ua , 4 ; move ua , 3 ; v0 = 0 )  | ( v0 = 3 ; move ua , 4 ; move ua , 3 )  | ( move ua , 4 ; move 0 , ua ; move ua , 3 )  | ( move ua , 4 ; move ua , ua + 3 ; pen 3 )  | ( move ua , ua + 4 ; move ua , 3 ; pen ul )  | ( move ua , 4 ; move ua , 2 + ul ; v0 = 4 )  | ( move ua , ua + 4 ; move ua , 3 ; v0 = 4 )  | ( move ua , 4 ; move ua , ua + 3 ; v0 = ul )  | ( pen ul ; ( pen ua ; move ua , 4 ) ; move ua , 3 )  | ( pen ua + 4 ; ( move ua , 4 ; move ua , 4 - ul ) )  
[478] ( move ul , 2 ; move ua , 4 )  | ( move ul , 2 ; move ua , 2 + 2 )  | ( move ul , ua + 2 ; move ua , 4 )  | ( move ul , 2 ; move ua , ua + 4 )  | ( move ul , 2 ; move ua , 3 + ul )  | ( move ul , ul + ul ; move ua , 4 )  | ( move ul , 2 ; move ua , 4 ; pen 4 )  | ( pen ua ; move ul , 2 ; move ua , 4 )  | ( pen ul ; move ul , 2 ; move ua , 4 )  | ( move ul , ul + ul ; move ua , 3 + ul )  | ( move ul , 2 ; move ua , 4 ; move 0 , ua )  | ( pen 4 ; move ul , 3 - ul ; move ua , 4 )  | ( move ul , 2 ; pen ua ; move ua , 3 + ul )  | ( move ul , 2 ; ( move ua , 4 ; v0 = 0 ) )  | ( move ul , 2 ; move ua , 3 + ul ; v0 = ul )  | ( move ul , ul + ul ; move 0 , ul ; move ua , 3 )  | ( move ul , ul + ul ; pen ua - ul ; move ua , 4 )  | ( pen ul ; ( move ul , 2 ; pen ua ) ; move ua , 4 )  | ( pen ua + 4 ; ( move ul , 2 - ua ; move ua , 4 ) )  | ( move 2 - ul , 2 ; ( move ua , 4 ; pen 4 * 2 ; pen 4 ) )  | ( move ul , 2 ; ( v0 = 4 ; pen v0 ; move ua , v0 ) )  | ( ( move 3 - 2 , 2 ; pen ua ) ; move ua , 4 ; pen 2 - ul )  
[479] ( move ua , 2 ; move ul , 4 )  | ( move ua , 2 ; move ul , ua + 4 )  | ( move ua , 2 ; move ul , 3 + ul )  | ( move ua , ua + 2 ; move ul , 4 )  | ( move ua , 2 ; move ul , 4 - ua )  | ( move ua , ul + ul ; move ul , 4 )  | ( move ua , 2 ; move 2 - ul , 3 + ul )  | ( move ua , 3 - ul ; move ul , ua + 4 )  | ( move ua , ul + ul ; move ul , 3 + ul )  | ( move ua , 2 ; move 0 , 4 ; move ul , ua )  | ( pen 2 ; move ua , 2 ; move ul , 3 + ul )  | ( move ua , 2 ; move ul , 4 ; pen ul - 3 )  | ( move ua , 2 ; pen ua * 3 ; move ul , 4 )  | ( move ua , 2 ; pen 4 - ul ; move ul , 4 )  | ( ( pen ua ; move ua , 2 ) ; move ul , 4 )  | ( move ua , 2 ; pen ua ; move ul , ua + 4 )  | ( pen ul ; move ua , 2 ; move ul , 3 + ul )  | ( move ua , 2 ; v0 = ul ; move v0 , 4 )  | ( move ua , 2 ; ( move ul , 4 ; v0 = 0 ) )  | ( move ua , 2 ; move ul , ua + 4 ; move 0 , 0 )  | ( pen ua + 3 ; ( move ua , 2 ; move ul , 4 ) )  | ( pen ua * ua ; move ua , 4 - 2 ; move ul , 4 )  | ( ( move ua , 2 ; v0 = 4 ) ; move ul , v0 )  | ( move ua , ul + ul ; v0 = 4 ; move ul , v0 )  | ( v0 = ua ; move v0 , 2 ; move ul , 4 + v0 )  | ( move ua , 2 ; v0 = 2 ; move ul , v0 * v0 )  | ( v0 = 2 ; ( move ua , 2 ; move ul , ua + 4 ) )  | ( move ua , 2 ; move ul , 4 - ua ; v0 = 2 + ul )  | ( move ua , 3 - ul ; ( pen 2 ; move ul , 4 - ua ) )  | ( ( pen 2 ; move ua , ul + ul ) ; move ul , ua + 4 )  | ( pen ul ; move 0 , ul ; ( move ua , ul ; move ul , 4 ) )  
[480] ( move ua , 4 ; move 2 , ul )  | ( move ua , 2 + 2 ; move 2 , ul )  | ( move ua , 2 * 2 ; move 2 , ul )  | ( move ua , 4 ; move 3 - ul , ul )  | ( move ua , 4 ; move ul + ul , ul )  | ( pen 3 ; move ua , 4 ; move 2 , ul )  | ( move ua , 4 ; move 2 , ul ; pen ul )  | ( move ua , 3 + ul ; move 2 , 3 - 2 )  | ( ( move ua , 4 ; pen ul ) ; move 2 , ul )  | ( pen 4 ; move ua , 4 ; move ul + ul , ul )  | ( move ua , 4 ; move ua / 3 , ul ; pen ua )  | ( move ua , 4 ; move 0 , 2 - 3 ; move 2 , 2 )  | ( move ua , 3 + ul ; move ul + ul , 4 - 3 )  | ( move ua , 4 ; move 0 , ul ; move 4 - 2 , 0 )  | ( move ua , 4 ; move 4 - 2 , ul ; v0 = 0 )  | ( move ua , 3 + ul ; move 2 , ul ; v0 = 4 )  | ( move ua , 4 ; move 2 , ul ; v0 = 4 / ua )  | ( move ua , 4 ; move 2 , ul ; v0 = ua + ul )  | ( move ua , 4 ; move 2 , ul ; v0 = ua * ua )  | ( pen ua ; ( move ua , 4 ; move 2 , ua + ul ) )  | ( move ua , 4 ; ( move 2 , ul ; pen ul + ul ) )  | ( move ua , 4 ; ( pen 3 ; move ul + ul , ul ) )  | ( move ua , 4 ; ( move ul , ul ; move ul , ua ) )  | ( ( move ua , 4 ; move ul , ul ) ; move ul , ua )  | ( move ua , 4 - ua ; v0 = ul ; move 2 , v0 )  | ( move ua , 2 + 2 ; move 2 , ul - ua ; v0 = ua )  | ( move ua , 4 ; ( v0 = 2 ; move v0 , ua + ul ) )  | ( ( move ua , 4 ; v0 = ua ; move 2 , ul ) ; pen v0 )  | ( move ua , 4 ; ( v0 = 2 ; move v0 , ul ; pen ul ) )  | ( move ua , 2 * 2 ; ( move 2 , ul ; pen 0 ; v0 = 3 ) )  | ( move ua , 3 + ul ; v0 = 0 ; ( move 2 , ul ; pen ul ) )  | ( move ua , 3 + ul ; move 2 , ul ; ( pen ul ; move 0 , ul ) )  
[481] ( move 3 , ul ; move 2 , ul )  | ( move 2 + ul , ul ; move 2 , ul )  | ( move 3 , ul - ua ; move 2 , ul )  | ( move 4 - ul , ul ; move 2 , ul )  | ( move 3 , ul ; move 3 - ul , ul )  | ( move 3 , ul ; move ua / 3 , ul )  | ( move 3 , ul ; move ul + ul , ul )  | ( move 3 , ul ; move 2 , ul ; pen 0 )  | ( move 3 , ul ; pen 3 ; move 2 , ul )  | ( move 3 , ul ; move 2 , ul ; pen ul )  | ( move 3 , ul ; move ul + ul , ul - ua )  | ( move 3 , ul ; move 2 , ul ; move 0 , ul )  | ( move 3 , ul ; move 2 , ul ; v0 = ul )  | ( move 3 , ul ; move ul , ul ; move ul , 0 )  | ( pen ua * ua ; move 3 , ul ; move 2 , ul )  | ( move 3 , ul ; move ul , ul ; move ul , ua )  | ( move 3 , ul ; v0 = 2 ; move v0 , ul )  | ( pen ua ; move 3 , ul ; move ul + ul , ul )  | ( move 3 , ul ; move 2 , 4 - 3 ; v0 = ua )  | ( ( move 3 , ul ; pen ua * 3 ) ; move 2 , ul )  | ( move 2 , ua + ul ; move ul , 0 ; move 2 , ul )  | ( move 3 , ul - ua ; move 2 , ul ; move 0 , ua )  | ( move 3 , ul ; v0 = ua + ul ; move 2 , ul )  | ( move 3 , ul - ua ; move 2 , ul ; pen 3 + ul )  | ( move 4 - ul , ul ; pen ul ; move 4 - 2 , ul )  | ( move 3 , ul ; v0 = ua + ul ; move 2 , v0 )  | ( move 3 , ul ; ( pen 2 ; move 2 , ul ; pen ul ) )  | ( v0 = ul ; move 3 , ul ; move v0 + v0 , ul )  | ( move 3 , ua + ul ; ( move 2 , ul ; v0 = ua ) )  | ( move 2 + ul , ul ; v0 = ul - ua ; move 2 , ul )  | ( ( move 3 , ul ; pen ua ) ; move 0 , ul ; move 2 , ua )  | ( move 2 + ul , ul ; move ul + ul , ul ; v0 = 4 - ua )  
[482] ( move ua , 3 ; move ua , 4 )  | ( move ua , 3 ; move ua , 3 + ul )  | ( move ua , 2 + ul ; move ua , 4 )  | ( move ua , 3 - ua ; move ua , 4 )  | ( move ua , 3 ; pen 3 ; move ua , 4 )  | ( pen 3 ; move ua , 3 ; move ua , 4 )  | ( move ua , 3 ; move 0 , 4 ; move ua , 0 )  | ( move 0 , 0 ; move ua , 3 ; move ua , 4 )  | ( ( move ua , 3 ; pen 4 ) ; move ua , 4 )  | ( move 0 , 2 ; move ua , ul ; move ua , 4 )  | ( v0 = ul ; move ua , 3 ; move ua , 4 )  | ( move ua , 2 + ul ; move ua , 4 ; pen 2 )  | ( ( move ua , 3 ; move ua , 4 ) ; pen ul )  | ( pen ul / ua ; move ua , 3 ; move ua , 4 )  | ( v0 = 4 ; move ua , 3 ; move ua , v0 )  | ( move ua , 3 ; v0 = 4 ; move ua , v0 )  | ( move ua , 3 ; move ua , 2 + 2 ; move 0 , 4 )  | ( ( move ua , 3 ; move 0 , ul ) ; move ua , 3 )  | ( move ua , 3 ; move ua , 3 + ul ; move 0 , ua )  | ( ( move ua , 3 ; move ua , 4 ) ; pen ua * ua )  | ( move ua , 2 + ul ; ( v0 = 0 ; move ua , 4 ) )  | ( ( move ua , ua + 3 ; pen 4 ) ; pen ul ; move ua , 4 )  
[483] ( move ul , 2 ; move 3 , ul )  | ( move ul , 2 ; move 3 , 2 - ul )  | ( move ul , 4 / 2 ; move 3 , ul )  | ( move ul , 2 ; move 3 , ua + ul )  | ( move ul , ua + 2 ; move 3 , ul )  | ( move ul , 2 ; move 2 + ul , ul )  | ( move ul , 2 ; move 3 , ul - ua )  | ( move ul , 2 ; move 4 - ul , ul )  | ( move ul , ul + ul ; move 3 , ul )  | ( move ul , 2 ; move 3 , ul ; pen 3 )  | ( pen ul ; move ul , 2 ; move 3 , ul )  | ( move ul , 2 ; pen ul ; move 3 , ul )  | ( move ul , 2 ; move 3 , ul ; pen ul )  | ( move 4 - 3 , 3 - ul ; move 3 , ul )  | ( move ul , 4 / 2 ; move 2 + ul , ul )  | ( move ul , 4 - 2 ; move ua / 2 , ul )  | ( move ul , 2 ; move 2 + ul , ua + ul )  | ( move ul , 3 - ul ; move 3 , ul - ua )  | ( move ul , 2 ; move 3 , ul ; move 0 , 2 )  | ( move ul , 2 ; move 3 , ul ; v0 = 0 )  | ( move ul , 2 ; move 3 , ul ; v0 = ul )  | ( move ul , 2 ; move 3 , ul ; pen 4 - ul )  | ( move ul , 2 ; pen ul ; move 3 , ul - ua )  | ( pen ul ; move ul , 3 - ul ; move 3 , ul )  | ( move ul , ul + ul ; move 4 - ul , ul - ua )  | ( move ul , 2 ; v0 = ua - ul ; move 3 , ul )  | ( move ul , 3 - ul ; move 3 , ua + ul ; pen 4 )  | ( pen 3 ; ( move ul , 2 ; pen ul + ul ) ; move 3 , ul )  | ( ( move ul , ul + ul ; move 2 + ul , ul ) ; v0 = ua )  | ( ( move ul , 2 ; pen ua ) ; move 3 , ul ; v0 = 4 + 2 )  | ( move ul , 2 ; move 2 + ul , ul ; ( move 0 , 2 ; pen ul ) )  | ( ( pen ul ; move ul , ul + ul ) ; ( pen ul ; move 3 , ul ) )  
[484] ( move ua , ul ; move 3 , 3 )  | ( move ua , ul ; move 4 , 3 )  | ( move ua , ul ; move 3 , ua + 3 )  | ( move ua , ua + ul ; move 3 , 3 )  | ( move ua , ul ; move 3 , 2 + ul )  | ( move ua , ul ; move 4 - ul , 3 )  | ( move ua , ul ; move 3 , 4 - ul )  | ( pen 2 ; move ua , ul ; move 3 , 3 )  | ( pen ua ; move ua , ul ; move 3 , 3 )  | ( move ua , ul ; move 2 + ul , 3 - ua )  | ( move ua , ul ; move 4 - ul , 2 + ul )  | ( move 0 , 0 ; move ua , ul ; move 4 , 3 )  | ( move 0 , ul ; move ua , ua ; move 3 , 3 )  | ( v0 = ul ; move ua , ul ; move 3 , 3 )  | ( pen ul ; move ua , ul ; move 3 , 2 + ul )  | ( move ua , ua + ul ; move 3 , 3 ; pen ul )  | ( move ua , ul ; v0 = 3 ; move v0 , 3 )  | ( move ua , ul - ua ; move 4 - ul , ua + 3 )  | ( v0 = 3 ; move ua , ul ; move v0 , v0 )  | ( move ua , ul ; v0 = 3 ; move v0 , v0 )  | ( move ua , ul ; move 2 + ul , 3 ; v0 = 3 )  | ( ( move ua , ul ; move 0 , 2 ) ; move 3 , ul )  | ( move ua , ul ; ( move 3 , 3 ; pen 3 / ua ) )  | ( move ua , 2 - ul ; move 3 , 3 ; pen ul + ul )  | ( move ua , ul ; ( move 3 , 3 ; pen ul + ul ) )  | ( pen ul ; move ua , ul ; move 2 + ul , 3 - ua )  | ( move ua , ul ; v0 = 3 ; move 3 , v0 + ua )  | ( ( move ua , ul ; move 3 , 2 + ul ) ; move 0 , 4 )  | ( move ua , ul ; v0 = 4 - ul ; move v0 , v0 )  | ( ( pen 2 * 2 ; move ua , ua + ul ) ; move 2 + ul , 3 )  | ( pen 4 ; ( move ua , ul ; move 3 , 2 + ul ) ; v0 = 4 )  | ( move ua , ul ; ( pen 3 ; v0 = ul + ul ; move 3 , 3 ) )  
[485] ( move 3 , ul ; move ul , 3 )  | ( move 3 , ul ; move 4 - 3 , 3 )  | ( move 3 , ul ; move ul - 2 , 0 )  | ( move 3 , ul ; move ul , 2 + ul )  | ( move 3 , ul ; move ul , ua + 3 )  | ( move 2 + ul , ul ; move ul , 3 )  | ( move 3 , ua + ul ; move ul , 3 )  | ( move 3 , ul - ua ; move ul , 3 )  | ( move ua / 2 , ul ; move ul , 3 )  | ( move 4 - ul , ul ; move ul , 3 )  | ( move 3 , ul ; move ul , 3 ; pen ul )  | ( pen ul ; move 3 , ul ; move ul , 3 )  | ( move 3 - 4 , 4 ; move 3 , ul / ua )  | ( move 2 + ul , ul ; move 2 - ul , 3 )  | ( move 3 , ua + ul ; move 3 - 4 , ua )  | ( move 2 + ul , ul ; move ul , ua + 3 )  | ( move 3 , ul ; move ul , 3 ; move 0 , 2 )  | ( move 3 , ul ; move ul , 3 ; v0 = 2 )  | ( v0 = ul ; move 3 , v0 ; move ul , 3 )  | ( v0 = 3 ; move 3 , ul ; move ul , v0 )  | ( v0 = 3 ; move v0 , ul ; move ul , v0 )  | ( move 3 , ul ; move 2 - ul , 4 - ul ; pen 0 )  | ( move 3 , ul ; move ul , 2 + ul ; pen ul - ua )  | ( move 3 , ul ; ( v0 = ul ; move v0 , 3 ) )  | ( move 3 , ul ; v0 = ul ; move v0 , v0 + 2 )  | ( move ua / 2 , ul ; move ul , 3 ; v0 = 3 * 2 )  | ( ( move 3 , ul ; move ul , 2 + ul ) ; v0 = 2 )  | ( v0 = ul ; move v0 + 2 , v0 ; move v0 , 3 )  | ( move 2 + ul , ul ; ( pen 2 ; pen 2 ; move ul , 3 ) )  | ( v0 = 0 - 3 ; move 2 + v0 , 4 ; move v0 , v0 )  | ( move 3 , ul ; move 0 , 0 ; ( move ul , 3 ; pen ul / ua ) )  | ( ( move 3 , ul ; move ul , 3 ) ; v0 = ua + 2 ; pen ul )  
[486] ( move ul , ul ; move 4 , 2 )  | ( move 4 - 3 , ul ; move 4 , 2 )  | ( move ul , ul ; move 4 , 2 - ua )  | ( move ul , ul ; move 4 , ul + ul )  | ( move ul , ul ; move 4 , 2 ; pen 0 )  | ( pen 2 ; move ul , ul ; move 4 , 2 )  | ( move ul , ul ; pen ua ; move 4 , 2 )  | ( move ul , ua + ul ; move 3 + ul , 2 )  | ( move ul , ul ; move 3 + ul , 3 - ul )  | ( move 3 - 2 , ul ; move 4 , 2 ; pen 0 )  | ( move ul , ua + ul ; move 4 , ul + ul )  | ( move ul , ul ; move 3 + ul , ul + ul )  | ( move ul , ul ; move 4 , 2 ; move 0 , 4 )  | ( move ul , ul ; move 4 , 2 ; v0 = 0 )  | ( move ul , ul ; move 4 , 2 ; v0 = 3 )  | ( move ul , 3 - 2 ; pen ua ; move 4 , 2 )  | ( move 0 , ua ; move ul , ul ; move 4 , 2 )  | ( move ul , ul ; move 4 , 2 ; v0 = ua )  | ( move ul , ul ; move 4 , ul + ul ; pen 0 )  | ( move ul , ul ; move 4 , 2 ; pen ua - ul )  | ( move ul , ul ; pen 4 ; move 4 , ul + ul )  | ( move ul , ul ; ( move 2 + 2 , 2 ; pen 0 ) )  | ( move ul , ul ; v0 = ua + 4 ; move 4 , 2 )  | ( move ul , ul ; move 4 , ua + 2 ; v0 = ua )  | ( move ul , ul ; move 4 , ul + ul ; v0 = 3 )  | ( move ul , ul ; v0 = 3 + ul ; move v0 , 2 )  | ( move ul , ul ; v0 = ua ; move 4 , 2 - v0 )  | ( move ul , ul ; pen ul ; ( move 4 , 2 ; pen ul ) )  | ( move ul , ul ; ( move 0 , 2 ; move 3 + ul , ua ) )  | ( ( move ul , ul ; pen 2 - ul ) ; move 4 , 3 - ul )  | ( move ul , ul - ua ; move 4 , 2 ; v0 = ua - ul )  | ( move ul , ul ; ( v0 = ua ; move 4 , 2 ; v1 = ua ) )  
[487] ( move ua , 3 ; move 4 , ul )  | ( move ua , 3 ; move 4 , ua + ul )  | ( move ua , ua + 3 ; move 4 , ul )  | ( move ua , 3 ; move 3 + ul , ul )  | ( move ua , 2 + ul ; move 4 , ul )  | ( move ua , 3 ; move 4 , ul - ua )  | ( move ua , 4 - ul ; move 4 , ul )  | ( pen ul ; move ua , 3 ; move 4 , ul )  | ( move ua , 4 - ul ; move 2 + 2 , ul )  | ( move ua , 4 - ul ; move 3 + ul , ul )  | ( move ua , 3 ; move 4 , ul ; v0 = 0 )  | ( move ua , 3 ; move 4 , ul ; v0 = 2 )  | ( move ua , 3 ; move 4 , ul ; v0 = ua )  | ( move ua , 3 ; move 4 , ul ; pen ua * ua )  | ( pen 4 ; move ua , ua + 3 ; move 4 , 4 - 3 )  | ( move ua , 3 ; v0 = 2 ; move 4 , ua + ul )  | ( move ua , 3 ; move 2 * 2 , ul ; v0 = ul )  | ( ( move ua , 2 + ul ; move 4 , ul ) ; pen 0 )  | ( pen 3 * 3 ; move ua , 3 ; move 3 + ul , ul )  | ( move ua , 2 + ul ; move 4 , ul ; v0 = ul )  | ( move ua , 3 ; v0 = 4 ; move 4 , v0 / 4 )  | ( ( pen ul ; move ua , 3 ) ; move 4 , ul - ua )  | ( v0 = 4 - ul ; move ua , v0 ; move 4 , ul )  | ( move ua , 3 ; move 3 + ul , ua + ul ; pen ul + ul )  | ( move ua , 3 ; ( move 2 * 2 , ul ; v0 = ul - ua ) )  | ( move 0 , 2 ; ( move ua , ul ; pen 3 ; move 4 , ua + ul ) )  | ( move ua , 3 ; ( pen 2 + ul ; move 4 , ul ) ; v0 = ua )  | ( ( move 0 , ua ; pen ua + ua ; move ua , 3 ) ; move 4 , ul )  
[488] ( move 4 , 3 ; move ua , ul )  | ( move 4 , 3 ; move ua , ua + ul )  | ( move 4 , 2 + ul ; move ua , ul )  | ( move 3 + ul , 3 ; move ua , ul )  | ( move 4 , ua + 3 ; move ua , ul )  | ( move 4 , 4 - ul ; move ua , ul )  | ( move 4 , 3 ; pen ul ; move ua , ul )  | ( move 4 , 3 ; move ua , ul ; pen ul )  | ( move 3 + ul , 4 - ul ; move ua , ul )  | ( move 4 , 3 ; v0 = 0 ; move ua , ul )  | ( move 4 , 3 ; move 0 , ul ; move ua , ua )  | ( move 4 , 3 ; move ua , ul ; v0 = ul )  | ( move 3 + ul , 3 - ua ; move ua , 3 - 2 )  | ( move 4 , 3 ; move 0 , ua + ul ; move ua , ua )  | ( move 4 , 2 + ul ; move ua , ul ; pen 4 + ul )  | ( move 4 , 3 ; v0 = 0 ; move v0 + ua , ul )  | ( move 4 , 2 + ul ; move ua , ul ; v0 = 0 - 2 )  | ( move 0 , ua ; ( move 4 , 2 + ul ; move ua , ul ) )  | ( move 0 , ua + 2 ; ( move 4 , ul ; move ua , ul ) )  | ( move 4 , 3 ; ( move ua , ul ; move 0 , ul - ua ) )  | ( move 3 + ul , 3 ; ( move ua , ul ; v0 = ul ) )  | ( move 3 + ul , 3 ; move ua , ua + ul ; v0 = 3 / ua )  | ( ( move 3 + ul , 2 + ul ; move ua , ul ) ; v0 = ul )  | ( ( pen ua ; move 4 , 2 + ul ) ; move ua , ul ; v0 = ua )  
[489] ( move ul , 2 ; move 4 , ul )  | ( move ul , 2 ; move 2 + 2 , ul )  | ( move ul , 2 ; move 3 + ul , ul )  | ( move ul , 2 ; move 4 , ua + ul )  | ( move ul , ul + ul ; move 4 , ul )  | ( move ul , 2 ; move 4 , ul ; pen 2 )  | ( move ul , 2 ; move 4 , ul ; pen 4 )  | ( move ul , 2 ; move 4 , ul ; pen ua )  | ( move ul , 2 ; pen ul ; move 4 , ul )  | ( pen ul ; move ul , 2 ; move 4 , ul )  | ( move ul , 4 - 2 ; move 3 + ul , ul )  | ( move ul , 3 - ul ; move 3 + ul , ul )  | ( move ul , 2 ; move 4 , 3 - 2 ; pen 2 )  | ( move ul , 2 ; move 0 , ul ; move 4 , 0 )  | ( move 0 , ua ; move ul , 2 ; move 4 , ul )  | ( v0 = ul ; move ul , 2 ; move 4 , ul )  | ( move ul , 2 ; v0 = ul ; move 4 , ul )  | ( move ul , 2 ; pen ua + 3 ; move 4 , ul )  | ( move 0 , ul ; move ul , ul ; move 4 , ul )  | ( move ul , 2 ; v0 = ul ; move 4 , v0 )  | ( move ul , ul + ul ; pen ul ; move 4 , ul )  | ( ( move ul , 2 ; move 4 , ul ) ; v0 = 0 )  | ( pen 3 - ul ; move ul , 2 ; move 4 , 3 - 2 )  | ( move ul , 3 - ul ; move 0 , ul ; move 4 , 0 )  | ( move ul , ul + ul ; v0 = 0 ; move 4 , ul )  | ( move ul , 3 - ul ; v0 = ua ; move 4 , ul )  | ( move ul , 2 ; ( v0 = ul ; move 4 , v0 ) )  | ( v0 = ul ; move ul , v0 + v0 ; move 4 , v0 )  | ( ( move ul , 2 ; move 0 , ua + ul ) ; move 3 + ul , 0 )  | ( ( move ul , 2 ; move 4 , ul ; v0 = ul ) ; pen v0 )  | ( ( move ul , ul + ul ; v0 = 0 ) ; move 4 - v0 , ul )  | ( ( move ul , 2 ; move ul , ul ; pen ua + ua ) ; move 3 , 0 )  
[490] ( move 4 , ul ; move ul , 2 )  | ( move 4 , ul ; move 4 - 3 , 2 )  | ( move 4 , 4 - 3 ; move ul , 2 )  | ( move 4 , ul ; move ul , ua + 2 )  | ( move 3 + ul , ul ; move ul , 2 )  | ( move 4 , ul ; move ul , ua - 4 )  | ( move 4 , ul ; move ul , ul + ul )  | ( move 4 , ul ; pen ul ; move ul , 2 )  | ( move 2 + 2 , ul ; move ul , ua + 2 )  | ( move 3 + ul , ul ; move ul , 3 - ul )  | ( move 4 , ul ; move 0 , 0 ; move ul , 2 )  | ( move 4 , ul ; move 0 , 2 ; move ul , ua )  | ( move 3 , ul ; move ul , 0 ; move ul , 2 )  | ( move 4 , ul ; v0 = ua ; move ul , 2 )  | ( pen 4 + ul ; move 4 , ul ; move ul , 2 )  | ( move ul , ul ; move 3 , ua ; move ul , 2 )  | ( move 4 , ul ; move ul , ul + ul ; pen 3 )  | ( move 4 , ul ; move ul , ul + ul ; pen ua )  | ( pen 3 + 2 ; move 2 * 2 , ul ; move ul , 2 )  | ( move 4 , ul ; move ul , 2 ; v0 = 2 - ul )  | ( move 4 , ul ; move ul , 2 ; move 0 , ul + ul )  | ( move 4 , ul - ua ; move ul , 2 ; v0 = ua )  | ( move 4 , ul ; move ul , ua + 2 ; pen 2 - ul )  | ( move 4 , ul ; move 0 , ua + ul ; move ul , ul )  | ( pen ul / ua ; move 4 , ul ; move ul , ul + ul )  | ( move ul , ul ; move 4 - ul , 0 ; move ul , 3 - ul )  | ( move 3 + ul , ul ; move ul , ua + 2 ; v0 = ul )  | ( v0 = ul ; move 4 * v0 , v0 ; move v0 , 2 )  | ( ( move 4 , ul ; move ul , 2 ; v0 = ul ) ; pen 2 )  | ( ( move 4 - ul , ua + ul ; move ul , ua ) ; move ul , 2 )  | ( ( move 4 , ua + ul ; pen ua + 4 ) ; pen ul ; move ul , 2 )  
[491] ( move 4 , ul ; move ua , 3 )  | ( move 2 + 2 , ul ; move ua , 3 )  | ( move 4 , ul ; move ua , ua + 3 )  | ( move 4 , ua + ul ; move ua , 3 )  | ( move 4 , ul ; move ua , 2 + ul )  | ( move 4 + ul , ul ; move ua , 3 )  | ( move 0 , 0 ; move 4 , ul ; move ua , 3 )  | ( move 3 + ul , ul ; pen 3 ; move ua , 3 )  | ( ( pen ul ; move 4 , ul ) ; move ua , 3 )  | ( move 4 , ul ; ( move ua , 3 ; v0 = 3 ) )  | ( move 0 , ul ; move 4 , 0 ; move ua , 4 - ul )  | ( move 4 , ul ; move 0 , ua ; move ua , 2 + ul )  | ( move 4 , ul - ua ; move ua , ua + 3 ; pen 4 )  | ( move 3 + ul , ul ; ( move ua , 3 ; v0 = 0 ) )  | ( v0 = ua ; ( move 4 , ul ; pen v0 ) ; move v0 , 3 )  
[492] ( move ul , ul ; move 3 , 3 )  | ( move ul , ul ; move 2 + ul , 3 )  | ( move ul , ul ; move 3 , 2 + ul )  | ( move ul , ul - ua ; move 3 , 3 )  | ( move ul , ul ; move 3 , 4 - ul )  | ( move ul , ul ; move 4 - ul , 3 )  | ( move ul , ul ; move 3 , 3 ; pen 3 )  | ( pen ua ; move ul , ul ; move 3 , 3 )  | ( move ul , ul ; pen ul ; move 3 , 3 )  | ( move ul , ul ; move 2 + ul , 2 + ul )  | ( move ul , ul ; move 3 , 3 ; v0 = ul )  | ( move ul , ul ; move 3 , ua + 3 ; pen 3 )  | ( move ul , ul ; move ul , 3 ; move 2 , ua )  | ( pen ul ; move ul , ul ; move 2 + ul , 3 )  | ( move ul , ul ; v0 = 3 ; move v0 , v0 )  | ( v0 = 3 ; move ul , ul ; move v0 , v0 )  | ( move ul , ul ; move 3 , 4 - ul ; v0 = 2 )  | ( move ul , ul ; move 0 , ul - ua ; move 3 , 2 )  | ( move ul , ul - ua ; move 3 , 3 ; move 0 , ul )  | ( move ul , ul ; move 2 + ul , 3 ; v0 = ul )  | ( ( pen ua ; move ul , ul ) ; move 2 + ul , 3 )  | ( move ul , ul ; move ul , 3 - ua ; move 2 , ua )  | ( move ul , ul ; move ul , 4 - ul ; move 2 , ua )  | ( move ul , ul ; v0 = 2 + ul ; move v0 , v0 )  | ( v0 = 2 + ul ; move ul , ul ; move v0 , v0 )  | ( ( v0 = 4 - ul ; move ul , ul ) ; move v0 , v0 )  | ( ( v0 = ul ; move v0 , v0 * v0 ) ; move 3 , 3 )  | ( move ul , 2 - ul ; move ua / 3 , 4 - ul ; move ul , ua )  | ( ( pen 3 ; move ul , ul ) ; v0 = 3 ; move v0 , v0 )  | ( ( move ul , ul ; ( move 0 , 3 ; move 3 , 0 ) ) ; pen ul )  | ( move ul , ul ; ( move 3 , 3 ; move 0 , ua - ul ; pen 4 ) )  | ( ( move 2 - ul , ul ; move 2 , 3 ; pen ul ) ; move ul , ua )  
[493] ( move ua , ul ; move 3 , 4 )  | ( move ua , ul ; move 2 + ul , 4 )  | ( move ua , ua + ul ; move 3 , 4 )  | ( move ua , ul ; move 3 , 4 - ua )  | ( move ua , ul ; pen 3 ; move 3 , 4 )  | ( pen ua ; move ua , ul ; move 3 , 4 )  | ( move ua , ul ; move 3 , 4 ; pen ua )  | ( move ua , ua + ul ; move 3 , 2 + 2 )  | ( move ua , ua + ul ; move 3 , 3 + ul )  | ( ( pen 2 ; move ua , ul ) ; move 3 , 4 )  | ( move ua , ul ; move 0 , 3 ; move 3 , ul )  | ( move ua , ul ; move 0 , ul ; move 3 , 3 )  | ( move ua , ul ; move 4 - ul , 4 ; pen 0 )  | ( move ua , ul ; pen 3 + ul ; move 3 , 4 )  | ( move ua , ul ; move 3 , 4 ; pen 4 - ua )  | ( move ua , ul ; move 2 , 4 ; move ul , ua )  | ( v0 = 3 ; move ua , ul ; move v0 , 4 )  | ( move ua , ul ; move 3 , 3 + ul ; move 0 , 0 )  | ( move ua , ul ; ( move 0 , ua ; move 3 , 4 ) )  | ( move ua , ul ; move 3 , 3 + ul ; v0 = ul )  | ( move ua , ul - ua ; move 3 , 4 ; pen ul - 4 )  | ( move ua , ua + ul ; ( pen ua ; move 3 , 4 ) )  | ( move ua , ul ; ( pen ul ; move 4 - ul , 4 ) )  | ( move ua , ul ; move ul , 4 ; move ua / 3 , ua )  | ( move ua , ua + ul ; v0 = 3 ; move v0 , 4 )  | ( v0 = ul ; move ua , v0 ; move 2 + ul , 4 )  | ( v0 = 2 ; ( move ua , ul ; move 4 - ul , 4 ) )  | ( move ua , ul ; v0 = 3 ; move v0 , v0 + ul )  | ( move ua , ul - ua ; v0 = 2 ; move 3 , v0 + v0 )  | ( ( ( move ua , ul ; pen ua ) ; v0 = 3 ) ; move 3 , 4 )  | ( ( move ua , ul ; pen ua ; move 3 , 4 ) ; v0 = 4 + ul )  | ( move ua , ul ; ( move 2 , 4 ; pen ua + ul ; move ul , ua ) )  
[494] ( move 2 , ul ; move 4 , ul )  | ( move 2 , ul ; move 4 , 2 - ul )  | ( move 2 , ul ; move 3 + ul , ul )  | ( move ul + ul , ul ; move 4 , ul )  | ( move 2 , ul ; move 4 , ul ; pen ul )  | ( pen ul ; move 2 , ul ; move 4 , ul )  | ( move 0 , 0 ; move 2 , ul ; move 4 , ul )  | ( move 2 , ul ; move 4 , ul ; move 0 , ul )  | ( v0 = ul ; move 2 , ul ; move 4 , ul )  | ( move 2 , ul ; move 4 , ul - ua ; pen 3 )  | ( move 2 , ul ; ( pen ul ; move 4 , ul ) )  | ( move 2 , ul ; move 4 , ul ; pen ua + ul )  | ( move 2 , ul ; v0 = ul ; move 4 , v0 )  | ( pen ua ; move ul + ul , ul ; move 4 , ul )  | ( pen ua * 4 ; ( move 2 , ul ; move 4 , ul ) )  | ( move 2 , ul ; move 3 + ul , ul ; pen 3 + ul )  | ( move 4 - 2 , ul ; v0 = ul ; move 4 , v0 )  | ( move ul + ul , ul ; pen ua * 4 ; move 4 , ul )  | ( move 2 , ul ; v0 = ul ; move v0 * 4 , ul )  | ( v0 = 4 ; move ul + ul , ul ; move v0 , ul )  | ( move 2 , ul ; v0 = ul ; move 3 + v0 , v0 )  | ( v0 = ua + ul ; move 2 , v0 ; move 4 , v0 )  | ( v0 = ul ; move v0 * 2 , ul ; move 4 , v0 )  | ( move 0 , ua * 3 ; move 2 , 2 - ul ; move 4 , ul )  | ( move 2 , ua + ul ; move 3 + ul , ul ; v0 = ua )  | ( move ul + ul , ul ; move 2 + 2 , ua + ul ; pen 2 )  | ( v0 = 2 ; move v0 , ul ; move v0 * v0 , ul )  | ( ( pen ua ; move 2 , ul ; v0 = ul ) ; move 4 , ul )  | ( ( move 2 , ul - ua ; move 4 , ul ) ; move 0 , 4 + ul )  | ( move 3 - ul , ul ; move 3 + ul , ul ; v0 = 2 / ua )  | ( pen ua * 4 ; move ul + ul , 2 - ul ; move 4 , ua + ul )  | ( move 2 , ul - ua ; pen ua ; ( move 4 , ul ; pen ul - 2 ) )  
[495] ( move 3 , 3 ; move ul , ul )  | ( move 3 , ua + 3 ; move ul , ul )  | ( move 2 + ul , 3 ; move ul , ul )  | ( move 3 , 3 ; move ul , ua + ul )  | ( move 3 , 2 + ul ; move ul , ul )  | ( move 3 , 3 - ua ; move ul , ul )  | ( move 4 - ul , 3 ; move ul , ul )  | ( move 3 , 4 - ul ; move ul , ul )  | ( move 3 , 3 ; move ul , ul ; pen ua )  | ( move 3 , 3 ; move ul , ul ; pen ul )  | ( move 3 , ua + 3 ; move ul , ua + ul )  | ( move 3 , 2 + ul ; move ul , ua + ul )  | ( move 3 , 4 - ul ; move ul , ul - ua )  | ( move 3 , 3 ; pen 2 ; move ul , 2 - ul )  | ( move 3 , 3 ; pen 4 ; move ul , 2 - ul )  | ( move 3 , 3 ; ( move ul , ul ; pen 4 ) )  | ( move 3 , 3 - ua ; move ul , ul ; pen 3 )  | ( pen ua - ul ; move 3 , 3 ; move ul , ul )  | ( move 3 , 3 ; v0 = ul ; move v0 , v0 )  | ( move 4 - ul , 3 ; move ul , ul ; v0 = 0 )  | ( move 3 , 3 ; v0 = ua ; move ul , ul - ua )  | ( move 3 , 3 ; v0 = 2 ; move v0 - ul , ul )  | ( move 2 + ul , 3 ; v0 = ul ; move ul , v0 )  | ( move 3 , 3 ; ( v0 = ul ; move v0 , v0 ) )  | ( move 4 - ul , 3 ; v0 = ul ; move v0 , v0 )  | ( v0 = 4 - ul ; move v0 , v0 ; move ul , ul )  | ( ( move 2 + ul , 3 ; move ul , ul ) ; move 0 , ul )  | ( move 3 , ua + 3 ; move ul , ul ; move 0 , ul + ul )  | ( move 4 - ul , 3 ; v0 = ul + ul ; move ul , ul )  | ( move 2 + ul , 2 + ul ; ( move ul , ul ; v0 = 0 ) )  | ( ( v0 = 4 - ul ; move v0 , v0 ) ; move ul , ul )  | ( v0 = ul ; ( move 3 , 3 ; pen 3 ) ; move v0 , v0 )  
[496] ( move 3 , ul ; move 3 , ul )  | ( move 3 , ul ; move 3 , 3 - 2 )  | ( move 3 , ul ; move 3 , 2 - ul )  | ( move 3 , ua + ul ; move 3 , ul )  | ( move 3 , ul ; move 2 + ul , ul )  | ( move 2 + ul , ul ; move 3 , ul )  | ( move 3 , ul ; move 3 , ul - ua )  | ( move 3 , ul ; move 4 - ul , ul )  | ( move 3 , ul ; move 3 , ul ; pen 3 )  | ( move 3 , ua + ul ; move 3 , ua + ul )  | ( move 3 , ul ; move 3 , ul ; v0 = 0 )  | ( move 3 , ul ; move 3 , ul ; v0 = 4 )  | ( ( move 3 , ul ; move 3 , ul ) ; pen ul )  | ( move ul , ul ; move 2 , ua ; move 3 , ul )  | ( v0 = 3 ; move 3 , ul ; move v0 , ul )  | ( move 3 , ul ; v0 = ul ; move 3 , v0 )  | ( move 0 , 4 ; move 3 , ul - 4 ; move 3 , ul )  | ( v0 = 3 ; move v0 , ul ; move v0 , ul )  | ( move 0 , ul ; ( move 3 , ua ; move 3 , ul ) )  | ( move 3 , ul ; pen 4 ; move 2 + ul , 2 - ul )  | ( move 3 , 2 - ul ; move 3 , ul - ua ; pen 3 )  | ( ( move 3 , ul ; pen ua + 2 ) ; move 3 , ul )  | ( move 4 - ul , ul ; move 2 , ul ; move ul , 0 )  | ( move 3 , ul ; move 2 , ul ; move ul , ua * 3 )  | ( move 3 , 2 - ul ; pen ul ; move 3 , ua + ul )  | ( move 2 + ul , ul ; ( move 3 , ul ; pen ua ) )  | ( pen ul ; ( move 2 + ul , ul ; move 3 , ul ) )  | ( move 3 , ul ; ( move 3 , ul ; pen ua - ul ) )  | ( ( move 2 + ul , ul ; pen ua * 2 ) ; move 3 , ul )  | ( move 2 , ul - ua ; move ul , ua * 4 ; move 3 , ul )  | ( move 2 + ul , ua + ul ; ( pen ul ; move 3 , ul ) )  | ( move 3 , ua + ul ; v0 = ul ; move 3 * v0 , v0 )  
[497] ( move ua , 3 ; move ul , 4 )  | ( move 4 + 2 , 3 ; move ul , 4 )  | ( move ua , 3 ; move ul , 2 * 2 )  | ( move ua , 3 ; move ul , ua + 4 )  | ( move ua , ua + 3 ; move ul , 4 )  | ( move ua , 2 + ul ; move ul , 4 )  | ( move ua , 3 ; move ul , 3 + ul )  | ( move ua , 3 ; move ul , 4 - ua )  | ( move ua , 3 - ua ; move ul , 4 )  | ( move ua , 4 - ul ; move ul , 4 )  | ( move ua , 3 ; move ul , 4 ; pen 0 )  | ( move ua , 3 ; move 2 - ul , 2 + 2 )  | ( move ua , 2 + ul ; move ul , 3 + ul )  | ( move ua , 3 ; move 0 , 4 ; move ul , 0 )  | ( move 0 , 3 ; move ua , ua ; move ul , 4 )  | ( move ua , 3 ; v0 = ul ; move ul , 4 )  | ( pen 2 ; move ua , 3 ; move ul , 3 + ul )  | ( move ul , ua ; move ua , 3 ; move ul , 4 )  | ( pen ul ; move ua , 3 ; move ul , 3 + ul )  | ( ( move 0 , ua ; move ua , 3 ) ; move ul , 4 )  | ( move ua , 3 ; move ul , 4 ; v0 = ua * 4 )  | ( move ua , 2 + ul ; move 0 , 3 ; move ul , ul )  | ( move ua , 4 - ul ; ( move ul , 4 ; pen 3 ) )  | ( ( move ua , 2 + ul ; pen ua ) ; move ul , 4 )  | ( move ua , 3 ; ( v0 = 4 ; move ul , v0 ) )  | ( move ua , 3 ; move 2 - ul , 4 ; v0 = ul + ul )  | ( ( v0 = 4 ; move ua , 2 + ul ) ; move ul , v0 )  | ( move ua , 3 ; move ul , 4 ; ( pen 0 ; pen ul / 3 ) )  | ( ( pen ul ; move ua , 3 ; pen ul ) ; move ul , 4 - ua )  | ( move ua , 4 - ul ; v0 = 0 ; move ul - v0 , 3 + ul )  | ( ( move ua , 3 ; pen ul ) ; move ul , 4 ; move 0 , ua * 2 )  | ( ( move ua , 3 ; move ul , 4 ; pen 4 - ul ) ; v0 = ul )  
[498] ( move 3 , ul ; move ua , 4 )  | ( move 2 + ul , ul ; move ua , 4 )  | ( move 3 , ul ; move ua , ua + 4 )  | ( move 3 , ul ; move ua , 4 - ua )  | ( move 4 - ul , ul ; move ua , 4 )  | ( move 3 , ul ; move ua , 4 ; pen 2 )  | ( move 3 , ul ; move ua , 4 ; pen ul )  | ( move 3 , ul ; move ua , 4 ; move 0 , 0 )  | ( ( move 3 , ul ; move ua , 4 ) ; pen 4 )  | ( move 3 , ul ; move ua , 4 ; pen ua + 3 )  | ( move 3 , ul ; move ua , 4 ; pen ul - 2 )  | ( move 3 , 2 - ul ; pen ul ; move ua , 4 )  | ( pen ul ; move 3 , ul ; move ua , 3 + ul )  | ( move 3 , ul ; move ua , 3 + ul ; pen ul )  | ( move 3 , ul ; ( move ua , 4 ; v0 = 4 ) )  | ( move 0 , ul ; ( move 3 , ua ; move ua , 4 ) )  | ( move 3 , ul ; move ua , 4 ; v0 = ul / 2 )  | ( pen ua + ul ; move 2 + ul , ul ; move ua , 4 )  | ( move 3 , ul ; v0 = ua ; move v0 , 4 + v0 )  | ( move 2 + ul , ua + ul ; move 0 , 3 + ul ; move ua , ua )  | ( move 3 , ua + ul ; ( v0 = 3 + ul ; move ua , v0 ) )  | ( move 3 , ul ; ( move ua , 4 ; pen ua + ul ) ; v0 = ua )  
[499] ( move 3 , 4 ; move ua , ul )  | ( move 3 , 4 ; move ua , ua + ul )  | ( move 3 , ua + 4 ; move ua , ul )  | ( move 2 + ul , 4 ; move ua , ul )  | ( move 3 , 3 + ul ; move ua , ul )  | ( move 3 , 4 - ua ; move ua , ul )  | ( move 4 - ul , 4 ; move ua , ul )  | ( move 3 , 4 ; pen 3 ; move ua , ul )  | ( move 3 , 4 - ua ; move ua , 4 - 3 )  | ( move 2 + ul , 4 ; move ua , ua + ul )  | ( move 2 + ul , 3 + ul ; move ua , ul )  | ( move 3 , 4 ; v0 = 0 ; move ua , ul )  | ( move 3 , 4 ; move ua , ul ; v0 = 4 )  | ( pen 4 + 2 ; move 3 , 4 ; move ua , ul )  | ( ( pen 2 ; move 3 , 4 ) ; move ua , ul )  | ( move 0 , 3 ; move 3 , ul ; move ua , ul )  | ( move 3 , 4 ; move ua , ul ; move 0 , ul )  | ( move 3 , 4 ; move ua , ul ; v0 = ua )  | ( move 3 , 4 ; v0 = ul ; move ua , ul )  | ( move 3 , 4 ; move ua , ul ; pen 4 - ua )  | ( move 3 , 3 + ul ; move ua , ul ; pen ul )  | ( move 3 , 4 ; ( move ua , ul ; v0 = 0 ) )  | ( ( move 3 , 4 ; pen 4 + 3 ) ; move ua , ul )  | ( move 0 , ul ; move 3 , ua + 3 ; move ua , ul )  | ( move 0 , ul ; move 2 + ul , 3 ; move ua , ul )  | ( ( move 3 , 4 ; move ua , ul ; pen ul ) ; pen ul )  | ( move 3 , ua + 4 ; ( move ua , ul ; v0 = 4 ) )  | ( ( pen ua * 4 ; move 3 , 4 ) ; move ua , ua + ul )  | ( move 2 + ul , 3 + ul ; ( pen ua ; move ua , ul ) )  | ( move ul + ul , 3 + ul ; move ul , 0 ; move ua , ul )  | ( move 3 , 4 ; ( v0 = ua ; move v0 , ul - v0 ) )  | ( ( move 3 , 4 ; move ua , ul ) ; pen ua ; v0 = ua + 2 )  
[500] ( move ua , 4 ; move 3 , ul )  | ( move ua , 2 * 2 ; move 3 , ul )  | ( move ua , 4 ; move 2 + ul , ul )  | ( move ua , 4 ; move 3 , ul - ua )  | ( pen 4 ; move ua , 4 ; move 3 , ul )  | ( move ua , 3 + ul ; move 2 + ul , ul )  | ( move ua , 4 ; move 2 + ul , ua + ul )  | ( move ua , 3 + ul ; move 3 , ul - ua )  | ( move ua , 3 + ul ; move 4 - ul , ul )  | ( move ua , 4 ; move 3 , ul ; v0 = 0 )  | ( move ua , 4 ; move 2 , ul ; move ul , 0 )  | ( move ua , 4 ; move ul , ul ; move 2 , 0 )  | ( move ua , 4 ; move 3 , ul ; move 0 , ul )  | ( v0 = ua ; move ua , 4 ; move 3 , ul )  | ( move ua , 3 + ul ; move 3 , ul ; pen 4 )  | ( pen ul / 3 ; move ua , 4 ; move 3 , ul )  | ( ( move ua , 4 ; pen ua ) ; move 3 , ul )  | ( move ua , 4 ; pen 4 + ul ; move 3 , ua + ul )  | ( ( move ua , 4 ; pen ua ; move 3 , ul ) ; pen ul )  | ( move ua , 4 ; v0 = ul ; move 3 * v0 , v0 )  | ( move ua , 4 ; pen ul ; ( move 3 , ul ; v0 = 3 ) )  | ( pen 4 ; ( move ua , 4 ; v0 = ul ; move 3 , v0 ) )  | ( move ua , 3 + ul ; pen ua * 3 ; ( pen ua ; move 3 , ul ) )  
[501] ( move ua , 4 ; move ua , 4 )  | ( move ua , 4 ; move ua , 2 + 2 )  | ( move ua , 4 ; move ua , ua + 4 )  | ( move ua , 3 + ul ; move ua , 4 )  | ( move ua , 4 ; move ua , 4 ; pen ul )  | ( move ua , 2 + 2 ; move ua , ua + 4 )  | ( move ua , 4 ; move ua , 4 ; move 0 , 0 )  | ( move ua , 4 ; ( pen 4 ; move ua , 4 ) )  | ( move ua , 4 - ua ; pen ul ; move ua , 4 )  | ( move ua , 4 ; v0 = 4 ; move ua , v0 )  | ( v0 = 4 ; move ua , 4 ; move ua , v0 )  | ( move ua , 4 ; v0 = ua ; move v0 , 4 )  | ( v0 = ua ; move v0 , 4 ; move v0 , 4 )  | ( v0 = 4 ; move ua , v0 ; move ua , v0 )  | ( move ua , 4 ; move ua , 4 ; v0 = 3 - ul )  | ( move ua , ua + 4 ; move ua , 4 ; v0 = ua )  | ( move ua , 4 ; v0 = 0 ; move ua , 4 / v0 )  | ( pen 4 ; ( move ua , 4 ; pen ua ) ; move ua , 4 )  | ( move ua , 4 ; v0 = 3 + ul ; move ua , ua + 4 )  | ( ( move ua , 4 ; v0 = ul ) ; move ua , v0 * 4 )  | ( v0 = 0 ; move ua , 4 / v0 ; move ua , 4 + v0 )  
[502] ( move ul , 3 ; move 3 , ul )  | ( move 3 - 2 , 3 ; move 3 , ul )  | ( move ul , 2 + ul ; move 3 , ul )  | ( move ul , 3 ; move 3 , ua + ul )  | ( move ul , 3 ; move 2 + ul , ul )  | ( move ul , ua + 3 ; move 3 , ul )  | ( move ul , 3 ; pen 4 ; move 3 , ul )  | ( move ul , 3 ; move 3 , ul ; pen 4 )  | ( move ul , 3 ; move 3 , ul ; pen ua )  | ( move ul , 3 ; pen ua ; move 3 , ul )  | ( pen ul ; move ul , 3 ; move 3 , ul )  | ( move ul , ua + 3 ; move 2 + ul , ul )  | ( move ul , ua + 3 ; move 4 - ul , ul )  | ( ( pen 2 ; move ul , 3 ) ; move 3 , ul )  | ( move 0 , ul ; move ul , 2 ; move 3 , ul )  | ( move ul , 3 ; move 3 , ul ; pen 0 - ul )  | ( move ul , 3 ; v0 = ul ; move 3 , v0 )  | ( v0 = ul ; move v0 , 3 ; move 3 , ul )  | ( move ul , 3 ; v0 = 3 ; move v0 , ul )  | ( move 0 , 0 ; move ul , 3 ; move 4 - ul , ul )  | ( move ul , ua * 4 ; move ul , 3 ; move 3 , ul )  | ( move ul , 3 ; v0 = ul ; move 3 , v0 + ua )  | ( ( v0 = ul ; move v0 , 3 ) ; move 3 , v0 )  | ( v0 = 3 ; ( move ul , v0 ; move v0 , ul ) )  | ( move ul , ua + 3 ; move 3 , ua + ul ; v0 = 0 )  | ( v0 = ul ; move v0 , 3 ; move 2 + v0 , v0 )  | ( move ul , 4 - ul ; move 3 , ul ; v0 = ul - ua )  | ( move ul , 2 + ul ; ( move 3 , ul ; pen 3 ) ; pen ua )  | ( v0 = ul ; ( move ul , 3 ; pen ua ; move 3 , v0 ) )  | ( ( v0 = 3 ; move ul , 3 ; move 3 , ul ) ; v1 = 0 )  | ( move ul , 3 ; move 0 , ua + ua ; move 2 + ul , ua + ul )  | ( ( move ul , 3 ; move 2 + ul , ul ) ; move 0 , 3 ; pen 2 )  
[503] ( move 4 , 2 ; move ul , ul )  | ( move 4 , 4 - 2 ; move ul , ul )  | ( move 3 + ul , 2 ; move ul , ul )  | ( move 4 , 2 - ua ; move ul , ul )  | ( move 4 , 3 - ul ; move ul , ul )  | ( move 4 , ul + ul ; move ul , ul )  | ( move 4 , 2 ; move ul , ul ; pen ul )  | ( move 4 , 2 ; move 4 - 3 , ul - ua )  | ( move 3 + ul , 2 ; move 2 - ul , ul )  | ( move 3 + ul , 4 / 2 ; move ul , ul )  | ( move 3 + ul , ul + ul ; move ul , ul )  | ( move 4 , 2 ; v0 = 0 ; move ul , ul )  | ( move 3 + ul , 2 ; move ul , ul ; pen ul )  | ( move 3 + ul , 2 ; pen ul ; move ul , ul )  | ( pen 2 ; move 4 , ul + ul ; move ul , ul )  | ( move 4 , 2 ; v0 = ul ; move ul , v0 )  | ( move 4 , 2 ; v0 = ul ; move v0 , v0 )  | ( move 4 , 2 ; ( move ul , ul ; v0 = ua ) )  | ( move 4 , 2 ; ( pen 2 ; move ul , ul - ua ) )  | ( move 0 , ua ; move 4 , 2 ; move ul , ul - ua )  | ( move 4 , ul + ul ; move ul , ul ; v0 = 3 )  | ( ( move 4 , 2 ; move ul , ul ) ; pen ul + ul )  | ( move 4 , ul + ul ; move 0 , ul ; move ul , ua )  | ( move 4 , 2 ; ( v0 = ul ; move v0 , ul ) )  | ( move 4 , 2 ; v0 = ua + ul ; move ul , v0 )  | ( move 4 , 2 ; ( v0 = ul ; move v0 , v0 ) )  | ( ( move 4 , 2 ; pen ua + ul ) ; move ul , 3 - 2 )  | ( move 4 , ul + ul ; move ul , ul ; v0 = 2 - 4 )  | ( ( pen ua / 3 ; move 4 , 2 ; move ul , ul ) ; pen 0 )  | ( pen ua - ul ; ( move 3 + ul , 2 ; move ul , ua + ul ) )  | ( v0 = 3 - ul ; move v0 * v0 , v0 ; move ul , ul )  | ( move 0 , 2 ; ( move 4 , ua ; move ul , ul ; v0 = ul ) )  
[504] ( move 4 , ul ; move 2 , ul )  | ( move 4 , 2 - ul ; move 2 , ul )  | ( move 4 , ua + ul ; move 2 , ul )  | ( move 3 + ul , ul ; move 2 , ul )  | ( move 4 , ul ; move ul + ul , ul )  | ( pen 3 ; move 4 , ul ; move 2 , ul )  | ( pen ua ; move 4 , ul ; move 2 , ul )  | ( move 4 , ul - ua ; move 4 - 2 , ul )  | ( move 3 + ul , ul - ua ; move 2 , ul )  | ( move 4 , ul ; move 2 , ul ; v0 = 3 )  | ( pen 2 ; move 4 , ul ; move 4 - 2 , ul )  | ( move 4 , ul ; move 2 , ul ; v0 = ua )  | ( pen 4 ; move 4 , ul - ua ; move 2 , ul )  | ( move 4 , ul ; pen ul ; move 2 , ul - ua )  | ( move 4 , ul ; pen 4 ; move ul + ul , ul )  | ( move 3 + ul , ua + ul ; move 2 , ua + ul )  | ( move 3 + ul , ul ; move ul + ul , ua + ul )  | ( move 4 , ul ; ( pen ua ; move 2 , ua + ul ) )  | ( move 4 , ul ; move ul + ul , ul ; v0 = ul )  | ( move 3 + ul , ul ; v0 = 2 ; move v0 , ul )  | ( pen ul ; move 4 , ua + ul ; move ul + ul , ul )  | ( move 4 , ua + ul ; move 4 / 2 , ul ; pen ua - 2 )  | ( pen ul ; move 3 + ul , ul ; move 4 / 2 , 2 - ul )  | ( move 3 + ul , ul ; move 2 , ul ; v0 = ul / ua )  | ( move 3 , ul ; move ul , ua * 4 ; move 3 - ul , ul )  | ( ( move 3 + ul , ul ; move 2 , ua + ul ) ; pen ua )  | ( ( move 4 , 4 - 3 ; v0 = 2 - ul ) ; move 2 , v0 )  | ( v0 = ua + ul ; ( move 2 * 2 , v0 ; move 2 , ul ) )  | ( ( move 4 , ul ; move 0 , ua ) ; pen 4 + ul ; move 2 , ul )  | ( move 4 , ul ; move ul , ul ; ( move ul , ua * 4 ; pen 0 ) )  | ( ( move 3 + ul , ul ; move 2 , ul ) ; pen ul ; v0 = ul )  | ( move 3 + ul , ul ; ( move ul + ul , ul ; pen 0 ; pen 3 ) )  
[505] ( move ua , ul ; move 4 , 3 )  | ( move ua , ul ; move 2 + 2 , 3 )  | ( move ua , ul ; move 4 , ua + 3 )  | ( move ua , ul ; move 4 , 2 + ul )  | ( move ua , ul ; move 3 + ul , 3 )  | ( move ua , ul ; move 4 , 4 - ul )  | ( move ua , ul ; pen 2 ; move 4 , 3 )  | ( move ua , ul ; move 4 , 3 ; pen ua )  | ( move ua , ul ; move 4 , 3 ; pen ul )  | ( move 0 , ul ; move ua , 0 ; move 4 , 3 )  | ( move ua , ul ; move 0 , 3 ; move 4 , 0 )  | ( v0 = 0 ; move ua , ul ; move 4 , 3 )  | ( move ua , ul ; move 4 , 3 ; v0 = 3 )  | ( pen 2 ; ( move ua , ul ; move 4 , 3 ) )  | ( move ua , ul ; move 4 , 3 ; v0 = ul )  | ( move ua , ul ; v0 = ul ; move 4 , 3 )  | ( move ua , ul ; move 4 , 3 ; pen 0 - ul )  | ( move ua , ul ; move 4 , 3 ; pen 2 + ul )  | ( move ua , ul ; move 4 , 4 - ul ; pen ul )  | ( move ua , ua + ul ; v0 = 2 ; move 4 , 3 )  | ( move ua , ul ; ( v0 = ua ; move 4 , 3 ) )  | ( move ua , ul ; move ul , 3 ; move 2 + ul , 0 )  | ( move ua , ul ; pen ua + 2 ; move 3 + ul , 3 )  | ( move ua , ul - ua ; move 4 , 3 - ua ; pen ua )  | ( move ua , ul ; move 4 , 4 - ul ; pen ua + ul )  | ( move ua , ul ; v0 = ua + 3 ; move 4 , v0 )  | ( move ua , ul - ua ; ( v0 = ua ; move 4 , 3 ) )  | ( ( move ua , ul ; pen ul ; move 4 , 3 ) ; pen ul + ul )  | ( move ua , ul ; ( move 3 , 3 ; move 2 , ua ) ; v0 = 2 )  
[506] ( move ul , 3 ; move ua , 4 )  | ( move ul , 3 ; move ua , 2 + 2 )  | ( move ul , 3 ; move ua , 3 + ul )  | ( move ul , 2 + ul ; move ua , 4 )  | ( move ul , 3 ; move ua , 4 - ua )  | ( move ul , 3 - ua ; move ua , 4 )  | ( move ul , 3 ; move ua , 4 ; pen ul )  | ( move 0 , 3 ; move ul , 0 ; move ua , 4 )  | ( move ul , 3 ; v0 = 4 ; move ua , 4 )  | ( move 3 - 2 , 3 ; move ua , 4 ; move 0 , ua )  | ( move ul , 3 ; move ua , 2 * 2 ; v0 = ua )  | ( move ul , 2 + ul ; move ua , 4 ; v0 = ul )  | ( move ul , 3 ; move ua , 4 ; v0 = ul + ul )  | ( ( move ul , 3 ; pen ua ) ; move ua , 3 + ul )  | ( pen ul ; move ul , ua + 3 ; move ua , 3 + ul )  | ( move ul , 3 - ua ; move ua , 3 + ul ; pen ul )  | ( ( move ul , 3 ; v0 = 4 ) ; move ua , v0 )  | ( move ul , 2 + ul ; v0 = 4 ; move ua , v0 )  | ( move ul , 3 ; ( move ua , 4 ; move 0 , ua + ua ) )  | ( move 2 - ul , 3 ; move ua , ua + 4 ; v0 = ul )  | ( move ul , 3 ; move ua , 3 + ul ; v0 = ul / 4 )  | ( ( pen ul + ul ; move ul , 3 ) ; move ua , 2 * 2 )  | ( ( move ul , 3 ; pen 2 + ul ; move ua , 4 ) ; pen 0 )  | ( ( move ul , ua + 3 ; v0 = 4 - ul ) ; move ua , 4 )  | ( move ul , 3 ; move ua , 4 ; ( pen ua / 3 ; v0 = 0 ) )  
[507] ( move 3 , 4 ; move ul , ul )  | ( move 3 , 4 ; move 2 - ul , ul )  | ( move 3 , 4 ; move ul , 2 - ul )  | ( move 3 , 3 + ul ; move ul , ul )  | ( move 3 , 4 ; move ul , ua + ul )  | ( move 3 , ua + 4 ; move ul , ul )  | ( move 2 + ul , 4 ; move ul , ul )  | ( move 3 , 4 - ua ; move ul , ul )  | ( move 3 , 4 ; move ul , ul - ua )  | ( move 3 , 4 ; move ul , ul ; pen 2 )  | ( pen 4 ; move 3 , 4 ; move ul , ul )  | ( move 2 + ul , 3 + ul ; move ul , ul )  | ( move 3 , 4 ; move 0 , ul ; move ul , 0 )  | ( move 3 , 4 ; move ul , ul ; v0 = 2 )  | ( ( move 3 , 4 ; move ul , ul ) ; pen 2 )  | ( move 3 , 4 ; ( pen 4 ; move ul , ul ) )  | ( move 3 , 4 ; move ul , ul ; v0 = ul )  | ( move 3 , 3 + ul ; pen 3 ; move ul , ul )  | ( pen ul ; ( move 3 , 4 ; move ul , ul ) )  | ( move 3 , 4 ; v0 = ul ; move v0 , ul )  | ( ( move 0 , 0 ; move 3 , 4 ) ; move ul , ul )  | ( move 3 , 4 ; move ul , ul ; v0 = 4 * 2 )  | ( v0 = 3 ; ( move 3 , 4 ; move ul , ul ) )  | ( move 3 , 4 - ua ; move 0 , 0 ; move ul , ul )  | ( move 3 , ua + 4 ; pen ua + 2 ; move ul , ul )  | ( pen 2 - ul ; move 3 , 3 + ul ; move ul , ul )  | ( move 3 , 4 - ua ; move ul , ul ; pen 4 - ul )  | ( move 3 , 3 + ul ; move ul , ul ; pen ua + ul )  | ( move 2 + ul , 4 ; v0 = 0 - 3 ; move ul , ul )  | ( ( move 0 , ua + 4 ; move 3 , ua ) ; move ul , ul - ua )  | ( move 3 , 4 ; ( v0 = ul ; move v0 , ul ; pen v0 ) )  | ( pen ul ; ( move 3 , 2 * 2 ; move ul , ul ) ; pen ua / 4 )  
[508] ( move ul , 4 ; move ua , 4 )  | ( move ul , 3 + ul ; move ua , 4 )  | ( move ul , 4 ; move ua , ua + 4 )  | ( move ul , 4 ; move ua , 3 + ul )  | ( move ul , 4 - ua ; move ua , 4 )  | ( move ul , 4 ; move ua , 4 - ua )  | ( move ul , 4 ; pen 2 ; move ua , 4 )  | ( move ul , 4 ; move ua , 4 ; pen 4 )  | ( move ul , 4 ; pen ul ; move ua , 4 )  | ( move ul , ua + 4 ; move ua , 3 + ul )  | ( move ul , 2 + 2 ; move ua , 4 ; pen 3 )  | ( ( pen 3 ; move ul , 4 ) ; move ua , 4 )  | ( move 0 , ul ; move ul , 3 ; move ua , 4 )  | ( move ul , 4 ; v0 = ul ; move ua , 4 )  | ( pen 2 ; move ul , 4 ; move ua , 3 + ul )  | ( move ul , ua + 4 ; move ua , 4 ; pen 3 )  | ( move ul , 4 ; pen 3 ; move ua , 3 + ul )  | ( ( move ul , 4 ; move 0 , ua ) ; move ua , 4 )  | ( move ul , 3 + ul ; ( move ua , 4 ; pen ua ) )  | ( move ul , 4 ; pen ul ; ( pen 2 ; move ua , 4 ) )  | ( move ul , 4 ; pen ua ; ( move ua , 4 ; pen ul ) )  | ( move 4 - 3 , 4 - ua ; move ua , ua + 4 ; v0 = 0 )  | ( ( move ul , 4 ; pen ua ) ; ( move ua , 4 ; v0 = ul ) )  | ( ( move ul , 4 ; pen ua ) ; move ua , 4 - ua ; v0 = ul )  
[509] ( move ul , 4 ; move 3 , ul )  | ( move 2 - ul , 4 ; move 3 , ul )  | ( move ul , 3 + ul ; move 3 , ul )  | ( move ul , 4 ; move 2 + ul , ul )  | ( move ul , 4 ; move 3 , ul - ua )  | ( move ul , 4 - ua ; move 3 , ul )  | ( move ul , 4 ; move 4 - ul , ul )  | ( move ul , 4 ; move 3 , ul ; pen 0 )  | ( move ul , 4 ; move 3 , ul ; pen ua )  | ( move ul , 4 ; move 3 , ul ; pen ul )  | ( move ul , 4 ; move 2 + ul , ul - ua )  | ( move ul , 4 ; move 3 , ul ; move 0 , ua )  | ( move ul , 4 ; move 3 , ul ; v0 = ul )  | ( pen ul ; move ul , 2 + 2 ; move 3 , ul )  | ( move 3 - 2 , 2 + 2 ; move 3 , ul - ua )  | ( move ul , 4 ; pen ul ; move 4 - ul , ul )  | ( v0 = 4 ; move ul , v0 ; move 3 , ul )  | ( move ul , 4 ; move 3 , 4 - 3 ; v0 = 4 )  | ( move ul , 4 ; move 3 , ul ; v0 = 2 + ul )  | ( ( move ul , 4 ; move 3 , ul ) ; v0 = ul )  | ( move 0 , 3 + ul ; move ul , ua ; move 3 , ul )  | ( move ul , 3 + ul ; move ul , ul ; move 2 , 0 )  | ( move ul , 4 - ua ; pen 2 + ul ; move 3 , ul )  | ( move ul , 4 ; move 4 - ul , ul ; pen 3 + ul )  | ( move ul , 4 ; v0 = ul ; move 2 + ul , v0 )  | ( v0 = ul ; move v0 , 4 ; move 3 / v0 , v0 )  | ( ( pen 3 ; ( move ul , 4 ; move 3 , ul ) ) ; move 0 , 3 )  | ( move ul , 4 ; ( move ul + ul , ul ; move 2 - ul , ua ) )  | ( move 0 , 4 ; ( move ul , ua ; pen ua - 3 ) ; move 3 , ul )  | ( ( move ul , 4 ; pen ua + ul ; move 3 , ul ) ; pen 2 + 2 )  
[510] ( move ul , ul ; move 4 , 3 )  | ( move ul , ua + ul ; move 4 , 3 )  | ( move ul , ul ; move 4 , ua + 3 )  | ( move ul , ul ; move 3 + ul , 3 )  | ( move ul , ul ; move 4 , 2 + ul )  | ( move ul , ul - ua ; move 4 , 3 )  | ( move ul , ul ; move 4 , 3 - ua )  | ( move ul , ul ; move 4 , 4 - ul )  | ( move ul , ul ; move 2 * 2 , 2 + ul )  | ( move ul , ul - ua ; move 4 , ua + 3 )  | ( move ul , ul ; move 3 + ul , 4 - ul )  | ( pen 3 + 2 ; move ul , ul ; move 4 , 3 )  | ( move ul , ul ; move 4 , 3 ; move 0 , ua )  | ( move ul , ul ; move 4 , 3 ; v0 = ul )  | ( move ul , ul ; move 4 , 3 ; pen 2 - ul )  | ( move ul , ul ; move 3 , 3 ; move ul , ua )  | ( pen ua ; move ul , ul ; move 4 , 2 + ul )  | ( v0 = 3 ; move ul , ul ; move 4 , v0 )  | ( move ul , ul ; ( move 0 , 2 ; move 4 , ul ) )  | ( move ul , ul ; move 3 + ul , 3 ; move 0 , ua )  | ( move ul , ul ; move 4 , 2 + ul ; v0 = ul )  | ( move 4 / ua , ul ; move ul , 3 ; move 3 , ua )  | ( move ul , ul ; ( pen ua ; move 4 , 2 + ul ) )  | ( move ul , ul - ua ; move 3 + ul , 3 ; pen ul )  | ( move ul , ul ; move 4 , ua + 3 ; v0 = 2 + 2 )  | ( move ul , ul ; ( move ua - 2 , 3 ; move 0 , 3 ) )  | ( v0 = 3 ; move ul , ul ; move v0 + ul , v0 )  | ( move ul , ul ; ( move 4 , ua + 3 ; pen 2 / ua ) )  | ( move ul , ul ; move 3 + ul , ua + 3 ; move 0 , ul )  | ( ( move ul , ul ; pen 3 ) ; move 3 + ul , 3 ; pen ul )  | ( move ul , ul ; v0 = ul ; move v0 * 4 , 3 / v0 )  | ( move ul , ua + ul ; ( pen ul ; v0 = 2 ; move 4 , 3 ) )  
[511] ( move 3 , ul ; move 4 , ul )  | ( move 3 , 2 - ul ; move 4 , ul )  | ( move 3 , ul ; move 4 , 2 - ul )  | ( move 2 + ul , ul ; move 4 , ul )  | ( move 3 , ul ; pen 2 ; move 4 , ul )  | ( move 3 , ul ; move 4 , ul ; pen 4 )  | ( move 3 , ul ; move 4 , ul ; pen ul )  | ( move 3 , ul ; move 4 , ul ; move 0 , 0 )  | ( move 3 , ul ; v0 = ua ; move 4 , ul )  | ( move 3 , ul ; ( pen ul ; move 4 , ul ) )  | ( move 3 , ul ; pen ua + ul ; move 4 , ul )  | ( move 4 - ul , ul ; pen ua ; move 4 , ul )  | ( move 3 , ul ; v0 = 4 ; move v0 , ul )  | ( move 3 , ul ; v0 = ul ; move 4 , v0 )  | ( v0 = ul ; move 3 , v0 ; move 4 , v0 )  | ( ( move 3 , ul ; move 4 , ul ) ; v0 = 0 )  | ( ( move 3 , ul ; pen 2 + ul ) ; move 4 , ul )  | ( move 3 , ul ; move 4 , ul ; move 0 , ua + ul )  | ( move ul , ul ; move 2 , ua * 2 ; move 4 , ul )  | ( move ul , ul ; ( move 2 , ua ; move 4 , ul ) )  | ( move 2 + ul , ul ; move 4 , ul ; pen 2 + ul )  | ( move ul , ul ; move 2 , ua ; move 4 , ua + ul )  | ( move ua / 2 , ul ; v0 = ul ; move 4 , v0 )  | ( move 4 - ul , ul ; move 4 , ul - ua ; v0 = ua )  | ( move 3 , ul ; ( pen 2 ; move 4 , ul ) ; move 0 , 4 )  | ( ( pen ul ; move 3 , ul ; v0 = 0 ) ; move 4 , ul )  | ( move 3 , ul ; ( move 4 , ul - ua ; v0 = ua * 3 ) )  | ( v0 = ul ; ( move 3 / v0 , v0 ; move 4 , v0 ) )  | ( ( move 2 + ul , ul ; v0 = 2 - ul ) ; move 4 , v0 )  | ( move 2 , ul ; ( pen 2 ; ( move ul , 0 ; move 4 , ul ) ) )  | ( pen 3 ; move 3 , ul ; ( move 4 , ul ; v0 = 2 + ul ) )  | ( move 4 - ul , ul ; ( v0 = ul ; pen ul ) ; move 4 , ul )  
[512] ( move ua , 4 ; move ul , 4 )  | ( move ua , 4 ; move ul , 2 * 2 )  | ( move ua , 4 ; move ul , 3 + ul )  | ( move ua , 3 + ul ; move ul , 4 )  | ( move ua , 4 ; move ul , ua + 4 )  | ( move ua , ua + 4 ; move ul , 4 )  | ( move ua , 4 - ua ; move ul , 4 )  | ( pen ua ; move ua , 4 ; move ul , 4 )  | ( move ua , 4 ; pen ul ; move ul , 4 )  | ( pen ul ; move ua , 4 ; move ul , 4 )  | ( move ua , 4 ; v0 = 0 ; move ul , 4 )  | ( pen 4 ; ( move ua , 4 ; move ul , 4 ) )  | ( move 0 , 3 ; move ua , ul ; move ul , 4 )  | ( move ua , 4 ; move ul , 4 ; v0 = ua )  | ( move ua , 4 ; pen ua * 4 ; move ul , 4 )  | ( move ua , 4 ; pen ul + ul ; move ul , 4 )  | ( move ua , 4 ; v0 = 4 ; move ul , v0 )  | ( move ua , 4 ; v0 = ul ; move v0 , 4 )  | ( move ua , 4 ; ( move ul , 4 ; v0 = 3 ) )  | ( v0 = 4 ; move ua , v0 ; move ul , v0 )  | ( move ua , 4 ; ( move 0 , 4 ; move ul , ua ) )  | ( move ua , 3 + ul ; move ul , 4 ; pen ua * ua )  | ( ( move 0 , ua + 4 ; move ua , 0 ) ; move ul , 4 )  | ( move ua , ua + 4 ; move 0 , 4 + ul ; move ul , ua - ul )  
[513] ( move ua , ul ; move 4 , 4 )  | ( move ua , ul ; move 4 , 3 + ul )  | ( move ua , ul ; move 4 , ua + 4 )  | ( move ua , ul ; move 3 + ul , 4 )  | ( move ua , ul - ua ; move 4 , 4 )  | ( move ua , ul ; move 3 + ul , 3 + ul )  | ( move ua , ul ; move 4 , 4 ; move 0 , 0 )  | ( move ua , ul ; ( move 4 , 4 ; pen 0 ) )  | ( move 0 , ua ; move ua , ul ; move 4 , 4 )  | ( move ua , ul ; move 3 + ul , 4 ; pen 2 )  | ( move ua , ul ; move 4 , 4 - ua ; pen 4 )  | ( move ua , ul ; pen 3 - ul ; move 4 , 4 )  | ( move ua , ul ; ( move 4 , 4 ; v0 = 4 ) )  | ( move ua , ul ; v0 = 4 ; move v0 , v0 )  | ( v0 = 4 ; move ua , ul ; move v0 , v0 )  | ( move ua , ul ; move 4 , 4 ; v0 = 2 + ul )  | ( move ua , ul ; move 4 , 4 - ua ; v0 = 4 )  | ( move ua , ul ; ( pen 3 - ul ; move 4 , 4 ) )  | ( v0 = ua + ua ; move ua , ul ; move 4 , 4 )  | ( move ua , ul ; move 4 , 4 - ua ; v0 = ua )  | ( move ua , ul - ua ; move 3 + ul , 4 ; pen 2 )  | ( ( move ua , ul ; pen ul ) ; move 4 , 4 - ua )  | ( move ua , ul ; pen 2 ; ( move 4 , 4 ; pen ua ) )  | ( move ua , ul ; v0 = 2 * 2 ; move v0 , v0 )  | ( v0 = 2 ; move ua , ul ; move 4 , v0 * v0 )  | ( move ua , ul ; ( v0 = 4 ; move v0 , v0 ) )  | ( move ua , ul ; ( move 4 , 4 ; move 0 , ua / 4 ) )  | ( move ua , ul ; ( move 4 , 4 ; pen 0 ) ; v0 = 0 )  | ( ( pen ul ; pen ul ; move ua , ul ) ; move 4 , ua + 4 )  | ( move ua , ul ; ( v0 = 3 + ul ; move v0 , v0 ) )  | ( move ua , ul ; pen 3 + ul ; ( pen ua - ul ; move 4 , 4 ) )  
[514] ( move 4 , 3 ; move ul , ul )  | ( move 4 , 3 ; move 3 - 2 , ul )  | ( move 4 , ua + 3 ; move ul , ul )  | ( move 4 , 2 + ul ; move ul , ul )  | ( move 4 , 3 - ua ; move ul , ul )  | ( move 4 , 3 ; move ul , ul - ua )  | ( move 4 , 4 - ul ; move ul , ul )  | ( pen 2 ; move 4 , 3 ; move ul , ul )  | ( pen ul ; move 4 , 3 ; move ul , ul )  | ( move 0 , 3 ; move 4 , 0 ; move ul , ul )  | ( ( move 4 , 3 ; move ul , ul ) ; pen 0 )  | ( move 4 , 3 ; move ul , ul ; v0 = ul )  | ( move 3 , 3 ; move ul , ua ; move ul , ul )  | ( move 4 , 3 ; pen ua - ul ; move ul , ul )  | ( move 4 , 3 ; pen ua - 4 ; move ul , 4 - 3 )  | ( pen 3 * 3 ; ( move 4 , 3 ; move ul , ul ) )  | ( move 4 , ua + 3 ; v0 = 4 ; move ul , ul )  | ( move 4 , 3 ; ( move ul , ul ; v0 = ul ) )  | ( move 4 , 2 + ul ; pen 4 + 2 ; move ul , ul )  | ( move 2 , 2 + ul ; move 2 , ua ; move ul , ul )  | ( move 4 , ua + 3 ; move ul , ul ; v0 = ua )  | ( move 4 , 2 + ul ; v0 = ul ; move ul , ul )  | ( move 2 + 2 , 3 ; pen ul ; move ul , ul - ua )  | ( move 3 + ul , 3 ; pen ua + 3 ; move ul , ul )  | ( move 4 , 3 ; ( pen ua - ul ; move ul , ul ) )  | ( ( move 4 , 4 - ul ; pen ua ) ; move ul , ul )  | ( v0 = 0 ; move 4 , 3 / v0 ; move ul , ul )  | ( move 4 , 3 ; ( v0 = ul ; move v0 , ul ) )  | ( move 4 , 3 ; ( pen ua ; pen 3 ; move ul , ul ) )  | ( v0 = ul ; move 4 , ua + 3 ; move v0 , v0 )  | ( move 2 * 2 , 3 ; ( move ul , ul ; move 0 , ua ) )  | ( pen ua ; ( move 4 , 3 ; v0 = ul ; move v0 , v0 ) )  
[515] ( move 4 , ul ; move ua , 4 )  | ( move 4 , ul ; move ua , 2 * 2 )  | ( move 4 , 2 - ul ; move ua , 4 )  | ( move 4 , ul ; move ua , ua + 4 )  | ( move 4 , ua + ul ; move ua , 4 )  | ( move 4 , ul ; move ua , 3 + ul )  | ( move 4 , ul ; move ua , 4 - ua )  | ( move 4 , ul ; move ua , 4 ; pen ul )  | ( ( move 4 , ul ; move ua , 4 ) ; pen 4 )  | ( move 4 , ul ; ( pen 4 ; move ua , 4 ) )  | ( move 4 , ul ; move 0 , 4 ; move ua , ua )  | ( move 4 , ul ; move ua , 4 ; v0 = ua )  | ( move 4 , ul ; move ua , 4 ; v0 = ul )  | ( move 4 , ul ; ( pen ua ; move ua , 4 ) )  | ( move 4 , ul ; pen ua + ul ; move ua , 4 )  | ( move 4 , ul ; v0 = ua ; move v0 , 4 )  | ( move 4 , ua + ul ; pen 3 - 2 ; move ua , 4 )  | ( move 4 , ul - ua ; v0 = 4 ; move ua , v0 )  | ( pen 3 ; ( move 4 , ul ; move ua , 4 ; pen 3 ) )  | ( move 3 , ul ; ( move ul , 0 ; move ua , 2 * 2 ) )  | ( ( move 4 , ul ; move ua , 3 + ul ) ; v1 = ua )  | ( ( move 4 , ul ; move ua , ua + 4 ; pen 3 ) ; pen 2 )  | ( ( move 4 , ul ; v0 = ua ; move ua , 4 ) ; pen v0 )  
[516] ( move 3 , ul ; move ul , 4 )  | ( move 3 , ul ; move 2 - ul , 4 )  | ( move 3 , ua + ul ; move ul , 4 )  | ( move 2 + ul , ul ; move ul , 4 )  | ( move 3 , ul ; move ul , 3 + ul )  | ( move 4 - ul , ul ; move ul , 4 )  | ( pen 2 ; move 3 , ul ; move ul , 4 )  | ( pen 3 ; move 3 , ul ; move ul , 4 )  | ( pen ul ; move 3 , ul ; move ul , 4 )  | ( move 3 , ua + ul ; move ul , ua + 4 )  | ( move 2 + ul , ul - ua ; move ul , 4 )  | ( move 4 - ul , ua + ul ; move ul , 4 )  | ( move 3 , ul ; pen 4 * 4 ; move ul , 4 )  | ( move 3 , ul ; move ul , 4 ; v0 = ua )  | ( move 3 , ul ; move ul , 3 + ul ; pen 0 )  | ( pen 2 ; move 3 , ua + ul ; move ul , 4 )  | ( move 3 , ul ; move ul , 2 * 2 ; pen ua )  | ( move 2 , ul ; move ul , ua ; move ul , 4 )  | ( pen ua ; move 3 , ul ; move ul , ua + 4 )  | ( pen ua + ua ; move 3 , ul ; move ul , 4 )  | ( move 3 , ul ; pen ul + ul ; move ul , 4 )  | ( v0 = ul ; move 3 , v0 ; move v0 , 4 )  | ( move 2 + ul , ul ; move ul , 4 ; v0 = 0 )  | ( move ul , ul ; move 2 , 0 ; move ul , 3 + ul )  | ( ( move 3 , ul ; move ul , 3 + ul ) ; pen ua )  | ( v0 = 3 + ul ; move 3 , ul ; move ul , v0 )  | ( move 3 , ua + ul ; move ul , 3 + ul ; v0 = ul )  | ( ( pen 2 ; move 3 , ul ; move 0 , ul ) ; move ul , 3 )  | ( move 3 , ul ; v0 = ul ; ( pen ul ; move v0 , 4 ) )  | ( ( move 0 , ua ; move 2 + ul , ul ) ; move ul , ua + 4 )  | ( ( move 2 + ul , ul - ua ; v0 = ul ) ; move ul , 4 )  | ( ( move ul , ul ; move 3 - ul , ua ; pen ul ) ; move ul , 4 )  
[517] ( move ul , 3 ; move 4 , ul )  | ( move ul , ua + 3 ; move 4 , ul )  | ( move ul , 2 + ul ; move 4 , ul )  | ( move ul , 3 ; move 3 + ul , ul )  | ( move ul , 3 - ua ; move 4 , ul )  | ( move ul , 3 ; move 4 , ul - ua )  | ( move ul , 4 - ul ; move 4 , ul )  | ( pen 3 ; move ul , 3 ; move 4 , ul )  | ( pen ua ; move ul , 3 ; move 4 , ul )  | ( move ul , 3 ; pen ul ; move 4 , ul )  | ( move ul , 4 - ul ; move 3 + ul , ul )  | ( move ul , 3 ; ( move 4 , ul ; pen 2 ) )  | ( move ul , 3 ; move 4 , ul ; v0 = ua )  | ( move ul , 3 ; move 4 , ul ; v0 = ul )  | ( move ul , 2 + ul ; pen ul ; move 4 , ul )  | ( pen ua - ul ; move ul , 3 ; move 4 , ul )  | ( v0 = ul ; move v0 , 3 ; move 4 , v0 )  | ( move ul , 3 ; ( move 4 , 3 - 2 ; pen ul ) )  | ( pen ua * 3 ; move ul , 3 ; move 2 + 2 , ul )  | ( move ul , 3 ; ( pen ua / 3 ; move 4 , ul ) )  | ( move ul , 2 + ul ; pen 3 ; move 4 , ua + ul )  | ( ( move ul , 3 ; pen ul ) ; move 4 , ul - ua )  | ( ( move ul , 3 ; pen 2 ) ; pen ua ; move 4 , ul )  | ( v0 = ul ; move v0 , 3 * v0 ; move 4 , v0 )  | ( v0 = 2 ; ( move ul , 3 ; move v0 + v0 , ul ) )  | ( move ul , 2 + ul ; v0 = 4 ; move v0 , v0 / 4 )  | ( ( pen ul ; move ul , 3 ) ; move 3 + ul , ul ; pen ul )  | ( move ul , 3 ; v0 = ul + ul ; move 3 + ul , ul - ua )  | ( v0 = 4 ; ( move ul , 3 ; pen v0 ; move v0 , ul ) )  | ( move ul , 3 ; ( pen ul ; move 4 , ul ) ; v0 = ua - ul )  | ( move ul , 4 - ul ; ( pen ul ; move 4 , ul ) ; v0 = ua )  | ( ( pen 0 ; pen ua ; move ul , 4 - ul ) ; move 4 , ul - ua )  
[518] ( move ua , 4 ; move 4 , ul )  | ( move ua , 3 + ul ; move 4 , ul )  | ( move ua , 4 ; move 3 + ul , ul )  | ( move ua , 4 ; move 4 , ua + ul )  | ( move ua , ua + 4 ; move 4 , ul )  | ( pen 3 ; move ua , 4 ; move 4 , ul )  | ( move ua , 3 + ul ; move 3 + ul , ul )  | ( move ua , 4 - ua ; move 4 , ua + ul )  | ( move 0 , 4 ; move ua , ua ; move 4 , ul )  | ( move ua , 4 ; move ul , ul ; move 3 , 0 )  | ( move ua , 4 ; pen 2 ; move 4 , ua + ul )  | ( move ua , 4 ; v0 = 4 ; move v0 , ul )  | ( move ua , ua + 4 ; move 4 , ul ; v0 = 2 )  | ( move ua , 4 ; v0 = 4 + ul ; move 4 , ul )  | ( move ua , 4 ; move 2 + ul , ul ; move ul , 0 )  | ( pen ul ; ( move ua , 3 + ul ; move 4 , ul ) )  | ( move 0 , 2 * 2 ; ( move ua , 0 ; move 4 , ul ) )  | ( ( move ua , 4 ; move 3 + ul , ul ) ; v0 = ul )  | ( move ua , 4 - ua ; ( pen 0 ; pen ul ) ; move 4 , ul )  | ( ( pen ul ; ( move ua , 4 ; pen ul ) ) ; move 4 , ul )  | ( move ua , 2 + 2 ; ( move 3 + ul , ul ; v0 = 3 ) )  | ( ( ( move ua , 4 ; move 0 , ul ) ; pen ul ) ; move 4 , ua )  
[519] ( move 4 , ul ; move 3 , ul )  | ( move 4 , ul ; move 3 , 4 - 3 )  | ( move 3 + ul , ul ; move 3 , ul )  | ( move 4 , ul ; move 2 + ul , ul )  | ( move 4 , ul ; move 3 , ua + ul )  | ( move 4 , ua + ul ; move 3 , ul )  | ( move 4 , ul - ua ; move 3 , ul )  | ( move 4 , ul ; move 3 , ul - ua )  | ( move 4 , ul ; move 3 , ul ; pen 0 )  | ( move 4 , ul ; pen 2 ; move 3 , ul )  | ( move 4 , ul ; move 3 , ul ; pen 2 )  | ( move 4 , ul ; move 3 , ul ; pen 4 )  | ( move 4 , ul ; pen ua ; move 3 , ul )  | ( pen ul ; move 4 , ul ; move 3 , ul )  | ( move 4 , ul ; v0 = 4 ; move 3 , ul )  | ( move 4 , ul ; move 2 , ul ; move ul , 0 )  | ( move 4 , ul ; move 3 , ul ; v0 = ul )  | ( ( pen ul ; move 4 , ul ) ; move 3 , ul )  | ( move 4 , ul ; v0 = ul ; move 3 , v0 )  | ( v0 = ul ; move 4 , v0 ; move 3 , v0 )  | ( move 0 , 0 ; ( move 4 , ul ; move 3 , ul ) )  | ( v0 = 2 - 4 ; move 4 , ul ; move 3 , ul )  | ( move 0 , ul ; ( move 4 , ua ; move 3 , ul ) )  | ( pen 4 ; move 3 + ul , ul - ua ; move 3 , ul )  | ( v0 = 4 - ul ; move 4 , ul ; move v0 , ul )  | ( move 4 , ul ; ( move 3 , ul ; pen ul ) ; pen ua )  | ( ( move 4 , ul ; move 3 , ul - ua ) ; pen 0 - 2 )  | ( move 3 + ul , ul ; move 4 - ul , ul ; v0 = ua )  | ( ( move ul , ul ; move 3 , ua ) ; move 4 - ul , ul )  | ( move 4 , ul ; v0 = ul ; move 2 + v0 , ul - ua )  | ( v0 = ul ; move 4 , v0 ; move 3 / v0 , ua + v0 )  | ( pen ul ; move 2 + 2 , ul ; ( v0 = 3 ; move 3 , ul ) )  
[520] ( move ul , ul ; move 3 , 4 )  | ( move ul , 2 - ul ; move 3 , 4 )  | ( move ul , ul ; move 2 + ul , 4 )  | ( pen 4 ; move ul , ul ; move 3 , 4 )  | ( move ul , ul ; pen ua ; move 3 , 4 )  | ( pen ul ; move ul , ul ; move 3 , 4 )  | ( move ul , ul ; move 3 , 4 ; pen ul )  | ( move 2 - ul , ul ; move 2 + ul , 4 )  | ( move ul , ul ; move 3 , 4 ; v0 = 0 )  | ( move ul , ul ; v0 = 2 ; move 3 , 4 )  | ( move ul , ul ; ( pen 4 ; move 3 , 4 ) )  | ( move 0 , ua ; move ul , ul ; move 3 , 4 )  | ( move ul , ua + ul ; pen ul ; move 3 , 4 )  | ( move ul , ul ; v0 = 3 ; move v0 , 4 )  | ( move ul , ul ; ( move 3 , 4 ; move 0 , 2 ) )  | ( move ul , ul ; move 0 , ul + ul ; move 3 , 2 )  | ( move ul , ul ; move 2 + ul , 4 ; move 0 , ul )  | ( move 0 , ul ; move ul , ua ; move 4 - ul , 4 )  | ( move ul , ul ; move ul , 4 ; move 2 , ua * 4 )  | ( move 2 - ul , ul ; move 3 , 3 + ul ; pen ul )  | ( move ul , ua + ul ; move 2 + ul , 4 ; pen ul )  | ( move ul , ul ; v0 = 2 + ul ; move v0 , 4 )  | ( ( v0 = ul ; move v0 , v0 ) ; move 3 , 4 )  | ( move 2 - ul , ul ; move 3 , 4 ; v0 = ul - 4 )  | ( move ul , 2 - ul ; v0 = ul / 3 ; move 3 , 4 )  | ( move ul , ul - ua ; move 3 , 3 + ul ; v0 = 3 )  | ( move ul , ul ; move 4 - ul , 3 + ul ; pen 4 / 3 )  | ( move ul , ul ; move ul , ua + 4 ; move 2 , ua * 3 )  | ( pen ul ; move ul , ul ; ( v0 = 4 ; move 3 , 4 ) )  | ( move ul , ul ; ( move 3 , 4 ; pen 0 ) ; pen ua * 3 )  | ( ( pen ua ; v0 = 3 ) ; move ul , ul ; move v0 , 4 )  | ( move ul , ul ; move 3 - ul , 4 ; ( pen 4 ; move ul , ua ) )  
[521] ( move ul , ul ; move 4 , 4 )  | ( move 2 - ul , ul ; move 4 , 4 )  | ( move ul , ul ; move 3 + ul , 4 )  | ( move ul , ul ; move 4 , ua + 4 )  | ( move ul , ul ; move 4 , 3 + ul )  | ( move ul , ul ; move 4 , 4 - ua )  | ( move ul , ul ; pen 2 ; move 4 , 4 )  | ( pen 4 ; move ul , ul ; move 4 , 4 )  | ( move 3 - 2 , ul ; move 4 , 2 * 2 )  | ( move ul , 2 - ul ; move 2 * 2 , 4 )  | ( move ul , ua + ul ; move 2 + 2 , 4 )  | ( move ul , ul - ua ; move 4 , 3 + ul )  | ( move ul , ul ; pen 3 * 3 ; move 4 , 4 )  | ( ( move ul , ul ; pen 4 ) ; move 4 , 4 )  | ( move ul , ul ; move 4 , 4 ; move 0 , ua )  | ( move ul , ul ; move 4 , 4 ; v0 = ua )  | ( move ul , ul ; pen 2 ; move 4 , 3 + ul )  | ( move ul , ul ; move 4 , 4 - ua ; pen 2 )  | ( move ul , ul ; move ul , 4 ; move 3 , ua )  | ( move ul , ul ; move 4 , 4 ; move v0 , 3 )  | ( v0 = 4 ; move ul , ul ; move v0 , 4 )  | ( move ul , ul ; v0 = 4 ; move v0 , v0 )  | ( pen 3 * 2 ; move ul , ul ; move 3 + ul , 4 )  | ( move ul , 4 - 3 ; move 4 , ua + 4 ; pen ua )  | ( move ul , ul ; v0 = ua + ul ; move 4 , 4 )  | ( ( move ul , ul ; move 3 + ul , 4 ) ; pen ua )  | ( ( move ul , ul ; pen ul ) ; move 3 + ul , 4 )  | ( v0 = 3 - 2 ; move v0 , v0 ; move 4 , 4 )  | ( move ul , ul ; v0 = 2 ; move 4 , v0 + v0 )  | ( move ul , ua + ul ; move 4 , 3 + ul ; v0 = 0 )  | ( ( move ul , ul ; pen ul ) ; move 4 , 4 ; move 0 , 3 )  | ( ( v0 = ul ; move ul , v0 ) ; move 4 , 4 * v0 )  
[522] ( move ul , 4 ; move 4 , ul )  | ( move 0 - ul , ul ; move 4 , 4 )  | ( move 2 - ul , 4 ; move 4 , ul )  | ( move ul , 4 ; move 3 + ul , ul )  | ( move ul , 3 + ul ; move 4 , ul )  | ( move ul , 4 ; move 4 , ua + ul )  | ( move ul , ua + 4 ; move 4 , ul )  | ( pen 2 ; move ul , 4 ; move 4 , ul )  | ( pen ua ; move ul , 4 ; move 4 , ul )  | ( move ul , 4 ; move 4 , ul ; pen ul )  | ( move ul , 3 + ul ; move 4 , ua + ul )  | ( move ul , 4 ; move 3 + ul , ua + ul )  | ( move ul , 3 + ul ; move 3 + ul , ul )  | ( move 0 , ul ; move ul , 3 ; move 4 , ul )  | ( move ul , 4 ; move 2 , ul ; move 2 , ua )  | ( move ul , 4 ; move 4 , ul ; v0 = ua )  | ( move ul , 4 ; move 4 , ul ; pen 2 + ul )  | ( move ul , 3 + ul ; move 4 , ul ; pen ua )  | ( move ul , 4 - ua ; move 4 , ul ; pen ua )  | ( move ul , 4 ; v0 = 4 ; move v0 , ul )  | ( move ul , 4 ; v0 = ul ; move 4 , v0 )  | ( move ul , 2 + 2 ; v0 = 2 ; move 4 , ul )  | ( move ul , 2 * 2 ; pen 2 ; move 4 , ul - ua )  | ( v0 = ul ; ( move v0 , 4 ; move 4 , ul ) )  | ( move ul , 4 ; ( v0 = ul ; move 4 , v0 ) )  | ( v0 = 4 ; ( move ul , v0 ; move 4 , ul ) )  | ( ( v0 = ul ; move v0 , 4 ) ; move 4 , v0 )  | ( move ul , 4 ; ( move 2 + 2 , ul ; v0 = ua ) )  | ( ( move ul , 4 ; move 4 , ul ) ; v0 = ua / 3 )  | ( ( v0 = 4 ; move ul , v0 ; pen ul ) ; move v0 , ul )  | ( move ul , 4 ; ( move 4 , ul ; pen ua + ua ; move 0 , ua ) )  | ( move ul , 4 ; move 0 , ua + ul ; ( pen ua ; move 4 , ua ) )  
[523] ( move 4 , ul ; move 4 , ul )  | ( move 4 , 4 - 3 ; move 4 , ul )  | ( move 4 , ua + ul ; move 4 , ul )  | ( move 4 , ul ; move 4 , ul - ua )  | ( move 4 , ul ; pen 2 ; move 4 , ul )  | ( move 4 , ul ; pen ua ; move 4 , ul )  | ( move 4 , ul ; pen ul ; move 4 , ul )  | ( move 2 + 2 , ul ; move 4 , ul - ua )  | ( move 4 , ua + ul ; move 3 + ul , ul )  | ( move 3 + ul , ul ; move 4 , ua + ul )  | ( move 4 , ul ; move 3 + ul , ua + ul )  | ( move 4 , ul ; move 4 , ul ; move 0 , ua )  | ( move 3 + ul , ul ; move 4 , ul ; pen 0 )  | ( ( move 4 , ul ; move 4 , ul ) ; pen ua )  | ( v0 = 4 ; move v0 , ul ; move 4 , ul )  | ( v0 = ul ; move 4 , v0 ; move 4 , v0 )  | ( v0 = 4 ; move v0 , ul ; move v0 , ul )  | ( move 4 , ul ; move 4 , ul ; v0 = ua + 3 )  | ( move 3 + ul , ul ; move 0 , ul ; move 4 , ua )  | ( move 4 , ul ; ( move 4 , ul ; pen ul - ua ) )  | ( move 4 , ua + ul ; move 3 + ul , ul ; pen ua )  | ( move 4 , ul ; v0 = 0 ; move 4 / v0 , ul )  | ( move 4 , ul ; ( move 4 , ul ; v0 = 4 + ul ) )  | ( move 3 + ul , ul ; move 4 , ua + ul ; move 0 , 2 )  | ( move 4 , ul ; ( v0 = ul + ul ; move 4 , ul ) )  | ( move 4 - ul , ul ; move ul , ua + ua ; move 4 , ul )  | ( ( move 4 , ul ; move 0 , ul ; pen ua ) ; move 4 , ua )  | ( pen ua ; ( move 4 , ua + ul ; pen 4 ; move 4 , ul ) )  | ( ( pen ua ; move 4 , ul ; pen 4 + ul ) ; move 4 , ul )  | ( pen 4 - ul ; ( move 4 , ul ; pen ua ) ; move 4 , ul )  | ( v0 = ul ; move 4 * v0 , v0 - ua ; move 4 , v0 )  | ( ( move 4 , ul ; ( move 4 , ul ; pen ul ) ) ; v0 = ul )  
[524] ( move 4 , ul ; move ul , 4 )  | ( move 4 , ul ; move 2 - ul , 4 )  | ( move 4 , 2 - ul ; move ul , 4 )  | ( move 4 , ul ; move ul , 3 + ul )  | ( move 4 , ua + ul ; move ul , 4 )  | ( move 4 , ul ; move ul , 4 - ua )  | ( move 4 , ul - ua ; move ul , 4 )  | ( move 4 , ul ; move ul , 4 ; pen 0 )  | ( move 4 , ul ; move 3 - 2 , 2 * 2 )  | ( move 4 , ul ; move ul , 4 ; pen ul )  | ( move 3 + ul , ua + ul ; move ul , 4 )  | ( move 0 , ua ; move 4 , ul ; move ul , 4 )  | ( move 4 , ul ; v0 = ul ; move ul , 4 )  | ( move 4 , ul ; ( pen ul ; move ul , 4 ) )  | ( move 4 , ul ; v0 = ul ; move v0 , 4 )  | ( v0 = 4 ; move v0 , ul ; move ul , 4 )  | ( move 4 , ul ; v0 = 4 ; move ul , v0 )  | ( v0 = 4 ; move v0 , ul ; move ul , v0 )  | ( move 4 , ul ; move ul , 3 + ul ; v0 = 3 )  | ( v0 = 0 ; move 4 , ul ; move ul / v0 , 4 )  | ( move 4 , ul ; move ul , 3 + ul ; pen ua * ua )  | ( move 4 , ul ; move ul , 4 - ua ; pen ua - ul )  | ( ( v0 = ul ; move 4 , ul ) ; move v0 , 4 )  | ( move 3 + ul , ul ; v0 = 4 ; move ul , v0 )  | ( v0 = ul ; move 4 , v0 ; move v0 , 2 * 2 )  | ( ( move 4 , ul ; move ul , 4 ) ; v0 = 4 / 2 )  | ( move 2 * 2 , ul ; move ul , 4 ; move 0 , ua * 4 )  | ( ( v0 = 4 ; move v0 , ul ) ; move ul , v0 )  | ( move 2 + 2 , ul ; v0 = ul ; move v0 , 4 / v0 )  | ( ( move 4 , ul ; move ul , 4 ; pen ul / ua ) ; pen ul )  | ( move 3 + ul , ua + ul ; pen ua * 3 ; move ul , 4 - ua )  
[525] ( move 4 , 4 ; move ul , ul )  | ( move 4 , 2 + 2 ; move ul , ul )  | ( move 3 + ul , 4 ; move ul , ul )  | ( move 4 , 3 + ul ; move ul , ul )  | ( move 4 , 4 - ua ; move ul , ul )  | ( move 4 , 4 ; pen ul ; move ul , ul )  | ( move 2 * 2 , 2 * 2 ; move ul , ul )  | ( move 3 + ul , 4 ; move ul , ua + ul )  | ( move 4 , 4 ; move ul , ul ; pen 4 / 2 )  | ( move 4 , 4 ; move 2 - ul , ul ; pen ul )  | ( move 4 , 4 ; pen 3 + ul ; move ul , ul )  | ( pen ua ; move 4 , 3 + ul ; move ul , ul )  | ( move 4 , 4 ; v0 = ul ; move v0 , v0 )  | ( v0 = 4 ; move v0 , v0 ; move ul , ul )  | ( move 0 , 2 - ul ; move 4 , 3 ; move ul , ul )  | ( v0 = 0 ; move 3 + ul , 4 ; move ul , ul )  | ( move 4 , 4 ; move ul , ul ; v0 = ua + 2 )  | ( move 3 + ul , 4 ; v0 = 4 ; move ul , ul )  | ( move 0 , 4 - ul ; move 4 , ul ; move ul , ul )  | ( move 3 + ul , 4 ; move ul , ul ; v0 = ul )  | ( move 4 , 4 - ua ; move ul , ul ; pen ua + 3 )  | ( move 4 , 4 ; v0 = 4 ; move ul , v0 - 3 )  | ( move ul + ul , 4 ; move 2 , ua ; move ul , ul )  | ( ( v0 = ul ; move 4 , 4 ) ; move ul , v0 )  | ( move 4 , 4 ; pen ua ; ( move ul , ul ; pen 3 ) )  | ( move 4 , 4 ; v0 = 2 - ul ; move v0 , v0 )  | ( v0 = 4 ; move v0 , v0 + ua ; move ul , ul )  | ( move 2 + 2 , 4 ; pen 4 + ul ; move ul , ua + ul )  | ( move 4 , ua + 4 ; v0 = ul - ua ; move ul , ul )  | ( move 4 , 4 ; v0 = ul ; ( pen 4 ; move ul , v0 ) )  | ( v0 = 3 + ul ; ( move v0 , v0 ; move ul , ul ) )  
[526] ( move ua , 0 ; move ul , ul )  | ( move ua , ua ; move ul , ul )  | ( move ua , 0 ; move ul , 2 - ul )  | ( move ua , 0 ; move ul , ua + ul )  | ( move ua , 0 - ua ; move ul , ul )  | ( move ua , ua ; move ul , ua + ul )  | ( move ua , ua ; move ul , ul - ua )  | ( move ua , ua ; move ul , ul ; pen 3 )  | ( move ua , ua ; pen ua ; move ul , ul )  | ( move ua , 0 ; move ul , ul ; v0 = 0 )  | ( move ua , 0 ; pen 4 ; move ul , 2 - ul )  | ( move ua , ua ; move 0 , ul ; move ul , 0 )  | ( move ua , ua ; v0 = 3 ; move ul , ul )  | ( pen 3 ; move ua , ua * 4 ; move ul , ul )  | ( move ua , ua + ua ; move ul , ul ; pen 0 )  | ( pen ua - ul ; move ua , 0 ; move ul , ul )  | ( pen ul ; move ua , ua + ua ; move ul , ul )  | ( move ua , ua ; move ul , ul ; pen ua - ul )  | ( v0 = ua ; move v0 , ua ; move ul , ul )  | ( move ua , ua ; v0 = ul ; move ul , v0 )  | ( move ua , ua ; v0 = ul ; move v0 , v0 )  | ( move ua , ua ; move ul , ua + ul ; v0 = 2 )  | ( ( move ua , ua ; move ul , ul ) ; v0 = ul )  | ( pen ua + ul ; move ua , ua * 3 ; move ul , ul )  | ( move ua , ua ; ( v0 = ul ; move v0 , ul ) )  | ( ( move ua , ua ; v0 = ul ) ; move v0 , v0 )  | ( ( v0 = ul ; move ua , ua ) ; move v0 , v0 )  | ( move ua , ua * 2 ; move ul , ua + ul ; pen 0 - ul )  | ( v0 = ul ; move 4 + 2 , ua + ua ; move v0 , ul )  | ( ( move ua , 0 ; v0 = 4 ; pen ua ) ; move ul , ul )  | ( move ua , ua ; pen ua ; ( move ul , ul ; move 0 , 2 ) )  | ( ( move ua , ua ; pen ua ; move ul , ul ) ; v0 = ua )  
[527] ( move ul , 0 ; move ua , ul )  | ( move ul , ua ; move ua , ul )  | ( move ul , ua ; move ua , 3 - 2 )  | ( move ul , 0 ; move ua , ua + ul )  | ( move ul , ua ; move ua , ua + ul )  | ( pen 2 ; move ul , ua ; move ua , ul )  | ( pen ul ; move ul , ua ; move ua , ul )  | ( move ul , ua ; v0 = 0 ; move ua , ul )  | ( move ul , ua ; move 0 , ua ; move ua , ul )  | ( move ul , ua ; move ua , ul ; v0 = ua )  | ( move ul , ua ; move ua , ul ; v0 = ul )  | ( move ul , ua ; move ua , ul ; pen ua + 3 )  | ( pen ul / 2 ; move ul , ua ; move ua , ul )  | ( move ul , 0 ; v0 = ul ; move ua , v0 )  | ( move ul , 0 ; move ua , ul ; move 0 , 3 + 3 )  | ( v0 = ul ; move v0 , ua ; move ua , v0 )  | ( v0 = ua ; move ul , v0 ; move v0 , ul )  | ( pen 4 + 2 ; move 2 - ul , ua ; move ua , ul )  | ( move 2 - ul , ua ; move ua , ul ; v0 = ua )  | ( pen 0 ; ( pen 3 ; move ul , ua ) ; move ua , ul )  | ( move ul , ua ; v0 = ul ; move ua / v0 , v0 )  | ( move 0 , ul ; move ul , ul - 2 ; move ua , ua + ul )  | ( move ul , ua + ua ; ( move ua , ul ; v0 = ua ) )  | ( pen ua - 3 ; ( move ul , 0 ; move ua , ul ) ; pen ua )  | ( move ul , ua ; pen 2 ; ( move ua , ul ; pen 3 / ua ) )  | ( move ul , ua ; move ua , ul ; ( pen ul ; pen 3 + ul ) )  | ( move ul , ua ; ( pen ua * ua ; pen 3 ) ; move ua , ul )  | ( v0 = ua ; move ul , v0 - ua ; move v0 , ul - ua )  | ( move ul , ua ; ( move ua , ul ; v0 = ua ) ; pen v0 )  | ( move ul , ua ; ( v0 = ua + ua ; move ua , ua + ul ) )  | ( ( move ul , ua ; move ua , ul ; pen ul - ua ) ; v0 = ul )  
[528] ( move ua , 2 ; move ua , ul )  | ( move ua , 4 - 2 ; move ua , ul )  | ( move ua , 4 / 2 ; move ua , ul )  | ( move ua , 2 ; move ua , ua + ul )  | ( move ua , ua + 2 ; move ua , ul )  | ( move ua , 2 - ua ; move ua , ul )  | ( move ua , 3 - ul ; move ua , ul )  | ( move ua , ul + ul ; move ua , ul )  | ( move ua , 2 ; move ua , ul ; pen 4 )  | ( move ua , 2 ; move ua , ul ; move 0 , ua )  | ( move ua , 2 ; move ua , ul ; v0 = ul )  | ( move ua , 2 ; move ua , ua + ul ; pen 0 )  | ( pen 2 + ul ; move ua , 2 ; move ua , ul )  | ( move ua , 2 ; move ua , ua + ul ; pen 4 )  | ( move ua , 4 / 2 ; pen ul ; move ua , ul )  | ( move ua , ul + ul ; move ua , ul ; pen 4 )  | ( move ua , 2 ; v0 = ua ; move v0 , ul )  | ( move ua , 2 - ua ; move 0 , ul ; move ua , 0 )  | ( move ua , 2 - ua ; move ua , ul ; move 0 , 3 )  | ( move ua , 2 ; ( move ua , ul ; v0 = ul ) )  | ( ( move ua , 2 ; move ua , ua + ul ) ; pen 2 )  | ( move ua , 2 ; move ua , ul ; v0 = ul + ul )  | ( move 0 , ua ; move ua , ul + ul ; move ua , ul )  | ( move ua , ul + ul ; v0 = ul ; move ua , ul )  | ( pen ua + ua ; move ua , 2 ; move ua , ul - ua )  | ( ( move ua , 2 ; pen 0 ; pen ul ) ; move ua , ul )  | ( v0 = ul ; move ua , v0 + ul ; move ua , ul )  | ( v0 = ua ; move v0 , ua + 2 ; move v0 , ul )  | ( v0 = ua ; move v0 , 2 ; move v0 , ua + ul )  | ( move ua , ul + ul ; v0 = ua ; move v0 , 2 - ul )  | ( move ua , 2 ; move ua , ul ; ( v0 = 4 - ul ; pen ul ) )  | ( move 0 , ul ; move ua , ul ; ( move ua , ul ; move ul , 2 ) )  
[529] ( move ua , ul ; move ua , 2 )  | ( move ua , ua + ul ; move ua , 2 )  | ( move ua , ul ; move ua , ua + 2 )  | ( move ua , ul ; move ua , 2 - ua )  | ( move ua , ul ; move ua , 3 - ul )  | ( move ua , ul ; move ua , ul + ul )  | ( move ua , ul ; pen ua ; move ua , 2 )  | ( move ua , ul ; pen ul ; move ua , 2 )  | ( move ua , ua + ul ; move ua , 4 / 2 )  | ( move ua , ul ; move 0 , 0 ; move ua , 2 )  | ( pen 3 ; ( move ua , ul ; move ua , 2 ) )  | ( move ua , ul ; v0 = ul ; move ua , 2 )  | ( move ua , ul ; move ua , 2 ; v0 = ul )  | ( move ua , ua + ul ; pen 3 ; move ua , 2 )  | ( move ua , ul ; pen ua ; move ua , ua + 2 )  | ( pen ul ; move ua , ul - ua ; move ua , 2 )  | ( v0 = 4 - 3 ; move ua , ul ; move ua , 2 )  | ( move ua , ul ; ( move 0 , ua ; move ua , 2 ) )  | ( move ua , ul ; move ua , 4 - 2 ; v0 = ua )  | ( move ua , ul ; move ua , 2 ; v0 = 4 + ul )  | ( move 0 , ul ; move ua , 0 ; move ua , ul + ul )  | ( ( pen ua ; move ua , ul ) ; move ua , 2 - ua )  | ( ( pen ul ; move ua , ul ) ; move ua , ua + 2 )  | ( move ua , ul ; v0 = ul ; move ua , v0 + v0 )  | ( v0 = ua ; move v0 , ul ; move v0 , ul + ul )  | ( v0 = ua ; move v0 , ul ; move v0 , 2 + v0 )  | ( ( move ua , ul ; pen ua ) ; move ua , 2 ; v0 = 4 )  | ( ( pen ul ; move ua , ua + ul ) ; move ua , 2 ; pen 3 )  | ( ( move ua , ul ; v0 = ua ) ; move v0 , 2 + v0 )  | ( ( pen ua + 2 ; move ua , ua + ul ) ; move ua , ul + ul )  | ( pen 2 + ul ; ( move ua , ul ; pen 2 ; move ua , 2 - ua ) )  | ( ( move ua , ul ; move 0 , ul ) ; move ua , ul ; v0 = ul )  
[530] ( move ua , ul ; move ua , 3 )  | ( move ua , 2 - ul ; move ua , 3 )  | ( move ua , ul ; move ua , 2 + ul )  | ( move ua , ua + ul ; move ua , 3 )  | ( move ua , ul - ua ; move ua , 3 )  | ( move ua , ul ; move ua , 4 - ul )  | ( move ua , ul ; move ua , 3 ; pen 2 )  | ( pen 2 ; move ua , ul ; move ua , 3 )  | ( move ua , ul ; move ua , 3 ; pen 3 )  | ( pen ua ; move ua , ul ; move ua , 3 )  | ( move ua , ul ; move ua , 3 ; pen ul )  | ( move ua , ul ; pen ul ; move ua , 3 )  | ( move ua , ul - ua ; move ua , 2 + ul )  | ( move ua , ul ; move ua , 3 ; v0 = 3 )  | ( v0 = 3 ; move ua , ul ; move ua , 3 )  | ( move ua , ul ; pen 3 / 2 ; move ua , 3 )  | ( move ua , ul ; move 0 , 3 ; move ua , ua )  | ( move ua , ul ; v0 = ua ; move ua , 3 )  | ( move ua , ul ; move ua , 3 ; pen ua + 2 )  | ( move ua , 2 - ul ; move ua , 3 ; move 0 , ul )  | ( move ua - ul , ul ; move ul , 0 ; move ua , 3 )  | ( move ua , ul ; move ua , 3 ; move ul - 2 , ua )  | ( move ua , ul ; move ua , 3 ; v0 = ul + ul )  | ( v0 = ua ; move v0 , ul ; move v0 , 3 + v0 )  | ( ( move ua , ul ; v0 = 0 ) ; move ua , 3 - v0 )  | ( ( move ua , ul ; move ua , 4 - ul ) ; pen ul + ul )  | ( pen ua ; ( pen ul ; move ua , ul - ua ) ; move ua , 3 )  | ( move ua - ul , 2 - ul ; move ul , ua + ua ; move ua , 3 )  | ( ( pen ua + 3 ; move ua , ul ; move 0 , 3 ) ; move ua , 0 )  | ( pen ua ; ( v0 = ua ; move v0 , ul ) ; move v0 , 3 )  | ( ( pen ul ; move ua , ul ; pen ua ) ; pen ul ; move ua , 3 )  | ( pen ua - 2 ; move 0 , ua ; ( move ua , ul ; move ua , 3 ) )  
[531] ( move ua , 2 ; move ul , ul )  | ( move ua , 2 ; move ul , ua + ul )  | ( move ua , 2 - ua ; move ul , ul )  | ( move ua , 3 - ul ; move ul , ul )  | ( move ua , ul + ul ; move ul , ul )  | ( pen 3 ; move ua , 2 ; move ul , ul )  | ( move ua , ul + ul ; move ul , ul - ua )  | ( move ua , 2 ; move ul , ul ; v0 = 2 )  | ( pen 3 + 2 ; move ua , 2 ; move ul , ul )  | ( move 0 , 2 ; move ua , ua ; move ul , ul )  | ( move ua , 2 ; v0 = ua ; move ul , ul )  | ( move ua , 2 ; pen ul ; move ul , 2 - ul )  | ( move ua , 2 ; move ul , ua + ul ; pen ul )  | ( move ua , 2 ; pen ul ; move ul , ul - ua )  | ( pen ul ; move ua , 3 - ul ; move ul , ul )  | ( move ua , 4 / 2 ; move 0 , 0 ; move ul , ul )  | ( move ua , 2 ; ( v0 = 2 ; move ul , ul ) )  | ( ( move ua , 2 ; move ul , ul ) ; v0 = 2 )  | ( move ua , 2 ; v0 = ua - 3 ; move ul , ul )  | ( move ua , 2 ; move ul , ul ; v0 = ul / ua )  | ( move ua , 2 - ua ; pen ua ; move ul , ua + ul )  | ( move ua , ul + ul ; v0 = ul ; move v0 , ul )  | ( v0 = ul + ul ; move ua , v0 ; move ul , ul )  | ( v0 = ul ; move ua , v0 * 2 ; move ul , v0 )  | ( ( move ua , 2 ; move ul , ul ) ; v0 = ua + ul )  | ( move 0 , ua + ul ; move ua , ul ; move ul , ul - ua )  | ( v0 = ul ; move ua , v0 + v0 ; move ul , v0 )  | ( v0 = ul ; move ua , v0 + ul ; move v0 , v0 )  | ( move ua , 2 ; ( v0 = ua ; pen v0 ; move ul , ul ) )  | ( move ua , 2 ; ( pen 2 ; v0 = ul ) ; move v0 , v0 )  | ( move 0 , ul ; move ua , ul ; ( move 0 , ul ; move ul , ua ) )  | ( ( move ua , ul + ul ; ( pen ul ; pen ul ) ) ; move ul , ul )  
[532] ( move ul , 2 ; move ua , ul )  | ( move 2 - ul , 2 ; move ua , ul )  | ( move ul , ua + 2 ; move ua , ul )  | ( move ul , 3 - ul ; move ua , ul )  | ( move ul , ul + ul ; move ua , ul )  | ( move ul , 2 ; move ua , ul ; pen 4 )  | ( move 2 - ul , 2 - ua ; move ua , ul )  | ( move ul , 2 ; move ua , ul ; pen 0 - 2 )  | ( move ul , 2 ; ( move ua , ul ; pen 4 ) )  | ( move ul , 4 / 2 ; pen ul ; move ua , ul )  | ( move ul , 2 ; ( pen ua ; move ua , ul ) )  | ( pen ua ; move ul , 2 - ua ; move ua , ul )  | ( move ul , 2 ; v0 = ul ; move ua , v0 )  | ( pen ua ; move ul , ul + ul ; move ua , ul )  | ( move ul , ul + ul ; move ua , ul ; pen ua )  | ( v0 = ul ; move v0 , 2 ; move ua , v0 )  | ( ( move ul , 2 ; move ua , 2 - ul ) ; pen 3 )  | ( move ul , 2 ; ( move ua , ul - ua ; pen 0 ) )  | ( move 0 , ua ; move ul , 2 ; move ua , ua + ul )  | ( v0 = ua + ua ; move ul , 2 ; move ua , ul )  | ( pen ua - 4 ; move ul , 2 ; move ua , ua + ul )  | ( pen ul ; move ul , 2 - ua ; move ua , 2 - ul )  | ( move ul , ul + ul ; v0 = ua ; move v0 , ul )  | ( move ul , 2 ; move ua , 2 - ul ; v0 = ua * 2 )  | ( move ul , 2 ; ( v0 = ul / 4 ; move ua , ul ) )  | ( pen ua + ul ; ( move ul , 4 / 2 ; move ua , ul ) )  | ( move ul , 3 - ul ; ( move ua , ua + ul ; pen ul ) )  | ( ( v0 = ua ; pen 2 ; move ul , 2 ) ; move v0 , ul )  | ( pen 3 ; v0 = 2 ; ( move ul , v0 ; move ua , ul ) )  | ( ( pen ul + ul ; move ul , 2 ) ; move ua , ul ; pen ua )  | ( v0 = ul ; move ul , ul + v0 ; move ua , ua + v0 )  | ( v0 = ul ; move v0 , 3 - v0 ; move ua , v0 + ua )  
[533] ( move ul , ul ; move ua , 2 )  | ( move ul , ul ; move ua , 4 / 2 )  | ( move ul , ua + ul ; move ua , 2 )  | ( move ul , ul ; move ua , ul + ul )  | ( pen ua ; move ul , ul ; move ua , 2 )  | ( move ul , ul ; move ua , 2 ; pen ul )  | ( move ul , ua + ul ; move ua , ul + ul )  | ( move ul , ul ; move 0 , 2 ; move ua , 0 )  | ( move ul , ul ; v0 = 0 ; move ua , 2 )  | ( move ul , ul ; move ua , 2 ; v0 = 4 )  | ( move ul , ul ; v0 = ul ; move ua , 2 )  | ( pen ua - 2 ; move ul , ul ; move ua , 2 )  | ( move ul , ul ; move ua , 2 ; pen ua * 2 )  | ( move ul , ul ; pen 4 + ul ; move ua , 2 )  | ( pen 4 - ul ; move ul , ul ; move ua , 2 )  | ( move ul , ul ; ( pen ua ; move ua , 2 ) )  | ( move ul , ul ; move 0 , ul ; move ua , ul )  | ( move ul , ul ; pen ul + ul ; move ua , 2 )  | ( pen 3 / 2 ; ( move ul , ul ; move ua , 2 ) )  | ( move ul , ul ; v0 = 0 ; move ua , ua + 2 )  | ( ( move 0 , ua ; move ul , ul ) ; move ua , 2 )  | ( move ul , ul ; move ua , ua + 2 ; v0 = ua )  | ( move ul , ul - ua ; ( move ua , 2 ; pen ul ) )  | ( ( move ul , ul ; move ua , 2 ) ; pen ua - ul )  | ( move 0 , ua ; move ul , ul ; move ua , ul + ul )  | ( move ul , ul ; ( pen ua ; move ua , ul + ul ) )  | ( v0 = ua + ul ; move ul , v0 ; move ua , 2 )  | ( v0 = ua ; move ul , ul ; move v0 , 3 - ul )  | ( move 0 , ua ; ( move ul , ul ; move ua , ua + 2 ) )  | ( v0 = ul ; move v0 * v0 , v0 ; move ua , 2 )  | ( ( move ul , ul ; move ua , 2 ) ; v0 = 0 ; pen 0 )  | ( v0 = ul ; move ul , v0 * v0 ; move ua , ul + v0 )  
[534] ( move ua , ul ; move 2 , ul )  | ( move ua , 2 - ul ; move 2 , ul )  | ( move ua , ul ; move 4 / 2 , ul )  | ( move ua , ul ; move 2 , ua + ul )  | ( move ua , ul ; move 3 - ul , ul )  | ( move ua , ul ; move ul + ul , ul )  | ( move ua , ul ; pen 3 ; move 2 , ul )  | ( move ua , ul ; move 2 , ul ; pen 4 )  | ( move ua , ul ; pen ua ; move 2 , ul )  | ( move ua , ul ; pen ul ; move 2 , ul )  | ( move ua , ul ; move 3 - ul , ul - ua )  | ( move ua , ua + ul ; move ul + ul , ul )  | ( v0 = 3 ; move ua , ul ; move 2 , ul )  | ( move ua , ul ; move ul , ul ; move ul , 0 )  | ( move ua , ul ; move 2 , ua + ul ; pen ua )  | ( move ua , ul ; pen ul ; move 3 - ul , ul )  | ( v0 = 2 ; move ua , ul ; move v0 , ul )  | ( v0 = ul ; move ua , v0 ; move 2 , v0 )  | ( move ua , 2 - ul ; move 0 , ua ; move 2 , ul )  | ( move ua , ul ; v0 = 4 + ul ; move 2 , ul )  | ( ( move ua , ul ; move ul , ul ) ; move ul , 0 )  | ( ( move ua , ul ; move ul , ul ) ; move ul , ua )  | ( move ua , ul ; move ul + ul , ul ; pen ua * 4 )  | ( v0 = ul ; move ua , ul ; move v0 + v0 , ul )  | ( move ua , ul ; v0 = ul ; move v0 + v0 , v0 )  | ( move ua , ul ; ( move ul , ul ; move ul , ua + ua ) )  | ( v0 = ul ; move ua , v0 ; move v0 + v0 , v0 )  | ( move ua , ul ; pen 2 ; ( move ul + ul , ul ; pen ul ) )  | ( move ua , ul ; move ul , ul ; ( move ul , ua ; pen ua ) )  | ( move ua , ul - ua ; move 3 - ul , ul ; v0 = ua / 3 )  | ( v0 = ul ; move ua * v0 , ul ; move 2 / v0 , v0 )  | ( v0 = ul ; ( move ua , ua + ul ; move 2 , ul ; pen ua ) )  
[535] ( move ua , ul ; move ul , 2 )  | ( move ua , ul ; move ul , 4 - 2 )  | ( move ua , ua + ul ; move ul , 2 )  | ( move ua , ul ; move ul , ua + 2 )  | ( move ua , ul ; move ul , ul + ul )  | ( move ua , ul ; move ul , 2 ; pen ul )  | ( move ua , ua + ul ; move ul , ul + ul )  | ( ( move ua , ul ; pen 4 ) ; move ul , 2 )  | ( move ua , ul ; move ul , 2 ; v0 = ua )  | ( move ua , ul ; move ul , 2 ; v0 = ul )  | ( move ua , ul ; move ul , 2 - ua ; pen ul )  | ( move ua , ul ; v0 = 2 ; move ul , v0 )  | ( move ua , ul ; v0 = ul ; move v0 , 2 )  | ( move ul , 0 ; move 0 - ua , ul ; v0 = 4 )  | ( move ua , ul ; v0 = 4 + 4 ; move ul , 2 )  | ( ( move ua , ul ; v0 = 0 ) ; move ul , 2 )  | ( move ua , ul ; move ul , 3 - ul ; v0 = 0 )  | ( move ua , ul ; move ul , 2 - ua ; v0 = 4 )  | ( move ua , ul ; ( move ul , 2 ; pen 2 + ul ) )  | ( move ua , ul ; move ul , 2 ; v0 = ua * ua )  | ( v0 = 0 ; move ua , ul ; move ul , 2 / v0 )  | ( pen ul ; ( move ua , ul ; move ul , ul + ul ) )  | ( move ua , ul ; pen 2 ; ( move ul , 2 ; pen 0 ) )  | ( move ua , ul - ua ; v0 = ul ; move v0 , 2 )  | ( move ua , ul ; move 4 - 3 , ua + 2 ; v0 = ua )  | ( move ua , ul ; v0 = ul ; move v0 , v0 + v0 )  | ( v0 = ul ; move ua , ul ; move v0 , v0 + v0 )  | ( move ua , ul ; pen 3 ; ( move ul , ua + 2 ; pen 2 ) )  | ( move ua , ul ; ( pen 2 ; move ul , 2 ; pen ua * 2 ) )  | ( ( pen 2 / ua ; pen ul ) ; move ua , ul ; move ul , 2 )  | ( ( move ua , ua + ul ; move 2 - ul , 2 ) ; v0 = 4 )  | ( ( move ua , ul ; move ul , ua + 2 ) ; v0 = ua - ul )  
[536] ( move 2 , ul ; move ua , ul )  | ( move 2 , 4 - 3 ; move ua , ul )  | ( move 2 , 2 - ul ; move ua , ul )  | ( move 2 , ua + ul ; move ua , ul )  | ( move 2 , ul ; move ua , ua + ul )  | ( move ul + ul , ul ; move ua , ul )  | ( move 2 , ul ; pen ul ; move ua , ul )  | ( pen ul ; move 2 , ul ; move ua , ul )  | ( move 2 , 2 - ul ; move ua , ul - ua )  | ( move ul + ul , ul ; move ua , ua + ul )  | ( move ul + ul , ul ; move ua , ul - ua )  | ( move 2 , ul ; v0 = ul ; move ua , ul )  | ( pen ul ; move 4 - 2 , ul ; move ua , ul )  | ( pen 4 - ul ; move 2 , ul ; move ua , ul )  | ( move 2 , ul ; move ua , ul ; pen ua + ul )  | ( v0 = 2 ; move v0 , ul ; move ua , ul )  | ( ( move 2 , ul ; move ua , ul ) ; v0 = 0 )  | ( move 2 , ul ; move ua , ul - ua ; v0 = 2 )  | ( move 2 , ul ; move ua , ul ; v0 = ul - 2 )  | ( pen 4 - ul ; ( move 2 , ul ; move ua , ul ) )  | ( move 2 , ua + ul ; ( move ua , ul ; pen ul ) )  | ( move ul , ua + ul ; move ul , 0 ; move ua , ul )  | ( v0 = 2 ; ( move v0 , ul ; move ua , ul ) )  | ( ( move 2 , ul ; v0 = ua ) ; move v0 , ul )  | ( move ul + ul , ul ; pen ul ; move ua , ul - ua )  | ( move ul + ul , ul - ua ; move ua , ul ; move 0 , 0 )  | ( move 2 , ua + ul ; ( v0 = ua ; move v0 , ul ) )  | ( move 0 , ul ; ( move 2 , ua ; move ua , ul ) ; pen 2 )  | ( move 2 , ul ; ( move ua , ua + ul ; v0 = ua / 4 ) )  | ( move ul + ul , ul ; ( v0 = 3 / ua ; move ua , ul ) )  | ( pen ua ; ( pen 3 ; move 2 , ul ; pen ua ) ; move ua , ul )  | ( move 2 , ul ; ( move ua , ul ; pen ua ; v0 = ua + ul ) )  
[537] ( move ul , 3 ; move ua , ul )  | ( move 4 - 3 , 3 ; move ua , ul )  | ( move ul , ua + 3 ; move ua , ul )  | ( move ul , 3 ; move ua , ua + ul )  | ( move ul , 2 + ul ; move ua , ul )  | ( move ul , 3 - ua ; move ua , ul )  | ( move ul , 3 ; move ua , ul - ua )  | ( move ul , 4 - ul ; move ua , ul )  | ( move ul , 3 ; pen 2 ; move ua , ul )  | ( move ul , 3 ; pen 3 ; move ua , ul )  | ( move ul , 3 ; move ua , ul ; pen ul )  | ( move ul , 3 ; pen ul ; move ua , ul )  | ( move ul , ua + 3 ; move ua , 2 - ul )  | ( move ul , 3 ; move ua , ul ; v0 = ua )  | ( pen 2 ; move ul , ua + 3 ; move ua , ul )  | ( move ul , 3 ; move ua , ul ; pen ul - 2 )  | ( pen ul ; move ul , ua + 3 ; move ua , ul )  | ( move ul , 3 ; v0 = ul ; move ua , v0 )  | ( move ul , 3 ; v0 = ua ; move v0 , ul )  | ( v0 = ua ; move ul , 3 ; move v0 , ul )  | ( move ul , 3 ; move ua , ul ; v0 = ua + 3 )  | ( move ul , 3 - ua ; ( pen 2 ; move ua , ul ) )  | ( move ul , 2 + ul ; move ua , ul ; pen 0 - ul )  | ( ( move ul , 3 ; move ua , ul - ua ) ; pen ul )  | ( move ul , 4 - ul ; pen ul ; move ua , ua + ul )  | ( move ul , 2 + ul ; v0 = ua ; move v0 , ul )  | ( ( move ul , 2 + ul ; move ua , ul ) ; v0 = 0 )  | ( ( move ul , 3 ; move ua , ul ) ; move 0 , ul / 2 )  | ( move ul , 3 - ua ; move ua , ul ; v0 = ua / 2 )  | ( v0 = ul ; move v0 , 3 ; move ua / v0 , v0 )  | ( ( move ul , 3 ; pen 3 ; move ua , ul ) ; v0 = 2 )  | ( pen 2 / ua ; ( move ul , 3 ; v0 = ua ; move ua , ul ) )  
[538] ( move ua , 3 ; move ul , ul )  | ( move ua , 3 ; move 4 - 3 , ul )  | ( move ua , 3 ; move ul , 2 - ul )  | ( move ua , ua + 3 ; move ul , ul )  | ( move ua , 2 + ul ; move ul , ul )  | ( move ua , 3 ; move ul , ua + ul )  | ( move ua , 3 - ua ; move ul , ul )  | ( move ua , 4 - ul ; move ul , ul )  | ( pen 3 ; move ua , 3 ; move ul , ul )  | ( move ua , 3 ; pen 3 ; move ul , ul )  | ( pen 4 ; move ua , 3 ; move ul , ul )  | ( move ua , 3 ; pen ua ; move ul , ul )  | ( move ua , 3 ; pen ul ; move ul , ul )  | ( pen ul ; move ua , 3 ; move ul , ul )  | ( move ua , 2 + ul ; move ul , ua + ul )  | ( move ua , 3 ; move ul , ul ; v0 = 0 )  | ( move ua , 3 ; v0 = 4 ; move ul , ul )  | ( v0 = ul ; move ua , 3 ; move ul , ul )  | ( pen 3 + ul ; move ua , 3 ; move ul , ul )  | ( pen ul / 4 ; move ua , 3 ; move ul , ul )  | ( move ua , 3 ; ( move ul , ul ; move 0 , 3 ) )  | ( move ua , ua + 3 ; v0 = 0 ; move ul , ul )  | ( move ua , 2 + ul ; move ul , ul ; pen 3 - ul )  | ( pen ua ; ( move ua , 2 + ul ; move ul , ul ) )  | ( ( v0 = ul ; move ua , 3 ) ; move v0 , ul )  | ( move ua , 4 - ul ; v0 = ua * 3 ; move ul , ul )  | ( move ua , 3 ; v0 = ul ; ( pen 3 ; move ul , ul ) )  | ( v0 = ua ; ( pen ul ; move ua , 3 ; move ul , ul ) )  | ( ( move ua , 3 ; v0 = ul ; pen ul ) ; move ul , v0 )  | ( move ua , 4 - ul ; move ul , ua + ul ; v0 = ul / 3 )  | ( move ua , 3 ; ( v0 = ul ; pen v0 ) ; move v0 , ul )  | ( move ua , 3 ; ( move ul , ul ; ( pen ul ; pen ul - 3 ) ) )  
[539] ( move ua , ul ; move ua , 4 )  | ( move ua , ul ; move ua , 2 * 2 )  | ( move ua , ua + ul ; move ua , 4 )  | ( move ua , ul ; move ua , 3 + ul )  | ( move ua , ul ; move ua , ua + 4 )  | ( move ua , ul - ua ; move ua , 4 )  | ( pen 2 ; move ua , ul ; move ua , 4 )  | ( pen ua ; move ua , ul ; move ua , 4 )  | ( move ua , ul ; pen ul ; move ua , 4 )  | ( move ua , ul ; move ua , 4 ; pen ul )  | ( move ua , ul ; move ua , 4 ; v0 = 4 )  | ( move ua , ul ; ( pen 3 ; move ua , 4 ) )  | ( move ua , ul ; v0 = ua ; move ua , 4 )  | ( pen ua + 2 ; move ua , ul ; move ua , 4 )  | ( pen ua + ul ; move ua , ul ; move ua , 4 )  | ( move ua , ul ; move ua , ua + 4 ; pen ul )  | ( v0 = ul ; move ua , v0 ; move ua , 4 )  | ( v0 = ua ; move ua , ul ; move v0 , 4 )  | ( move 0 , 0 ; move ua , ul ; move ua , 4 - ua )  | ( move ua , ul ; move ua , 4 - ua ; v0 = 3 )  | ( move ua , ul ; move ua , 4 ; v0 = 4 - ul )  | ( ( pen ul ; move ua , ul ) ; move ua , 2 + 2 )  | ( move ua , ua + ul ; move 0 , ul ; move ua , 3 )  | ( move ua , ul ; move ua , 3 + ul ; v0 = ua )  | ( move ua , ul ; move ua , 4 ; v0 = ul / ua )  | ( pen ua + ua ; move ua , 2 - ul ; move ua , 4 )  | ( ( move ua , ul ; pen 4 ; pen ul ) ; move ua , 4 )  | ( move ua , ul ; ( move 0 , ua ; move ua , 2 + 2 ) )  | ( move 0 , ua ; ( move ua , ul ; move ua , 4 ) ; pen ul )  | ( ( pen 3 + ul ; pen ul ) ; move ua , ul ; move ua , 4 )  | ( move ua , ua + ul ; move ua , 2 * 2 ; v0 = ua + ul )  | ( pen 3 + ul ; move ua , ul ; ( move 0 , 3 ; move ua , ul ) )  
[540] ( move ua , ul ; move 3 , ul )  | ( move ua , ul ; move 2 + ul , ul )  | ( move ua , ul ; move 3 , ua + ul )  | ( move ua , ul - ua ; move 3 , ul )  | ( move ua , ul ; move 3 , ul - ua )  | ( move ua , ul ; move 4 - ul , ul )  | ( move ua , ul ; pen ua ; move 3 , ul )  | ( move ua , ul ; move 3 , ul ; pen ul )  | ( pen ul ; move ua , ul ; move 3 , ul )  | ( move ua , ul ; move 3 , ul ; v0 = 2 )  | ( move ua , ul ; move 3 , ul ; v0 = 3 )  | ( ( move ua , ul ; move 3 , ul ) ; pen 3 )  | ( pen ua + 2 ; move ua , ul ; move 3 , ul )  | ( move ua , ul ; move 3 , ul ; pen ul / 4 )  | ( pen ul ; ( move ua , ul ; move 3 , ul ) )  | ( move ua , ul ; move 3 , ua + ul ; pen ul )  | ( pen ul ; move ua , ul ; move 2 + ul , ul )  | ( move ua , ul ; v0 = 3 ; move v0 , ul )  | ( v0 = ul ; move ua , v0 ; move 3 , ul )  | ( ( move ua , ul ; move 3 , ul ) ; move 0 , ul )  | ( move ua , ul ; ( move 3 , ul ; pen ua * 2 ) )  | ( move ua , ul ; move 0 , ul ; move 2 + ul , ua )  | ( move ua , ul ; move 4 - ul , ul ; v0 = ua )  | ( v0 = ul ; ( move ua , v0 ; move 3 , v0 ) )  | ( move ua , ua + ul ; move 3 , ul ; v0 = ua * 2 )  | ( move ua , ul - ua ; move ul , ul ; move 3 - ul , 0 )  | ( move ua , ua + ul ; move 3 , ul ; v0 = ua + ua )  | ( v0 = ul ; move ua , v0 ; move v0 * 3 , v0 )  | ( move ua , ua + ul ; v0 = 2 + ul ; move v0 , ul )  | ( move 0 , ua ; ( move ua , 3 - 2 ; move 3 , ul - ua ) )  | ( move ua , ua + ul ; ( pen ua + ul ; move 2 + ul , ul ) )  | ( ( pen ua * 2 ; move ua , ul ; move 3 , ul ) ; v0 = 3 )  
[541] ( move 3 , ul ; move ua , ul )  | ( move 3 , ul ; move ua , 2 - ul )  | ( move 3 , ua + ul ; move ua , ul )  | ( move 2 + ul , ul ; move ua , ul )  | ( move 3 , ul ; move ua , ua + ul )  | ( move 3 , ul ; pen 4 ; move ua , ul )  | ( pen ua ; move 3 , ul ; move ua , ul )  | ( move 2 + ul , ul ; move ua , ua + ul )  | ( move 2 + ul , ul ; move ua , ul - ua )  | ( move 3 , ul ; move ua , ul ; move 0 , 0 )  | ( move 3 , ul ; move ua , ul ; v0 = 2 )  | ( move 3 , ul ; move ua , ul ; pen 4 * 2 )  | ( move 2 + ul , ul ; move ua , ul ; pen 3 )  | ( ( pen ul ; move 3 , ul ) ; move ua , ul )  | ( move 3 , ua + ul ; pen ua ; move ua , ul )  | ( move 2 + ul , ul ; move ua , ul ; pen ua )  | ( move 3 , ua + ul ; move ua , ul ; pen ul )  | ( move 3 , ul ; ( move ua , ul ; v0 = 4 ) )  | ( move 3 , ul ; move 0 , ul ; move ua , ua * 3 )  | ( move 2 + ul , ul ; v0 = ul ; move ua , ul )  | ( move 3 , ua + ul ; move ua , ul ; v0 = ul )  | ( move 4 - ul , ul ; move ua , ul ; pen 2 - ul )  | ( move 3 , ua + ul ; pen ua + ua ; move ua , ul )  | ( move 2 + ul , ua + ul ; pen ul ; move ua , ul )  | ( move 3 , ua + ul ; v0 = ua ; move v0 , ul )  | ( move 3 , ul ; v0 = ul - ua ; move ua , v0 )  | ( move 3 , ul ; v0 = ua ; move v0 , ul - v0 )  | ( move 2 + ul , 3 - 2 ; move ua , ul ; v0 = ul )  | ( ( move 3 , ul ; move ua , ua + ul ) ; v0 = ua )  | ( move 3 , ul ; ( pen ul ; v0 = ul ; move ua , ul ) )  | ( move 3 , ul ; ( v0 = ul ; move ua / v0 , v0 ) )  | ( ( move 3 , ul ; pen ul ; v0 = ua ) ; move v0 , ul )  
[542] ( move ul , 4 ; move ua , ul )  | ( move ul , 4 ; move ua , 3 - 2 )  | ( move ul , 2 + 2 ; move ua , ul )  | ( move ul , 4 ; move ua , ua + ul )  | ( move ul , 3 + ul ; move ua , ul )  | ( move ul , 4 - ua ; move ua , ul )  | ( move ul , 4 ; move ua , ul ; pen 4 )  | ( move ul , 4 ; move ua , ul ; pen ua )  | ( move ul , 4 ; pen ua ; move ua , ul )  | ( move ul , 4 ; pen ul ; move ua , ul )  | ( pen ul ; move ul , 4 ; move ua , ul )  | ( move 2 - ul , ua + 4 ; move ua , ul )  | ( move ul , 3 + ul ; move ua , ul - ua )  | ( move ul , 4 ; move ua , ul ; v0 = ua )  | ( move ul , 4 ; move ua , ul - ua ; pen ul )  | ( move ul , 4 ; v0 = ul ; move ua , v0 )  | ( move 0 , 4 ; ( move ul , 0 ; move ua , ul ) )  | ( ( move ul , 4 ; move ua , ul ) ; move 0 , 2 )  | ( move ul , 4 ; v0 = 3 * 2 ; move ua , ul )  | ( move ul , 3 + ul ; move 0 , ul ; move ua , 0 )  | ( move ul , 4 ; move ua , ul ; v0 = 4 + ul )  | ( move 0 , 3 - ua ; move ul , ul ; move ua , ul )  | ( move ul , 4 ; v0 = ua + ul ; move ua , ul )  | ( ( v0 = ul ; move v0 , 4 ) ; move ua , ul )  | ( v0 = 4 ; ( move ul , v0 ; move ua , ul ) )  | ( move 0 , ul + ul ; ( move ul , 2 ; move ua , ul ) )  | ( move ul , 4 ; ( move ua , ul ; v0 = ua - ul ) )  | ( move 0 , 3 - ua ; move ul , ua + ul ; move ua , ul )  | ( move ul , ua + 4 ; v0 = 0 ; move ua - v0 , ul )  | ( move ul , 3 + ul ; v0 = ua ; move v0 , ul + v0 )  | ( v0 = 3 - ul ; move ul , v0 * v0 ; move ua , ul )  | ( ( move ul , 4 ; v0 = ul ; pen v0 ) ; move ua , ul )  
[543] ( move ul , ul ; move ua , 4 )  | ( move ul , 2 - ul ; move ua , 4 )  | ( move ul , ul ; move ua , ua + 4 )  | ( move ul , ul - ua ; move ua , 4 )  | ( move ul , ul ; move ua , 4 ; pen 4 )  | ( move ul , ul ; move ua , 4 ; pen ua )  | ( move ul , ul ; pen ua ; move ua , 4 )  | ( move ul , ua + ul ; move ua , ua + 4 )  | ( move ul , ul ; move ua , 4 ; v0 = 4 )  | ( pen 3 ; move ul , ul ; move ua , 2 * 2 )  | ( move ul , ul ; move ua , 4 ; pen 3 + 3 )  | ( move ul , ul ; move 0 , ul ; move ua , 3 )  | ( move 0 , ul ; move ul , ua ; move ua , 4 )  | ( move ul , ul ; move ua , 4 ; move 0 , ua )  | ( move ul , ul ; v0 = ua ; move ua , 4 )  | ( move ul , ul ; move ua , 4 ; v0 = ul )  | ( pen 3 ; move ul , ul ; move ua , 3 + ul )  | ( move 2 - ul , ul ; pen ul ; move ua , 4 )  | ( ( move ul , ul ; pen ul ) ; move ua , 4 )  | ( move ul , ul ; move ua , 3 + ul ; pen ua )  | ( v0 = ul ; move ul , v0 ; move ua , 4 )  | ( move ul , ul ; v0 = 4 ; move ua , v0 )  | ( move ul , ua + ul ; move ua , 4 ; v0 = 3 )  | ( move ul , ul ; ( pen ua + ul ; move ua , 4 ) )  | ( pen ul ; move ul , ua + ul ; move ua , 3 + ul )  | ( v0 = ul ; move ul , ul ; move ua , v0 + 3 )  | ( v0 = ua ; move ul , ul ; move ua , 4 - v0 )  | ( ( pen ua ; move ul , ul ) ; move ua , 4 ; pen 2 )  | ( move ul , ul ; v0 = 2 ; move ua , v0 + v0 )  | ( v0 = ul ; move ul , v0 ; move ua , 4 / v0 )  | ( move ul , ua + ul ; move ua - ul , 4 ; move ul , ua )  | ( ( move ul , ul ; pen ul ) ; ( move ua , 4 ; pen 2 ) )  
[544] ( move ua , ul ; move 4 , ul )  | ( move ua , ul ; move 2 * 2 , ul )  | ( move ua , ul ; move 4 , 2 - ul )  | ( move ua , ul ; move 3 + ul , ul )  | ( move ua , ul ; move 4 , ua + ul )  | ( move ua , ua + ul ; move 4 , ul )  | ( move ua , ul ; move 4 , ul ; pen 0 )  | ( move ua , ul ; pen ua ; move 4 , ul )  | ( move ua , ul ; move 4 , ul ; pen ua )  | ( move ua , ul ; move 3 + ul , ua + ul )  | ( move ua , ul ; move 2 , ul ; move 2 , 0 )  | ( move ua , ul ; v0 = 0 ; move 4 , ul )  | ( move ua , ul ; move 4 , ul ; pen 4 + 2 )  | ( move ua , ul ; move 4 , ul ; pen 2 / 3 )  | ( move ua , ul ; move 4 , ul ; v0 = ul )  | ( pen ua ; move ua , ul ; move 2 + 2 , ul )  | ( move ua , ul ; ( pen ua ; move 4 , ul ) )  | ( move ua , ul ; move 3 , ul ; move ul , ua )  | ( pen ua ; move ua , ul ; move 3 + ul , ul )  | ( move ua , ul ; v0 = 4 ; move v0 , ul )  | ( v0 = ul ; move ua , ul ; move 4 , v0 )  | ( v0 = ul ; move ua , v0 ; move 4 , v0 )  | ( ( move ua , ua + ul ; move 4 , ul ) ; pen 2 )  | ( ( move ua , ul ; move 4 , ul ) ; pen 3 - ul )  | ( move ua , ul - ua ; v0 = ul ; move 4 , ul )  | ( move ua , ul ; move 3 + ul , ul ; pen ua - 3 )  | ( ( pen ul ; move ua , ul ) ; move 3 + ul , ul )  | ( move ua , ul ; ( pen ul + ul ; move 4 , ul ) )  | ( ( move ua , 2 - ul ; move 4 , ua + ul ) ; pen ua )  | ( ( move ua , ul ; move 4 , ul ; pen ua - 2 ) ; pen ua )  | ( move ua , ul ; move 4 , ul ; ( v0 = 3 ; pen v0 ) )  | ( pen ua * ua ; ( move ua , ul ; move 4 , ul ; pen ua ) )  
[545] ( move ua , ul ; move ul , 4 )  | ( move ua , ul ; move ul , 3 + ul )  | ( move ua , ua + ul ; move ul , 4 )  | ( move ua , ul ; move ul , ua + 4 )  | ( move ua , ul - ua ; move ul , 4 )  | ( move ua , ul ; move ul , 4 - ua )  | ( move ua , ul ; move ul , 4 ; pen 0 )  | ( pen 4 ; move ua , ul ; move ul , 4 )  | ( move ua , ul ; pen 4 ; move ul , 4 )  | ( pen ul ; move ua , ul ; move ul , 4 )  | ( move ua , ul ; move ul , 4 ; pen ul )  | ( move ua , ul ; move 2 - ul , 3 + ul )  | ( move 0 , ua ; move ua , ul ; move ul , 4 )  | ( move ua , ul ; move ul , 4 ; pen 2 + ul )  | ( move ua , ul ; pen 4 ; move ul , ua + 4 )  | ( move ua , ul ; move ul , 4 ; pen 4 - ua )  | ( move ua , ul ; pen ua * 4 ; move ul , 4 )  | ( pen ua ; ( move ua , ul ; move ul , 4 ) )  | ( move ua , ul ; ( move ul , 4 ; pen ul ) )  | ( pen ua ; move ua , ul - ua ; move ul , 4 )  | ( pen ul ; move ua , ul ; move ul , 3 + ul )  | ( move ua , ul ; v0 = ul ; move v0 , 4 )  | ( move ua , ul ; move 0 , ul ; move 4 - 3 , 3 )  | ( move ua , ua + ul ; move 0 , 0 ; move ul , 4 )  | ( ( move ua , ul ; move ul , 4 ) ; v0 = ul )  | ( ( move ua , ua + ul ; pen 2 ) ; move ul , 4 )  | ( move ua , ul ; v0 = 2 * 2 ; move ul , v0 )  | ( v0 = ul ; move ua , ua + v0 ; move ul , 4 )  | ( move ua , ul ; v0 = 3 + ul ; move ul , v0 )  | ( ( move ua , ul ; move ul , 3 + ul ) ; v0 = 3 )  | ( ( move ua , ul ; move ul , 4 ) ; pen ua ; v0 = ua )  | ( v0 = ul ; move v0 * ua , v0 ; move v0 , ua + 4 )  
[546] ( move ua , 4 ; move ul , ul )  | ( move ua , 4 ; move 2 - ul , ul )  | ( move ua , 4 ; move ul , ul ; pen 2 )  | ( move ua , 4 ; move ul , ul ; pen 4 )  | ( pen ua ; move ua , 4 ; move ul , ul )  | ( pen ul ; move ua , 4 ; move ul , ul )  | ( move ua , 3 + ul ; move ul , 3 - 2 )  | ( move ua , ua + 4 ; move ul , 2 - ul )  | ( move ua , 4 ; move 2 - ul , ul - ua )  | ( move ua , 4 ; move ul , ul ; v0 = 0 )  | ( move ua , 4 ; move ul , ul ; v0 = 3 )  | ( move ua , 4 ; move ul , ul ; v0 = 4 )  | ( move ua , 4 ; move ul , ul ; v0 = ul )  | ( pen 4 / ua ; move ua , 4 ; move ul , ul )  | ( move ua , 4 ; move 3 - 2 , 2 - ul ; pen 0 )  | ( move ua , 4 ; v0 = ul ; move v0 , v0 )  | ( move ua , 4 ; ( v0 = 0 ; move ul , ul ) )  | ( move ua , 4 ; v0 = 4 * 3 ; move ul , ul )  | ( move ua , 4 ; move ul , ua + ul ; move 0 , 0 )  | ( move ua , 4 ; ( pen 2 ; move 2 - ul , ul ) )  | ( move ua , ua + 4 ; move ul , ul ; v0 = 0 )  | ( move 0 , ua + 3 ; move ua , ul ; move ul , ul )  | ( move ua , 3 + ul ; move 0 , ua ; move ul , ul )  | ( v0 = ul ; move ua , 4 - ua ; move v0 , v0 )  | ( ( pen 3 ; move ua , 2 + 2 ) ; move ul , ua + ul )  | ( move ua , 4 - ua ; move ul , ul - ua ; v0 = 4 )  | ( move ua , 4 ; move ul , ua + ul ; v0 = ua + ul )  | ( ( v0 = ua + ul ; move ua , 4 ) ; move ul , v0 )  | ( v0 = ul ; ( move ua , 4 ; move v0 , v0 - ua ) )  | ( pen 3 ; ( move ua , 4 ; v0 = ul ; move v0 , ul ) )  | ( move ua , 4 ; ( v0 = ul ; move v0 , v0 ; pen ul ) )  | ( ( pen ua + ul ; pen ua + ul ) ; move ua , 4 ; move ul , ul )  
[547] ( move 3 , ul ; move ul , ul )  | ( move 3 , ul ; move ul , 2 - ul )  | ( move 3 , ua + ul ; move ul , ul )  | ( move 2 + ul , ul ; move ul , ul )  | ( move 3 , ul ; move ul , ul - ua )  | ( move 4 - ul , ul ; move ul , ul )  | ( move 3 , ul ; move ul , ul ; pen ul )  | ( move 2 , ul ; move ul , 0 ; move ul , ul )  | ( move 3 , ul ; move ul , ul ; v0 = ua )  | ( move 3 , ul ; move ul , ul ; v0 = ul )  | ( move 3 , ul ; v0 = ul ; move v0 , v0 )  | ( pen ua + 2 ; move 3 , ul ; move ul , 3 - 2 )  | ( move 3 , ul ; ( move ul , ul ; pen 4 / 2 ) )  | ( move 4 - ul , ul ; move ul , ul ; move 0 , 4 )  | ( move 3 , ul ; ( move ul , ul ; pen ua + 3 ) )  | ( move 3 , ua + ul ; move ul , ul ; v0 = ua )  | ( pen 2 + ul ; move 3 , ul ; move ul , ul - ua )  | ( pen ul ; move 4 - ul , ul ; move 2 - ul , ul )  | ( move 3 , ua + ul ; v0 = ul ; move v0 , ul )  | ( v0 = ul - ua ; move 3 , v0 ; move ul , ul )  | ( move 3 , ul ; ( v0 = ul ; move v0 , v0 ) )  | ( v0 = ul ; ( move 3 , v0 ; move ul , v0 ) )  | ( ( move 3 , ul ; v0 = ul ) ; move v0 , v0 )  | ( ( move 3 , ul ; move ul , ul ) ; v0 = 3 / ua )  | ( v0 = ul ; move 3 , v0 + ua ; move v0 , v0 )  | ( move ul + ul , ul ; move ul , ua * 3 ; move ul , ul )  | ( v0 = ul ; move 4 - v0 , v0 ; move v0 , v0 )  | ( ( pen ul ; v0 = ul ; move 3 , v0 ) ; move ul , ul )  | ( move 2 + ul , ul ; v0 = ul ; move v0 * v0 , v0 )  | ( move 4 - ul , ul ; v0 = ul ; move v0 , v0 * v0 )  | ( move 3 , ul ; ( pen ul ; move ul , ul ; move 0 , ua / 2 ) )  | ( pen 4 ; ( move 4 - ul , ul ; pen ua - ul ; move ul , ul ) )  
[548] ( move ul , ul ; move 3 , ul )  | ( move ul , ul ; move 2 + ul , ul )  | ( move ul , ua + ul ; move 3 , ul )  | ( pen 2 ; move ul , ul ; move 3 , ul )  | ( move ul , ul ; move 3 , ul ; pen 2 )  | ( move ul , ul ; move 2 + ul , 2 - ul )  | ( move ul , ua + ul ; move 3 , ul - ua )  | ( move ul , ua + ul ; move 4 - ul , ul )  | ( ( move ul , ul ; move 3 , ul ) ; pen 3 )  | ( move ul , ul ; move 3 , ul ; v0 = ua )  | ( move ul , ul ; move 3 , ul ; v0 = ul )  | ( move ul , ul ; v0 = ul ; move 3 , ul )  | ( v0 = ul ; move v0 , ul ; move 3 , ul )  | ( v0 = 3 ; move ul , ul ; move v0 , ul )  | ( move ul , ul ; v0 = 3 ; move v0 , ul )  | ( move ul , ul ; move 3 , ul ; move 0 , 3 + 2 )  | ( ( move ul , ul ; move 2 , ul ) ; move ul , 0 )  | ( move ul , ul ; ( move 3 , ul ; move 0 , ul ) )  | ( move ul , ul ; move 2 + ul , ul ; v0 = ul )  | ( move ul , ul ; v0 = 0 ; move 3 , v0 + ul )  | ( v0 = ua ; move ul , ul - v0 ; move 3 , ul )  | ( move ul , 3 - 2 ; move 3 , ul ; v0 = ul / 3 )  | ( ( move ul , ua + ul ; move 2 , ul ) ; move ul , 0 )  | ( ( v0 = ul ; move v0 , v0 ) ; move 3 , v0 )  | ( ( move ul , ul ; move 3 , ul ) ; pen 3 ; move 0 , 4 )  | ( ( move ul , ul ; v0 = 3 ; move 3 , ul ) ; pen ul )  | ( pen ul ; move ul , ul ; ( move 3 , ul ; v0 = 4 ) )  | ( v0 = ul ; move v0 * v0 , v0 ; move 3 , v0 )  | ( ( ( move ul , ul ; move 3 , ul ) ; pen ul ) ; pen 2 )  | ( ( move ul , ul ; pen 4 ) ; v0 = ul ; move 3 , v0 )  | ( ( pen ua ; v0 = 3 ; move ul , ul ) ; move v0 , ul )  | ( v0 = ul ; ( move ul , v0 ; move 3 , v0 * v0 ) )  
[549] ( move 4 , ul ; move ul , ul )  | ( move 4 , ul ; move ul , 4 - 3 )  | ( move 2 + 2 , ul ; move ul , ul )  | ( move 4 , ul ; move ul , ua + ul )  | ( move 3 + ul , ul ; move ul , ul )  | ( move 4 , ul - ua ; move ul , ul )  | ( pen 4 ; move 4 , ul ; move ul , ul )  | ( move 4 , ul ; move ul , ul ; pen ua )  | ( move 4 , ul ; move ul , ul ; pen ul )  | ( move 3 + ul , ul ; move ul , ua + ul )  | ( move 4 , ul ; pen 4 + 2 ; move ul , ul )  | ( move 4 , ul ; move ul , ul ; v0 = ua )  | ( move 4 , ul ; v0 = ua ; move ul , ul )  | ( pen 4 ; move 3 + ul , ul ; move ul , ul )  | ( move 4 , ul ; pen 4 + ul ; move ul , ul )  | ( move 4 , ul ; v0 = ul ; move ul , v0 )  | ( v0 = ul ; move 4 , v0 ; move ul , v0 )  | ( move 4 , ul ; move 0 , ua - ul ; move ul , 2 )  | ( v0 = 0 - ul ; move 4 , ul ; move ul , ul )  | ( move 3 + ul , ul ; ( move ul , ul ; pen 0 ) )  | ( v0 = ul ; move 4 , v0 ; move v0 , v0 )  | ( move 3 + ul , ul ; move ul , ul ; v0 = ua )  | ( move 4 , ul ; v0 = ul ; move v0 , 2 - ul )  | ( move 4 , ul ; v0 = ua ; move ua / v0 , ul )  | ( move 4 , ul ; ( pen ul ; move ul , ul ; pen 0 ) )  | ( pen 2 - ul ; move 4 , ua + ul ; move ul , ua + ul )  | ( ( move 3 , ul ; move ul , 0 ; pen ul ) ; move ul , ul )  | ( pen ul ; ( pen 3 ; move 4 , ul ; move ul , ua + ul ) )  | ( ( move 4 , ul ; v0 = ul ) ; move v0 , ul ; pen ul )  | ( ( move 4 , ul ; pen ua * 3 ; v0 = 2 ) ; move ul , ul )  | ( move 4 , ul ; ( move ul , ul ; move 0 , 3 - ua ) ; pen ul )  | ( move ul , ul ; ( ( move 3 , 0 ; pen ul ) ; move ul , ul ) )  
[550] ( move ul , ul ; move 4 , ul )  | ( move 3 / 4 , ul ; move 4 , ul )  | ( move ul , ul ; move 4 , ua + ul )  | ( move ul , ul ; move 3 + ul , ul )  | ( move ul , ul ; pen ua ; move 4 , ul )  | ( move ul , ul ; pen ul ; move 4 , ul )  | ( move ul , ul ; move 4 , ul ; pen ul )  | ( move ul , ua + ul ; move 4 , ua + ul )  | ( move ul , ul ; move 4 , ul ; v0 = ul )  | ( move ul , ul ; move 3 + ul , ul ; pen 4 )  | ( move ul , ul ; move 4 , ul ; pen ul / 4 )  | ( move ul , ul ; move 4 , ul ; pen ua + ua )  | ( move ul , ul ; pen ua ; move 4 , ul - ua )  | ( move ul , ul ; move 4 , 3 - 2 ; move 0 , 3 )  | ( v0 = ul ; move v0 , ul ; move 4 , v0 )  | ( move ul , ul ; ( move 0 , ul ; move 4 , 0 ) )  | ( move ul , ul ; move 4 , ua + ul ; v0 = 2 )  | ( v0 = 3 ; move ul , ul ; move 4 , ua + ul )  | ( move ul , 4 - 3 ; move 4 , ul ; pen ua + ul )  | ( move ul , ul ; move 2 , ul ; move 2 , ua + ua )  | ( move ul , ul ; move ul , ul ; move 3 , ua * 3 )  | ( move ul , ul ; ( v0 = ul ; move 4 , v0 ) )  | ( move ul , ua + ul ; move 2 + 2 , ul ; v0 = ul )  | ( move ul , ul - ua ; move 4 , ul - ua ; v0 = 0 )  | ( ( move ul , ul ; move ul , ua + ul ) ; move 3 , 0 )  | ( move ul , ua + ul ; move ul , ul ; move 2 + ul , ua )  | ( move ul , ul - ua ; move 2 + ul , ul ; move ul , ua )  | ( v0 = 4 - 3 ; move v0 , ul / v0 ; move 4 , ul )  | ( ( move 0 , ua ; move ul , ul ; pen ua ) ; move 4 , ul )  | ( move ul , ul ; ( v0 = 2 ; move v0 * v0 , ul ) )  | ( ( move ul , ul ; move 4 , ul - ua ) ; v0 = 2 / 4 )  | ( ( pen 4 ; move ul , 3 - 2 ; v0 = ul ) ; move 4 , ul )  
[551] ( move ua , ul ; move ul , ul )  | ( move ua , ul ; move 2 - ul , ul )  | ( move ua , ul ; move ul , ua + ul )  | ( move ua , ua + ul ; move ul , ul )  | ( move ua , ul ; move ul , ul - ua )  | ( move ua , ul ; pen ul ; move ul , ul )  | ( move ua , ul ; move 2 - ul , ul - ua )  | ( move ua , ul ; move ul , ul ; move 0 , 0 )  | ( move ua , ul ; move ul , ul ; v0 = 0 )  | ( move ua , 2 - ul ; pen 4 ; move ul , ul )  | ( move 0 , ua ; move ua , ul ; move ul , ul )  | ( move ua , ul ; move ul , ul ; v0 = ua )  | ( pen 4 ; move ua , ul ; move ul , ul - ua )  | ( pen 4 ; move ua , ul - ua ; move ul , ul )  | ( pen ul ; ( move ua , ul ; move ul , ul ) )  | ( move ua , ul ; move ul , ul ; pen ua + ul )  | ( pen ul ; move ua , ul - ua ; move ul , ul )  | ( v0 = ul ; move ua , v0 ; move ul , ul )  | ( move ua , ul ; move ul , 2 - ul ; move 0 , 0 )  | ( move ua , ul ; v0 = ul ; move v0 , v0 )  | ( move ua , ul ; ( pen ua - 3 ; move ul , ul ) )  | ( ( pen ua / 3 ; move ua , ul ) ; move ul , ul )  | ( v0 = ul ; move ua , v0 ; move v0 , v0 )  | ( move ua , ul ; v0 = ua ; move ul , v0 + ul )  | ( move ua , ul ; v0 = ul ; move ul / v0 , v0 )  | ( move ua , ul - ua ; v0 = 2 + ul ; move ul , ul )  | ( move ua , ul ; ( move ul , ul ; v0 = ul - ua ) )  | ( move ua , ua + ul ; move ul , ua + ul ; v0 = ua )  | ( v0 = ul ; move ua , v0 * v0 ; move v0 , v0 )  | ( ( pen ul ; pen ul + ul ) ; move ua , ul ; move ul , ul )  | ( ( pen ua ; move ua , ul ; v0 = ul ) ; move v0 , ul )  | ( ( move ua , ul ; pen ul ; v0 = ul ) ; move v0 , ul )  
[552] ( move ul , ul ; move ua , ul )  | ( move 2 - ul , ul ; move ua , ul )  | ( move ul , ul ; move ua , ua + ul )  | ( move ul , ua + ul ; move ua , ul )  | ( move ul , ul ; move ua , ul - ua )  | ( move ul , ul ; move ua , ul ; pen 0 )  | ( pen 3 ; move ul , ul ; move ua , ul )  | ( pen ua ; move ul , ul ; move ua , ul )  | ( move ul , ul ; move ua , ul ; move 0 , 4 )  | ( move ul , ul ; pen ul ; move ua , 4 - 3 )  | ( move ul , ul ; v0 = ul ; move ua , ul )  | ( move ul , ul ; move ua , ul ; v0 = ul )  | ( move ul , ul ; pen ua * 2 ; move ua , ul )  | ( move ul , ul ; pen ua + 4 ; move ua , ul )  | ( pen ua ; ( move ul , ul ; move ua , ul ) )  | ( move ul , ul ; move ua , ul - ua ; pen ul )  | ( v0 = ul ; move v0 , ul ; move ua , v0 )  | ( move ul , ul ; move ua , ul ; move 0 , 2 + ul )  | ( move ul , ul ; move ua , ul ; v0 = 4 + ul )  | ( v0 = ul ; move v0 , v0 ; move ua , v0 )  | ( move ul , ul ; move ua , ua + ul ; pen ua * 4 )  | ( ( move ul , ul ; move ua , ua + ul ) ; pen ua )  | ( move ul , ua + ul ; ( pen ul ; move ua , ul ) )  | ( move ul , ua + ul ; v0 = ul ; move ua , v0 )  | ( pen ul ; move ul , ul ; ( move ua , ul ; pen 3 ) )  | ( pen 4 + ul ; ( move ul , ua + ul ; move ua , ul ) )  | ( ( move ul , ul ; v0 = ul ) ; move ua * v0 , ul )  | ( move ul , ul - ua ; ( pen ul ; move ua , ul ) ; pen 4 )  | ( ( v0 = ul ; move ul , ul ) ; move ua * v0 , v0 )  | ( move ul , ul ; ( v0 = ul ; move ua * v0 , v0 ) )  | ( pen ua ; ( v0 = ua ; move ul , ul ) ; move v0 , ul )  | ( move 0 , ua + ua ; ( move ul , ul ; pen 3 ) ; move ua , ul )  
[553] ( move 0 - 3 , 0 ; move 3 , 2 )  | ( move 0 - 3 , ua ; move 3 , 2 ; v0 = 0 )  
[554] ( move 2 , 0 ; move 0 - 4 , 2 )  
[555] ( move 0 - 2 , 0 ; move 3 , 3 )  | ( move ul - 3 , ua ; v0 = 3 ; move v0 , v0 )  
[556] ( move 2 - 4 , 0 ; move 3 , 0 )  | ( move 0 - 3 , 0 ; move ul , 0 )  | ( move 2 - 3 , ua ; move 3 , 0 )  | ( move 0 - ul , 0 ; move 3 , ua )  | ( move 0 - 3 , ua ; move ul , 0 )  | ( move 0 - 3 , 0 ; move ul , ua )  | ( move 3 - ua , 0 ; move 3 , ua )  | ( move 2 - 3 , ua ; move 3 , ua )  | ( move ul - 4 , 0 ; move ul , ua )  | ( move ul - 3 , ua ; move 3 , ua )  | ( move ul - 4 , ua ; move 2 , ua )  | ( move ul - 4 , ua ; move ul , ua * 2 )  | ( move ul - 4 , ua ; pen 2 ; move ul , 0 )  | ( move 0 - 3 , ua ; move ul , ua ; v0 = ul )  | ( move 2 - 3 , 0 ; v0 = ua ; move 3 , v0 )  | ( move ul - 4 , ua ; move 0 , ua ; move ul , ua )  | ( move 0 - 2 , ua ; v0 = ua ; move 3 , v0 )  | ( move ul - 3 , ua ; move 3 , ua ; v0 = 4 - ua )  | ( ( move 0 - 3 , 0 ; move ul , ua * 2 ) ; v0 = 3 )  | ( v0 = 4 - ul ; move ul - v0 , ua ; move v0 , ua )  | ( move ul - 4 , ua * 2 ; v0 = ua * 3 ; move ul , v0 )  
[557] ( move 0 - 2 , 0 ; move 4 , 3 )  | ( move 0 - 2 , ua ; move 4 , 3 )  | ( move ul - 3 , 0 ; move 4 , 3 )  | ( move ul - 3 , 0 ; move 3 + ul , 3 )  | ( move ul - 3 , ua * 3 ; move 4 , 3 )  
[558] ( move 3 , 0 ; move 4 + 2 , 2 )  | ( move 3 , ua ; v0 = 2 ; move v0 + 4 , v0 )  | ( ( move ul , 0 ; move ul + ul , ua ) ; move 4 + 2 , 2 )  
[559] ( move 0 - 2 , 0 ; move 4 , 4 )  
[560] ( move 2 , 3 + 2 ; move 2 , 2 )  | ( move 4 - 2 , 4 + ul ; move 2 , 2 )  | ( move 2 , 3 + 2 ; move 2 , 2 ; pen ul )  | ( move 2 , 4 + ul ; move ua / 3 , ul + ul )  
[561] ( move 2 , 0 ; move 3 , 4 + 2 )  | ( move 2 , 0 ; move 3 , 3 * 2 )  | ( move 2 , ua + ua ; move 3 , 3 * 2 )  | ( ( pen ul ; v0 = 4 ) ; move 2 , ua ; move 3 , 3 * 2 )  
[562] ( move 2 + 2 , 2 ; move 2 , 3 )  | ( move 4 , 2 ; move 4 / 2 , 3 )  | ( move 4 , 2 ; move 2 , 2 + ul )  | ( move 4 , 2 ; move 3 - ul , ua + 3 )  | ( move 4 , 2 ; v0 = 3 ; move v0 - ul , v0 )  | ( ( move 4 , 2 ; v0 = ua + 3 ) ; move 2 , v0 )  | ( v0 = 2 ; move 3 + ul , 2 ; move v0 , ul + v0 )  | ( v0 = ul ; move v0 * 4 , v0 + ul ; move 2 , 3 )  | ( pen 4 ; ( move 2 + 2 , ul + ul ; move 2 , ua + 3 ) )  
[563] ( move 2 , 0 ; move 3 + 2 , 4 )  | ( move 2 , 0 ; move 4 + ul , 4 )  | ( move 2 , ua ; move 4 + ul , 4 ; v0 = 0 )  | ( pen ua * 2 ; move 2 , ua ; move 4 + ul , 4 )  | ( move 2 , 0 ; move 4 + ul , 2 + 2 ; v0 = ua )  
[564] ( move 0 - 3 , 0 ; move 3 , 4 )  | ( move ul - 4 , 0 ; v0 = ua ; move 3 , 4 )  
[565] ( move 3 + 2 , 0 ; move 3 , 4 )  | ( move 4 + ul , 0 ; move 2 + ul , 4 )  | ( move 3 + ul , ua ; move ul , ua ; move 3 , 4 )  | ( move 2 , ua + ua ; move 3 , 0 ; move 4 - ul , 4 - ua )  
[566] ( move 2 , 2 - 3 ; move 2 , 2 )  | ( move 2 , 0 - ul ; move 2 , 2 )  | ( move 2 , ua - ul ; move 2 , ul + ul ; pen ul )  | ( move ul + ul , 0 - ul ; move ul + ul , 4 - 2 )  | ( v0 = ul - 3 ; move v0 , ul ; move v0 , v0 )  | ( v0 = 2 ; move v0 , ul - v0 ; move v0 , v0 )  | ( move 2 , 0 - ul ; v0 = ul + ul ; move v0 , v0 )  
[567] ( move 4 , 0 ; move 3 , 3 + 2 )  | ( move 4 , ua ; move 0 , 4 ; ( move 3 , ua + ul ; pen ul ) )  
[568] ( move 3 , 3 + 2 ; move 2 , 2 )  | ( move 3 , 4 + ul ; move 2 , 2 )  
[569] ( move 2 , 4 ; move 0 - 2 , 3 )  
[570] ( move 4 + 2 , 0 ; move 4 , 2 )  | ( move 4 + 2 , 0 - ua ; move 4 , 2 )  | ( move 3 * 2 , ua ; move 3 + ul , 2 ; move 0 , 0 )  
[571] ( move 2 - 3 , 0 ; move 4 , 2 )  | ( move 0 - ul , ua * 4 ; move 4 , 2 )  
[572] ( move 2 , 3 ; move 3 , 3 + 2 )  
[573] ( move 2 , 2 ; move 2 , 3 * 2 )  
[574] ( move 3 + 2 , 3 ; move 2 , 3 )  | ( move 4 + ul , 3 ; move 2 , 3 )  | ( move ua - ul , 3 ; move 2 , 3 )  
[575] ( move 2 , 2 ; move 4 , 0 - 4 )  
[576] ( move 2 , 4 + 2 ; move 3 , 3 )  
[577] ( move 3 , 0 ; move 4 , 2 - 4 )  
[578] ( move 2 , 3 ; move 2 , 4 + 3 )  | ( move ul , 3 ; move ul , 0 ; move ua / 3 , 4 / ua )  
[579] ( move 4 , 3 ; move 4 , 0 - 2 )  | ( move 4 , 3 ; move 3 + ul , ua - 2 )  
[580] ( move 2 , 0 ; move 4 , 4 + 4 )  | ( move 2 , ua ; move 4 , 4 + 4 )  | ( move 2 , 0 ; move 4 , 4 * 2 ; v0 = ua )  
[581] ( move 2 , 4 ; move 2 , 3 + 3 )  
[582] ( move 2 , 4 ; move 3 , 3 + 2 )  
[583] ( move 3 , 0 ; move 3 , 4 * 2 )  
[584] ( move 2 , 2 ; move 2 , 3 / 2 )  
[585] ( move 4 * 2 , 0 ; move 2 , 4 )  | ( move ua + 2 , 0 ; move 2 , 4 - ua )  | ( move ua + 2 , 0 ; move ul , 4 ; move ul , 0 )  | ( move ua + ul , ua ; move ul , ua ; move 2 , 4 )  
[586] ( move 4 , 3 ; move 3 + 2 , 2 )  | ( move 4 , 4 - ul ; move 4 + ul , 3 - ul )  | ( move 4 , 3 ; move 0 , 2 ; move 3 + 2 , ua )  
[587] ( move 4 * 2 , 0 ; move 3 , 3 )  | ( move ua + 2 , ua * 3 ; move 3 , ua + 3 ; pen ua )  
[588] ( move 4 , 3 + 2 ; move 3 , 2 )  
[589] ( move 4 + 3 , 0 ; move 3 , 4 )  
[590] ( move 3 , 2 ; move 0 - 4 , 4 )  
[591] ( move 3 , 0 ; move 4 , 3 / 2 )  
[592] ( move 0 - 4 , 3 ; move 4 , 3 )  
[593] ( move 3 , 2 ; move 3 - 4 , 2 )  | ( move 3 , 2 ; move ul - 2 , 2 )  | ( move 3 , 2 ; move ul , 0 - ul )  | ( move 0 , 2 ; move 3 , ua * 3 ; move ul , ua - ul )  
[594] ( move 4 , 0 ; move 3 , 3 * 3 )  
[595] ( move 2 , 2 ; move 4 + 3 , 4 )  | ( pen ua ; move 2 , 2 ; move 4 + 3 , 4 )  | ( move ul + ul , 2 ; move 2 + 2 , 4 ; move 3 , 0 )  
[596] ( move 4 , 0 ; move 3 * 2 , 4 )  | ( move 2 * 2 , ua ; ( move 4 + 2 , 4 ; pen 2 ) )  
[597] ( move 3 + 2 , 4 ; move 3 , 3 )  | ( move 4 + ul , 4 ; move 4 - ul , ua + 3 )  | ( move 4 + ul , 4 ; move 0 , ul ; move 3 , 2 )  | ( v0 = ul / ua ; move ua - ul , 4 ; move 4 , 3 )  
[598] ( move 2 , 2 - 4 ; move 3 , 3 )  | ( move 2 , ul - 3 ; move 3 , 2 + ul )  | ( move ul - 4 , ul ; move 2 , ul / ua )  
[599] ( move 3 * 2 , 4 ; move 2 , 2 )  | ( move 3 * 2 , 4 ; v0 = 2 ; move v0 , v0 )  | ( v0 = 2 ; move 4 + v0 , 4 ; move v0 , v0 )  | ( move 4 + 2 , ua + 4 ; move 2 , 2 ; v0 = 2 / 4 )  
[600] ( move 0 - 2 , 4 ; move 4 , 4 )  | ( move 0 - 2 , ua + 4 ; move 4 , 4 )  
[601] ( move 3 , 0 ; move 4 / 3 , 2 )  | ( ( move 3 , 0 ; move 4 / 3 , 2 ) ; v0 = ua )  
[602] ( move 3 , 2 ; move 4 + 2 , 4 )  
[603] ( move 0 , 4 ; move 4 , 3 * 2 )  | ( move 0 , 2 ; move 4 , 4 + 4 ; pen 3 )  | ( v0 = 4 * 2 ; move 0 , 2 ; move 4 , v0 )  
[604] ( move 4 , 0 ; move 3 , 3 - 4 )  | ( move 4 , 0 ; move 3 , ua - ul )  | ( move 4 , ua ; move 3 , ua - ul ; pen ul )  
[605] ( move 4 + 4 , 4 ; move 3 , 0 )  | ( move ua + 3 , 4 ; move 2 , 0 )  | ( move 3 + 2 , 4 ; move ua , ua )  | ( move 4 + ul , 4 ; move ua , 0 )  | ( move 4 , 4 ; move ua + ul , 0 )  | ( move ua , 4 ; move ua - ul , ua )  | ( move 3 + 2 , 2 * 2 ; move ua , 0 )  | ( move 4 + 3 , 3 + ul ; move 4 , ua )  | ( move ua + ul , 4 - ua ; move 4 , 0 )  | ( move ua + 2 , 4 ; move 3 , ua ; pen ul )  | ( pen ua ; move 4 + ul , 4 ; move ua , ua )  | ( move 2 , 3 + ul ; move ua + 3 , 0 - ua )  | ( v0 = ua + 4 ; move v0 + ul , v0 )  | ( move ua + 4 , 3 + ul ; move ul / 2 , 0 )  | ( move ua + ul , 4 ; pen ul ; move 4 , ua * 3 )  | ( v0 = 4 + ul ; move v0 + ua , v0 - ul )  | ( move 0 , 2 + ul ; move 3 + 3 , ul ; move 4 + ul , ua )  | ( move ua + ul , 2 * 2 ; ( move 4 , ua ; v0 = ul ) )  | ( move ua + 2 , 4 ; v0 = ua ; move 2 + ul , v0 + ua )  
[606] ( move 3 , 4 + 4 ; move 2 , 2 )  | ( move 2 , ul / 2 ; move 3 , ul - 3 )  
[607] ( move 4 , 2 ; move 2 , 4 + 3 )  
[608] ( move 2 , 4 ; move 4 , 4 + 2 )  | ( ( v0 = 4 ; move 2 , v0 ) ; move v0 , v0 + 2 )  
[609] ( move 4 + 2 , 3 ; move 3 , 4 )  
[610] ( move 3 , 4 * 2 ; move 3 , 2 )  
[611] ( move 2 , 4 ; move 4 , 2 - 3 )  | ( move 2 , 4 ; move 4 , 0 - ul )  | ( move 2 , 4 ; move 4 , ua - ul )  | ( move 0 - 4 , 2 + ul ; move ul - 3 , ul ; v0 = ul )  
[612] ( move 3 , 4 + 4 ; move 2 , 3 )  | ( move 3 , 4 * 2 ; move ul , 3 )  | ( move ul , 4 + ul ; move 3 , 3 )  | ( move ul , 4 + ul ; v0 = 3 ; move 3 , v0 )  
[613] ( move 2 , 4 ; move 4 * 2 , 2 )  | ( move 2 , 4 ; move 4 , 3 - ul ; move 4 , ua )  
[614] ( move 4 , 3 ; move 0 - 4 , 4 )  
[615] ( move 3 , 4 ; move 2 - 3 , 3 )  | ( move 3 , 4 ; ( pen ul ; move 0 - ul , 3 ) )  
[616] ( move 4 + 3 , 4 ; move 2 , 3 )  | ( move ua + ul , 4 ; move 2 , ua + 3 )  | ( pen ul ; move 4 + 3 , 4 ; move 2 , 3 )  | ( move ua + ul , 4 ; move ul , 3 ; move ul , 0 )  | ( move ul , 4 ; move ua , ua ; move 3 , ua + 3 )  | ( move ua , 4 ; move ul , 0 - ua ; move 2 , 4 - ul )  
[617] ( move 4 + 3 , 2 ; move 4 , 3 )  | ( move ua + ul , ua + 2 ; move 3 + ul , 3 )  
[618] ( move 3 , 4 ; move 4 , 3 + 2 )  | ( move 3 , 3 + ul ; move 4 , 4 + ul )  
[619] ( move 4 , 4 ; move 2 , 2 - 3 )  
[620] ( move 2 , 2 ; move 4 , 3 * 3 )  
[621] ( move 2 , 4 ; move 2 , 3 / 2 )  
[622] ( move 3 , 3 ; move 4 * 2 , 3 )  | ( move 2 , ua ; move 3 , 3 ; move ua + 2 , 3 )  | ( pen ua ; move 4 , 3 ; move ua + 2 , ua + 3 )  
[623] ( move 2 , 4 ; move 3 , 2 / 3 )  
[624] ( move 3 * 2 , 4 ; move 2 , 4 )  | ( move ua , 2 * 2 ; pen 2 + ul ; move 2 , 4 )  | ( move ua , 4 ; ( pen 3 ; move 2 , 4 - ua ) )  | ( move ua , 4 ; move 2 , 3 + ul ; pen ul - 3 )  | ( ( move ul , 4 ; pen 3 ; move 4 + ul , ua ) ; move 2 , 4 )  
[625] ( move 4 , 2 ; move 2 , 4 / 3 )  
[626] ( move 2 , 4 ; move 3 , 2 / 4 )  | ( move 2 , 4 ; move 3 , 3 / ua )  | ( move ul + ul , 4 ; move 3 , 3 / ua )  
[627] ( move 3 , 4 / 2 ; move 4 , 2 )  | ( move 3 , 2 ; move 3 + ul , 2 )  | ( move 3 , 2 ; move 4 , ul + ul )  | ( pen 4 ; move 3 , 2 ; move 4 , 2 )  | ( move 3 , ul + ul ; move 4 , 2 - ua )  | ( v0 = 2 ; move 3 , v0 ; move 4 , v0 )  | ( move 3 , 2 ; move 3 + ul , 2 ; pen ua + 3 )  | ( move 3 , ul + ul ; move 0 , ul ; move 4 , ul )  | ( move 3 , ul + ul ; move 4 , 2 ; pen ul - ua )  | ( v0 = ul + ul ; move 3 , v0 ; move 4 , v0 )  | ( move 3 , ul + ul ; ( move 0 , ul ; move 4 , ul ; pen 4 ) )  
[628] ( move 3 , 3 ; move 4 , 4 + 4 )  
[629] ( move 2 , 2 ; move 4 , 4 * 4 )  | ( move 0 , ul ; move 2 , ul ; move 3 + ul , 4 * 4 )  
[630] ( move 4 , 4 ; move 3 , 2 - 4 )  
[631] ( move 3 , 2 - 4 ; move 4 , 4 )  | ( move ul , ua - 2 ; move 2 , 0 ; move 4 , 4 )  
[632] ( move 4 + 4 , 4 ; move 3 , 3 )  
[633] ( move 3 - 4 , 2 ; move 4 , 4 )  
[634] ( move 2 - 4 , 4 ; move 4 , 3 )  | ( move ul , ul ; move 4 + ul , 3 + 3 )  | ( move 0 - 2 , 4 ; move 3 , 3 ; move ul , ua )  
[635] ( move 2 , 3 ; move 4 , 4 * 3 )  | ( v0 = 4 * 3 ; move 2 , ua + 3 ; move 4 , v0 )  
[636] ( move 2 , 4 ; move 2 , 4 / 3 )  
[637] ( move 4 * 2 , 3 ; move 4 , 3 )  
[638] ( move 3 , 4 ; move 4 , 4 * 2 )  
[639] ( move 3 , 4 * 3 ; move 4 , 3 )  
[640] ( move 3 - 4 , 4 ; move 3 , 4 )  | ( move ul , 3 / 4 ; move 3 , ul )  
[641] ( move 4 + 4 , 3 ; move 4 , 4 )  
[642] ( move 4 , 2 - 4 ; move 4 , 4 )  | ( move 4 , ul - 3 ; move 4 , 4 )  | ( move 4 , ua - 2 ; move 4 , ua + 4 )  | ( move 3 + ul , ul - 3 ; move 4 , ua + 4 )  | ( ( pen ul ; move 4 , ua - 2 ; move 0 , ul ) ; move 4 , 3 )  
[643] ( move 4 , 2 ; move 4 , 4 * 3 )  
[644] ( move 2 , 3 / 4 ; move 3 , 4 )  
[645] ( move 4 , 4 * 3 ; move 4 , 3 )  
[646] ( move 3 , 4 / 3 ; move 3 , 4 )  
[647] ( move 4 , 4 ; move 3 - 4 , 4 )  | ( move ua - 2 , 4 ; move ul , ul )  | ( move 4 , 4 ; move 0 - ul , 3 + ul )  
[648] ( move 4 , 4 ; move 2 , 3 / 4 )  
[649] ( move 4 , 4 ; move 4 , 2 / 4 )  | ( move 4 , 4 ; move 4 , ul / 2 )  | ( move 4 , 3 + ul ; move 3 + ul , ul / 2 )  | ( v0 = 4 ; move v0 , v0 ; move v0 , ul / 2 )  
[650] ( move 0 - ua , 0 ; move 3 , 0 )  | ( move 0 - 3 , ua ; move ua , 0 )  | ( move 0 - 3 , ua ; move ua , ua )  | ( move 3 - ua , 0 ; move ua , ua )  | ( move ul - 4 , ua ; move ua , 0 )  | ( move 0 - ua , 0 ; move 2 + ul , ua )  | ( move 0 - ua , ua ; move 3 , ua * 3 )  | ( move 0 - 3 , 0 ; move ua , ua ; v0 = ua )  | ( move ul - 4 , ua ; move ua , 0 ; v0 = 0 )  | ( move 0 , ua ; move ul - 4 , ua ; move ua , ua )  | ( move ul - 4 , ua ; move ua , ua ; v0 = ul )  | ( ( move 2 + ul , 0 ; pen ul / 2 ) ; move 3 , 0 )  | ( ( ( pen ua ; move 3 - ua , 0 ) ; move ua , ua ) ; pen ul )  
[651] ( move 2 , 0 ; move ua , 0 - 3 )  | ( move 2 , ua ; move ua , 0 - 3 )  | ( move 2 , 0 ; move ua , ua - 3 )  | ( move ua , ul / ua ; move 2 , 3 )  | ( pen 4 ; move 2 , 0 ; move ua , 0 - 3 )  | ( move 3 - ul , ua + ua ; move ua , ul - 4 )  | ( move ul , ua ; move ul , 0 ; move ua , 0 - 3 )  | ( move 2 , ua ; v0 = ul ; move ua , ul - 4 )  | ( move 2 , 0 ; ( move ua , ul - 4 ; v0 = ua ) )  | ( move 2 , ua ; ( move 0 , ua - 4 ; move ua , ul ) )  | ( move 2 , ua ; move ua , 0 - 3 ; ( pen 0 ; pen 2 ) )  | ( move ul + ul , ua ; v0 = ua ; move v0 , v0 - 3 )  
[652] ( move 3 , 0 ; move 0 - ua , 2 )  
[653] ( move 2 , 0 ; move 0 - 2 , ul )  | ( move 2 , 0 ; move ul - 3 , ul )  | ( move 2 , ua ; move ul - 3 , ul )  | ( move 2 , ul ; move 2 - 4 , ua - ul )  | ( move 2 , ua * 4 ; move ul - 3 , ul )  | ( move ul + ul , ua ; move 0 - 2 , ul )  | ( move 2 , ua ; move ul - 3 , ua + ul )  | ( move ul + ul , 0 ; move ul - 3 , ul )  | ( move 3 - ul , ua ; move ul - 3 , ul )  | ( move 3 - ul , ua + ul ; move 2 - 4 , ul - 2 )  | ( ( move 2 , 0 ; move ul - 3 , ul ) ; v0 = 4 )  
[654] ( move 2 , 0 ; move ua + 2 , 2 )  | ( move 2 , ua ; move ua + 2 , 2 )  | ( move 2 , 0 ; move ua + 2 , 3 - ul )  | ( move ua / 3 , ua ; move ua + 2 , 2 )  | ( move 2 , 0 ; move ua + ul , 2 ; move ul , 0 )  | ( move ua / 3 , 0 ; move ua - ul , 2 ; move 3 , ua )  | ( move ul + ul , ua + ua ; move ua + ul , 2 ; move ul , 0 )  
[655] ( move 3 , ua ; move 0 - 2 , 0 )  | ( move 2 , 0 ; move ul - 4 , 0 )  | ( move 3 , 0 ; move ul - 3 , ua )  | ( move 3 , 0 ; move ul , ua / 2 )  | ( move 2 , ua ; move ul - 4 , ua ; pen 0 )  | ( move ul , 0 ; pen 2 ; move ul - 4 , ua )  | ( move 3 , ua ; move 4 - ua , ua ; pen 2 )  | ( move 3 , 0 ; move ul - 3 , ua ; pen ua + 2 )  | ( move 3 , ua ; ( move 0 - ul , ua ; pen ul ) )  | ( pen ul ; move 2 , ua ; move ul - 4 , ua * 4 )  | ( move 3 , ua ; v0 = ul - 3 ; move v0 , 0 )  | ( pen ua ; ( move 3 , ua ; move 2 - 4 , ua ; pen ul ) )  | ( ( move 2 + ul , ua ; move 2 - 4 , ua ) ; move 2 , ua )  | ( pen 3 ; ( move 3 , 0 ; v0 = 4 ) ; move 2 - 4 , ua )  
[656] ( move 2 , 0 ; move ua - 2 , 2 )  
[657] ( move 0 - 4 , 0 ; move ua , 2 )  
[658] ( move 0 - ul , 2 ; move 3 , 0 )  | ( move 2 - 3 , 2 ; move 3 , ua )  | ( move ul - 4 , 2 ; move ul , 0 )  | ( move 3 - 4 , ul + ul ; move 3 , 0 )  | ( move ul - 2 , ul + ul ; move 2 + ul , 0 )  
[659] ( move ua , 0 ; move 2 , 3 + 2 )  | ( move ua , ua ; move 2 , 4 + ul )  | ( move ua , ua + ua ; move 2 , 4 + ul )  | ( move ua , ua ; move ul + ul , 3 + 2 )  | ( move ua , ua * 3 ; move ul + ul , 3 + 2 )  | ( move ua , 0 ; move 0 , ul ; move 3 - ul , 4 )  | ( move ua , ua ; move 2 , 4 + ul ; pen 3 + ul )  | ( move ua , 0 ; move 4 / 2 , 4 + ul ; move 0 , 2 - 3 )  | ( ( move ua , ua ; v0 = 2 + 2 ) ; move 2 , 4 + ul )  
[660] ( move 2 , 0 ; move ua + 2 , 3 )  | ( move 4 - ul , 0 ; move ua + 2 , 3 )  | ( move 2 , 0 ; move 2 , 3 ; move ua , ua * 4 )  | ( v0 = 2 ; move v0 , ua ; move ua + v0 , 3 )  | ( ( move ul + ul , ua ; pen 3 ) ; move ua + 2 , 3 )  | ( move 3 , 0 ; move ul + ul , ua + 3 ; move ua , ua * 4 )  | ( move ul + ul , ua ; ( move ua + ul , 3 ; move ul , 0 ) )  
[661] ( move 0 - 2 , 0 ; move 4 , ul )  | ( move 2 - 4 , 0 ; move 4 , ul )  | ( move ul - 3 , ua ; move 4 , ul )  | ( move ul - 3 , ua * 3 ; move 4 , ul )  | ( move ul - 3 , 0 ; v0 = 4 ; move v0 , ul )  | ( move 4 - ua , 0 ; ( v0 = ua ; move 4 , ua + ul ) )  
[662] ( move 3 + 3 , 0 ; move ua , 2 )  | ( move 4 + 2 , ua ; move ua , 2 )  | ( move 3 * 2 , ua ; move ua , 2 )  | ( move 4 + 2 , ua + ua ; move ua , 2 )  | ( move 4 + 2 , ua ; move ua , 2 - ua )  | ( move 3 + ul , ua ; move 2 , 0 ; move ua , 2 )  | ( move 4 + 2 , 0 ; move 0 , ul ; move ua , ul )  | ( move 3 * 2 , 0 ; move 0 , ul ; move ua , ul )  | ( move 3 + ul , ua ; ( move 2 , 0 ; move ua , 2 ; pen ua ) )  
[663] ( move ul , 0 ; move 4 , 0 - 2 )  | ( move ul , 0 ; move 4 , ua - 2 )  | ( move ul , 0 ; move 4 , ul - 3 )  | ( move ul , ua ; move 4 , ul - 3 )  | ( move ul , ua ; move 4 , ul - 3 ; v0 = 4 )  | ( move ul , ua + ua ; move 4 , ul - 3 ; pen ua * 3 )  
[664] ( move 2 , 0 ; move ua + 2 , 4 )  | ( move 2 , ua * 2 ; move 4 + 4 , 4 )  | ( move 3 , 0 ; move 4 * 2 , 4 ; pen 4 - 3 )  
[665] ( move 3 , 0 - 2 ; move ua , 2 )  | ( move 2 + ul , ul - 3 ; move ua , 2 )  | ( move 4 - ul , ul - 3 ; pen ul ; move ua , 2 - ua )  
[666] ( move 4 , 0 ; move 2 , 0 - ul )  | ( move 4 , 0 ; move 4 - 2 , 3 - 4 )  | ( move 4 , 0 ; move ul + ul , ua - ul )  | ( pen ua ; ( move 4 , ua ; move 3 - ul , ua - ul ; pen ul ) )  
[667] ( move 0 - 4 , 0 ; move ul , 2 )  | ( move ul , 0 - ul ; move 4 , ul )  | ( move ul , ua - ul ; move 4 , ul )  | ( pen ua ; move ul , ua - ul ; move 4 , ul )  | ( move ul , ua - ul ; move 4 , ul ; pen 4 / 2 )  | ( move ul , 3 - 4 ; v0 = ul ; move 4 , v0 )  | ( move ul , ul - 2 ; v0 = 4 ; move v0 , ul )  | ( move 0 , ul ; move ul , ul - 3 ; move 3 + ul , ul )  | ( ( move ul , ua - ul ; move 2 + 2 , ul ) ; move 0 , ul )  | ( v0 = ul ; ( move ul , ua - ul ; move 4 , ul / v0 ) )  
[668] ( move ua , 2 ; move 3 , 0 - 2 )  | ( ( move ul / 4 , 0 ; move 3 , ua / 2 ) ; move ua , 2 )  
[669] ( move 3 , 0 ; move ua , 3 + 2 )  | ( move 3 , 0 ; move ua , 4 + ul )  | ( move 3 , ua ; move ua , 4 + ul )  | ( move 2 + ul , ua ; move ua , 3 + 2 )  | ( move 3 , 0 - ua ; move ua , 4 + ul )  | ( move 2 + ul , ua ; move ua , 4 + ul )  | ( move 4 - ul , ua ; move ua , 4 + ul )  | ( move 3 , ua ; pen ul ; move ua , 4 + ul )  | ( move 3 , ua ; move ua , 4 + ul ; v0 = 0 )  | ( move 3 , ua + ua ; move 0 , 4 ; move ua , ul )  | ( move 3 , 0 ; ( pen 2 + ul ; move ua , 4 + ul ) )  
[670] ( move 3 , 0 ; move ua - 2 , 2 )  | ( move 3 , 0 ; move ua - 2 , ua + 2 )  | ( move 3 , 0 ; move ua - 2 , 2 ; pen ul )  
[671] ( move 3 , 0 ; move 0 - 4 , ul )  | ( move 3 , 0 ; move 0 - 4 , ul ; pen ua * 3 )  
[672] ( move ua , 3 + 2 ; move 2 , 2 )  | ( move ua , 4 + ul ; move 2 , 2 )  
[673] ( move 2 , 0 ; move 2 , 4 + ul )  | ( move 2 , ua ; move 0 , 2 ; move 2 , 3 )  | ( ( move 2 , 0 ; pen ul ) ; move 2 , 4 + ul )  | ( v0 = ul + ul ; move 2 , 0 ; move v0 , v0 + 3 )  
[674] ( move 4 + 2 , 0 ; move 2 , ul )  | ( move 4 + 2 , ua ; move 2 , ul )  | ( move 4 - ul , 0 ; move 3 , 0 ; move ul + ul , ul )  
[675] ( move 4 , 0 - 2 ; move ua , 2 )  | ( move 4 , 0 - 2 ; move ua , ul + ul )  | ( pen ul / 3 ; move 4 , 0 - 2 ; move ua , 2 )  | ( move 4 , ul - 3 ; move ua , 2 ; v0 = 4 + 2 )  
[676] ( move ua , 2 ; move 4 , 0 - 2 )  | ( move ua , 2 ; move 4 , ul - 3 ; v0 = ul )  
[677] ( move 2 , ua ; move 0 - 2 , 4 )  | ( move 2 , ua ; move ul - 3 , 4 )  | ( move 2 , ua * 4 ; move 2 - 4 , ua + 4 )  | ( move ul + ul , 0 ; move 2 - 4 , 4 - ua )  
[678] ( move 4 , 0 ; move 0 - ua , 4 )  
[679] ( move 3 , 0 ; move 2 , ua - 3 )  | ( move 3 , ua ; move 2 , 0 - 3 )  | ( move 2 , ul / ua ; move 2 + ul , 3 )  | ( move 3 , ua * 3 ; move 4 / 2 , 0 - 3 )  | ( ( move 3 , ua ; pen 3 ; move 2 , ul - 4 ) ; pen 2 / ua )  
[680] ( move 3 , 0 ; move ul - 2 , 2 )  | ( move 3 , 0 ; move ul , 0 - ul )  | ( move 3 , 0 ; move ul , ul - 2 )  | ( move 3 , ua ; move ul , 3 + 2 )  | ( move 3 , 0 ; move ul , 4 + ul )  | ( move 4 - ul , 0 ; move ul , ua - ul )  | ( move 3 , 0 ; move 0 , 4 + ul ; move ul , ua )  | ( pen ul + ul ; move 3 , ua ; move ul , 4 + ul )  | ( ( move 3 , 0 ; v0 = ul ) ; move v0 - 2 , 2 )  | ( move 3 , 0 ; ( move 0 , ul ; pen 2 ; move ul , 4 ) )  | ( move 3 , 0 ; v0 = ul - 2 ; move 2 + v0 , v0 )  | ( move 3 , 0 ; v0 = ua - 4 ; move ul , v0 * v0 )  | ( move 3 , 0 ; ( move 0 , ul ; ( pen 3 ; move ul , 4 ) ) )  
[681] ( move 3 , 2 ; move ua + 2 , 2 )  
[682] ( move 4 , 0 ; move ua + 3 , 2 )  | ( move 4 , ua ; move ua + 3 , ul + ul )  
[683] ( move 2 , 0 ; move ul - 3 , 2 )  | ( move 2 , ua ; move 2 - 4 , 2 )  
[684] ( move 0 - 2 , ul ; move 3 , 2 )  | ( move ul - 3 , ua + ul ; move 2 + ul , 2 )  | ( pen 3 ; move ul - 4 , 2 + ul ; move 2 , ua - 2 )  | ( pen ua - 2 ; move ul - 3 , ul ; move 3 , ul + ul )  | ( move 2 - 4 , ul ; ( move 3 , 2 - ua ; v0 = 0 ) )  
[685] ( move ua , 0 ; move 4 , 3 + 2 )  | ( move ua , ua ; move 4 , 4 + ul )  | ( move ua , ua * 4 ; move 3 + ul , 4 + ul )  | ( ( move ua , 0 ; pen ul ) ; move 3 + ul , 4 + ul )  | ( move ua , ua * 3 ; ( pen ul ; move 4 , 4 + ul ) )  | ( move ua , ua ; ( move 4 , 4 + ul ; pen ul / 4 ) )  | ( move ua , ua + ua ; move 4 , 4 + ul ; v0 = ul )  | ( move ua , 0 - ua ; move 4 , 4 + ul ; move 0 , ul + ul )  
[686] ( move ua + 2 , 0 ; move 4 , 3 )  | ( move 4 + 4 , ua ; move 4 , 3 )  | ( move ua + 2 , 0 ; move 2 * 2 , 3 )  | ( move ua + ul , 0 ; move ul , ua * 3 ; move 3 + ul , 3 )  
[687] ( move 2 , 4 ; move ua , 0 - 2 )  | ( move 2 , 4 ; move ua , ua - 2 )  | ( ( move 4 / 2 , 4 ; pen ul ) ; move ua , ua - 2 )  
[688] ( move ua , 0 ; move 2 , 3 * 2 )  | ( move ua , ua * 2 ; move 2 , 3 * 2 )  | ( move ua , ua ; move 0 , ul + ul ; move 2 , 4 )  
[689] ( move ul , 0 ; move 0 - 3 , 4 )  | ( move ul , ua ; move ul - 4 , 4 )  | ( move ul , 0 ; move ul - 4 , 3 + ul )  | ( move ul , ua * 2 ; pen ua ; move ul - 4 , 4 )  
[690] ( move ul - 2 , 0 ; move 3 , 2 )  
[691] ( move ua , 0 - 2 ; move 2 , 4 )  | ( move ua , ul - 3 ; move 2 , 4 )  
[692] ( move 2 , 0 ; move 2 , ul - 3 )  | ( move ul + ul , 0 ; move 2 , ua - 2 )  | ( move 2 , ua ; move 2 , 0 - 2 ; v0 = ul - ua )  
[693] ( move 2 , ul ; move 0 - 2 , 3 )  | ( move 2 , ul ; move ul - 3 , 3 )  | ( move 4 - 2 , ul ; move ul - 3 , 3 )  | ( move 3 - ul , 4 ; move 2 , ul / ua )  | ( move 2 , ul ; move 2 - 4 , 3 ; pen ua )  | ( move 2 , ul ; move ul - 3 , 3 ; pen ul )  | ( move 2 , 4 ; move ua / 3 , ul / ua ; pen 2 )  
[694] ( move ul , 0 ; move 3 , 0 - 4 )  | ( move 3 - 2 , 0 ; move 3 , ua - 4 )  | ( move ul , ua * 4 ; move 3 , ua - 4 )  | ( move ul , ua ; move 2 + ul , ua - 4 )  
[695] ( move ul , 2 ; move 3 , 0 - 2 )  | ( move 0 - 3 , ua ; move 0 - ul , 2 )  | ( move 4 / ua , ua ; move ul - 4 , 0 ; move ul , 0 - ul )  | ( move ul , ul + ul ; move 2 + ul , ua - 2 ; pen ua / 4 )  
[696] ( move 2 , 2 ; move 4 - ua , 0 )  | ( ( move 2 , 2 ; move 4 - ua , 0 ) ; pen 2 )  | ( move 2 , 2 ; move 4 - ua , ua ; v0 = 3 )  | ( move 4 - ua , 2 ; pen ul ; move ul + ul , ua )  
[697] ( move ua + 3 , 2 ; move 2 , 2 )  | ( move ua + 3 , 2 ; v0 = ul + ul ; move v0 , v0 )  
[698] ( move 4 - ua , 0 ; move 2 , 2 )  | ( move 4 - ua , ua ; move 2 , 2 )  
[699] ( move 3 + 2 , ua ; move 3 , 2 )  | ( move 4 + ul , 0 ; move 3 , 2 - ua )  | ( move ul , 0 ; move 4 , ua ; move 3 , 2 )  | ( move 3 + 2 , 0 ; pen ua + 3 ; move 3 , 2 )  | ( move 4 + ul , ua ; move 3 , 2 ; pen ul / ua )  | ( move ul , ua ; move 4 , ua ; move 3 , ul + ul )  | ( move 3 + 2 , ua ; pen 4 + 4 ; move 3 , 2 - ua )  
[700] ( move 3 , 0 - 3 ; move ua , 3 )  
[701] ( move 3 + 2 , 2 ; move ua , 3 )  | ( move ul , 2 ; move 4 , 0 ; move ua , 3 )  | ( move 3 + 2 , 2 ; move ua , 3 ; v0 = ul )  
[702] ( move ua + 3 , 2 ; move 3 , 2 )  | ( move ua + 3 , 2 ; move 0 , 2 ; move 3 , 0 )  
[703] ( move 4 + 3 , 0 ; move ul , 2 )  | ( move ua + ul , ua ; move ul , 2 )  | ( move ua + ul , ua ; move ul , 4 - 2 )  | ( move ua , ua ; move ul , ua ; move ul , 2 )  | ( move ua + ul , 0 ; pen 3 ; move ul , 2 - ua )  | ( move ul , 0 ; move ua , 0 ; move ul , ul + ul )  | ( move ua + ul , ua ; v0 = 2 ; move ul , v0 )  | ( ( move 2 + ul , 0 ; move 4 , 0 ) ; move ul , 2 )  | ( move ua + ul , 0 ; move ul , 4 - 2 ; pen ua + ul )  | ( move ua + ul , 0 ; pen ua + ul ; move ul , ul + ul )  | ( move ua + ul , 0 ; v0 = ul ; move v0 , v0 * 2 )  | ( move ua + ul , 0 ; move ul , 3 - ul ; v0 = ua * 4 )  | ( move ua , ua ; move ul , ua ; ( pen ul ; move ul , ua / 3 ) )  
[704] ( move 2 , 0 ; move ua , 3 / 2 )  | ( ( move ul , ua ; move ul , ua ) ; move ua , 3 / 2 )  
[705] ( move 2 , ua ; move 3 + 2 , 3 )  | ( move 2 , ua * 2 ; move ua - ul , 3 )  
[706] ( move ua , 0 ; move 2 - 4 , 3 )  | ( move ua , ua ; move 0 - 2 , 3 )  | ( move ua , ua ; move 2 - 4 , 3 )  | ( move 2 , 3 ; move ua , ul / ua )  | ( move ua , 0 ; move 0 - 2 , 2 + ul )  | ( move ua , 0 ; move ul - 3 , 3 ; pen 2 )  
[707] ( move 2 , 0 ; move ua + 4 , 4 )  | ( move 2 , ua + ua ; move ua + 4 , 4 )  | ( move 2 , 0 ; pen 3 + ul ; move ua + 4 , 4 )  | ( move 2 , ua ; v0 = 4 ; move ua + v0 , v0 )  | ( move 2 , ua ; ( move ua + 4 , 4 ; pen ul ) ; pen ul )  
[708] ( move 2 , 0 ; move 2 , ua / 3 )  
[709] ( move ua , 2 ; move 4 + 2 , 2 )  | ( move ua , 2 ; pen 4 ; move 3 * 2 , 2 )  | ( move ua , ul + ul ; move 3 * 2 , ul + ul )  
[710] ( move 2 , 3 + 2 ; move ua , 3 )  | ( move 3 , 4 + ul ; move ua , 3 )  | ( move 2 , 4 + ul ; ( move 0 , 3 ; move ua , ua ) )  
[711] ( move 2 , 0 ; move ua - 3 , 4 )  | ( move ul , ua + ua ; move ul , 0 ; move ua - 3 , 4 )  
[712] ( move 4 , 0 ; move ua - 3 , 2 )  
[713] ( move 2 , 0 ; move ua , 4 * 2 )  | ( pen ul ; move 2 , 0 ; move ua , 4 + 4 )  | ( pen 2 ; move 2 , ua + ua ; move ua , 4 + 4 )  
[714] ( move ul - 2 , 0 ; move 3 , 3 )  | ( move ul - 2 , ua ; move 3 , 3 )  | ( move 2 - 4 , 0 ; move ul + ul , 3 )  | ( pen ul ; move 3 - 4 , ua ; move 3 , 3 )  | ( pen 4 ; move 0 - ul , ua ; move 3 , 4 - ul )  | ( move 0 - ul , 0 ; move 3 , 3 ; v0 = ul - 4 )  
[715] ( move 3 , ua + 3 ; move 2 , 2 )  | ( move 3 , ua + 3 ; move ul + ul , ul + ul )  | ( move 3 , 3 ; v0 = ul + ul ; move v0 , v0 )  | ( move 3 , 2 + ul ; v0 = ul + ul ; move v0 , v0 )  
[716] ( move 3 , 3 + 2 ; move ua , 2 )  | ( move 3 , 4 + ul ; move ua , 2 )  
[717] ( move 3 , 0 ; move 2 , ul - 3 )  | ( move 3 , ua * 4 ; move 2 , 2 - 4 )  | ( move 2 + ul , ua ; move ul + ul , ul - 3 )  
[718] ( move 2 , 0 - 2 ; move 4 , ul )  
[719] ( move 3 , 0 - 3 ; move ul , 2 )  
[720] ( move 4 + 3 , 0 ; move ua , 3 )  | ( move ua , ua ; move ul , 0 ; move ua , 3 )  
[721] ( move ua , 0 ; move 4 + 2 , 4 )  | ( move ua , ua ; move 3 * 2 , 4 )  | ( move ua , ua ; move 3 * 2 , 4 ; pen 2 )  | ( move ua , 0 ; pen 2 ; move 3 * 2 , 4 - ua )  | ( move ua , ua ; v0 = 4 ; move 2 + v0 , v0 )  
[722] ( move 0 , 4 * 2 ; move ua , 2 )  | ( move 0 , 3 ; move ua , 4 + 3 )  | ( move 0 , 4 + 2 ; move ua , ua + 4 )  | ( move 0 , ua + 4 ; move ua , 4 + 2 )  | ( move 0 , 2 + ul ; move ua , 4 + 3 )  | ( move 0 , 4 * 2 ; move ua , 2 - ua )  | ( move 0 , ul + ul ; move ua , 4 * 2 )  | ( move 0 , 4 + ul ; move ua , 4 + ul )  | ( move 0 , ul - 2 ; move ua , ua / 4 )  | ( v0 = 3 + 2 ; move ua , v0 * 2 )  | ( v0 = 3 + 2 ; move ua , v0 + v0 )  | ( pen ul ; v0 = ua / 4 ; move ua , v0 - ul )  | ( ( move 0 , 4 ; move ua , 3 * 2 ) ; v0 = ua )  | ( v0 = 3 ; move 0 , ul ; move ua , v0 * v0 )  | ( move 2 / ua , 4 + 3 ; move 0 , ul ; move ua , 2 )  
[723] ( move ua , 0 ; move 2 , 3 / 2 )  
[724] ( move ul , 0 ; move 3 , 4 + 2 )  | ( move ul , ua ; move 3 , 4 + 2 )  | ( move ul , ua ; move 3 , 3 + 3 )  | ( move ul , ua ; move 3 , 3 * 2 )  | ( move ul , ua ; move 4 - ul , 3 + 3 )  | ( move ul , 0 ; move 0 , 4 ; move 3 , 2 )  | ( move ul , ua ; move 0 , 3 * 2 ; move 3 , 0 )  | ( ( move ul , 0 ; move 0 , 3 ) ; move 3 , 4 - ul )  | ( move ul , ua * 2 ; move 3 , 3 * 2 ; v0 = 2 )  | ( move ul , ua ; pen ul + ul ; move 2 + ul , 3 + 3 )  | ( move ul , ua ; v0 = 4 - ul ; move v0 , v0 + v0 )  
[725] ( move 3 , ua ; move 2 , 3 + 2 )  | ( move 3 , ua ; move 2 , 4 + ul )  | ( move 3 , ua + ua ; move 2 , 3 + 2 )  | ( move 3 , 0 ; move ul + ul , 4 + ul )  | ( ( move 3 , 0 ; move 0 , 4 ) ; move ul + ul , ul )  
[726] ( move 2 , 3 ; move ua + 3 , 2 )  | ( move ul , 3 - ua ; move ua + 3 , 2 )  | ( ( move ul , 2 + ul ; move ua , ul + ul ) ; move 3 , 0 )  
[727] ( move ul , 0 ; move 4 + 3 , 2 )  | ( move ul , ua ; move 4 + 3 , 2 )  | ( move ul , ua ; move 4 + 3 , ul + ul )  | ( move ul , 0 ; move 3 , 2 ; move 4 , ua )  | ( move ul , ua ; move 4 , 2 ; move 3 , ua )  | ( ( move ul , ua ; move 3 , 4 / 2 ) ; move 4 , ua )  
[728] ( move ul - 3 , 0 ; move 3 , 2 )  
[729] ( move 2 , 4 ; move ua + 2 , 2 )  
[730] ( move 2 , 0 ; move 3 , ua - 4 )  | ( move ul , ua * 4 ; move ul , ua * 2 ; move 3 , ua - 4 )  
[731] ( move ul , 2 ; move 3 , 0 - 3 )  | ( move 3 - ua , ua - ul ; move ul , ua )  | ( pen ul ; move 3 - ua , ua - ul ; move 2 , 0 )  | ( move ul , 2 ; v0 = ul / 3 ; move 3 , ua - 3 )  | ( ( move ul , 2 ; v0 = ua - 3 ) ; move v0 , v0 )  
[732] ( move ul , 2 ; move 3 + 2 , 2 )  | ( move ul , 2 ; move 4 + ul , 2 )  | ( move ul , ua + 2 ; move 4 + ul , 2 )  | ( pen ua ; move ul , 2 ; move 4 + ul , 2 )  
[733] ( move ua , 0 ; move 3 , 2 - 4 )  | ( move ua , ua ; move 3 , ua - 2 )  | ( move ua , 0 ; pen ua ; move 3 , ua - 2 )  | ( move ua , ua ; move 3 , ul - 3 ; pen 3 )  | ( move ua , ua + ua ; move 2 + ul , ul - 3 )  | ( move ua , ua * 2 ; move 3 , 2 - 4 ; pen 0 )  | ( move ua , ua ; move 2 + ul , 0 - 2 ; pen 4 )  | ( ( pen ua * 4 ; move ua , 0 ) ; move 2 + ul , ul - 3 )  
[734] ( move 2 , 0 ; move 3 - ua , 4 )  
[735] ( move 3 , 0 ; move ul , 4 + 2 )  | ( v0 = ua ; move 3 , v0 ; move ul , 4 + 2 )  | ( move 3 , 0 ; move ul , 4 + 2 ; v0 = 3 / ua )  | ( pen ua ; ( ( pen 4 ; move 3 , ua ) ; move ul , 3 + 3 ) )  
[736] ( move 2 , 2 ; move ua + 4 , 2 )  
[737] ( move 4 , 0 ; move ul , 3 + 2 )  | ( move 4 , 0 ; move ul , ul - 2 )  | ( move 4 , ua ; move ul , 3 + 2 )  | ( move 4 , 0 ; move ul , 4 + ul )  | ( move 4 , 0 ; move ul , ua - ul )  | ( move 4 , ua ; move ul , ul - 2 )  | ( move 4 , ua ; move ul , 4 + ul )  | ( move 3 + ul , 0 ; move ul , 4 + ul )  | ( move 4 , ua + ua ; move ul , 4 + ul )  | ( move 4 , ua ; move 0 , 4 ; move ul , ul )  | ( move 4 , ua ; pen ul ; move ul , 4 + ul )  | ( move 3 + ul , 0 ; pen 4 ; move ul , 4 + ul )  | ( move 4 , ua ; v0 = 4 + ul ; move ul , v0 )  | ( move 2 * 2 , ua ; move ul , 4 + ul ; v0 = ul )  | ( move 4 , ua + ua ; ( move 0 , ul ; move ul , 4 ) )  | ( pen ul ; move 4 , 0 ; ( move ul , 3 + 2 ; pen 0 ) )  | ( move 3 + ul , ua ; v0 = 3 + 2 ; move ul , v0 )  | ( pen ul + ul ; move 2 * 2 , ua ; move ul , ua - ul )  | ( pen ul ; move 4 , ua ; ( move ul , 4 + ul ; pen ua ) )  
[738] ( move 3 , 0 ; move 4 + ul , 2 )  | ( move 3 , ua ; move 4 + ul , 2 )  | ( move 2 + ul , ua ; move 4 + ul , 2 )  | ( pen 2 ; move 3 , ua ; move 4 + ul , 2 )  | ( move 3 , ua ; move 4 + ul , 2 ; move ul / ua , 3 )  
[739] ( move ul , 0 ; move 3 , 2 - 3 )  | ( move ul , ua ; move 3 , 2 - 3 )  | ( move ul , ua ; move 3 , 3 - 4 )  | ( move ul , ua ; move 3 , 0 - ul )  | ( move ul , 0 ; move 3 , ua - ul )  | ( move ul , ua ; move 3 , ua - ul )  | ( move ul , ua * 2 ; move 3 , 0 - ul )  | ( move ul , 0 ; move 2 + ul , ua - ul )  | ( move ul , ua * 2 ; move 3 , ua - ul )  | ( move ul , ua + ua ; move 3 , ua - ul )  | ( move ul , ua ; pen 4 ; move 3 , ul - 2 )  | ( move ul , ua ; pen ua ; move 3 , ua - ul )  | ( move ul , ua * 4 ; move 2 + ul , ua - ul )  | ( pen 4 * 3 ; move ul , ua ; move 3 , ul - 2 )  | ( ( move ul , ua ; move 3 , 0 - ul ; pen ua ) ; v0 = 0 )  
[740] ( move 2 , 3 ; move ua + 2 , 3 )  | ( move ua - 4 , 3 ; move ua + 2 , 3 )  
[741] ( move ua , 0 - 3 ; move 2 , 4 )  | ( move ua , ua - 3 ; move 2 , 4 )  | ( move ua , ua - 3 ; move ul , 4 ; move ul , ua * 2 )  
[742] ( move 2 , 2 ; move ua , 3 * 2 )  | ( move 2 , 2 ; move 0 , 2 ; move ua , 3 + ul )  | ( move 2 , 3 - ul ; move ua , 4 + 2 ; pen 0 - ul )  | ( move 0 , ul + ul ; move 2 , ua ; move ua , 4 + 2 )  | ( move ul , 2 ; ( move ul , ua * 3 ; move ua , 4 + 2 ) )  
[743] ( move ua , 0 ; move 3 , 3 - 4 )  | ( move ua , 0 ; move 3 , 0 - ul )  | ( move ua , 0 ; move 3 , ua - ul )  | ( move ua , 0 ; move 2 + ul , ua - ul )  | ( move ua , ua + ua ; move 3 , ua - ul )  | ( move ua , ua ; move 3 , ua - ul ; pen 0 )  | ( move ua , ua ; move 3 , 0 - ul ; pen ul )  | ( move ua , ua * 2 ; move 3 , ua - ul ; pen ul )  | ( move ua , ua * 3 ; move 4 - ul , ua - ul ; pen 0 )  | ( move ua , ua ; move 2 , ua - ul ; move ul , ua * 4 )  | ( ( move ua , ua ; v0 = 0 - ul ) ; move 3 , v0 )  | ( ( ( pen ul ; move ua , 0 ) ; move 3 , 0 - ul ) ; pen 4 )  
[744] ( move 2 - 3 , 0 ; move 4 , ul )  | ( move 2 - 3 , ua ; move 4 , ul )  | ( move 0 - ul , ua ; move 4 , ul )  | ( move ul - 2 , ua ; move 4 , ul )  | ( move 3 - 4 , ua * 4 ; move 4 , ul )  | ( move ul - 2 , ua ; move 2 * 2 , ul )  | ( move ul , ul - 4 ; move 4 , 3 + ul )  | ( move ul - 2 , ua ; move 3 + ul , ul )  | ( move ul - 2 , ua ; move 4 , ul ; pen ul )  | ( move 0 - ul , 0 ; move 4 , ul ; v0 = 0 - ua )  | ( move ul - 2 , ua ; ( move 2 + 2 , ul ; pen 0 ) )  | ( move ul - 2 , ua ; move 3 + ul , ul - ua ; pen 4 )  
[745] ( move 2 , 2 ; move 4 + 2 , ul )  | ( move 3 - ul , 2 ; move 3 * 2 , ul )  | ( pen 2 ; move ul + ul , 2 ; move 4 + 2 , ul )  
[746] ( move 3 , ua ; move 3 + 2 , 3 )  | ( move 3 , 0 ; move ua - ul , 3 )  | ( move 3 , ua ; move 4 + ul , 3 )  
[747] ( move 2 , 4 ; move 0 - 3 , ul )  | ( move 2 , 4 ; move ul - 4 , ul )  
[748] ( move 3 , 3 ; move 3 , 0 - ul )  | ( move 3 , 3 ; move 3 , ul - 2 )  | ( v0 = 3 ; ( move v0 , v0 ; move v0 , ua - ul ) )  
[749] ( move 3 , 4 ; move 0 - 2 , ul )  
[750] ( move 4 + 3 , 0 ; move ul , 3 )  | ( move ua + ul , 0 ; move ul , 3 )  | ( move ua + ul , ua ; move ul , 3 )  | ( move ua + ul , 0 ; pen 3 ; move ul , 3 )  | ( move ua , 0 ; move ul , ua ; move ul , 3 )  | ( pen 4 ; move ua + ul , ua ; move ul , 3 )  | ( move ul , ua ; move ua , ua ; move ul , 3 )  | ( move ua , ua ; move ul , ua ; move ul , 3 )  | ( move ua + ul , ua ; pen ul ; move ul , 3 )  | ( move ua + ul , ua * 4 ; move ul , ua + 3 )  | ( move ua + ul , ua ; move ul , 3 ; pen 3 - 2 )  | ( move ua , ua ; move ul , ua ; move ul / 3 , 3 )  | ( move ua + ul , 0 ; pen ua ; move ul , 3 - ua )  | ( move ua + ul , ua ; move ul , 3 ; v0 = ua + 2 )  | ( move ua + ul , ua ; pen ua + 3 ; move ul , 3 - ua )  | ( ( v0 = ua + ul ; move v0 , ua ) ; move ul , 3 )  | ( v0 = ua ; move ul + v0 , v0 + v0 ; move ul , 3 )  | ( move ua + ul , 0 ; move ul , 4 - ul ; ( pen ua ; pen ua ) )  
[751] ( move 2 - ua , 4 ; move 2 , 2 )  
[752] ( move 4 - ua , 2 ; move 2 , 2 )  
[753] ( move 2 - 4 , ul ; move 3 , 0 )  | ( move 0 - 2 , ul ; move 3 , ua )  | ( move 3 , ul ; move 3 - ua , 0 )  | ( move ul - 4 , ul ; move ul , 0 )  | ( move ul - 4 , ul ; move ul , ua * 4 )  | ( move 4 - ua , ul ; move 3 , ua ; pen 3 )  | ( move ul - 3 , 4 - 3 ; move 2 + ul , ua )  | ( move 4 - ua , ul ; v0 = 0 ; move 3 , ua )  | ( move ul - 3 , ul ; ( move 3 , 0 ; pen ul ) )  | ( move ul , ul ; move 3 - ua , ua ; move 2 , ua )  | ( v0 = 3 - 4 ; move v0 , ul ; move 3 , ua )  | ( v0 = 0 ; move v0 - 3 , ul ; move ul , ua )  | ( move 0 - 3 , 2 - ul ; move 2 , ua ; pen ua + 4 )  | ( move ul - 3 , ua + ul ; move 0 , ua * 2 ; move 3 , 0 )  | ( move ul - 4 , ul ; ( move ul , 0 ; pen ul - 2 ; pen 3 ) )  
[754] ( move 3 - ua , 3 ; move 2 , 2 )  
[755] ( move ua , 0 ; move 3 , 4 * 2 )  | ( pen ua + 3 ; move ua , ua ; move 2 + ul , 4 * 2 )  
[756] ( move 3 + 2 , ul ; move 2 , 3 )  | ( move 4 + ul , ul ; move 2 , 3 )  | ( move 4 + ul , ul ; move 2 , 4 - ul )  | ( move 3 + 2 , ul ; move ul + ul , ua + 3 )  | ( move 4 + ul , ul ; move 2 , 3 ; v0 = ua * 2 )  | ( ( move 4 + ul , ul ; move ua - 4 , 3 ) ; pen 4 )  | ( v0 = ua ; move 3 + 2 , v0 / ua ; move 2 , 3 )  | ( move ul , ul ; ( move 2 * 2 , ua * 3 ; move 2 , 3 ) )  
[757] ( move 2 , 3 ; move ua + 3 , 3 )  | ( v0 = 3 ; move 2 , v0 ; move ua + v0 , v0 )  | ( move ul + ul , 3 ; ( move 3 , 3 ; move ua , ua * 3 ) )  
[758] ( move ua - 3 , 0 ; move 3 , 4 )  
[759] ( move 2 , 2 ; move 4 + ul , 2 )  | ( move 2 , ua + 2 ; move 3 + 2 , 2 )  | ( pen ul ; move 2 , 2 ; move 3 + 2 , 2 )  | ( v0 = 2 ; move v0 , v0 ; move v0 + 3 , v0 )  | ( move 2 , 2 ; move ul + ul , ul + ul ; move 2 + ul , ua )  
[760] ( move ul - 2 , 0 ; move 4 , 3 )  | ( move 0 - ul , ua ; move 4 , 2 + ul ; pen 0 )  | ( move 0 - ul , ua ; move 4 , 3 - ua ; pen ul )  | ( move 0 - ul , ua ; move 3 + ul , 3 ; move 0 , ul + ul )  | ( move ul - 2 , ua ; move ul , ua + 3 ; move 3 , ua * 4 )  
[761] ( move ul , 0 ; move 3 * 3 , 2 )  
[762] ( move 2 , 0 ; move 4 , 2 / ua )  
[763] ( move 2 , ul ; move 4 + 2 , 2 )  | ( move 2 , ul ; pen ua ; move 4 + 2 , ul + ul )  
[764] ( move 4 , 0 ; move ul , 4 + 2 )  | ( move 4 , 0 ; move ul , 3 * 2 )  | ( move 4 , ua ; move ul , 3 + 3 )  | ( move 4 , ua ; move ul , 4 + 2 )  | ( move 3 + ul , ua ; move ul , 3 * 2 )  | ( move 4 , 0 ; move 0 , 3 ; move ul , 3 )  | ( ( move 4 , ua ; v0 = 4 ) ; move ul , 3 * 2 )  | ( pen 4 ; move 4 , ua * 4 ; move 3 / ua , 4 * 3 )  
[765] ( move 3 + 3 , 2 ; move 2 , ul )  | ( move 3 * 2 , 2 ; move 3 - ul , ul )  | ( move 3 + 3 , 2 ; move 2 , ul ; pen 3 )  | ( pen ua ; move 3 * 2 , 2 ; move 2 , ul )  | ( move 4 + 2 , 2 ; move 2 , ul ; pen ua * 4 )  | ( pen ua / 3 ; move 3 + 3 , 3 - ul ; move 2 , ul )  
[766] ( move 2 - 4 , 2 ; move ua , 2 )  | ( move ul - 3 , 2 ; move ua , ul + ul )  
[767] ( move 2 , ua ; move 3 * 2 , 2 )  | ( move ul , 0 ; move 4 + 2 , 2 - ua )  | ( move ul , 0 ; move 3 * 2 , ul + ul )  | ( move ul , ua ; ( move 3 * 2 , 2 ; pen ul ) )  | ( move ul , ua ; move 0 , ul ; move 3 * 2 , ul )  | ( move ul , ua ; move 3 * 2 , 3 - ul ; pen 3 - 2 )  | ( ( move 0 - 4 , 2 ; move ul - 3 , 0 ) ; move ul , ul )  
[768] ( move ua , 3 * 2 ; move 2 , 2 )  
[769] ( move 2 , 4 + 2 ; move ua , 3 )  | ( move 2 , 3 + 3 ; pen ua ; move ua , 2 + ul )  
[770] ( move 0 - ul , 4 ; move 3 , 2 )  | ( move ul , ul ; move 3 , 4 + ul )  | ( pen ua + 2 ; move ul , ul ; move 3 , 4 + ul )  | ( v0 = ul ; move v0 , v0 ; move 3 , v0 + 4 )  
[771] ( move 3 , ua ; move 4 , 0 - 3 )  | ( move 2 + ul , ua ; move 4 , 0 - 3 )  | ( move ua - 3 , ua ; move 4 , ua - 3 )  | ( move 3 + ul , ua ; move 4 , ul - 4 )  | ( v0 = 0 ; move 3 , v0 ; move 4 , ua - 3 )  | ( pen ul ; move 4 , ua ; move 3 + ul , ua - 3 )  | ( ( pen ua ; pen 2 ) ; move 4 , ua ; move 4 , ua - 3 )  | ( move 3 , 0 ; ( v0 = 2 + ul ; move 4 , ua - v0 ) )  
[772] ( move 3 , 0 ; move ul , 4 + 3 )  | ( move 2 + ul , 0 ; move ul , 4 + 3 )  | ( move 2 + ul , ua ; move ul , 4 / ua )  | ( move ua - 3 , ua ; move ul , 4 / ua )  | ( move 3 , ua * 3 ; move ul , 4 + 3 ; v0 = ul / ua )  
[773] ( move ua , 0 ; move 3 * 3 , 3 )  | ( move ua , ua ; move 3 * 3 , 3 )  
[774] ( move 3 + 2 , 3 ; move 2 , ul )  | ( move 4 + ul , 3 ; move 2 , ul )  | ( move 4 + ul , 3 ; move 2 , ul ; pen ul )  | ( move 3 , 2 + ul ; move 2 , ua ; move 2 , ul )  | ( ( move 3 + 2 , 3 ; move 2 , ua + ul ) ; pen 4 ; pen ua )  
[775] ( move 0 - 4 , ul ; move 3 , 2 )  | ( move 0 - 4 , ul ; move 2 + ul , ul + ul )  
[776] ( move ul , 0 ; move 4 , 4 + 2 )  | ( move ul , 0 ; move 4 , 3 + 3 )  | ( move ul , ua ; move 4 , 3 * 2 ; pen ua )  | ( move ul , 0 ; v0 = 4 + ul ; move 4 , v0 + ul )  
[777] ( move ua , 2 ; move 3 + 2 , 4 )  | ( move ua , ua + 2 ; move 4 + ul , 4 )  | ( pen ul + ul ; move ua , 2 ; move 4 + ul , 4 )  | ( move 0 , 2 ; move ua , 0 ; move 4 + ul , 4 - ua )  | ( move ua , 2 ; ( move 4 , ua + 4 ; move ul , ua ) )  | ( move ua , 2 ; ( move ul , 4 ; pen 4 ) ; move 4 , ua )  
[778] ( move ul - 3 , 2 ; move 2 , 2 )  
[779] ( move ua , 2 ; move 2 , 3 * 2 )  | ( move ua , 2 ; move ul + ul , 3 * 2 )  | ( move ua , ul + ul ; move 2 , 3 * 2 )  | ( move ua , 2 ; move 2 , 4 + 2 ; pen 0 )  
[780] ( move ua , 0 ; move 4 + 3 , 4 )  | ( move ua , 0 ; move 4 + 3 , 3 + ul ; pen ua )  
[781] ( move 4 , 2 ; move ua , 3 + 2 )  
[782] ( move 4 * 2 , 0 ; move ua , 3 )  | ( move ua + 2 , 0 ; move ua , 3 )  | ( move ua + 2 , ua ; move ua , 3 )  | ( move 3 * 2 , 0 ; move 2 , ua * 4 ; move ua , 3 )  | ( ( move 4 , 0 ; move 4 , ua ; move 0 , 2 ) ; move ua , ul )  
[783] ( move 4 + 2 , 2 ; move ul , 2 )  | ( move 3 * 2 , 2 ; move ul , 2 )  | ( pen ul ; ( move 4 + 2 , ul + ul ; move ul , 2 ) )  | ( ( v0 = ul / 4 ; move ul , ul ) ; move v0 - ua , ul )  
[784] ( move 2 - ua , 0 ; move 4 , 4 )  
[785] ( move 4 , 3 + 2 ; move ua , 2 )  | ( move 4 , 4 + ul ; move ua , 2 )  | ( pen 3 ; move 4 , 4 + ul ; move ua , 2 )  | ( pen 2 ; move 2 + 2 , 4 + ul ; move ua , 2 )  
[786] ( move 4 , 3 ; move ua + 2 , 2 )  | ( move 4 , 3 ; ( pen ul ; move ua + 2 , 2 ) )  
[787] ( move 3 , ul ; move 2 , 0 - 4 )  
[788] ( move ul - 2 , 2 ; move 3 , 2 )  | ( move 0 - ul , ua + 2 ; move 3 , 2 )  | ( move 0 - ul , 4 - 2 ; pen 2 ; move 3 , 2 )  | ( move ul - 2 , 2 ; move 3 , 2 ; v0 = ua * 4 )  
[789] ( move 3 , 4 + 2 ; move ua , 2 )  
[790] ( move ua + 2 , 3 ; move 3 , 4 )  
[791] ( move 3 , 2 ; move 4 - ua , 2 )  
[792] ( move ul , 4 + 2 ; move 3 , 2 )  
[793] ( move 3 , 3 ; move 2 + ul , 3 )  | ( move 4 - ul , 3 ; move 3 , 3 )  | ( move ua / 2 , 3 ; move 3 , 2 + ul )  | ( move 3 , 3 ; v0 = 3 ; move v0 , v0 )  | ( v0 = 3 ; move v0 , 3 ; move v0 , v0 )  | ( v0 = 3 ; move v0 , v0 ; move 3 , v0 )  | ( v0 = 3 ; move 3 , v0 ; move v0 , v0 )  | ( move 2 + ul , 3 ; v0 = 3 ; move 3 , v0 )  | ( v0 = 3 ; move v0 , v0 ; move v0 , v0 )  | ( ( move 3 , 4 - ul ; move 3 , 3 ) ; v0 = ul )  | ( v0 = 3 ; move 2 + ul , v0 ; move v0 , v0 )  | ( ( v0 = 3 ; move v0 , v0 ) ; move v0 , v0 )  | ( v0 = 3 ; ( move v0 , v0 ; move v0 , v0 ) )  | ( v0 = 3 ; move v0 , v0 ; move v0 , ua + v0 )  | ( v0 = 4 - ul ; move v0 , v0 ; move v0 , v0 )  | ( v0 = 3 ; ( move 4 - ul , v0 ; move v0 , v0 ) )  
[794] ( move 3 , ul ; move 4 , 0 - 3 )  | ( move 2 + ul , ul ; pen 4 ; move 4 , ul - 4 )  
[795] ( move 4 , ul ; move 4 , 0 - 2 )  | ( move 4 , ul ; move 4 , ua - 2 )  | ( move 4 , ul ; move 4 , ul - 3 ; move 0 , 3 )  | ( ( move ul , ul ; move 3 , ua ) ; move 3 + ul , 0 - 2 )  
[796] ( move 2 , 2 - 4 ; move ua , 3 )  
[797] ( move 4 , 0 ; move ua , 4 * 2 )  
[798] ( move 3 , ul ; move 0 - 3 , 4 )  
[799] ( move 3 , 3 + 3 ; move ul , 2 )  | ( move 3 , 3 * 2 ; move ul , 2 ; move 0 , ua )  | ( pen ul ; move ul , 4 + ul ; move ul - 4 , ul )  
[800] ( move 3 , 4 ; move 3 , 0 - ul )  | ( move 3 , 4 ; move 3 , ua - ul )  | ( v0 = 0 - 3 ; move v0 , ua - v0 ; move v0 , ul )  
[801] ( move 3 , ua ; move 4 , 0 - 4 )  | ( move 3 , 0 ; move 4 , ua - 4 ; pen ul )  
[802] ( move ua - 4 , 2 ; move 3 , 2 )  
[803] ( move 3 , ua ; move 3 , 3 + 3 )  | ( ( move 3 , ua ; move 3 , 3 * 2 ) ; v0 = ul )  | ( v0 = 3 ; move v0 , 0 ; move v0 , v0 + v0 )  
[804] ( move 4 , ua - 3 ; move 2 , 2 )  
[805] ( move 2 , ua + 3 ; move 3 , 4 )  | ( move 2 , 3 ; move 4 - ul , 4 )  | ( move 2 , ua + 3 ; move 3 , 3 + ul )  | ( v0 = 4 ; ( move 2 , v0 - ul ; move 3 , v0 ) )  | ( move 2 , 3 ; move 3 , 4 ; ( v0 = 2 ; v1 = ua ) )  
[806] ( move 2 , 2 ; move ua - 3 , 4 )  
[807] ( move ua - 4 , 0 ; move 3 , 4 )  
[808] ( move 3 , 0 - 4 ; move ua , 4 )  | ( move 3 , ua - 4 ; move ua , 4 ; v0 = ua )  | ( ( move ul , ua - 4 ; move 2 , 0 ) ; move ua , 4 )  
[809] ( move 3 * 3 , 0 ; move ul , 3 )  | ( move 3 * 3 , ua ; move ul , 3 )  
[810] ( move 2 , 2 ; move 4 + 3 , ul )  | ( move 2 , 2 ; move 2 , ul ; move 4 + ul , ua )  | ( move 2 , 2 - ua ; move 3 / ua , ul ; move ua , ua )  
[811] ( move 3 , ua ; move 3 + 2 , 4 )  | ( move 2 + ul , ua ; pen ul ; move 4 + ul , 4 )  | ( move ul / ua , ua ; move 3 , 0 ; move 4 + ul , 4 )  | ( move 2 + ul , ua ; move 3 , 3 + ul ; move 2 , ua * 3 )  
[812] ( move ua , 0 ; move 4 , 3 * 3 )  
[813] ( move 3 , ul ; move 3 - 4 , 0 )  | ( move 3 , ul ; move 0 - ul , ua )  | ( move 3 , ul ; move ul , ua - 3 )  | ( move 3 , ul ; move ul , ua / 2 )  | ( move 3 , ul ; move ul , ul - 4 )  | ( move 3 , ua + ul ; move 3 - 4 , 0 )  | ( move ul , ul ; move 0 - 3 , ua * 4 )  | ( pen ua ; move 3 , ul ; move ul , 0 - 3 )  | ( move 3 , ul ; move 0 , 3 ; move ul , ul / 2 )  | ( move ul , ul ; ( pen 4 ; move ul - 4 , 0 ) )  | ( move ul , ul ; move ul - 4 , 0 ; v0 = ua )  | ( move ul , ul ; move ul - 4 , ua ; v0 = ul )  | ( ( move 3 , ul ; move ul , 0 - 3 ) ; move 0 , ul )  | ( move ul , ul ; move 0 - 3 , ua ; move 0 , ua - 4 )  | ( move ul , ua + ul ; move ul - 4 , 0 ; v0 = ul )  
[814] ( move 2 , 3 ; move ua + 3 , 4 )  | ( move 2 , 2 + ul ; move 0 , 4 ; move ua + 3 , ua )  
[815] ( move 3 , 2 - 3 ; move ul , 2 )  | ( move 3 , 0 - ul ; move ul , 4 - 2 )  | ( move 2 + ul , ua - ul ; move ul , ul + ul )  | ( move 3 , 2 - 3 ; pen ul ; move ul , 3 - ul )  | ( move 3 , 0 - ul ; ( move ul , 2 ; pen ua / 3 ) )  | ( v0 = 0 - ul ; move 3 , v0 ; move v0 , v0 )  | ( move 4 - ul , ua - ul ; move 0 , 0 ; move ul , ua + 2 )  
[816] ( move 4 , 3 + 2 ; move 2 , ul )  | ( move 4 , 4 + ul ; move 3 - ul , ul )  | ( move 4 , 4 + ul ; move ua / 3 , ul )  | ( move 3 + ul , 4 + ul ; move ul + ul , ul )  | ( move 4 , 4 + ul ; move 2 , ul ; v0 = ul )  | ( move 3 + ul , 4 + ul ; pen ua ; move 2 , ua + ul )  
[817] ( move 4 + ul , 0 ; move 4 , 3 )  | ( move 4 + ul , ua ; move 4 , 3 )  | ( move 3 + 2 , 0 ; move 4 , 4 - ul )  | ( pen ua ; move 4 + ul , ua ; move 4 , 3 )  
[818] ( move 0 - ul , 4 ; move 3 , 3 )  
[819] ( move 2 , 3 ; move 4 + 2 , ul )  | ( move 2 , 3 ; move 3 * 2 , ua + ul )  | ( move 3 - ul , 3 ; move 3 + 3 , ul )  | ( move 2 , 3 ; move 4 + 2 , ul ; move 0 , ua + ul )  | ( v0 = 3 ; move 2 , v0 ; move 2 * v0 , ul - ua )  
[820] ( move 4 + 2 , 2 ; move 3 , ul )  | ( pen ul ; move ul , 2 ; ( move 4 + ul , ua ; move 3 , ul ) )  
[821] ( move ul , 4 ; move 3 + 2 , 2 )  | ( move ul , 4 ; pen ua ; move 3 + 2 , 2 )  | ( move 0 , 3 ; move ul , ul ; move 4 + ul , 2 )  | ( move ul , 4 ; move 4 , ua + 2 ; move ul , ua )  
[822] ( move 2 , 2 ; move 4 + ul , 3 )  | ( move 2 , 2 ; move ua - ul , 3 )  | ( move ul + ul , 2 ; move ua - ul , 3 )  
[823] ( move 4 , ua + 4 ; move 2 , 2 )  | ( move 4 , 4 ; move 2 , 3 - ul )  | ( move 4 , ua + 4 ; move ul + ul , 2 )  | ( move 4 , 4 ; move 2 , ul + ul ; pen 3 )  | ( move 3 + ul , ua + 4 ; move 2 , 2 - ua )  | ( move 4 , 4 ; v0 = 2 ; move v0 , v0 )  | ( move 4 , 4 ; move ul + ul , 2 ; pen 0 - ul )  | ( move 4 , 4 ; ( move 2 , 2 ; pen ua ) ; pen 2 )  | ( move 4 , 2 * 2 ; v0 = 2 ; move v0 , v0 )  | ( move 4 , 4 - ua ; move 2 , ua + 2 ; move 0 , ua )  | ( move 4 , 2 * 2 ; move ul + ul , 4 / 2 ; move 0 , ul )  | ( move 4 , 3 + ul ; move ua / 3 , ul + ul ; v0 = 4 )  | ( ( pen ua ; v0 = 4 ) ; move v0 , v0 ; move 2 , 2 )  
[824] ( move 3 + 2 , 4 ; move ul , 2 )  | ( move 4 + ul , 4 ; move ul , 2 )  | ( move 4 + ul , 4 ; move ul , 4 - 2 )  | ( move 4 + ul , 4 ; move ul , 2 ; v0 = 0 )  | ( ( move 3 + 2 , 4 ; move 0 , ul ) ; pen 3 ; move ul , ul )  
[825] ( move ul , 4 ; move 0 - 4 , 2 )  | ( move 4 , 4 + 2 ; move ul , ul )  | ( move ul , 3 + 3 ; move 3 , 0 ; move ul , ul )  
[826] ( move ua , 2 ; move 4 + 4 , 2 )  
[827] ( move 4 , 0 ; move ul , 4 + 3 )  | ( move 4 , ua ; pen ua ; move ul , 4 + 3 )  | ( move 4 , ua ; move ul , 3 / 4 ; v0 = 2 - ul )  | ( v0 = 0 ; ( move 4 , v0 ; move ul , 4 + 3 ) )  | ( ( v0 = 4 ; move v0 , ua ) ; move ul , v0 + 3 )  | ( move 4 , 0 ; pen 3 ; ( move 0 , 3 * 2 ; move ul , ul ) )  
[828] ( move 3 , 0 - ul ; move 4 , 3 )  
[829] ( move 3 , 0 ; move 3 / 2 , ul )  | ( move 3 , 0 ; move ua / 4 , ul )  | ( move 2 + ul , 0 ; move ua / 4 , ul )  | ( pen ua ; move 3 , 0 ; move 3 / 2 , ul )  | ( move 3 , 0 ; move ua / 4 , ul ; v0 = 2 )  
[830] ( move 4 , ua ; move 3 + 2 , 3 )  | ( move 4 , ua ; move 4 + ul , 2 + ul )  | ( move 4 , 0 ; move 3 , 3 ; move 3 - ul , 0 )  | ( move 4 , 0 ; move 2 , 3 ; move ua / 2 , ua )  | ( move 4 , ua ; move 4 + ul , 3 ; move 0 , ul + ul )  | ( v0 = 4 ; ( move v0 , 0 ; move v0 + ul , 3 ) )  
[831] ( move ua , 0 ; move 3 / 2 , 4 )  
[832] ( move 3 , 3 ; move ua - 3 , 2 )  
[833] ( move 2 , 2 - 3 ; move 3 , ul )  | ( move ul + ul , ua - ul ; move 3 , ul )  | ( move 2 , ul - 2 ; move 2 + ul , ua + ul )  | ( ( pen ul ; pen 3 ) ; move 2 , 0 - ul ; move 3 , ul )  
[834] ( move 2 , 2 ; move ua , 3 - 4 )  | ( move 2 , ul + ul ; move ua , ua - ul )  | ( move 2 , 2 ; move 0 , ul ; move ua , ua - 2 )  | ( v0 = 2 ; ( move v0 , v0 ; move ua , ul - v0 ) )  
[835] ( move 4 + 2 , ul ; move 3 , 2 )  
[836] ( move 3 , 2 ; move ul - 3 , 2 )  
[837] ( move 3 , 3 ; move 3 + ul , 2 )  | ( move 3 , 3 ; move 4 , 2 ; pen 2 )  | ( move 3 , 3 ; pen 4 ; move 4 , 2 - ua )  | ( move 0 , ua ; move 3 , 3 ; move 4 , ul + ul )  | ( move 3 , 3 ; move ul , ul + ul ; move 3 , ua )  
[838] ( move 3 + 2 , ul ; move 2 , 4 )  | ( move 3 + 2 , ua + ul ; move 2 , 4 - ua )  | ( move 3 + 2 , ul ; move 2 , 4 ; v0 = ua + 4 )  
[839] ( move 4 + 3 , 3 ; move ua , 2 )  | ( move 4 , 3 ; move 3 , ua ; move ua , 2 )  | ( move 4 + 3 , 3 ; move ua , 2 ; pen ul )  
[840] ( move 0 - ul , 4 ; move 4 , 2 )  | ( move ul , ul ; move 4 , 4 + ul )  | ( move ul , ul ; move 3 + ul , 4 + ul )  | ( move ul , ua + ul ; move 3 + ul , 4 + ul )  | ( move ul , ul ; move 4 , 4 + ul ; v0 = 0 )  | ( move ul , ua + ul ; pen 4 ; move 4 , 3 + 2 )  | ( move 0 , 0 - ua ; move ul , ul ; move 4 , 4 + ul )  | ( move ul , ul ; v0 = 4 ; move v0 , ul + v0 )  
[841] ( move ua , 3 * 2 ; move 2 , 3 )  | ( move 3 + 3 , 3 * 2 ; move 2 , 3 )  | ( move ua , 4 + 2 ; move 2 , 2 + ul )  
[842] ( move ul , 3 + 2 ; move 4 , 2 )  | ( move ul , 3 + 2 ; ( move 4 , 2 ; pen ua ) )  | ( move ul , 4 + ul ; move 3 , 2 ; move ul , 0 )  | ( move ul , 4 + ul ; v0 = 2 ; move 4 , v0 + ua )  
[843] ( move 2 , 0 ; move 2 , ul / 4 )  | ( move ua - 4 , ua ; move ul , ul / 4 ; move ul , 0 )  
[844] ( move 4 , ul ; move 0 - 2 , 4 )  | ( move ua - 2 , ul ; move ul + ul , ul )  | ( v0 = ul ; move ua - 2 , v0 ; move 2 , v0 )  
[845] ( move 2 , 4 ; move 2 + ul , 3 )  | ( move 2 , 4 ; move 3 , 2 + ul )  | ( move 2 , 4 ; move 3 , 3 ; pen ua )  | ( move 2 , 4 ; move 3 , 3 ; v0 = ul )  | ( move 2 , ua + 4 ; move 3 , 3 ; pen ua + ul )  | ( move 2 , 4 ; ( v0 = 3 ; move 3 , v0 ) )  | ( move ua / 4 , 4 ; v0 = 3 ; move v0 , 3 )  | ( move 2 , 4 ; move 2 + ul , 2 + ul ; v0 = 4 * 2 )  | ( ( move 2 , 4 ; move 2 + ul , 3 - ua ; pen ua ) ; pen ul )  
[846] ( move 3 , 0 ; move 3 , ul - 4 )  | ( move ul , 3 ; move 3 , ul - 4 )  | ( move 3 , ua ; move 3 , ul - 4 ; pen ul )  | ( move 2 - ul , 4 - ul ; move 3 , ul - 4 )  | ( move 2 + ul , ua ; move 2 + ul , ua - 3 )  | ( move ul , 3 ; ( pen ua ; move 3 , ul - 4 ) )  
[847] ( move 2 , ul ; move 4 , 3 + 2 )  | ( move 2 , ul ; move 4 , 4 + ul ; pen 2 / 3 )  | ( move 2 , ul ; v0 = 4 ; move 4 , ul + v0 )  | ( move 2 , ul ; v0 = 3 + ul ; move v0 , ul + v0 )  
[848] ( move 0 - 4 , ul ; move 3 , 3 )  
[849] ( move ul - 2 , 2 ; move 3 , 3 )  | ( v0 = 3 ; move 2 - v0 , 2 ; move v0 , v0 )  | ( v0 = 3 ; ( move ul - 2 , 2 ; move v0 , 3 ) )  
[850] ( move 3 + 2 , 2 ; move 4 , ul )  | ( move 4 + ul , 2 - ua ; move 4 , ul )  | ( move 4 + ul , 2 - ua ; move 4 , 2 - ul )  | ( move 4 + ul , 2 ; v0 = 4 ; move v0 , ul )  
[851] ( move 4 , ul ; move 0 - 3 , 3 )  | ( move 4 , ul ; move ul - 4 , 3 )  | ( move 4 , ul ; move ul - 4 , 3 ; pen 3 - ua )  
[852] ( move 0 , 3 / 2 ; move ua , 4 )  | ( v0 = ua ; v1 = v0 * ua ; move v0 , ul - v1 )  
[853] ( move 2 , ul ; move 2 , 3 * 2 )  | ( move 2 , 2 - ul ; move 2 , 3 * 2 )  
[854] ( move ua , 2 ; move 3 , 4 + 3 )  | ( move ua , ul + ul ; ( pen ua ; move 0 , 3 ) ; move 3 , 4 )  
[855] ( move 3 , 4 ; move ua , 3 + 2 )  
[856] ( move ul , 0 - 3 ; move 4 , 3 )  | ( move ul , ul - 4 ; move 4 , 3 )  | ( move ul , ul - 4 ; move 4 , ua + 3 )  | ( move ul , ul - 4 ; move 4 , 3 ; v0 = ul )  | ( move ul , ua - 3 ; v0 = 2 ; move v0 + v0 , 3 )  
[857] ( move 3 - ua , 2 ; move 3 , 3 )  
[858] ( move 4 , 4 ; move 0 - ua , 3 )  
[859] ( move 3 , ua ; move 2 - 4 , 2 )  
[860] ( move 4 , ua ; move 4 , 3 + 2 )  | ( move 4 , ua ; move 4 , 4 + ul )  | ( ( move 2 , ua ; move 2 , 0 ) ; move 4 , 4 + ul )  | ( move 4 , ua ; ( move 0 , 3 ; move 4 , ul + ul ) )  
[861] ( move ua - 4 , 4 ; move 2 , 2 )  | ( move ua - 4 , 4 ; move 2 , ua + 2 )  | ( v0 = 4 ; move ua - v0 , 4 ; move 2 , 2 )  
[862] ( move 4 , 0 ; move 4 - ua , 4 )  | ( v0 = 4 ; move v0 , ua ; move v0 - ua , v0 )  
[863] ( move 2 , ul ; move 2 , 3 - 4 )  | ( move 2 , ul ; move 2 , ua - ul )  | ( move 2 , ul ; move 3 - ul , ua - ul )  | ( move 2 , ua / 2 ; move 2 , ul ; pen 3 )  | ( move 2 , ul ; move 2 , ul - 2 ; v0 = ul - 4 )  | ( ( move 2 , ul ; move 4 - 2 , ul - 2 ) ; pen ua )  | ( move 0 , ul ; move 2 , ua ; move 3 - ul , 0 - ul )  | ( move ul + ul , ua + ul ; move ul + ul , ua - ul )  | ( v0 = ul ; move 2 , ul ; move 3 - v0 , ul - 2 )  | ( move ul , ul ; move ul , ua * 3 ; move 3 - ul , 2 - 3 )  
[864] ( move 2 , ul ; move 3 , 2 - 4 )  | ( move ul + ul , ua + ul ; move 3 , 0 - 2 )  | ( move 3 , ua / 3 ; move 0 , ul ; move 2 , ul )  | ( move 3 - ul , ul ; move 4 - ul , ul - 3 ; v0 = 0 )  
[865] ( move 4 + ul , 4 ; move 2 , 2 )  | ( pen ua * 4 ; move 4 + ul , 4 ; move 2 , 2 )  | ( move 4 + ul , 4 ; v0 = 3 - ul ; move v0 , v0 )  
[866] ( move 4 , 3 ; move 3 + ul , 2 )  | ( move 4 , 3 ; pen 4 ; move 4 , 4 / 2 )  | ( ( move 4 , 3 ; pen ul ) ; move 4 , 2 )  | ( ( move 4 , 3 ; pen ua - 2 ) ; move 2 + 2 , 2 )  | ( v0 = 2 ; move 4 , 3 ; move v0 + v0 , v0 )  | ( move 3 + ul , 2 + ul ; move 4 , ul + ul ; pen 2 )  
[867] ( move 2 , ul ; move 2 , 4 + 4 )  
[868] ( move 4 + ul , 2 ; move 4 , 2 )  | ( move ul , 2 ; move 2 * 2 , ua ; move 4 , 2 )  | ( move ul , 2 ; ( move 3 , 0 ; move ul , ua ; move 4 , 2 ) )  
[869] ( move 3 + 2 , 4 ; move ua , 4 )  | ( move 4 , 4 ; ( pen ul ; move ul , ua ; move ua , 4 ) )  
[870] ( move 4 , ua ; move 2 , 3 * 2 )  | ( ( move 4 , 0 ; move 0 , ua + 3 ) ; move 2 , 3 )  
[871] ( move 3 , ua ; move 3 , 4 + 3 )  
[872] ( move 2 , 2 ; move ua - 4 , 4 )  
[873] ( move 3 , ul ; move 2 - 3 , 3 )  | ( move 4 , ul ; move 2 / 3 , 4 )  | ( move 3 , ul ; move 0 - ul , 3 )  | ( move 2 + ul , ul ; move ul - 2 , 3 )  | ( move ul , 4 ; move 3 , ul / ua ; v0 = 0 )  | ( move 4 , ul ; move ul / 2 , 4 + 2 ; pen ul )  | ( move 3 , ul ; v0 = 2 - 3 ; move v0 , 3 )  | ( move 3 , ua + ul ; pen ua ; move ul - 2 , 3 )  
[874] ( move 3 , ua ; move 4 , 4 + 2 )  | ( move 3 , ua ; move 2 * 2 , 4 + 2 )  | ( pen ua ; ( move ul , 0 ; move 2 , ua ; move 4 , 3 * 2 ) )  
[875] ( move 4 , 3 ; move 2 + ul , 3 )  | ( move 4 , 3 ; move ua - 3 , 3 )  | ( move 4 , 3 - ua ; move 3 , 4 - ul )  | ( pen ua + ul ; move 4 , 3 ; move 2 + ul , 3 )  | ( ( pen ul ; move 4 , 3 ; v0 = 3 ) ; move 3 , v0 )  
[876] ( move ul , 0 ; move 4 , 4 * 2 )  | ( move ul , ua ; move 4 , 4 * 2 )  | ( move ul , ua + ua ; ( move 4 , 4 * 2 ; pen ul ) )  
[877] ( move 2 , 3 ; move 2 , 3 / ua )  
[878] ( move 4 , 0 ; move 4 * 2 , ul )  | ( move 4 , ua ; move ua + 2 , ul )  | ( move 3 + ul , 0 ; move ua + 2 , ul )  | ( move 4 , 0 ; move 4 / 2 , ul ; move ua , 0 )  | ( move 4 , 0 ; move ua + 2 , ua + ul ; pen 2 + ul )  | ( move 3 + ul , ua ; ( move ua + 2 , ul ; pen 4 ) )  
[879] ( move 3 , 2 ; move 4 , ua + 4 )  | ( move 4 - ul , 2 ; move 4 , 4 )  | ( move 3 , ul + ul ; move 4 , 4 )  | ( move 2 + ul , 2 ; move 4 , ua + 4 )  | ( move 3 , 2 ; move 4 , 4 ; move ul , 2 )  | ( move 3 , 2 ; pen ul ; move 4 , 4 - ua )  | ( move 3 , 2 ; v0 = 2 ; move 4 , 2 * v0 )  | ( move 3 , ul + ul ; v0 = 4 ; move 2 + 2 , v0 )  | ( ( v0 = 4 ; move v0 - ul , 2 ) ; move v0 , v0 )  
[880] ( move 3 + ul , 2 ; move 3 , 4 )  | ( move 4 , ua + 2 ; move 3 , 4 )  | ( move 3 , 2 ; move ul , 0 ; move 3 , 3 + ul )  | ( move 4 , ul + ul ; pen ua - 4 ; move 3 , 4 )  | ( move 0 , ul ; move 4 , 2 - ul ; move 3 , 3 + ul )  
[881] ( move 3 , ul - 2 ; move 3 , 3 )  | ( move 3 , ul - 2 ; move 3 , 2 + ul )  | ( move 3 , ua - ul ; move 3 , 4 - ul ; move ul , 2 + ul )  
[882] ( move 2 , 2 ; move 3 , ul / 2 )  
[883] ( move 4 , 0 ; move ua / 4 , 2 )  
[884] ( move ul , 0 ; move 4 , 3 - 4 )  | ( move ul , ua ; move 4 , 3 - 4 )  | ( move ul , ua ; move 4 , 0 - ul )  | ( move ul , 0 ; move 4 , ua - ul )  | ( move ul , ua ; move 4 , ua - ul )  | ( move ul , 0 ; move 3 + ul , ua - ul )  | ( pen 4 ; move ul , ua ; move 4 , ul - 2 )  | ( move ul , 0 ; move 4 , ua - ul ; move 0 , 2 )  | ( move ul , 0 ; move 3 , ul - 2 ; move ul , ua )  | ( move ul , 0 ; move 2 + 2 , 0 - ul ; move 0 , 3 )  | ( pen 3 + ul ; move ul , ua * 3 ; move 4 , ua - ul )  | ( pen ua ; ( move ul , 0 ; move 0 , ul - 3 ; move 4 , ul ) )  | ( ( move ul , 0 ; pen 4 ) ; pen ua - ul ; move 4 , 0 - ul )  
[885] ( move 4 , 2 ; move 4 + 2 , ul )  | ( move 4 , ua + 2 ; move 4 + 2 , ul )  | ( move 4 , 2 ; v0 = 3 ; move v0 + v0 , ul )  | ( move 4 , 3 - ul ; move 3 * 2 , ul ; v0 = ul )  
[886] ( move 2 , 3 + 3 ; move 4 , ul )  | ( move 2 , 4 + 2 ; move 4 , ul )  | ( move 2 , 3 * 2 ; pen 3 ; move 4 , ua + ul )  | ( move 2 , 4 + 2 ; v0 = ul ; move 4 * v0 , ul )  
[887] ( move 3 , ul - 2 ; move 4 , 2 )  | ( move 2 + ul , ul - 2 ; move 4 , 2 )  
[888] ( move ua , 3 ; move 2 , 3 / 2 )  | ( move ua , 3 ; move ul + ul , 3 / 2 )  
[889] ( move 2 , 2 - 3 ; move 4 , ul )  | ( move 2 , ua - ul ; move 4 , ul )  | ( move ul + ul , ul - 2 ; move 4 , ul )  
[890] ( move 2 , 2 / 4 ; move ua , 2 )  | ( move 3 - ul , 3 / ua ; move ua , 2 )  | ( move ul + ul , ul / 2 ; move ua , 2 )  
[891] ( move 2 - 4 , ua ; move 2 , 4 )  | ( move ul - 3 , ua * 2 ; move 2 , 4 )  
[892] ( move 2 , 3 ; move 4 - ua , 3 )  | ( ( move 2 , 3 ; move ul - 3 , 4 - ul ) ; pen ul )  | ( move 3 - ul , 3 ; move 4 - ua , 2 + ul ; pen ua )  
[893] ( move 2 , ul ; move 4 , 4 + 2 )  | ( move 2 , ul ; move 3 + ul , 3 * 2 )  | ( move 2 , ul ; move 0 , 3 ; move 3 + ul , 3 )  
[894] ( move ul , 2 ; move 4 , 3 + 3 )  | ( move ul , ul + ul ; move 4 , 3 + 3 )  | ( move ul , 2 ; move 0 , 3 * 2 ; move 4 , ua )  | ( move ul , 2 ; move 4 , 3 * 2 ; v0 = ul )  | ( move 2 - ul , 2 ; move 4 , 3 * 2 ; v0 = 0 )  | ( move ul , 2 ; ( v0 = 4 + ul ; move 4 , ul + v0 ) )  
[895] ( move 4 , 2 - 3 ; move ul , 2 )  | ( move 4 , ua - ul ; move ul , 2 ; pen 0 )  
[896] ( move 2 , ul ; move 4 + 2 , 4 )  
[897] ( move ua , 3 ; move 3 , 4 + 3 )  
[898] ( move 4 + 3 , ua ; move 4 , 2 )  | ( move 3 , ua ; move 3 + ul , ua ; move 2 * 2 , 2 )  
[899] ( move 0 , 3 / 2 ; move 4 , ul )  | ( move 0 , ul ; move 3 + ul , 3 / 2 )  | ( move 0 , ul - 2 ; move 4 , ul / 3 )  
[900] ( move 3 , ul - 3 ; move 3 , 2 )  | ( move 3 , ul - 3 ; move 3 , 2 ; pen ul + ul )  
[901] ( move ul , 0 ; move 3 , 4 * 3 )  
[902] ( move 2 , ul - 4 ; move 2 , 3 )  | ( move ul - 3 , ua ; move 4 - 2 , ul / ua )  
[903] ( move 4 + 3 , ua ; move 3 , 3 )  | ( move ua + ul , ua ; move 3 , 3 )  | ( move ua , ua * 4 ; move ul , 0 ; move 3 , 3 )  | ( v0 = 4 ; move v0 + 3 , 0 ; move 3 , 3 )  | ( move ul , ua ; ( move ua , ua ; move 3 , 3 ) )  | ( ( move ua + ul , ua ; move 3 , 3 ) ; pen ua )  | ( move 0 , ua * 2 ; move ua + ul , 0 ; move 3 , 3 )  | ( move ua + ul , ua ; move 3 , 4 - ul ; pen ua * ua )  
[904] ( move 4 + 3 , 3 ; move ua , 3 )  
[905] ( move ul - 3 , 3 ; move 3 , 2 )  
[906] ( move 4 , ul ; move 3 + 2 , 3 )  
[907] ( move 3 , 3 ; move 2 , ul - 3 )  | ( move 3 , 3 ; v0 = 2 ; move v0 , ua - v0 )  
[908] ( move 3 , ul ; move 3 + 2 , 4 )  | ( move 3 , ul ; move 4 + ul , 4 )  
[909] ( move 4 , 0 ; move ul , 4 * 2 )  | ( move 4 , 0 ; move ul , ua / 4 )  | ( move 4 , ua ; move ul , 4 * 2 )  | ( move 4 , ua ; move ul , ua / 4 )  | ( move 3 + ul , 0 ; move ul , ua / 4 )  | ( ( pen 3 ; move 4 , 0 ) ; move ul , 3 / 2 )  
[910] ( move ua , 3 / 2 ; move 2 , 3 )  
[911] ( move 2 , 4 + 3 ; move ua , 4 )  
[912] ( move 3 , 3 ; move 2 , 4 + ul )  | ( ( move 2 + ul , 4 - ul ; move 0 , 2 ) ; move 2 , 3 )  
[913] ( move 3 , 4 + 2 ; move ua , 4 )  
[914] ( move ua - 3 , 2 ; move 3 , 4 )  
[915] ( move ul , 2 ; move 4 + 4 , 2 )  | ( move ul , ul + ul ; move ua + 2 , 2 )  | ( move ul , 2 ; move ua + 2 , 2 ; move 0 , ul )  
[916] ( move 3 , 4 + 2 ; move 3 , ul )  | ( move 3 , 3 * 2 ; move 3 , ul )  
[917] ( move 2 , 2 ; move 3 , ul - 4 )  | ( pen ua + ul ; move 2 , 2 ; move 3 , ul - 4 )  
[918] ( move 4 , 0 ; move 2 / 3 , ul )  | ( move 4 , 0 ; move 4 / ua , ul )  | ( move 4 , ua + ua ; move 2 / 3 , ua + ul )  | ( pen ua + ul ; move 3 + ul , 0 ; move 4 / ua , ul )  
[919] ( move 2 , 4 ; move 3 + 3 , ul )  
[920] ( move 3 , 2 ; move ul , 3 * 2 )  | ( move 3 , 2 ; move ul , 3 * 2 ; pen 4 - 3 )  
[921] ( move ua , 4 * 2 ; move 3 , 2 )  | ( move ua , 4 + 4 ; move 4 - ul , ul + ul )  | ( move 0 , 4 ; move ua , 4 ; move 3 , ul + ul )  
[922] ( move 3 , 2 ; move 3 * 2 , ul )  | ( move 2 + ul , 2 ; move 3 * 2 , ul - ua )  
[923] ( move 4 * 2 , 0 ; move ul , 4 )  | ( move 4 * 2 , ua ; move ul , 4 ; pen 4 )  | ( pen ua ; move 4 + 4 , ua ; move ul , 4 )  
[924] ( move 4 + ul , 2 ; move 3 , 3 )  
[925] ( move ua , 4 * 3 ; move 2 , 2 )  
[926] ( move 4 + 2 , 2 ; move 4 , ul )  | ( move 3 * 2 , ua + 2 ; move 4 , ul )  
[927] ( move 0 - 3 , ul ; move 4 , 4 )  | ( v0 = 4 ; move ul - v0 , 2 - ul ; move v0 , v0 )  
[928] ( move 3 , 4 ; move 3 , ua - 2 )  | ( move 3 , 4 ; move 3 , ua - 2 ; pen 4 )  
[929] ( move 4 , 2 ; move 3 - ua , 3 )  
[930] ( move 2 , 4 * 3 ; move ua , 2 )  
[931] ( move 3 , 3 ; move ul , 4 + 2 )  | ( move 3 , 3 ; move 0 , 4 + ul ; move ul , ul )  | ( move 2 + ul , 3 ; v0 = 3 ; move ul , 3 + v0 )  
[932] ( move 3 , ul / 2 ; move 2 , 2 )  
[933] ( move 2 , 3 ; move 3 , ua - 4 )  
[934] ( move 3 , 3 ; move ua - 4 , 2 )  
[935] ( move 2 , 2 / 3 ; move ua , 3 )  
[936] ( move 4 , 3 ; move 2 , ul - 2 )  | ( move 4 , 2 + ul ; move 2 , 0 - ul )  
[937] ( move 2 , 2 ; move ua / 3 , 3 )  
[938] ( move 3 , 2 ; move ua , 3 - 4 )  | ( move 3 , 2 ; move ua , 0 - ul )  | ( move 3 , 2 ; move ua , ua - ul )  | ( move 2 + ul , 2 ; move ua , ua - ul )  
[939] ( move 0 , ul ; move 4 , 2 / 3 )  | ( move ul / 4 , 2 / ua ; move 4 , 4 / 3 )  | ( move ul , ua * ua ; ( pen 0 ; pen ua ) ; move 4 , 3 )  
[940] ( move 4 , 4 ; move ua + 3 , 2 )  
[941] ( move ua + 3 , 2 ; move 4 , 4 )  
[942] ( move 3 , 2 ; move ul - 4 , 2 )  | ( move 2 + ul , 2 ; pen ua + ul ; move ul - 4 , 2 )  
[943] ( move 3 , ua ; move 3 , 2 / 3 )  | ( move 2 + ul , 0 ; ( pen ul ; move ua / 2 , 4 / ua ) )  
[944] ( move 4 + 3 , 4 ; move ul , 2 )  | ( move ua + ul , 4 ; move ul , 2 )  | ( move ua + ul , 2 + 2 ; move ul , 2 )  | ( move ua + ul , 4 ; move ul , ua / 3 )  | ( move ua + ul , 4 ; move ul , ul + ul )  | ( move ul , 4 ; move ua , 0 ; move ul , 2 )  | ( move ua , 4 ; move ul , ua ; move ul , 2 )  
[945] ( move 3 , 0 ; move 3 , ul / 4 )  
[946] ( move 3 - ua , 3 ; move 3 , 4 )  | ( move 3 - ua , 3 ; move 3 , 4 ; v0 = 3 + ul )  
[947] ( move 2 , 4 + ul ; move 4 , 3 )  
[948] ( move ul , 2 ; move 3 , 3 / 2 )  | ( move ul , ua + 2 ; move 4 - ul , 3 / 2 )  | ( move ul , ua * ua ; move 2 + ul , 4 + 4 )  | ( move 3 , 2 / ua ; pen 3 ; move 0 - ul , ul )  | ( ( move 0 , 0 ; move 2 + ul , ul / 3 ) ; move ul , 4 )  
[949] ( move 4 , 4 * 2 ; move ua , 2 )  | ( move 4 , 4 * 2 ; move ua , ua + 2 )  | ( move 4 , 4 + 4 ; move ul , 2 ; move ua - ul , ua )  
[950] ( move 2 , ul / 2 ; move 4 , 2 )  | ( move 2 , 3 / ua ; move 4 , 2 ; v0 = ul )  
[951] ( move ul , 4 ; move 3 * 2 , 2 )  | ( move ul , 4 ; move 3 * 2 , ul + ul )  | ( ( move ul , 4 ; v0 = 2 ) ; move 4 + 2 , 2 - ua )  
[952] ( move ua - 3 , 3 ; move 3 , 4 )  
[953] ( move 4 , 4 + ul ; move 2 , 3 )  | ( move 4 , 4 + ul ; pen ua ; move 2 , 3 )  
[954] ( move 2 , 3 ; move 4 + 4 , ul )  
[955] ( move 4 , 4 ; move ua , 4 + 2 )  
[956] ( move 4 + 4 , 3 ; move ua , 3 )  
[957] ( move 4 , 2 ; move ul , 3 * 2 )  | ( move 4 , 2 ; move ul , 4 + 2 ; pen 0 )  
[958] ( move ua , 3 + 3 ; move 4 , 4 )  | ( move ua , 3 * 2 ; move 4 , 4 )  | ( pen ua ; move ua , 3 * 2 ; move 4 , 4 )  
[959] ( move 2 , ul - 2 ; move 4 , 4 )  | ( move 2 , ua - ul ; move 4 - ul , 4 ; move ul , ua )  
[960] ( move 2 / 3 , 4 ; move ua , 2 )  
[961] ( move ua , 3 ; move 2 , 4 * 3 )  
[962] ( move 3 , 2 - 4 ; move 3 , ul )  | ( move 3 , ul - 3 ; move 3 , ul ; v0 = 2 )  | ( move 3 , ua - 2 ; v0 = 3 ; move v0 , ul )  
[963] ( move ul , 3 * 2 ; move 4 , 2 )  
[964] ( move ua , 4 ; move 4 , 4 + 2 )  | ( pen ua ; move ua , 4 ; ( move 0 , 4 - ua ; move 4 , 2 ) )  
[965] ( move 4 , 3 ; move 3 , ua - 3 )  
[966] ( move ua , 3 * 2 ; move 3 , 4 )  | ( move ua , 3 + 3 ; move 3 , 4 ; pen ua )  
[967] ( move 4 , 3 ; move 3 , ul - 2 )  
[968] ( move 2 , 4 ; move 4 + 3 , ul )  | ( move 2 , 4 ; move 4 + 3 , ua + ul )  | ( move 2 , 4 ; move 3 , ul ; move 4 , ua )  
[969] ( move 4 , 3 ; move 2 + ul , 4 )  | ( move 2 * 2 , 3 ; move 2 + ul , 4 )  | ( move 4 , 2 + ul ; move 3 , ua + 4 )  | ( move 4 , 3 ; ( move 3 , 4 ; v0 = ul ) )  | ( pen ua ; move 4 , 3 - ua ; move 3 , ua + 4 )  | ( v0 = 3 ; ( move 4 , v0 ; move v0 , 4 ) )  | ( ( move 4 , ua + 3 ; move 3 , 2 + 2 ) ; pen ua )  
[970] ( move 4 , ul - 2 ; move 3 , 3 )  | ( move 0 - 3 , ua + 2 ; move 4 , ul / ua )  | ( move 3 + ul , ul - 2 ; move 3 , 3 ; pen ul )  | ( pen ul ; ( move 4 , ua - ul ; pen ua * ua ) ; move 3 , 3 )  
[971] ( move ua , 4 ; move 2 , 2 / 3 )  | ( move ua , 4 ; move ul - 3 , 4 )  
[972] ( move 2 , 4 + ul ; move 3 , 4 )  | ( pen ul ; move 2 , 4 + ul ; move 3 , 3 + ul )  
[973] ( move 2 , 4 ; move ua , 3 * 3 )  
[974] ( move 4 , 0 ; move 3 , ul / 3 )  
[975] ( move ul , 3 ; move 4 , 4 + 2 )  | ( move ul , 3 ; move 4 , 3 * 2 )  | ( move ul , 4 - ul ; move 4 , 4 + 2 )  | ( move ul , 3 ; move 0 , 2 ; move 4 , 4 )  | ( move ul , 3 ; v0 = 4 ; move v0 , 3 * 2 )  | ( move ul , 3 ; v0 = 4 ; move v0 , v0 + 2 )  | ( move ul , 2 + ul ; pen 4 + ul ; move 4 , 4 + 2 )  | ( move ul , 3 ; move 0 , 3 - ua ; ( move 4 , 3 ; pen 3 ) )  
[976] ( move 4 , 3 ; move 2 , 4 + ul )  
[977] ( move 4 , ua ; move 3 , 2 - 4 )  | ( move 4 , ua ; move 3 , ul - 3 )  
[978] ( move ua , 4 ; move 2 , 4 * 2 )  | ( move ua , 4 ; move 3 - ul , 4 * 2 )  
[979] ( move 3 , 4 + ul ; move 3 , 3 )  | ( move 2 + ul , 4 + ul ; ( move 3 , 3 ; move 0 , ul ) )  
[980] ( move 2 , 4 ; move ua , 3 - 4 )  | ( move 2 , 4 ; move ua , ua - ul )  | ( move 2 , ua + 4 ; move ua , 0 - ul )  | ( move 2 , 4 - ua ; move ua , ua - ul )  | ( move 2 , 4 ; move ua , ua - ul ; pen 0 )  | ( move 2 , 4 ; pen 4 ; move ua , ua - ul )  | ( move 2 , ua + 4 ; move ua , ua - ul ; v0 = 0 )  
[981] ( move 3 , ul ; move 4 + 3 , 3 )  | ( move 3 , ul ; move 4 + 3 , 2 + ul )  | ( move 3 , ul ; move 4 + 3 , ua + 3 )  | ( v0 = 4 ; move v0 , ul ; move v0 + 3 , 2 + ul )  
[982] ( move 4 , ua / 3 ; move 2 , 2 )  
[983] ( move 0 , 3 / 4 ; move ua , 4 )  | ( move 0 , 3 ; move ua , ua * ua )  | ( move 0 , ua * ua ; move ua , 3 )  | ( move ul , ua * ua ; move ua , 3 )  
[984] ( move 4 , 2 / 3 ; move ua , 2 )  
[985] ( move 4 , 0 ; move 4 , 3 / ua )  | ( move 4 , ua ; move 4 , ul / 2 )  
[986] ( move 2 , 4 ; move ua , 4 + 4 )  
[987] ( move 3 , 3 ; move ua , 3 / 2 )  
[988] ( move 2 , 4 ; move 2 , 3 / ua )  
[989] ( move 2 , 3 / 4 ; move ua , 2 )  
[990] ( move 3 , 2 ; move 2 , ul / 3 )  | ( move 3 , ua + 2 ; move 2 , ul / 3 )  | ( move 3 , 2 ; move 2 , ul / 3 ; v0 = ua )  
[991] ( move 3 , 3 * 2 ; move ul , 3 )  | ( move 0 , 4 + ul ; move 3 , ua + ul ; move ul , 3 )  
[992] ( move 4 + 4 , ua ; move 4 , 2 )  
[993] ( move 3 , ua ; move 4 , 4 + 3 )  | ( move 3 , ua * 4 ; move 4 , 4 + 3 )  | ( ( move 3 , 0 ; move 4 , 4 + 3 ) ; v0 = ul )  
[994] ( move ul - 3 , 2 ; move 4 , 3 )  | ( move 2 - 4 , 2 ; move 4 , 3 ; move 0 , ua - ul )  
[995] ( move 3 + 2 , 4 ; move 4 , ul )  | ( ( move 4 + ul , 4 ; move 0 , ua ) ; move 4 , ua + ul )  
[996] ( move 4 , 0 ; move 3 , ua / 4 )  
[997] ( move 4 , 2 ; move 4 + ul , 3 )  
[998] ( move 3 , ul ; move 2 - 3 , 4 )  | ( move ua - 3 , ul ; move ul , ul )  | ( move 2 + ul , ul ; move 0 - ul , 4 )  | ( move ua - 3 , ua + ul ; move ul , ul )  | ( move ul / 2 , ul ; move 3 , 0 ; move ul , ul )  | ( move 3 , ul ; move ul / 2 , ua ; move ul , ul )  | ( ( move ua - 3 , ul ; move ul , ul ) ; move 0 , 0 )  
[999] ( move 3 , ul ; move 3 - 4 , 2 )  
[1000] ( move ua , 3 ; move 4 + 3 , 4 )  | ( move ua , ua + 3 ; move 4 + 3 , 3 + ul )  
[1001] ( move 3 , 3 ; move 2 , ul / 2 )  | ( move 2 + ul , 3 ; move 2 , ul / 2 )  
[1002] ( move 2 , ul / 3 ; move 3 , 2 )  
[1003] ( move 4 - ua , 4 ; move 2 , 3 )  | ( move ul - 3 , 3 + ul ; pen 2 ; move ul + ul , 2 + ul )  
[1004] ( move 2 , 2 ; move ul - 4 , 4 )  
[1005] ( move 3 , 2 ; move 4 , 4 + ul )  
[1006] ( move 3 , ua ; move 2 , 4 * 3 )  
[1007] ( move 3 , ul ; move 4 + 4 , 2 )  | ( move 3 , ul ; move 4 * 2 , 2 )  | ( move 3 , ul ; move 4 * 2 , ul + ul )  
[1008] ( move ul , 3 ; move 4 * 2 , 2 )  | ( move 2 , 3 ; move 4 * 2 , 3 - ul )  
[1009] ( move 4 + 2 , ua ; move 4 , 4 )  | ( move 4 , 0 ; move 2 , ua ; move 4 , 4 )  
[1010] ( move ua , 3 / 2 ; move 4 , 2 )  
[1011] ( move 4 + 3 , ul ; move 3 , 3 )  | ( move ua + ul , ul ; move 4 , 2 + ul )  | ( move ua , ul ; move ul , ua ; move 4 , 3 )  | ( move ua + ul , ul ; pen ul ; move 4 , 3 )  | ( ( move 0 , 0 ; move 4 + 3 , ul ) ; move 4 , 3 )  | ( move ua , ul ; ( move ul , ua ; move 2 + 2 , 3 ) )  | ( pen ul / 2 ; ( move 3 , ul ; move 4 , ua ; move 3 , 3 ) )  
[1012] ( move 4 , 2 ; move 3 , 2 / ua )  
[1013] ( move 3 , 4 ; move 3 , ua - 3 )  
[1014] ( move 4 , ua ; move 2 / 3 , 2 )  | ( move 4 , ua ; move 2 / 3 , 2 ; pen 0 )  | ( move 4 , ua ; ( move 4 / ua , 2 ; v0 = 0 ) )  | ( v0 = 2 + ul ; move 4 , ua ; move 2 / v0 , 2 )  
[1015] ( move 3 , 2 ; move ul - 4 , 4 )  | ( move 3 , 2 ; move 0 - 3 , 4 ; pen ul )  
[1016] ( move 3 , 3 ; move ua , 4 * 3 )  
[1017] ( move 2 - 4 , 4 ; move ua , 4 )  | ( move ul - 3 , 4 ; move ua , 4 ; pen ua )  
[1018] ( move 4 , 3 / ua ; move 2 , 3 )  | ( move 4 , 3 / ua ; move ul + ul , ua + 3 ; pen ul )  
[1019] ( move 4 , 3 * 2 ; move 3 , ul )  
[1020] ( move ul , 4 ; move 4 , 3 + 3 )  | ( move ul , 4 ; move 4 , 3 * 2 )  | ( move ul , 4 ; move 4 , 3 * 2 ; move 0 , 0 )  | ( move ul , 4 ; v0 = 3 * 2 ; move v0 - 2 , v0 )  
[1021] ( move 3 , ul ; move 3 , 4 + 4 )  
[1022] ( move 4 , 2 ; move 3 / 2 , ul )  | ( ( move 4 , 2 ; move ua / 4 , ul ) ; pen 3 - ua )  
[1023] ( move 4 , ua ; move 4 , 4 + 3 )  | ( ( move 4 , ua ; move 3 + ul , 3 / 4 ) ; v0 = ul )  
[1024] ( move 4 , ul ; move 4 , 4 + 2 )  | ( move 4 , ul ; move 4 , 3 * 2 )  
[1025] ( move ul , 3 ; move 4 , 4 + 3 )  | ( move ul , 3 ; move 4 , 3 / 4 ; v0 = 0 )  | ( ( move ul , 3 ; v0 = 4 ) ; move 4 , v0 + 3 )  
[1026] ( move 3 / 2 , ul ; move 4 , 2 )  | ( move 3 / 2 , ul ; move 4 , 3 - ul )  
[1027] ( move 4 , ul ; move 3 * 3 , 2 )  
[1028] ( move ul , 2 ; move 3 , 2 / 4 )  | ( move ul , ua + 2 ; move 3 , ul / 2 )  
[1029] ( move 4 , 0 ; move ua / 4 , 4 )  | ( move 4 , ua ; move ua / 4 , 4 )  | ( move 4 , 0 ; move ua / 4 , 4 ; v0 = ul - ua )  
[1030] ( move 4 , 2 ; move 4 , ul - 3 )  | ( move 2 * 2 , ua / 2 ; move 4 , 2 )  
[1031] ( move ul - 4 , 3 ; move 3 , 3 )  
[1032] ( move 4 , 2 ; move 3 , ul - 4 )  | ( move 3 + ul , 2 ; move 3 , 0 - 3 )  | ( move 3 + ul , 2 ; move 3 , ua - 3 )  
[1033] ( move 4 , ua + 4 ; move 4 , 3 )  | ( move 4 , 4 ; pen 4 ; move 4 , 3 - ua )  | ( move 4 , 3 + ul ; move 4 , 3 ; pen ul + ul )  | ( move 4 , 4 ; v0 = 4 ; move v0 , v0 - ul )  
[1034] ( move 2 , ul ; move 4 , 4 * 2 )  | ( move 2 , ul ; move 3 , 4 * 2 ; move ul , ua * 2 )  
[1035] ( move ua , 4 ; move 3 * 2 , 4 )  
[1036] ( move 4 , 2 ; move ul / 3 , 2 )  | ( move 3 + ul , 2 ; move 2 / ua , 2 )  | ( move 3 + ul , 2 ; move ul / 3 , 2 )  | ( v0 = ul ; move 4 , v0 + ul ; move v0 / 4 , v0 )  
[1037] ( move 3 , ul / 2 ; move 2 , 4 )  
[1038] ( move 3 , ul ; move 3 , 3 * 3 )  | ( pen ua ; ( move 3 , ul ; move 3 , 3 * 3 ) )  | ( v0 = 3 ; ( move 3 , ul ; move v0 , v0 * v0 ) )  | ( v0 = 2 + ul ; move v0 , ul ; move v0 , 3 * v0 )  
[1039] ( move 4 , 3 / 2 ; move ul , 2 )  
[1040] ( move 2 , 3 ; move 4 , 3 / ua )  
[1041] ( move 4 , 3 + 3 ; move 4 , ul )  
[1042] ( move 3 , ul ; move 2 , 2 / 4 )  | ( move 3 , ul ; move 2 , 3 / ua ; ( pen ul ; move 0 , 3 ) )  
[1043] ( move 3 , ua / 4 ; move 3 , 2 )  
[1044] ( move 2 , 4 ; move 4 , 2 / ua )  | ( v0 = 2 ; move v0 , 4 - ua ; move 4 , ul / 3 )  
[1045] ( move ul - 3 , 4 ; move 3 , 3 )  | ( move 0 - 2 , 4 - ua ; move 3 , 3 )  
[1046] ( move 2 , ul - 3 ; move 4 , 4 )  | ( move 2 , ul - 3 ; v0 = 3 + ul ; move v0 , v0 )  
[1047] ( move 2 , 4 * 2 ; move 4 , ul )  
[1048] ( move 3 , 4 - ul ; move 2 , 4 )  | ( pen 2 ; move 3 , 3 ; move 2 , 4 )  | ( move 2 + ul , 3 ; move ul + ul , 4 )  | ( move 3 , 3 ; move 2 , 4 ; v0 = 4 )  | ( move 3 , 3 ; move 2 , 4 ; v0 = ul - 2 )  | ( move 3 , 3 ; ( move 2 , 3 + ul ; pen 2 ) )  | ( ( pen ul ; move 3 , 3 ) ; move 2 , 2 * 2 )  | ( move 3 , 3 ; move ul + ul , 2 + 2 ; v0 = 0 )  | ( pen ua ; move 2 + ul , 3 ; ( pen 3 ; move 2 , 3 + ul ) )  
[1049] ( move 3 * 2 , ul ; move 3 , 4 )  | ( move 3 , ul ; move 3 , ua ; move 3 , 4 )  
[1050] ( move 4 , 3 + ul ; move 3 , 4 )  | ( pen ul ; move 4 , 3 + ul ; move 3 , 4 )  | ( v0 = 4 ; move v0 , 4 ; move 3 , 4 )  | ( v0 = 4 ; move v0 , 4 ; move 3 , v0 )  | ( move 4 , 4 ; ( move 3 , 4 ; pen 0 ; pen ua ) )  | ( move 4 , 4 ; ( move 3 , ua + 4 ; v0 = 0 ) )  | ( ( move ul , 3 + ul ; move 3 , 0 ) ; move 3 , 4 )  | ( ( move 4 , 4 ; pen 4 ) ; v0 = 3 ; move v0 , 4 )  | ( v0 = 4 ; ( move 4 , v0 ; pen ul ) ; move 3 , v0 )  
[1051] ( move 4 , 0 ; move ul , 4 * 4 )  | ( move ua - 2 , ua + ua ; move ul , 4 * 4 ; v0 = ua )  
[1052] ( move 3 , 3 ; move ul , 3 / 2 )  | ( v0 = 2 ; move 3 , v0 + ul ; move ul , 3 / v0 )  
[1053] ( move 4 , ul ; move 4 , 2 - 3 )  | ( move 4 , ul ; move 4 , ua - ul )  | ( move 4 , ua + ul ; move 4 , 0 - ul )  | ( pen ua ; move 4 , ul ; move 4 , 0 - ul )  | ( move 3 + ul , ul ; pen ul ; move 4 , ua - ul )  
[1054] ( move 2 , 4 ; move ul - 4 , 3 )  
[1055] ( move 3 , 4 + ul ; move 3 , 4 )  | ( move 3 , 4 + ul ; move 3 , 2 * 2 )  | ( pen ua + ul ; move 3 , 4 + ul ; move 4 - ul , 4 )  
[1056] ( move ul , 4 * 2 ; move 4 , 2 )  | ( move ul , 4 * 2 ; move 4 , 3 - ul )  | ( v0 = ul ; move v0 , 4 * 2 ; move 4 , 2 )  
[1057] ( move 4 , 4 + ul ; move 3 , 3 )  
[1058] ( move 4 , ul ; move 3 - 4 , 3 )  | ( move 4 , ul ; move 0 - ul , 3 )  | ( move ul , 4 ; move 4 , ul / ua ; pen 3 )  | ( ( move ul , 4 ; move 4 , ul / ua ; pen 0 ) ; pen 4 )  
[1059] ( move ul , 4 ; move 4 , 4 + 3 )  | ( move ul , 4 ; ( move 0 , 2 ; move 4 , 4 + ul ) )  
[1060] ( move 2 , 2 ; move 4 , ul / 4 )  
[1061] ( move 4 , ua ; move 2 / 3 , 4 )  | ( move 4 , ua ; move 4 / ua , 4 ; move 0 , ua / 4 )  
[1062] ( move 4 , ul / 4 ; move 2 , 2 )  | ( ( pen 4 * 2 ; move 4 , ul / 4 ) ; move 2 , 2 )  
[1063] ( move 4 , 4 ; move ul - 4 , 2 )  
[1064] ( move 3 , ul / 4 ; move 2 , 3 )  
[1065] ( move 4 , 4 ; move ua , 3 / 2 )  
[1066] ( move 3 , ul / 2 ; move 4 , 3 )  
[1067] ( move 3 , 4 ; move ul , 3 * 3 )  
[1068] ( move 4 * 2 , ul ; move 3 , 4 )  
[1069] ( move 4 , 3 ; move 2 , ua / 4 )  
[1070] ( move ul , 3 * 2 ; move 4 , 4 )  
[1071] ( move 4 , 4 * 2 ; move 3 , ul )  
[1072] ( move 4 , 2 ; move ua , 4 / 3 )  | ( v0 = ua ; ( move 4 , 2 ; move v0 , 4 / 3 ) )  
[1073] ( move 4 , 2 - 4 ; move 4 , ul )  | ( move 4 , ul - 3 ; move 4 , ul )  | ( move 3 + ul , 2 - 4 ; move 4 , ul )  | ( move 4 , ua - 2 ; move 3 + ul , ul )  | ( pen 4 ; move 4 , 0 - 2 ; move 4 , ul )  
[1074] ( move 3 , 2 ; move 4 , ua / 4 )  | ( move 3 , ul + ul ; move 4 , ua / 4 )  
[1075] ( move ul , 2 ; move 4 , 4 * 3 )  | ( v0 = 0 - 4 ; ( move ul , v0 ; move v0 , v0 ) )  
[1076] ( move 3 , 4 * 3 ; move 3 , ul )  
[1077] ( move ua , 4 ; move 3 , 4 * 3 )  
[1078] ( move ul , 4 * 3 ; move 3 , 3 )  
[1079] ( move 4 , ua ; move 4 / 3 , 2 )  
[1080] ( move 4 , ul ; move 3 , 4 * 2 )  | ( move 4 , ul ; move 3 , 4 + 4 )  
[1081] ( move 2 , ua / 3 ; move 4 , 4 )  
[1082] ( move ul , 3 / 2 ; move 3 , 4 )  | ( move ul , ua / 4 ; move 3 , 4 ; pen 0 )  
[1083] ( move 4 , 4 ; move 4 + ul , 3 )  
[1084] ( move 4 , 4 + ul ; move 3 , 4 )  
[1085] ( move 4 * 2 , ua ; move 4 , 4 )  | ( move 4 , 0 ; move 4 , ua ; move 4 , 4 )  | ( v0 = 4 ; move v0 + v0 , 0 ; move v0 , v0 )  | ( v0 = 4 ; move v0 + v0 , ua ; move v0 , v0 )  
[1086] ( move 4 , 3 ; move 4 , 4 + ul )  
[1087] ( move 4 , 3 / 2 ; move ua , 4 )  
[1088] ( move 4 , ul - 4 ; move 4 , 2 )  | ( move 4 , ua - 3 ; move 4 , 2 ; v0 = 0 )  | ( move 4 , ul - 4 ; move 0 , 3 - ul ; move 4 , ua )  
[1089] ( move 3 , 3 ; move 4 , ul - 4 )  | ( move 3 + ul , ua / 2 ; move 2 + ul , 3 )  
[1090] ( move 4 , 3 ; move ul , 4 + 4 )  | ( move 4 , 3 ; move ul , ua / 4 )  | ( ( move 4 , 3 ; move ul , ua * ua ) ; pen ua )  | ( ( move 4 , 2 + ul ; pen 3 ; move 0 , 4 ) ; move ul , 4 )  
[1091] ( move ul , 4 * 2 ; move 4 , 4 )  | ( pen ul ; move ul , ua / 4 ; move 0 - 4 , 4 - 3 )  | ( v0 = 4 ; move ul , v0 + v0 ; move v0 , v0 )  
[1092] ( move 4 , 3 ; move 4 , 3 / ua )  | ( ( move 2 , ua ; move 4 , 3 ) ; pen ua ; move 4 , 3 / ua )  
[1093] ( move 4 , 3 - 4 ; move 4 , ul )  | ( move 3 + ul , ul - 2 ; move 4 , ul )  | ( move 0 , 0 ; move 4 , 3 - 4 ; move 3 + ul , ul )  | ( move 4 , ua - ul ; ( move 4 , ul ; v0 = 0 ) )  
[1094] ( move 3 , ul / 4 ; move 4 , 2 )  
[1095] ( move ul - 4 , 4 ; move 3 , 4 )  
[1096] ( move 4 , ul ; move 4 * 2 , 4 )  | ( move 4 , ul ; move 0 , 3 ; move 4 + 4 , ul )  
[1097] ( move 3 , ua ; move 4 / 3 , 4 )  
[1098] ( move 4 , 4 * 2 ; move 4 , ul )  | ( move 4 , 4 + 4 ; move 4 , ul - ua )  | ( v0 = 4 ; move v0 , v0 + v0 ; move v0 , ul )  
[1099] ( move ua , 2 / 4 ; move 4 , 4 )  | ( move ua , 3 / ua ; move 4 , 4 ; pen 2 )  | ( move ua , ul / 2 ; v0 = 4 ; move v0 , v0 )  
[1100] ( move ul , 4 ; move 4 * 2 , 4 )  | ( v0 = 4 ; move ul , v0 ; move v0 + v0 , v0 )  | ( move ul , 4 ; v0 = 4 ; move 2 * v0 , v0 - ua )  
[1101] ( move 3 , 4 / 3 ; move ul , 3 )  
[1102] ( move 4 , ua ; move 3 , 4 / 3 )  | ( move 4 , 0 ; move 3 , 4 / 3 ; pen ua * 2 )  
[1103] ( move 3 , 4 * 4 ; move ua , 4 )  
[1104] ( move 4 , 3 ; move 4 / 3 , ul )  
[1105] ( move 3 , 4 ; move 4 , ul / 3 )  | ( move 4 - ul , ua + 4 ; ( pen ul ; move 4 , ul / 3 ) )  
[1106] ( move ul - 4 , 4 ; move 4 , 4 )  
[1107] ( move ul , 4 ; move 4 , 4 * 3 )  
[1108] ( move 4 , 4 / 3 ; move 3 , ul )  
[1109] ( move 4 , 4 * 4 ; move ua , 4 )  
[1110] ( move 4 , 4 ; move ua , 4 * 4 )  | ( v0 = 4 ; move v0 , v0 ; move ua , v0 * v0 )  
[1111] ( move ul , 4 * 3 ; move 4 , 4 )  
[1112] ( move 4 , ul / 3 ; move 3 , 4 )  
[1113] ( move 3 , ul ; move 4 , 4 * 4 )  | ( move 3 , ul - ua ; move 3 + ul , 4 * 4 )  
[1114] ( move 4 , 3 / ua ; move 4 , 4 )  | ( move 4 , 3 / ua ; move 3 + ul , 4 ; v0 = ul )  
[1115] ( move 4 , ul - 4 ; move 4 , 4 )  | ( v0 = 4 ; move v0 , ul - v0 ; move v0 , v0 )  
[1116] ( move 3 , 4 / 3 ; move 4 , ul )  
[1117] ( move ua , 3 / 4 ; move 4 , 4 )  
[1118] ( move 4 , ua ; move 4 / 3 , 4 )  
[1119] ( move ul , 4 ; move 3 , 3 / 4 )  
[1120] ( move 4 , ua / 4 ; move 4 , 3 )  | ( pen ul ; move 4 , ua / 4 ; move 4 , 3 )  
[1121] ( move ul / 3 , 4 ; move 4 , 4 )  
[1122] ( move ua , ua ; move 0 - 2 , 0 )  | ( move ua , 0 ; move 3 - ua , 0 )  | ( move 2 , 0 ; move ua , ua / 2 )  | ( move 3 , 0 ; move ua , ua / 2 )  | ( move ua , 0 ; move 0 - ul , ua )  | ( move ua , 0 ; move ul - 3 , ua )  | ( move ul , 0 ; move ua , ua / 2 )  | ( move ul , ua ; move 0 - ua , ua )  | ( move ua , ua ; move 3 - ua , ua )  | ( move ua , ua ; move ul - 3 , ua )  | ( move ua , 0 - ua ; move ul - 2 , 0 )  | ( move ua , 0 ; move 3 - ul , ua / 2 )  | ( move ua , ua + ua ; move ul - 4 , 0 )  | ( move ua , ua * 2 ; move 4 - ua , ua )  | ( move ua , ua ; move ul - 3 , 0 ; pen ua )  | ( move ua , 0 ; move ul - 4 , ua ; move 0 , 2 )  | ( move 3 , ua ; move 0 - ua , ua ; v0 = 0 )  | ( move ua , ua ; move ul - 4 , 0 ; v0 = 4 )  | ( move ua , ua ; move ul , 3 ; move ul , 4 - ul )  | ( v0 = ul - 4 ; move ua , 0 ; move v0 , 0 )  | ( move 2 , 0 ; v0 = ua / 2 ; move ua , v0 )  | ( move ua , ua ; pen ul ; move ul - 2 , ua + ua )  | ( move ua , 0 ; move 0 - 2 , ua * 4 ; v0 = 4 )  | ( v0 = ua / 2 ; move ua , ua ; move v0 , v0 )  | ( move ul , ua ; move ua - ul , ua ; move 2 - 4 , 0 )  
[1123] ( move ua + 2 , 0 ; move ua , 2 )  | ( move ua + 2 , ua ; move ua , ua + 2 )  | ( move ua , 0 ; ( move 2 , 0 ; move ua , 2 ) )  | ( move ua + 2 , 0 ; v0 = 3 ; move ua , 2 )  | ( pen ul ; move ua + 2 , ua ; move ua , ua + 2 )  | ( move ua + ul , 0 ; move ul , ua ; move ua , ua + 2 )  
[1124] ( move ua + ul , 0 ; move 2 , 2 )  | ( move ua + ul , ua ; move 2 , 2 )  | ( pen 3 ; move ua + ul , ua ; move 2 , 2 )  | ( move ua , ua ; ( move ul , ua ; move 2 , 2 ) )  | ( move ul , ua ; move ua , ua ; move 2 , ul + ul )  | ( move ua + ul , 0 ; v0 = 2 ; move v0 , v0 )  | ( ( move ua , ua ; move ul , 0 ; move 2 , 2 ) ; v0 = 0 )  
[1125] ( move ua + 2 , 0 ; move ul , 2 )  | ( move ua + 2 , ua ; move ul , 2 )  | ( move ua + 2 , ua * 4 ; move ul , 2 )  | ( pen ua ; move ua + 2 , 0 ; move ul , 2 )  | ( move ua , ua ; move 2 , ua ; move ul , 2 )  | ( v0 = ua ; move ua + 2 , v0 ; move ul , 2 )  | ( v0 = ua + 2 ; move v0 , 0 ; move ul , v0 )  
[1126] ( move ua , 0 ; move ua - 2 , 2 )  | ( move ua , ua ; move ua - 2 , 2 )  
[1127] ( move ua , 0 ; move ua + 2 , 3 )  | ( move ua , ua + ua ; move ua + 2 , 3 )  | ( pen ul ; move ua , 0 ; move ua + 2 , 3 )  | ( pen ua ; move ua , ua ; move ua + 2 , 3 )  | ( move 4 + ul , ua * 2 ; move ua + 2 , 3 )  | ( move ua , ua * 2 ; move 4 * 2 , 3 ; move 0 - ua , 0 )  | ( ( move ua , ua ; pen ua ) ; move 0 , ul ; move ua + 2 , 2 )  
[1128] ( move ua , 0 ; move 0 - 3 , ul )  | ( move ua , ua ; move ul - 4 , ul )  | ( pen ul ; move ua , ua ; move ul - 4 , ul )  | ( move ua , ua ; pen ul + ul ; move ul - 4 , ul )  | ( move ua , 0 ; v0 = ul ; move v0 - 4 , v0 )  | ( ( pen 3 * 2 ; move ua , ua ) ; move ul - 4 , ul )  | ( pen 4 ; ( move ua , 0 ; move ul - 4 , ul ) ; pen ul )  
[1129] ( move 2 , 0 ; move ua , ua - 2 )  | ( move 3 - ul , ua ; move ua , 0 - 2 )  | ( move ul + ul , 0 ; move ua , 2 - 4 )  | ( move ua / 4 , 0 ; move ua , ua - 2 )  | ( move ul + ul , 0 ; move ua , ul - 3 )  | ( move ul , 0 ; move ul , ua * 2 ; move ua , ua - 2 )  
[1130] ( move 2 , 0 ; move ua + 2 , ul )  | ( move 2 , ua ; move 4 * 2 , ul )  | ( move 2 , ua ; move ua + 2 , ul )  | ( move 2 , 0 ; v0 = ua ; move v0 + 2 , v0 / ua )  | ( ( move 2 , 0 ; move ua , ul ; move 2 , 0 ) ; v0 = 0 )  
[1131] ( move ua , 0 ; move ul , 0 - 3 )  | ( move ua , ua ; move ul , ua - 3 )  | ( move ua , ua ; move ul , ul - 4 )  | ( move ua , ua ; move 2 - ul , ul - 4 )  | ( pen 2 ; move ua , ua ; move ul , 0 - 3 )  | ( move ua , ua ; pen 2 ; move ul , ua - 3 )  | ( pen ul ; ( move ua , 0 ; move ul , 0 - 3 ) )  | ( move ua , 0 - ua ; move ul , ua - 3 ; move 0 , 2 )  | ( ( move ua , 0 ; move ul , ua - 3 ) ; pen 2 + ul )  | ( move ua , ua ; ( move ul , ua - 3 ; v0 = ul ) )  | ( move ua , ua ; v0 = ul - 4 ; move ul , ua + v0 )  | ( move 0 , ua + ul ; move ua , 3 - 4 ; move ul , ul - 4 )  
[1132] ( move 0 - 3 , 0 ; move ua , ul )  | ( move 0 - 3 , ua ; move ua , ul )  | ( move ul - 4 , 0 ; move ua , ul )  | ( move 3 - ua , ua ; move ua , ul )  | ( move ul - 4 , ua ; move ua , ul )  | ( move ul - 4 , ua ; move ua , ua + ul )  | ( move ul - 4 , 0 ; pen ul ; move ua , ul )  | ( move 3 - ua , ua ; pen 3 ; move ua , ul )  | ( move ul - 4 , 0 ; v0 = ul ; move ua , v0 )  | ( move 3 - ua , ua ; v0 = ua ; move v0 , ul )  | ( move ul - 4 , ua ; ( v0 = ul ; move ua , v0 ) )  | ( move 3 - ua , 0 ; v0 = ul ; move v0 * ua , v0 )  
[1133] ( move ua , 0 ; move ua , 0 - 4 )  | ( move ua , 0 ; move ua , ua - 4 )  | ( ( move ua , ua ; pen ua ) ; move ua , 0 - 4 )  | ( move 0 , ua ; move ua , ua ; move ua , ua - 4 )  | ( move ua , ua ; move ua , ua - 4 ; v0 = ul )  
[1134] ( move ua , 0 ; move ua + 3 , 2 )  | ( move ua , ua ; move ua + 3 , 2 )  | ( move ua , ua ; move ua + 3 , ua + 2 )  | ( move ua , ua ; move ua + 3 , ul + ul ; pen ua + 3 )  
[1135] ( move ua , 0 - 2 ; move ua , 2 )  | ( move ua , ua - 2 ; move ua , 2 )  | ( move ua , ua / 2 ; move ua , 0 - 2 )  | ( move ua , ul - 3 ; move ua , 3 - ul )  | ( ( v0 = ua ; move v0 , v0 - 2 ) ; move ua , 2 )  
[1136] ( move ul , 0 ; move 2 - ua , 2 )  | ( move ul , ua ; move 2 - ua , 2 )  | ( move ua - 2 , 2 ; move ul , ul )  | ( move ul , ua ; move 2 - ua , 2 ; pen 2 )  | ( move ul , 0 ; v0 = 2 - ua ; move v0 , v0 )  | ( ( move ul , 0 ; pen 3 ) ; move 2 - ua , ua + 2 )  | ( move ul , ua ; ( move 2 - ua , 4 - 2 ; move ul , ua ) )  
[1137] ( move ua , 2 ; move ul , 0 - 2 )  | ( move ua , 2 ; move 2 - 3 , ul )  | ( move ul , ua / 2 ; move ua , 2 )  | ( pen ul ; move ua , 2 ; move ul , ul - 3 )  | ( move ua , 2 ; move ul - 2 , 2 - ul ; pen ua )  | ( pen 3 ; move ua , ul + ul ; move 0 - ul , ul )  | ( move ua , 2 ; move 0 - ul , ua + ul ; v0 = ua )  
[1138] ( move ul , 0 - 2 ; move ua , 2 )  | ( move ul , 2 - 4 ; move ua , 2 )  | ( move ul , ul - 3 ; move ua , 2 )  | ( move 0 - ua , ua ; move ul , ul )  | ( ( move ul , ua - 2 ; pen 3 ) ; move ua , ul + ul )  
[1139] ( move 2 , 0 ; move 2 - ua , ul )  | ( move ua - 4 , ua * 4 ; move 2 - ua , ul )  | ( move 2 , 0 ; move 2 - ua , ul ; v0 = ul )  | ( move ul + ul , ua * 3 ; move 2 - ua , ua + ul )  | ( v0 = 2 ; move v0 , ua ; move v0 - ua , ul )  
[1140] ( move ua + 2 , 0 ; move ul , 3 )  | ( move 4 * 2 , ua ; move ul , 3 )  | ( move 4 * 2 , 0 ; move ul , ua + 3 )  | ( move 4 + 4 , ua * 3 ; move ul , 3 )  | ( move 4 + 4 , ua ; move ul / 4 , 3 * 3 )  
[1141] ( move ua - 3 , 0 ; move ua , 2 )  | ( move 3 , 0 ; ( move ua , 3 - ul ; move ul , ua + 2 ) )  
[1142] ( move ua , 0 ; move 3 + 2 , ul )  | ( move ua , ua ; move 3 + 2 , ul )  | ( move ua , ua ; move 4 + ul , ul )  | ( move ua , 0 ; move 4 + ul , 3 - 2 )  | ( move ua , ua * 4 ; move 3 + 2 , ul )  | ( move ua , ua + ua ; move 4 + ul , ul )  | ( move ua , ua ; move 4 + ul , ua + ul )  | ( move ua , 0 ; move 4 , ul ; move ul , 0 )  | ( move ua , ua ; move 4 , ul ; move ul , 0 )  | ( move ua , 0 ; pen ua ; move 4 + ul , ul )  | ( move ua , ua * 3 ; move 4 + ul , 2 - ul )  | ( move ua , 0 ; move 4 + ul , ul ; v0 = 0 )  | ( move ua , ua ; ( pen 4 ; move 3 + 2 , ul ) )  | ( move ua , 0 ; move ul , ua + ul ; move 4 , 0 )  | ( move ua , ua ; move 3 + 2 , ul ; pen 4 + ul )  | ( ( pen ul ; move ua , 0 ) ; move 4 + ul , ul )  | ( move ua , 0 ; v0 = 2 ; move v0 + 3 , ul )  | ( move ua , ua ; move 4 , ul ; move ul , ua + ua )  | ( move ua , ua ; v0 = 4 + ul ; move v0 , ul )  | ( ( move ua , ua ; move 2 * 2 , ul ) ; move ul , 0 )  | ( v0 = ua ; ( move v0 , ua ; move 4 + ul , ul ) )  
[1143] ( move 3 , 0 ; move ua + 2 , ul )  | ( move 3 , ua ; move 4 * 2 , ul )  | ( move 3 , ua ; move ua + 2 , ul ; v0 = 2 )  | ( move 3 , ua ; move ua + 2 , ul ; pen ua + ul )  | ( move ul , ua ; ( move 2 , ua ; move ua + 2 , ul ) )  | ( pen 4 + ul ; ( move 3 , 0 ; pen ul ; move ua + 2 , ul ) )  
[1144] ( move ua , 0 - 3 ; move ua , 2 )  | ( move ua , ul - 4 ; move ua , 2 )  | ( pen 2 ; move ua , ua - 3 ; move ua , 2 )  | ( move ua , ul - 4 ; move 0 , ua ; move ua , ul + ul )  | ( move ua , 0 - 3 ; v0 = ua ; move v0 , 2 - v0 )  
[1145] ( move 3 + 2 , 0 ; move ua , ul )  | ( move 3 + 2 , ua ; move ua , ul )  | ( move 4 + ul , 0 ; move ua , 3 - 2 )  | ( move 4 + ul , ua + ua ; move ua , ul )  | ( move 4 + ul , ua ; move ua , ul - ua )  | ( move 2 , ua ; move 3 , 0 ; move ua , ul )  | ( move 3 , ua ; move 2 , 0 ; move ua , ul )  | ( move 3 + 2 , 0 ; move ua , ul ; pen ul )  | ( move 4 + ul , ua ; pen 3 ; move ua , ul )  | ( move 4 , ua ; move ul , ua ; move ua , ul )  | ( move 3 + 2 , 0 ; move ua , ul ; move 0 , ua )  | ( move 2 + ul , ua ; ( move 2 , 0 ; move ua , ul ) )  | ( move 3 , ua ; move 2 , ua * 4 ; move ua , ul - ua )  | ( ( move 3 , 0 ; move 2 , ua ; move ua , ul ) ; pen 3 )  | ( move ul , 0 ; ( move 4 , 0 ; pen 3 ; move ua , ul ) )  | ( pen ua ; pen ua ; ( move 3 + 2 , ua ; move ua , ul ) )  
[1146] ( move ua , 0 ; move ul - 2 , 2 )  | ( move ua , 0 ; move ul , 0 - ul )  | ( move ua , 0 ; move ul , ua - ul )  | ( move ua , ua ; move ul , 0 - ul )  | ( move ua , ua ; move ul , 4 + ul )  | ( move ua , ua ; move ul , ua - ul )  | ( move ua , 0 ; move 4 - 3 , 0 - ul )  | ( move ua , 0 ; move ul - 2 , ul + ul )  | ( move ua , 0 ; move ul , 0 - ul ; pen 0 )  | ( move ua , 0 ; move ul , 0 - ul ; pen 3 )  | ( move ua , 0 ; move ul , ul - 2 ; pen ul )  | ( move ua , 0 ; move ul , ua - ul ; pen 4 )  | ( move ua , ua ; move ul , ua - ul ; pen 0 )  | ( move ua , ua ; pen ua ; move ul , ul - 2 )  | ( move ua , ua + ua ; move 4 - 3 , ul - 2 )  | ( pen ul ; move ua , ua ; move ul , ua - ul )  | ( move ua , 0 ; move 0 , ua - 2 ; move ul , ul )  | ( pen ul ; move ua , 0 ; move ul - 2 , ua + 2 )  | ( move ua , ua ; move ul , ua - ul ; v0 = ul )  | ( move ua , ua ; pen ua + ul ; move ul , ua - ul )  | ( move ua , ua ; move ul , ua - ul ; move 0 , ua + 2 )  | ( move ua , ua ; move ul , ua - ul ; v0 = 4 - ua )  | ( move ua , ua * 2 ; move ul , ua - ul ; v0 = ul )  | ( v0 = ul ; move ua , 0 ; move v0 - 2 , v0 * 2 )  | ( move ua , 0 ; ( move 0 , ua + ul ; move 2 - 3 , ul ) )  | ( ( move ua , ua ; move ul , ua - ul ) ; v0 = 4 * 3 )  | ( pen ul + ul ; move ua , ua ; ( pen ul ; move ul , ua - ul ) )  
[1147] ( move ua , 3 ; move ua , 0 - 2 )  | ( move ua , 2 + ul ; move ua , ul - 3 )  | ( move ua , 3 ; pen ul ; move ua , ua - 2 )  | ( move ua , 2 + ul ; ( pen 4 ; move ua , 2 - 4 ) )  
[1148] ( move 0 - 3 , 0 ; move ul , ul )  | ( move 0 - 3 , ua ; move ul , ul )  | ( move ul - 4 , 0 ; move ul , ul )  | ( move ul - 4 , ua ; move ul , ul )  | ( move 0 - ul , ul ; move 3 , ul - 2 )  | ( move ul - 4 , ua * 4 ; move ul , ul )  | ( move ul - 4 , 0 ; v0 = 4 ; move ul , ul )  | ( move ul - 4 , 0 ; move ul , ul ; v0 = ul )  | ( move ul - 4 , ua ; ( move ul , ul ; pen 3 ) )  | ( v0 = ul ; move v0 - 4 , 0 ; move ul , ul )  | ( move ul - 4 , 0 ; pen 4 * 3 ; move 2 - ul , ul )  | ( move ul - 4 , 0 ; v0 = ul - ua ; move ul , v0 )  | ( ( move ul - 4 , 0 ; v0 = ul ) ; move v0 , v0 )  | ( v0 = ul ; ( move v0 - 4 , 0 ; move ul , v0 ) )  | ( move 3 , ua / 2 ; ( pen 3 ; move ul - 2 , ua + ul ) )  | ( move ul - 4 , ua ; ( move ul , ua + ul ; v0 = 0 ) )  
[1149] ( move ua , 2 ; move 0 - 2 , ul )  | ( pen ul ; move ua , 2 ; move ul - 3 , ul )  | ( move ua , 2 ; move 0 , ua ; move 2 - 4 , ul )  | ( move ua , 2 ; move ul - 3 , ul ; v0 = 0 )  | ( move ua , 2 ; move 0 - 2 , ul ; v0 = ua * 2 )  
[1150] ( move ua , 0 ; move ua + 2 , 4 )  | ( move ua , ua ; move ua + 2 , 4 )  | ( move ua , 0 ; move ua + 2 , 4 ; pen ua + ul )  | ( move ua , ua + ua ; move ua , 4 ; move ua / 3 , 0 )  | ( move ua , ua + ua ; move ua + 2 , 4 ; v0 = ua / 2 )  
[1151] ( move 0 - ul , 0 ; move 3 , ul )  | ( move 0 - ul , ua ; move 3 , ul )  | ( move ul - 2 , ua ; move 3 , ul )  | ( move ul - 2 , ua * 2 ; move 3 , ua + ul )  | ( pen ua ; ( move 0 - ul , 0 ; move 3 , ul ; v0 = 3 ) )  
[1152] ( move 2 - ua , 0 ; move 2 , ul )  | ( move 2 - ua , ua ; move 2 , ul )  | ( move 2 - ua , ua ; move 2 , ul ; pen ul )  | ( move 2 - ua , 0 ; v0 = 3 ; move 3 - ul , ul )  | ( move 2 - ua , ua ; move 2 , ul ; v0 = ua + 2 )  | ( move 2 - ua , ua ; move ul + ul , ul ; v0 = ul )  
[1153] ( move ua - 2 , 0 ; move 2 , ul )  | ( v0 = 2 ; move ua - 2 , ua ; move v0 , ul )  | ( move ul , 0 ; move ua - 3 , 0 ; move ul + ul , ul )  
[1154] ( move ua - 2 , 0 ; move ul , 2 )  | ( move ua - 2 , ua ; move ul , 2 )  | ( move ua - 2 , ua * 2 ; move ul , 2 ; pen 0 )  | ( move ul , 0 ; move ua - 3 , ua ; move ul , 2 )  | ( move 4 , ua ; pen ua - 4 ; move ul , ua * ua )  | ( move ua - 2 , 0 ; move ul , 3 - ul ; v0 = 4 )  | ( move 4 / 2 , ua ; move 2 , ua + ua ; move ul , ua * ua )  
[1155] ( move ua , ua ; move 2 , 0 - 3 )  | ( move ua , ua ; move 2 , ua - 3 )  | ( move 2 , ul / ua ; move ua , 2 + ul )  | ( pen ul ; move ua , 0 ; move 2 , 0 - 3 )  | ( move ua , ua ; move 2 , ul - 4 ; pen ul / 2 )  | ( move ua , ua * 3 ; move 2 , ul - 4 ; v0 = ul )  | ( move ua , ua ; ( move 3 - ul , ul - 4 ; pen 4 ) )  
[1156] ( move ul , 0 ; move ua , 3 + 2 )  | ( move ul , 0 ; move ua , 4 + ul )  | ( move ul , ua ; move ua , 4 + ul )  | ( move ul , 0 ; move 0 , 4 ; move ua , ul )  | ( move ul , ua ; move 0 , ul ; move ua , 4 )  | ( pen 4 ; move ul , ua ; move ua , 4 + ul )  | ( move ul , ua ; pen ul ; move ua , 4 + ul )  | ( pen ua * ua ; move ul , 0 ; move ua , 3 + 2 )  | ( move ul , ua * 4 ; ( move 0 , 2 ; move ua , 3 ) )  | ( move ul , ua ; ( move ua , 4 + ul ; pen ul ; pen ul ) )  | ( move ul , 0 ; ( pen 0 ; ( pen 3 ; move ua , 4 + ul ) ) )  
[1157] ( move ua + ul , 0 ; move 2 , 3 )  | ( move ua + ul , ua ; move ua / 3 , 3 )  | ( move ua , ua ; move ul , ua ; move 2 , 3 )  | ( move 4 + 3 , 0 - ua ; move ul + ul , 3 )  | ( move ua + ul , ua + ua ; move 2 , ua + 3 )  | ( move ua + ul , ua * 2 ; move ul + ul , 3 )  | ( move ul , ua ; ( move ua , 0 ; move 2 , 3 ) )  | ( move ua + ul , 0 ; move 3 - ul , ua + 3 ; v0 = ul )  
[1158] ( move ua + 2 , 2 ; move ua , 2 )  
[1159] ( move ua , 0 ; move ua + 3 , 4 )  | ( move ua , ua ; move ua + 3 , 4 )  | ( move ua , ua * 4 ; move ua + 3 , 4 )  | ( move ua , ua ; move ua + 3 , 4 - ua )  
[1160] ( move ua - ul , 0 ; move 3 , 2 )  | ( move ua - ul , ua ; move 3 , 2 )  | ( move ua - ul , ua * 4 ; move 3 , 2 )  | ( move ua - ul , ua ; move 2 + ul , 2 )  | ( move ua - ul , ua ; move 2 + ul , ul + ul )  | ( move ua - ul , ua * 2 ; move 3 , 2 ; v0 = ua )  
[1161] ( move ua , 0 ; move 2 , ul - 3 )  | ( move ua , 0 ; move 4 / 2 , ul - 3 )  | ( move ua , ua ; move 2 , ul - 3 ; pen 4 )  | ( move ua , 0 ; move 2 , ul - 3 ; v0 = ul )  | ( pen 3 - ul ; move ua , ua ; move 2 , ua - 2 )  | ( pen ul ; move ua , 0 ; move ua / 3 , ul - 3 )  | ( move ua , ua ; ( pen ua ; move ul + ul , 2 - 4 ) )  
[1162] ( move ua , 0 ; move 2 , ua - 4 )  | ( pen ul ; move ua , 0 ; move 2 , ua - 4 )  | ( move ua , ua ; move 0 , ua ; move 2 , ua - 4 )  
[1163] ( move ua - ul , 0 ; move 2 , 3 )  | ( move ua - ul , ua ; move ul + ul , 3 )  | ( pen 2 / 4 ; move 3 + 2 , 0 ; move 2 , 4 - ul )  | ( v0 = ua - 4 ; move v0 * v0 , 0 ; move v0 , 3 )  
[1164] ( move ua + 2 , 2 ; move 2 , ul )  | ( v0 = 2 ; move ua + v0 , v0 ; move 2 , ul )  | ( move ua + 2 , 4 / 2 ; move 0 , ua ; move 2 , ul )  | ( move ul , ua + 2 ; move ua + ul , 0 ; move 2 , ul )  
[1165] ( move ua + ul , 0 ; move 2 , 4 )  | ( move ua + ul , ua ; move 2 , 4 )  | ( move ua + ul , ua ; move 2 , ua + 4 )  | ( move ul , 0 ; move ua , ua ; move 2 , ua + 4 )  | ( move ua + ul , ua ; pen ul ; move 2 , 3 + ul )  | ( move ua + ul , ua ; v0 = 2 ; move v0 , 4 )  | ( move ua + ul , ua ; move ul , 3 + ul ; move ul , 0 )  | ( move ua + ul , 0 ; v0 = 2 ; move 2 , v0 + v0 )  | ( move ua + ul , ua ; pen 3 ; ( move 0 , 0 ; move 2 , 4 ) )  | ( move ua , ua ; ( move ul , ua ; move 2 , 4 ) ; v0 = ul )  
[1166] ( move 2 , ul ; move ua + 2 , 2 )  | ( move 2 , ul ; ( pen ua + ul ; move ua + 2 , 2 ) )  
[1167] ( move ul - ua , 0 ; move 3 , 2 )  | ( move ul - ua , ua ; move 3 , 2 )  | ( move ul - ua , 0 ; move ua / 2 , 2 )  | ( move 0 , ua ; move ul - ua , 0 ; move 3 , 3 - ul )  
[1168] ( move ul , 0 ; move ua , 4 + 2 )  | ( move ul , 0 ; move ua , 3 * 2 )  | ( move ul , ua * 4 ; move ua , 4 + 2 )  | ( move ul , 0 ; move ua , 3 * 2 ; pen 2 )  | ( pen 3 ; move ul , 0 ; move ua , 4 + 2 )  | ( move ul , ua ; move ua , 3 * 2 ; v0 = ul )  | ( move ul , 0 ; move ua , 3 + 3 ; v0 = 3 / 2 )  | ( move ul , ua * 4 ; move ua , 4 + 2 ; pen ul + ul )  | ( move ul , ua ; pen 2 ; ( move 0 , 4 ; move ua , 2 ) )  | ( move ul , 0 ; ( move ua , 3 * 2 ; pen ul ; pen 3 + ul ) )  | ( move ul , ua ; ( move 0 , ua + 3 ; move ua , 3 ; pen ul ) )  
[1169] ( move 3 , 2 ; move 0 - ul , ua )  | ( move ul , 2 ; move ul - 4 , 0 )  | ( move 3 , 2 ; move ul , ul - 4 )  | ( move ul , ua / 3 ; move 4 - ul , 3 )  | ( move ul , ul + ul ; move ul - 4 , ua )  | ( move 3 , 2 ; v0 = 4 ; move ul , v0 * v0 )  
[1170] ( move ua , 0 ; move 4 - ua , 2 )  
[1171] ( move 3 , 0 ; move ua , ul - 2 )  | ( move 3 , ua ; move ua , 2 - 3 )  | ( move 3 , ua ; move ua , ua - ul )  | ( move 2 + ul , ua ; move ua , ua - ul )  | ( move 3 , ua ; move ua , ua - ul ; pen ul )  | ( move 3 , ua ; pen ua + ul ; move ua , 2 - 3 )  | ( move ul , ua ; move 2 , ua ; move ua , ul - 2 )  | ( move 3 , ua ; move ua , ua - ul ; v0 = ua )  | ( v0 = 0 ; move 3 , v0 ; move ua , ul - 2 )  | ( move 3 , ua ; move ua , 0 - ul ; pen ua + ul )  | ( move 3 , ua ; v0 = ul ; move ua , ua - v0 )  
[1172] ( move 4 - ua , 0 ; move ua , 2 )  | ( move 4 - ua , 0 - ua ; move ua , 2 )  | ( move 4 - ua , ua ; move ua , ul + ul )  | ( move 4 - ua , ua ; pen 3 ; move ua , 2 )  | ( move 4 - ua , ua ; move ua , 2 ; v0 = 4 )  
[1173] ( move ul - ua , 0 ; move 2 , 3 )  | ( move ul - ua , ua ; move 2 , 3 )  | ( move 2 - ua , 0 ; ( pen ul ; move 3 , 3 ) )  | ( ( pen ul ; move ul - ua , 0 ) ; move 2 , ua + 3 )  
[1174] ( move 3 , 0 ; move ul - ua , 2 )  | ( move 3 , ua ; move ul - ua , 3 - ul )  | ( move 3 , ua ; pen ul ; move ul - ua , 2 )  | ( move 3 , ua ; move ul - ua , 4 - 2 ; pen 2 )  | ( move 3 , ua * 4 ; move ul - ua , 2 ; pen ul )  | ( move 3 , ua ; move ul - ua , ua + 2 ; v0 = ua )  
[1175] ( move ua , 3 ; move ul , 0 - 2 )  | ( move ua , 3 ; move 0 - ul , ul )  | ( move ua , 3 ; move ul , ua - 2 )  | ( move ua , 3 ; move ul - 2 , ul )  | ( move ua , 3 ; move 0 - ul , ul ; move 0 , 0 )  | ( move ua , 3 ; move 0 , 2 ; move ul , ua / 3 )  | ( move ua , 3 ; move 0 , ua * 3 ; move ul - 2 , ul )  
[1176] ( move ua , ul ; move 3 , 0 - 2 )  | ( move ua , ul ; move 3 , ul - 3 )  | ( move ua , ua + ul ; move 3 , 2 - 4 )  | ( move ua , ua + ul ; move 3 , ua - 2 ; pen 0 )  
[1177] ( move ua , ua ; move 3 + 2 , 2 )  | ( move ua , 0 ; move 4 + ul , 2 )  | ( move ua , ua ; move 4 + ul , 2 )  | ( move ua , 0 ; move ul , 2 ; move 4 , 0 )  | ( move ua , 0 ; move 4 + ul , 2 ; v0 = 3 )  | ( pen 4 ; move ua , 0 ; move 4 + ul , ua + 2 )  | ( move ua , ua * 3 ; move ul , 2 ; move 4 , ua )  | ( move ua , ua ; move ul , ul + ul ; move 4 , ua )  | ( move ua , ua ; ( pen 4 + 2 ; move 4 + ul , 2 ) )  | ( move ua , 0 ; move 4 + ul , ul + ul ; pen ul / ua )  | ( move ua , ua ; ( move 4 + ul , 2 ; pen 3 + ul ) ; pen ua )  
[1178] ( move ul , 0 ; move 3 , ua - 2 )  | ( move ul , ua ; move 3 , ua - 2 )  | ( move ul , 0 ; move 2 + ul , ua - 2 )  | ( move ul , ua ; move 3 , 0 - 2 ; v0 = 2 )  | ( move ul , 0 ; move 3 , ul - 3 ; v0 = ua )  | ( move ul , ua ; move 3 , ua - 2 ; pen ua - 4 )  | ( move ul , ua ; move 2 + ul , ul - 3 ; move 0 , 0 )  | ( move ul , ua ; v0 = 3 ; move v0 , ul - v0 )  
[1179] ( move ua , 0 - ul ; move 2 , 3 )  | ( move 0 - 2 , 2 ; move ua , ul / ua )  
[1180] ( move 4 , 0 ; move ua + ul , 2 )  | ( move 4 , ua ; move ua + ul , 2 )  | ( move 4 , ua ; move ua + ul , 3 - ul )  | ( move 4 , ua ; move ul , 2 ; move ua , ua )  | ( move 4 , 0 ; move ua + ul , 2 ; move 0 , 3 )  | ( move 4 , ua ; move ua + ul , 2 ; v0 = ul )  | ( move 4 , 0 ; move ua + ul , ul + ul ; pen 0 )  | ( ( pen ul ; move 4 , 0 ) ; move ua + ul , 2 ; pen 4 )  | ( move 4 , ua ; ( move ua + ul , 2 ; v0 = 0 ; pen 4 ) )  | ( ( move 4 , ua ; v0 = ul ) ; move ua , 2 ; move ul , ua )  | ( pen ua ; ( ( move 4 , ua ; move ua + ul , 2 ) ; pen ul ) )  
[1181] ( move 0 - 2 , ua ; move 3 , ul )  | ( move 2 - 4 , ua ; move 3 , ul )  | ( move ul - 3 , ua ; move 3 , ul )  | ( move ul - 3 , ua ; move 4 - ul , ul )  | ( move ul - 3 , ua ; move 3 , ul ; v0 = 0 )  | ( move 2 - 4 , ua ; move 2 + ul , ul ; move 0 , ua )  
[1182] ( move 2 , 0 ; move ul - ua , 3 )  | ( pen ua ; move 2 , 0 ; move ul - ua , 3 )  | ( move ua / 3 , ua ; move ul - ua , ua + 3 )  | ( move 2 , ua ; move ul - ua , 3 - ua ; pen ua )  | ( ( move 2 , 0 ; move ul - ua , 2 + ul ) ; move 0 , ua )  | ( move 2 , ua ; move ul - ua , ua + 3 ; v0 = 4 / 2 )  
[1183] ( move 2 , 3 ; move ul - ua , 0 )  | ( move ul , 3 ; move ul - ua , ua )  | ( move 2 , 3 - ua ; move ul - ua , ua )  | ( move ul + ul , 3 ; move ul - ua , ua )  | ( move 0 , ua ; move ul , ua / 2 ; move ua - ul , 3 )  
[1184] ( move 3 , ua ; move ua + 2 , 2 )  | ( move 3 , ua ; move ua + 2 , ul + ul )  | ( move 3 , 0 ; move ua + 2 , 2 ; v0 = 2 )  | ( move 3 , ua * 2 ; move ua + 2 , 2 ; pen 4 )  | ( move 3 , 0 ; ( move ua + 2 , 2 ; move 0 - ul , 0 ) )  | ( move 0 , 0 ; move 2 + ul , ua ; move ua + 2 , 4 / 2 )  | ( ( move 3 , ua ; move ua + 2 , ul + ul ) ; v0 = 0 )  
[1185] ( move ul , 0 ; move 3 + 2 , ul )  | ( move ul , 0 ; move 4 + ul , ul )  | ( move ul , ua ; move 4 + ul , ul )  | ( move ul , ua * 2 ; move 3 + 2 , ul )  | ( move ul , 0 ; move 4 + ul , ul - ua )  | ( move 2 - ul , ua ; move 4 + ul , ul )  | ( move ul , ua + ua ; move 4 + ul , ul )  | ( move ul , ua ; move 4 + ul , ua + ul )  | ( move ul , ua ; move 4 , ul ; move ul , 0 )  | ( move ul , 0 ; move ul , ul ; move 4 , ua )  | ( move ul , ua ; move 4 , ul ; move ul , ua )  | ( move ul , ua ; move ul , ul ; move 4 , ua )  | ( move ul , ua ; move 3 + 2 , ul ; v0 = ul )  | ( move ul , ua ; ( pen 3 ; move 4 + ul , ul ) )  | ( move ul , ua ; ( move ul , ul ; move 4 , ua ) )  | ( move ul , ua ; move 3 + 2 , ul ; pen ul + ul )  | ( move ul , ua ; move ul , ul ; move 3 + ul , ua )  | ( move ul , ua ; move 4 + ul , ul ; pen ul / ua )  | ( move ul , 0 ; ( move 4 + ul , ul ; move 0 , 2 ) )  | ( move ul , ua ; v0 = ul ; move v0 + 4 , v0 )  | ( v0 = ul ; move v0 , ua ; move 4 + ul , v0 )  | ( pen ua ; ( move ul , ua + ua ; move 3 + 2 , ul ) )  | ( move ul , ua ; move 3 , ul ; move ul + ul , ua * 3 )  | ( move ul , ua * 3 ; move ul + ul , ul ; move 3 , ua )  | ( ( move ul , ua ; pen ua ) ; move 4 + ul , ua + ul )  | ( move ul , ua ; v0 = 3 + 2 ; move v0 , ua + ul )  | ( pen ua ; ( pen 4 ; move ul , 0 ; move 4 + ul , ul ) )  | ( ( move 3 - 2 , ua ; move 4 - ul , ul ) ; move 2 , 0 )  | ( move ul , ua ; ( move 3 + 2 , ul ; v0 = 0 - ul ) )  | ( pen ua ; ( pen 4 ; move ul , 0 ; move 4 + ul , 2 - ul ) )  | ( ( pen ua ; ( move ul , 0 ; move 4 + ul , ul ) ) ; pen 4 )  | ( ( move ul , ua ; move 4 , ul ) ; move ul , ua ; v0 = 3 )  
[1186] ( move 4 , ua ; move ua , 0 - 2 )  | ( move 4 , 0 ; move ua , ul - 3 )  | ( move 4 , ua ; move ua , 2 - 4 )  | ( move 4 , ua ; move ua , ua - 2 )  | ( move 4 , ua ; move ua , ul - 3 )  | ( move 4 , 0 ; pen 4 ; move ua , ul - 3 )  | ( move 4 , 0 ; move ua , ua - 2 ; v0 = ul )  | ( move 4 , 0 ; v0 = ua ; move v0 , v0 - 2 )  | ( ( move 4 , 0 ; pen 2 + 2 ) ; move ua , ul - 3 )  | ( ( move 4 , ua ; v0 = ul - 3 ) ; move ua , v0 )  
[1187] ( move ua + ul , 0 ; move 4 , 2 )  | ( move ua + ul , 0 ; move 4 , ua + 2 )  | ( ( move ua + ul , 0 ; move 4 , 2 ) ; v0 = ua - 3 )  | ( ( move ua + ul , ua * 3 ; move 4 , 2 ) ; v0 = ua )  
[1188] ( move ua + 2 , 2 ; move ua , 3 )  
[1189] ( move 3 , ua ; move ul , 0 - 2 )  | ( move 3 , 0 ; move ul , ua - 2 )  | ( move 3 , 0 ; move ul , ul - 3 )  | ( move 3 , ua ; move 0 - ul , ul )  | ( move 3 , ua ; move ul , ul - 3 )  | ( move 4 - ul , 0 ; move ul , 2 - 4 )  | ( move 3 , ua * 3 ; move ul , ul - 3 )  | ( move ua - 3 , ua ; move ul , 3 + ul )  | ( move 3 , 0 ; pen ul ; move ul , 0 - 2 )  | ( ( move 3 , ua ; pen 2 ) ; move ul , 2 - 4 )  | ( move 3 , ua ; v0 = 3 + 3 ; move ul , ul - 3 )  | ( move 0 , ua ; move 3 , 0 ; move ul - 2 , ua + ul )  | ( v0 = 3 ; move v0 , ua ; move ul , ul - v0 )  | ( move 4 - ul , ua ; move ul , ua - 2 ; move 0 , ua )  | ( pen ua ; move 4 - ul , ua + ua ; move 2 - ul , ul - 3 )  
[1190] ( move ua , 4 ; move ua , 0 - 2 )  | ( move ua , 4 - ua ; move ua , 0 - 2 )  | ( move ua , 4 - ua ; move ua , ul - 3 )  | ( move ua , 4 ; move ua , ul - 3 ; v0 = ul )  | ( ( move ua , 4 ; move ua , ua - 2 ) ; pen ul )  | ( move ua , 4 - ua ; v0 = 2 ; move ua , v0 - 4 )  
[1191] ( move 2 , 0 ; move 3 , ua - ul )  | ( move 2 , ua ; move 3 , ua - ul )  | ( pen 4 ; ( move 2 , ua ; move 3 , 0 - ul ) )  | ( pen ul + ul ; move 2 , ua ; move 3 , ua - ul )  | ( move 2 , ua ; move 3 , 0 - ul ; v0 = ul / ua )  | ( move 3 - ul , 0 ; pen ua + ul ; move 3 , ua - ul )  
[1192] ( move 2 , 3 ; move ua , 0 - ul )  | ( move 2 , ua + 3 ; move ua , 0 - ul )  | ( move 2 , 3 ; v0 = ul - 3 ; move ua , ul + v0 )  
[1193] ( move ua , 0 ; move ul , 4 + 2 )  | ( move ua , ua ; move 3 - 4 , 3 )  | ( move ua , ua ; move ul , 3 + 3 )  | ( move ua , ua ; move ul , 4 + 2 )  | ( move ua , ua ; move ul , 3 * 2 )  | ( move ua , ua ; move 4 - 3 , 4 + 2 )  | ( move ua , ua * 4 ; move 0 - ul , 3 )  | ( ( pen 3 ; move ua , 0 ) ; move ul , 4 + 2 )  | ( move ua , ua ; move 0 , 2 ; move 0 - ul , ul )  | ( move ua , ua ; v0 = 3 * 2 ; move ul , v0 )  | ( move ua , ua ; ( move ul , 3 * 2 ; v0 = ul ) )  | ( move 0 - ua , ua / 2 ; move ul , 2 + ul ; v0 = 3 )  
[1194] ( move 3 - ua , 0 ; move 2 , ul )  | ( move 3 - ua , ua ; move 4 - 2 , ul )  | ( move 3 - ua , ua ; v0 = ul ; move 2 * v0 , v0 )  | ( move 3 - ua , ua ; v0 = ul ; move v0 + v0 , ul )  
[1195] ( move ua , ua ; move 3 , 0 - 3 )  | ( move ua , 0 ; move 3 , ul - 4 )  | ( move ua , 0 ; move 2 , ul - 4 ; move ul , 0 )  | ( move ua , ua ; ( move 3 , ul - 4 ; v0 = ul ) )  
[1196] ( move 3 , 0 ; move 2 - ua , ul )  | ( move 3 , ua ; move 2 - ua , ul )  | ( move ua - 2 , ul ; pen 4 / 2 ; move 3 , ua / 3 )  
[1197] ( move 2 , 0 ; move ul - 3 , ua )  | ( move 2 , ua ; move ul - 3 , 0 )  | ( move 2 , ua ; move ul - 3 , ua )  | ( move ul - 3 , ua ; move 2 , ua )  | ( move 2 , 0 ; move ul - 3 , ua * 4 )  | ( move 2 , 0 ; move ul - 3 , ua + ua )  | ( move ua / 3 , 0 ; move ul - 3 , ua )  | ( move ul - 3 , 0 ; move ua / 3 , ua )  | ( move ul - 3 , ua ; move ul + ul , 0 )  | ( move 2 - 4 , 0 ; pen ua ; move 2 , ua )  | ( move 2 - 4 , ua ; move ul + ul , ua + ua )  | ( move ul - 3 , 0 ; move 2 , 0 ; v0 = ul )  | ( pen ul ; ( move ul - 3 , ua ; move 2 , 0 ) )  | ( move 2 , 0 ; ( v0 = 0 ; move ul - 3 , 0 ) )  | ( move ul - 3 , ua ; move ua / 3 , 0 ; v0 = 0 )  | ( move ul - 3 , ua / 2 ; v0 = 2 ; move v0 , ua )  | ( move ul - 3 , 0 ; pen ul / ua ; move ul + ul , ua )  | ( ( pen ua ; move 2 , 0 ; pen 4 ) ; move ul - 3 , ua )  
[1198] ( move ua - 2 , ua ; move 2 , 2 )  | ( move ua - 2 , 0 ; move 2 , 2 - ua )  
[1199] ( move ua + ul , 2 ; move 2 , 2 )  | ( move ua + ul , 4 / 2 ; move 2 , 2 )  | ( pen ua ; move ua + ul , 2 ; move ul + ul , 2 )  
[1200] ( move 2 , 0 ; move ua , ua / 3 )  | ( move 2 , ua ; move ua , ua / 3 )  | ( move 3 - ul , ua ; move ua , ua / 3 )  | ( move ul + ul , ua ; move ua , ua / 3 )  
[1201] ( move 0 - ul , 2 ; move 3 , ul )  | ( move ul - 2 , 2 ; move 3 , ul )  | ( move ul , ua - ul ; move 3 , 4 )  | ( move 0 - ul , 2 ; move 4 - ul , ul )  | ( move ul , ul - 2 ; move 3 , 4 ; pen ul )  | ( move ul - 4 , 2 + ul ; move ul , 0 - ul )  | ( pen ul ; move 3 - 4 , ul + ul ; move 2 + ul , ul )  
[1202] ( move ua , 3 ; move ua , 3 + 2 )  | ( move ua , 3 ; move ua , 4 + ul )  | ( move ua , 3 - ua ; move ua , 4 + ul )  | ( move ua , 2 + ul ; move ua , 4 + ul ; pen 4 * 3 )  | ( ( move ua , 3 ; pen ul ) ; ( move ua , 4 + ul ; pen 3 ) )  
[1203] ( move 3 , ul ; move ua , 0 - 3 )  
[1204] ( move ul , 0 ; move ua , 4 + 3 )  | ( move ul , ua ; move ua , 4 + 3 )  
[1205] ( move 3 , ua ; move ua + 3 , 2 )  | ( move 3 , ua ; move ua + 3 , ul + ul )  | ( move 3 , ua ; move ua , 2 ; move 3 , 0 )  
[1206] ( move ul - ua , 2 ; move 2 , 2 )  | ( move ul - ua , 3 - ul ; move ul + ul , 2 )  
[1207] ( move 3 + 2 , ua ; move 2 , ul )  | ( move 4 + ul , 0 ; move 2 , ul )  | ( move 4 + ul , ua ; move 2 , ul )  | ( move 4 + ul , 0 ; move 3 - ul , ul )  | ( move 2 , 0 ; move 3 , 0 ; move 2 , ul )  | ( move ul , ua ; move 4 , 0 ; move 2 , ul )  | ( move ul , 0 ; move 4 , 0 ; move ua / 3 , ul )  | ( move 4 + ul , ua ; v0 = 2 ; move 2 , ul )  | ( ( pen ua ; move 4 + ul , 0 ) ; move 2 , ul )  
[1208] ( move ua + 3 , 2 ; move ua , 3 )  
[1209] ( move 3 , ul ; move 0 - 2 , ul )  | ( move 3 , ul ; move 2 - 4 , ul )  | ( move 3 , ul ; move ul - 3 , ul )  | ( v0 = ul ; move 3 , v0 ; move 2 - 4 , v0 )  | ( v0 = 3 ; move v0 , ul ; move ul - v0 , ul )  | ( move 3 , ul ; ( pen ua * 3 ; move ul - 3 , ul ) )  
[1210] ( move 3 , 0 ; move 3 , ua * ua )  | ( move 3 , ua ; move 3 , ua * ua )  
[1211] ( move ua , ua ; move 3 + 3 , 2 )  | ( move ua , ua ; move 3 * 2 , 2 )  | ( move ua , 0 ; move 3 * 2 , 3 - ul )  | ( move ua , ua ; move 3 * 2 , 3 - ul )  | ( move ua , 0 ; move 3 , 2 ; move 3 , 0 )  | ( move ua , 0 ; ( move 4 , 2 ; move 2 , 0 ) )  | ( move ua , 0 ; move 3 * 2 , 2 ; v0 = ul )  
[1212] ( move ua - 2 , 0 ; move 4 , ul )  | ( move ua - 2 , ua ; move 4 , ul )  | ( v0 = ua + ul ; move v0 - 3 , ua ; move 4 , ul )  
[1213] ( move ua , 0 ; move 2 , ua / 3 )  | ( move ua , ua ; move 2 , ua / 3 )  | ( pen ul ; ( pen ua ; move ua , ua ) ; move ul + ul , ua / 3 )  
[1214] ( move 4 , 0 ; move ua , ua - 3 )  | ( move 4 , ua ; move ua , ul - 4 )  | ( v0 = ul / ua ; move ua , v0 ; move 4 , 3 )  
[1215] ( move ua + 3 , 2 ; move ul , 2 )  
[1216] ( move 4 + ul , 0 ; move ul , 2 )  | ( move 3 + 2 , ua ; move ul , 2 )  | ( move 4 + ul , ua ; move ul , 2 )  | ( move ua - ul , ua ; move ul , 2 )  | ( move 4 + ul , 0 ; move ul , ua + 2 )  | ( move 4 , 0 ; move ul , 0 ; move ul , 2 )  | ( move 4 , ua ; move ul , ua ; move ul , 2 )  | ( move ul , 0 ; move 4 , ua * 3 ; move ul , 2 )  | ( move 3 + 2 , 0 ; v0 = ul ; move v0 , 2 )  | ( move 3 + 2 , 0 ; move ul , 2 ; v0 = ul / 4 )  | ( move ua - ul , ua ; v0 = 2 ; move v0 - ul , v0 )  
[1217] ( move ua , 0 ; move 3 , 4 + ul )  | ( move ua , ua ; move 3 , 4 + ul )  | ( move ua , ua ; move 0 , ul ; move 3 , 4 )  | ( move ua , 0 ; pen ua * 3 ; move 3 , 4 + ul )  | ( move ua , ua ; move 0 , ua + 2 ; move 3 , 3 - ua )  
[1218] ( move ul - 3 , 0 ; move ua , 3 )  | ( move ul - 3 , ua ; move ua , 3 )  | ( move 0 - 2 , ua ; pen ul ; move ua , 3 )  | ( move ul - 3 , 0 ; pen ul ; move ua , 3 )  | ( move ul - 3 , 0 ; move ua , 3 ; v0 = 4 )  | ( ( move 0 - 2 , ua ; pen 4 * 2 ) ; move ua , 3 )  
[1219] ( move 2 , ul ; move ua + 2 , 3 )  | ( move 2 , ua + ul ; move ua + 2 , 3 )  | ( move 2 , ul ; move ua + 2 , 2 + ul ; pen 2 * 2 )  
[1220] ( move 0 - ul , ul ; move 3 , 2 )  | ( move ul , 4 ; move 3 , ua - ul )  | ( move ul , 2 + 2 ; move 3 , 0 - ul )  | ( move ul - 2 , ul ; move 3 , ul + ul )  | ( move ul , 4 ; move 3 , ua - ul ; pen 0 )  | ( pen 4 - 3 ; move ul , 4 - ua ; move 3 , ua - ul )  
[1221] ( move ua , 0 ; move ua , 4 * 2 )  | ( move ua , ua ; move ua , 4 * 2 )  | ( move ua , ua ; pen 3 ; move ua , 4 * 2 )  | ( move ua , ua ; pen 3 ; move ua , 4 + 4 )  | ( move ua , ua ; move 0 , ua + 4 ; move ua , 4 )  | ( v0 = ua ; move v0 , ua ; move ua , 4 * 2 )  
[1222] ( move 4 - ua , 0 ; move 2 , ul )  | ( move 4 - ua , ua * 4 ; move 2 , ul )  | ( move 4 - ua , 0 ; v0 = 2 ; move v0 , ul )  
[1223] ( move ua - ul , 0 ; move 2 , 4 )  
[1224] ( move ua , 2 ; move ua + 3 , 3 )  | ( move ua , 3 - ul ; move ua + 3 , ua + 3 )  
[1225] ( move 0 - ua , ul ; move 4 , 2 )  
[1226] ( move 2 , 0 - ul ; move ua , 4 )  | ( move 3 - ul , ul - 2 ; move ua , 4 )  | ( move ul , ul - 2 ; move ul , 0 ; move ua , 4 )  | ( move ul + ul , ua - ul ; move ua , 3 + ul ; pen ua )  
[1227] ( move 2 , 0 ; move 4 + ul , ul )  | ( move ul + ul , 0 ; move 3 + 2 , ul )  | ( move 2 , ua ; move 4 + ul , ul - ua )  | ( move 3 - ul , ua ; move 4 + ul , ul )  | ( move 2 , ua ; pen 4 ; move 4 + ul , ul )  | ( move 2 , ua ; move 4 , ul ; move ul , ua )  | ( move 2 , ua ; move 4 + ul , ul ; pen ul )  | ( move ul + ul , ua ; move 4 + ul , ua + ul )  | ( move 3 - ul , ua ; move 4 , ul ; move ul , 0 )  | ( ( move 2 , ua ; move 0 , ua ) ; move 4 + ul , ul )  | ( move ul + ul , ua ; move ul , ul ; move 2 * 2 , ua )  | ( move 2 , ua ; ( pen 2 ; ( move ul , ul ; move 4 , 0 ) ) )  
[1228] ( move ua + ul , 2 ; move 3 , 2 )  | ( move ua + ul , 4 / 2 ; move 3 , ul + ul )  | ( move ua + ul , 2 ; move 3 , ua + 2 ; v0 = ul )  | ( ( move ua + ul , 2 ; move 3 , ul + ul ) ; pen 4 )  | ( ( move ul , ul + ul ; move ua , ua ) ; move 3 , ul + ul )  
[1229] ( move ul , 0 ; move ua + 3 , 4 )  | ( move 2 , ua ; move ua + 3 , 4 )  | ( move ul , ua ; move ua + 3 , 4 )  | ( move 4 / 3 , ua ; move ua + 3 , 4 )  | ( move ul , ua ; move ua + 3 , 3 + ul )  | ( move ul , 0 ; move ua , 3 + ul ; move 3 , 0 )  | ( move ul , 0 ; move ua + 3 , 3 + ul ; v0 = ua )  | ( move ul , 0 ; ( pen 3 ; move ua , 4 ) ; move 3 , 0 )  | ( move ul , ua * 4 ; move ul , 0 ; move 3 * 3 , 3 + ul )  
[1230] ( move ua , 3 + 2 ; move ua , 3 )  | ( move ua , 3 + 2 ; move ua , 3 ; v0 = 4 - ua )  | ( ( move ua , 4 + ul ; move ua , 3 ; v0 = ua ) ; pen 3 )  
[1231] ( move 2 , ua ; move 4 , 0 - ul )  | ( move 3 - ul , 0 ; move 4 , 0 - ul )  | ( move 2 , 0 ; move 4 , ul - 2 ; pen 2 )  | ( pen ul ; move 2 , ua ; move 4 , ul - 2 )  | ( move 2 , 0 ; move 4 , ul - 2 ; v0 = ul )  | ( move ul + ul , ua * 4 ; v0 = 4 ; move v0 , ua - ul )  
[1232] ( move ua , 2 ; move ua - 2 , 3 )  | ( move ua , 2 - ua ; move 4 , 3 )  | ( move ua , 2 ; move 4 , 3 ; move ul , ua )  | ( ( move ua , ua + 2 ; move 3 , 3 ) ; move 3 , 0 )  | ( move ua , 2 ; move 3 + 3 , 3 ; move ul , ua + 4 )  
[1233] ( move ul , 2 ; move 0 - ua , 4 )  | ( move ul , 2 ; pen ul ; move 0 - ua , 4 - ua )  
[1234] ( move 3 , 0 ; move ua + ul , 4 )  | ( move 4 , 0 ; move ua + ul , 4 )  | ( move 4 , ua ; move ua + ul , 4 )  | ( move 3 , 0 ; move ua , 4 ; move ul , 0 )  | ( ( move 3 , 0 ; move ua + ul , 4 ) ; pen ua )  | ( move 4 , ua ; move ua + ul , 4 ; move 0 , ul )  
[1235] ( move ua , 0 - 2 ; move ul , 4 )  | ( move ua , ua - 2 ; move ul , 3 + ul )  | ( move ua , ul - 3 ; pen ul ; move ul , ua + 4 )  | ( move ua , ua - 2 ; v0 = 3 - ua ; move ul , 4 )  | ( move ua , ul - 3 ; ( v0 = 4 ; move ul , v0 ) )  | ( move ua , ul - 3 ; v0 = ul ; move v0 , v0 + 3 )  | ( v0 = 2 ; move ua , ua - v0 ; move ul , v0 * v0 )  
[1236] ( move ua - 3 , 2 ; move ua , 2 )  | ( move 3 , 2 ; move ua , ul + ul )  | ( v0 = 3 ; move v0 , 2 ; move ua , 2 )  | ( move 3 , 2 ; move ua , ua + 2 ; move 0 , ua )  | ( move 3 , 2 ; move ua , ul + ul ; v0 = 2 )  | ( pen ul ; ( move ua - 3 , 2 ; move ua , 2 ) )  | ( move ul , 2 ; move 2 , ua ; move ua , ul + ul )  | ( ( move 3 , 2 ; pen 3 + ul ; pen 3 ) ; move ua , 2 )  | ( v0 = 4 - ul ; move v0 , 2 ; move ua , v0 - ul )  | ( move 3 , 4 / 2 ; pen 3 - 2 ; ( pen ul ; move ua , 2 ) )  
[1237] ( move 0 - 2 , ul ; move ua , 4 )  
[1238] ( move 3 , ua ; move 0 - ua , 4 )  | ( pen ua ; move 3 , ua ; move 0 - ua , 3 + ul )  
[1239] ( move 3 - ua , 0 ; move 3 , ul )  | ( move 3 - ua , ua ; move 3 , ul )  | ( move 3 - ua , 0 ; move 3 , ua + ul ; pen ua + 3 )  | ( ( move 3 - ua , ua * 2 ; pen ua + ul ) ; move 3 , ul )  | ( v0 = 3 ; move v0 - ua , ua * v0 ; move v0 , ul )  
[1240] ( move ua + 3 , 2 ; move 2 , ul )  | ( move 3 * 3 , ul + ul ; move 2 , ul )  
[1241] ( move ul , 2 ; move 3 , 0 - ul )  | ( move ul , ul + ul ; move 3 , ul - 2 )  | ( move ul - 4 , ua + ul ; move ul , 4 )  | ( move ul , 2 ; ( move 3 , ul - 2 ; move 0 , 0 ) )  | ( move ul - 4 , ua + ul ; pen 2 ; move 0 - ul , ul )  | ( move ul , ul + ul ; move 3 , 3 - 4 ; v0 = 2 / 3 )  
[1242] ( move ua , 0 ; move 2 , ul / 2 )  | ( move ua , 0 ; move 2 , 3 / ua )  | ( move ua , ua ; move 2 , ul / 2 )  | ( move ua , 0 - ua ; move 2 , ul / 2 )  | ( pen ul ; move ua , ua ; move 2 , 2 / 4 )  | ( move ua , 0 ; move 0 , 0 ; move ul + ul , ul / 2 )  
[1243] ( move ua + 2 , 2 ; move ua , 4 )  | ( move ua + 2 , 2 ; move ua , 4 ; pen 2 * 2 )  | ( move ua + 2 , 2 ; move 0 , ul ; move ua , 3 )  
[1244] ( move 4 , ua ; move ua + 2 , 2 )  | ( move 4 , 0 ; move ua + 2 , ul + ul )  | ( move 4 , 0 ; move 2 , 2 ; move ua , ua )  | ( move 4 , ua ; move 2 , 2 ; move ua , ua )  | ( move 4 , ua ; move ua + 2 , 2 ; pen ul + ul )  
[1245] ( move ua , 3 + 3 ; move ua , 2 )  
[1246] ( move ul - ua , 0 ; move 2 , 4 )  | ( move ul - ua , ua ; move 2 , 4 )  | ( move ul - ua , 0 ; pen ul ; move 2 , ua + 4 )  | ( pen 2 + ul ; move ul - ua , ua + ua ; move 2 , 4 )  
[1247] ( move 0 - 3 , 3 ; move ua , ul )  | ( move 3 - ua , 3 ; move ua , ul )  | ( move 0 - 3 , ua + 3 ; move ua , ul )  
[1248] ( move ul , 3 ; move ua + 2 , 2 )  | ( move ul , 3 ; move ua + 2 , ul + ul )  | ( move ul , 3 ; pen ul ; move ua + 2 , 2 )  | ( ( move ul , 3 ; move 3 , 2 ; pen ua ) ; move ua - ul , ua )  
[1249] ( move ul , 2 ; move ua + 3 , 2 )  | ( move ul , ul + ul ; move ua + 3 , ua + 2 )  | ( move ul , 2 ; ( move ua + 3 , 2 ; pen 3 ) )  | ( ( move ul , ua + 2 ; pen 2 ) ; move ua + 3 , 2 )  | ( ( move ul , ul ; move ul , ul ) ; move ua + 3 , 2 )  
[1250] ( move ua , 2 ; move ua - 3 , 2 )  
[1251] ( move ua , 0 ; move ul , 2 - 4 )  | ( move ua , ua ; move ul , ul - 3 )  | ( ( move ua , ua ; v0 = 4 ) ; move ul , ua - 2 )  | ( ( move ua , ua ; move ul / ua , 2 - 4 ) ; move ul , ua )  
[1252] ( move ul - 3 , 0 ; move 2 , ul )  | ( move 0 - 2 , 0 ; move 2 , ua + ul )  | ( move ul - 3 , ua ; move ua / 3 , ul )  | ( move 2 - 4 , ua ; move 3 - ul , ul ; v0 = 0 )  | ( move ul - 3 , ua ; move ul + ul , ul ; v0 = ul - 4 )  
[1253] ( move 3 - ua , 0 ; move ua , 4 )  | ( move 3 - ua , ua ; move ua , 4 )  
[1254] ( move 2 , ul - 2 ; move ua , 2 )  | ( move 2 , ua - ul ; move ua , 2 )  | ( move 2 , 0 - ul ; move ua , 2 - ua )  | ( move 2 , ua - ul ; move ua , ua + 2 )  | ( move 2 , ua - ul ; move ua , 2 - ua )  | ( move 2 , ua - ul ; pen 2 ; move ua , 2 )  | ( move 2 , ua - ul ; pen 3 ; move ua , 3 - ul )  | ( move 2 , 0 - ul ; move ua , 2 ; move 0 , ua + ul )  
[1255] ( move 4 , ua ; move ul , 0 - 2 )  | ( move 4 , 0 ; move ul , ul - 3 )  | ( move 4 , ua ; move ul , ul - 3 )  | ( move 3 + ul , 0 ; move ul , 2 - 4 )  | ( move 3 + ul , 0 ; move ul , ua - 2 )  | ( move 4 , ua * 3 ; move ul , ul - 3 )  | ( move 4 , ua ; move ul , ul - 3 ; pen 0 )  | ( move ul , ua + ul ; move 2 - ua , ul - 2 )  | ( move 0 , ua ; move 4 , 0 ; move ul , ua - 2 )  | ( move 4 , ua ; move ul , 0 - 2 ; v0 = ua )  | ( move 4 , 0 ; pen 2 - ul ; move ul , ul - 3 )  | ( v0 = ua - 2 ; move 4 , 0 ; move ul , v0 )  | ( pen 2 / 3 ; move 4 , ua * 4 ; move ul , 0 - 2 )  
[1256] ( move ua , 0 ; move 4 + ul , 3 )  | ( move ua , ua ; move ua - ul , 3 )  | ( move ua , 0 - ua ; move 4 + ul , 3 )  | ( move ua , 0 ; move 4 + ul , 4 - ul )  | ( move ua , 0 ; move 3 , 3 ; move 2 , ua )  | ( move ua , 0 ; move 4 , 3 ; move ul , 0 )  | ( move ua , ua * 3 ; move ul , 3 ; move 4 , 0 )  
[1257] ( move ua , 3 + 2 ; move ul , 2 )  | ( move ua , 4 + ul ; move ul , 2 )  | ( move ua , 3 + 2 ; move ul , ul + ul )  | ( move ua , 4 + ul ; move ul , ul + ul ; pen ua + 4 )  
[1258] ( move ua , 0 ; move 3 - ua , 4 )  
[1259] ( move ua , ul ; move 0 - 2 , 4 )  | ( move ua , ul ; move ul - 3 , 4 )  | ( move ua , ua + ul ; move 2 - 4 , 4 )  | ( pen ua + ua ; move ua , ul ; move ul - 3 , 4 )  | ( pen ua + ul ; move ua , ul ; move ul - 3 , 3 + ul )  
[1260] ( move 2 , 0 ; move 4 - ua , ul )  | ( move 2 , ua ; move 4 - ua , ul )  | ( move ul + ul , ua ; move 4 - ua , ul )  | ( ( move 2 , ua ; pen ul ) ; move 4 - ua , ul )  | ( pen 2 ; ( move 2 , 0 ; move 4 - ua , ul ) ; v0 = 2 )  | ( move 2 , ua ; move 4 - ua , ul ; ( pen 4 ; v0 = 3 ) )  
[1261] ( move 3 , 2 ; move ua + ul , 2 )  | ( move 0 , 0 - ua ; move 3 , 2 ; move ua + ul , ul + ul )  
[1262] ( move 2 , 2 ; move ul - ua , 2 )  
[1263] ( move 0 , ul / 2 ; move ua , 2 )  | ( move 0 , ul ; move ua , 3 / 2 )  | ( v0 = 4 + ul ; move ua , v0 / 2 )  | ( move 0 , 2 ; move ua , ul / 2 ; pen 0 )  | ( move 0 , ul ; move ua , 3 / 2 ; pen 0 )  | ( move 0 , 4 / ua ; move ua , 3 + 2 ; move 0 , 4 )  | ( v0 = 2 ; move 0 , ul / v0 ; move ua , v0 )  | ( move 0 , ul / 2 ; ( v0 = 2 ; move ua , v0 ) )  
[1264] ( move 2 , ua ; move ua , 2 - 3 )  | ( move 2 , 0 ; move ua , ua - ul )  | ( move 2 , ua ; move ua , ua - ul )  | ( move 2 , ua ; move ua , ua - ul ; v0 = 4 )  | ( move 2 , ua ; ( pen ul ; move ua , ul - 2 ) )  | ( ( move 2 , ua ; pen ua ) ; move ua , ua - ul )  | ( v0 = 2 ; move v0 , ua ; move ua , ul - v0 )  | ( ( move 2 , ua ; move ua , 0 - ul ) ; v0 = ua )  
[1265] ( move ua , 0 ; move 2 - 4 , ul )  | ( move ua , ua ; move 0 - 2 , ul )  | ( move ua , ua ; move ul - 3 , ul )  | ( move ua , ua ; move 2 - 4 , ul - ua )  | ( move ua , ua + ua ; move 0 - 2 , 3 - 2 )  | ( move 2 , ua + ul ; move 0 - ua , ua - ul )  | ( move ua , 0 ; move 2 - 4 , ul ; v0 = ul )  | ( ( move ua , 0 ; move 2 - 4 , ul ) ; v0 = ul )  | ( move ua , ua * 3 ; move ul - 3 , ul ; v0 = 3 )  | ( move 2 , ul ; move 0 - ua , ua - ul ; v0 = ua )  | ( v0 = ua + 2 ; move ua , ua ; move 2 , v0 / 2 )  
[1266] ( move ua - 2 , 3 ; move ua , 2 )  | ( ( move ua - 2 , 3 ; move ua , 2 ; pen ul ) ; move 0 , 4 )  
[1267] ( move ul - 3 , ua ; move 2 , 2 )  | ( move ul - 3 , 0 ; ( v0 = 2 ; move v0 , v0 ) )  | ( move ul - 3 , ua ; move 0 , ua + 2 ; move 4 - 2 , 0 )  
[1268] ( move 3 , 0 ; move 4 , ua * ua )  | ( move 3 , 0 ; move 4 , ua * ua ; move ul , ul - 4 )  
[1269] ( move 2 , ua / 2 ; move ua , 2 )  | ( move 2 , ua / 2 ; move ua , 2 ; pen 0 )  | ( pen ua ; move 2 , ua / 2 ; move ua , 2 )  | ( move 0 - 2 , ua ; move 0 - ua , ul + ul )  | ( v0 = 2 ; move ua , v0 ; move v0 , ul - 3 )  
[1270] ( move ua , 4 ; move 0 - 3 , ul )  | ( move ua , 4 ; move ul - 4 , ul )  | ( move ua , ua + 4 ; move ul - 4 , ul )  
[1271] ( move ua + 2 , ua ; move 3 , 4 )  
[1272] ( move 3 , 0 ; move ua , ul / 2 )  | ( move 3 , ua ; move ua , 2 / 4 )  | ( move 2 + ul , ua ; move ua , ul / 2 ; pen ul )  
[1273] ( move 2 , ul ; move ua - 3 , 2 )  | ( move 2 , ul ; pen ua ; move ua - 3 , 2 )  
[1274] ( move ua - ul , 2 ; move 3 , 2 )  | ( move ua - ul , 2 ; move 3 , ul + ul )  
[1275] ( move 3 , ul ; move 0 - 3 , ul )  | ( move 3 , 2 - ul ; move 0 - 3 , ul )  | ( move 4 - ul , ul ; move ul - 4 , ul )  
[1276] ( move ua , 0 ; move 3 , 3 / ua )  | ( move ua , ua ; move 3 , 2 / 4 )  | ( move ua , ua ; move 3 , 3 / ua )  | ( move ua , 0 ; move 2 + ul , ul / 2 )  | ( move ua , ua ; move 2 + ul , ul / 2 )  | ( move ua , 0 ; move 3 , 3 / ua ; move 0 , ua )  
[1277] ( move 3 , 2 ; move 2 , ua * ua )  | ( move 3 , 2 ; move 2 , ua * ua ; pen 2 )  | ( move 3 , 2 ; move 2 , ua * ua ; pen ul / ua )  | ( ( move 2 + ul , 2 ; move ul + ul , ua * ua ) ; pen 3 )  
[1278] ( move 4 + 3 , 0 ; move ul , ul )  | ( move 4 + 3 , ua ; move ul , ul )  | ( move ua + ul , ua ; move ul , ua + ul )  | ( move 2 , 0 ; move 4 + ul , 0 ; move ul , ul )  | ( move 3 * 2 , ua ; move ul , 0 ; move ul , ul )  | ( move 4 + 3 , ua ; ( move ul , ul ; pen ul ) )  | ( pen ua - 4 ; move 4 + 3 , 0 ; move ul , ua + ul )  | ( move 2 + ul , ua ; ( move 4 , ua ; move ul , ul ) )  | ( v0 = ul ; move 4 + 3 , ua * v0 ; move v0 , ul )  | ( move 3 , 0 ; ( move 4 , ua ; move ul , ul ; v0 = 3 ) )  
[1279] ( move 3 , 3 ; move ua + 2 , ul )  | ( move 0 , 0 ; ( move 3 , 3 ; move 2 , ul ) ; move ua , ua )  
[1280] ( move 4 , 0 - 3 ; move ua , ul )  | ( move 4 , ul - 4 ; move 0 , ul ; move ua , ua )  
[1281] ( move 3 , 0 ; move 2 , ul / ua )  | ( move 4 , 0 ; move ul , ul / ua )  | ( move 4 , ua ; move ul , ul / ua )  | ( move 3 , 0 ; move ul + ul , ul / ua )  | ( move 3 , ua ; move 4 - ua , ua - 3 ; move 0 , ua - ul )  
[1282] ( move 0 - 4 , ul ; move 2 , ul )  
[1283] ( move ua + 4 , ul ; move 2 , 2 )  | ( move ua + 4 , ua + ul ; v0 = 2 ; move v0 , v0 )  
[1284] ( move ua - 3 , ul ; move 2 , 2 )  | ( move ua - 3 , ul ; move 4 / 2 , 2 ; move 0 , ua )  
[1285] ( move 2 - ua , 2 ; move ua , 4 )  
[1286] ( move 4 + 2 , ul ; move ua , 2 )  | ( move 3 + 3 , ul ; move ua , 2 )  | ( move 2 , ul ; move 4 , ua ; move ua , 2 )  | ( move 4 + 2 , ul ; move ua , 2 ; pen ul )  | ( move 3 * 2 , 3 - 2 ; pen ul ; move ua , 2 )  | ( move 4 + 2 , ul ; v0 = 2 ; move ua , v0 )  | ( move ul , ul ; ( move 4 + ul , ua ; move ua , 2 ) )  | ( pen ua + ua ; ( move 4 + 2 , ul ; move ua , 2 ) ; pen 0 )  
[1287] ( move ul , 2 ; move ua , 2 - 3 )  | ( move ul , 2 ; move ua , 0 - ul )  | ( move ul , 2 ; move ua , ua - ul )  | ( move 2 - ul , 2 ; move ua , 2 - 3 )  | ( move 0 , 0 ; move ul , 2 ; move ua , 0 - ul )  | ( pen 2 ; move ul , ua + 2 ; move ua , ua - ul )  | ( move ul , 2 ; v0 = 0 - ul ; move ua , v0 )  
[1288] ( move ua , ul ; move 4 , 0 - 3 )  | ( move ua , ul ; move 4 , ul - 4 )  | ( move ua , ul ; pen 2 ; move 4 , ul - 4 )  | ( move ua , ua + ul ; move 4 , ul - 4 ; v0 = ul )  | ( v0 = 4 ; ( move ua , ul ; move v0 , ul - v0 ) )  
[1289] ( move 0 - ul , ul ; move 3 , 3 )  | ( move ul - 2 , ul ; move 3 , 3 )  
[1290] ( move ul , 0 ; move 3 , 2 / ua )  | ( move ul , ua ; move 3 , 2 / ua )  | ( move ul , ua * 4 ; move 3 , 2 / ua )  | ( move ul , ua ; pen ul ; move 3 , 2 / ua )  | ( move ul , 0 ; v0 = ul / 3 ; move 3 , v0 )  | ( move ul , ua ; move 3 , 2 / ua ; v0 = ua + ul )  | ( move ul , ua ; ( move 2 , 2 / ua ; move ul , ua ) )  
[1291] ( move 4 + 2 , 2 ; move ua , ul )  | ( ( move 3 , 2 ; move 3 , ua ) ; move ua , ul )  | ( ( move ua / 2 , 2 ; move 3 , 0 ) ; move ua , ul )  | ( move 2 + 2 , 2 ; move ul + ul , ua ; move ua , ul )  | ( move 4 + 2 , ul + ul ; ( move 0 , ua ; move ua , ul ) )  | ( move 3 + 3 , 2 ; ( move ua , ul ; pen 3 / 2 ; pen 0 ) )  
[1292] ( move 2 , ul - 2 ; move 2 , ul )  | ( move 3 - ul , ul - 2 ; move 2 , ul )  | ( move 2 , ua - ul ; move 2 , ul ; pen 0 )  | ( move 4 / 2 , 0 - ul ; move 2 , 3 - 2 )  | ( move 4 / 2 , ua - ul ; move ul + ul , ul )  | ( pen ua ; ( pen ua ; move 2 , ua - ul ) ; move 2 , ul )  | ( v0 = 2 - 4 ; move v0 , 0 ; move v0 , v0 + ul )  | ( move 0 , ua ; move 2 , ua - ul ; move ul + ul , ul - ua )  | ( v0 = ul - 3 ; move v0 , ua ; move v0 , ul + v0 )  
[1293] ( move ua , 2 ; move 3 - ua , 3 )  | ( move ua , 2 ; move 3 - ua , 3 - ua ; pen ul )  
[1294] ( move ua , ul ; move 2 , 4 + 2 )  | ( pen ul ; move ua , ul ; move 2 , 4 + 2 )  | ( move ua , ul ; v0 = 3 + 3 ; move 2 , v0 )  | ( move ua , ul ; v0 = 2 ; move v0 , 4 + v0 )  | ( move ua , ul ; v0 = 2 ; move v0 , 3 * v0 )  | ( move ua , ul ; move 0 , 4 ; ( move 2 , ua + 2 ; pen 0 ) )  
[1295] ( move 0 , 2 / 3 ; move ua , ul )  | ( move 0 , 2 / 3 ; v0 = 2 ; move ua , ul )  
[1296] ( move 0 - 3 , ua ; move 4 , ul )  | ( move ul - 4 , 0 ; move 4 , ul )  | ( move ul - 4 , ua ; move 4 , ul )  | ( move ul - 4 , ua ; move 4 , 2 - ul )  | ( move ul - 4 , 0 ; pen 2 ; move 4 , ul )  | ( ( move ul - 4 , ua ; v0 = 3 ) ; move 4 , v0 - 2 )  
[1297] ( move 2 , ua - 4 ; move ua , 2 )  | ( move 2 , ua - 4 ; move ua , 3 - ul )  | ( move ul + ul , ua - 4 ; move ua , 3 - ul )  | ( pen ua + 4 ; move 2 , ua - 4 ; move ua , 2 )  
[1298] ( move ua - 2 , 2 ; move ua , 4 )  | ( move ua - 2 , 2 ; move ua , ua + 4 )  
[1299] ( move ul , 0 - ul ; move 4 , 2 )  | ( move ul , ul - 2 ; move 4 , 2 )  | ( move ul , ua - ul ; move 4 , 2 )  | ( move ul , ua - ul ; move 4 , 3 - ul )  | ( move ul , 0 - ul ; move 0 , ul ; move 4 , ul )  | ( move ul , 0 - ul ; v0 = ul + ul ; move 4 , v0 )  
[1300] ( move ua , 0 ; move ul - 3 , 4 )  | ( move ua , ua ; move 2 - 4 , 4 )  | ( move ua , ua ; move ul - 3 , 4 )  | ( ( move ua , 0 ; move 2 - 4 , 4 ) ; v0 = 2 )  | ( ( move ua , ua ; v0 = 3 ) ; move ul - v0 , 4 )  
[1301] ( move ul - 2 , 2 ; move ua , 3 )  | ( move ul - 2 , ul + ul ; move ua , 3 )  | ( pen ul ; move 0 - ul , 2 ; move ua , 3 )  | ( move 0 - ul , 2 ; move ua , 3 ; v0 = 3 )  
[1302] ( move ua , 3 ; move 3 , ua - 2 )  | ( move ua , 3 ; move 3 , ul - 3 )  | ( move ua , 3 ; move 2 , ul - 3 ; move ul , 0 )  
[1303] ( move 2 , ua - 3 ; move 2 , ul )  | ( move 2 , ua - 3 ; move 2 , ua + ul )  | ( move 2 , ua - 3 ; move ul + ul , ul - ua ; pen 0 )  | ( ( move ul + ul , ua - 3 ; move 2 , ul ; pen 3 ) ; pen ua )  
[1304] ( move 2 , ul ; move 2 - ua , 3 )  | ( move 2 , ua + ul ; move 2 - ua , 3 )  | ( ( move ul + ul , ul ; pen ua ) ; move 2 - ua , 3 )  
[1305] ( move 3 , ua ; move ua - 3 , 2 )  | ( move 3 , 0 ; move ua - 3 , 2 ; pen ua )  | ( move 3 , ua * 3 ; move ua - 3 , 4 - 2 ; pen ul - ua )  
[1306] ( move ul , 2 - 3 ; move ua , 2 )  | ( move ul , 0 - ul ; move ua , 2 )  | ( move 0 - ua , ul ; move ul , ul )  | ( move ul , ua - ul ; move ua , 2 )  | ( move ul , 2 - 3 ; move ua , ua + 2 )  | ( move ul , 0 - ul ; move ua , 4 - 2 )  | ( move ul , ul - 2 ; move ua , 2 ; v0 = ul )  | ( ( move ul , ua - ul ; pen ul ; pen 3 ) ; move ua , 2 )  | ( ( move ul , 3 - 4 ; pen ul ) ; v0 = ua ; move ua , 2 )  
[1307] ( move 2 , 2 + ul ; move 3 , ul )  | ( move 2 , 3 ; move 2 + ul , ul )  | ( move ul + ul , 3 ; move 3 , ul )  | ( pen 3 ; move 2 , 3 ; move 3 , ul )  | ( move 2 , 3 ; move 3 , ul ; pen 3 )  | ( move 4 / 2 , 4 - ul ; move 3 , ul )  | ( move 2 , 3 ; v0 = ul ; move 3 , ul )  | ( move 2 , 3 ; pen ua + ua ; move 3 , ul )  | ( move 3 - ul , 2 + ul ; move 4 - ul , ul )  | ( v0 = 3 ; move 2 , v0 ; move v0 , ul )  | ( move ul + ul , 3 ; move 4 - ul , ul - ua )  | ( v0 = 3 ; move 2 , v0 ; move v0 , v0 - 2 )  | ( move 2 , 3 ; ( move 3 , ul ; move 0 , ul ) ; v0 = ul )  | ( pen ua ; move 0 , 2 ; ( move ul + ul , ul ; move 3 , ul ) )  
[1308] ( move ua , 2 ; move ua + 3 , 4 )  
[1309] ( move 4 , ua ; move ua + 2 , 3 )  
[1310] ( move ua + 2 , 2 ; move 4 , ul )  
[1311] ( move 2 , 0 ; move ul - 4 , ul )  | ( move 2 , ua ; move ul - 4 , ul )  | ( move 2 + ul , ul ; move ul - 3 , ua - ul )  | ( move ul + ul , ua ; pen 3 ; move ul - 4 , ul )  
[1312] ( move ua , 0 - 3 ; move 4 , ul )  | ( move ua , ua - 3 ; move 4 , ul )  
[1313] ( move 3 / 2 , 0 ; move ua , ul )  | ( move 3 / 2 , ua ; move ua , ul )  | ( move ua / 4 , ua ; move ua , ul ; v0 = ul )  | ( move ua / 4 , ua ; pen 3 ; move ua , ua + ul )  | ( ( move ua / 4 , ua ; pen ua ; pen 2 ) ; move ua , ul )  | ( move 3 - 2 , ua ; move ul / 2 , 0 ; move ua , ul - ua )  
[1314] ( move ua - ul , 0 ; move 3 , 4 )  | ( move ua - ul , ua ; v0 = 3 ; move v0 , 4 )  | ( move ua - ul , 0 ; ( move 3 , ua + 4 ; v0 = ul ) )  
[1315] ( move ua , ul - 3 ; move 2 , 2 )  | ( move ua , ua - 2 ; v0 = ul ; move 2 , 2 )  | ( move ua , ul - 3 ; move 2 , 2 - ua ; move 0 , 4 )  
[1316] ( move ul , 0 ; move ua , 3 - 4 )  | ( move ul , 0 ; move ua , 0 - ul )  | ( move ul , ua ; move ua , 3 - 4 )  | ( move ul , 0 ; move ua , ua - ul )  | ( move ul , ua ; move ua , 0 - ul )  | ( move ul , ua ; move ua , ul - 2 )  | ( move ul , ua ; move ua , ua - ul )  | ( move 2 - ul , ua ; move ua , ul - 2 )  | ( move ul , ua * 2 ; move ua , ua - ul )  | ( move ul , ua ; pen ua ; move ua , 3 - 4 )  | ( move ul , 0 ; pen ua ; move ua , ua - ul )  | ( move ul , ua ; pen ul ; move ua , ul - 2 )  | ( move ul , ua ; pen 4 ; move ua , ua - ul )  | ( move ul , ua ; move ua , ua - ul ; pen 4 )  | ( move ul , ua * 2 ; pen 2 ; move ua , 2 - 3 )  | ( move ul , ua ; move ua , 3 - 4 ; v0 = ua )  | ( move ul , ua ; move ua , 0 - ul ; pen ua * 2 )  | ( ( pen ul ; move ul , 0 ) ; move ua , ua - ul )  | ( ( move ul , ua ; v0 = ua ) ; move ua , 0 - ul )  | ( ( move ul , 0 ; move ua , ua - ul ) ; pen ua + 2 )  | ( v0 = ua ; move ul , v0 ; move v0 , v0 - ul )  | ( move ul , ua ; v0 = 0 - ul ; move ua , v0 - ua )  | ( move 2 - ul , 0 ; ( move ua , 3 - 4 ; pen 3 ; pen 4 ) )  | ( ( pen 2 ; move ul , 0 ) ; move ua , 2 - 3 ; pen 4 + ul )  
[1317] ( move 3 , 0 - 3 ; move ul , ul )  | ( move 3 , ua - 3 ; move ul , ul )  | ( move 3 , ul - 4 ; move ul , ul )  | ( move 3 , ul - 4 ; pen ua - 4 ; move ul , ul )  | ( move 3 , ua - 3 ; move ul , ul ; pen ua - ul )  | ( move 3 , 0 - 3 ; v0 = ul ; move v0 , v0 )  | ( move 3 , 0 - 3 ; ( v0 = ul ; move v0 , ul ) )  
[1318] ( move 0 , 2 ; move ua , 4 / ua )  | ( move 0 , ua - ul ; move ua , 3 / ua )  | ( v0 = ul - 3 ; move ua , ul / v0 )  | ( ( pen ul ; v0 = ua - ul ) ; move ua , v0 / 2 )  
[1319] ( move ul , ua ; move 3 , 3 + 2 )  | ( move ul , 0 ; move 3 , 4 + ul )  | ( move ul , ua + ua ; move 3 , 4 + ul )  | ( pen ul ; move ul , ua ; move 3 , 3 + 2 )  | ( pen ul ; ( move ul , ua ; move 3 , 4 + ul ) )  | ( move ul , ua ; v0 = 4 + ul ; move 3 , v0 )  | ( move ul , 0 ; move 3 , 4 + ul ; move 0 , 4 - ul )  | ( move ul , ua ; move 0 , ul + ul ; move 3 , ua + 3 )  
[1320] ( move 3 , 2 ; move ua - ul , 2 )  | ( v0 = ul + ul ; move 3 , 2 ; move ua - ul , v0 )  
[1321] ( move ua + 2 , 4 ; move ul , 2 )  | ( move ua , 3 + ul ; move 2 , ua ; move ul , ul + ul )  
[1322] ( move 2 , 3 ; move ua - 2 , ul )  | ( ( move 2 , 3 ; move ua - 2 , ul ) ; pen ul )  
[1323] ( move 3 , 0 - ul ; move ul , 3 )  | ( move 3 , ua - ul ; move ul , 3 )  | ( move 4 - ul , ul - 2 ; move ul , 3 )  | ( move 2 + ul , ua - ul ; move ul , 3 )  | ( move 3 , ua - ul ; move 0 - ul , ul / ua )  | ( move 3 , ul - 2 ; move 0 , 2 ; move ul , ul )  | ( move 3 , ua - ul ; move ul , 3 ; pen ul - 4 )  | ( move 2 + ul , ul - 2 ; move 0 , ul ; move ul , 2 )  | ( v0 = 3 ; move v0 , v0 - 4 ; move ul , v0 )  | ( move 2 , ua - ul ; ( move ul , ua ; move ul , 3 ) )  | ( move 4 - ul , ua - ul ; move ul , 3 ; pen ua - 4 )  
[1324] ( move 3 , ua ; move 3 + 2 , ul )  | ( move 3 , 0 ; move 4 + ul , ul )  | ( move 3 , ua ; move 4 + ul , ul )  | ( move 3 , ua ; pen 4 ; move 4 + ul , ul )  | ( move 3 , ua ; move ul , ul ; move 4 , ua )  | ( move 3 , ua * 4 ; move 4 + ul , ul - ua )  | ( move 3 , ua ; move 4 , ul ; move 2 - ul , 0 )  | ( move 3 , 0 ; move 3 + ul , ul ; move ul , ua )  | ( ( move 3 , ua ; move 4 , ua + ul ) ; move ul , ua )  | ( move 3 , 0 ; move ul , ul ; ( pen ul ; move 4 , 0 ) )  | ( ( move 3 , ua ; v0 = ul ) ; move v0 + 4 , v0 )  | ( move ul , ua ; ( move 2 , 0 ; move 3 , ul ) ; move 2 , ua )  | ( ( move 3 , ua ; move ul , ul ; move 4 , 0 ) ; v0 = ua )  
[1325] ( move 4 - ua , 0 ; move ua , 4 )  | ( move 4 - ua , ua ; move ua , 4 ; v0 = ul - 3 )  
[1326] ( move ua + ul , 0 ; move 4 , 4 )  | ( pen ul ; ( move ua + ul , ua ; move 4 , 4 ) )  | ( move ua + ul , 0 ; move 4 , 4 - ua ; pen 2 + ul )  | ( move ua + ul , ua ; move 4 , 4 - ua ; move 0 , 0 - ul )  
[1327] ( move ul , 0 ; move 4 + 3 , ul )  | ( move ul , ua ; move 3 , ul ; move 4 , 0 )  | ( move ul , ua ; move 4 , ul ; move 3 , ua )  | ( pen 4 + ul ; move ul , ua ; move 4 + 3 , ul )  
[1328] ( move 3 + 2 , ul ; move 2 , ul )  | ( move 4 + ul , ul ; move 2 , ul )  | ( move 4 + ul , ul ; move 2 , 2 - ul )  | ( move 3 + 2 , ul ; move ul + ul , ul )  | ( move 3 + 2 , ul ; move 2 , ul ; pen 4 )  | ( move 4 , ul ; move ul , 0 ; move 2 , ul )  | ( move ul , ul ; move 4 , ua ; move 2 , ul )  | ( move 3 , ul ; move 2 , 0 ; move 3 - ul , ul )  | ( move 2 , ul ; ( move 3 , ua ; move 2 , ul ) )  | ( move 4 + ul , ul ; pen 3 + ul ; move 2 , ul )  | ( move ul , ul ; move 4 , ua ; move ul + ul , ul )  | ( move 4 + ul , ul ; move ul + ul , ul ; move 0 , ul )  | ( move 4 + ul , ua + ul ; move 2 , ul ; v0 = 0 - 3 )  | ( v0 = ul ; move 3 + 2 , v0 ; move 2 / v0 , v0 )  | ( move 4 + ul , ul ; ( move 2 , ua + ul ; v0 = ul ) )  | ( move 4 + ul , ul ; v0 = 3 - ul ; move ul + ul , ul )  
[1329] ( move ua + ul , 2 ; move 4 , 2 )  | ( move ua + ul , 2 - ua ; move 4 , 2 )  | ( move ua , ua + 2 ; move ul , ua ; move 4 , 2 )  
[1330] ( move ua - 2 , 3 ; move ua , 3 )  
[1331] ( move 3 - ua , ua ; move 2 , 3 )  
[1332] ( move ua , 2 ; move ul , 3 + 3 )  | ( move ua , 3 - ul ; move ul , 3 * 2 )  | ( move ua , 3 - ul ; move ul , 4 + 2 ; move 0 , 4 )  | ( ( move ua , 2 ; move 3 / 4 , 3 + 3 ) ; v0 = 2 )  | ( move 4 + 2 , ul + ul ; move ul - 2 , 3 ; move ul , 0 )  
[1333] ( move ua , 0 ; move 4 , ul - 3 )  | ( move ua , 0 ; move 3 + ul , ul - 3 ; v0 = 0 )  | ( v0 = ua ; ( move v0 , 0 ; move 4 , ua - 2 ) )  
[1334] ( move 2 - ua , ul ; move 3 , 2 )  | ( move 2 - ua , ul ; move 2 + ul , 2 )  
[1335] ( move ua , 4 ; move 2 - ua , 2 )  | ( move ua , ua + 4 ; move 2 - ua , 2 )  
[1336] ( move ua , 4 ; move ua + 3 , 2 )  | ( move ua , ua + 4 ; move ua + 3 , 4 - 2 )  | ( move ua , ua + 4 ; move ua + 3 , 2 ; pen 2 )  | ( ( move ua , 4 ; move ua + 3 , ul + ul ) ; v0 = ua )  
[1337] ( move ua + 3 , 4 ; move ua , 2 )  
[1338] ( move 4 , 2 ; move ua + ul , 2 )  | ( move 4 , 2 ; move ul , 2 ; move ua , ua )  
[1339] ( move 3 , 0 - ul ; move 3 , ul )  | ( move 3 , ul - 2 ; move 3 , ul )  | ( move 2 + ul , ul - 2 ; move 3 , ul )  | ( move 2 + ul , ua - ul ; move 3 , ul )  
[1340] ( move ua , 3 ; move 4 , 0 - ul )  | ( move ua , 2 + ul ; move 4 , 0 - ul )  | ( move ua , 3 ; move 3 + ul , ul - 2 )  | ( move ua , 3 ; move 3 + ul , ua - ul )  | ( move ua , 3 ; move 4 , 0 - ul ; v0 = 3 )  
[1341] ( move 2 , 3 ; move ua + ul , 3 )  | ( move ul , 3 ; move ua + ul , 3 )  | ( move 2 , 3 ; pen 2 ; ( move ua + ul , 3 ; pen ua ) )  
[1342] ( move 0 - 4 , ul ; move ua , 3 )  | ( move 2 - ua , ul ; ( pen ua ; move ua , 2 + ul ) )  
[1343] ( move ua + ul , 4 ; move 2 , 2 )  | ( move ua + ul , 4 ; move ul + ul , 3 - ul )  | ( move ua , 4 ; move ul , 0 ; move 2 , ua + 2 )  | ( pen 4 ; move ua + ul , 4 ; move ul + ul , 2 )  | ( move ul , 4 ; move ua , ua ; move ul + ul , 2 )  | ( move ua + ul , 4 ; pen ua ; move 2 , ul + ul )  | ( move ua + ul , 4 - ua ; move ua - 4 , ul + ul )  
[1344] ( move 2 , 0 ; move 3 , ul / ua )  | ( move 3 - ul , ua ; pen ua ; move 3 , ul / ua )  
[1345] ( move ul , 4 ; move 0 - ua , 3 )  | ( move 0 - ua , 4 + 3 ; move ul , 3 )  | ( move ul , 4 ; move 0 - ua , 3 ; move 0 , ua )  | ( move ul , 4 ; move 0 , 3 ; move ua , ua / 2 )  | ( pen ua ; move ua , 4 + 3 ; move ul , ul / 4 )  | ( move ua , 4 + 3 ; move 2 - ul , ul / 4 ; pen 0 )  
[1346] ( move 3 + 2 , 2 ; move ul , ul )  | ( move 4 + ul , 2 ; move ul , ul )  | ( move 4 + ul , 2 ; move ul , 2 - ul )  | ( move 4 + ul , 2 - ua ; move ul , ul )  | ( move 4 + ul , ul + ul ; move ul , ul )  | ( move 3 , ua + 2 ; move 2 , ua ; move ul , ul )  | ( move 3 , 2 ; move ul + ul , 0 ; move ul , ul )  | ( move 4 + ul , 2 ; move ul , ul - ua ; pen 3 )  | ( move ul , 2 ; move 3 + ul , ua ; move ul , ua + ul )  | ( move 4 + ul , ul + ul ; move 0 , ul ; move ul , ua )  | ( move 3 + 2 , 2 ; ( move 4 - 3 , ul ; v0 = ul ) )  | ( v0 = ul + ul ; move v0 + 3 , v0 ; move ul , ul )  | ( ( move ul , 2 ; move 3 + ul , 0 ; move ul , ul ) ; pen 0 )  
[1347] ( move ul , 0 ; move ua , 3 / 2 )  | ( move ul , 0 ; move ua , 3 / 2 ; move 0 , 2 - ua )  | ( move ul , 0 ; move ua , 3 / 2 ; move ul - 4 , 0 )  
[1348] ( move ua , ua - 2 ; move 4 , 2 )  | ( ( move ua , ua - 2 ; move 4 , 2 ) ; v0 = 0 )  | ( pen 4 * 4 ; move ua , 0 - 2 ; move 4 , 2 - ua )  
[1349] ( move 3 , 0 ; move 4 - ua , ul )  | ( move 3 , ua ; v0 = ul ; move 4 - ua , v0 )  | ( move 3 , 0 ; pen ua - 2 ; move 4 - ua , 2 - ul )  
[1350] ( move 0 - ua , ul ; move 3 , 4 )  | ( move 0 - ua , ul ; move 3 , 3 + ul )  
[1351] ( move 3 , ul ; move 2 , ua - 2 )  | ( move 3 , 4 - 3 ; move 2 , ua - 2 )  | ( move 3 , ul ; move ul + ul , ul - 3 )  | ( move 3 , ul ; move 3 - ul , ua - 2 ; move 0 , 0 )  | ( ( move 3 , ul ; move ul , ul - 3 ) ; move ul , ua )  | ( pen 4 ; ( move 4 - ul , 2 - ul ; move 2 , 2 - 4 ) )  
[1352] ( move ua , 4 + 2 ; move ul , 2 )  | ( move ua , 4 + 2 ; move 2 - ul , 0 - 4 )  | ( move ua , 3 * 2 ; move 0 , ul ; move ul , ul )  | ( move ua , 3 * 2 ; move ul , 2 ; v0 = 4 / 2 )  
[1353] ( move 3 , 3 ; move 0 - ul , ul )  | ( move ul , 4 ; move 3 , ua / 3 )  | ( move 2 + ul , 2 + ul ; move ul - 2 , ul )  
[1354] ( move ua , 0 ; move 4 , ua - 4 )  | ( move ua , ua ; move 4 , ua - 4 )  | ( move ua , ua * 2 ; move 3 + ul , ua - 4 )  | ( move ua , ua ; move 4 , ua - 4 ; v0 = ua )  | ( pen ua ; ( move ua , ua ; move 4 , ua - 4 ) )  
[1355] ( move ua , 2 ; move 3 , ul - 2 )  
[1356] ( move 0 , ul / 3 ; move ua , 2 )  | ( move ul / ua , 2 / ua ; move ua , 2 )  | ( ( move 0 , 2 ; move ua , 2 / ua ) ; v0 = 4 )  
[1357] ( move ul - 4 , 0 ; move ul , 2 )  | ( move ul , 0 - ul ; move 3 , ul )  | ( move ul , ua - ul ; move 3 , ul )  | ( move ul , 0 - ul ; move 3 , ul - ua )  | ( move ul - 4 , 0 ; move ul , ul + ul )  | ( move ul , ul - 2 ; move 2 + ul , ul )  | ( move ul - 4 , 0 ; move ul , ua * ua )  | ( move 0 - 3 , 0 ; move 2 - 3 , 4 + ul )  | ( pen 4 ; move ul , ul - 2 ; move 3 , ul )  | ( move ul , 0 - ul ; move 3 , ul ; v0 = 4 )  | ( move ul , ul - 2 ; pen ua ; move 3 , 3 - 2 )  | ( move ul - 4 , ua ; move ul , 2 ; pen ua + ua )  | ( move 0 - 3 , ua ; move 0 , 2 ; move 4 - 3 , 0 )  | ( move ul , 3 - 4 ; move 0 , ul ; move 4 - ul , ua )  | ( ( move ul - 4 , 0 ; v0 = 2 ) ; move ul , v0 )  
[1358] ( move 3 , ul ; move ua , 0 - 4 )  | ( move 3 , ul ; move ua , ua - 4 )  | ( move 3 , ul ; pen ul ; move ua , 0 - 4 )  | ( move 3 , ua + ul ; v0 = ua ; move v0 , v0 - 4 )  
[1359] ( move 4 + ul , 0 ; move ul , 3 )  | ( move 4 + ul , ua ; move ul , 3 )  | ( move ua - ul , ua ; move ul , 3 )  | ( move ul , 0 ; move 4 , ua ; move ul , 3 )  | ( move 4 + ul , ua ; move ul , 3 ; pen 3 )  | ( ( move 4 , 0 ; move ul , ua ) ; move ul , 3 )  | ( move 4 , ua * 2 ; move ul , ua ; move ul , 3 )  | ( move ul , 0 ; ( move ul , 0 ; move 3 , ua ) ; move ul , 3 )  
[1360] ( move ul , ul ; move 3 + 2 , 2 )  | ( move ul , ul ; move 4 + ul , 2 )  | ( move ul , ua + ul ; move 4 + ul , 2 )  | ( move ul , ul ; move 4 + ul , ul + ul )  | ( move ul , ul ; move 3 + 2 , 2 ; move 0 , 3 )  | ( move ul , ul - ua ; move 3 , 2 ; move 2 , 0 )  | ( ( move ul , ul ; move ul , ua + 2 ) ; move 4 , ua )  | ( move ul , 2 - ul ; move 4 + ul , ul + ul ; pen ul )  | ( move ul , ul ; move 4 + ul , 2 ; ( pen ua ; pen 3 ) )  | ( ( move ul , ul ; pen ua ) ; pen ua + ua ; move 3 + 2 , 2 )  
[1361] ( move 2 , ul ; move ua , 3 + 3 )  | ( move 2 , ul - ua ; move ua , 4 + 2 )  | ( move 2 , ul ; move 0 , 3 ; move ua , 3 )  | ( move 2 , ul ; move ua , 3 * 2 ; v0 = ua * 2 )  | ( move ul + ul , ul ; v0 = 3 * 2 ; move ua , v0 )  | ( move 2 , ul ; ( move ua , 3 * 2 ; move 0 , ul + ul ) )  
[1362] ( move ua , 0 ; move ul , 2 / 3 )  | ( move ua , ua ; move ul , 4 / ua )  | ( pen ul + ul ; ( move ua , ua ; move ul , 2 / 3 ) )  | ( move ua , 0 ; pen ul ; ( pen ua + 4 ; move ul , 4 / ua ) )  
[1363] ( move ua , 2 - 3 ; move 2 , ul )  | ( move ua , ul - 2 ; move 2 , ul )  | ( move ua , ua - ul ; move 2 , ul )  | ( move ua , ua - ul ; move 3 - ul , ul )  | ( move ua , ua - ul ; move ul + ul , ul )  | ( move ua , 0 - ul ; pen ua ; move 2 , ul )  | ( pen ua ; move ua , ul - 2 ; move 2 , ul )  | ( move ua , ua - ul ; pen 3 ; move ul + ul , ul )  | ( move ua , 2 - 3 ; move 2 , 2 - ul ; v0 = 3 )  | ( ( move ua , ul - 2 ; move 2 , ul ; pen 3 ) ; pen 4 )  
[1364] ( move 4 , ul ; move 0 - ua , 3 )  | ( move ua , 4 ; move 3 + ul , ul / ua )  
[1365] ( move 2 - 3 , 2 ; move ua , ul )  | ( move ul - 2 , 2 ; move ua , ul )  | ( move 0 - ul , ul + ul ; move ua , ul )  | ( move ul - 2 , 2 ; pen ul ; move ua , ul )  | ( move 2 - 3 , 2 ; move ua , ul ; v0 = ua )  | ( move 0 - ul , 3 - ul ; move ua , ul ; pen ua + ua )  | ( move ul - 2 , ul + ul ; move ua , ul ; v0 = 2 - 4 )  
[1366] ( move 3 , 3 ; move ua + ul , 2 )  | ( move 3 , 3 ; move ua + ul , 2 ; pen 4 )  
[1367] ( move ua - 3 , ua ; move 3 , 2 )  
[1368] ( move ua + ul , 3 ; move 2 , 3 )  | ( ( move ua , 3 ; move ul , ua + ua ) ; move 2 , 3 ; pen ua )  
[1369] ( move ul , 3 ; move 0 - ua , 4 )  
[1370] ( move ul - 4 , 0 ; move 2 , ul )  | ( move ul - 4 , 0 ; move ul + ul , ul ; pen ul )  | ( move ul - 4 , ua ; v0 = 2 ; move v0 , ul )  | ( move 0 - 2 , ul ; pen ua - ul ; move 4 - ul , ua - ul )  
[1371] ( move 4 , ul ; move 2 , 0 - ul )  | ( move 2 , ua / 2 ; move 4 , ul )  | ( move 4 , ul ; move 2 , ua - ul )  | ( move 4 , ul ; move ul + ul , 2 - 3 )  | ( move 4 , ul ; move ul - 3 , ua / 3 )  | ( move 4 , ul ; move ul , 0 - ul ; move ul , ua )  | ( move 4 , ul ; move ul , ua - ul ; move ul , 0 )  | ( pen ul ; move 4 , ul ; move 3 - ul , ua - ul )  | ( ( move 3 , ul ; move ul , 0 ) ; move 2 , ua - ul )  
[1372] ( move ua , 2 ; move 2 , ul / 2 )  | ( v0 = 2 ; move ua , v0 ; move v0 , ul / v0 )  
[1373] ( move 0 - ul , ul ; move 4 , 3 )  | ( move 0 - ul , ul ; move 3 + ul , 3 )  | ( move ul - 2 , ul - ua ; move 4 , 3 )  | ( move ul - 2 , ul ; move 4 , 3 ; pen ul )  
[1374] ( move 2 , ul ; move 4 - ua , 2 )  | ( move 2 , ul - ua ; move 4 - ua , 2 )  
[1375] ( move 2 , ul ; move ul - 3 , 2 )  | ( move 2 , ul ; move 0 , 2 ; move 2 , ua / 2 )  | ( move ul + ul , ul ; move 2 - 4 , 2 ; v0 = 0 )  | ( v0 = 2 ; move v0 , ul ; move v0 - 4 , v0 )  | ( move 2 , ua + 3 ; v0 = ul - 3 ; move v0 , v0 )  
[1376] ( move 3 , 4 + 2 ; move ua , ul )  | ( move 3 , 3 * 2 ; move ua , ul ; pen ua )  
[1377] ( move ul , 4 + 3 ; move ua , 2 )  | ( move ul , 4 + 3 ; move ua , 2 ; pen 3 - ul )  | ( move ul , 4 + 3 ; v0 = ua ; move v0 , ua + 2 )  
[1378] ( move ua , 4 ; move 2 , ua - 3 )  | ( move ul , ul ; ( move ua , 3 ; move 2 , ua - 3 ) )  
[1379] ( move 2 , 3 ; move ua , ua - 4 )  
[1380] ( move 3 + 2 , ul ; move 3 , ul )  | ( move 4 + ul , ul ; move 3 , ul )  | ( move 4 + ul , ul ; move 3 , ul - ua )  | ( move 4 + ul , ul ; move 2 + ul , ua + ul )  | ( move 4 + ul , ul ; ( move 3 , ul ; pen 2 ) )  | ( move 3 + 2 , ul ; move 2 , ul ; move ul , ua )  | ( pen 3 - ul ; move 4 + ul , ul ; move 3 , ul )  | ( pen ua + ul ; move 4 + ul , ul ; move 3 , ul )  | ( move 4 + ul , ul ; v0 = 4 - ul ; move 3 , ul )  | ( move 4 + ul , ul ; v0 = ul - ua ; move 3 , ul )  
[1381] ( move ul , 3 ; move ua + 2 , 4 )  | ( move ul , 3 ; move 4 + 4 , 3 + ul )  | ( v0 = ua + 2 ; move ul , 3 ; move v0 , 4 )  
[1382] ( move ua , 4 + 3 ; move ul , 2 )  
[1383] ( move 2 , ul ; move ua - 2 , 4 )  | ( move 2 , ul ; move ua - 2 , 3 + ul ; move 0 , 3 - ua )  
[1384] ( move ul , ul ; move 3 , 0 - 4 )  | ( move ul , ul ; move 3 , ua - 4 )  | ( move ul , ua + ul ; move 2 + ul , ua - 4 )  
[1385] ( move 3 , 3 ; move 2 , ua * ua )  | ( move 3 , 3 ; ( move ul , ua * ua ; move ul , ua ) )  
[1386] ( move ua , 2 ; move ua , 4 * 2 )  | ( pen ua ; move ua , ul + ul ; move ua , 4 * 2 )  
[1387] ( move ua , 3 ; move 2 , ul - 3 )  
[1388] ( move ul , 0 ; move 4 , ua - 4 )  | ( move ul , ua ; move 4 , ua - 4 )  
[1389] ( move ul - 4 , 0 ; move 3 , ul )  | ( move ul - 4 , 0 ; move 0 , ua ; move 3 , ul )  
[1390] ( move 3 , ul ; move 4 , 0 - ul )  | ( move 3 , ul ; move 4 , ul - 2 )  | ( move 4 , ua / 2 ; move 3 , ul )  | ( move 3 , ul ; move 4 , ua - ul )  | ( move 3 , ul ; move 4 , ul - 2 ; v0 = 3 )  | ( move 3 , ul ; ( move 4 , ua - ul ; pen 2 ) )  | ( move 4 - ul , ul ; move 0 , 0 - ul ; move 4 , 0 )  
[1391] ( move ul , 2 ; move ua / 2 , 2 )  | ( move ul , 2 ; move ua / 2 , ua + 2 )  | ( move ul , 2 ; move ua - 3 , ul + ul )  | ( v0 = ua / 2 ; move ul , 2 ; move v0 , 2 - ua )  
[1392] ( move 4 , 3 ; move ul , 0 - ul )  | ( move 4 , 3 ; move ul , ul - 2 )  | ( move 3 + ul , 3 ; move ul , 0 - ul )  | ( move 4 , ua + 3 ; v0 = ul ; move v0 , ua - ul )  | ( ( move 4 , 3 ; pen ul ) ; move ul , 0 - ul ; pen ua )  
[1393] ( move ul - 4 , ua ; move 2 , 2 )  | ( move ul - 4 , ua ; v0 = 2 ; move 2 , v0 )  | ( move ul - 3 , 2 ; move 3 , ul - 3 ; v0 = 2 )  
[1394] ( move ua , ua ; move 2 / 3 , 2 )  
[1395] ( move ua - ul , 0 ; move 4 , 4 )  | ( move ua - ul , 0 ; move 4 , 4 ; pen 3 - ua )  | ( ( move ua - ul , ua ; move 4 , 4 ) ; pen 4 * 3 ; pen ua )  
[1396] ( move 4 , ul ; move ua - 2 , 2 )  | ( move 4 , ul ; move ua - 2 , 2 ; ( pen ua - ul ; pen 0 ) )  
[1397] ( move ul , 0 ; move ua , 2 / 4 )  | ( move ul , 0 ; move ua , ul / 2 )  | ( move ul , 0 ; move ua , 3 / ua )  | ( move ul , ua ; move ua , 2 / 4 )  | ( move ul , ua ; move ua , ul / 2 )  | ( move ul , ua * 4 ; move ua , ul / 2 )  | ( move ul , ua + ua ; move ua , ul / 2 )  | ( pen ul ; move ul , ua ; move ua , ul / 2 )  | ( move ul , ua ; move ua , ul / 2 ; v0 = ul )  
[1398] ( move 4 , ua - 2 ; move ua , 3 )  | ( move 3 , ul - 3 ; move 3 + 3 , 4 - ul )  
[1399] ( move 3 , 2 ; move 3 , ul + ul )  | ( move 4 - ul , ul + ul ; move 3 , 3 - ul )  | ( pen ua / 3 ; move 3 , 2 ; move 3 , ul + ul )  | ( move 3 , 2 ; move ul , 2 ; move ul + ul , ua )  | ( v0 = 4 ; move v0 - ul , 2 ; move 3 , 2 )  
[1400] ( move ul , 2 ; move ua , 3 * 2 )  | ( move ul , 2 ; ( move 0 , 2 ; move ua , 4 ) )  | ( move ul , 2 ; move ua , 4 + 2 ; move 0 , ua )  | ( move ul , ul + ul ; move 0 , 2 ; move ua , 4 )  | ( move ul , 2 ; move ua , 3 + 3 ; v0 = ua + 4 )  
[1401] ( move 4 , 0 ; move ul - ua , 4 )  
[1402] ( move 0 , ua / 4 ; move ua , 3 )  | ( v0 = 0 - 4 ; move ua , v0 * 2 )  | ( move ul , ua / 4 ; move ua , 3 ; pen 0 )  | ( v0 = 4 + 3 ; move ua , v0 + v0 )  
[1403] ( move 0 - 4 , ul ; move 3 , ul )  | ( move 0 - 4 , ua + ul ; move 3 , ul ; v0 = ua - ul )  
[1404] ( move 0 - ul , ul ; move 3 , 4 )  | ( move 3 - 4 , ul ; move ua / 2 , 2 + 2 )  | ( move 0 - ul , ul - ua ; move 4 - ul , 4 )  
[1405] ( move ua , 2 ; move ua , 3 * 3 )  | ( move ua , 2 ; move ua , 3 * 3 ; v0 = ua )  
[1406] ( move 4 + ul , ul ; move 2 , 2 )  | ( move 4 + ul , ul ; v0 = 2 ; move 2 , v0 )  | ( move 4 + ul , ul ; v0 = 2 ; move v0 , v0 )  | ( move 4 + ul , ul ; move 2 , 4 - 2 ; v0 = 4 / 2 )  
[1407] ( move 2 , ul ; move 4 + ul , 2 )  | ( move 2 , ul ; move ul , 2 ; move 4 , ua )  | ( move 2 , ua + ul ; move 4 + ul , 2 - ua )  | ( move 2 , ul ; v0 = ul ; move 3 + 2 , v0 + v0 )  
[1408] ( move 4 , 0 ; move 2 / ua , ul )  | ( move 4 , 0 ; move ul / 3 , ul )  | ( move 4 , 0 ; move ul / 4 , ul )  | ( move 4 , ua ; move 2 / ua , ul )  | ( move 4 , ua ; move ul / ua , 2 )  | ( move 4 , ua ; move ul / 3 , ul )  | ( move 4 , ua ; move ul / 4 , ul )  | ( move 3 + ul , 0 ; move 2 / ua , ul )  | ( move 3 + ul , ua ; move ul / 4 , 2 )  | ( move 4 , ua + ua ; move ul / 3 , ul )  | ( move 3 + ul , ua ; move ul / 4 , ul )  | ( move 4 , 0 ; move ul / 4 , 2 ; pen ua )  | ( pen ua ; move 4 , ua ; move ul / 4 , ul )  | ( move 2 , 0 ; move 2 , 0 ; move 2 / ua , ul )  | ( move 4 , 0 ; move ul / 4 , ul ; v0 = ua )  | ( move 4 , ua * 3 ; pen ua ; move ul / 3 , ul )  | ( v0 = 4 ; move v0 , 0 - ua ; move ul / v0 , ul )  | ( move 2 + 2 , 0 ; ( v0 = ul ; move ul / 3 , v0 ) )  | ( move 3 + ul , ua ; ( v0 = ul / 3 ; move v0 , ul ) )  
[1409] ( move 4 , 3 ; move ua + ul , 2 )  | ( move 4 , 3 ; move ua + ul , ul + ul )  | ( move 4 , 3 ; ( move 3 , 2 ; move ua - 2 , ua * 4 ) )  
[1410] ( move 2 , ul ; move 2 - ua , 4 )  
[1411] ( move ua , 0 ; move ua , 4 * 4 )  | ( move ua , ua ; move ua , 4 * 4 )  | ( ( move ua , ua ; pen ul ; move ua , 4 * 4 ) ; v0 = 2 )  
[1412] ( move ua , 2 ; move 4 , ua - 3 )  
[1413] ( move ua - 3 , ua ; move 2 , 4 )  | ( ( move ua - 3 , ua ; move 2 , 4 ) ; pen ua ; pen ul )  
[1414] ( move ua , 3 + 3 ; move 3 , ul )  | ( move ua , 3 * 2 ; move 0 , ua ; move 3 , ul )  | ( v0 = 2 ; move ua , 4 + v0 ; move 3 , ul )  | ( move ul , 2 ; move ua , 3 + ul ; move 3 , ua + ul )  | ( v0 = 4 - ul ; move ua , v0 + v0 ; move v0 , ul )  
[1415] ( move ua - 2 , ul ; move 2 , 4 )  | ( move ua - 2 , ul ; move ul + ul , 4 )  
[1416] ( move ua , 0 ; move ul , 4 * 3 )  | ( move ua , ua ; move ul , 4 * 3 )  | ( ( move ua , ua ; v0 = 4 * 3 ) ; move ul , v0 )  
[1417] ( move 2 - ua , 2 ; move ul , 4 )  | ( move 0 - 4 , 2 ; move 2 - ul , 4 ; pen 2 / 3 )  | ( ( move 2 - ua , 2 ; v0 = ul ) ; move ul , 4 )  
[1418] ( move 0 - 4 , 4 ; move ua , ul )  
[1419] ( move 4 - ua , 2 ; move 2 , ul )  
[1420] ( move ua + 2 , ul ; move 4 , 3 )  | ( move ua + 2 , ul ; move 4 , 3 - ua )  | ( move ua + 2 , ul ; ( move 3 , 3 ; v0 = 2 / ua ) )  
[1421] ( move 4 , ua - ul ; move 2 , 2 )  | ( move 4 , ul - 2 ; move 2 , ua + 2 )  | ( move 4 , ul - 2 ; move 0 , ua ; move 2 , 2 )  
[1422] ( move ua , 4 + ul ; move 3 , 2 )  | ( move ua , 4 + ul ; move 3 , ul + ul ; v0 = ul )  | ( ( move 0 , 2 ; pen ua ; move ua , 3 ) ; move 3 , 2 )  
[1423] ( move 4 , ua - 2 ; move ul , 2 )  | ( move 2 + 2 , ul - 3 ; move ul , 2 )  
[1424] ( move 2 , ul ; move 4 + 2 , ul )  | ( move ul + ul , ul ; move 3 + 3 , ul )  | ( move 2 , ul ; move 3 , ul ; move 3 , ua )  
[1425] ( move ua , ul ; move 3 , 4 + 2 )  | ( move ua , ul ; move 3 , 3 * 2 )  
[1426] ( move 2 , 4 ; move ua - ul , 2 )  | ( move ul + ul , ua + 4 ; move ua - ul , 2 )  | ( move 2 , ua + 4 ; move ua - ul , ul + ul )  
[1427] ( move 2 - ua , 3 ; move ul , 3 )  
[1428] ( move 3 , 0 ; move ul , ul - 4 )  | ( move 3 , ua ; move ul , ul - 4 )  | ( move 3 , ua ; move ul - 2 , ul / ua )  | ( move 3 , 0 ; move ul , ua - 3 ; pen ul )  | ( move 3 , ua ; ( move 0 , 0 ; move ul , ul - 4 ) )  
[1429] ( move ul , 3 ; move 3 + 2 , ul )  | ( move ul , 3 ; move 4 + ul , ul )  | ( move ul , 3 ; move ua - ul , ul )  | ( move ul , 4 - ul ; move 3 + 2 , ul )  | ( move ul , ua + 3 ; move 4 + ul , ul )  | ( move ul , 3 ; move ua - ul , ua + ul )  | ( move 4 - 3 , ua + 3 ; move ua - ul , ul )  | ( move 0 , ua ; move ul , 3 ; move 3 + 2 , ul )  | ( move 0 , 3 ; move ul , 0 ; move 4 + ul , ul )  | ( move ul , 3 - ua ; move 4 , ul ; move ul , 0 )  | ( ( move ul , 3 ; move 3 + 2 , ul ) ; pen 4 * 2 )  | ( move ul , 3 ; move 3 + 2 , ul ; move 0 , 4 + ul )  
[1430] ( move 0 , ua / 3 ; move ua , 4 )  
[1431] ( move ul , 4 ; move 0 - 3 , ul )  | ( move ul , 4 ; move ul - 4 , ul )  | ( move 0 , ua ; move ul , 3 + ul ; move ul - 4 , ul )  
[1432] ( move 3 , 3 ; move ua - ul , 2 )  | ( ( pen 2 ; move 3 , 3 ) ; move ua - ul , 2 )  
[1433] ( move ul , 0 ; move 4 + ul , 4 )  | ( move ul , 0 ; move 4 + ul , 3 + ul )  | ( move ul , ua ; move 4 + ul , 3 + ul )  | ( move ul , ua ; move ul , 4 ; move 4 , ua )  | ( move ul , ua ; move 3 - ul , 4 ; move 3 , 0 )  | ( ( pen ua ; move ul , 0 ) ; move 4 + ul , 4 )  | ( pen 3 - ul ; move ul , ua ; move 4 + ul , 4 )  | ( v0 = 4 + ul ; move ul , 0 ; move v0 , 4 )  | ( move ul , ua + ua ; ( move ul , 4 ; move 4 , ua ) )  | ( pen ul / 4 ; pen 4 ; ( move ul , ua ; move ua - ul , 4 ) )  
[1434] ( move 4 , 0 - 3 ; move ul , ul )  | ( move 4 , ua - 3 ; move ul , ul )  | ( move 4 , ul - 4 ; move 2 - ul , ul )  | ( move 4 , ua - 3 ; move 0 - ul , 4 ; move 0 , ul )  | ( move 4 , ul - 4 ; v0 = ul ; move v0 , v0 )  
[1435] ( move 3 , ul ; move ua , 3 + 3 )  | ( move 3 , ul ; move ua , 4 + 2 )  | ( move 3 , ul ; move 4 + 2 , 3 * 2 )  | ( move 4 - ul , ul ; move ua , 3 * 2 )  
[1436] ( move ua - ul , 4 ; move 2 , 2 )  | ( move ua - ul , 4 ; v0 = 2 ; move v0 , v0 )  
[1437] ( move 2 , 3 ; move ua + 4 , ul )  
[1438] ( move 4 , ua - 3 ; move ua , 2 )  | ( move 4 , ul - 4 ; move ua , 2 )  | ( move 3 + ul , ul - 4 ; move ua , 2 ; pen 4 )  | ( move 4 , ua - 3 ; v0 = 2 ; move ua , v0 )  | ( move 3 / ua , ul / ua ; move ua , 2 ; move 4 , ua - 2 )  
[1439] ( move 0 , 2 ; move ua , ul / 4 )  | ( pen 3 ; move 0 , ul / 4 ; move ua , ul + ul )  | ( move 0 , 2 ; v0 = ua ; move v0 , ul / 4 )  | ( move 0 , ua / 3 ; pen ua + ul ; move ua , ul / ua )  
[1440] ( move ua , 0 ; move ul / 2 , 4 )  | ( move ua , 0 ; move ul / 3 , 4 )  | ( move ua , ua ; move ul / 2 , 4 )  | ( move ua , ua ; move ul / 3 , 4 )  | ( move ua , ua * 4 ; move ul / 3 , 4 )  
[1441] ( move ua , ua ; move 4 + 4 , 2 )  | ( move ua , ua ; move 4 * 2 , 2 )  
[1442] ( move ul , ua - 2 ; move 4 , 2 )  | ( move 2 - ua , 0 ; move ul , ul )  | ( move 0 - 4 , ua * 4 ; move ul , ul )  | ( move ul , ul - 3 ; move 3 + ul , ul + ul )  | ( move ul , ul - 3 ; pen ua + ua ; move 4 , 3 - ul )  
[1443] ( move ua - 2 , 4 ; move 2 , ul )  | ( move 4 , 4 - ua ; move ul - 3 , 4 )  
[1444] ( move ua + ul , 2 ; move 3 , 4 )  | ( ( move ul , 2 ; move ua , ua ; move 0 , ul ) ; move 2 , 3 )  
[1445] ( move 0 , ul ; move ua , 4 * 3 )  | ( move 0 , 4 * 4 ; move ua , ul - 4 )  | ( move 0 , ul + ul ; move ua , ua / 4 )  | ( v0 = ua * ua ; move ua , v0 + v0 )  | ( v0 = 2 / 3 ; pen v0 ; move ua , v0 * v0 )  | ( v0 = ua - 4 ; move ua , ul / v0 ; pen 3 / v0 )  
[1446] ( move ua , ua ; move 2 , 4 + 4 )  | ( move ua , 0 ; move 2 , ua * ua )  | ( move ua , ua + ua ; move 2 , 4 + 4 )  | ( move ua , 0 ; v0 = ul ; move 2 , 4 * 2 )  | ( move ua , 0 ; pen ul ; move ua / 3 , 4 + 4 )  | ( move ua , ua ; move 2 , ua * ua ; v0 = 3 )  | ( move ua , 0 ; v0 = ua * ua ; move 2 , v0 )  | ( move ua , 0 ; ( move 2 , 4 + 4 ; v0 = 0 ) )  | ( move ua , ua ; pen ul ; move ul + ul , ua * ua )  
[1447] ( move 4 , ul ; move 2 - ua , 2 )  | ( ( move 4 , ul ; move 0 , 0 ) ; move 2 - ua , 2 )  
[1448] ( move ul - 4 , 0 ; move ul , 3 )  | ( move 3 - ua , 0 ; move ul , 3 * 3 )  | ( pen 4 ; move ul - 4 , ua ; move ul , 3 )  | ( move 0 - 3 , ua ; move ul , 2 + ul ; pen ua )  
[1449] ( move 3 , ua - ul ; move 2 , 3 )  | ( move 3 , ua - ul ; move 2 , 2 + ul )  | ( move 2 + ul , ua - ul ; move ul + ul , 3 )  | ( ( pen ua ; move 2 - 4 , ul + ul ) ; move 3 , ul / ua )  
[1450] ( move ua + 3 , ul ; move 4 , 2 )  | ( move ua + 3 , ua + ul ; move 4 , 2 )  | ( move ua + 3 , ua + ul ; pen 4 ; move 4 , ul + ul )  
[1451] ( move 3 , 2 ; move ua , 4 + ul )  | ( move 0 , 0 ; move 3 , ul + ul ; move ua , 4 + ul )  
[1452] ( move ul , 0 ; move 4 + 4 , ul )  | ( move ul , 0 ; move 4 * 2 , ul )  | ( move ul , 0 ; move ua + 2 , ul )  | ( move ul , ua ; move ua + 2 , ul )  | ( move 2 - ul , ua ; move 4 + 4 , ul )  | ( move ul , 0 ; move ua + 2 , ua + ul )  | ( pen 4 ; move ul , ua ; move 4 * 2 , ul )  | ( pen ul ; move ul , ua ; move ua + 2 , ul - ua )  | ( move ul , ua ; v0 = 4 * 2 ; move v0 , ul )  | ( move ul , ua ; move 0 , 0 - ul ; move 4 * 2 , 2 )  | ( move ul , ua ; move ul + ul , ul ; move ua , ua * 2 )  | ( ( move ul , ua ; move ua + ul , ua + ul ) ; move ul , ua )  
[1453] ( move ua + 3 , 4 ; move ul , 2 )  | ( move ua + 3 , 4 ; ( move ul , ul + ul ; v0 = ul ) )  | ( ( move ua + 2 , 4 ; pen ua ; pen ua ) ; move ul , ul / ua )  
[1454] ( move 4 - ua , ua ; move 2 , 3 )  | ( move ul - 4 , ua ; move ua / 4 , 3 )  
[1455] ( move 4 , 0 ; move 4 + ul , ul )  | ( move 4 , ua ; move 4 + ul , ul )  | ( move 4 , 0 ; move 3 + 2 , ul - ua )  | ( move 4 , ua ; move 4 , ul ; move ul , 0 )  | ( move 4 , 0 ; move 3 + ul , ul ; move ul , ua )  | ( pen 3 ; ( pen 4 ; move 4 , 0 ; move 3 + 2 , ul ) )  
[1456] ( move ua , 2 ; move ua , 3 / 2 )  | ( move 0 , ua ; move ua , 3 - ul ; move ua , 3 / 2 )  | ( move ua , 2 ; ( v0 = 3 / 2 ; move ua , v0 ) )  
[1457] ( move ua , 4 ; move 4 , 0 - ul )  | ( pen ul ; move ua , 4 ; move 4 , 0 - ul )  | ( move 0 , 2 ; move ua , 2 ; move 2 * 2 , ua - ul )  
[1458] ( move ua + 3 , ul ; move 3 , 3 )  | ( move ua + 3 , 2 - ul ; pen ul ; move 4 - ul , 3 )  | ( move ua + 3 , ul ; ( v0 = 3 ; move v0 , v0 ) )  | ( move ua + 3 , ul ; ( move 2 , 3 ; move 4 / 3 , ua ) )  
[1459] ( move 0 - 3 , ul ; move 4 , ul )  | ( move ul - 4 , ul ; pen ul ; move 4 , ul )  | ( ( move 0 - 3 , ul ; move 4 , ul ) ; move 0 , ua )  
[1460] ( move ua , 2 - 4 ; move ua , 3 )  | ( move ua , ul - 3 ; move ua , 3 )  | ( move ua , ul - 3 ; move ua , 2 + ul )  | ( move 0 - ua , ul ; move ua , ul / ua )  | ( move ua , ua - 2 ; move ua , 3 ; pen 3 )  
[1461] ( move 4 + 2 , ua ; move ua , 4 )  | ( move 3 + 3 , ua ; move ua , 4 ; pen ua )  | ( move 4 + 2 , 0 ; move ua - ul , 4 ; move ul , 0 )  | ( move 3 * 2 , 0 ; move ua , 3 + ul ; pen ul - 4 )  
[1462] ( move 3 , 3 + 2 ; move ul , ul )  | ( move 3 , 4 + ul ; move ul , ul )  | ( ( move 3 , 4 + ul ; v0 = ul ) ; move v0 , v0 )  
[1463] ( move ua , 4 + 3 ; move ua , 3 )  
[1464] ( move 0 - ua , 4 ; move ul , 4 )  | ( move ul , 4 + ul ; move ua , ul - 2 )  | ( move 2 - ul , 4 + ul ; move ua , ua - ul )  | ( move 0 - ul , ul + ul ; move ua , ul + ul )  | ( move ul - 2 , 2 ; move ua , 3 - ul ; pen ul )  
[1465] ( move ua , 0 ; move ul / 4 , 2 )  | ( move ua , 0 ; move 2 / ua , ul )  | ( move ua , ua ; move 2 / ua , 2 )  | ( move ua , 0 ; move ul / 3 , ul )  | ( move ua , 0 ; move ul / 4 , ul )  | ( move ua , ua ; move 2 / ua , ul )  | ( move ua , ua ; move ul / 3 , ul )  | ( move ua , ua ; move ul / 4 , ul )  | ( move ua , 0 ; move 2 / ua , ua / 4 )  | ( move ua , ua * 2 ; move ul / 3 , ul )  | ( move ua , ua + ua ; move ul / 3 , ul )  | ( move ua , ua ; move ul / 3 , ul + ul )  | ( pen ua ; move ua , 0 ; move ul / 4 , ul )  | ( pen ul ; move ua , 0 ; move ul / 4 , ul )  | ( move ua , ua ; move 3 / ua , ul ; v0 = 0 )  | ( pen 2 ; move ua , 0 ; move ul / 4 , ul - ua )  | ( pen 4 - 2 ; move ua , ua ; move ul / 4 , ul )  | ( ( pen ul ; move ua , 0 ) ; move ul / 4 , ul )  | ( move ua , ua ; move 3 / ua , 2 - ul ; pen ul )  | ( move ua , ua ; move ul / 4 , 2 - ul ; pen ua )  | ( pen ul ; ( move ua , ua ; move ul / 4 , ul ) )  | ( move ua , 0 ; move ul / 4 , ua + 2 ; v0 = 3 )  | ( move ua , 0 ; ( move ul / 4 , ul ; v0 = ul ) )  | ( ( move ua , ua ; pen 2 + ul ) ; move ul / 4 , 2 )  | ( move ua , ua * 4 ; ( pen ua ; move ul / 3 , ul ) )  | ( move ua , ua ; v0 = 2 ; move v0 / ua , 3 / v0 )  | ( ( move ua , ua + ua ; move 0 , ul ) ; move 2 / ua , ua )  | ( pen ua - ul ; ( move ua , ua ; move ul / 4 , 2 - ul ) )  | ( move ua , ua ; ( pen 4 ; move ul / 4 , 2 ) ; pen ua + ul )  
[1466] ( move ua , ul ; move 4 , 3 + 2 )  | ( move ua , ul ; move 3 + ul , 4 + ul )  | ( ( move ua , ul ; move 4 , 4 + ul ) ; pen 4 )  | ( move ua , ul ; move 0 , 4 ; move 4 , ua + ul )  | ( ( move ua , ul - ua ; move 4 , 4 + ul ) ; pen ua ; pen 0 )  
[1467] ( move ua + 2 , 3 ; move ul , 4 )  | ( move ua + 2 , 3 ; move 0 - ul , ul )  | ( move ua + 2 , 3 ; move ul , 3 + ul )  | ( move ua + 2 , ua + 3 ; move ul , 4 )  
[1468] ( move 4 , 0 ; move 2 , ul / ua )  | ( move 4 , ua ; move 2 , ul / ua )  | ( move 4 , ua ; move ul + ul , ul / ua )  | ( move 4 , 0 ; pen ua ; move 2 , ul / ua )  | ( move 3 + ul , ua ; move ul + ul , ul / ua )  | ( move 4 , 0 ; move ua / 3 , ul / ua ; pen 0 )  | ( move 4 , ua + ua ; move 2 , ul / ua ; pen ul )  | ( move ua - 2 , ua ; move ul , ul / ua ; move ul , 0 )  
[1469] ( move 2 , 4 ; move ul - ua , 2 )  | ( move ul + ul , 4 ; move ul - ua , 2 )  | ( pen 3 ; move ul + ul , 4 ; move ul - ua , 2 )  
[1470] ( move 0 , 4 ; move 4 , ua * ua )  | ( v0 = 4 / ua ; move 4 , v0 + 2 )  | ( move 0 , ua - ul ; move ua - 2 , 3 / ua )  | ( v0 = ua - 2 ; move v0 , v0 * v0 )  | ( move 0 , 2 + 2 ; move 4 , ua * ua ; v0 = 0 - ul )  
[1471] ( move ua , ua ; move 4 , 2 - 3 )  | ( move ua , 0 ; move 4 , ua - ul )  | ( move ua , ua ; move 4 , ua - ul )  | ( move ua , 0 ; move 4 , 0 - ul ; pen 2 )  | ( move ua , ua ; move 4 , 0 - ul ; pen ua )  
[1472] ( move ul , 0 ; move ua , 4 * 3 )  | ( move ul , ua ; move ua , 4 * 3 )  | ( move ul , 0 ; ( move ua , 4 * 3 ; pen 2 ) )  
[1473] ( move 4 , 0 ; move ua - 4 , ul )  | ( move 4 , ua ; move ua - 4 , ul )  | ( move 3 + ul , ua ; move ua - 4 , ul )  | ( move 3 + ul , ua ; pen 2 + ul ; move ua - 4 , ul - ua )  
[1474] ( move 2 , 2 ; move 2 , ul / ua )  
[1475] ( move ua , 4 + 2 ; move ua , 4 )  | ( move ua , 3 * 2 ; move ua , 3 + ul ; v0 = ul )  | ( ( move ua , 3 * 2 ; move ua , 4 ) ; pen ua ; pen ua / 4 )  
[1476] ( move ua , 4 ; move 2 , ul - 2 )  | ( move ul , ul / ua ; move ul , 3 * 2 ; move ua , ul )  
[1477] ( move ua , 4 + ul ; move 2 , 3 )  | ( move ua , 4 + ul ; move 4 / 2 , 3 )  
[1478] ( move 4 , ul ; move ua + 2 , 3 )  | ( move 4 , ul ; move ua + 2 , ua + 3 )  | ( move 4 , ul ; move ua + 2 , 2 + ul )  | ( move 4 , ul ; move 2 , 3 ; move ua , ua + ua )  
[1479] ( move ul , 0 ; move ul - 4 , 3 )  | ( move 3 , 3 ; move ul , ul / 3 )  | ( move ul , ua ; move 3 - ua , 3 )  | ( move ul , ua ; move ul - 4 , 2 + ul )  | ( move ua - 3 , 3 ; move ul , ul / ua )  | ( move ul , 0 ; move ul - 4 , 3 ; move 0 , 4 )  | ( move ul , ua ; ( pen ul ; move 0 - 3 , 3 ) )  | ( move ul , ua ; move 3 - ua , 3 ; v0 = ua )  | ( pen 3 + ul ; move 3 , 3 ; move ul , ul / ua )  
[1480] ( move 4 + 3 , ul ; move ua , 2 )  
[1481] ( move ua - ul , 2 ; move 2 , 4 )  
[1482] ( move ua , 2 ; move ul - 4 , 2 )  | ( move ua , 3 - ul ; move 0 - 3 , 2 )  | ( move ua , 3 - ul ; move ul - 4 , 2 )  | ( move ua , ul + ul ; move ul - 4 , 2 ; move 0 , ul )  
[1483] ( move ua , 0 ; move 4 , ul - 4 )  | ( pen 4 ; move 4 , ul / ua ; move ua , 3 )  
[1484] ( move 3 , ul - 2 ; move ua , 3 )  | ( move 3 , ul - 2 ; move ua , 2 + ul )  | ( move 3 , 0 - ul ; v0 = 3 ; move ua , 3 )  | ( move 3 , ua - ul ; move ua , 3 ; v0 = 2 )  
[1485] ( move ua , 3 + 2 ; move 4 , ul )  | ( move ua , 4 + ul ; move 4 , ul )  | ( move ua , 4 + ul ; move 3 + ul , ul )  | ( move ua , 4 + ul ; move 4 , ua + ul )  | ( move ua , 4 + ul ; ( move 4 , ul ; pen ul ) )  | ( move ua , 4 + ul ; v0 = ul ; move 4 , v0 )  | ( ( move ul , 2 ; move ua , ua + 3 ) ; move 4 , ul )  
[1486] ( move 3 , ul ; move ua , 2 - 3 )  | ( move 3 , ul ; move ua , 0 - ul )  | ( move ua , ua / 2 ; move 3 , ul )  | ( move 3 , ul ; move ua , ua - ul )  | ( move 2 + ul , ul ; move ua , 0 - ul )  | ( move ua , ua / 2 ; move 3 , ua + ul )  | ( ( pen ul ; move 3 , ul ) ; move ua , ua - ul )  | ( ( move ua - 3 , ul ; move ua , ua - ul ) ; v0 = ul )  
[1487] ( move ua - 3 , ul ; move 3 , 2 )  
[1488] ( move 3 , 0 - ul ; move ul , 4 )  | ( move 3 , 3 - 4 ; v0 = ul - 4 ; move ul , 4 )  | ( move 3 , ul - 2 ; move 3 - 2 , 4 ; move ul / ua , 3 )  
[1489] ( move ul , 4 ; move 0 - ua , 4 )  
[1490] ( move 3 - ua , 3 ; move ul , 2 )  | ( move 3 - ua , 3 ; move ul , ua + 2 )  
[1491] ( move 4 - ua , ua ; move 3 , 2 )  
[1492] ( move ua , 0 - 4 ; move ul , 4 )  | ( move ua , ua - 4 ; move ua / 4 , 4 )  | ( move ua , ua - 4 ; pen ua ; move 2 , 4 )  | ( move ua , ua - 4 ; move ul , 4 ; move 0 , ul )  | ( pen ua ; ( move ua , ua - 4 ; move ul , 4 ) )  
[1493] ( move 3 , 0 ; move ul , ul / 2 )  | ( move 3 , ua ; move ul , 2 / 4 )  | ( move ua - 3 , ua ; move ul , 2 / 4 )  | ( move 3 , ua * 3 ; move ul , 3 / ua )  | ( move 2 + ul , ua ; move ul , ul / 2 )  | ( ( move 2 + ul , 0 ; move ul , 2 / 4 ) ; v0 = 0 )  | ( move 3 , ua ; ( pen ua - 4 ; move ul , ul / 2 ) ; pen 2 )  
[1494] ( move 2 , ua ; move 2 , 4 / ua )  | ( move 2 , 0 ; move 2 , 4 / ua ; v0 = 2 )  
[1495] ( move 3 , 0 ; move ul , ua / 4 )  | ( move ua / 2 , ua ; move ul , ua / 4 )  | ( move 3 , 0 ; move ul , 3 / 2 ; pen 0 )  | ( move ua - 3 , ua ; move ul , ua * ua )  
[1496] ( move 2 , ua ; move ul - 4 , 3 )  | ( move 3 , 3 ; move 2 , ul / ua )  | ( move 0 , ul ; move 3 , 2 ; move 2 , ul / ua )  | ( move 3 - ul , ua ; pen 3 ; move ul - 4 , 3 )  | ( move 3 , 3 ; pen 4 + ul ; move 2 , ul / ua )  
[1497] ( move ua , 3 ; move ua + 4 , 4 )  | ( move ua , 4 - ul ; pen ua ; move ua + 4 , 4 )  | ( move ua , 3 ; v0 = ua + 4 ; move v0 , v0 - ua )  
[1498] ( move 3 , 3 ; move ua , 4 + ul )  | ( move 3 , 3 ; pen 3 ; move ua , 4 + ul )  | ( move 3 , 3 ; move ua , 4 + ul ; pen ua * 4 )  
[1499] ( move 4 , ul ; move ua + 2 , 4 )  | ( move 4 , ul ; move ua , 4 ; move ul + ul , ua )  
[1500] ( move 2 , 4 ; move 3 , ua - ul )  
[1501] ( move ua , 4 * 2 ; move ul , 2 )  | ( move ua , 4 * 2 ; pen ul ; move ul , 2 )  | ( move ua , 4 + 4 ; move ul , 4 / 2 ; v0 = ua )  | ( move ua , 4 * 2 ; ( move ul , 2 ; v0 = ua ) )  
[1502] ( move ul - 3 , ul ; move 2 , 3 )  | ( move 0 - 2 , ul ; move 2 , 4 - ul )  | ( move ul - 3 , ul - ua ; move 2 , 3 )  | ( move 0 - 2 , ul ; pen ua ; move 2 , 3 )  | ( move 0 - 2 , ul ; move 0 , 2 ; move 2 , ul )  
[1503] ( move 0 , 4 ; move ua , ua / 4 )  | ( move 0 , ua * ua ; move ua , 2 / 3 )  | ( move ul , ua - 4 ; move ua , ul - 4 )  | ( v0 = ua + ul ; v1 = v0 / 3 ; move ua , v1 )  
[1504] ( move ua + ul , 4 ; move 2 , 4 )  | ( move ua + ul , 3 + ul ; move 2 , 4 )  | ( move ua , 4 ; move ul , 0 ; ( move ul , 4 ; move ul , ua ) )  
[1505] ( move ul - ua , 3 ; move 4 , 2 )  | ( move 2 - ua , 3 ; move ul , 3 ; move 2 + 2 , ua - ul )  
[1506] ( move ul - ua , 3 ; move 2 , 4 )  | ( move ul - ua , 3 ; move ua / 3 , 4 ; pen ul )  
[1507] ( move 4 , ua * ua ; move 2 , 3 )  
[1508] ( move 4 , 4 ; move ul , 0 - ul )  | ( move 4 , 4 ; move ul , ul - 2 )  | ( move 4 , 3 + ul ; move ul , ua - ul )  | ( move 4 , 4 ; move ul , ua - ul ; move 0 , ul - 4 )  
[1509] ( move 4 , 3 ; move ul - ua , 2 )  
[1510] ( move 4 , ul ; move ua , 3 + 3 )  | ( move 4 , ul ; move ua , 3 * 2 )  | ( move 2 + 2 , ul ; move ua , 3 + 3 )  | ( move 4 , ul ; move 0 , 4 + 2 ; move ua , ua )  | ( move 4 , ul ; move ua , 3 * 2 ; v0 = ul )  
[1511] ( move ul , 3 ; move 2 - ua , 4 )  | ( move ul , 2 + ul ; move 2 - ua , 4 )  
[1512] ( move 3 , 2 ; move ul , 4 + ul )  | ( move 3 , 2 ; move 0 , 4 ; move ul , ul )  | ( move 3 , 2 ; move 0 , ua ; move ul , 4 + ul )  | ( move 3 , 2 ; pen 4 + ul ; move 2 - 3 , ua * ua )  
[1513] ( move 2 , ul - 3 ; move 3 , ul )  | ( move 2 , ul - 3 ; v0 = ua / 4 ; move 3 , ul )  
[1514] ( move 3 , ul ; move 2 , 4 + ul )  | ( pen 2 ; move 3 , ul ; move 2 , 4 + ul )  | ( move 3 , ul ; pen ul ; move 2 , 4 + ul )  | ( pen 2 ; ( move 3 , ul ; move 2 , 4 + ul ) )  | ( move 3 , ua + ul ; move 2 , 4 + ul ; v0 = ul )  | ( ( move 2 , ul ; move ul , 0 ; pen ua ) ; move 2 , 4 + ul )  
[1515] ( move 4 , ua ; move ua - 2 , 4 )  | ( pen 4 ; move 4 , ua + ua ; move ua - 2 , ua + 4 )  
[1516] ( move 3 , ul / 2 ; move ua , 2 )  | ( move 3 , ul / 2 ; move ua , 3 - ul )  | ( move 3 , ul / 2 ; move ua , ul + ul )  | ( pen 3 ; move 2 + ul , ul / 2 ; move ua , 3 - ul )  | ( ( move 4 - ul , ul / 2 ; v0 = ua ) ; move v0 , 2 )  
[1517] ( move 4 + 3 , ul ; move 2 , ul )  | ( ( move 4 + 3 , ul ; pen ua ) ; move 2 , ul )  
[1518] ( move 3 / 4 , 0 ; move ua , ul )  | ( move 2 / 3 , ua ; move ua , ul )  | ( move ua , ul ; pen 0 ; move ua , 3 )  | ( move 3 / 4 , ua * 2 ; move ua , ul )  | ( pen ul ; move 3 / 4 , ua * 2 ; move ua , ul )  
[1519] ( move ul , 3 ; move 3 - ua , 3 )  | ( pen ul ; move ul , 3 ; move 3 - ua , 3 )  
[1520] ( move ul , 4 + 2 ; move ua , 4 )  
[1521] ( move 4 , 2 ; move 3 - ua , ul )  
[1522] ( move 2 , ul ; move ua , 3 - 4 )  | ( move 2 , ul ; move ua , 0 - ul )  | ( move 2 , ul ; move ua , ua - ul )  | ( move 2 , ul - ua ; move ua , 0 - ul )  | ( move 2 , ua + ul ; move ua , ul - 2 )  | ( move ul + ul , ul ; move ua , 0 - ul )  | ( move ua , ua / 2 ; move 2 , ul ; pen 4 )  | ( pen 2 ; move 2 , ul ; move ua , ua - ul )  | ( ( move 2 , ul ; move ua , ua - ul ) ; pen ua )  | ( move 2 , ul ; v0 = ua ; move v0 , 0 - ul )  | ( move 2 , ul ; v0 = ul - 2 ; move ua , v0 )  | ( move 2 , 3 - 2 ; pen 4 + ul ; move ua , ua - ul )  | ( move 2 , ul ; ( move ua , 3 - 4 ; v0 = 3 + ul ) )  | ( move ua / 3 , ul ; move ua , 0 - ul ; v0 = ul / 2 )  
[1523] ( move ua , 2 ; move ul , 3 - 4 )  | ( move ua , 2 ; move ul , 4 + ul )  | ( move ua , 2 ; move ul , ua - ul )  | ( move ua , ul + ul ; move ul , 4 + ul )  | ( move ua , 2 ; v0 = ul ; move ul , ua - ul )  | ( move ua , ua + 2 ; ( pen ua ; move ul , ul - 2 ) )  | ( ( v0 = ul - 2 ; move ua , 2 ) ; move ul , v0 )  | ( pen ua + ua ; ( move ua , 2 ; move ul , ua - ul ) )  | ( ( move ua , 2 ; move ul , ua - ul ) ; move 0 , 0 - 4 )  
[1524] ( move ua , 3 / 2 ; move ul , 2 )  
[1525] ( move ua , 4 + 2 ; move ul , 4 )  | ( move ul / ua , 2 ; move ua , 4 ; move ul , 4 )  | ( move ua , 4 + 2 ; ( pen 4 ; pen 2 ) ; move ul , 4 )  
[1526] ( move 2 , ul ; move 4 + 3 , ul )  | ( move 2 , ul ; move 4 + 3 , ua + ul )  | ( move 2 , ul ; move 4 + 3 , ul - ua )  | ( move ul + ul , ul ; move 4 + 3 , ul ; move ul , 3 )  
[1527] ( move ua , ul ; move 2 , 4 * 2 )  | ( move ua , ul ; move 2 , ua * ua ; pen 0 )  | ( move ua , ul ; move 0 , 4 * 2 ; move 2 , 0 )  | ( pen ua ; ( move ua , ul ; pen ua + 2 ; move 2 , 4 + 4 ) )  | ( move ua , ul - ua ; v0 = ul ; move ul + v0 , 4 * 2 )  
[1528] ( move ua , 4 + 3 ; move ua , 4 )  | ( move ul , 3 ; ( move ua , 3 + ul ; move ua , ua + 4 ) )  
[1529] ( move ul , 0 ; move ua , 3 / 4 )  
[1530] ( move 4 - ua , 3 ; move ua , 3 )  | ( move 0 - 2 , 2 + ul ; move ua , 3 )  | ( move 4 - ua , 3 ; move ua , 3 ; v0 = 0 )  
[1531] ( move ua , 2 / ua ; move 3 , 3 )  | ( ( v0 = ua ; move v0 , 2 / v0 ) ; move 3 , 3 )  
[1532] ( move ul , 4 ; move 3 , ua - 2 )  | ( move ul , 4 ; move 3 , ul - 3 )  | ( move ul , 4 ; move 2 + ul , ul - 3 )  | ( move ul , ua ; move ul , 4 ; move 3 , ua - 2 )  
[1533] ( move ua + 4 , 4 ; move ua , 3 )  | ( move ua + 4 , 4 ; move ua , 3 ; pen 0 )  
[1534] ( move ua , 3 ; move 3 , 4 + ul )  
[1535] ( move 2 , ua * ua ; move 4 , 3 )  
[1536] ( move ua , 4 ; move 2 , 2 / ua )  | ( move ua , ua + 4 ; move 2 , 2 / ua ; v0 = 0 )  
[1537] ( move 2 , 2 / 3 ; move ua , ul )  | ( move ul + ul , 2 / 3 ; move ua , ul )  
[1538] ( move 2 , ul / ua ; move 3 , 2 )  | ( move 2 , ul / ua ; ( v0 = 0 ; move 3 , 2 + v0 ) )  
[1539] ( move ul , 2 ; move ua , 2 / 3 )  
[1540] ( move ua , 3 ; move 4 + ul , 3 )  | ( move ua , 4 - ul ; move 4 + ul , 3 )  | ( move ua , 3 ; move 4 , 3 ; move ul , 0 )  | ( move ua , 3 ; move 4 + ul , ua + 3 ; v0 = 3 )  | ( move 0 , 3 ; move ua , ua ; move ua - ul , 4 - ul )  | ( move ua , 3 ; v0 = ua + 3 ; move 3 + 2 , v0 )  
[1541] ( move 3 , ua - ul ; move 2 , 4 )  
[1542] ( move ul - 4 , 0 ; move ul , 4 )  | ( move ul - 4 , ua ; move ul , 4 )  | ( move ul - 4 , ua ; move 0 - ul , ul )  | ( move ul , ul ; move 4 - ul , 0 - ul )  | ( move ul , ul ; move 2 + ul , ua - ul )  | ( move ul , ul ; move 3 , ua - ul ; v0 = ul )  | ( v0 = ul ; move ul , v0 ; move 3 , ua - ul )  | ( ( pen ua - 2 ; move ul - 4 , ua ) ; move ul , 4 )  | ( move 3 , ua / 2 ; v0 = ua ; move ul , ul - v0 )  
[1543] ( move 3 + 2 , ul ; move 4 , ul )  | ( move 4 + ul , ul ; move 4 , ul )  | ( move 3 + 2 , ul ; pen 2 ; move 4 , ul )  | ( move 4 , ul ; move ul , 0 ; move 4 , ul )  | ( move 4 , ul ; move ul , ua ; move 4 , ul )  | ( move 3 + 2 , ul ; ( pen ul ; move 3 + ul , ul ) )  | ( move 3 , ul ; move ul + ul , 0 ; move 3 + ul , ul )  | ( move 4 + ul , ul ; move 4 , ua + ul ; move 0 , ul )  | ( pen ul ; ( move ul , ul ; move 4 , 0 ; move 4 , ua + ul ) )  
[1544] ( move ua + ul , 4 ; move 3 , 3 )  | ( move ua + ul , 4 ; move 3 , 3 - ua )  | ( move ua + ul , 4 ; move 3 + ul , 3 )  | ( move ua + ul , 4 ; move ua / 2 , 3 )  | ( move ua , 4 ; move ul , ua ; move 4 , 3 )  | ( v0 = 4 ; move ua + ul , 4 ; move 4 , 3 )  | ( move ua + ul , 4 ; move 3 + ul , 3 ; v0 = ua + 2 )  
[1545] ( move 3 , ua - 2 ; move 4 , ul )  | ( pen 2 ; move 3 , ul - 3 ; move 4 , ul )  | ( move 3 , ua - 2 ; move 4 , ul ; v0 = 3 )  | ( move 0 , ua - 2 ; move 3 , ua ; move 4 , ul )  
[1546] ( move ua , ul ; move 3 - 4 , 2 )  | ( move ua , ul ; move ul , 3 + 2 )  | ( move ua , ul ; move ul , ul - 2 )  | ( move ua , ul ; move ul , ua - ul )  | ( move ua , ul ; move 0 - ul , ul + ul )  | ( move ua , ua + ul ; move ul , 4 + ul )  | ( move ua , ul ; move ul , ua - ul ; v0 = 3 )  | ( move ul , ua / 2 ; move ua , ul ; v0 = ua )  | ( move ua , ul ; move ul - 2 , ul + ul ; pen 2 )  | ( move ua , ul ; ( pen ul ; move 3 - 4 , ua / 3 ) )  | ( v0 = ul ; move ua , v0 ; move v0 , 4 + v0 )  | ( v0 = ul ; move ua , v0 ; move v0 , v0 + 4 )  | ( ( move ua , 2 - ul ; move ul , ua - ul ) ; pen ul )  | ( move ua , ua + ul ; pen ua * ua ; move ul , 4 + ul )  | ( pen ua - ul ; ( move ua , ul ; move ul , ua - ul ) )  
[1547] ( move 3 , 0 ; move ul , ul / 3 )  | ( move 3 , 0 ; move ul , ul / ua )  | ( move 3 , ua ; move ul , ul / 3 )  | ( move 3 , ua ; move ul , ul / ua )  | ( move 3 , 0 ; move ul , ul / 4 ; pen ua )  | ( move 3 , 0 ; move 0 , 0 ; move ul , ul / 3 )  | ( pen ul ; ( move 3 , 0 ; move ul , ul / 2 ) )  | ( move 3 , 0 ; move ul , ul / ua ; v0 = ul )  | ( v0 = 4 - ul ; move v0 , ua ; move ul , ul / 3 )  
[1548] ( move ua , 3 ; move ul - 3 , 3 )  | ( move ua , 3 ; move ul - 3 , 2 + ul )  
[1549] ( move 4 , ul ; move 3 - ua , 2 )  | ( move 4 , ua + ul ; move 3 - ua , 2 )  
[1550] ( move 0 , 3 ; move ua , ul / 4 )  | ( v0 = ul / 3 ; move ua , v0 * v0 )  | ( pen 2 ; v0 = ua + 3 ; move ua , ul / v0 )  
[1551] ( move 3 , ua ; move ua / 3 , 2 )  | ( move 3 , ua ; move 2 , 2 ; move ul / ua , ua )  | ( v0 = ul ; move 3 , ua ; move ua / 3 , v0 + v0 )  
[1552] ( move ua + ul , 2 ; move 4 , 4 )  | ( move ua + ul , 2 ; v0 = 4 ; move v0 , v0 )  | ( move ul , 2 ; move ua , ua ; move 3 + ul , 3 + ul )  | ( move ul , ua ; move ua + ul , 2 ; move 4 , 3 + ul )  
[1553] ( move 4 + 2 , ua ; move 4 , ul )  | ( move 3 + 3 , 0 - ua ; move 4 , ul )  | ( move 3 + 3 , ua ; move 4 , ua + ul )  | ( move 2 + ul , 0 ; move 3 , ua ; move 4 , ul )  | ( move ul , 0 ; move 3 + 2 , ua ; move 4 , ul )  | ( ( move 3 + 3 , ua ; move ul , ul ) ; move 3 , ua )  | ( move 2 + ul , 0 ; move 4 - ul , ua ; move 3 + ul , ul )  
[1554] ( move ul , 2 ; move 3 - ua , 4 )  | ( move ul , ul + ul ; move 0 - 3 , 4 )  | ( move 0 , ua ; move ul , 2 ; move 0 - 3 , 4 )  | ( move 4 - ul , 4 + 2 ; move 2 - ul , 0 - ul )  
[1555] ( move 4 , 0 ; move ul , ul / 2 )  | ( move 4 , ua ; move ul , ul / 3 )  | ( move 4 , ua ; move ul , ul / ua )  | ( move 4 , 0 ; v0 = ua ; move ul , 3 / ua )  | ( move 4 , ua ; move ul , ul / 2 ; v0 = ul )  | ( pen ua - ul ; move 4 , 0 ; move ul , 3 / ua )  | ( v0 = ua ; move 4 , v0 ; move ul , 3 / v0 )  
[1556] ( move ua , 2 ; move 4 - ua , 4 )  
[1557] ( move 4 - ua , ua ; move 2 , 4 )  
[1558] ( move ua , 2 ; move 3 , ul / 2 )  
[1559] ( move ul , ul ; move 4 + 3 , 2 )  | ( move ul , ul ; move ua + ul , 2 )  | ( move ul , ul ; move ua , 2 ; move ul , 0 )  | ( move ul , ul ; move ul , 2 ; move ua , 0 )  | ( move ul , ul ; pen ua ; move ua + ul , 2 )  | ( pen ul ; move ul , ul ; move ua + ul , 2 )  | ( move ul , 3 - 2 ; move ul , 2 ; move ua , 0 )  | ( move ul , ul - ua ; move ua + ul , ul + ul )  | ( move ul , ul ; move ua + ul , 2 ; move 0 , 3 / 4 )  | ( move ul , ul ; move ua + ul , 3 - ul ; v0 = 2 )  | ( v0 = ul ; ( move v0 , v0 ; move v0 + ua , 2 ) )  
[1560] ( move 3 , 2 ; move 4 - ua , ul )  
[1561] ( move 3 , ul ; move 4 + 2 , ul )  | ( move 3 , ul ; move 3 * 2 , ul )  | ( move 3 , ul ; move 3 + 3 , ua + ul )  | ( move ua / 2 , ul ; move 4 + 2 , ul )  | ( ( pen 4 ; move 3 , ul ) ; move 4 + 2 , ul )  | ( move 3 , ul ; move ul , ul ; move 3 + 2 , 0 )  
[1562] ( move ua , 2 / ua ; move 4 , 2 )  | ( pen ul ; move ua , 2 / ua ; move 4 , 2 )  
[1563] ( move 0 , 4 * 4 ; move ua , ul )  | ( move 0 , ua / 4 ; move ua , 3 + 3 )  | ( move ul / ua , ul ; move ua , 4 * 4 )  | ( v0 = 3 * 2 ; v1 = v0 ; move v1 , ul - v0 )  
[1564] ( move ul , 4 ; move 0 - 4 , ul )  | ( move 4 , 3 + 2 ; move ul , ua / 3 )  
[1565] ( move 3 * 2 , ul ; move 2 , ul )  | ( move 3 * 2 , ua + ul ; move 2 , ul )  | ( ( move 3 , ul ; move 3 , ua ) ; move 2 , ul )  | ( move 4 + 2 , ua + ul ; pen ua ; move 2 , ul )  | ( move 3 * 2 , ul ; pen ua + ul ; move 2 , ul )  | ( move 3 , ul ; move 3 , ua ; move ul + ul , ul )  | ( move 4 , ul ; ( move 2 , 0 ; move 2 , ua + ul ) )  | ( move 4 + 2 , ua + ul ; move 2 , ul ; move 0 , ua )  | ( ( move 2 , ul ; move 4 , ua * 4 ) ; move 3 - ul , ul )  
[1566] ( move ua , 3 - 4 ; move ul , 2 )  | ( move ua , 0 - ul ; move ul , 2 )  | ( move ua , ul - 2 ; move ul , 2 )  | ( move ua , ua - ul ; move ul , 2 )  | ( move ua , ua - ul ; move ul , ua + 2 )  | ( move ua , ua - ul ; ( move ul , 2 ; v0 = ul ) )  | ( pen ua + ua ; ( move ua , ua - ul ; move ul , 2 ) )  | ( move ua , ua - ul ; move 0 , ul ; move ul , ul - ua )  | ( move ul - 2 , ul ; move 0 - ua , ua - 2 ; move 0 , ul )  
[1567] ( move ua - ul , 4 ; move 2 , 3 )  | ( move ua - ul , 4 ; ( move ul , 3 ; pen ul ; move ul , ua ) )  
[1568] ( move ua , 2 / 3 ; move 2 , ul )  | ( move ua , 2 / 3 ; ( move ul + ul , ul ; v0 = ul ) )  
[1569] ( move ul - ua , 4 ; move 3 , 2 )  | ( move ul - ua , 2 * 2 ; move 0 , ul ; move 3 , ul )  
[1570] ( move 4 , ul ; move 3 + 2 , ul )  | ( move 4 , ul ; move 4 + ul , ul )  | ( move 4 , ul ; move 4 , ul ; move ul , ua )  | ( move 4 , ul ; move 3 + 2 , ul ; move 0 , ua )  | ( move 4 , ul ; ( move 4 , ul ; move ul , 0 ) )  | ( ( move 4 , ul ; move 4 + ul , ul ) ; pen 4 )  | ( move 4 , 2 - ul ; move ul , ul ; move 4 , ua )  | ( move 3 + ul , ul ; move 4 + ul , ul ; pen 4 )  | ( pen ul ; ( move 4 , ul ; move 4 + ul , ul ) )  | ( move 4 , ul ; pen ua + 4 ; move 3 + 2 , 2 - ul )  | ( move 3 + ul , ul - ua ; move 2 , ul ; move 3 , 0 )  | ( move 3 + ul , ul ; move 4 + ul , ul ; v0 = 4 )  | ( move 4 , ul ; move 4 + ul , ul ; move 0 - ul , ua )  | ( move 3 + ul , ul ; move 4 + ul , ul ; v0 = 3 - ua )  
[1571] ( move 3 , ul ; move ul , 3 + 3 )  | ( move 3 , ul ; move ul , 3 * 2 )  | ( move ua / 2 , ul - ua ; move ul , 4 + 2 )  | ( move 3 , ul ; move ul , 3 + 3 ; v0 = ua )  | ( ( move 3 , ul ; v0 = 4 + ul ) ; move ul , ul + v0 )  
[1572] ( move 2 , 2 ; move ua , ul / 3 )  
[1573] ( move ul , 2 ; move 4 + 3 , ul )  | ( move ul , ul + ul ; move 4 + 3 , ul )  | ( move ul , 2 ; move ua + ul , ua + ul )  | ( move ul , 2 ; pen 4 ; move ua + ul , ul )  | ( move ul , 2 ; move ua + ul , ul ; v0 = ul )  | ( ( pen 3 ; move ul , ua + 2 ) ; move 4 + 3 , ul )  
[1574] ( move 2 / 3 , 2 ; move ua , ul )  | ( move 4 / ua , 2 ; move ua , ul ; pen 2 )  | ( move 2 / 3 , 2 ; v0 = 0 ; move ua , ua + ul )  | ( pen ul + ul ; move 4 / ua , 4 / 2 ; move ua , ul )  
[1575] ( move 4 , ul ; move 0 - 4 , ul )  
[1576] ( move ua - 3 , ul ; move 3 , 3 )  | ( move ua / 2 , ul ; move 3 , 3 )  | ( move ua - 3 , ul ; v0 = 2 + ul ; move v0 , v0 )  
[1577] ( move 3 , ul / ua ; move 2 , 2 )  | ( move 2 , ua - ul ; move 3 , 2 - 4 )  
[1578] ( move ua , 4 * 3 ; move ua , 2 )  
[1579] ( move 3 , 2 ; move ua , ul - 4 )  | ( move 2 , ua + 2 ; v0 = ua - 3 ; move ua , v0 )  | ( move ul + ul , 2 ; ( v0 = ul ; move ua , v0 - 4 ) )  
[1580] ( move ua - 4 , ua ; move 2 , 4 )  
[1581] ( move ua - ul , 4 ; move 3 , 2 )  | ( ( move ua - ul , 4 ; move 0 , ul ) ; move 3 , ua + ul )  
[1582] ( move 3 , 2 ; move 2 , ul / ua )  | ( move 2 + ul , 2 ; move 2 , ul / ua )  | ( move 3 , 2 ; move ua - 4 , ul / ua )  | ( v0 = ul / ua ; move 3 , 2 ; move 2 , v0 )  | ( move 3 , 3 - ul ; move ua - 4 , ul / ua ; v0 = ul )  
[1583] ( move ul , ua - 4 ; move 3 , 2 )  | ( move ul - 4 , 2 - 4 ; move ul , ul )  
[1584] ( move ua , 2 ; move 4 , 4 + ul )  
[1585] ( move ua , 4 ; move 2 , 4 + ul )  | ( move ua , 3 + ul ; move 2 , 4 + ul )  
[1586] ( move ua , 4 ; move 2 - ua , 4 )  
[1587] ( move 4 , 4 ; move ua , ua - 2 )  | ( move 4 , 4 ; move ua , ul - 3 )  
[1588] ( move ua - 2 , 3 ; move ul , 4 )  | ( move ul , 4 ; move 2 - ua , ua - ul )  
[1589] ( move 4 + 3 , ua ; move 3 , ul )  | ( ( move 0 , ua ; move 4 + 3 , 0 ) ; move 3 , ul )  | ( ( move 3 , ua ; move 4 , ua ) ; move 3 , 2 - ul )  
[1590] ( move 3 - ua , 4 ; move ul , 2 )  | ( move ul , 3 ; move ua - 3 , ul )  
[1591] ( move ua + ul , 3 ; move 3 , 4 )  | ( move ua + ul , 3 ; move ua / 2 , 4 )  
[1592] ( move ua + 3 , 4 ; move ua , 4 )  | ( move ua + 3 , 3 + ul ; move ua , 4 )  | ( move ua + 3 , 3 + ul ; move ua , 2 * 2 ; pen ua )  | ( move ua + 3 , 4 ; v0 = ua ; move v0 , 4 - v0 )  
[1593] ( move 3 , ua ; move ua , 2 / 3 )  | ( ( move ul , 0 ; move 2 , 0 ) ; move ua , 2 / 3 ; pen ul )  
[1594] ( move 3 * 3 , ua ; move ua , 3 )  | ( v0 = 3 ; move 3 * v0 , ua ; move ua , v0 )  
[1595] ( move 2 , ua - 4 ; move ua , 4 )  | ( move 2 , ua - 4 ; move ua , 3 + ul ; pen 4 )  
[1596] ( move ua , 2 / 4 ; move ua , 2 )  | ( move ua , ul / 2 ; move ua , 2 )  
[1597] ( move ua , ul ; move 4 + 4 , 2 )  | ( move ua , ul ; move 4 , ul + ul ; move 4 , ua )  | ( ( pen 3 * 2 ; pen ua ) ; move ua , ul ; move 4 + 4 , 2 )  
[1598] ( move 3 , ul ; move ua - 4 , 2 )  
[1599] ( move 4 , ua ; move 2 , 2 / ua )  | ( pen ua + ua ; ( move 4 , ua ; move 2 , 2 / ua ) )  | ( pen ua + ua ; move 3 + ul , ua ; move 2 , 2 / ua )  | ( move 4 , ua * 4 ; v0 = 2 ; move 2 , v0 / ua )  
[1600] ( move ua + 3 , ul ; move 3 , 4 )  | ( move ua , ul ; move 3 , 0 ; move 3 , 4 )  | ( move 3 , ul - ua ; move ua , 0 ; move ua / 2 , 4 )  
[1601] ( move 3 , 4 ; move ua + ul , 3 )  | ( move 2 , 4 ; move ul , 3 ; move ua , 0 )  | ( move 3 , 3 + ul ; pen 2 + ul ; move ua + ul , 3 )  | ( move 2 , 4 ; ( move ua , 3 ; move ul , ua ; pen ua ) )  | ( move ul , ul - ua ; ( move 3 , 3 ; move ua + ul , 3 ) )  
[1602] ( move 3 , ul ; move ua + 3 , 4 )  | ( move 3 , ul ; move ua + 3 , 3 + ul )  | ( pen ua ; move 3 , ul ; move ua + 3 , 4 )  | ( move 3 , ul ; move 3 , 4 ; move ua , ua * 4 )  | ( pen ul ; ( move 3 , ul ; move ua + 3 , 4 ) )  
[1603] ( move ua + 4 , ul ; move 2 , 4 )  
[1604] ( move ul , 0 - 4 ; move 4 , ul )  | ( move 3 + ul , ul / ua ; move ul - 2 , 2 )  | ( ( move ul , ua - 4 ; pen ul ) ; move 4 , ul )  | ( move ul , ua - 4 ; pen ua ; move 3 + ul , ul )  
[1605] ( move 2 , 4 ; move ua + ul , 4 )  
[1606] ( move ul , 4 * 2 ; move ua , 2 )  | ( move ul , 4 * 2 ; ( pen ul ; move ua , 2 ) )  | ( move 2 - ul , 4 * 2 ; pen ul ; move ua , 3 - ul )  
[1607] ( move ul , 0 ; move 4 , ul - 4 )  | ( move 2 , ua ; move 4 , ul - 4 )  | ( move 4 , ul / ua ; move 2 , 4 - ul )  
[1608] ( move 4 , ua - 2 ; move 3 , ul )  | ( move 4 , ul - 3 ; move 3 , ul )  | ( move 4 , 2 - 4 ; move 4 - ul , ul )  
[1609] ( move 3 * 3 , ua ; move ul , 2 )  | ( move 3 , ua ; move 3 + 3 , 0 ; move ul , ul + ul )  
[1610] ( move 4 , ua - 3 ; move ua , 3 )  
[1611] ( move ua - 4 , 2 ; move ua , 4 )  | ( ( move ua - 4 , 2 ; move ua , 4 ) ; v0 = ul / 2 )  
[1612] ( move 2 , ul ; move 4 , ul - 2 )  | ( move 2 , ul ; move 4 , ua - ul )  | ( move 2 , ua + ul ; move 4 , ua - ul )  | ( move 2 , ul ; move 0 , ua ; move 4 , 0 - ul )  | ( move 2 , ul ; move 4 , ul - 2 ; v0 = ul )  | ( move 3 - ul , ul - ua ; move 3 + ul , 3 - 4 )  | ( move 2 , ul ; v0 = ul - 3 ; move 4 , ul + v0 )  | ( ( move 2 , ul ; pen ul ; pen ua + ua ) ; move 4 , ul - 2 )  
[1613] ( move ua , ul / 2 ; move 3 , 2 )  
[1614] ( move ua , 4 ; move ul , 2 - 3 )  | ( move ul , ua ; pen ul ; move 0 - ua , 4 )  | ( move ua , 4 ; move ul , ua - ul ; pen 2 )  | ( move ua , 4 ; pen ua ; move ul , ua - ul )  | ( move ua , 4 ; pen 4 * 2 ; move ul , ua - ul )  | ( move ua , 4 ; move 0 , ua ; move ul , ua - ul )  | ( move ua , 4 ; move ul , ul - 2 ; pen ua - ul )  | ( pen 2 / ua ; move ua , 4 ; move ul , ua - ul )  | ( move ua , ua + 4 ; move ul , ua - ul ; pen ua )  | ( move ua , 4 ; move ul , ua - ul ; move 0 , ua + 2 )  | ( move ua , 4 ; ( move ul , 0 - ul ; v0 = ua * 4 ) )  
[1615] ( move ua , 3 ; move ul , 3 * 2 )  | ( move ua , 3 ; v0 = 3 * 2 ; move ul , v0 )  | ( move ua , 3 ; v0 = 3 ; move ul , v0 + v0 )  
[1616] ( move 4 , ua ; move 4 , ua - 2 )  | ( move 4 , 0 ; move 3 + ul , ul - 3 )  
[1617] ( move 4 , 2 ; move ul , ul - 2 )  | ( move ul , 4 ; move 2 - ua , 0 - 2 )  
[1618] ( move 2 , 4 / ua ; move ua , 2 )  
[1619] ( move 2 , ua - ul ; move 3 , 4 )  | ( move 2 , 0 - ul ; move 3 , ua + 4 )  | ( move 2 , 0 - ul ; move 2 + ul , 3 + ul )  
[1620] ( move 2 , 2 / ua ; move 3 , ul )  | ( move 2 , ul / 3 ; move 3 , ul )  | ( move 2 , ul / 3 ; move 3 , ul ; v0 = ul - 3 )  
[1621] ( move 3 + 2 , ul ; move ul , 4 )  | ( move ua - ul , ul ; move ul , 4 )  | ( move 4 + ul , ul ; move ul , ua + 4 )  | ( move ua - ul , ul ; move ul , ua + 4 )  | ( move 4 + ul , ul ; pen 4 * 3 ; move ul , 4 )  | ( move 3 , ul ; move ul + ul , 0 ; move ul , 4 )  | ( move 3 + 2 , ul ; v0 = ul ; move v0 , 4 )  | ( move ua - ul , ul ; v0 = ua + 4 ; move ul , v0 )  | ( ( pen ul ; move 2 + ul , ul ) ; move 2 , ua ; move ul , 4 )  
[1622] ( move 2 / 3 , ul ; move ua , 2 )  | ( move 4 / ua , ul ; ( v0 = ua ; move v0 , 2 ) )  
[1623] ( move ul , ua + 4 ; move 3 , 3 )  | ( move ul , 4 ; move 3 , ua + 3 )  | ( move ul , 4 ; move 2 , 3 ; move ul , 0 )  | ( move ul , 3 + ul ; move ul , 3 ; move 2 , ua )  | ( move 3 - ua , 4 + 3 ; move ua - 4 , 0 ; move 0 , ua )  | ( move ul , 3 + ul ; v0 = 3 ; move v0 , ua + v0 )  
[1624] ( move ul , 3 ; move ua + 3 , 4 )  | ( move ul , 3 ; move ua + 3 , 4 - ua )  | ( pen ua ; move ul , 3 ; move ua + 3 , 4 )  | ( ( move ul , 2 + ul ; move 4 , 4 ) ; move ua - ul , ua )  
[1625] ( move 2 , 3 ; move ua , ul - 4 )  | ( move 2 , 3 ; pen 4 ; move ua , ua - 3 )  | ( pen ua ; move 2 , 2 + ul ; move ua , ul - 4 )  
[1626] ( move ua / 4 , 0 ; move 3 , ul )  | ( move ua / 4 , ua ; move 3 , ul )  
[1627] ( move ua , ua / 4 ; move 2 , 2 )  
[1628] ( move ua , ul ; move 2 - 4 , 3 )  | ( move ua , ul ; move ul - 3 , 3 )  | ( move ua + ul , ul ; move ul , 3 * 2 )  | ( move ua , ul ; v0 = 3 ; move ul - v0 , v0 )  | ( ( move ua , ua + ul ; move ul - 3 , 3 ) ; pen ua * 2 )  | ( ( pen ua ; pen ua * ua ) ; move ua , ul ; move 2 - 4 , 3 )  
[1629] ( move 4 , ul ; move ul - 2 , 2 )  | ( move 4 , ul ; move ul , 2 - 3 )  | ( move 4 , ul ; move ul , 0 - ul )  | ( move 4 , ul ; move ul , ua - ul )  | ( move 3 + ul , ul ; move ul , ua - ul )  | ( move ul , ua / 2 ; move 4 , ul ; pen ua )  | ( move ul , ua / 2 ; move 4 , ul ; pen ul )  | ( move 4 , ul ; move ul , ua - ul ; pen ul )  | ( move 4 , ul ; pen 3 + ul ; move ul , 0 - ul )  | ( move 3 + ul , ul ; pen 3 ; move ul , ua - ul )  | ( move 3 + ul , ul ; move ul , ua - ul ; pen ul - ua )  | ( ( pen ua ; move 4 , ul ) ; move ul , ua - ul ; v0 = ua )  
[1630] ( move 3 , ul - 3 ; move ul , 2 )  | ( move 2 - 3 , ul / ua ; move 3 , ul )  
[1631] ( move 4 , 3 ; move 2 - ua , ul )  
[1632] ( move ul - 2 , 2 ; move 4 , ul )  | ( ( move ul - 2 , 2 ; move 4 , ul ) ; v0 = 4 )  | ( move ul , ua - ul ; ( v0 = 3 ; move 4 , 4 ) )  
[1633] ( move ua + ul , 4 ; move 4 , 2 )  | ( move ua + ul , 3 + ul ; move 4 , 2 )  | ( pen 2 + ul ; move ua + ul , 4 ; move 4 , 2 )  
[1634] ( move ua , 3 ; move 3 + ul , 4 )  | ( move ua , 2 + ul ; move 4 , 4 )  | ( move ua , 3 ; move 4 , 4 - ua )  | ( move ua , 3 ; v0 = 4 ; move v0 , v0 )  | ( pen 2 + ul ; move ua , ua + 3 ; move 4 , 4 )  | ( move ua , 2 + ul ; v0 = 4 ; move v0 , v0 - ua )  | ( move ua , 3 ; move 2 + 2 , 4 ; ( v0 = 2 ; pen 2 ) )  | ( ( move ua , 3 ; pen ua ; v0 = 4 ) ; move v0 , v0 )  
[1635] ( move 2 , 4 ; move ua - 3 , ul )  
[1636] ( move ua , 4 + ul ; move 2 , 4 )  | ( move ua , 4 + ul ; move 2 , 4 ; pen ua )  | ( move ua , 3 + 2 ; move 2 , ua + 4 ; pen 0 )  
[1637] ( move ul - ua , 2 ; move 4 , 3 )  
[1638] ( move 3 , 3 ; move ua + ul , 4 )  | ( move 3 , 3 ; move ua + ul , ua + 4 )  | ( move 3 , 3 ; move ua + ul , 3 + ul )  | ( move 3 , 3 ; move ua , 4 ; move ul , ua )  
[1639] ( move ua , ul / 2 ; move 2 , 3 )  
[1640] ( move ul , 0 ; move 4 , ul / 2 )  | ( move ul , ua ; move 4 , ul / 2 )  | ( move ul , 0 ; move 3 + ul , 3 / ua )  | ( move ul , ua ; move 4 , ul / 2 ; pen 0 )  | ( move ul , ua ; ( move 4 , 2 / 4 ; pen 2 ) )  | ( move ul , ua ; move 4 , 3 / ua ; v0 = ua + ul )  
[1641] ( move ua , 3 ; move ua , 3 - 4 )  | ( move ua , 3 ; move ua , 0 - ul )  | ( move ua , ua + 3 ; move ua , ua - ul )  | ( pen 4 + ul ; move ua , 3 ; move ua , 0 - ul )  | ( move ua , 3 - ua ; pen 2 ; move ua , ua - ul )  | ( move ua , 3 ; ( pen ul ; move ua , ua - ul ) )  | ( ( move ua , 3 ; move ua , ul - 2 ) ; v0 = ua )  | ( move ua , 3 ; pen ul ; ( pen ua ; move ua , ua - ul ) )  
[1642] ( move ua + 4 , ul ; move 3 , 3 )  | ( move 4 , ul ; move ua , 0 ; move ua - 3 , 3 )  | ( move ua , ul ; move 4 , ua ; move 2 + ul , 3 )  
[1643] ( move ua , ul ; move 4 + 4 , 3 )  | ( move ua , ul ; move ua + 2 , 3 )  | ( move ua , ul ; move ua + 2 , 4 - ul )  | ( move ua , ul ; move ua + ul , 3 ; move ul , 0 )  | ( v0 = ua - ul ; move ua , ul ; move v0 + 3 , 3 )  | ( ( move ua , ua + ul ; move 2 , 2 + ul ) ; move ua , ua )  
[1644] ( move 4 , 2 ; move 4 - ua , ul )  
[1645] ( move ul , 4 ; move 2 - ua , 4 )  | ( move ul , 4 - ua ; move 2 - ua , 4 )  
[1646] ( move 4 , ul ; move 4 - ua , 2 )  
[1647] ( move 3 , 3 ; move ul - ua , 4 )  | ( move 3 , 3 ; move ul - ua , 3 + ul )  | ( move 3 , ua + 3 ; move ul - ua , 4 ; pen 0 - ul )  
[1648] ( move ul , 4 ; move ua , 3 * 2 )  | ( move ul , 4 ; move 4 + 2 , 3 * 2 )  | ( v0 = 4 + 2 ; move ul , 4 ; move ua , v0 )  | ( move ul , 4 - ua ; v0 = ua ; move v0 , 3 + 3 )  | ( move ul , 4 ; ( move 0 , ua + 3 ; move ua , 3 ; pen 0 ) )  
[1649] ( move ul , 4 ; move ua , 4 + 3 )  | ( move ul , ul ; move ul , 3 ; move ua , 4 + 3 )  
[1650] ( move 2 - 4 , 4 ; move ua , ul )  | ( move ul - 3 , 4 ; move ua , ul )  | ( move 2 - 4 , 4 ; move ua , ua + ul )  | ( move 2 - 4 , 4 ; move ua , ul ; move 0 , 4 / 2 )  | ( v0 = ua + 2 ; move ua - v0 , 4 ; move ua , ul )  | ( ( move 0 - 2 , 4 ; pen ua ) ; move ua , ul ; v0 = ul )  
[1651] ( move ua - 3 , 3 ; move ul , 4 )  | ( move ua - 3 , 3 ; move 3 - 2 , 4 )  
[1652] ( move 3 , ul / 2 ; move 2 , ul )  | ( move 3 , 3 / ua ; ( move 2 , ul ; pen ua ) )  
[1653] ( move ua , ul ; move 3 , 3 / 2 )  
[1654] ( move ua , 3 / 2 ; move 3 , ul )  
[1655] ( move 2 , ul / 4 ; move ua , 2 )  
[1656] ( move 4 , 2 / ua ; move ua , 3 )  
[1657] ( move ua , 4 + ul ; move 3 , 4 )  | ( move ua , 4 + ul ; move 4 - ul , 4 )  | ( move ul , 3 ; ( v0 = ua ; move ua , 2 ; move 3 , 4 ) )  
[1658] ( move ul , 2 ; move 4 + ul , 4 )  | ( move ul , ul + ul ; move 4 + ul , 4 )  | ( move ul , 2 ; move 4 , 4 ; move ul , ua )  | ( move ul , 2 ; move 4 , 3 + ul ; move ul , 0 )  | ( move ul , ul + ul ; move 4 , 4 ; move ul , ua )  | ( move ul , 2 ; ( pen 3 - 2 ; move 3 + 2 , 4 ) )  | ( ( move ul , 2 ; pen ua ) ; move 4 + ul , 3 + ul )  | ( move ul , 2 ; ( pen ua + ul ; move 3 , 4 ) ; move 2 , ua )  
[1659] ( move 4 * 2 , ul ; move 2 , ul )  | ( move 4 + 4 , ul ; move 4 / 2 , ul )  | ( move 4 * 2 , ul ; move ua / 3 , ul )  | ( move 4 * 2 , ua + ul ; move 2 , ua + ul )  | ( move 4 , ul ; move 3 + ul , ua ; move 3 - ul , ul )  
[1660] ( move 2 , 4 / ua ; move 2 , ul )  
[1661] ( move ua , 2 ; move 2 , ul / 4 )  
[1662] ( move ua , 3 / ua ; move 3 , 3 )  | ( ( move ua , 3 / ua ; v0 = 3 ) ; move v0 , v0 )  
[1663] ( move ul / 3 , 0 ; move 4 , ul )  | ( move ul / 4 , 0 ; move 4 , ul )  | ( move ul / 4 , ua ; move 4 , ul )  | ( move ul / 4 , ua ; move 3 , ul ; move ul , 0 )  | ( ( move ul / 4 , 0 ; move 4 , ul ) ; v0 = ua )  | ( move ul / 4 , ua ; move 4 , ul ; move 0 , ua + ua )  
[1664] ( move ul - 2 , 4 ; move ua , 4 )  | ( move ul , ul ; move ua , 4 + 3 )  | ( move 0 - ul , 2 * 2 ; move ua , 4 )  | ( move 0 - ul , 4 ; move ua , 4 - ua )  
[1665] ( move 4 - ua , ul ; move 2 , 4 )  
[1666] ( move ul , 4 * 3 ; move ua , 2 )  | ( move ul , 4 * 3 ; move ua , 3 - ul )  | ( move ul , 4 * 3 ; move ua , 3 - ul ; pen ul )  | ( pen ul ; move ul , 4 * 3 ; move ua , ul + ul )  
[1667] ( move ul , 0 ; move 4 , 4 / ua )  | ( move ul , ua ; move 4 , 4 / ua )  | ( pen ua - 3 ; ( pen ua ; move ul , ua ; move 4 , 4 / ua ) )  
[1668] ( move ua , ua / 3 ; move 4 , 2 )  
[1669] ( move ua + 4 , 4 ; move ua , 4 )  | ( v0 = ua + 4 ; move v0 , v0 ; move ua , v0 )  
[1670] ( move 4 / ua , 0 ; move 4 , ul )  | ( move 2 / 3 , ua ; move 4 , ul )  | ( v0 = 4 ; move v0 / ua , 0 ; move v0 , ua + ul )  | ( move 4 / ua , ua * 4 ; move 4 , ul ; v0 = ua + 4 )  
[1671] ( move ua , 3 ; move ul , 3 - 4 )  | ( move ua , 3 ; move ul , ua - ul )  | ( move ua , 2 + ul ; move ul , ua - ul )  | ( move ua , 4 - ul ; move ul , ul - 2 ; move 0 , ul - 2 )  
[1672] ( move 4 , ua ; move ul - 4 , 2 )  | ( v0 = 4 ; move v0 , ua ; move ul - v0 , 2 )  | ( move 4 , ua ; move ul - 4 , 2 ; ( move 0 , ua ; pen 2 ) )  
[1673] ( move ua , 2 / 3 ; move ua , 4 )  
[1674] ( move 3 , 4 ; move ul - ua , 3 )  | ( move 2 , 4 ; ( move ul , ua ; move ul - ua , 3 ) )  
[1675] ( move ul , 2 ; move ua , 4 * 3 )  | ( move ul , 2 ; v0 = 4 ; move ua , v0 * 3 )  
[1676] ( move ul , 3 / ua ; move 3 , 2 )  | ( move ul , 3 / ua ; pen ua ; move 3 , 2 )  | ( ( move ul , ul / 2 ; move ul , 2 ) ; move 4 / 2 , ua )  
[1677] ( move 2 , ul ; move ul - 3 , 4 )  | ( move 4 - 2 , ul ; move 0 - 2 , 3 + ul )  | ( move ul , ul ; move ul , 0 ; move ul - 3 , 4 )  
[1678] ( move 3 , 4 + 4 ; move ua , ul )  | ( pen 2 ; move 3 , 4 * 2 ; move ua , ul )  
[1679] ( move ua , ua ; move 2 / 4 , 3 )  | ( move ua , 0 ; move ul / 3 , 2 + ul )  | ( move ua , ua ; move ul / ua , ul / 4 )  | ( move ua , ua ; move ul / 3 , 3 ; pen ul )  | ( v0 = ul / 4 ; move ua , ua ; move v0 , v0 )  | ( pen ul ; move ua , ua * 2 ; move 2 / 4 , ul / ua )  | ( ( pen 2 ; move ua , ua ; move ul / ua , ul / 4 ) ; pen 0 )  
[1680] ( move 4 + 3 , ua ; move ul , 4 )  | ( move ua + ul , 0 ; move ul , 4 )  | ( move ua + ul , ua ; move ul , 4 )  | ( move ua + ul , ua ; move ul , 3 + ul )  | ( move ua , 0 ; move ul , 0 ; move ul , 4 )  | ( move ua + ul , ua ; v0 = 0 ; move ul , 4 )  | ( pen ul ; ( move ua + ul , 0 ; move ul , 4 ) )  | ( move ul , 0 ; move ua , ua ; move ul , ua + 4 )  | ( v0 = ul ; move v0 + ua , 0 ; move v0 , 4 )  | ( move ua + ul , ua ; ( pen ua ; move ul , ua + 4 ) )  | ( move ua + ul , ua * 2 ; v0 = ul ; move v0 , 4 )  | ( pen ua ; ( move ua , ua ; move ul , ua ; move ul , 4 ) )  | ( v0 = ul ; move ua + ul , ua ; move v0 , v0 * 4 )  | ( ( move ua + ul , ua ; move ul , 4 ) ; v0 = 4 + ul )  | ( ( move ua + ul , ua ; move ul , 3 + ul ) ; pen 2 + ul )  | ( move ua + ul , 0 ; ( pen 0 ; v0 = 3 ; move ul , 4 ) )  | ( pen 0 ; pen ul + ul ; ( move ua + ul , 0 ; move ul , 4 ) )  
[1681] ( move 2 , ua ; move 3 , ua / 4 )  
[1682] ( move ul , 4 + 4 ; move ua , 3 )  
[1683] ( move 3 , 4 ; move 3 - ua , ul )  | ( move 2 + ul , 4 ; move 3 - ua , ul )  
[1684] ( move 3 , ua - 3 ; move ul , 4 )  | ( move 2 + ul , 0 - 3 ; move ul , 4 )  | ( move 3 , ul - 4 ; move 2 - 3 , ul )  | ( move 3 , ua - 3 ; move ul , 4 ; v0 = ua )  
[1685] ( move 4 * 2 , 2 ; move ul , ul )  | ( move ua + 2 , 2 ; move ul , ul )  | ( move 4 + 4 , 3 - ul ; move ul , ul ; pen ul )  
[1686] ( move 4 , 3 / ua ; move ua , 2 )  
[1687] ( move ul , 3 ; move ua , 4 + 4 )  | ( move ul , 3 - ua ; ( move ua , 4 + 4 ; pen 3 ) ; pen ul )  | ( ( move ul , ua + 3 ; pen ul ; pen ul ) ; move ua , 4 * 2 )  
[1688] ( move ul , 2 / 4 ; move ua , 2 )  | ( move ul , 3 / ua ; move ua , 2 )  | ( move ul , 2 / 4 ; move ua , 2 ; pen ul - 2 )  
[1689] ( move 4 , 3 ; move ua - ul , 3 )  | ( move 4 , ua + 3 ; pen ul ; move 4 + ul , 3 )  
[1690] ( move 3 , 4 ; move ua - ul , 3 )  
[1691] ( move 2 , ul ; move 3 , 3 / ua )  | ( move 2 , ua + ul ; move 3 , 3 / ua )  | ( pen ua ; move 2 , ul ; move 4 - ul , 3 / ua )  | ( move 2 , ul ; ( move 4 - ul , 3 / ua ; v0 = ua ) )  
[1692] ( move 4 , ua ; move 4 + 3 , ul )  | ( pen 3 ; move 4 , ua ; move 4 + 3 , ul )  
[1693] ( move ua , 4 + ul ; move 4 , 3 )  | ( pen ua ; move ua , 4 + ul ; move 4 , 3 )  
[1694] ( move 2 , ul / ua ; move 4 , 2 )  | ( move 2 , ul / ua ; move 2 * 2 , 2 )  
[1695] ( move 3 , ua / 2 ; move ua , 4 )  | ( move ua , 4 - ua ; move 3 , ua - 4 )  | ( move ua , 3 + ul ; move 2 + ul , ua - 4 )  | ( move ua , ua + 4 ; ( pen ul + ul ; move 3 , ua - 4 ) )  
[1696] ( move 3 , ul / ua ; move 2 , 3 )  | ( move 3 , ul / ua ; move 2 , 4 - ul )  
[1697] ( move 4 * 2 , ul ; move ua , 3 )  | ( ( move 4 , ul ; move 4 , 0 ) ; move ua , 3 )  | ( move 4 * 2 , ul ; ( move ua , 3 ; pen 0 ) )  
[1698] ( move 4 + 2 , ul ; move 4 , ul )  | ( move 4 + 2 , ua + ul ; move 4 , ul )  | ( pen 3 ; move 3 * 2 , ul ; move 4 , ul )  | ( move 4 + 2 , ul - ua ; move 4 , ul - ua )  | ( move 4 , ul ; move ul + ul , ua ; move 4 , ul )  | ( move 4 + 2 , ul ; ( move 4 , ul ; v0 = ua ) )  | ( ( move 3 + 2 , ul ; move ul , ua ) ; move 4 , ul )  | ( move 4 , ul ; move 2 , 0 ; ( v0 = ul ; move 4 , ul ) )  | ( ( move 2 , ul ; move 4 , 0 ) ; move 4 , ul ; pen ua / 4 )  
[1699] ( move 2 , ul ; move 3 , ua / 3 )  | ( move 0 , ul ; move 2 , 0 ; move 2 + ul , ua / 3 )  
[1700] ( move ua , 3 ; move ua - 4 , 4 )  
[1701] ( move 4 , 2 ; move ul , 4 + ul )  | ( move 4 , ul + ul ; move ul , 3 + 2 )  | ( move 4 , ul + ul ; move ul , 4 + ul )  | ( move 4 , 2 ; move ul , 4 + ul ; pen 4 )  | ( move 4 , 2 ; v0 = ul ; move v0 , v0 + 4 )  | ( move 4 , 2 - ua ; v0 = 4 ; move ul , v0 + ul )  
[1702] ( move 3 , ua ; move 3 , 3 / ua )  | ( ( v0 = 3 ; move 3 , ua ) ; move v0 , v0 / ua )  | ( move 0 , ua ; ( move 3 , 0 ; move 3 , ul / 2 ; pen ua ) )  | ( move ul , ua ; ( pen ul ; move 2 , ua ; move 3 , 3 / ua ) )  
[1703] ( move ua - 4 , 4 ; move 2 , ul )  
[1704] ( move 3 , ul ; move ul , 4 + 3 )  | ( move 3 , ul ; move ul , 2 / 3 )  | ( move 3 , ul ; move ul , 3 / 4 )  | ( move 3 , ul - ua ; move ul , 4 + 3 )  | ( move 2 + ul , ul ; move ul , 4 / ua )  | ( pen 3 ; move 2 + ul , ul ; move ul , ul / 2 )  | ( move 3 , ul ; ( pen ua / 4 ; move ul , 4 / ua ) )  | ( ( pen 4 ; move 3 , ul ; move ul , 4 / ua ) ; v0 = 2 )  
[1705] ( move ua , 3 ; move 3 , ul - 4 )  
[1706] ( move ua , ul ; move 3 * 2 , 4 )  | ( move ua , ul ; move 4 + 2 , 4 ; v0 = 3 )  | ( move ua , ul ; ( move 2 , 4 ; ( pen 2 ; move 4 , 0 ) ) )  | ( move ua , ua + ul ; ( pen 2 ; pen 2 ) ; move 4 + 2 , 4 )  | ( ( move ua , ul ; move 3 * 2 , 4 ; move 0 , ua ) ; pen ul )  
[1707] ( move ua , 4 * 2 ; move 3 , ul )  | ( move ua , 4 + 4 ; move 3 , ul )  
[1708] ( move ua , ua - 3 ; move 4 , 4 )  | ( move ua , 0 - 3 ; v0 = 4 ; move v0 , v0 )  
[1709] ( move ul , 2 ; move 4 , 4 + ul )  | ( move ul , 2 ; ( move 4 , 3 + 2 ; v0 = ul ) )  | ( move ul , ul + ul ; ( move 4 , 4 + ul ; pen ua ) ; pen ul )  
[1710] ( move 3 , ua ; move ua - 4 , 4 )  
[1711] ( move ul - 2 , ua ; move 4 , 4 )  | ( move ul , 3 ; move ua - 2 , ul )  | ( move 0 - ul , 0 ; ( v0 = 4 ; move v0 , 4 ) )  | ( ( pen ua + ul ; move ul , 3 ) ; move ua - 2 , ul )  
[1712] ( move 4 , ul ; move 4 + 2 , ul )  | ( move 4 , ul ; move 3 + 3 , ul )  | ( move 4 , ul ; move 4 + 2 , ul ; v0 = ua )  | ( ( move 3 , ul ; move ul , 0 ) ; move 3 + 3 , ul )  | ( v0 = 3 ; move ul + v0 , ul ; move v0 * 2 , ul )  | ( move 3 , 2 - ul ; move ul , ua + ua ; move 3 * 2 , ul )  | ( move 4 , ul ; ( move 3 , ul ; v0 = ua ) ; move 3 , ua )  
[1713] ( move 3 , ul ; move ua , 3 / 2 )  
[1714] ( move 3 , ul ; move ul - 4 , 2 )  
[1715] ( move 2 , 3 ; move ua , ul / 3 )  
[1716] ( move ua , 3 ; move ul , 4 * 2 )  | ( move ua , 3 ; move ul , ua / 4 )  | ( move ua , ua + 3 ; move ul , 4 * 2 )  | ( v0 = ua ; move v0 , 3 ; move ul , ua * ua )  | ( ( move ua , 3 ; v0 = ua ) ; move ul , v0 * v0 )  
[1717] ( move ua , 2 ; move ua , 4 / 3 )  
[1718] ( move 3 , 4 + ul ; move 3 , ul )  | ( move 3 , 4 + ul ; pen ua ; move 3 , ul )  | ( move 3 , 4 + ul ; ( pen ua ; move 3 , ua + ul ) )  
[1719] ( move ua + ul , 3 ; move 4 , 4 )  
[1720] ( move ua , ul / 3 ; move 2 , 3 )  | ( move ua , ul / 3 ; move 2 , 2 + ul )  
[1721] ( move ua , 3 ; move ul , 2 / 3 )  | ( move ua , 3 ; move ul , 2 / 4 )  | ( pen ua ; move ua , 3 ; move ul , ul / 2 )  | ( move ua , 3 ; move ul , 3 / ua ; pen ul )  | ( move ua , 2 + ul ; ( pen ua ; move ul , 2 / 4 ) )  
[1722] ( move 4 + 3 , ul ; move ua , 4 )  | ( move 3 , ul ; move 4 , ua ; move ua , 4 )  | ( ( move 4 + 3 , ul ; move ua , 4 ) ; pen ul )  
[1723] ( move ul - 4 , ua ; move 2 , 4 )  | ( ( pen ua - ul ; move ul - 4 , ua ) ; move 2 , 4 )  
[1724] ( move 4 , 4 ; move ua - 2 , ul )  
[1725] ( move 4 , 4 + ul ; move ua , 3 )  | ( move 4 , 4 + ul ; v0 = ua ; move v0 , 3 )  
[1726] ( move 2 , ul ; move 2 , ua / 4 )  
[1727] ( move 3 , ua ; move ul , 4 * 2 )  | ( move 3 , ua ; move ul , 4 + 4 )  | ( move 3 , 0 ; move ul , ua * ua )  | ( move 3 , ua ; move ul , ua * ua )  | ( move 2 + ul , 0 ; move ul , 4 * 2 )  | ( move 3 , ua + ua ; move ul , ua * ua )  | ( move 2 + ul , ua ; move ul , ua * ua )  | ( pen ua ; move 3 , ua ; move ul , ua * ua )  | ( move 3 , 0 ; move 0 , 4 ; move ul , 4 - ua )  | ( move 3 , ua ; move 0 , 3 + ul ; move ul , 4 )  | ( ( move 3 , ua ; move ul , ua * ua ) ; move 0 , 4 )  | ( move 4 - ul , ua ; v0 = 4 + 4 ; move ul , v0 )  
[1728] ( move ua , ul ; move 4 + 3 , 4 )  | ( move ua , ul ; ( move 4 + 3 , 4 ; pen ul - 3 ) )  | ( move ua , ul ; move 4 + ul , 4 ; move 2 , ua + ua )  
[1729] ( move ua , 4 * 3 ; move 2 , ul )  | ( move ua , 4 * 3 ; move 2 , ua + ul )  
[1730] ( move ua - 3 , ul ; move 3 , 4 )  
[1731] ( move 3 - 4 , ul ; move ua , 3 )  | ( move 0 - ul , ul ; move ua , 3 )  | ( move ul - 2 , ul ; move ua , 3 )  | ( move ul - 2 , ul ; move ua , 3 ; pen 0 )  | ( move ul - 2 , ul - ua ; move ua , 3 ; v0 = 3 )  | ( move 2 - 3 , ul ; move ua , 2 + ul ; v0 = ua / 4 )  
[1732] ( move ul , ul ; move 4 , 2 - 3 )  | ( move ul , ul ; move 4 , ul - 2 )  | ( move 4 , ua / 2 ; move ul , ul )  | ( move ul , ul ; move 4 , ua - ul )  | ( move 2 - ua , 0 ; move 2 - 3 , ul )  | ( move ul , ul ; move 2 * 2 , ul - 2 )  | ( move 2 - ua , ua ; move ul , ua + 4 )  | ( move 4 , ua / 2 ; pen ul ; move ul , ul )  | ( move ul , ul ; move 4 , ul - 2 ; v0 = ua )  | ( move ul , ua + ul ; pen ua ; move 4 , ua - ul )  | ( move ul , ul ; ( move 4 , 0 - ul ; v0 = ua ) )  | ( move 4 , ua / 2 ; ( move 2 - ul , ul ; pen ua ) )  | ( move ul , ul ; move 3 + ul , 0 - ul ; v0 = 4 / ua )  | ( v0 = ul ; move v0 , v0 ; move v0 + 3 , 0 - ul )  
[1733] ( move ul , 2 - 4 ; move ua , 4 )  | ( move 2 - ul , 2 - 4 ; move ua , 4 )  | ( v0 = 2 - 4 ; move ul , v0 ; move ua , 4 )  | ( move ul , ua - 2 ; v0 = 4 ; move ua , v0 )  | ( move 0 , ul - 4 ; move ul , ul ; move ua , 4 - ua )  | ( ( move ul , ul - 3 ; pen 4 ) ; move ua , 4 ; pen ul )  | ( move ul , ul - 3 ; ( move ua , 4 ; v0 = ua * 4 ) )  
[1734] ( move 3 , 3 ; move 4 + ul , ul )  | ( move 3 , 2 + ul ; move 3 + 2 , ul )  | ( move 2 + ul , ua + 3 ; move 3 + 2 , ul )  | ( move 3 , 3 ; move 4 + ul , ul ; v0 = 4 * 2 )  | ( ( move 3 , 2 + ul ; v0 = 3 + 2 ) ; move v0 , ul )  | ( ( move 3 , 3 ; move 3 + 2 , ul ; pen 4 / ua ) ; pen ul )  
[1735] ( move 3 , 2 / ua ; move 3 , ul )  | ( move 3 , ul / 3 ; move 4 - ul , ul )  | ( move 3 , ul / 3 ; v0 = 0 ; move 3 , ul + v0 )  
[1736] ( move ua , ua ; move 4 , 4 * 2 )  | ( move ua , 0 ; ( pen 2 ; move 4 , 4 * 2 ) )  | ( move ua , ua ; move 0 , 4 ; move 4 , 3 + ul )  | ( move ua , 0 ; v0 = 4 ; move v0 , v0 + v0 )  | ( move ua , ua ; v0 = 4 ; move v0 , v0 + v0 )  
[1737] ( move 3 , 2 ; move ua , 4 / ua )  
[1738] ( move 2 , 4 ; move 4 - ua , ul )  | ( move ul , ul ; move 3 - ul , 3 ; move 4 - ua , ul )  
[1739] ( move ua , 3 ; move 2 , 4 / ua )  | ( move ua , 3 ; move ul + ul , 4 / ua )  | ( move 0 , ul ; move ua , 2 ; move 2 , 4 / ua )  
[1740] ( move ul , 2 / ua ; move 3 , 3 )  | ( move 3 - 4 , ua - 3 ; move 3 , ua )  | ( move 3 , ul / ua ; move ul , ul - 4 )  | ( move ul , ul / ua ; move ul - 4 , ua )  | ( pen 3 ; move ul , 0 ; move 3 , ul - 4 )  | ( move ul , ul / 3 ; move 0 , 3 ; move 3 , 0 )  | ( move ul , ul / 3 ; move 3 , 3 ; v0 = ul )  | ( move ul , ul - 4 ; move ul - 4 , ua * 2 ; v0 = ul )  
[1741] ( move ua + 3 , ul ; move 4 , 4 )  | ( move 3 , ul ; move ua , ua ; move 4 , 4 )  | ( move ua , ua + ul ; move 3 , ua ; move 4 , 4 )  | ( move ua + 3 , ul ; pen ua / 4 ; move 2 * 2 , 4 )  
[1742] ( move 2 , 4 ; move 4 + ul , ul )  | ( move 2 , 4 ; move 3 , ul ; ( move 2 , 0 ; move ul , 3 ) )  
[1743] ( move ua , 3 ; move ul - 3 , 4 )  
[1744] ( move 4 , ua ; move 4 , ul - 2 )  | ( move 4 , 0 ; move 3 + ul , ul - 2 )  | ( move 3 + ul , 0 ; move 4 , ul - 2 )  | ( move 4 , ua ; v0 = ul ; move 4 , ua - ul )  | ( move ul , 2 ; move 3 , ul / ua ; move 4 , ul - ua )  | ( move 4 , ua ; ( move 3 , ua - ul ; move ul , ua + ua ) )  
[1745] ( move 4 + 4 , ul ; move ul , 2 )  | ( move ua + 2 , ul ; move ul , 2 )  | ( move 4 * 2 , ul ; move ul , 2 ; pen ua )  | ( ( move ua , ul ; move ua / 3 , 0 ) ; move ul , 2 )  
[1746] ( move ul , ul ; move 4 + 4 , 2 )  | ( pen ua ; move ul , ul ; move 4 + 4 , 2 )  | ( move ul , ul ; move 3 + ul , 2 ; move 3 + ul , ua )  | ( v0 = 4 ; move ul , ul ; move v0 + v0 , ul + ul )  
[1747] ( move ua , ua / 3 ; move 2 , 4 )  | ( move ua , ua / 3 ; move ul , 4 )  
[1748] ( move 2 , ua / 4 ; move 2 , ul )  
[1749] ( move ul , ul ; move 4 , 3 + 3 )  | ( move ul , ul ; move 4 , 4 + 2 )  | ( move 2 - ul , ul ; move 4 , 3 + 3 )  | ( move ul , ul ; move 4 , 3 * 2 ; pen ua )  | ( ( move ul , ul ; move ul , 4 + 2 ) ; move 3 , 0 )  
[1750] ( move 4 , ua ; move ua , 3 / 2 )  | ( move 4 , 0 ; move ua , 3 / 2 ; pen 4 )  | ( move 4 , 0 ; move 0 , ul / ua ; move ua , 4 / 3 )  
[1751] ( move ul , ua ; move 4 + 3 , 4 )  | ( move ul , 0 ; move ua + ul , 4 )  | ( move ul , ua ; move ua + ul , 4 )  | ( move ul , 0 ; move ua + ul , ua + 4 )  | ( move ul , 0 ; move ua + ul , 4 - ua )  | ( move ul , 0 - ua ; move ua + ul , 4 )  | ( move ul , ua ; move ua + ul , 2 * 2 )  | ( move ul , ua + ua ; move ua + ul , 4 )  | ( move ul , ua ; ( move ua , 4 ; move ul , ua ) )  | ( move ul , 0 ; move ua + ul , 3 + ul ; pen ua )  | ( pen ua ; move ul , 0 ; move ua + ul , ua + 4 )  | ( pen ul ; move ul , 0 ; move ua + ul , 4 - ua )  | ( move ul , ua ; move ua , 4 ; move ul , ua + ua )  | ( v0 = ua + ul ; move ul , ua ; move v0 , 4 )  | ( ( move ul , 0 ; move ua + ul , 4 ) ; v0 = 0 )  | ( move ul , 0 ; move ua + ul , 4 ; v0 = 2 + ul )  | ( move ul , 0 ; move ua , 3 + ul ; move ul , 0 - ua )  | ( move ul , ua ; move ua + ul , 4 ; move 0 , 3 - ul )  | ( move ul , ua ; move ua + ul , 4 - ua ; v0 = 0 )  | ( move ul , ua ; move ua , 3 + ul ; move ul , 0 - ua )  | ( move ul , ua ; ( move ua + ul , 4 ; v0 = ul ; pen ul ) )  
[1752] ( move ua + 4 , ul ; move 3 , 4 )  
[1753] ( move ul , 4 + 2 ; move 4 , ul )  | ( move ul , 3 + 3 ; move 4 , ul )  | ( move ul , 3 * 2 ; move 4 , ul )  | ( pen ul ; move 0 - ul , 3 ; move 4 , 4 )  | ( move ul - 2 , 2 + ul ; move 4 , 4 ; v0 = ul - 4 )  | ( pen ul ; move 0 , 3 ; ( move ul , 3 ; move ua - 2 , ul ) )  
[1754] ( move 2 , 4 ; move 4 , ua * ua )  | ( move ua / 3 , 4 - ua ; move 4 , ua * ua )  
[1755] ( move 2 - 4 , ul ; move 3 , ul )  | ( move ul - 3 , ul ; move 3 , ul )  | ( move ul - 4 , 2 ; move 2 , ua - ul )  | ( move 2 - 4 , ul ; move 2 , ul ; move ul , ua )  | ( move ul - 3 , ul ; ( move 4 - ul , ul ; move 0 , ul ) )  | ( move ul - 3 , ul ; pen ul ; ( pen ua ; move 2 + ul , ul ) )  
[1756] ( move 3 , 3 * 2 ; move ul , ul )  | ( move 2 + ul , 3 * 2 ; move ul , ul )  | ( move 3 , 3 + 3 ; pen ua ; move ul , ul )  | ( move 0 , ua + 3 ; move 3 , 3 ; move ul , ul )  
[1757] ( move 3 - ua , 3 ; move ul , 4 )  
[1758] ( move ua , ul ; move 3 - 4 , 3 )  | ( move ul , 4 ; move ua , ul / ua )  | ( move ul , 4 ; move 3 + 3 , ul / ua )  | ( ( pen ua ; move ul , 4 ) ; move ua , ul / ua )  | ( move ul , 4 ; move 4 / 2 , ul / ua ; move 4 , ua )  
[1759] ( move 4 + 3 , 3 ; move ul , ul )  | ( move ua + ul , 2 + ul ; move ul , ul )  | ( move ua , 3 ; move ul , 0 ; move ul , ul )  | ( move 4 , 3 ; move 3 , ua + ua ; move ul , ul )  | ( move ua , 3 ; ( move ul , ua ; move ul , ul ) )  | ( move ul , 4 - ul ; move ua , ua ; move ul , ul )  | ( move 2 , 3 ; ( move 3 + 2 , 0 - ua ; move ul , ul ) )  | ( v0 = ua + ul ; move v0 , 3 ; move ua / v0 , v0 )  | ( pen ul / ua ; pen ul ; ( move 4 + 3 , 3 ; move ul , ul ) )  
[1760] ( move 4 - ua , ul ; move 3 , 3 )  | ( move ul - 3 , 4 - 3 ; move 3 , 3 )  | ( move 4 - ua , ul ; move 3 , ua + 3 ; pen ua * 4 )  
[1761] ( move 4 , 4 + 3 ; move ul , ul )  | ( move 4 , 4 + 3 ; move ul , ul ; pen ul )  | ( move 4 , 4 + 3 ; move ul , ul ; pen ua + 3 )  
[1762] ( move ua , 4 / 3 ; move ua , 3 )  
[1763] ( move 4 , ua ; move 4 , 2 / ua )  | ( move 3 + ul , 0 ; move 4 , ul / 3 )  
[1764] ( move 3 , 3 ; move ul , 3 / ua )  | ( move 3 , 3 ; move ul , ul / 2 )  
[1765] ( move ul , ul ; move 4 , 4 + 3 )  | ( move ul , ua + ul ; move 4 , 4 + 3 )  | ( move ul , ul ; ( pen ua + 4 ; move 0 , 3 ) ; move 4 , 4 )  
[1766] ( move 3 , 4 + 4 ; move ul , ul )  | ( move 3 , 4 * 2 ; move ul , ul )  
[1767] ( move 3 , 4 ; move 4 , ua * ua )  | ( move 3 , 4 ; move 4 , ua * ua ; v0 = ul )  
[1768] ( move 3 , ul / ua ; move 2 , 4 )  
[1769] ( move 3 , ul ; move ul , 3 - 4 )  | ( move 3 , ul ; move ul , 0 - ul )  | ( move ul , ua / 2 ; move 3 , ul )  | ( move 3 , ul ; move ul , ua - ul )  | ( move 0 - ul , 0 ; move 0 - 3 , ul )  | ( move 3 , 4 - 3 ; move ul , ua - ul )  | ( move 3 , ul ; pen ul ; move ul , ul - 2 )  | ( move 3 , ul ; pen ua ; move ul , ua - ul )  | ( move 3 , ul ; move ul , 0 - ul ; v0 = ul )  | ( move 3 , ul ; move ul , ua - ul ; v0 = ua )  | ( move 2 + ul , ul ; move ul , ua - ul ; pen ul )  | ( move 3 , ul ; ( move ul , 2 - 3 ; v0 = ul ) )  | ( move 3 , ul ; move ul , ul - 2 ; v0 = ua + 3 )  | ( ( move ul , ul / ua ; move ul , 3 ) ; move 3 , ul )  
[1770] ( move 4 , ua - 3 ; move 4 , ul )  | ( move 4 , ul - 4 ; move 3 + ul , ul )  
[1771] ( move 2 , 4 / ua ; move ua , 4 )  
[1772] ( move ua , 3 ; move ul / 2 , 4 )  | ( move ua , 3 ; move 3 / ua , 4 )  | ( move ua , 3 ; move 3 / ua , 3 + ul )  | ( move ua , 3 ; pen 4 ; move ul / 2 , 4 )  | ( move 0 , 2 ; ( move ua , ul ; move 3 / ua , 4 ) )  | ( move ua , 3 ; move ul / 2 , 4 ; v0 = ua * ua )  
[1773] ( move 4 , ul / 2 ; move 2 , ul )  | ( pen ua * 4 ; move 4 , ul / 2 ; move 2 , ul )  | ( move 4 , ul / 2 ; v0 = ul / 3 ; move 2 , ul )  | ( ( move 4 , 3 / ua ; move 2 , ul ; pen ua ) ; pen 4 )  
[1774] ( move 4 , ua ; move 3 / 2 , ul )  | ( move 4 , ua ; move 3 / 2 , ul ; pen 3 )  | ( move 3 + ul , 0 ; move 3 / 2 , ul ; v0 = ul )  
[1775] ( move 4 - ua , 4 ; move ua , 4 )  | ( v0 = 4 - ua ; ( move v0 , v0 ; move ua , v0 ) )  
[1776] ( move ua , ul ; move 4 * 2 , 4 )  | ( ( move ua , ul ; pen ul ) ; move 4 * 2 , 4 )  
[1777] ( move 4 , 4 ; move ua + ul , 4 )  | ( move 4 , 4 ; move ul , 4 ; move ua , 0 )  | ( pen ul ; move 4 , 4 ; move ua + ul , 4 )  
[1778] ( move ul - 4 , 2 ; move ul , 4 )  
[1779] ( move ul , ul / 2 ; move 3 , 3 )  | ( move ul , ul / ua ; move 3 , 0 - 3 )  | ( move ul , ul / ua ; move 3 , ua - 3 )  
[1780] ( move 4 , 3 ; move 4 + ul , ul )  | ( move 2 * 2 , 3 ; move 4 + ul , ul )  
[1781] ( move 3 , ul ; move 2 , ua / 4 )  
[1782] ( move 3 , ul ; move ua , 4 * 3 )  
[1783] ( move ua , 2 / 4 ; move 3 , ul )  | ( move ua , ul / 2 ; move 2 + ul , ua + ul )  | ( move ua , ul / 2 ; move 3 , ua + ul ; v0 = ua )  | ( pen 3 + 3 ; ( pen ul ; move ua , 3 / ua ) ; move 3 , ul )  | ( move ua , 3 / ua ; ( move 3 , ul ; pen 4 * 2 ) ; pen ua )  | ( move ua , ul / 2 ; move 3 , ul ; ( v0 = ul ; pen ul ) )  
[1784] ( move ul , ua - 4 ; move 3 , 4 )  
[1785] ( move 2 - 4 , ul ; move 4 , ul )  | ( move ul - 3 , ul ; move 4 , ul )  | ( move ul - 3 , 4 - 3 ; move 4 , ul )  | ( move ul - 3 , ul ; move 3 + ul , ul )  | ( pen 4 - ul ; move ul - 3 , ul ; move 4 , ul )  
[1786] ( move 3 , 4 / ua ; move 2 , ul )  
[1787] ( move 4 , ul - 4 ; move 2 , ul )  | ( move 3 + ul , ul - 4 ; move 2 , ul )  
[1788] ( move ul , 3 * 3 ; move 3 , ul )  | ( move ul , 3 * 3 ; move 3 , ul ; move ul / ua , 4 + ul )  
[1789] ( move ua - ul , 3 ; move 4 , 4 )  | ( move ua - ul , ua + 3 ; move 4 , 4 )  
[1790] ( move 3 , ul / 3 ; move ul , 2 )  | ( ( move 2 , ul / 3 ; move ul , 0 ) ; move ul , 2 )  
[1791] ( move ul , 3 ; move ua , 4 * 3 )  | ( move ul , 3 ; move ua , 4 * 3 ; v0 = 4 )  
[1792] ( move 3 , ul ; move 3 , ua / 3 )  
[1793] ( move 4 , 3 - 4 ; move ua , ul )  | ( move 4 , 0 - ul ; move ua , ul )  | ( move 4 , ua - ul ; move ua , ul )  | ( move 4 , 2 - 3 ; move ua , ul ; pen ul )  | ( move 4 , ua - ul ; move 0 , 0 ; move ua , ul )  | ( move 3 + ul , 2 - 3 ; move ua , ul ; pen ua )  | ( pen 2 ; move 4 , ua - ul ; move ua , 2 - ul )  | ( move 4 , ua - ul ; move ua , ul ; v0 = ul )  | ( move 4 , 0 - ul ; ( move ua , ul ; v0 = 0 ) )  | ( move 4 , ua - ul ; ( pen 3 ; move ua , ul ; pen ua + 4 ) )  
[1794] ( move ua , ul / 2 ; move 4 , 3 )  | ( pen 3 ; move ua , ul / 2 ; move 4 , 3 - ua )  
[1795] ( move ul - ua , 3 ; move 4 , 4 )  | ( move ul - ua , 3 ; move 3 + ul , 2 * 2 ; v0 = ul )  
[1796] ( move 2 , ul ; move 4 , ul - 4 )  | ( move 2 , ul ; move 4 , ul - 4 ; v0 = ua )  | ( move 2 , ul ; ( move 4 , ua - 3 ; pen ua ) )  
[1797] ( move ul , 3 / ua ; move 4 , 2 )  
[1798] ( move ul - 4 , 2 ; move 4 , ul )  | ( move 0 - 3 , 2 ; move 3 + ul , ul )  | ( move ul - 4 , ua + 2 ; move 4 , ul )  | ( move ul - 4 , 3 - ul ; move 4 , ul )  | ( move 0 - 4 , 4 - ul ; move 3 , ua - ul )  | ( move ul - 4 , ul + ul ; move 4 , ul ; pen ul )  
[1799] ( move 4 , 2 ; move ua , ul / 3 )  | ( move ul , 2 ; ( pen ua ; move 3 , ua ) ; move ua , ul / 3 )  
[1800] ( move 4 , 3 / 2 ; move ua , ul )  | ( ( pen ua ; move 4 , 3 / 2 ; move ua , ul ) ; v0 = ua )  
[1801] ( move 2 , ul ; move 3 , 4 / ua )  
[1802] ( move 2 , ul / 2 ; move 4 , ul )  | ( move ul + ul , 2 / 4 ; move 4 , ul )  | ( move 4 - 2 , ul / 2 ; move 4 , ua + ul )  
[1803] ( move 4 , 2 ; move 3 , ul / ua )  
[1804] ( move ul , 4 ; move 4 + 3 , ul )  | ( move ul , 4 ; move ua + ul , ul )  | ( move ul , ua + 4 ; move ua + ul , ul )  | ( move ul , 4 ; move ua , ul ; move ul , ua )  | ( move ul , 4 ; pen ul ; move ua + ul , ul )  | ( v0 = ul ; move v0 , 4 ; move ua + ul , v0 )  | ( ( pen ua + 2 ; move ul , 4 ) ; move ua + ul , ul )  | ( move ul , 3 + ul ; move ua , ul ; move ul , ua * 4 )  | ( move ul , 4 ; ( pen ua - ul ; move ua + ul , ul ) )  | ( v0 = ua + ul ; move ul , 3 + ul ; move v0 , v0 )  
[1805] ( move 3 , 4 ; move ul , 4 + ul )  | ( pen ua + ul ; move 3 , 4 ; ( pen 3 ; move ul , 3 + 2 ) )  
[1806] ( move ua , ua ; move 3 , 3 / 4 )  | ( move ua , ua ; move 0 , 3 ; move 2 + ul , 4 )  
[1807] ( move ua , ul / 4 ; move 2 , 3 )  | ( pen 2 + ul ; move ua , ul / 4 ; move 2 , 3 )  | ( move 4 + 2 , ul / 4 ; move ul , 3 ; move ul , ua )  
[1808] ( move 4 , ul ; move 2 - 4 , ul )  | ( move 4 , ul ; move ul - 3 , ul )  | ( move 4 , 2 - ul ; move ul - 3 , ul )  | ( move 4 , ul ; ( move ul - 3 , ul ; pen ul ) )  | ( ( v0 = ul ; move 4 , ul ) ; move 0 - 2 , ul )  | ( move 4 , ul ; move ul - 3 , ul ; v0 = ul - ua )  | ( move 4 , ul ; ( v0 = ul ; move v0 - 3 , v0 ) )  | ( pen ua - 3 ; ( move 4 , ul - ua ; move 0 - 2 , ul ) )  | ( v0 = 2 - ul ; move 4 , v0 ; move v0 - 3 , v0 )  
[1809] ( move ua , 4 ; move 4 - ua , 4 )  | ( move ua , 4 ; pen ua ; move 4 - ua , 4 )  
[1810] ( move ua , 2 / 3 ; move 4 , ul )  
[1811] ( move 4 , 3 ; move ua , ua / 3 )  
[1812] ( move 3 , 2 ; move ua , ul / 4 )  | ( move 3 , ul + ul ; move ua , ul / 4 )  
[1813] ( move ul , 2 ; move ua , 4 / 3 )  
[1814] ( move ua , ua - 4 ; move 4 , 4 )  
[1815] ( move 3 , ul ; move ul , 3 / 2 )  
[1816] ( move ua , 4 ; move 3 , ua / 3 )  | ( move ua , 4 ; v0 = ua / 3 ; move 3 , v0 )  
[1817] ( move ua , 3 ; move ua , 4 / 3 )  
[1818] ( move 4 , 2 ; move ul , ul / 2 )  | ( move 4 , 2 ; v0 = ul ; move v0 , v0 / 2 )  | ( move 4 , 3 - ul ; move ul , ul / 2 ; v0 = ul )  
[1819] ( move ul , 3 ; move ua , 2 / 4 )  | ( move ul , 3 ; move ua , ul / 2 )  | ( move ul , 3 - ua ; move ua , 2 / 4 )  | ( move ul , 3 ; pen ua ; move ua , ul / 2 )  | ( move ul , 3 ; pen ul ; move ua , ul / 2 )  
[1820] ( move 3 , ul ; move 4 , 4 + ul )  | ( move 3 , ul ; ( pen ul ; move 3 + ul , 4 + ul ) )  
[1821] ( move 4 , ua - 3 ; move ul , 4 )  
[1822] ( move ul , 3 ; move 3 * 3 , ul )  
[1823] ( move 4 , ul ; move ua , 4 * 2 )  | ( move 3 + ul , ua + ul ; move ua , 4 + 4 )  | ( move 4 , ul ; move ua , 4 + 4 ; v0 = 3 )  | ( pen 4 * 4 ; move 4 , ul ; move ua , 4 * 2 )  
[1824] ( move 3 , ul ; move 4 , ul - 3 )  
[1825] ( move ua , 4 ; move ul , 4 * 2 )  | ( move ua , 4 ; move ul , ua * ua )  | ( move ua , 3 + ul ; move ul , ua * ua )  | ( move ua , ua + 4 ; move ul , ua * ua )  | ( move ua , 4 ; v0 = ua * ua ; move ul , v0 )  
[1826] ( move 4 , ua ; move 4 + ul , 4 )  | ( move 3 , ua ; move 2 - ul , 0 ; move 4 + ul , 4 )  | ( move 4 , ua ; move 4 + ul , ua + 4 ; move 0 , ua * ua )  
[1827] ( move 3 , ul ; move 2 , ul / 3 )  | ( ( v0 = ul / 3 ; move 3 , ul ) ; move ul + ul , v0 )  
[1828] ( move ua , 4 * 3 ; move 3 , ul )  
[1829] ( move 3 , 4 / ua ; move ul , 2 )  | ( move 2 + ul , 4 / ua ; move ul , 2 )  
[1830] ( move ul , ul - 4 ; move 3 , 3 )  | ( move 3 , ua ; pen 0 ; move ul , 3 )  | ( pen ua ; ( move 3 , ua ; pen 0 ; move 3 , 3 ) )  
[1831] ( move ua , 4 * 4 ; move 2 , ul )  | ( pen ul ; move ua , 4 * 4 ; move 2 , ul )  | ( ( move ua , 4 * 4 ; move 2 , ul ) ; v0 = 4 )  
[1832] ( move 4 , 4 ; move ua , 2 / ua )  
[1833] ( move ul / 2 , ul ; move 4 , 2 )  | ( move ul / 2 , 2 ; move 4 , ul ; pen 0 )  
[1834] ( move ul , 0 ; move 4 , ul / 4 )  | ( move ul , ua ; move ul , ul / 4 ; move 3 , 0 )  | ( move ul , ua * 3 ; move 4 , ul / 4 ; pen ul )  | ( pen ul ; ( move ul , ua ; move 4 , ul / 4 ) )  | ( move ul , ua ; move 3 , ul / 4 ; move ul , ua )  | ( pen 3 * 2 ; move ul , 0 - ua ; move 4 , ul / 4 )  
[1835] ( move 4 , 3 ; move 2 , ul / ua )  | ( move 4 , 3 - ua ; move 2 , ul / ua )  | ( move 3 - ul , 0 ; move 2 - ua , 4 - ul )  
[1836] ( move ua - ul , 4 ; move 3 , 4 )  | ( move ua - ul , 3 + ul ; move 4 - ul , ua + 4 )  
[1837] ( move ul , ul - 3 ; move 3 , 4 )  | ( move ul , ul - 3 ; move 3 , 4 ; pen 0 - 3 )  
[1838] ( move ua , 4 + ul ; move 4 , 4 )  | ( move ua , 4 + ul ; move 4 , 4 - ua )  | ( pen 3 ; move ua , 3 + 2 ; move 4 , 4 )  
[1839] ( move 3 , 3 - 4 ; move ul , ul )  | ( move 3 , ua - ul ; move ul , ul )  | ( move 4 - ul , ua - ul ; move ul , ul )  | ( pen ul ; move 3 , 0 - ul ; move ul , ul )  | ( move 3 , ua - ul ; move ul , ul ; pen 4 )  | ( pen ul ; move 3 , ua - ul ; move ul , ua + ul )  | ( pen ua ; ( move 3 , ua - ul ; move ul , 3 - 2 ) )  | ( move ul , ul - 2 ; move 3 - ul , 0 ; move ul , ul )  | ( move 3 , 2 - 3 ; move ul , ul - ua ; v0 = ul - ua )  | ( move 3 , ul - 2 ; move 4 - 3 , ua + ul ; pen ua * ua )  
[1840] ( move ua + 4 , ul ; move 4 , 4 )  | ( move 4 , ul ; move ua , 0 ; move 4 , 4 )  | ( ( pen ua ; move ua + 4 , ul ; move 4 , ua + 4 ) ; pen ul )  
[1841] ( move 3 , ua ; move ul - 4 , 4 )  | ( pen ul ; move 3 , 0 ; move 0 - 3 , 4 )  | ( move 3 , ua ; ( pen 4 ; pen 2 ; move ul - 4 , 4 ) )  | ( move 3 , ua ; ( v0 = 3 + ul ; move ul - 4 , v0 ) )  
[1842] ( move 4 , 4 ; move 3 - ua , ul )  
[1843] ( move 2 , ul ; move 4 , 3 / ua )  
[1844] ( move ul , ua ; move 4 * 2 , 4 )  | ( move 2 - ul , 0 ; move ua + 2 , 4 )  | ( move ul , ua ; move ua + 2 , 4 - ua )  | ( move ul , 0 ; move 2 , 4 ; move 3 * 2 , ua )  | ( move ul , ua ; move ua , 4 ; ( v0 = ul ; move 2 , ua ) )  | ( move ul , ua ; ( move ua + 2 , ua + 4 ; pen ul ; pen 4 ) )  | ( move ul , ua ; pen ul ; ( move 2 , ua + 4 ; move ua , ua ) )  
[1845] ( move ua / 2 , 3 ; move 4 , ul )  | ( move ua - 3 , 3 ; move 4 , ua + ul ; pen 2 - ul )  
[1846] ( move ua , 3 ; move 3 , 4 / ua )  
[1847] ( move ul - 3 , 3 ; move 4 , ul )  | ( move 2 - 4 , ua + 3 ; v0 = ul ; move 4 , v0 )  
[1848] ( move ul , 4 ; move ua , 3 / 2 )  | ( move ul , 3 + ul ; move ua , 3 / 2 )  
[1849] ( move 4 , 4 + ul ; move 3 , ul )  | ( move 4 , 4 + ul ; move ua / 2 , ul )  
[1850] ( move ul , 3 ; move 4 * 2 , ul )  | ( move ul , 3 ; move 4 + 4 , ul )  | ( move ul , 3 ; move ua + 2 , ul )  | ( pen ul ; move ul , 3 ; move ua + 2 , ul )  | ( move ul , 3 ; move ua + 2 , ul ; v0 = 0 )  | ( move ul , 3 ; move ua + 2 , ul ; pen ul + ul )  | ( move ul , 3 ; ( v0 = 2 ; move 4 * 2 , ul ) )  
[1851] ( move 4 + ul , 4 ; move 3 , ul )  | ( move 4 + ul , ua + 4 ; move 3 , ul )  | ( ( pen 4 ; move 4 + ul , 4 ) ; move 3 , ua + ul )  
[1852] ( move 2 , 3 ; move 4 , ul / ua )  | ( move 4 , 0 ; move 4 - ua , 2 + ul )  | ( move 2 , 3 ; move 4 , ul / ua ; pen ul / ua )  
[1853] ( move 4 , ul ; move 3 , 2 / ua )  | ( move 4 , ul ; move 3 , ul / 3 )  
[1854] ( move 4 , 3 ; move ul , 4 + ul )  | ( move 4 , ua + 3 ; move ul , 4 + ul )  | ( move ul , 3 ; move 3 , ua ; move ul , 4 + ul )  | ( ( move ul , 3 ; move 3 , ua ) ; move 0 , 4 ; move ul , ul )  
[1855] ( move ua + 4 , 4 ; move ul , 4 )  
[1856] ( move 4 , ua ; move ul - 4 , 3 )  | ( pen ua + ul ; move 4 , 0 ; move 3 - ua , 3 )  | ( ( move 3 , 3 ; pen ul ; move 4 , ul / ua ) ; pen 4 )  
[1857] ( move ua - 3 , 4 ; move ul , 4 )  | ( move ul / 2 , 4 ; move 3 , 0 ; move ul , 4 )  
[1858] ( move 3 , ul - 4 ; move 3 , ul )  
[1859] ( move 3 , ul / ua ; move 4 , 2 )  
[1860] ( move ul , ua ; move 4 , 3 / 2 )  
[1861] ( move ul - 4 , 3 ; move 3 , ul )  
[1862] ( move 4 * 2 , ul ; move ua , 4 )  | ( move 4 + 4 , ul ; move ua , 4 )  | ( ( move 4 , ua + ul ; move 4 , ua ) ; move ua , 4 )  
[1863] ( move ua , 2 ; move 3 , ul / 4 )  
[1864] ( move ul , 3 ; move 4 + ul , 4 )  | ( pen 3 ; ( move ul , 3 ; move 4 , 4 ) ; move ul , 0 )  
[1865] ( move 4 , 4 + 4 ; move ua , ul )  | ( move 4 , 4 * 2 ; move ua , ul )  | ( move 2 + 2 , 4 * 2 ; pen ua ; move ua , ul - ua )  | ( move 3 , 4 * 2 ; ( move ul , ua ; pen 3 ) ; move ua , ul )  
[1866] ( move 4 , ul - 3 ; move ul , 3 )  | ( move 0 - ul , ua + ul ; move 4 , ul / ua )  | ( v0 = ua - ul ; move 4 , ua / v0 ; move 0 , 4 )  
[1867] ( move ua , ul - 4 ; move 4 , 3 )  
[1868] ( move 3 , 2 ; move ul , ul / 3 )  | ( move 4 - ul , 2 ; move ul , ul / 3 ; v0 = ua )  | ( pen ua ; move 3 , 2 ; ( move ul , ul / 3 ; move 0 , ul ) )  
[1869] ( move ul , 4 ; move 3 , 4 + ul )  | ( move 2 - ul , 4 ; move 3 , 4 + ul )  | ( move ul , 4 ; move 0 , 4 ; move 3 , ul )  | ( v0 = 4 + ul ; move ul , 4 ; move 3 , v0 )  
[1870] ( move ua , 4 + 4 ; move 4 , ul )  | ( move ua , 4 * 2 ; move 4 , ul )  | ( move ua , 4 * 2 ; move 2 + ul , ul ; move ul , 0 )  | ( move ua , 4 * 2 ; ( pen ua ; move 4 , ul ) ; v0 = 4 )  
[1871] ( move 3 , 4 ; move ua - ul , 4 )  
[1872] ( move 4 + 3 , ul ; move ul , 4 )  | ( move ua + ul , ul ; move ul , 4 )  | ( move ua + ul , ul ; move ul , 2 * 2 )  | ( move ua + ul , 2 - ul ; move ul , 4 )  | ( move ua , ul ; move ul , 0 ; move ul , 4 )  | ( move ua + ul , ul ; move ul , 4 ; pen 0 )  | ( move ua , ul ; move ul , ua ; move ul , 4 )  | ( move ul , ua + ul ; move ua , 0 ; move ul , 4 )  | ( move ua + ul , ul ; move 0 , 2 + 2 ; move ul , ua )  | ( ( v0 = ul ; move ua + v0 , v0 ) ; move v0 , 4 )  | ( ( move ua + ul , ul ; move ul , 4 ) ; v0 = ua ; pen 2 )  
[1873] ( move 3 , ul ; move 4 , 2 / ua )  | ( move 3 , ul ; move 3 + ul , 2 / ua )  | ( move 2 + ul , ul ; move 4 , 2 / ua )  
[1874] ( move 3 , 4 ; move 4 , ua - ul )  
[1875] ( move 4 , ul ; move 3 - ua , 4 )  | ( move 4 , ul ; move 3 - ua , 4 ; pen 2 - ua )  
[1876] ( move ul , ul ; move 3 , 4 * 2 )  | ( move ul , ul ; move 2 + ul , ua * ua )  | ( move ul , ua + ul ; move 3 , ua * ua )  | ( move 2 - ul , ul ; move 2 + ul , 4 * 2 )  | ( v0 = 3 ; move ul , ul ; move v0 , ua * ua )  | ( move ul , ul - ua ; pen ua - ul ; move 3 , ua * ua )  
[1877] ( move ul - 2 , 4 ; move 4 , ul )  | ( move ul - 2 , 4 ; move 4 , ul ; pen ul )  
[1878] ( move 3 , 4 ; move ul , 3 / ua )  | ( move 3 , 4 ; v0 = ul / 2 ; move ul , v0 )  | ( move 3 , ua + 4 ; move ul , 3 / ua ; v0 = ua + 4 )  
[1879] ( move ul , 2 ; move 4 , ul / 3 )  
[1880] ( move ua , 4 / 3 ; move ua , 4 )  | ( move ua , 4 / 3 ; move ua , ua + 4 )  
[1881] ( move ul , 4 ; move 4 , ua - 4 )  | ( move ul , 4 ; v0 = 4 ; move v0 , ua - v0 )  | ( move ul , 4 ; move 4 , ua - 4 ; move 0 , ul - 4 )  
[1882] ( move ua , ul ; move 3 , 4 / 3 )  | ( move ua , ul ; move 3 , 4 / 3 ; pen 4 )  | ( move ua , ul ; pen ua ; move 3 , 4 / 3 )  | ( pen ua * 2 ; move ua , ul ; move 3 , 4 / 3 )  | ( ( move ua , ul ; move 0 , ul / 3 ) ; move 3 , ul )  
[1883] ( move 3 , ua ; move 4 / 3 , ul )  | ( v0 = ul ; move 3 , v0 * ua ; move 4 / 3 , v0 )  
[1884] ( move ua , 4 ; move ul , 2 / 4 )  | ( move ua , 4 ; move ul , ul / 2 )  | ( move ua , 4 ; move ul , 3 / ua )  | ( move ua , 3 + ul ; move ul , ul / 2 )  | ( ( move 0 , ul ; move ua , 3 ) ; pen ul ; move ul , 3 / ua )  | ( pen ul ; ( move ua , 4 ; move ul , 3 / ua ) ; v0 = ul )  
[1885] ( move 4 , 4 ; move ua - ul , 4 )  | ( v0 = 2 * 2 ; move v0 , v0 ; move ua - ul , v0 )  
[1886] ( move 3 , ua ; move 4 , 4 / ua )  
[1887] ( move 4 , 3 - 4 ; move ul , ul )  | ( move 4 , ua - ul ; move ul , ul )  | ( move 4 , 0 - ul ; move ul , ua + ul )  | ( move 2 + 2 , ua - ul ; move ul , ul )  | ( move 3 + ul , ua - ul ; move ul , ul )  | ( move 4 , ua - ul ; move ul , ul ; pen 0 )  | ( pen ul ; move 4 , 0 - ul ; move ul , ul )  | ( ( pen 3 ; move 4 , 2 - 3 ) ; move ul , ul )  | ( ( move 4 , ul - 2 ; move ul , ul ) ; pen ul )  | ( ( move 4 , 2 - 3 ; move ul , ul ) ; v0 = 0 )  | ( pen ul ; move ul - 2 , 0 ; move 0 - 4 , ul - 2 )  | ( v0 = ul ; move 4 , v0 - 2 ; move v0 , v0 )  | ( move 4 , ua - ul ; move ul , ua + ul ; v0 = ua )  | ( move 4 , 0 - ul ; ( v0 = ul ; move ul , v0 ) )  
[1888] ( move 3 , ul / 2 ; move ul , 4 )  | ( ( move 3 , 2 / 4 ; move 0 , ua ) ; move ul , 4 )  | ( move ua / 2 , ul / 2 ; ( pen ua ; move ul , 4 ) )  
[1889] ( move ul , 4 * 3 ; move ua , 4 )  | ( move ul , 4 * 3 ; move ua , 4 ; pen 0 )  
[1890] ( move ua , 3 / 4 ; move ua , 4 )  
[1891] ( move 2 , ua ; move 4 , ul / 4 )  | ( move ua / 4 , ua + ua ; move 4 , ul / 4 )  | ( move ul , ua ; ( move 2 - ul , 0 ; move 4 , ul / 4 ) )  | ( move ul + ul , 0 ; ( v0 = 4 ; move 4 , ul / v0 ) )  
[1892] ( move 2 , 4 ; move ua , ul / 4 )  | ( pen ul ; ( move 2 , 4 ; move ua , ul / 4 ) )  | ( pen ua / 4 ; move ul + ul , 2 * 2 ; move ua , ul / 4 )  | ( pen 2 + ul ; move ul + ul , 3 + ul ; move ua , ul / 4 )  
[1893] ( move 4 , ua / 3 ; move 3 , ul )  
[1894] ( move ul , 4 ; move 3 , 3 / ua )  | ( move ul , 4 ; move 3 , 2 / 4 ; pen 2 )  
[1895] ( move 4 , 4 ; move 4 , ua - ul )  | ( pen 4 ; move 3 + ul , 4 ; move 4 , ua - ul )  
[1896] ( move ul , ul ; move 4 , 2 / 3 )  
[1897] ( move ua , 4 / ua ; move 3 , 4 )  | ( move ua , 4 / ua ; v0 = ul - ua ; move 2 , 4 )  
[1898] ( move 4 , 4 * 2 ; move ul , ul )  | ( move 2 + 2 , 4 * 2 ; move ul , ul )  | ( move 3 + ul , 4 + 4 ; move ul , ul )  | ( move ul , 4 * 2 ; move 3 , 0 ; move ul , ul )  
[1899] ( move 4 , ul ; move 2 / 3 , ul )  | ( pen ua ; move 4 , ul ; move 4 / ua , ul )  
[1900] ( move 4 , 4 ; move ul - ua , 4 )  
[1901] ( move ua / 4 , 3 ; move 3 , ul )  | ( move ua / 4 , 3 ; move 0 , 0 ; move 3 , ua + ul )  
[1902] ( move 4 , 4 ; move ul , 4 + ul )  
[1903] ( move ul , 4 ; move 4 , ul - 3 )  | ( move ul - 2 , ul ; move 4 , ul )  | ( move 0 - ul , ua + ul ; move 4 , ul )  | ( move 0 - ul , ua + ul ; move 4 , ul ; move 0 , ua - ul )  | ( ( move ul - 2 , ul ; move 4 , ul ; pen ul ) ; v0 = ul )  
[1904] ( move ua , 4 ; move 3 , ul / 3 )  
[1905] ( move 4 , ua ; move ul , 4 * 3 )  | ( move 4 , ua * 3 ; ( move ul , 4 * 3 ; v0 = 0 ) )  
[1906] ( move 4 , ua ; move 3 / ua , 4 )  | ( move 4 , ua ; move ul / 3 , 4 )  | ( move 4 , ua * 3 ; move 2 / 4 , 4 )  | ( move 4 , 0 ; move ul / 3 , 3 + ul )  | ( move 4 , ua ; move 3 / ua , 4 ; v0 = 3 / ua )  
[1907] ( move ul - 4 , 3 ; move 4 , ul )  
[1908] ( move 4 , ua - ul ; move 4 , 4 )  
[1909] ( move 4 , ul - 4 ; move 3 , ul )  | ( ( move 4 , ua - 3 ; v0 = ul ) ; move 3 , v0 )  
[1910] ( move 4 , ul ; move 2 , ul / 3 )  | ( move 4 , 4 - 3 ; move 2 , 2 / ua )  | ( v0 = ul ; move 4 , v0 ; move 2 , v0 / 3 )  
[1911] ( move 2 / 4 , ul ; move ua , 4 )  | ( move 3 / ua , ul ; move ua , 4 )  | ( move 4 / ua , ul ; move ua , 4 )  | ( v0 = ul ; move 2 / 4 , v0 ; move ua , 4 )  | ( v0 = ua ; move 3 / v0 , ul ; move v0 , 4 )  | ( move 3 / ua , 2 - ul ; ( move ua , ua + 4 ; pen 0 ) )  | ( ( move 3 / ua , ul ; pen ul ) ; move ua , ua + 4 ; pen 4 )  
[1912] ( move 4 , ul - 3 ; move ul , 4 )  | ( move 4 , 2 - 4 ; move ul , 2 + 2 ; pen 2 )  | ( move 2 * 2 , ul - 3 ; pen 3 ; move ul , ua + 4 )  
[1913] ( move 2 , 4 / ua ; move 4 , ul )  
[1914] ( move ul , ua / 3 ; move 3 , 4 )  
[1915] ( move 4 , ul ; move 4 + ul , 4 )  | ( move 4 , ul ; move 3 + 2 , ua + 4 )  | ( v0 = 4 ; move v0 , ul ; move ul + v0 , v0 )  
[1916] ( move 4 - ua , 4 ; move 4 , ul )  
[1917] ( move ul , ua ; move 3 , 3 / 4 )  | ( move ul , ua ; move 3 , 4 + 3 ; pen ul )  
[1918] ( move ul - 4 , ua ; move 4 , 4 )  | ( pen ul ; ( move ul - 4 , 0 ; pen 3 ) ; move 4 , 3 + ul )  
[1919] ( move ul - 4 , 4 ; move ul , 3 )  
[1920] ( move 4 , ul ; move 3 , ul - 4 )  | ( move 3 + ul , ul ; move ul - 4 , ul / ua )  | ( move 4 , ul ; move 3 , ul - 4 ; v0 = ul + ul )  | ( v0 = ua - 3 ; move ua - 2 , ul ; move v0 , v0 )  
[1921] ( move 3 , ul ; move ul , 4 * 3 )  
[1922] ( move ul , ul ; move 3 * 3 , 4 )  
[1923] ( move 3 , 4 * 4 ; move ua , ul )  
[1924] ( move 3 , ul / 4 ; move 2 , ul )  
[1925] ( move ul , 4 / ua ; move 4 , 2 )  | ( move ul , 4 / ua ; move 0 , 0 ; move 4 , 2 )  | ( ( move ul , 4 / ua ; pen 2 + ul ) ; move 4 , ul + ul )  
[1926] ( move ul , 3 ; move ul - 4 , 4 )  | ( move ul , 3 ; move ul - 4 , 4 ; move ul , ua )  
[1927] ( move 4 , ua ; move ua , 4 / 3 )  | ( move 3 + ul , ua ; move ua , 4 / 3 )  
[1928] ( move 4 , 3 / 2 ; move ul , ul )  | ( move 4 , 3 / 2 ; move 2 - ul , ul )  
[1929] ( move 4 , 4 ; move ua - 4 , ul )  | ( move 0 , 3 ; move 4 , ul ; move ua - 4 , ul )  | ( move 4 , 4 ; move ua - 4 , ul ; pen 4 - ua )  | ( move 4 , ua + 4 ; move ua - 4 , ul ; v0 = 4 )  | ( v0 = 4 ; move v0 , v0 ; move ua - v0 , ul )  
[1930] ( move 4 , ul ; move 4 , 2 / ua )  
[1931] ( move ul , 4 ; move 4 + ul , 4 )  | ( move ul , 4 ; move ul , 3 + ul ; move 4 , 0 )  
[1932] ( move 2 , ul ; move 4 , ul / 3 )  
[1933] ( move 4 , 4 ; move ul , ul - 3 )  | ( move 4 , 4 ; ( move ul , ul - 3 ; pen ul ) )  
[1934] ( move 3 , ua ; move 4 , ul / 3 )  | ( move 3 , 0 ; move 4 , ul / 3 ; pen ul )  
[1935] ( move ul , ua ; move 4 , 4 * 3 )  | ( move ul , ua ; move 2 * 2 , 4 * 3 )  
[1936] ( move 4 , ul ; move ua , 4 * 3 )  | ( ( move 4 , ul ; move 0 , 4 ) ; move ua , 4 * 2 )  
[1937] ( move 4 + ul , ul ; move 4 , 4 )  | ( move 4 + ul , ua + ul ; move 4 , 4 )  | ( move 3 , ul ; move 2 , ua ; move 4 , 4 )  | ( move 4 , ul ; move ul , ua ; move 4 , 4 )  | ( move ul , ul ; ( move 4 , 0 ; move 4 , 4 ) )  | ( ( move 0 , ul ; move 4 + ul , ua ) ; move 4 , 4 )  
[1938] ( move 4 , ul ; move 3 / 2 , ul )  | ( move 4 , ul ; move ua / 4 , ul )  | ( pen 2 / 4 ; move 4 , ul ; move ua / 4 , ul )  | ( move 4 , ua + ul ; move 0 , ul ; move 3 / 2 , ua )  | ( move 3 + ul , ul ; move 4 / 3 , ul ; move 0 , ul )  
[1939] ( move ul , 4 * 3 ; move 3 , ul )  
[1940] ( move 3 , 4 ; move ul - 4 , ul )  | ( move ul , ul ; move 3 , 3 ; move 0 - 3 , ul )  
[1941] ( move 4 + ul , 4 ; move ul , 4 )  | ( move ua - ul , 4 ; move ul , 4 - ua )  | ( move 3 + 2 , 4 ; pen 2 ; move ul , 4 )  | ( move 4 + ul , 4 ; pen 4 ; move ul , 3 + ul )  | ( move ua - ul , 4 ; v0 = ul ; move 2 - ul , 3 + v0 )  
[1942] ( move 3 , ul ; move ua , 3 / 4 )  | ( move 3 , ul - ua ; move ua , 3 / 4 )  | ( move 3 , ua + ul ; move ua , 3 / 4 ; pen 3 - ul )  
[1943] ( move ul , ul ; move 4 , 2 / 4 )  | ( move ul , ul ; move 2 + 2 , ul / 2 )  | ( move ul , ul ; move 4 , 3 / ua ; v0 = ul )  
[1944] ( move 4 , ul ; move ul - 4 , 4 )  | ( move 3 + ul , ul ; move 0 - 3 , 4 )  
[1945] ( move ul , ua / 3 ; move 4 , 4 )  
[1946] ( move ua / 4 , 4 ; move ua , 4 )  
[1947] ( move 3 , ul / 4 ; move ul , 3 )  | ( move ul , ul / 4 ; move ul - 4 , 0 )  
[1948] ( move ul , ua ; move 4 , 3 / 4 )  
[1949] ( move 4 , ul ; move ul , 2 / 4 )  | ( move 4 , ul ; move ul , ul / 2 )  | ( move 2 + 2 , ul ; move ul , 3 / ua )  | ( move 4 , ul ; ( move ul , ul / 2 ; pen ua ) )  
[1950] ( move ul , ul / 3 ; move 3 , 4 )  
[1951] ( move 3 , ul ; move 4 / 3 , ul )  
[1952] ( move 3 , 4 / ua ; move 4 , ul )  
[1953] ( move 4 , ul ; move 3 , 4 / ua )  | ( move 4 , ul ; move ua - 3 , ul / 2 )  
[1954] ( move 3 , 4 ; move ul , ul / 3 )  | ( move 4 - ul , 4 ; move ul , 2 / ua )  | ( move 3 , 4 - ua ; move ul , ul / 4 )  
[1955] ( move 4 , 2 ; move ul , ul / 4 )  | ( v0 = 4 ; move v0 , ul + ul ; move ul , ul / v0 )  
[1956] ( move ul , 3 ; move 4 , ul / 3 )  
[1957] ( move ua , 4 ; move 4 , ul / 3 )  | ( move ua , 4 - ua ; move 3 + ul , ul / 3 ; pen 4 )  
[1958] ( move ua , 3 / 4 ; move 4 , ul )  
[1959] ( move ua / 4 , 4 ; move 3 , ul )  
[1960] ( move 4 , 3 ; move ua / 4 , ul )  
[1961] ( move 2 / 4 , ul ; move 4 , ul )  | ( move 2 / ua , ul ; move 4 , ul )  | ( move ul / 2 , ul ; move 3 + ul , ul )  | ( move ul / 2 , ul ; move 4 , ul ; v0 = ul )  | ( ( move ul / 4 , ul ; pen ua ) ; move 3 + ul , ul )  | ( ( move 2 / 4 , ul ; v0 = 4 + ul ) ; move 4 , ul )  
[1962] ( move ul , ul ; move 3 , 3 / 4 )  | ( move ul , ul ; move 3 , 3 / 4 ; move 0 , ul )  
[1963] ( move ul , 4 / ua ; move 3 , 4 )  | ( ( move ul , 4 / ua ; move 3 , 4 ) ; pen ul )  
[1964] ( move 4 , 4 * 3 ; move ul , ul )  | ( move 4 , 4 * 3 ; move 2 - ul , ul )  | ( ( move 4 , 4 * 3 ; v0 = 0 - ua ) ; move ul , ul )  
[1965] ( move 3 , ul / 4 ; move 3 , ul )  | ( move 3 , ul / 4 ; move 3 , ul ; v0 = 3 - ua )  | ( ( pen ua + ul ; move 3 , ul / 4 ) ; move 3 , ul )  
[1966] ( move 4 , ua ; move 4 , ua / 4 )  
[1967] ( move 4 , 4 ; move ul - 4 , ul )  
[1968] ( move 3 , ul / 3 ; move 4 , ul )  | ( move 3 , ul / 3 ; move 4 , ua + ul )  | ( move 3 , 2 / ua ; move 2 * 2 , ul ; v0 = ul )  
[1969] ( move 4 , 4 / ua ; move 3 , ul )  | ( move 4 , 4 / ua ; move 3 , 3 - 2 )  | ( move 4 , 4 / ua ; move 2 , ul ; move ul , ua + ua )  
[1970] ( move ul , 4 * 3 ; move 4 , ul )  
[1971] ( move ua , ul ; move 4 / 3 , 4 )  | ( move ua , ul ; move 0 - ul , ul )  | ( move ua , ul ; move ul , ua - 2 )  | ( move ua , ul ; move ul - 2 , ul )  | ( move ua , ua + ul ; move 2 - 3 , ul )  | ( move ua , ul ; move 0 - ul , ua + ul )  | ( move ua , ul - ua ; move 0 - ul , ul ; v0 = ul )  
[1972] ( move 4 , ul ; move 4 , 3 / ua )  
[1973] ( move 4 , 3 / ua ; move 4 , ul )  | ( move 4 , ul / 2 ; move 4 , ul ; move 0 , 3 - ul )  
[1974] ( move ua , 4 ; move 4 / ua , 4 )  | ( move ua , 4 ; move ul / 3 , ul - 3 )  | ( move 0 , ul ; move 0 - ul , 0 ; move 4 + ul , 3 )  
[1975] ( move 4 , 3 / 4 ; move ua , ul )  
[1976] ( move 3 , 4 ; move ua / 4 , ul )  
[1977] ( move 4 , 4 ; move 3 , ul / ua )  | ( move 3 , ul ; move 0 - 4 , 3 ; move 0 , ua + ul )  
[1978] ( move 4 , ul ; move ul , 4 * 3 )  
[1979] ( move 4 / ua , 4 ; move 4 , ul )  | ( move 4 / ua , 4 ; v0 = 4 ; move v0 , ul )  | ( ( move 3 / ua , 4 ; pen 4 / ua ) ; move 4 , ul )  
[1980] ( move 4 , ul / 3 ; move 4 , ul )  | ( ( pen ul ; move 4 , 2 / ua ) ; move 4 , ul )  | ( ( move 4 , 2 / ua ; v0 = 4 ) ; move v0 , ul )  
[1981] ( move 4 , 4 ; move 4 , ul / ua )  | ( ( move 4 , 4 ; move 3 + ul , ul / ua ) ; v0 = ul )  
[1982] ( move 4 , 4 ; move ua / 4 , ul )  | ( move 4 , 2 * 2 ; move ua / 4 , ul )  
[1983] ( move 4 , 4 / 3 ; move ul , ul )  
[1984] ( move ul , 4 / 3 ; move 4 , ul )  | ( move ul , 4 / 3 ; move 3 + ul , ul )  
[1985] ( move ul , 3 / 4 ; move 4 , ul )  | ( move ul , 3 / 4 ; move 2 + 2 , ul )  | ( move ul , 3 / 4 ; move 4 , ul ; v0 = 4 + ul )  
[1986] ( move 4 , ua / 4 ; move ul , 4 )  | ( move 4 , ua / 4 ; move ul , 3 + ul ; v0 = 0 )  
[1987] ( move ul , 4 * 4 ; move 4 , ul )  | ( v0 = 4 ; move ul , 4 * v0 ; move v0 , ul )  | ( ( move ul , 4 * 4 ; move 0 , ua ) ; move 4 , ul )  
[1988] ( move 4 , ul / 4 ; move 3 , ul )  | ( move 2 - ul , ul / 4 ; move 3 , ua ; move 3 , ul )  
[1989] ( move 4 / ua , ul ; move 4 , 4 )  | ( move 4 / ua , ua + ul ; v0 = 4 ; move v0 , v0 )  
[1990] ( move 4 , 3 ; move ul , ul / 4 )  | ( move ul , ua ; move 2 - ua , 3 - ua )  
[1991] ( move ua / 4 , ul ; move 4 , 4 )  | ( move ua / 4 , ul ; move 4 , 3 + ul )  
[1992] ( move 4 , 4 ; move ul / 3 , ul )  | ( move ul / 4 , 3 ; move 4 , ua + ul )  | ( move ul / 4 , 3 ; v0 = ul ; move 4 , ul )  | ( move 4 , 4 ; ( pen ul ; move ul / 3 , ul ) )  
[1993] ( move ua , 0 ; move 0 - ua , ul )  | ( move ua , ua ; move 0 - ua , ul )  | ( move ua , ua + ua ; move 0 - ua , ul ; pen 0 )  | ( ( move ua - ul , ua ; move ul , 0 ) ; move 0 - ua , ul )  
[1994] ( move ul , 0 ; move 0 - ua , ul )  | ( move ul , ua ; move 0 - ua , ul )  | ( move ua , ul ; move ul , ua / 3 )  | ( move ul , ul / ua ; move ua , 4 )  | ( pen ul ; move ua , ul ; move ul , ua / 3 )  | ( move 0 , ua ; move ua , ul ; move ul - 2 , 0 - ul )  | ( v0 = 0 ; ( move ul , v0 ; move v0 - ua , ul ) )  
[1995] ( move 0 - ul , 0 ; move ua , ul )  | ( move ul - 2 , 0 ; move ua , ul )  | ( move 3 - 4 , ua ; move ua , ul )  | ( move ul , ul - 4 ; move ua , 4 )  | ( move 3 - 4 , 0 ; move ua , ul ; v0 = ua )  | ( move ul - 2 , 0 ; ( move ua , ul ; pen ua ) )  | ( ( move 0 - ul , ua ; move ua , ul ) ; v0 = ul )  | ( move ul - 2 , ua * 3 ; ( move ua , ul ; pen 2 - ua ) )  
[1996] ( move ua , 0 ; move ua + ul , 2 )  | ( move ua , ua ; move ua + ul , 2 )  | ( move ua , ua ; move ua + ul , 4 - 2 )  | ( move ua , ua ; move ua + ul , ul + ul )  | ( move ua , 0 ; pen ul ; move ua + ul , 2 )  | ( move ua , ua ; move ul , 4 - 2 ; move ua , 0 )  | ( move ua , ua ; move ua + ul , 2 ; v0 = ul )  | ( ( pen 4 ; move ua , 0 ) ; move ua + ul , ul + ul )  | ( move ua , ua ; ( pen 4 + ul ; move ua + ul , 2 ) )  
[1997] ( move ua + 2 , 0 ; move ul , ul )  | ( move ua + 2 , ua ; move ul , ul )  | ( move ua + 2 , 0 ; move ul , ul ; pen ul )  | ( move ul , ua ; move ua + ul , ua ; move ul , ul )  | ( v0 = ua ; move ua + 2 , v0 ; move ul , ul )  | ( move ua , ua ; ( move ul + ul , 0 ; move ul , ul ) )  | ( ( move ua + 2 , ua ; move ul , ul - ua ) ; pen ul )  | ( move ua + ul , ua * 2 ; move ul , ua ; move ul , ul )  | ( ( move 2 , ua ; pen 2 ; move ua , ua ) ; move ul , ul )  | ( move ua + 2 , ua ; v0 = ul ; move v0 , ua + v0 )  | ( v0 = ua + ul ; move ul + v0 , ua ; move ul , v0 )  | ( pen ua + ul ; ( move ua + 2 , ua ; move ul , ua + ul ) )  | ( ( move 4 * 2 , ua ; pen ul ) ; move ul , ul ; pen 2 + ul )  | ( pen ua + ul ; move ua + 2 , ua ; ( move ul , ul ; pen 4 ) )  
[1998] ( move ua , ua ; move ua + 2 , 2 )  | ( move ua , 0 ; move ul , 2 ; move ua + ul , 0 )  | ( move ua , 0 ; move ua + ul , 2 ; move ul , ua )  | ( move ua , ua ; move ua , 2 ; move ul + ul , ua )  | ( ( move ua , 0 ; move ua , 2 - ua ) ; move 2 , 0 )  | ( ( pen 2 ; move ua , ua ) ; move ul + ul , 2 ; move ua , ua )  
[1999] ( move 2 , 0 ; move ua + ul , ul )  | ( move 2 , ua ; move ua + ul , ul )  | ( move 3 - ul , 0 ; move ua + ul , ul )  | ( move 2 , ua * 3 ; move ua + ul , ul )  | ( move 2 , ua ; move ua + ul , ua + ul )  | ( move ul + ul , 0 ; move ua + ul , ul )  | ( move 2 , 0 ; move ua + ul , ul ; pen 2 )  | ( move 2 , 0 ; move ua , ul ; move ul , ua )  | ( move 2 , ua ; move ul , ul ; move ua , ua )  | ( move 2 , 0 ; move ua + ul , ul ; pen ua + ul )  | ( move 2 , ua ; move ua , ul - ua ; move ul , ua )  | ( move 3 - ul , ua ; pen ul ; move ua + ul , ul )  | ( move ul + ul , ua ; move ua , ul ; move ul , ua )  | ( move ul , ua ; move ul , ua ; move ua + ul , ul )  | ( move 2 , 0 ; v0 = ua + ul ; move v0 , v0 )  | ( v0 = ua ; move 2 , v0 ; move v0 + ul , ul )  | ( move 4 - 2 , 0 ; move ua + ul , ul ; v0 = ul )  | ( ( move 2 , ua * 4 ; move ua + ul , ul ) ; pen 0 )  | ( pen 4 ; ( move 2 , ua * 3 ; move ua + ul , ul ) )  | ( move ul + ul , 0 ; move ua + ul , ul ; v0 = ul )  | ( move 2 , ua ; move ua + ul , ua + ul ; pen ul + ul )  | ( v0 = ul ; move 2 , ua * 2 ; move ua + v0 , v0 )  | ( move 2 , ua ; move ua , ul ; ( v0 = 0 ; move ul , 0 ) )  
[2000] ( move ul - ua , 0 ; move ua , 2 )  | ( move ul - ua , ua ; move ua , 2 )  | ( move ul - ua , ua ; move ua , ul + ul )  | ( move ul - ua , ua + ua ; move ua , 3 - ul )  | ( pen ua + ul ; move ul - ua , 0 ; move ua , 4 - 2 )  | ( move ul - ua , ua * 3 ; pen ul + ul ; move ua , 2 )  
[2001] ( move ul , ua ; move ua , 0 - 2 )  | ( move ul , 0 ; move ua , ua - 2 )  | ( move ul , 0 ; move ua , ul - 3 )  | ( move ul , ua ; move ua , 2 - 4 )  | ( move ul , ua ; move ua , ua - 2 )  | ( move ul , ua ; move ua , ul - 3 )  | ( move ul , ua * 2 ; move ua , 0 - 2 )  | ( move ul , 0 ; move ua , ua - 2 ; pen ul )  | ( move ul , 0 ; move 0 , 2 ; move ua , ua - 4 )  | ( move ul , 0 ; move ua , ul - 3 ; v0 = 2 )  | ( move ul , 0 ; ( move ua , ua - 2 ; pen 4 ) )  | ( move ul , 0 ; move ua , ul - 3 ; pen ua * ua )  | ( move ul , 0 ; v0 = ul - 3 ; move ua , v0 )  
[2002] ( move ua , 0 ; move ua + ul , 3 )  | ( move ua , ua ; move ua + ul , 3 )  | ( move ua , 0 ; move ua + ul , ua + 3 )  | ( move ua , 0 ; move ua + ul , 3 - ua )  | ( move ua , ua ; move ua + ul , ua + 3 )  | ( move ua - ul , ua ; move ua + ul , 3 )  | ( move ua , 0 ; move ua , 3 ; move ul , 0 )  | ( move ua , ua ; move ua + ul , 3 ; v0 = ua - 4 )  | ( ( move ua , ua ; move ul , 3 ) ; move ua , ua + ua )  | ( move ua , 0 ; v0 = ua - ul ; move ua + ul , 4 + v0 )  
[2003] ( move 0 - ul , ua ; move ua , 2 )  | ( move ul , 3 ; move ua , 0 - ul )  | ( move ul , 3 ; move ua , ul - 2 )  | ( move ul , 3 ; move ua , ua - ul )  | ( move 2 - 3 , 0 ; move ua , 2 - ua )  | ( move ul , 2 + ul ; move ua , ul - 2 )  | ( move ul , 3 ; move 0 , ul ; move ua , ul - 3 )  | ( move ul , 3 ; v0 = ua ; move v0 , ua - ul )  | ( move ul , 3 ; ( v0 = ul ; move ua , v0 - 2 ) )  
[2004] ( move ua + ul , 0 ; move 2 , ul )  | ( move ua + ul , ua ; move 2 , ul )  | ( move ua + ul , 0 ; move 2 , ul - ua )  | ( move ua + ul , ua ; move 2 , 2 - ul )  | ( move ua + ul , ua ; move 4 / 2 , ul )  | ( move ul , 0 ; move ua , 0 ; move 2 , ul )  | ( move ul , ua ; move ua , 0 ; move 2 , ul )  | ( move ua , 0 ; move ul , ua ; move 2 , ul )  | ( move ua , ua ; move ul , ua ; move 2 , ul )  | ( pen ua ; move ua + ul , ua ; move 2 , ul )  | ( move ua + ul , ua + ua ; move 2 , ua + ul )  | ( move ua , 0 ; move ul , ua ; move 2 , 3 - 2 )  | ( move ua + ul , ua ; ( pen 4 ; move 2 , ul ) )  | ( move ua + ul , ua ; move ul , ul ; move ul , 0 )  | ( move ua + ul , ua ; move ul , ul - ua ; move ul , ua )  | ( ( move ua + ul , ua ; pen 4 ; pen ul ) ; move 3 - ul , ul )  
[2005] ( move ua , 0 ; move 2 - ua , ul )  | ( move ua , ua ; move 2 - ua , ul )  | ( move ua , ua ; move 2 - ua , ua + ul )  | ( move ua , ua ; move 2 - ua , ul ; move ul / ua , 2 )  | ( move ul , ua ; move ua - ul , ua ; move 2 - ua , ul )  | ( move ua , 0 ; ( move 0 , ua + ul ; move 2 - ua , ua ) )  
[2006] ( move ua , 0 ; move ua - 2 , ul )  | ( move ua , ua ; move ua - 2 , ul )  | ( move ua , ua ; move ua - 2 , ua + ul )  | ( move ua , 0 ; v0 = ua ; move v0 - 2 , ul )  | ( move ua , ua ; move ua - 2 , ul ; v0 = ua + ua )  | ( ( v0 = ua ; move v0 , v0 ) ; move v0 - 2 , ul )  
[2007] ( move ua , 0 - ul ; move ua , 2 )  | ( move ua , ul - 2 ; move ua , ul + ul )  | ( pen 3 ; move ua , ul - 2 ; move ua , 2 )  | ( pen ul / 4 ; move ua , ua - ul ; move ua , 2 )  
[2008] ( move 2 , 0 ; move ua , ua * ua )  | ( move 2 , ua ; move ua , ua * ua )  | ( move 4 - 2 , ua ; move ua , ua * ua )  | ( pen 2 ; move 2 , ua ; move ua , ua * ua )  | ( move 2 , ua ; move ua , ua * ua ; v0 = 3 )  | ( v0 = ua ; move 2 , ua ; move v0 , v0 * v0 )  
[2009] ( move ua , 0 ; move ua , ua - 3 )  | ( move ua , ua ; move ua , ul - 4 )  | ( move ua , ul / ua ; move 3 + 3 , 3 )  | ( move ua , ua * 3 ; move ua , ul - 4 )  | ( move ua , ua + ua ; move ua , ua - 3 )  | ( move ua , ua + ua ; move ua , ul - 4 )  | ( move ua , 0 ; ( move ua , ua - 3 ; pen ul ) )  | ( move ua , ua * 2 ; pen ul ; move ua , ua - 3 )  | ( ( pen ua ; move ua , ua ) ; move ua , ua - 3 )  | ( move ua , ua ; ( move ua , ul - 4 ; v0 = 2 ) )  | ( move ua , ua ; move ua , 0 - 3 ; ( pen ul - 2 ; pen ul ) )  
[2010] ( move ua , 0 ; move 2 , ua - ul )  | ( move ua , ua * 3 ; move 2 , 0 - ul )  | ( move ua , 0 ; move ul + ul , ua - ul )  | ( move ua , ua ; move 3 - ul , ua - ul )  | ( move ua , ua ; move ul + ul , ua - ul )  | ( move ua , ua * 3 ; move ul + ul , ua - ul )  | ( move ua , 0 ; move ul , ua - ul ; move ul , 0 )  | ( move ua , ua ; move ul , 3 - 4 ; move ul , ua )  | ( pen ul ; move ua , ua ; move ul + ul , ul - 2 )  | ( move ua , ua * 4 ; move 2 , ul - 2 ; v0 = 4 - ul )  | ( ( move ua , ua ; move 2 , ul - 2 ; v0 = 4 ) ; pen ua )  | ( pen ul ; move ua , ua ; ( move 2 , ua - ul ; pen ua - 3 ) )  
[2011] ( move 2 , ua ; move 0 - ua , ul )  | ( move 3 , ua ; move 0 - ua , ul ; move ua / 4 , 0 )  
[2012] ( move ul , 2 ; move 0 - ua , ul )  | ( move ul , 2 ; pen ua ; move 0 - ua , ul )  | ( move ua , 3 ; move ul , ua - 4 ; v0 = 0 - ul )  
[2013] ( move 3 , 0 ; move ua , ua * ua )  | ( move 3 , ua ; move ua , ua * ua )  | ( move 4 - ul , ua ; move ua , ua * ua ; pen ua )  | ( move 3 , 0 ; v0 = ua ; move v0 , v0 * v0 )  
[2014] ( move ua - 3 , 0 ; move ua , ul )  | ( move ua - 3 , 0 ; move ua , ul ; pen ua )  
[2015] ( move 3 , 0 ; move ua + ul , ul )  | ( move 3 , ua ; move ua + ul , ul )  | ( move 3 , 0 - ua ; move ua + ul , ul )  | ( move 3 , ua ; move ua + ul , ua + ul )  | ( move 3 , ua ; move ua + ul , ul - ua )  | ( move 3 , 0 ; move ua + ul , ul ; pen ul )  | ( move 3 , ua ; move ua + ul , ul ; pen 3 )  | ( pen 3 ; move 3 , ua ; move ua + ul , ul )  | ( move 3 , 0 ; ( move ua , ul ; move ul , 0 ) )  | ( move 3 , 0 ; move 2 - ul , ul ; move ua , ua )  | ( move 3 , ua ; move ul , ul - ua ; move ua , ua )  | ( move 3 , 0 ; v0 = ua + ul ; move v0 , v0 )  | ( move 3 , 0 ; v0 = ul ; move v0 + ua , v0 )  | ( move 3 , ua ; v0 = ua + ul ; move v0 , v0 )  | ( move 2 + ul , ua ; ( move ua , ul ; move ul , 0 ) )  | ( move 2 , ua * 3 ; move ul , ua ; move ua + ul , ul )  | ( move 4 - ul , ua ; move ul , ul ; move ua , ua + ua )  
[2016] ( move ua - ul , 0 ; move 2 , ul )  | ( move ua - ul , ua ; move 2 , ul )  | ( move ua - ul , 0 ; move 2 , 3 - 2 )  | ( move ua - ul , ua ; move ul + ul , ul )  | ( move ua - ul , 0 ; move ul + ul , ua + ul )  | ( move ua - ul , 0 ; pen ul ; move 2 , ul - ua )  | ( pen 4 ; move ua - ul , ua + ua ; move 2 , ul )  | ( move ua - ul , ua ; move ul , ul ; move ul , 0 )  | ( move ua - ul , 0 ; move ul , ul ; move ul , ua )  | ( pen ul ; move ua - ul , 0 ; move ul + ul , ul )  | ( move ua - ul , ua ; v0 = 2 ; move v0 , ul )  | ( v0 = ul ; move ua - v0 , 0 ; move 2 , v0 )  | ( move ua - ul , ua ; pen ul ; ( move 2 , ul ; move 0 , ul ) )  | ( ( pen 4 ; pen ua + ua ) ; move ua - ul , ua ; move 2 , ul )  
[2017] ( move ua + ul , 0 ; move 3 , ul )  | ( move ua + ul , ua ; move 3 , ul )  | ( move ua + ul , 0 ; move 2 + ul , ul )  | ( move ua + ul , ua ; move 3 , 2 - ul )  | ( move ul , 0 ; move ua , 0 ; move 3 , ul )  | ( move ua , 0 ; move ul , 0 ; move 3 , ul )  | ( move ul , 0 ; move ua , ua ; move 3 , ul )  | ( move ua + ul , ua ; move 3 , ul ; pen ua )  | ( move ua + ul , ua ; move 2 + ul , ul ; pen 4 )  | ( move ua + ul , ua ; pen ul ; ( pen 3 ; move 3 , ul ) )  | ( ( v0 = ul ; move ua + ul , ua * 2 ) ; move 3 , ul )  | ( move ua + ul , ua ; ( move 4 - ul , ul ; pen 0 - 4 ) )  | ( move ua + ul , 0 ; v0 = ua + ul ; move 4 - ul , ul )  | ( move ua + ul , ua ; ( move 2 + ul , ul ; v0 = ua ) )  | ( ( pen ua ; ( move ua , ua ; move ul , 0 ) ) ; move 3 , ul )  
[2018] ( move ul - ua , 0 ; move 2 , ul )  | ( pen ua ; move ul - ua , ua ; move 2 , ul )  | ( move ul - ua , ua + ua ; move 2 , ua + ul )  | ( move ul - ua , ua ; ( pen ul ; move ul + ul , ul ) )  | ( move ul - ua , 0 ; v0 = ul ; move ul + v0 , ul )  
[2019] ( move ua , ul ; move 0 - 2 , ul )  | ( move ua , ul ; move ul - 3 , ul )  | ( move ua , ua + ul ; move ul - 3 , ul )  | ( move ua , ul ; move ul - 3 , ul ; pen ua )  | ( move ua , ul ; pen ua ; move ul - 3 , ul )  | ( move ul , ul ; move ua - ul , ua ; move 2 - 4 , ul )  | ( pen ul ; move ua , ua + ul ; move 0 - 2 , ua + ul )  | ( move ua , ul ; ( move ul - 3 , ul ; v0 = ua + 4 ) )  | ( ( move 0 , ua + ua ; move ua , ul ) ; move ul - 3 , ul )  
[2020] ( move ul , 0 ; move ua - 2 , ul )  | ( move ul , ua ; move ua - 2 , ul )  | ( move ul , ua * 3 ; move ua - 2 , ul )  | ( move ul , 0 ; move ua - 2 , ul ; pen 0 )  | ( move ul , 0 ; pen ua ; move ua - 2 , ul )  | ( pen 2 ; move ul , ua ; move ua - 2 , ul )  | ( move ul , ua ; pen 2 ; move ua - 2 , ul )  | ( move ul , 0 ; move ul , ul ; move ua - 3 , ua )  | ( pen ul ; move ul , ua * 2 ; move ua - 2 , ul )  | ( ( pen ua - 2 ; move ul , 0 ) ; move ua - 2 , ul )  | ( move ul , ua ; ( move ua - 3 , ul ; move ul , 0 - ua ) )  
[2021] ( move ua , ul ; move ua , 0 - 3 )  | ( move ua , ul ; move ua , ua - 3 )  | ( move ua , ul ; move ua , ul - 4 )  | ( move ua , ul ; move ua , ul - 4 ; v0 = 2 - 4 )  | ( ( move ua , ul ; move ua , 0 - 3 ) ; v0 = ul )  | ( move ua , ul ; move ua , ul - 4 ; v0 = 4 + ul )  | ( move ua , ua + ul ; v0 = ua - 3 ; move ua , v0 )  
[2022] ( move ul , 0 ; move ua + 3 , ul )  | ( move ul , ua ; move 3 * 3 , ul )  | ( move ul , ua ; move ua + 3 , ul )  | ( move ul , 0 ; move 3 * 3 , ul ; pen ua )  | ( pen ul ; move ul , ua ; move ua + 3 , ul )  | ( pen 4 - ul ; move ul , ua ; move ua + 3 , ul )  
[2023] ( move ua + ul , 2 ; move ua , 2 )  | ( move ua + ul , ua + 2 ; move ua , 2 )  | ( move ua , 2 ; move ul , 0 ; move ua , 2 )  | ( move ul , 2 ; move ua , 0 ; move ua , 2 )  | ( move ua + ul , 2 ; ( move ua , 2 ; move ul , 3 ) )  | ( move ua + ul , 2 ; move 0 , ul ; move ua , ua + ul )  
[2024] ( move 2 , 0 ; move ul - ua , ul )  | ( move 2 , ua ; move ul - ua , ul )  | ( move 3 - ul , 0 ; move ul - ua , ul )  | ( move ul + ul , ua ; move ul - ua , ul )  | ( move ul + ul , 0 ; move ul - ua , ua + ul )  | ( move ul + ul , ua ; ( move ul - ua , ul ; pen 3 ) )  | ( move 2 , ua * 2 ; ( move ul - ua , ul ; move 0 , ul ) )  | ( move ua / 3 , ua ; pen ua + 4 ; move ul - ua , ua + ul )  | ( move 2 , ua ; ( move ul - ua , ua + ul ; pen ul ) ; pen ua )  | ( move ul , ua ; move ul , ua ; ( move ul - ua , ul ; pen ul ) )  
[2025] ( move ua , 0 ; move ua , 4 + ul )  | ( move ua , ua ; move ua , 3 + 2 )  | ( move ua , ua ; move ua , 4 + ul )  | ( move ua , 0 ; pen ul ; move ua , 4 + ul )  | ( move ua , 0 ; move 0 , ul ; move ua , 2 + 2 )  | ( move ua , 0 ; move ua , 4 + ul ; v0 = ul )  | ( move ua , ua ; ( move 0 , 4 ; move ua , ul ) )  | ( move ua , ua ; move ua , 4 + ul ; v0 = 4 )  | ( move ua , ua ; move ua , 4 + ul ; pen ua + 2 )  | ( move ua , ua + ua ; pen ua ; move ua , 4 + ul )  
[2026] ( move ul , 0 ; move ua - ul , 2 )  | ( move ul , ua ; move ua - ul , 2 )  | ( move ul , ua * 2 ; move ua - ul , 2 )  | ( pen 2 ; move ul , 0 ; move ua - ul , 2 )  | ( move ul - ua , 2 ; ( pen ua ; move ul , ul ) )  | ( move ul , ua ; move ua - ul , ua + 2 ; move 0 , 2 )  | ( pen 2 / ua ; move ul , ua * 3 ; move ua - ul , 2 )  
[2027] ( move ua + ul , 0 ; move ua , 4 )  | ( move ua + ul , ua ; move ua , 4 )  | ( move ua + ul , 0 - ua ; move ua , 4 )  | ( move ua + ul , ua ; move ua , 4 - ua )  | ( move ul , ua ; move ua , 0 ; move ua , 4 )  | ( move ua + ul , 0 ; pen ul ; move ua , 4 )  | ( move ua , ua ; move 3 - 2 , 0 ; move ua , 4 )  | ( pen ul ; move ua + ul , ua * 3 ; move ua , 4 )  | ( move ua + ul , ua ; pen ua ; move ua , ua + 4 )  | ( move ua + ul , 0 ; move ua , 4 ; v0 = 2 * 2 )  | ( move ua + ul , 0 ; ( v0 = ul ; move ua , 4 ) )  | ( ( move ua + ul , ua ; move ua , 4 ) ; v0 = 4 + ul )  | ( move ul , ua ; move ua , 0 ; ( move ua , 4 ; pen ua + 4 ) )  | ( move ua , ua ; pen 2 ; ( move ul , ua ; move ua , 3 + ul ) )  | ( ( move ul , ua ; move ua , ua ) ; move ua , 3 + ul ; pen ul )  
[2028] ( move ua , ul ; move ua + 2 , 2 )  | ( move ua , ul ; move ua , 2 ; move 2 , 0 )  | ( move ua , ul ; move 2 , ua + 2 ; move ua , 0 )  | ( move ua , ul ; move ua + ul , 2 ; move ul , 0 )  | ( move ua , ul ; move ul , 2 ; move ua + ul , ua )  | ( move ua , ul ; v0 = ua + 2 ; move v0 , v0 )  | ( move ua , ul ; move ua + 2 , ua + 2 ; v0 = 4 - ul )  
[2029] ( move ul - ua , 0 ; move ul , 2 )  | ( move ul - ua , ua ; move ul , 2 )  | ( move ul - ua , ua ; move ul , ul + ul )  | ( move ul , ua - ul ; move ua - ul , ul )  | ( move ul - ua , 0 ; pen ul ; move ul , 2 )  | ( move ul - ua , ua ; move ul , 2 ; pen 4 )  | ( pen ua ; move ul - ua , ua ; move ul , 2 )  | ( move ul - ua , ua ; ( move ul , 2 ; pen 3 ) )  | ( pen 3 + ul ; move ul - ua , ua ; move ul , 2 )  | ( move ul - ua , ua ; move ul , ul + ul ; pen 0 )  | ( move ul - ua , ua ; pen ua * ua ; move ul , 2 )  | ( v0 = 3 - 2 ; move v0 - ua , 0 ; move ul , 2 )  | ( move ul - ua , 0 ; move ul , ua / 3 ; move 0 , ua + ul )  
[2030] ( move ua + 2 , ul ; move ua , 2 )  | ( move ua + 2 , ul ; move ua , 4 / 2 )  | ( move ua + 2 , ua + ul ; move ua , 2 )  | ( move ua + 2 , ul ; pen 3 + ul ; move ua , 2 )  | ( move ua , ul - ua ; move 2 , ua ; move ua , 2 )  | ( move ua + 2 , ul ; ( move ua , ua + 2 ; v0 = ua ) )  
[2031] ( move 0 - ul , ul ; move ua , 2 )  | ( move ul , 4 ; move ua , ul - 2 )  | ( move ul , 4 ; move ua , ua - ul )  | ( ( pen ua ; move ul , 4 ; pen 2 ) ; move 3 * 2 , 0 - ul )  
[2032] ( move 2 , 0 ; move ua - ul , ul )  | ( move 2 , ua ; move ua - ul , ul )  | ( move 2 , ua ; move ua - ul , ua + ul )  | ( move ul + ul , ua ; move ua - ul , ul )  | ( move 2 , ua ; pen 3 ; move ua - ul , ul )  | ( move ul + ul , ua ; move ua - ul , ua + ul )  | ( move 2 , ua ; move ua - ul , ul ; v0 = 0 )  | ( move ul + ul , 0 ; move ua - ul , ul ; pen ul )  | ( move 2 , 0 ; v0 = ul ; move ua - ul , v0 + ua )  | ( move 2 , 0 - ua ; v0 = ul ; move ua - v0 , v0 )  | ( move 2 , ua ; v0 = ua + ul ; move v0 - 2 , v0 )  | ( move 2 , ua ; v0 = 4 - ua ; move v0 * v0 , ul )  
[2033] ( move ua , 2 ; move ua + ul , 2 )  | ( move ua , 2 ; move ua + ul , ul + ul )  | ( move ua , 2 - ua ; move ua + ul , ul + ul )  | ( move ua , 2 ; move ua - 2 , 2 ; move 3 , ua )  | ( v0 = ul ; move ua , 2 ; move ua + v0 , 2 )  
[2034] ( move ul , 0 ; move 2 - ua , ul )  | ( move ul , ua ; move 2 - ua , ua + ul )  | ( move ul , ua ; v0 = 2 ; move v0 - ua , ul )  | ( move ul , 0 ; v0 = 2 - ua ; move v0 , 2 - ul )  | ( move ul , 0 ; ( move 2 - ua , ul ; v0 = 0 - ua ) )  | ( ( move ul , ua ; move 2 - ua , ul ) ; move 0 , ul - ua )  
[2035] ( move 0 - ul , ua ; move ua , 3 )  | ( move 0 - ul , 0 ; move ua , 3 ; pen 4 )  | ( pen ul ; move 0 - ul , 0 ; move ua , 3 )  | ( move 3 - 4 , 0 ; v0 = ua ; move v0 , 3 )  | ( move 0 - ul , ua ; move ua , 3 ; pen ul / 3 )  | ( move ul - 2 , ua ; v0 = ua ; move v0 , 3 )  | ( move 0 - ul , ua * 2 ; ( pen 3 ; move ua , 3 ) )  | ( move 3 - 4 , ua ; v0 = 2 + ul ; move ua , v0 )  | ( ( move ul - 2 , ua ; v0 = ua ) ; move v0 , 3 )  | ( move 0 - ul , 0 ; v0 = ul ; ( pen ul ; move ua , 3 ) )  
[2036] ( move ua , 0 - ul ; move ua , 3 )  | ( move ua , ua - ul ; move ua , 3 )  | ( move ua , 3 - 4 ; move ua , ua + 3 )  | ( move ua , ul - 2 ; move ua , 2 + ul )  | ( move ua , ua - ul ; move ua , 4 - ul )  | ( v0 = ua ; move v0 , v0 - ul ; move v0 , 3 )  
[2037] ( move 0 - 2 , ul ; move ua , ul )  | ( move ul - 3 , ul ; move ua , ul )  | ( move 2 - 4 , ul - ua ; move ua , ul )  | ( move ul - 3 , ua + ul ; move ua , ul )  | ( pen 2 ; move ul - 3 , ul ; move ua , ul )  | ( pen ua ; move ul - 3 , ul ; move ua , ul )  | ( move ul - 3 , ul ; move ua , ua + ul ; pen 4 )  | ( move 0 - 2 , ul ; v0 = 4 + ul ; move ua , ul )  
[2038] ( move ul , 0 ; move ul - ua , 2 )  | ( move ul , ua ; move ul - ua , 2 )  | ( move ul , ua + ua ; move ul - ua , 2 )  | ( move ul , ua ; move ul - ua , 3 - ul )  | ( move ul , ua ; ( move ul - ua , 2 ; pen ul ) )  | ( move ul , ua ; move 0 , ul ; move ul - ua , ul )  | ( move ul , 0 ; move ul - ua , 4 - 2 ; move 0 , 2 )  | ( move ul , ua ; move ul - ua , 2 ; move 0 , ul + ul )  | ( move ul , ua ; move ul - ua , ul + ul ; v0 = ul )  
[2039] ( move ua , 0 ; move 3 - ua , ul )  | ( move ua , ua ; move 3 - ua , ul )  | ( move ua , ua ; move 3 - ua , ul ; move 0 , 0 )  | ( ( pen ul ; move ua , 0 ) ; move 3 - ua , ul )  | ( v0 = ua ; move v0 , 0 ; move 3 - ua , ul )  | ( move ua , 0 ; ( ( pen 0 ; pen ul ) ; move 3 - ua , ul ) )  
[2040] ( move ua , ul ; move 3 , 0 - ul )  | ( move ua , ua + ul ; move 3 , 3 - 4 )  | ( move ua , ul ; move 4 - ul , ua - ul )  | ( move ua , ul ; move 3 , 3 - 4 ; pen ua )  | ( move ua , ul ; move 3 , ua - ul ; v0 = ua )  | ( move ua , ul ; pen ua ; move 2 + ul , ul - 2 )  | ( move 3 , ua / 2 ; v0 = ul ; move ua , v0 )  
[2041] ( move 2 - ua , ul ; move ua , 2 )  | ( move 2 - ua , ul ; move ua , 3 - ul )  | ( move 2 - ua , ul ; ( pen ul ; move ua , ul + ul ) )  
[2042] ( move 2 , ul ; move ua + ul , 2 )  | ( move 2 , ul ; move ua + ul , 2 ; pen ua )  | ( move 2 , ul ; move ua , 2 ; move ul , 0 - ua )  | ( move ul , ul ; move ul , 0 ; move ua + ul , 2 )  | ( move 2 , ul ; ( move ua , ul + ul ; move ul , 0 ) )  | ( ( move 2 , ul ; move ua , 2 ) ; move ul , ua ; pen ul )  | ( move ul + ul , ul ; ( move ua + ul , 2 ; v0 = 0 ) )  
[2043] ( move 0 - ua , ul ; move ul , 3 )  | ( move 0 - ua , ul ; move ul , ua + 3 )  | ( move ul - 2 , 4 - ua ; move ua , ul - 4 )  
[2044] ( move 2 / ua , 0 ; move ua , ul )  | ( move ul / 3 , 0 ; move ua , ul )  | ( move ul / 4 , 0 ; move ua , ul )  | ( move ul / 3 , ua ; move ua , ul )  | ( move ul / 4 , ua ; move ua , ul )  | ( move ul / 3 , ua ; move ua , ul ; pen 3 )  | ( ( move 2 / ua , ua ; move ua , ul ) ; pen 3 )  | ( move ul / 3 , ua ; move ua , ul ; v0 = ua )  | ( move ul / 3 , 0 ; move ua , ul ; v0 = 3 + ul )  | ( ( move ul / 3 , 0 ; pen 2 + ul ) ; move ua , ul )  | ( move 2 / ua , 0 - ua ; ( pen ua ; pen 2 ; move ua , ul ) )  
[2045] ( move ua , 0 ; move ua - 4 , ul )  | ( move ua , ua ; move ua - 4 , ul )  | ( move ua , 0 ; move ua - 4 , ua + ul )  | ( move ua , ua ; move ua - 4 , ul ; pen 3 )  | ( move ua , 0 ; move 4 / ua , ul ; move 2 , 0 )  | ( move ua , 0 ; move 2 , ul ; move 2 / ua , ua * 2 )  
[2046] ( move ul - 3 , 0 ; move ua , ul )  | ( move ul - 3 , ua ; move ua , ul )  | ( move 2 - 4 , ua * 3 ; move ua , ul )  | ( move 0 - 2 , ua ; move ua , ua + ul )  | ( move 2 - 4 , ua ; move ua , ua + ul )  | ( pen ul ; move 2 , 0 - 3 ; move ua , 4 )  | ( move ul - 3 , 0 - ua ; move ua , ua + ul )  | ( move 2 - 4 , ua ; move ua , ul ; move 0 , 0 )  | ( move 2 - 4 , ua ; move ua , ul ; v0 = ua )  | ( move ul - 3 , ua ; move ua , ul ; pen ua / 3 )  | ( move 2 - 4 , ua ; v0 = ul ; move ua , v0 )  | ( move ul - 3 , ua ; v0 = ua ; move v0 , ul )  | ( move 2 - 4 , ua ; v0 = ua + ul ; move ua , v0 )  | ( ( move 2 - 4 , 0 ; pen ul ; pen 3 ) ; move ua , ul )  
[2047] ( move ul - ua , 0 ; move ul , 3 )  | ( move ul - ua , ua ; move ul , 3 )  | ( move ul - ua , 0 ; move ul , 4 - ul )  | ( move ul - ua , ua ; ( v0 = 2 - ua ; move ul , 3 ) )  | ( ( move ul - ua , ua ; v0 = 2 + ul ) ; move ul , v0 )  
[2048] ( move ul , 0 ; move ul - ua , 3 )  | ( move ul / ua , 2 ; move ua , ul )  | ( move ul / ua , ul ; move ua , 2 )  | ( move ul - ua , ua + 3 ; move ul , 3 )  | ( move ul / ua , ul ; move ua , ul + ul )  | ( move ul / ua , ul + ul ; move ua , ul )  | ( pen ua ; move ul / ua , 2 ; move ua , ul )  | ( move ul , ua ; move ul - ua , 3 ; v0 = 0 )  | ( pen ul ; move ul / ua , 2 ; move ua , 2 - ul )  | ( pen ul / ua ; move ul - ua , 3 ; move ul , 3 )  | ( move ul / ua , 2 ; move ua , 2 - ul ; pen 4 / 2 )  
[2049] ( move ua , 2 ; move 2 - ua , ul )  | ( move ua , 2 ; move 2 - ua , 2 - ul )  | ( move ua , 2 ; move 2 - ua , ul ; pen ul / ua )  
[2050] ( move 2 , 2 ; move ua + ul , ul )  | ( move 3 - ul , 2 ; move ua + ul , ul ; pen ul )  | ( move 2 , ul + ul ; move ua + ul , ul - ua ; pen 0 )  | ( ( pen 4 + ul ; move 2 , ul + ul ) ; move ua + ul , ul )  
[2051] ( move 2 , ua ; move ul - ua , 2 )  | ( move ul + ul , ua ; move ul - ua , 2 )  | ( move 2 , ua ; pen ua ; move ul - ua , 2 )  | ( move 2 , ua * 4 ; pen ua ; move ul - ua , 2 )  
[2052] ( move ua , 0 ; move 2 , ul / ua )  | ( move ua + ul , 0 ; move ul , ul / ua )  | ( move ua , ua ; move ul + ul , ul / ua )  | ( ( move ua , ua ; pen ul ; move 2 , ul / ua ) ; v0 = ul )  
[2053] ( move ua + ul , 2 ; move 2 , ul )  | ( move ua + ul , 4 - 2 ; move 2 , ul )  | ( move ua + ul , 2 - ua ; move 2 , ul )  | ( move ua + ul , 2 ; move ul + ul , ul )  | ( move ul , 2 ; move ua , ua ; move 2 , ul )  | ( pen 4 - ul ; move ua + ul , 2 ; move 2 , ul )  | ( move ua + ul , 2 ; move ul , ul ; move ul , 0 )  | ( move ua + ul , ua + 2 ; pen ul ; move 2 , ul )  | ( move ua + ul , 2 ; move 2 , ul - ua ; v0 = ul )  | ( ( move ua , 2 ; move ul , 0 ; move 2 , ul ) ; move 0 , 2 )  
[2054] ( move ua , 2 ; move ua - ul , 2 )  | ( move ua , 2 ; move ua - ul , 2 - ua ; v0 = 0 )  | ( ( pen ua ; move ua , 2 ; move ua - ul , 2 ) ; pen ua )  
[2055] ( move ul , ul ; move 0 - ua , 3 )  | ( move ua , 4 ; move ul , ul / ua )  | ( move ua , 3 + ul ; move ul , ul / ua )  | ( move ua , ua + 4 ; move ul , ul / ua )  | ( move ua , 3 + ul ; move 4 / ua , ul / 4 )  | ( move ul , ul ; move 0 , 3 ; move 0 - ua , 0 )  | ( pen ua / 3 ; move 0 - ua , 4 ; move ul , 3 )  | ( move ua , 3 + ul ; move ul , ul / ua ; v0 = 3 )  | ( move ul , ua + ul ; pen 4 ; move 0 - ua , ua + 3 )  | ( pen ul / 4 ; move ua , 4 ; move 2 - ul , ul / ua )  
[2056] ( move ua - ul , 0 ; move ua , 4 )  | ( move ua - ul , ua ; move ua , 4 )  | ( move ua - ul , 0 ; move ua , 3 + ul )  | ( move ua - ul , 0 ; move ua , ua + 4 )  | ( move ua - ul , ua + ua ; move ua , 4 )  | ( move 0 , 0 - ua ; move ua - ul , ua ; move ua , 4 )  
[2057] ( move 2 , ua ; move ua - ul , 2 )  | ( move 2 , ua * 3 ; move ua - ul , 2 )  | ( move ua / 3 , ua ; move ua - ul , 4 - 2 )  | ( move ua / 3 , ua ; move ua - ul , ul + ul )  | ( ( move 2 , ua ; move ua - ul , 2 ) ; pen ul )  
[2058] ( move ua / 2 , 0 ; move ua , ul )  | ( move ua / 2 , 0 ; move 3 * 2 , ul )  | ( move ua / 2 , 0 ; move 3 * 2 , ua + ul ; move 0 , 4 )  | ( ( move ua / 2 , ua ; pen ul ; pen ua ) ; move ua , ul )  
[2059] ( move 3 , ua ; move ua + ul , 2 )  | ( move 4 - ul , 0 ; move ua + ul , 2 )  | ( move 3 , 0 ; move ua + ul , ul + ul )  | ( move 3 , 0 ; move ua - 3 , 2 ; move 4 , 0 )  | ( move 3 , 0 ; move ua , ua + 2 ; move ul , 0 )  | ( move 3 , 0 ; move ua , 3 - ul ; move ul , ua )  | ( move 3 , ua * 2 ; move ua + ul , 2 ; pen ul )  | ( move 3 , ua ; move ua + ul , 3 - ul ; pen ul + ul )  | ( move 3 , 0 ; ( pen ua + ua ; move ua + ul , 2 ; pen ua ) )  | ( ( pen ua ; move 3 , ua + ua ) ; move ua , 2 ; move ul , ua )  
[2060] ( move ul , 2 ; move ua + ul , 2 )  | ( move ul , 2 ; move ua + ul , ul + ul )  | ( move ul , ul + ul ; move ua + ul , 2 )  | ( move ul , 2 ; move ua , 2 ; move ul , 0 )  | ( move ul , 2 ; move ua + ul , ul + ul ; pen ua )  | ( move 2 - ul , 2 ; pen 3 + 2 ; move ua + ul , 2 )  | ( move ul , ul + ul ; move ua + ul , 2 ; v0 = ul )  | ( move ul , 2 ; pen 3 - ul ; ( move 4 + 3 , 2 ; pen ul ) )  
[2061] ( move ul , ua ; move ua + 3 , 2 )  | ( move 3 - 2 , ua ; move ua + 3 , 2 )  | ( move ul , ua ; move ua , 2 ; move 3 , ua )  | ( move ul , ua ; move ua + 3 , 2 ; move 0 , 0 )  | ( move ul , ua ; move ua + ul , 2 ; move 2 , ua )  | ( move ul , ua ; move ua , ul + ul ; move 3 , 0 )  | ( move ul , ua ; move ua , 2 ; move ua / 2 , ua )  | ( move ul , ua ; ( move 3 , 2 - ua ; move ua , 0 ) )  
[2062] ( move 2 , 2 ; move ua , ua * ua )  
[2063] ( move 0 - ua , ul ; move 3 , ul )  | ( ( pen ua ; move 0 - ua , ul ; move 3 , ul ) ; pen 0 )  
[2064] ( move ul , 0 ; move ua , 2 / ua )  | ( move ul , ua ; move ua , 2 / ua )  | ( move ul , ua ; move ua , ul / 3 )  | ( move ul , ua ; pen 2 ; move ua , 2 / ua )  | ( move 4 - 3 , 0 ; move ua , ul / 3 ; v0 = ul )  
[2065] ( move ua - 4 , 0 ; move ua , ul )  | ( move ua - 4 , ua ; move ua , ul )  | ( move ua - 4 , ua + ua ; move ua , ul )  | ( move ua - 4 , ua ; ( move ua , ul ; pen ul ) )  | ( move ua - 4 , 0 ; move ua , ul - ua ; v0 = 0 - 3 )  
[2066] ( move ua + 2 , ul ; move 2 , ul )  | ( move ua + 2 , ul - ua ; move 2 , ul )  | ( move ua + 2 , 2 - ul ; move 2 , ul ; pen ua )  | ( v0 = 2 ; move ua + v0 , ul ; move v0 , ul )  | ( move 2 , 2 - ul ; ( move ua , ua ; move 2 , ul ) )  
[2067] ( move ua , 2 ; move ua , ua - 3 )  | ( move ua , 2 ; move ua , ul - 4 )  
[2068] ( move ul , ul ; move 3 - ua , 0 )  | ( move ul , ul ; move 3 - ua , ua )  | ( move ul , ul - ua ; move 3 - ua , 0 )  | ( move ul , ua + ul ; move 3 - ua , ua )  | ( ( move ul , ul ; move 3 - ua , ua ) ; pen ul )  | ( move ul , ul ; pen 2 ; ( move 3 - ua , ua ; pen 3 ) )  | ( move ua / 4 , ul ; ( move 2 , ua ; move ul , ua / 2 ) )  
[2069] ( move ua , 4 ; move 0 - ua , ul )  
[2070] ( move ul , 0 ; move ua , ua - 4 )  | ( move ul , ua ; move ua , ua - 4 )  | ( pen 4 ; move ul , ua ; move ua , 0 - 4 )  | ( move ul , ua ; pen ua ; move ua , ua - 4 )  | ( move ul , ua ; move 3 , 0 - 4 ; move 3 , 0 )  | ( move ul , ua ; ( move 0 , ua - 4 ; pen ua ) ; move ua , 0 )  
[2071] ( move ul , 0 ; move ua + 4 , ul )  | ( move ul , ua ; move ua + 4 , ul )  | ( move ul , 0 ; move ua + 4 , ua + ul )  | ( move ul , ua ; move ua + 4 , ua + ul )  | ( move ul , 0 ; move ua , ul ; move 4 , 0 )  | ( move ul , 0 ; pen 4 ; move ua + 4 , ul )  | ( move ul , 0 ; pen ua ; move ua + 4 , ul )  | ( move ul , 0 ; move ua , ul ; move 2 * 2 , ua )  | ( move ul , 0 ; move ua + 4 , ul ; v0 = ul )  | ( move ul , 0 ; move ua - ul , ul ; move 3 + 2 , ua )  | ( ( move ul , 0 ; v0 = ua + 3 ) ; move v0 + ul , ul )  | ( move 0 , 0 ; ( move ul , 0 ; pen ua ; move ua + 4 , ul ) )  | ( move 2 - ul , ua ; ( v0 = ua + 4 ; move v0 , ul ) )  | ( ( pen ua + 2 ; move ul , ua ; pen 2 ) ; move ua + 4 , ul )  
[2072] ( move ua - 3 , 0 ; move ul , ul )  | ( move ua - 3 , ua ; move ul , ul )  | ( move ua - 3 , ua ; move ul , ul ; pen 0 )  | ( move ua - 3 , ua ; v0 = ul ; move v0 , v0 )  | ( move ua - 3 , ua ; v0 = ua + ul ; move ul , ul )  | ( move 4 - ul , ua * 2 ; move 3 / ua , 0 ; move ul , ul )  
[2073] ( move ua , 3 ; move ua + ul , 2 )  | ( move ua , ua + 3 ; move ua + ul , 2 )  | ( move ua , 3 ; move ua + ul , 2 - ua )  | ( move ua , 3 ; move ua + ul , 2 ; pen 0 )  | ( move ua , ua + 3 ; move ul , 2 ; move ua , 0 )  | ( move ua , 3 ; move ul , 2 ; move ua , ua * 2 )  | ( move ua , 3 ; move 0 , ul + ul ; move ua + ul , ua )  | ( move ua , 3 ; ( move ul , 2 ; move ua , 0 ; pen 4 ) )  | ( move ua , 3 ; ( move ua , 2 ; pen ua + ua ; move ul , ua ) )  
[2074] ( move 3 - ua , ua ; move ua , 2 )  | ( move 3 - ua , ua ; move ua , 2 ; pen ua )  | ( move 3 - ua , 0 ; move ua , 2 ; move 0 , 0 )  | ( move 3 - ua , ua * 3 ; move ua , ul + ul ; pen ul )  
[2075] ( move ua , 3 + 2 ; move ua , ul )  | ( move ua , 4 + ul ; move ua , ul )  | ( move ua , 4 + ul ; pen 4 ; move ua , ul )  | ( pen 4 ; move ua , 4 + ul ; move ua , ul )  | ( move ua , 4 + ul ; move ua , ul ; v0 = 3 )  | ( pen ua * 4 ; move ua , 4 + ul ; move ua , ul )  | ( move ua , 4 + ul ; v0 = ul ; move ua , v0 )  | ( move ua , 4 + ul ; v0 = ua - ul ; move ua , ul )  
[2076] ( move ua , 0 - ul ; move ua , 4 )  | ( move ua , ua - ul ; move ua , 4 )  | ( move ua , ua - ul ; pen 4 ; move ua , 4 )  | ( move ua , 3 - 4 ; move ua , 4 ; move 0 , ua )  | ( v0 = ul ; move ua , ua - ul ; move ua , 4 )  
[2077] ( move ua - ul , 0 ; move 3 , ul )  | ( move ua - ul , ua ; move 3 , ul )  | ( move ua - ul , 0 ; move 4 - ul , ul )  | ( move ua - ul , ua * 4 ; move 3 , ul ; pen ul )  | ( v0 = ua - ul ; move v0 , ua ; move 3 , ul )  | ( move ua - ul , 0 ; ( v0 = 0 ; move 3 , ul ) )  | ( move ua - ul , 0 ; move 4 - ul , ul ; v0 = ul )  | ( pen ul ; ( move ua - ul , ua ; move 3 , ul ) ; pen 2 )  | ( ( move ua - ul , 0 ; move 2 + ul , ul - ua ) ; pen 2 )  | ( ( move 0 , 0 ; move ua - ul , 0 ; move 3 , ul ) ; pen ul )  
[2078] ( move 3 , 0 - ul ; move ua , ul )  | ( move 3 , ua - ul ; move ua , ul )  | ( move 4 - ul , 2 - 3 ; move ua , ul )  | ( move 3 , ua - ul ; move ua , 2 - ul )  | ( move 4 - ul , ul - 2 ; move ua , ul )  | ( move 2 + ul , ua - ul ; move ua , ul )  | ( move 3 , ua - ul ; pen ua ; move ua , ul )  | ( move 3 , 0 - ul ; move ua , ul ; v0 = 0 )  | ( ( move 3 , 0 - ul ; pen 2 ) ; move ua , ul )  | ( move 2 , 0 - ul ; move ul , 0 ; move ua , ul )  | ( move 3 , ua - ul ; move ua , ul ; v0 = ul )  | ( move 3 , 2 - 3 ; v0 = ul ; move ua , v0 )  | ( move 2 , ul - 2 ; move 2 - ul , ua ; move ua , ul )  | ( ( move 3 , ua - ul ; move ua , ul ) ; v0 = ua )  | ( move ul , ua - ul ; move 2 , ua * 2 ; move ua , ul )  | ( move ul , ua - ul ; move ul + ul , ua ; move ua , ul )  | ( pen 2 ; ( move 3 , 0 - ul ; move ua , ul ; move 0 , 0 ) )  
[2079] ( move ua , ul ; move 0 - 3 , ul )  | ( move ua , ul ; move 3 - ua , ul )  | ( move ua , ul ; pen ua ; move ul - 4 , ul )  | ( move ua , ul ; pen ul ; move ul - 4 , ul )  | ( move ua , ul ; move 0 - 3 , ul ; v0 = ul )  | ( move ua , ul ; v0 = ul - 4 ; move v0 , ul )  
[2080] ( move 3 , 0 ; move ul - ua , ul )  | ( move 3 , ua ; move ul - ua , ul )  | ( move 2 + ul , 0 ; move ul - ua , ul )  | ( move 3 , ua ; v0 = ul - ua ; move v0 , v0 )  | ( move 2 + ul , ua ; v0 = ul - ua ; move v0 , v0 )  
[2081] ( move ua , 0 ; move ul , 2 / ua )  | ( move ua , 0 ; move ul , ul / 4 )  | ( move ua , ua ; move ul , ul / 4 )  | ( move ua , ua ; move ul , ul / ua )  | ( move ua + ul , 0 ; move ul / ua , ul )  | ( move ua + ul , ua ; move ul / 3 , ul )  | ( move ua , ua ; pen ua ; move ul , ul / 3 )  | ( move ua + ul , ua * 4 ; move ul / 4 , ul )  | ( move ua , ua * 2 ; move 0 , 4 / 3 ; move ul , ua - ul )  
[2082] ( move 0 - ua , 4 ; move ua , ul )  | ( move 0 - ua , 4 ; move ua , ua + ul )  
[2083] ( move ua - 2 , 2 ; move ua , ul )  
[2084] ( move ua , 0 ; move ua , ua / 3 )  | ( move ua , 0 ; move ua , ua / 3 ; v0 = ua - 3 )  | ( v0 = ua ; move v0 , ua ; move v0 , v0 / 3 )  | ( v0 = ua ; move v0 , v0 ; move v0 , v0 / 3 )  
[2085] ( move ul , 2 ; move ua + 2 , ul )  | ( move ul , ul + ul ; move ua + 2 , ul )  | ( move ul , 2 ; move ua , ul ; move 2 , 0 )  | ( move ul , 2 ; move ua + 2 , ul ; pen ul )  | ( move ul , 2 ; move ua + 2 , ul ; pen ul - 3 )  | ( move ul , ul + ul ; move 4 + ul , ul ; move ua - 3 , 0 )  
[2086] ( move 4 , 0 ; move ua + ul , ul )  | ( move 4 , ua ; move ua + ul , ul )  | ( move 4 , 0 ; move ua + ul , ua + ul )  | ( move 3 + ul , ua ; move ua + ul , ul )  | ( move 4 , 0 ; pen ul ; move ua + ul , ul )  | ( move 4 , 0 ; move ua + ul , ul ; pen ul )  | ( move 4 , 0 ; move ul , 2 - ul ; move ua , 0 )  | ( move 4 , 0 ; move ua , ul ; move 3 - 2 , ua )  | ( move 3 + ul , 0 ; move ua , ul ; move ul , 0 )  | ( move 4 , ua ; move ua - ul , ul ; move 2 , 0 )  | ( ( pen 3 ; move 4 , ua ) ; move ua + ul , ul )  | ( move 4 , 0 ; pen ul + ul ; move ua + ul , ul )  | ( move 2 , ua ; move 4 / 2 , 0 ; move ua + ul , ul )  | ( move 4 , ua ; move ua + ul , ul ; v0 = 4 + 3 )  | ( ( move 4 , ua ; move ua + ul , ul ) ; move 0 , ul )  | ( move 3 , ua * 2 ; move ul , ua ; move ua + ul , ul )  | ( move 4 , ua * 4 ; move ua , ua + ul ; move ul , ua )  | ( ( move 3 + ul , ua ; move ua , ul ) ; move ul , ua )  | ( move 4 , ua * 4 ; v0 = ua + ul ; move v0 , v0 )  | ( move 2 * 2 , ua ; move ua + ul , ua + ul ; move 0 , ua )  | ( move 4 , ua ; move ua + ul , ua + ul ; v0 = ua + ul )  
[2087] ( move ua , 0 ; move 4 , ua * ua )  | ( move ua , ua ; move 2 + 2 , ua * ua )  | ( move 4 + 2 , ua ; move 4 , 4 * 2 ; move 0 , ul )  | ( move ua , ua ; pen ua / 2 ; move 3 + ul , ua * ua )  | ( v0 = ua ; ( move v0 , ua ; move 4 , v0 * v0 ) )  
[2088] ( move ul , 0 ; move 3 , ua * ua )  | ( move ul , ua ; move 3 , ua * ua )  | ( move ul , 0 ; move 4 - ul , ua * ua )  | ( move ul , 0 ; move 3 , ua * ua ; pen ua )  | ( move ul , 0 ; move ul , ua * ua ; move 2 , ua )  | ( move ul , ua ; ( move 3 , ua * ua ; pen ua ) )  | ( move ul , 0 - ua ; move 3 , ua * ua ; v0 = ua )  | ( pen 3 / 2 ; move ul , ua ; move 2 + ul , ua * ua )  
[2089] ( move ua , 2 ; move 2 , ua - ul )  | ( move ua , 2 ; move 2 , 0 - ul ; pen ul )  | ( pen ul / 4 ; move ua , 2 ; move 2 , ul - 2 )  
[2090] ( move ua , ua - 2 ; move ua , 4 )  | ( move ua , ul - 3 ; move ua , 4 )  | ( move 0 , ul - 3 ; move ua , ua ; move ua , 4 )  | ( move ua , ul - 3 ; ( pen ua ; move ua , 4 ; v0 = 3 ) )  
[2091] ( move ua + 3 , ul ; move ua , 3 )  | ( move ua + 3 , ul ; move ua , 2 + ul )  | ( move 2 , ul ; move ua + ul , 0 ; move ua , 3 )  | ( move 3 , ul ; move ua , ua ; move ua , 3 - ua )  | ( move ua + 3 , ul ; move ua , 3 ; v0 = 0 - ua )  | ( move ua + 3 , ul ; move ua , 2 + ul ; v0 = ul )  
[2092] ( move 3 , ul ; move ua , ua - 2 )  | ( move 3 , ul ; move ua , 2 - 4 ; pen 3 )  | ( move 0 , ua ; move 3 , ul ; move ua , ua - 2 )  | ( pen 0 ; ( pen ul ; move 3 , ul ; move ua , ul - 3 ) )  | ( move 4 - ul , ua + ul ; move ua , ul - 3 ; move 0 , ul )  
[2093] ( move 4 , ul ; move ua , 0 - ul )  | ( move 4 , ua + ul ; move ua , ua - ul )  | ( move 4 , ul ; pen ul ; move ua , 0 - ul )  | ( move ul , ul / ua ; move ua , ua + 3 ; move 4 , ul )  
[2094] ( move ul , 3 ; move ua , ua - 2 )  | ( move 3 / 2 , 4 - ul ; move ua , ul - 3 )  
[2095] ( move 2 , ul - 2 ; move ua , ul )  | ( move 2 , ua - ul ; move ua , ul )  | ( move ul + ul , ul - 2 ; move ua , ul )  | ( pen 4 ; move 2 , 2 - 3 ; move ua , ul )  | ( move 2 , 2 - 3 ; move ua , ul ; pen ua )  | ( move 2 , ua - ul ; move ua , ul ; pen ul )  | ( move 2 , 0 - ul ; move ua , ul ; v0 = ua )  | ( move 2 , ua - ul ; move ua , ul ; v0 = 4 )  | ( pen ua + 3 ; move 2 , ul - 2 ; move ua , ul )  | ( ( move ul + ul , ua - ul ; move 0 , ua ) ; move ua , ul )  
[2096] ( move ul , 3 + 2 ; move ua , ul )  | ( move ul , 4 + ul ; move ua , ul )  | ( move ul , 3 + 2 ; move ua , ua + ul )  | ( move ul , 4 + ul ; move ua , ua + ul )  | ( move ul , 4 + ul ; move ua , ul ; pen ua )  | ( move ul , 3 + 2 ; move ua , ul ; v0 = ua )  | ( move ul , 4 + ul ; move ua , ul ; v0 = 4 )  | ( move ul , 3 + 2 ; move ua , ua + ul ; pen 4 )  | ( v0 = 4 ; move ul , v0 + ul ; move ua , ul )  | ( move ul , 4 + ul ; move ua , ul ; v0 = 3 - ul )  | ( move ul , 4 + ul ; v0 = ua ; move v0 , ul - v0 )  | ( ( move ul , 4 + ul ; pen ul ) ; move ua , ul ; v0 = ul )  
[2097] ( move 3 , 2 ; move ua + ul , ul )  | ( move 3 , 2 ; move ua , ul ; move ul , ua )  | ( move 3 , 2 ; move ul , ul ; move ua , ua )  | ( move 3 , ua + 2 ; move ua + ul , ul ; v0 = 4 )  
[2098] ( move ua , 3 + 2 ; move ul , ul )  | ( move ua , 4 + ul ; move ul , ul )  | ( move ua , 3 + 2 ; move ul , ua + ul )  | ( move ua , 4 + ul ; move 2 - ul , ul )  | ( move 0 , 4 ; move ua , ul ; move ul , ul )  | ( pen 4 ; move ua , 4 + ul ; move ul , ul )  | ( pen ua ; move ua , 4 + ul ; move ul , ul )  | ( move ua , 4 + ul ; move ul , ul ; pen ul )  | ( ( move 0 , ul ; move ua , 4 ) ; move ul , ul )  | ( move ua , 4 + ul ; ( move ul , ul ; pen 0 ) )  | ( pen ua + ua ; move ua , 4 + ul ; move ul , ul )  | ( move 0 , ua + 4 ; ( move ua , ul ; move ul , ul ) )  | ( ( move ua , 4 + ul ; move ul , ul ) ; move 0 , ul )  | ( pen ua + ul ; ( move ua , 4 + ul ; move ul , ul ) )  | ( move ua , 4 + ul ; v0 = ua ; move ul , v0 / ua )  | ( move ua , 4 + ul ; ( move ul , ul ; pen ua ) ; pen ul )  
[2099] ( move 0 , ua * ua ; move 4 , ul )  | ( move 0 , ul ; move 4 , ua * ua )  | ( move 0 , 2 / 3 ; move 4 , ua - ul )  | ( move 0 , ul ; pen 2 ; move 4 , ua * ua )  | ( v0 = ul - ua ; move 4 , v0 * v0 )  | ( move 0 , ul ; move 4 , ua * ua ; pen ul / 2 )  | ( v0 = 4 ; v1 = ul - v0 ; move v0 , ul / v1 )  
[2100] ( move ul , 0 ; move 4 , ua * ua )  | ( move ul , ua ; move 4 , ua * ua )  | ( move ul , 0 ; pen 2 ; move 4 , ua * ua )  | ( move ul , ua ; pen ua ; move 4 , ua * ua )  | ( move ul , ua ; move 4 , ua * ua ; v0 = ul )  | ( move ul , ua ; move 4 , ua * ua ; v0 = ul - ua )  
[2101] ( move ua , ua - 4 ; move ua , 2 )  
[2102] ( move ua , ul ; move 2 - ua , 3 )  | ( ( move ua , ul ; pen ua ) ; move 2 - ua , 3 )  | ( move ua , ua + ul ; move 2 - ua , ua + 3 ; move 0 , 4 )  
[2103] ( move ua , ua - 3 ; move 2 , ul )  | ( move ua , ul - 4 ; move 2 , ul )  
[2104] ( move ua , ua - 2 ; move 3 , ul )  | ( move ua , ua - 2 ; move 3 , ul ; move 0 , ua )  
[2105] ( move 2 - ua , ua ; move 3 , ul )  | ( v0 = 3 ; move 2 - ua , 0 ; move v0 , ul )  
[2106] ( move ul , ul ; move 0 - ua , 4 )  | ( move ua , 4 + ul ; move ul , ua - ul )  | ( move 0 , 4 ; move ua , ul ; move ul , ua - ul )  
[2107] ( move ul / 2 , 0 ; move ua , ul )  | ( move ul / 2 , ua ; move ua , ul )  | ( move ul / 2 , ua ; pen 3 ; move ua , ul )  | ( pen 4 ; move ul / 2 , ua ; move ua , ul )  | ( move 0 , 0 ; move 3 / ua , ua * 2 ; move ua , ul )  | ( v0 = ua ; ( move 3 / ua , v0 ; move v0 , ul ) )  | ( v0 = ua ; move 3 / ua , v0 ; move v0 , v0 + ul )  
[2108] ( move 2 - ua , 3 ; move ua , ul )  | ( move 2 - ua , 3 ; ( move ua , ul ; pen ul ) )  
[2109] ( move ua , 4 ; move ua + ul , 2 )  | ( move ua , 4 ; pen 3 ; move ua + ul , 2 )  | ( move ua , 3 + ul ; move ul , 2 ; move ua , 0 )  | ( move ua , 4 ; move ua , ul + ul ; move ul , ua )  
[2110] ( move 0 , 3 ; move ua , ul / ua )  | ( move 0 , ul / ua ; move ua , 3 )  | ( v0 = ul / ua ; move ua , v0 * v0 )  | ( move 0 , 3 ; move 0 , ua * 2 ; move ua , ul / ua )  | ( ( move 0 , 3 ; move ua , ul / ua ) ; move 0 , ua )  | ( ( pen ul ; move 0 , 4 - ul ) ; move ua , ul / ua )  
[2111] ( move 3 , ua - 2 ; move ua , ul )  | ( move 4 - ul , ul - 3 ; move ua , ul - ua )  | ( move 0 , ua ; move 3 , ua - 2 ; move ua , ul )  | ( move 3 , 2 - 4 ; move ua , ul - ua ; pen ua )  | ( move 3 , ul - 3 ; ( pen ua ; pen 4 / 3 ) ; move ua , ul )  
[2112] ( move 2 , ul ; move ul - ua , 2 )  | ( move 2 , ul ; move ul - ua , ua + 2 )  | ( move 0 , ul ; move 2 , ua ; move ul - ua , 2 )  | ( move 2 , ul ; ( v0 = ul ; move v0 - ua , 2 ) )  | ( move 2 , ul ; v0 = ul ; move v0 - ua , v0 + ul )  
[2113] ( move ua + ul , 4 ; move ua , 2 )  | ( move ua + ul , 4 ; move ua , 4 - 2 )  | ( move ua + ul , ua + 4 ; move ua , 2 )  | ( move ua + ul , 4 ; move ua , 2 - ua )  
[2114] ( move ua + ul , ul ; move 2 , 3 )  | ( move ua + ul , ua + ul ; move 2 , 2 + ul )  | ( move ua + ul , ul ; move 3 , 3 ; pen ua * 4 )  | ( move ua + ul , ul ; ( move 2 , 3 ; pen ul ) )  | ( v0 = ul ; move ua + ul , v0 ; move 2 , 3 )  | ( move 4 + ul , ul ; ( move 2 , ua ; move 2 + ul , 3 ) )  
[2115] ( move 3 - ua , 2 ; move ua , ul )  
[2116] ( move 2 , ua ; move ua , ua - 4 )  | ( move 4 - 2 , 0 ; move ua , ua - 4 )  | ( move ul + ul , ua + ua ; move ua , 0 - 4 )  | ( move ul + ul , 0 ; pen ul ; move ua , ua - 4 )  
[2117] ( move ul - ua , 0 ; move ul , 4 )  | ( move ul - ua , ua ; move ul , 4 )  | ( move ul - ua , ua ; move ul , ua + 4 )  | ( move ul - ua , ua ; move ul , ul - 3 )  | ( pen 3 ; move ul , ul ; move 4 + ul , ua - ul )  | ( ( move ul - ua , ua ; move ul , 4 ) ; pen ul )  | ( move ul - ua , ua ; v0 = ul ; move v0 , 4 )  | ( move ul - ua , ua ; v0 = 3 - ua ; move ul , 4 )  | ( pen ua * 3 ; move ul - ua , ua ; move ul , 3 + ul )  | ( pen ua * 3 ; ( move ul - ua , 0 ; move ul , 4 - ua ) )  
[2118] ( move ul , 3 ; move ua + ul , 2 )  | ( move ul , 3 ; move ua + ul , 3 - ul )  | ( move ul , 4 - ul ; move ua + ul , 2 )  | ( move ul , 3 ; move ul , 2 ; move ua , 0 )  | ( move ul , 2 + ul ; move ua + ul , 3 - ul )  | ( move ul , 3 ; move ua + ul , 2 ; v0 = ul )  | ( move ul , 3 ; move 0 , ul ; move ua + ul , ul )  | ( move ul , 3 ; move ua , ua + 2 ; move ul , ua )  | ( ( move ul , 3 ; move ua + ul , 2 ) ; v0 = 2 )  | ( move ul , 3 ; move 0 , 0 ; move ua + ul , ua + 2 )  
[2119] ( move ua , ua ; move ua , 2 - 4 )  | ( move ua , ua ; move ua , ua - 2 )  | ( move ua , ua ; move ua , ul - 3 )  | ( move ua , ua ; move 0 , 0 ; move ua , ua - 2 )  | ( move ua , 0 ; pen ua - 3 ; move ua , ua - 2 )  | ( move ua , ua ; move ua , ua - 2 ; v0 = 4 / 2 )  | ( move ua , ua * 4 ; move ua , ua - 2 ; v0 = ul )  | ( v0 = ua ; move v0 , ua ; move v0 , v0 - 2 )  
[2120] ( move 2 , 3 ; move ua + ul , ul )  | ( move 2 , 3 ; move ua + ul , 4 - 3 )  | ( move 2 , 3 ; move ua , ul ; move ul , ua )  | ( move 2 , 3 ; move ua + ul , ul ; move ul , 3 )  | ( pen ul ; move 2 , 4 - ul ; move ua + ul , ul )  
[2121] ( move ua , 2 ; move ua , ul - 3 )  | ( move ua , ua / 2 ; move ua , 2 )  | ( move ua , 2 ; pen ul ; move ua , ul - 3 )  
[2122] ( move ul , ul ; move ua - 2 , 2 )  | ( move ul , ul ; move 0 , ul ; move ua - 2 , ul )  | ( move ul , ul ; move ul , ul + ul ; move ua - 3 , 0 )  
[2123] ( move ua , 0 - ul ; move ul , 4 )  | ( move ua , ul - 2 ; move ul , 4 )  | ( move ua , ua - ul ; move ul , 4 )  | ( move ua , 0 - ul ; move ul , 4 - ua )  | ( move ua , ul - 2 ; move ul , 4 ; pen 3 )  | ( move ua , 0 - ul ; move ul , 4 ; move 0 , ua )  | ( move 0 , ua ; move ua , 0 - ul ; move ul , 4 )  | ( move ua , ua - ul ; move ul , 4 - ua ; pen ua + ul )  | ( move ua , ua - ul ; move ul , ua + 4 ; v0 = 3 - 4 )  
[2124] ( move 2 , 2 ; move ua - ul , ul )  
[2125] ( move ua + ul , 2 ; move 3 , ul )  | ( move ua + ul , ua + 2 ; move 3 , ul )  | ( move ua + ul , 2 ; move 3 , ua + ul )  | ( move ua , 2 ; move ul , ua ; move 3 , ul )  | ( move ul , 2 ; move ua , 0 ; move 4 - ul , ul )  | ( move ul , ul + ul ; move ua , ua ; move 3 , ul )  | ( move ua + ul , 2 ; move 2 , ul ; move ul , ul / 3 )  | ( move ua + ul , 2 ; v0 = ua ; move 3 , ul - v0 )  
[2126] ( move 2 , ul ; move 2 - ua , ul )  | ( move 2 , ul ; move 3 - ua , ul ; move ul - 2 , ua )  
[2127] ( move 3 + 2 , ua ; move ul , ul )  | ( move 4 + ul , 0 ; move ul , ul )  | ( move 4 + ul , ua ; move ul , ul )  | ( move 3 + 2 , 0 ; move ul , ua + ul )  | ( move 4 + ul , 0 ; move ul , ul - ua )  | ( move 3 + 2 , ua ; move ul , ul - ua )  | ( move 4 + ul , ua ; move ul , ua + ul )  | ( move 4 , 0 ; move ul , 0 ; move ul , ul )  | ( move 4 + ul , 0 ; move ul , ul ; pen 4 )  | ( move 4 + ul , ua ; move ul , ul ; pen 2 )  | ( move 4 + ul , 0 ; move ul , ul ; v0 = 0 )  | ( move 2 , ua ; ( move 3 , 0 ; move ul , ul ) )  | ( move 3 + 2 , ua ; move ul , 2 - ul ; pen ua )  | ( move 3 , 0 ; move ul + ul , ua ; move ul , ul )  | ( pen 3 ; move 4 + ul , ua ; move ul , ul - ua )  | ( move 4 + ul , ua ; ( move ul , ul ; pen ul ) )  | ( move 4 + ul , ua ; v0 = ul ; move v0 , ul )  | ( move 4 + ul , 0 ; ( move ul , ul ; move 0 , 4 ) )  | ( move 4 + ul , ua ; v0 = 2 ; move 2 / v0 , ul )  | ( ( move 4 + ul , 0 ; move ul , ul ; pen ua ) ; pen 4 )  | ( ( move 3 + 2 , ua ; v0 = ul ) ; move v0 , v0 )  | ( ( move 4 , ua ; move ul , 0 ; move ul , ul ) ; pen ua )  | ( ( pen ua ; pen ul ; move 3 + 2 , ua ) ; move ul , ul )  
[2128] ( move 2 , ua ; move 3 , ua * ua )  | ( move 2 , ua + ua ; move 3 , ua * ua )  | ( move ul + ul , ua ; move 2 + ul , ua * ua )  | ( move 2 , ua ; move 4 - ul , ua * ua ; v0 = 4 )  | ( ( move ul + ul , ua ; move 3 , ua * ua ; pen ul ) ; pen 3 )  
[2129] ( move ul , ul ; move 2 - ua , 2 )  | ( move ul , 4 - 3 ; move 2 - ua , ul + ul )  | ( ( move ul , ul ; pen 4 ) ; move 2 - ua , 2 )  
[2130] ( move 2 , ua ; move 3 - ua , ul )  | ( move ul , 0 - ua ; move ul , ua ; move 3 - ua , ul )  
[2131] ( move ua + 3 , 2 ; move ul , ul )  | ( move 3 , 2 ; move ua , ua * 4 ; move ul , ul )  | ( move ua + 3 , 2 ; v0 = ul ; move v0 , v0 )  
[2132] ( move ua + 3 , ul ; move ul , 2 )  | ( move ua + 3 , ua + ul ; move ul , 2 )  | ( move ua + 3 , ul ; move ul , 2 ; move 0 , ua * 2 )  | ( move 3 , ul ; move ua , ua * 4 ; move ul , 3 - ul )  | ( ( pen 4 ; move ua + 3 , ul ; move ul , 2 ) ; pen ul )  
[2133] ( move ua , 0 - ul ; move 4 , ul )  | ( move ua , ul - 2 ; move 4 , ul )  | ( move ua , ua - ul ; move 4 , ul )  | ( move 0 , ul ; move ua , ul - 3 ; move 4 , ua + ul )  | ( move ua , ua - ul ; move 0 , ua + ua ; move 4 , ul )  | ( ( move ua , 3 - 4 ; move 4 , ul ) ; v0 = 4 - 2 )  | ( pen ul ; ( move ua , 0 - ul ; pen ul ; move 4 , ul ) )  | ( ( move ua , 0 - ul ; move 3 + ul , ul ) ; v0 = 0 )  | ( move ua , ua - ul ; pen ua + 2 ; move 3 + ul , ua + ul )  
[2134] ( move ul - ua , 0 ; move 4 , ul )  | ( move ul - ua , ua ; move 4 , ul )  | ( move ul - ua , ua * 3 ; move 4 , ul )  | ( move ul - ua , ua ; move 4 , ua + ul )  | ( move ul - ua , 0 ; pen 4 ; move 4 , ul )  | ( move ul - ua , ua ; move 2 + 2 , ul - ua )  | ( move ul - ua , 0 ; move 2 , ul ; move 2 , ua )  | ( pen ua / 3 ; ( move ul - ua , 0 ; move 4 , ul ) )  | ( ( pen ua ; move ul - ua , 0 ) ; move ul , ul ; move 3 , ua )  
[2135] ( move ua + ul , 3 ; move 2 , ul )  | ( move ua + ul , 3 ; move 4 - ua , 4 )  | ( pen ua ; move ua + ul , 3 ; move 2 , ul )  | ( move ua + ul , 2 + ul ; move 2 , ul ; pen 3 )  | ( move 4 , 3 ; move ua - 3 , 0 ; move ul + ul , ul )  
[2136] ( move 3 , ua ; move ua + ul , 3 )  | ( move 4 , ua ; move ua + ul , 3 )  | ( move 2 + ul , ua ; move ua + ul , 3 )  | ( move 4 , 0 ; move ua + ul , 3 ; pen 0 )  | ( move 4 , 0 ; move ul , 3 ; move ua , ua )  | ( move 3 + ul , 0 - ua ; move ua + ul , 3 )  | ( move 3 , 0 ; move ul , ua ; move ua + ul , 3 )  | ( ( move 4 , ua ; move ua + ul , 3 ) ; pen ua )  | ( move 4 , ua + ua ; move ua , 3 ; move ul , ua )  
[2137] ( move 2 , 2 ; move ul - ua , ul )  | ( move ul + ul , 2 ; move ul - ua , ul )  | ( move 2 , 4 - 2 ; move ul - ua , ul ; v0 = 4 + ul )  
[2138] ( move ua + 2 , ul ; move ua , 4 )  | ( move ua + 2 , ul ; move ua , ua + 4 )  | ( move ua + 2 , ul ; move ua , 4 - ua )  | ( move ua , ul ; move 4 / 2 , 0 ; move ua , 4 )  | ( ( move ua + 2 , ul ; move 0 , ul ) ; move ua , 3 )  | ( move ua + 2 , ua + ul ; move ua , 4 ; pen ua - 3 )  | ( ( move ua + 2 , ul ; move ua , 3 + ul ) ; v0 = 4 )  
[2139] ( move ua , ua ; move ua - 4 , 2 )  | ( move ua , 0 ; move ua - 4 , 3 - ul ; pen ul )  | ( move ua , 0 ; ( move ua - 4 , 2 ; pen ul ) ; pen ua + ul )  
[2140] ( move ua , 0 - 4 ; move ul , ul )  | ( move ua , ua - 4 ; move 2 - ul , ul )  | ( move ul , ul / ua ; move ua , ua - ul )  | ( move ua , ua - 4 ; move ul , ul ; pen ul )  | ( move ua , ua - 4 ; move ul , ul ; move 0 , 3 - 4 )  | ( move ua , 0 - 4 ; ( move ul , ul ; pen ul ; v0 = 0 ) )  | ( move ua , ua - 4 ; ( move ul , ul ; v0 = ul ) ; pen ua )  
[2141] ( move ua - 2 , ua ; move ua , 4 )  | ( move 4 , 0 ; move ua , 4 ; move ul , ua + 4 )  | ( move ua - 2 , 0 ; move ua , 2 + 2 ; v0 = ul - ua )  
[2142] ( move ua , ul ; move ua + 3 , 3 )  | ( move ua , ul ; move ua + 3 , ua + 3 )  | ( move ua , ul ; move 2 + ul , 3 ; move ua , 0 )  | ( move ua , ua + ul ; pen ul ; move ua + 3 , 3 )  
[2143] ( move ua + 2 , 3 ; move ul , ul )  | ( move 4 * 2 , 3 ; pen 3 ; move ul , ul )  | ( move ua , 3 ; move 2 , ua ; move ul , ul )  | ( move ul , 3 ; move ua + ul , ua ; move ul , ul )  | ( move ua + ul , 3 ; move ul , 0 ; move ul , ua + ul )  
[2144] ( move ua - ul , 0 ; move ul , 4 )  | ( move ua - ul , ua ; move ul , 4 )  | ( move 4 + ul , 0 ; move ul , 2 * 2 )  | ( move ua - ul , ua ; move ul , ua + 4 )  | ( move ua - ul , ua ; move ul , 4 ; pen ul )  | ( move ua - ul , ua ; move ul , 4 ; v0 = ul )  | ( move ua - ul , ua ; move ul , 4 ; pen ua / 2 )  
[2145] ( move 0 , ua / 3 ; move ua , ul )  | ( move 0 , ul ; move ua , ua / 3 ; pen 2 )  | ( move ul / ua , ul / 4 ; move ua , 3 * 2 )  | ( move 0 , ul ; v0 = ua ; move v0 , v0 / 3 )  
[2146] ( move ua , 2 ; move ua + ul , 4 )  | ( move ua , 2 - ua ; move ua + ul , 4 )  | ( move ua , ua + 2 ; move ua + ul , 4 - ua )  | ( move 0 , ua ; move ua , 2 ; move ua + ul , 4 )  | ( move ua , 3 - ul ; move ul , 4 ; move ua , ua )  | ( move ua , 3 - ul ; move ua + ul , 4 ; v0 = 4 )  | ( move ua , 2 ; move ua + ul , 4 ; v0 = ua + ul )  | ( move ua , ua + 2 ; move ua , 4 ; move ul , ua * 4 )  | ( pen ul ; ( move ua , 2 ; pen ul ) ; move ua + ul , 4 )  | ( ( move ua , 2 ; pen 3 + ul ; move ul , 4 ) ; move ua , ua )  
[2147] ( move ua - ul , 0 ; move 4 , ul )  | ( move ua - ul , ua ; move 4 , ul )  | ( pen ul ; move ua - ul , 0 ; move 4 , ul )  | ( move ua - ul , 0 ; move ul , ul ; move 3 , 0 )  | ( move ul , ua ; move ua - 2 , 0 ; move 4 , ul )  | ( move ua - ul , 0 ; ( pen ul ; move 4 , ul ) )  | ( move ua - ul , 0 ; move 4 , ul ; v0 = 3 + ul )  | ( pen 2 ; move ua - ul , ua ; move 3 + ul , ua + ul )  | ( ( move ua - ul , 0 ; v0 = 2 ) ; move 2 * v0 , ul )  
[2148] ( move ua , ua ; move ul - 3 , 2 )  | ( move ua , ua ; move ul - 3 , ul + ul )  | ( move ua , ua ; v0 = ua ; move 0 - 2 , 2 )  | ( pen 2 ; move ua , 0 ; ( move 0 - 2 , 2 ; pen ua ) )  
[2149] ( move ua , ul ; move 2 , ul - 2 )  | ( move ua , ul ; move 2 , ua - ul )  | ( move ua , ul ; pen 3 ; move 2 , ua - ul )  | ( move 3 * 2 , ul ; move 2 , ua - ul ; pen 2 )  | ( move ua , ul ; ( move 2 , ua - ul ; pen ua * 3 ) )  | ( move ua , ul ; v0 = 3 - ul ; move ul - 3 , v0 )  | ( pen ul ; ( move ua , ul ; move 2 , ua - ul ; v0 = 0 ) )  
[2150] ( move ua , 0 ; move ua , ua / 4 )  | ( move ua , ua ; move ua , ua / 4 )  | ( move ua , ua + ua ; move ua , ua / 4 )  | ( move ua , 0 ; move ua , ua / 4 ; pen 3 )  | ( ( move ua , 0 - ua ; pen 3 ) ; move ua , ua / 4 )  | ( v0 = ua ; move v0 , v0 ; move v0 , v0 / 4 )  | ( move ua , 0 ; ( move ua , ua / 4 ; pen ul ) ; pen ua * 2 )  
[2151] ( move 2 , ua ; move ua , 4 + ul )  | ( move ul + ul , ua * 4 ; move ua , 4 + ul )  | ( move 2 , ua ; move ua , 4 + ul ; move 0 , ul )  | ( move 2 , ua ; move 0 , ua + 4 ; move ua , ua + ul )  
[2152] ( move ua , 3 ; move ua + ul , 3 )  | ( move ua , 3 ; move ua + ul , 3 ; pen ul )  | ( move ua , 2 + ul ; move ua + ul , 3 ; pen 3 / ua )  | ( move ua , 2 + ul ; pen ul ; move ua + ul , 4 - ul )  
[2153] ( move ua , ua - ul ; move 3 , 2 )  | ( move ua , ua - ul ; pen 4 + ul ; move 2 + ul , ul + ul )  
[2154] ( move 0 - ul , ul ; move 3 , ul )  | ( move ul - 2 , ul ; move 3 , ul )  | ( move 0 - ul , ul ; move 3 , 2 - ul )  | ( move 2 - 3 , ul - ua ; move 3 , ul )  | ( move ul - 2 , ul ; move 2 + ul , ul )  | ( move 0 - ul , ul ; pen 2 ; move 3 , ul )  | ( move 2 - 3 , ul ; v0 = ul ; move 3 , v0 )  | ( move ul - 2 , 4 - 3 ; move 2 + ul , ul ; pen 3 )  | ( ( move ul - 2 , ul ; move 3 , ul ) ; v0 = ul - ua )  
[2155] ( move ua + ul , ul ; move 3 , 2 )  | ( move ua + ul , ul ; move 2 + ul , 2 )  | ( move ua + ul , ul ; move 3 , 3 - ul )  | ( move ua + ul , ul ; move 3 , 2 ; pen 4 )  | ( move ua + ul , 2 - ul ; move 3 , ul + ul )  | ( v0 = ul ; move v0 + ua , v0 ; move 3 , 2 )  | ( move ua , ul ; move ul , 0 ; move ua / 2 , 2 - ua )  
[2156] ( move ua , 2 ; move ua - 3 , ul )  | ( move ua , 2 ; move ua / 2 , ul )  | ( move ua , 2 ; move ua / 2 , ul ; v0 = ul )  | ( move ua , 2 ; move 3 , ua + ul ; move ul / ua , 0 )  
[2157] ( move 3 - ua , ua ; move ul , 2 )  | ( move 3 - ua , ua ; move ul , 2 ; pen ul )  | ( move 3 - ua , ua * 4 ; move 0 , ua ; move ul , ul + ul )  
[2158] ( move 2 , ua * ua ; move ua , 3 )  | ( move 2 , ua * ua ; move ua , ua + 3 ; pen ul )  | ( pen 2 ; ( pen 2 ; move 2 , ua * ua ) ; move ua , 3 )  
[2159] ( move 0 - ul , 4 ; move ua , ul )  | ( move ul - 2 , 4 ; move ua , ul )  | ( move 3 - 4 , 4 ; move ua , 2 - ul )  | ( move 2 - 3 , 4 ; move ua , ua + ul )  | ( move 0 - ul , 4 ; v0 = ua ; move v0 , ul )  
[2160] ( move ua , 3 ; move 2 , ua * ua )  | ( move ua , 3 ; ( move 0 , ua ; move 2 , 4 + 4 ) )  
[2161] ( move 2 , ul ; move ua + ul , 3 )  | ( move 3 , ul ; move ua + ul , 3 )  | ( move 2 , ul - ua ; move ua + ul , 3 )  | ( move 2 , ul ; move ul , 3 ; move ua , ua )  | ( move 2 , ul ; move ua , 3 ; move 2 - ul , 0 )  | ( move 3 , ul ; move ua + ul , 3 ; move 0 , ua + ul )  
[2162] ( move ua , 0 ; move ul , ul / 2 )  | ( move ua , ua ; move ul , 2 / 4 )  | ( move ua , ua ; move ul , ul / 2 )  | ( pen ua ; move ua , ua ; move ul , ul / 2 )  | ( move ua , 0 ; move ul , 2 / 4 ; v0 = ua )  | ( move ua , ua ; move ul , ul / 3 ; move 0 , 0 )  | ( pen ua - 2 ; move ua , 0 ; move ul , ul / 2 )  | ( pen 2 - ul ; move ua , ua ; move ul , ul / 2 )  | ( move ua , ua ; move ul , ul / 2 ; pen ua * ua )  | ( v0 = ua ; move v0 , v0 ; move ul , 3 / v0 )  | ( v0 = ul ; move v0 * ua , 0 ; move v0 , 2 / 4 )  
[2163] ( move 2 , ul ; move ua - 2 , ul )  | ( move 2 , ul ; move ua - 2 , ul - ua )  | ( move 2 , ul ; move ua - 2 , ul ; v0 = ul )  | ( move 2 , ua + ul ; move ua - 2 , ul ; pen 0 )  
[2164] ( move 3 , ua ; move ua - ul , 2 )  | ( move 3 , ua * 4 ; move ua - ul , 2 )  | ( move 3 , ua ; move ua - ul , 3 - ul )  | ( move 3 , 0 ; move ua - ul , 2 ; v0 = ul )  | ( ( pen 2 ; move 3 , 0 ; pen ul ) ; move ua - ul , 2 )  
[2165] ( move ua , 3 ; move ul - ua , 2 )  | ( move ua , 3 ; move ul - ua , ul + ul )  
[2166] ( move 3 , ul ; move 0 - ul , ul )  | ( move 3 , ul ; move ul , ul - 3 )  | ( move 2 + ul , ul ; move 0 - ul , ul )  | ( move 3 , ul ; move 0 - ul , ul ; pen ua )  | ( move ul , ul + ul ; move ul - 4 , 0 - ul )  | ( pen 2 ; move 3 , ul ; move 0 - ul , ul - ua )  | ( pen ua * ua ; move 3 , ul ; move ul , ua - 2 )  | ( v0 = 0 - ul ; move 3 , ul ; move v0 , v0 * v0 )  
[2167] ( move ua + ul , 3 ; move ul , 2 )  | ( move ua + ul , 3 ; move ul , ul + ul )  | ( pen ul ; move ua + ul , ua + 3 ; move ul , 2 )  | ( ( move ua + ul , 3 ; move ul , ua + 2 ) ; pen ul / 3 )  | ( move ua , 2 + ul ; move ul , ua ; ( pen ul ; move ul , 2 ) )  
[2168] ( move 3 , ua ; move ua + 3 , ul )  | ( move 3 , ua ; move ua + 3 , ua + ul )  | ( move 3 , 0 ; move 3 , ul ; move ua , ua )  | ( move 3 , ua ; pen ul ; move ua + 3 , ul )  | ( move 3 , ua ; move 4 - ul , ul ; move ua , ua )  | ( move 3 , 0 ; move 3 , ul ; ( move ua , ua ; move 0 , 0 ) )  | ( ( move 3 , ua ; move ua + ul , ul ) ; pen 4 ; move 2 , ua )  | ( pen ua ; move 3 , ua ; ( move 4 - ul , ul ; move ua , ua ) )  
[2169] ( move ua , 4 ; move 0 - ul , ul )  | ( move ua , 3 + ul ; move 0 - ul , ul )  | ( move ua , 4 ; move ul - 2 , ua + ul )  | ( move ua , ua + 4 ; move ul , ul - 3 )  | ( move ul , 0 ; move ua , 4 ; move ul , ua - 2 )  
[2170] ( move 2 , ul ; move 3 - ua , ul )  
[2171] ( move ul - ua , 2 ; move 3 , ul )  
[2172] ( move ul , ua - 3 ; move ua , 3 )  | ( move ul , ul - 4 ; move ua , 2 + ul )  | ( move ul , ua - 3 ; move ua , 3 ; v0 = ul )  | ( ( move ul , ul - 4 ; move ua , 3 ) ; pen ua - 4 )  
[2173] ( move ua , 0 ; move ul , ua / 4 )  | ( move ua , ua ; move ul , 3 / 2 )  | ( move ua , ua * 3 ; move ul , 3 / 2 )  | ( ( pen 2 ; move ua , 0 ) ; move ul , 3 / 2 )  
[2174] ( move ua , 4 ; move ua - ul , 2 )  | ( move ua , 3 + ul ; move ua - ul , 2 )  | ( move ua , 4 ; move 0 , 3 ; move ua - ul , ua - ul )  
[2175] ( move ul , 2 ; move ua , ua - 4 )  
[2176] ( move ul , ua ; move 4 + ul , 2 )  | ( move ul - ua , 2 ; move ul , ul )  | ( move ul - ua , 2 - ua ; move ul , ul )  | ( move ul , ua ; move 4 + ul , ul + ul )  | ( move ul , ua ; pen ul ; move 3 + 2 , 2 )  | ( pen 3 ; move ul , ua ; move 4 + ul , 2 )  | ( move ul , 0 ; move 4 , ul + ul ; move ul , 0 )  | ( move 2 - ul , ua ; move 4 + ul , 2 ; pen ua )  | ( ( move ul , 0 ; pen 3 * 2 ) ; move 4 + ul , 2 )  | ( move ul , ua ; v0 = 2 ; move 3 + v0 , v0 )  | ( move ul , ua ; ( move 3 + 2 , 2 ; move 0 , ul ) )  | ( move ul , 0 ; move 4 + ul , 3 - ul ; v0 = 4 * 3 )  
[2177] ( move 3 , ua ; move ua + 4 , ul )  | ( move 3 , 0 ; move ua + 4 , ul - ua )  | ( move 3 , ua ; move ua + 4 , ua + ul )  | ( move 3 , ua * 4 ; ( move ua , ul ; move 4 , ua ) )  
[2178] ( move 2 , ua - 4 ; move ua , ul )  | ( pen ul ; move 2 , ua - 4 ; move ua , ul )  
[2179] ( move ua , ul ; move 4 + ul , 2 )  | ( move ua , ul ; move 4 + ul , 4 / 2 )  | ( move ua , ua + ul ; move 4 + ul , 2 )  | ( move ua , ul - ua ; move 4 + ul , 2 )  | ( move ua , ul ; move ul , 2 ; move 4 , 0 )  | ( move ua , ul - ua ; move 4 + ul , ul + ul )  | ( move ua , ul ; ( move 4 + ul , 2 ; pen 3 ) )  | ( move ua , ul ; move 4 + ul , 2 ; v0 = ul )  | ( move ua , ul ; pen ua ; move 4 + ul , 2 - ua )  | ( move 0 , ua - ul ; move ua , 2 ; move 3 + 2 , 2 )  
[2180] ( move 3 , 3 ; move ua , ua * ua )  | ( move 3 , 2 + ul ; move ua , ua * ua )  | ( ( v0 = ul ; move 3 , 3 ) ; move v0 * ua , ua * ua )  
[2181] ( move ua , ua ; move ul - 4 , 2 )  | ( pen ul ; ( move ua , 0 ; move ul - 4 , 2 ) )  
[2182] ( move ua , 2 ; move ua , ua / 3 )  | ( move ua , 2 ; move ua , ua / 3 ; move ul , 2 )  
[2183] ( move ul , 2 ; move ua , ul - 3 )  | ( move ul , ua - 4 ; move ua , 4 )  | ( move 2 - ul , 2 ; pen 4 ; move ua , ua - 2 )  | ( move ul , 2 ; move ua , 2 - 4 ; move 0 , ua - 3 )  
[2184] ( move 2 , ua ; move ua - 4 , ul )  | ( move ul + ul , 0 ; move ua - 4 , ul )  
[2185] ( move 2 , 3 ; move ul - ua , ul )  | ( move 4 - 2 , 3 ; move ul - ua , ul )  | ( move 2 , 2 + ul ; move ul - ua , ul )  | ( move 2 , 4 - ul ; move ul - ua , ul )  | ( move 2 , 3 ; ( v0 = ul ; move v0 - ua , v0 ) )  
[2186] ( move 4 , ua ; move ul - ua , 2 )  | ( move 4 , ua ; pen ul ; move ul - ua , 2 )  | ( pen ua * ua ; move 4 , ua ; move ul - ua , 2 )  
[2187] ( move ua , ua * ua ; move 2 , 4 )  | ( move ua , ua * ua ; move ul + ul , 4 )  | ( move ua , ua * ua ; pen 4 + 2 ; move 2 , 4 )  | ( move ua , ua * ua ; move 2 , 4 ; pen ua + 2 )  
[2188] ( move ul , ul ; move 3 + 2 , ul )  | ( move ul , ul ; move 4 + ul , ul )  | ( move ul , ua + ul ; move 3 + 2 , ul )  | ( move ul , ul ; move 4 , ul ; move ul , ua )  | ( move ul , ul ; move ul , ul ; move 4 , ua )  | ( move ul , ul ; move 4 + ul , ul ; pen ua )  | ( move ul , ul ; pen ua ; move 4 + ul , ul )  | ( move ul , ul ; move 4 + ul , ul ; pen ul )  | ( move ul , ul ; move 3 + 2 , ul ; pen 2 / ua )  | ( pen 3 - 2 ; move ul , ul ; move 4 + ul , ul )  | ( move ul , ul ; move 4 + ul , ul ; v0 = ul )  | ( move ul , ul ; move 4 , ul ; move ul , ua * 4 )  | ( move ul , ul ; move 4 + ul , ua + ul ; pen 0 )  | ( move ul , ul ; move 3 + ul , ul ; move ul , ua )  | ( move ul , ul ; move ul + ul , ul ; move 3 , ua )  | ( move ul , ul ; v0 = 4 ; move ul + v0 , ul )  | ( v0 = ul ; move v0 , ul ; move 4 + ul , ul )  | ( move ul , ul ; v0 = ua ; move v0 - ul , ul )  | ( move ul , ul ; move 4 + ul , ul ; v0 = 4 + 2 )  | ( move ul , ul ; move 4 , ua + ul ; move 2 - ul , 0 )  | ( ( move ul , ul ; v0 = 4 + ul ) ; move v0 , ul )  | ( v0 = ul ; move ul , ua + ul ; move 4 + v0 , ul )  | ( ( move ul , ul ; move 4 + ul , ul ) ; pen 4 ; v0 = 4 )  | ( move ul , ul - ua ; v0 = ul + ul ; move v0 + 3 , ul )  | ( ( move ul , ul ; move 4 , 2 - ul ) ; move ul , ua ; pen ua )  | ( move ul , ul ; ( move 4 + ul , ul ; pen ul ) ; v0 = ua )  | ( ( move ul , ul ; move ul , ua + ul ) ; pen ua ; move 4 , ua )  
[2189] ( move 3 + 2 , ul ; move ul , ul )  | ( move 4 + ul , ul ; move ul , ul )  | ( move ua - ul , ul ; move ul , ul )  | ( move ul , ul - 2 ; move ul - ua , 2 )  | ( move 4 + ul , ul ; move 2 - ul , ul )  | ( move 4 + ul , ul ; move 2 - ul , ul - ua )  | ( move 3 + 2 , ul ; move ul , ul ; move 0 , ua )  | ( move 4 + ul , ul ; move ul , ul ; move 0 , 4 )  | ( move 4 + ul , ul ; v0 = ua ; move ul , ul )  | ( v0 = ul ; move 4 + ul , ul ; move ul , ul )  | ( ( pen ua ; move 4 + ul , ul ) ; move ul , ul )  | ( v0 = ul ; move 4 + ul , ul ; move ul , v0 )  | ( move 4 + ul , ul ; v0 = ul ; move ul , v0 )  | ( move 4 + ul , ul ; v0 = ul ; move v0 , v0 )  | ( v0 = ul ; move v0 + 4 , ul ; move v0 , v0 )  | ( v0 = ul ; move v0 + 4 , v0 ; move v0 , ul )  | ( move 3 + 2 , ul ; v0 = 2 ; move v0 - ul , ul )  | ( ( move 4 + ul , ul ; v0 = ul ) ; move v0 , ul )  | ( v0 = ul ; move v0 + 4 , v0 ; move v0 , v0 )  | ( move 3 + 2 , ul ; move ul , ul - ua ; move 0 , 2 * 2 )  | ( ( move 3 + 2 , ul ; move ul , ul ) ; v0 = ua + 2 )  | ( ( move 3 , ua + ul ; move 2 , ua ) ; move 2 - ul , ul )  | ( ( v0 = ul ; move 4 + v0 , v0 ) ; move v0 , ul )  | ( ( v0 = ul ; move v0 + 4 , v0 ) ; move ul , v0 )  
[2190] ( move 2 / ua , 2 ; move ua , ul )  | ( move ul / 3 , 2 ; move ua , ul )  | ( move ul / 3 , ul + ul ; move ua , ul )  | ( pen ul ; move ul / 4 , 2 ; move ua , ul )  | ( move ul / ua , 2 ; v0 = ul ; move ua , v0 )  | ( ( move ul / 3 , 2 ; move ua , ul ) ; pen ua ; v0 = 0 )  
[2191] ( move ua , ul ; move ua , 2 - 4 )  | ( move ua , ul ; move ua , ua - 2 )  | ( move ua , ul ; move ua , ul - 3 )  | ( move ua , ul - ua ; move ua , 0 - 2 )  | ( move ua , ul ; v0 = 4 ; move ua , ul - 3 )  | ( ( pen ul ; move ua , ul ) ; move ua , ul - 3 )  
[2192] ( move ua , ul ; move 2 , ua - 4 )  | ( move 2 , ul / ua ; move ua , 4 )  | ( move 2 , ua ; move 0 - ua , ul ; pen 0 )  | ( pen 2 ; ( move 2 , ua ; move 0 - ua , ul ) )  
[2193] ( move ul , ua - ul ; move 3 , 2 )  | ( move ul - 4 , ul ; move ul , ul )  | ( move ul , 3 - 4 ; move 2 + ul , 2 )  | ( move ul , ua - ul ; move 2 + ul , 2 )  | ( move ul , ua - ul ; move 3 , ua + 2 )  | ( move ul - 4 , ua + ul ; move ul , ul )  | ( move ul , 0 - ul ; move 3 , 2 ; pen ua + ul )  | ( move ul , 0 - ul ; v0 = 3 ; move v0 , 2 )  | ( move ul , ua - ul ; move 4 - ul , 2 ; pen ul )  | ( ( v0 = ul ; move v0 , ua - v0 ) ; move 3 , 2 )  | ( move ul , ua - ul ; v0 = ul ; move 3 , v0 + v0 )  
[2194] ( move ua , 2 ; move ul , 4 + ul )  | ( pen 4 ; move ua , 2 ; move ul - 2 , ua * ua )  
[2195] ( move ua , 3 ; move 3 , ua * ua )  | ( move ua , 3 ; pen 3 ; move 4 - ul , ua * ua )  | ( move ua , 3 ; v0 = ua * ua ; move 3 , v0 )  | ( move ua , ua + 3 ; v0 = 4 - 3 ; move 3 , ua * ua )  
[2196] ( move ul , ua ; move ua - 2 , 4 )  | ( move ul , ua ; move ua - 2 , 3 + ul )  
[2197] ( move ua + 3 , ul ; move ua , 4 )  | ( pen 4 ; move ua + 3 , ul ; move ua , 4 )  | ( move ua + 3 , ul ; move ua , 4 ; v0 = 0 )  | ( move ua + 3 , ul ; pen 2 ; move ua , 3 + ul )  | ( move ua + 2 , ul ; move ul , ua ; move ua , 4 )  
[2198] ( move ua , 2 - 3 ; move ul , ul )  | ( move ua , 0 - ul ; move ul , ul )  | ( move ua , ul - 2 ; move ul , ul )  | ( move ua , ua - ul ; move ul , ul )  | ( move ua , ul - 2 ; move ul , 3 - 2 )  | ( move ua , ul - 2 ; move ul , ua + ul )  | ( move ua , ua - ul ; move ul , ul - ua )  | ( move ua , 0 - ul ; pen ul ; move ul , ul )  | ( move ua , ul - 2 ; move 0 , 0 ; move ul , ul )  | ( move ua , 0 - ul ; move ul , ul ; v0 = 2 )  | ( move ua , 0 - ul ; move ul , ul ; v0 = ua )  | ( move ua , ua - ul ; ( pen ul ; move ul , ul ) )  | ( v0 = ul - 2 ; move ua , v0 ; move ul , ul )  | ( move ua , 0 - ul ; v0 = ul ; move v0 , v0 )  | ( move ua , 2 - 3 ; ( move ul , ul ; v0 = 4 - ua ) )  | ( ( move ua , ua - ul ; v0 = ul ) ; move v0 , v0 )  | ( pen 2 ; ( pen ua ; ( move ua , ul - 2 ; move ul , ul ) ) )  
[2199] ( move 3 , ua ; move ul - ua , 3 )  | ( move 2 + ul , ua ; move ul - ua , 4 - ul )  | ( move 4 - ul , ua ; pen ul ; move ul - ua , 3 )  | ( move 3 , ua ; v0 = ua ; move ul - v0 , 3 )  
[2200] ( move ua + 2 , ul ; move ul , 4 )  | ( move ua + 2 , ul ; move ul , 3 + ul )  | ( pen 4 ; move ua + 2 , ul ; move ul , 4 )  | ( ( move ul , ul ; move ua + ul , 0 ) ; move ul , 4 - ua )  
[2201] ( move ua , ul ; move ua + 3 , 4 )  | ( pen 3 ; move ua , ul ; move ua + 3 , 4 - ua )  | ( move ua , ul ; ( pen ua ; move ua + 3 , 4 ) )  | ( move ua , ul ; v0 = ua + 4 ; move v0 - ul , v0 )  
[2202] ( move ua , ua - ul ; move 3 , 3 )  | ( move ua , ul - 2 ; move 4 , ua + 3 )  | ( move ua , 2 - 3 ; move 3 , 3 ; v0 = ua )  | ( move ua , ua - ul ; move 4 , 3 ; move 0 , ua )  
[2203] ( move ul - ua , ua ; move 3 , 3 )  | ( move ul - ua , 0 ; move 3 , 2 + ul )  | ( move ul - ua , ua ; move 3 , 3 ; pen 0 )  | ( move ul - ua , 0 ; move 3 , 3 ; v0 = 4 )  | ( move ul - ua , ua ; move 4 - ul , 3 ; pen ua )  | ( move ul - 3 , 3 ; ( pen ua ; move ua , ua - 3 ) )  | ( move ul - ua , ua ; move 3 , 3 ; v0 = ul + ul )  
[2204] ( move ul , 2 ; move 3 - ua , ul )  | ( move ua - 3 , 3 - ua ; move ul , ua + 2 )  
[2205] ( move ua , 2 ; move ua - 4 , ul )  
[2206] ( move ul , 2 - 3 ; move ua , ul )  | ( move ul , 3 - 4 ; move ua , ul )  | ( move ul , ua - ul ; move ua , ul )  | ( move 0 - ua , 0 ; move ul , ul + ul )  | ( move 2 - ul , ua - ul ; move ua , ul )  | ( move ul , ua - ul ; move ua , ua + ul )  | ( move ul , 0 - ul ; pen ua ; move ua , ul )  | ( pen 3 ; move ul , ua - ul ; move ua , ul )  | ( move 0 - ua , ua ; move ul , 2 ; v0 = 4 )  | ( move ul , 3 - 4 ; move ua , ul ; v0 = ul )  | ( move ul , ul - 2 ; move 0 , ua ; move ua , ul )  | ( move ul , ua - ul ; move ua , ul ; v0 = 3 )  | ( pen ul ; move 2 - ul , 0 - ul ; move ua , ul )  | ( move ul , ua - ul ; ( move ua , ul ; pen 0 ) )  | ( v0 = ua - ul ; move ul , v0 ; move ua , ul )  | ( move ul , ua - ul ; ( move ua , ul ; v0 = 2 ) )  | ( move 2 - ul , ua - ul ; move ua , ul ; v0 = ua )  | ( move ul , ua - ul ; ( move 0 , ua ; move ua , ul ) )  | ( move ul , ua - ul ; pen 2 * 2 ; move ua , ul - ua )  | ( move 0 - ua , ua ; ( v0 = ul ; pen 4 ) ; move ul , 2 )  
[2207] ( move ua - ul , ul ; move 3 , 2 )  
[2208] ( move ul , 2 ; move 3 , ua * ua )  | ( move ul , ul + ul ; move 3 , ua * ua )  | ( move ul , 2 ; move 3 , ua * ua ; pen ul )  
[2209] ( move 2 , 2 ; move ua , ul / ua )  | ( move 2 , 2 ; pen 3 ; move ua , ul / ua )  | ( move 3 - ul , 3 - ul ; move ua , ul / ua )  | ( move 0 , ul ; move 2 , ua + ul ; move ua , ul / ua )  
[2210] ( move 3 , ul ; move ul - ua , 2 )  
[2211] ( move ua , 0 ; move 4 / ua , ul )  | ( move ua , ua ; move 4 / ua , ul )  | ( move ua , 0 ; move 4 / ua , ul ; pen ua )  | ( move ua , ua ; pen 4 ; move 4 / ua , ul )  | ( move ua , ua ; ( move 2 / 3 , ul ; v0 = ul ) )  | ( move ua , ua * 3 ; ( pen 4 ; move 4 / ua , ul ) )  | ( ( pen ul ; move ua , ua ) ; move 4 / ua , ua + ul )  | ( v0 = 4 / ua ; move ua , ua + ua ; move v0 , ul )  | ( move ua , ua ; ( pen 0 ; pen ua ; move 4 / ua , ul ) )  | ( ( move ua , 0 ; move 4 / ua , ul ; pen ul ) ; pen ua + 2 )  
[2212] ( move ua , 2 / ua ; move 2 , ul )  | ( move ua , 2 / ua ; move 2 , ul ; v0 = ul )  
[2213] ( move ua + ul , 4 ; move ua , 3 )  | ( move ua + ul , 4 ; move ua , ua + 3 )  | ( move ua + ul , 3 + ul ; move ua , 3 - ua )  | ( move ua + ul , 4 ; ( move ua , 2 + ul ; pen 4 - ul ) )  
[2214] ( move ua - ul , 2 ; move ua , 4 )  | ( move ua - ul , 2 ; move ua , 3 + ul )  | ( move ua - ul , ul + ul ; move ua , 4 ; v0 = 3 )  | ( v0 = ua - ul ; move v0 , ul - v0 ; move ua , 4 )  
[2215] ( move ua , 4 ; move ua - 2 , ul )  | ( move ua , 4 ; move ua - 2 , ul ; pen 4 + 2 )  
[2216] ( move 3 - ua , ul ; move 2 , ul )  
[2217] ( move ua , ul - 3 ; move 2 , ul )  | ( move ua , ul - 3 ; move ul + ul , ul )  | ( move ua , ua - 2 ; move 4 / 2 , ul - ua )  | ( move ua , ul - 3 ; move 3 - ul , ul ; v0 = ua )  | ( move ua , ul - 3 ; move ul , ul ; move ul , ua * 2 )  
[2218] ( move ul , ua * ua ; move 3 , 2 )  | ( move ul , ua * ua ; move 3 , ua + 2 )  | ( move ul , ua * ua ; move 2 + ul , 2 )  
[2219] ( move ua , 4 + ul ; move 2 , ul )  | ( move 0 , 3 ; move ua , 2 ; move 2 , ul )  | ( move ua , 4 + ul ; move ul + ul , ul - ua )  | ( ( pen 3 + ul ; move ua , 3 + 2 ) ; move 2 , ul )  | ( move 0 , 4 ; move ua , ul ; move ul + ul , ul - ua )  | ( v0 = ul ; move ua , v0 + 4 ; move v0 * 2 , ul )  
[2220] ( move ul , 0 ; move ua , ua / 4 )  | ( move ul , ua ; move ua , ua / 4 )  | ( move ul , ua ; move ua , ua / 4 ; v0 = 4 )  
[2221] ( move ua + 4 , ul ; move ua , 3 )  | ( move ua + 4 , ul ; move ua + ul , ua + 3 )  | ( move ua + 4 , ul ; move ua , 3 ; v0 = ua + ul )  
[2222] ( move ua , ul - 2 ; move 3 , ul )  | ( move ua , ua - ul ; move 3 , ul )  | ( move ua , 0 - ul ; pen ua ; move 3 , ul )  | ( move ua , ul - 2 ; move 3 , ul ; v0 = ul )  | ( move ua , ua - ul ; v0 = 3 ; move v0 , ul )  | ( move ua , ua - ul ; ( pen 4 ; move 3 , ul - ua ) )  | ( move ua , ua - ul ; move ul + ul , ul ; move 2 - ul , ua )  
[2223] ( move ua , 3 ; move ua , ua - 4 )  
[2224] ( move 2 , ul ; move ua - ul , 3 )  | ( move 4 / 2 , ul ; move ua - ul , 3 )  | ( move 2 , ul ; pen 2 ; move ua - ul , 3 )  | ( move 2 , ul ; move ua - ul , 3 ; move 0 , ua + ul )  
[2225] ( move 4 , ul ; move ua + ul , 2 )  | ( move 4 , ul ; move ua + ul , ua + 2 )  | ( move 4 , ul ; v0 = ua ; move v0 + ul , 2 )  | ( move 3 + ul , ul ; move 2 , 2 ; move ua - ul , ua )  
[2226] ( move ul , ul ; move 3 - ua , 2 )  | ( move ul , ul ; move 3 - ua , 3 - ul )  
[2227] ( move ua , ua ; move 3 , ua - 4 )  
[2228] ( move 4 , 2 ; move ua , ua - ul )  | ( v0 = 4 ; move v0 , 2 ; move ua , ua - ul )  
[2229] ( move 3 , 3 ; move ua + ul , ul )  | ( move 3 , 3 ; move ua + ul , 2 - ul )  | ( move 2 + ul , 3 ; move ua + ul , ul )  | ( move 3 , 4 - ul ; move ua + ul , ul )  | ( pen 3 ; move 2 + ul , 3 ; move ua + ul , ua + ul )  
[2230] ( move ua - 3 , ua ; move 3 , ul )  
[2231] ( move ua + ul , ul ; move 4 , 2 )  | ( move ua + ul , ul ; v0 = 4 ; move v0 , 2 )  | ( v0 = ua + ul ; ( move v0 , v0 ; move 4 , 2 ) )  
[2232] ( move ua + ul , 2 ; move ul , 4 )  | ( move ua + ul , 2 ; move ul , 4 - ua )  | ( move ul , 2 ; move ua , 0 ; move ul , 4 )  | ( move ua + ul , 2 ; pen 3 ; move ul , 4 )  | ( move ua + ul , 3 - ul ; move ul , ua + 4 )  | ( move ua + ul , 2 ; move 2 - ul , 4 ; pen 4 )  | ( move ua + ul , 2 ; move ul , 4 ; v0 = ul )  
[2233] ( move ua , ua - 3 ; move ua , 4 )  
[2234] ( move 3 , ua - 2 ; move ul , ul )  | ( move ul , ua + 2 ; move 0 - 3 , ua - 4 )  
[2235] ( move ua , ua - ul ; move 2 , 4 )  | ( move ua , 3 - 4 ; move ul + ul , 4 ; v0 = 2 )  | ( move ua , 3 - 4 ; move ul - 3 , ul - ua ; v0 = ul )  | ( ( pen ua ; move ua , ua - ul ) ; move ul , 4 ; move ul , 0 )  
[2236] ( move 4 + ul , 2 ; move ua , ul )  | ( ( move 3 + 2 , 3 - ul ; move ua , ul ) ; move 0 , 0 )  
[2237] ( move ua , ul / ua ; move 2 , 2 )  | ( move 2 , 0 - ul ; move ua , ua - 2 )  | ( ( move ua , ul / ua ; pen 2 ) ; move 2 , 2 - ua )  
[2238] ( move 2 , ul ; move ua , 2 / ua )  | ( move 2 , ul ; move ua , ul / 3 )  | ( move 4 - 2 , ul ; move ua , ul / 3 ; pen 2 )  | ( move 2 , ul ; ( v0 = ul / 3 ; move ua , v0 ) )  | ( ( move 2 , ul ; move ua , 2 / ua ) ; v0 = 2 + ul )  
[2239] ( move 4 , ua ; move ua , ul - 2 )  | ( move 4 , ua ; move 3 * 2 , ua - ul )  | ( move 4 , ua ; pen 2 ; move ua , ua - ul )  | ( move 4 , ua ; move 0 , 0 ; move ua , ua - ul )  | ( move 0 , ul / ua ; move ua , 2 ; move 4 , ul )  | ( pen ul / ua ; move 4 , 0 ; move ua , ul - 2 )  | ( move 4 , 0 ; v0 = ua ; move v0 , v0 - ul )  | ( move 4 , 0 ; move ua , 0 - ul ; v0 = 2 - ul )  | ( ( move ul , ua ; move 3 , ua ) ; move ua , ua - ul )  
[2240] ( move ua - 2 , ul ; move 3 , ul )  | ( move ua - 2 , ul - ua ; move 3 , ul ; v0 = 0 )  | ( move ua - 2 , ul ; ( move 3 , ul ; v0 = ua / 4 ) )  
[2241] ( move 3 , ul ; move 2 , ua - ul )  | ( move 4 - ul , ul ; move 4 - 2 , 0 - ul )  | ( pen ul ; move 2 + ul , ul ; move 2 , 0 - ul )  | ( ( move 3 , ul ; pen 3 ) ; move ul , 0 - ul ; move ul , 0 )  
[2242] ( move ua , 2 ; move 4 + ul , ul )  | ( move ua , 2 ; move 4 + ul , ua + ul )  | ( move ua , 2 ; move 4 , ul ; move ul , ua )  | ( move ua , 2 ; move ul , ul ; move 4 , ua )  
[2243] ( move ua , ul ; move 4 , ua - 2 )  | ( move ua , ul ; move 4 , ul - 3 )  | ( pen ul ; move ua , ul ; move 4 , 2 - 4 )  | ( move ua , ul ; move 4 , ua - 2 ; v0 = 3 )  | ( move ua , ul ; ( move 4 , ua - 2 ; v0 = 3 ) )  | ( move ua , ua + ul ; move 4 , 0 - 2 ; v0 = ua )  
[2244] ( move 4 - ua , ul ; move ua , 2 )  
[2245] ( move ua , ul ; move 2 , 2 / ua )  | ( move ua , ul ; move 2 , ul / 3 )  | ( move ua , ul ; move ul + ul , ul / 3 )  | ( pen ua - 4 ; move ua , ul ; move 2 , ul / 3 )  
[2246] ( move 2 , ua ; move ua , ul / 2 )  | ( v0 = 2 ; move v0 , ua ; move ua , ul / v0 )  | ( move 4 / 2 , ua ; move ua , ul / 2 ; move 3 / ua , 3 )  
[2247] ( move 3 , ua - 3 ; move ua , ul )  | ( move 4 - ul , ua - 3 ; move ua , ul )  
[2248] ( move ua + ul , ua ; move 3 , 4 )  | ( pen ul ; ( move ua + ul , 0 ; move 3 , 4 ) )  | ( move ua + ul , ua ; move 3 , 4 ; pen ul / ua )  | ( move ua , ua + ua ; move ul , 0 ; move 4 - ul , 4 )  
[2249] ( move 4 , 2 ; move ua + ul , ul )  | ( move 4 , 2 ; move ua + ul , ua + ul )  | ( move 0 , ua ; move 4 , 2 - ua ; move ua + ul , ul )  
[2250] ( move 2 , ul ; move ua , 4 + ul )  | ( pen ua ; move 2 , ul ; move ua , 4 + ul )  | ( move 2 , 2 - ul ; move 0 , ul ; move ua , 4 )  | ( move 2 , ul ; move ua , 4 + ul ; v0 = 2 )  | ( v0 = 2 ; move v0 , ul ; move ua , v0 + 3 )  | ( move ul + ul , 3 - 2 ; move 0 , ul ; move ua , 4 )  | ( v0 = ul ; ( move 2 , v0 ; move ua , v0 + 4 ) )  | ( move 2 , ul ; ( move 0 , ul ; move ua , 4 ; v0 = ua ) )  
[2251] ( move ua - 3 , 3 ; move ua , ul )  | ( pen 2 ; move ua - 3 , 3 ; move ua , ul )  | ( move ua - 3 , 3 ; v0 = ul ; move ua , ul )  
[2252] ( move 3 , ul ; move 2 - ua , ul )  | ( move 3 , ul ; ( pen ul ; move 2 - ua , ul ) )  | ( pen ul ; move 3 , ua + ul ; move 2 - ua , ul )  
[2253] ( move ua , ua ; move ua + 4 , 4 )  | ( move 3 * 2 , ua ; move ua , 4 ; move 4 , ua )  | ( move ua , ua ; move ua + 4 , 4 ; v0 = ua - ul )  | ( ( move ua , ua ; move ua , 4 ) ; move 4 , ua ; pen 0 )  
[2254] ( move ua + ul , ua ; move 4 , 3 )  | ( move ul , 0 ; move ua , ua ; move 4 , 3 )  | ( move ua + ul , ua ; move 4 , 3 ; v0 = 4 * 2 )  
[2255] ( move 2 , ul ; move ua + ul , 4 )  | ( move 2 , ul ; move ua + ul , 2 + 2 )  | ( move 2 , ul ; move ua + ul , ua + 4 )  | ( move 2 , ul - ua ; move ua + ul , 4 )  | ( move 2 , ul ; move ua , 4 ; move ul , 0 )  | ( move 2 , ul ; move ua , 3 + ul ; move ul , ua )  
[2256] ( move ul - ua , ul ; move 2 , 3 )  | ( move ul - ua , ul ; move 3 - ul , 3 )  | ( move ul - ua , ul ; move 2 , 3 ; v0 = ua )  
[2257] ( move 2 - ua , ua ; move ul , 4 )  | ( move 2 - ua , ua ; move ul , 4 ; pen ul )  
[2258] ( move 3 , ua ; move ua , 2 / ua )  | ( move 3 , ua ; move 0 , 2 / ua ; move ua , ua )  
[2259] ( move ua + ul , 2 ; move 4 , ul )  | ( move ua + ul , 2 ; move 2 + 2 , ul )  | ( move ua + ul , 2 ; move 3 + ul , ul )  | ( move ua + ul , 2 ; move 4 , ul - ua )  | ( move ua + ul , ul + ul ; move 4 , ul )  | ( move ul , 2 ; move ua , ua ; move 4 , ul )  | ( move ua + ul , 2 ; pen ul ; move 4 , ul )  | ( move ua + ul , ul + ul ; move 4 , ul - ua )  | ( move ua + ul , 2 ; move 4 , ul ; v0 = 4 )  | ( move ua + ul , 2 ; move 4 , ul ; v0 = ul )  | ( move ul , 3 - ul ; ( move ua , ua ; move 4 , ul ) )  | ( pen 3 ; pen ul ; ( move ua + ul , 2 ; move 4 , ul ) )  | ( move 4 / ua , ua ; move ua + ul , 4 / 2 ; move 4 , ul )  
[2260] ( move ul - 3 , ul ; move ua , 2 )  | ( move ul - 3 , ul ; v0 = ua ; move v0 , 2 )  | ( move 2 - 4 , ua + ul ; ( move ua , 2 ; v0 = ua ) )  | ( move ul - 3 , ul ; move ua , 2 ; ( pen 2 ; pen ua + ul ) )  
[2261] ( move ul , ul ; move ua + 2 , 4 )  | ( move ul , ua + ul ; move ua + 2 , 4 )  | ( move ul , ul ; move ul , 4 ; move ua + ul , 0 )  | ( move ul , ul ; ( move ul , 4 ; move ua + ul , 0 ) )  
[2262] ( move ua , ul ; move ua + 4 , 3 )  | ( move ua , ua + ul ; move ua + 4 , 3 )  | ( move ua , ul ; move ua + 4 , 3 ; pen ua )  | ( move ua , ul ; move ua + 4 , 3 ; v0 = ua )  | ( move ua , ul ; ( pen ua - 4 ; move ua + 4 , 3 ) )  | ( move ua , ul ; move 4 , ua + 3 ; move ua , ua * 3 )  
[2263] ( move ul , ul ; move 2 - ua , 3 )  
[2264] ( move ua , ul - 3 ; move ul , 2 )  | ( ( move ua , ua - 2 ; move ul , 2 ) ; pen 0 )  | ( move ua , ul - 3 ; pen 4 ; move ul , 2 - ua )  | ( move ua , ua - 2 ; move ul , ua / 3 ; v0 = 4 )  | ( ( move ua , ua - 2 ; move ul , 2 ) ; move ul / 2 , ul )  | ( ( move ua , ua - 2 ; move ul , ul + ul ) ; pen ua + ua )  | ( move ua , 2 - 4 ; pen ul ; ( move ul , 2 ; v0 = ul ) )  
[2265] ( move 2 - ua , 4 ; move ua , ul )  | ( move 2 - ua , 3 + ul ; pen 2 ; move ua , ul )  
[2266] ( move ua , ua ; move ua - 3 , 4 )  | ( move ua , ua ; v0 = ua - 3 ; move v0 , 4 )  
[2267] ( move 4 + ul , ul ; move ua , 2 )  | ( move 3 + 2 , ul ; move ua , 2 ; pen 3 )  | ( move 4 , ul ; move ul , 0 ; move ua , 2 )  | ( move 4 + ul , ul ; pen ul ; move ua , 2 )  | ( move 4 + ul , ua + ul ; move ua , 4 / 2 )  | ( move 3 , ul ; move 2 , 0 ; move ua , 3 - ul )  | ( v0 = 2 ; move 3 + v0 , ul ; move ua , v0 )  | ( move 4 + ul , ul ; move 0 , ul - ua ; move ua , ua + ul )  
[2268] ( move ua , ul ; move 2 , 4 + ul )  | ( move ua , ua + ul ; move 2 , 4 + ul )  | ( move ua , ul ; move ul - 3 , ua * ua )  | ( move ua , ul ; pen 4 ; move 2 , 4 + ul )  | ( move ua , ul ; move 2 , 4 + ul ; v0 = ul )  | ( ( move ua , ul ; move 2 , 4 + ul ) ; move 0 , 0 )  | ( move ua , ul - ua ; move 0 , ua ; move 2 , 4 + ul )  
[2269] ( move 4 , ua - ul ; move ua , 2 )  | ( move 3 + ul , ul - 2 ; move ua , 2 )  | ( move 2 * 2 , ua - ul ; move ua , 2 )  
[2270] ( move 2 , ul ; move 3 , ua - ul )  | ( move 2 , 2 - ul ; move 3 , 0 - ul )  | ( move 2 , ua + ul ; move 3 , 0 - ul )  | ( move 2 , ul ; move 3 , ua - ul ; pen ul )  | ( move 2 , ul ; move 3 , ua - ul ; v0 = ul )  | ( move 2 , ul ; move 2 + ul , 3 - 4 ; v0 = 0 )  
[2271] ( move ua , 2 ; move ul , 2 / ua )  | ( move ua , 2 ; move ul , ul / 3 )  | ( move ua , ua + 2 ; move 4 - 3 , ul / 4 )  | ( v0 = ua ; move ua , 2 ; move ul , ul / 3 )  | ( move 3 + 3 , ua + 2 ; move 2 - ul , ul / 4 )  | ( move ua , 2 ; move ul , 2 / ua ; move 0 , ua + 2 )  
[2272] ( move ua - 3 , 2 ; move ul , ul )  | ( move ua - 3 , 3 - ul ; move ul , ul )  | ( pen 4 ; ( move ua - 3 , 2 ; move ul , ul ) )  | ( move ua - 3 , 2 ; v0 = 4 + 3 ; move ul , ul )  | ( move ua - 4 , ua + 2 ; move ul , ua ; move ul , ul )  | ( move ul , ua ; ( move 3 - ua , ul + ul ; v0 = ua ) )  
[2273] ( move ul , 4 ; move ua + 2 , ul )  | ( move 2 - ul , 4 ; move ua + 2 , ul )  | ( move ul , 3 + ul ; move ua + 2 , ul )  | ( move ul , 4 ; move ua + 2 , ua + ul )  | ( move ul , 4 ; move 2 , ul ; move ua , ua )  | ( move ul , 4 ; pen ua ; move ua + 2 , ul )  | ( move ul , 4 ; move ua + 2 , ul ; v0 = 4 )  | ( move ul , 4 ; v0 = ul ; move 4 + 4 , v0 )  | ( move ul , 4 ; move ul + ul , 2 - ul ; move ua , ua )  | ( move ul , 4 ; move ul + ul , ul - ua ; move ua , ua )  
[2274] ( move ua - 3 , ul ; move 2 , ul )  | ( move 3 , ua + ul ; move ul - 3 , 4 )  | ( move ua - 3 , ul ; move 4 / 2 , ul )  | ( ( move ua - 3 , ul ; pen ul ) ; move 2 , ul )  
[2275] ( move ul , 4 + ul ; move ua , 2 )  | ( move ul , 4 + ul ; move ua , ul + ul )  | ( move 0 , ua + 4 ; move ul , ul ; move ua , 2 )  | ( move ul , 3 + 2 ; v0 = 3 - ul ; move ua , v0 )  | ( ( move ul , 4 + ul ; move ua , 2 - ua ) ; pen ul + ul )  | ( move 0 , ua ; move 0 , ul ; ( move ul , 4 ; move ua , 2 ) )  
[2276] ( move 2 , ul ; move ua , ua - 4 )  | ( pen ul ; move 2 , ul ; move ua , ua - 4 )  | ( move ul + ul , ul - ua ; v0 = ua - 4 ; move ua , v0 )  
[2277] ( move ua , 3 ; move 3 , ua - ul )  | ( move ua , 3 ; move 3 , ua - ul ; pen ul )  
[2278] ( move ul , ua ; move 2 - ua , 4 )  | ( v0 = ua ; move ul , v0 ; move 2 - v0 , 4 - v0 )  
[2279] ( move ua - ul , 3 ; move 2 , ul )  
[2280] ( move ua , ul ; move ul , 4 + 2 )  | ( move ua , ul ; move ul , 3 * 2 )  | ( move ua , ua + ul ; move ul , 4 + 2 )  | ( move ua , ul ; move ul , 3 * 2 ; pen 0 )  | ( move ua , ul ; move ul , 4 + 2 ; pen 2 )  | ( move ua , ul ; move 0 , 2 - ua ; move ul , 4 )  | ( ( move ua , ul ; pen ul ) ; move ul , 4 + 2 )  | ( v0 = 4 ; move ua , ul ; move ul , 2 + v0 )  | ( move ua , ul ; ( move ul , 3 * 2 ; v0 = 0 ) )  
[2281] ( move ua , 2 ; move 2 , ul / ua )  | ( pen ul ; ( move ua , 2 ; move 3 - ul , ul / ua ) )  
[2282] ( move ul - 3 , ul ; move ua , 3 )  | ( move 2 - 4 , ul - ua ; move ua , 3 )  | ( move ul - 3 , ul ; move ua , 4 - ul )  | ( pen 3 ; ( move ul - 3 , ul ; move ua , 3 ) )  | ( move ul - 3 , ua + ul ; move 0 , 3 ; move ua , 0 )  | ( move ul - 3 , ul ; move ua , 2 + ul ; move 0 , ul )  
[2283] ( move 4 , ul ; move ua , ua - 3 )  | ( move 4 , ul ; move ua , ul - 4 )  | ( move ua - 2 , ul ; move ua , ua - 3 ; v0 = ua )  
[2284] ( move ul - ua , ul ; move 2 , 4 )  | ( move ul - ua , ul ; move 2 , 3 + ul )  
[2285] ( move ua , ua ; move ua / 2 , 4 )  
[2286] ( move 2 , ul - 4 ; move ua , ul )  | ( move 2 , ul - 4 ; move ua , ul ; v0 = 2 + ul )  | ( move 2 , ua - 3 ; move ua , ul ; move ul , ul + ul )  | ( move 2 , ua - 3 ; ( v0 = ua ; move v0 , ul ) )  
[2287] ( move 2 - ua , ul ; move ul , 4 )  | ( pen 3 ; move 2 - ua , ul ; move ul , ua + 4 )  
[2288] ( move 2 , ua / 3 ; move ua , ul )  | ( move 2 , ua / 3 ; ( move ua , ul ; v0 = ua ) )  
[2289] ( move ua , 3 ; move ua - 4 , ul )  
[2290] ( move ua + ul , 3 ; move ul , 4 )  | ( move 4 + 3 , 3 ; move ul , 2 + 2 )  | ( v0 = 4 ; move ua + ul , 3 ; move ul , v0 )  
[2291] ( move ua - ul , 3 ; move 3 , ul )  | ( pen ul ; move ua - ul , 3 ; move 3 , ul )  
[2292] ( move ua , 4 ; move ua + ul , 4 )  | ( move ua , 4 ; ( move ua + ul , 4 ; pen 4 ) )  
[2293] ( move ul , 2 / ua ; move ua , 3 )  | ( move ul , ul / 3 ; move ua , 3 )  
[2294] ( move ua , 2 / ua ; move ua , 4 )  | ( move ua , ul / 3 ; move ua , 4 - ua )  
[2295] ( move ul / 2 , 2 ; move ua , ul )  | ( move 3 / ua , 2 ; move ua , ul - ua )  | ( move 3 / ua , ul + ul ; move ua , ul )  | ( pen ul ; move 3 / ua , 2 ; move ua , ul )  | ( ( move ul / 2 , ul ; move ua , 2 ) ; move 0 , ul )  
[2296] ( move ul , 0 ; move ua , ul / 4 )  | ( move ul , ua ; move ua , ul / 4 )  | ( move ul , ua + ua ; move ua , ul / 4 )  | ( move ul , 0 ; move ua , ul / 4 ; pen 3 )  | ( move ul , ua ; move ua , ul / 4 ; pen 4 )  | ( move ul , ua ; pen ul ; move ua , ul / 4 )  | ( ( move ul , ua ; move 0 , ul / 4 ) ; move ua , ua ; pen 2 )  
[2297] ( move ul , ua ; move ua - 3 , 4 )  | ( move ul , ua ; move ua - 3 , ua + 4 )  | ( move ul , ua ; pen 4 ; move ua - 3 , 4 )  | ( move ul , 0 ; move ua - 3 , 4 ; v0 = 2 )  
[2298] ( move 2 , ul ; move ua - 4 , ul )  | ( move 2 , ua + ul ; move ua - 4 , 2 - ul )  
[2299] ( move ul - ua , ul ; move 3 , 3 )  | ( move ul - ua , ul ; v0 = 3 ; move v0 , v0 )  
[2300] ( move ul , 2 ; move 4 , ua * ua )  | ( move ul , ul + ul ; move 4 , ua * ua )  | ( move ul , 2 ; move 4 , ua * ua ; pen ul - 2 )  
[2301] ( move 3 - ua , ul ; move ul , 3 )  | ( move 4 , ul ; move ul / 3 , ul )  | ( move 4 , ul ; move ul / ua , ul )  | ( move 3 - ua , ul ; move ul , ua + 3 )  | ( pen ua ; move ul / ua , ua ; move 4 , ua + ul )  
[2302] ( move ua , 2 ; move ua , ua / 4 )  | ( move ua , 2 ; v0 = ul / 4 ; move ua , ua * v0 )  
[2303] ( move ul , 2 ; move ua , ul / 2 )  
[2304] ( move ua - 3 , ul ; move 3 , ul )  | ( move ua - 4 , ul ; move ul , ua ; move 3 , ua + ul )  
[2305] ( move ul , 2 ; move 4 , ua - ul )  | ( move ul , ul + ul ; move 4 , ua - ul )  | ( ( pen ul ; move 0 - 4 , ul ) ; pen ua ; move 3 - 2 , 4 )  | ( move 0 - 4 , ul ; ( pen ul ; move 0 - ul , ul ; pen 3 ) )  
[2306] ( move ua + ul , 4 ; move ua , 4 )  | ( move ua + ul , 2 + 2 ; move ua , 4 )  | ( pen ul ; ( move ua , 4 ; move ul , ua ) ; move ua , 4 )  
[2307] ( move 2 , ul ; move 4 - ua , ul )  
[2308] ( move 2 , ul ; move ua , ua / 3 )  | ( move ul + ul , ul ; move ua , ua / 3 )  
[2309] ( move ul , ul ; move ua , 3 * 2 )  | ( move ul , ul ; move 0 , ua ; move ua , 4 + 2 )  | ( move ul , ul ; move ua , 3 + 3 ; v0 = 4 * 3 )  | ( move ul , ul ; ( move 0 , 3 ; pen ua + 3 ) ; move ua , 3 )  
[2310] ( move ul , ua ; move ua , 2 / 3 )  
[2311] ( move ua , ul ; move 4 , ul - 2 )  | ( move ua , ul ; move 4 , ua - ul )  | ( move ua , ua + ul ; move 4 , ua - ul )  | ( move 4 , ua / 2 ; move ua , ul ; v0 = 2 )  | ( move ul , ul / ua ; move 4 , 3 ; move ua , ul )  | ( move ua , ul ; v0 = 2 ; move 4 , v0 - 3 )  
[2312] ( move 4 , 2 ; move ua - ul , ul )  | ( pen 4 + 3 ; move 4 , 2 ; move ua - ul , ul )  
[2313] ( move 4 , ua ; move 3 - ua , ul )  | ( move 4 , 0 ; move 4 - ua , ul ; move ul , 3 )  | ( v0 = ua ; move 4 , v0 ; move 3 - v0 , ul + v0 )  
[2314] ( move 4 - ua , ua ; move 3 , ul )  | ( move 4 - ua , 0 ; v0 = ua / 2 ; move v0 , ul )  
[2315] ( move ua , ul / 3 ; move ua , 2 )  | ( ( move ua , 2 / ua ; move ua , 4 - 2 ) ; v0 = ua )  
[2316] ( move ua , 4 ; move ua , ua - 4 )  
[2317] ( move ul - ua , 3 ; move 3 , ul )  | ( move ul - ua , 2 + ul ; move 3 , ul )  | ( move ul - ua , 3 ; move 3 , ul - ua )  
[2318] ( move ua , 4 + 3 ; move ul , ul )  | ( move 0 , 3 ; move ua , 4 ; move ul , ul )  | ( move ua , 4 + 3 ; move ul , ul ; pen 0 )  | ( move 0 , 4 + 4 ; move ua , 0 - ul ; move ul , ul )  
[2319] ( move 2 - ua , 4 ; move ul , ul )  | ( move ul , ua + 2 ; move ua - 2 , 2 )  | ( ( move ul , 4 / 2 ; move ua - 2 , 2 ) ; pen ul )  
[2320] ( move ul , ul ; move 4 , ua - 2 )  | ( move ul , ul ; move 2 * 2 , ua - 2 )  | ( move ul , ul ; move 4 , ua - 2 ; pen 2 )  | ( move ul , ul ; move 4 , 2 - 4 ; move 0 , 3 + ul )  | ( move ul , ul ; move 4 , ul - 3 ; move 0 , ul / ua )  | ( pen ul ; move ul , ul - ua ; move 3 + ul , ul - 3 )  | ( ( move ul , ul ; move 3 + ul , ua - 2 ; pen ua ) ; pen 2 )  
[2321] ( move ua , 4 * 2 ; move ua , ul )  | ( move ua , 4 * 2 ; move ua , ua + ul )  | ( move 0 , 0 ; pen ua ; ( move ua , 4 + 4 ; move ua , ul ) )  
[2322] ( move ua + ul , 4 ; move 3 , ul )  | ( move ua , 3 + ul ; ( move ul , ua ; move 3 , ul ) )  
[2323] ( move ua - ul , ul ; move 2 , 4 )  | ( move ua - ul , ul ; ( move 2 , 4 ; v0 = ul ) )  | ( move ua - ul , ul ; ( move 2 , 4 ; pen ul / 2 ) )  
[2324] ( move ul , ul ; move 2 - ua , 4 )  | ( move 3 / 4 , ul ; move 2 - ua , 3 + ul )  | ( move ul , ul ; pen ua + ul ; move 2 - ua , 4 )  
[2325] ( move ua , ul / 2 ; move ul , 2 )  | ( move ua , ul / 2 ; move 2 - ul , 2 )  | ( move ua , 2 / 4 ; move ul , 3 - ul )  | ( pen ul ; move ua , 2 / 4 ; move ul , ua + 2 )  
[2326] ( move ul , ua ; move 3 - ua , 4 )  
[2327] ( move ua , ul ; move ul , 2 - 4 )  | ( move ua , ul ; move ul , ul - 3 )  | ( move ua , ul ; move ul , ua - 2 ; pen 0 )  | ( pen ua - 4 ; move ua , ul ; move ul , ul - 3 )  | ( pen ul ; ( move ua , ul ; move ul , 0 - 2 ) ; pen ua * 3 )  
[2328] ( move 3 , ua ; move ul - ua , 4 )  
[2329] ( move ua , ul - 4 ; move ua , 3 )  
[2330] ( move ua , ua / 3 ; move 2 , ul )  | ( move ua , ua / 3 ; v0 = 2 ; move v0 , ul )  
[2331] ( move ua , 2 ; move ul , ul / 2 )  | ( move ua , 3 - ul ; move ul , ul / 2 )  | ( move ua , 2 ; move 0 , 3 / ua ; move ul , 0 )  | ( pen ua * 2 ; move ua , 2 ; move ul , 3 / ua )  
[2332] ( move ua + 3 , 4 ; move ul , ul )  | ( move ua , 4 ; ( move 3 , ua ; move ul , ul ) )  | ( move ua , 4 - ua ; move 4 - ul , ua ; move ul , ua + ul )  
[2333] ( move ua , ua ; move 3 / 2 , ul )  | ( move ua , ua + ua ; move ua / 4 , ua + ul )  | ( move 0 , ua ; move ua , 0 ; move ua / 4 , ul )  | ( ( move ua , ua ; pen 0 ; pen ul ) ; move ua / 4 , ul )  | ( move ua , ua * 2 ; ( pen ul ; move ua / 4 , ul ; pen 2 ) )  
[2334] ( move ua + 4 , ul ; move ua , 4 )  | ( move ua + 4 , ul ; move ua , 4 - ua )  
[2335] ( move 3 - ua , ul ; move 3 , ul )  | ( move 3 - ua , ul ; move 3 , ul ; v0 = ua + 4 )  | ( move 3 - ua , ul ; move 3 , ua + ul ; v0 = ul )  | ( ( move 3 - ua , ul ; pen 3 ) ; move 3 , ul ; pen ul )  
[2336] ( move ul - 4 , 2 ; move ua , ul )  | ( move ul - 4 , 2 ; v0 = ua ; move ua , ul )  
[2337] ( move 3 , 2 / ua ; move ua , ul )  
[2338] ( move ua - 2 , ul ; move 4 , ul )  | ( pen ul ; move ua - 2 , ul ; ( move 3 , ul ; move ul , ua ) )  
[2339] ( move 3 , ul ; move ua - ul , 3 )  | ( move 3 , ul - ua ; move 4 + ul , 3 )  | ( pen 3 ; ( move 2 + ul , ul ; move ua - ul , ua + 3 ) )  
[2340] ( move ul , 3 ; move ua + ul , 4 )  | ( move ul , 3 ; move ua + ul , 4 ; pen 3 )  | ( move ul , 3 ; pen ua ; move ua + ul , 4 )  | ( move ul , 3 ; ( move ul , 4 ; move ua , 0 ) )  | ( move ul , 3 ; move 4 - 2 , 4 ; move ua - ul , ua )  | ( move ul , 3 - ua ; move ua , ua + 4 ; move ul , 0 )  
[2341] ( move ua , 3 ; move 4 , ua * ua )  
[2342] ( move ul , ul ; move 3 - ua , 3 )  | ( move ul , ul ; move 3 - ua , 3 ; pen ul / ua )  | ( v0 = 3 - ua ; move ul , ul ; move v0 , v0 )  
[2343] ( move ua + ul , ul ; move 3 , 4 )  | ( move ua + ul , ul ; pen 3 ; move 3 , 3 + ul )  | ( move ua + ul , ul ; ( pen ua ; move 3 , 4 ; v0 = ul ) )  
[2344] ( move ul , 4 ; move 2 - ua , ul )  | ( move ul , ua + 4 ; move 2 - ua , ul )  
[2345] ( move ua , ua - ul ; move 3 , 4 )  | ( move ua , ua - ul ; move 4 - ul , 4 )  | ( move ua , 0 - ul ; move 3 , 4 ; v0 = 3 )  
[2346] ( move 4 , ul ; move ul - ua , 2 )  | ( move 4 , ul ; move ul - ua , 3 - ul )  | ( pen ua ; move 4 , ul - ua ; move ul - ua , 2 )  
[2347] ( move ua , ul ; move 3 , 4 + ul )  | ( move ua , ua + ul ; move 3 , 4 + ul )  | ( move ua , ua + ul ; move 2 + ul , 4 + ul )  | ( move ua , ul ; move 0 , ul ; move 3 , 4 - ua )  | ( ( pen 3 ; move ua , ul ; move 3 , 4 + ul ) ; pen ua )  
[2348] ( move 2 , ua ; move ua , 4 / ua )  | ( move 2 , 0 ; move ua , 4 / ua ; pen 3 )  | ( move 2 , ua * 2 ; move 0 , 4 / ua ; move ua , ua )  
[2349] ( move 2 , ul ; move 4 + ul , ul )  | ( pen ul ; move 2 , ul ; move 4 + ul , ul )  | ( move ul + ul , ul ; move 4 + ul , ua + ul )  | ( move 3 - ul , ul ; move ul , ua + ul ; move 4 , 0 )  | ( move ul + ul , ul ; move 3 + 2 , ul ; v0 = ua / 2 )  
[2350] ( move 3 - ua , ua ; move ul , 4 )  | ( move 3 - ua , ua ; pen 3 ; move ul , 4 )  | ( move 3 - ua , ua ; v0 = ua + 4 ; move ul , v0 )  | ( move 3 - ua , ua ; move 4 - 3 , 4 ; v0 = ua * 3 )  
[2351] ( move ul , 4 ; move ul - ua , 2 )  | ( move ul , 4 ; move ul - ua , 2 ; move 0 , ul )  | ( move ul , 2 * 2 ; move ul - ua , 2 ; move 0 , ul )  
[2352] ( move 4 , ua ; move 3 , ua * ua )  | ( move 4 , 0 ; move 2 + ul , ua * ua )  | ( move 4 , ua * 3 ; move 3 , ua * ua )  | ( move 4 , 0 ; move 3 , ua * ua ; v0 = 0 )  | ( pen 2 ; move 4 , ua + ua ; move 3 , ua * ua )  
[2353] ( move 4 + ul , ul ; move ul , 2 )  | ( move 3 + 2 , ul ; move ul , ua + 2 )  | ( move 4 + ul , ua + ul ; move ul , 2 )  | ( move 4 + ul , ul ; move ul , ul + ul )  | ( move 4 + ul , ul ; move ul , 2 ; pen ul )  | ( move 3 + 2 , ul ; v0 = ul ; move v0 , 2 )  | ( move 4 + ul , ul ; pen ua ; move ul , ua + 2 )  | ( move 4 + ul , ul ; move ul , 2 ; pen ua - ul )  | ( ( move 3 , ul ; move ul + ul , 0 ) ; move ul , 2 )  | ( move 2 , ul ; move 2 + ul , ua ; move ul , ul + ul )  | ( move 4 + ul , ul ; ( v0 = ua - 3 ; move ul , 2 ) )  | ( move ul , ul ; ( move 4 , 0 ; v0 = 2 ; move ul , 2 ) )  
[2354] ( move 3 - ua , ul ; move ua , 4 )  | ( move 0 - 3 , ua + ul ; move ua , 4 )  | ( move ul - 4 , ua + ul ; move ua , 4 )  | ( move ul - 4 , ul ; move ua , ua + 4 )  
[2355] ( move ua , 2 - 4 ; move ul , ul )  | ( move ua , ua - 2 ; move ul , ul )  | ( move ua , ul - 3 ; move ul , ul )  | ( move ua , 0 - 2 ; move ul , ul ; v0 = ul )  | ( move ua , ul - 3 ; move ul , ul ; move 0 , ua )  | ( move 0 , ua ; move ua , ul - 3 ; move ul , ul )  | ( move ua , ul - 3 ; v0 = ul ; move v0 , v0 )  | ( move ua , ua - 2 ; move ul , ul ; v0 = ua + ul )  | ( ( pen ul ; move ua , ua - 2 ; move ul , ul ) ; v0 = ul )  
[2356] ( move ua - 3 , 4 ; move ua , ul )  | ( move ua - 3 , 4 ; move ua , ua + ul )  | ( move ul / 3 , 2 * 2 ; move 3 , ua ; move ua , ul )  | ( move ua - 3 , 4 ; ( move ua , ul ; pen 2 ; v0 = ua ) )  
[2357] ( move 0 , ul / 4 ; move ua , ul )  | ( move 0 , ua + ul ; move ua , ul / 4 )  | ( v0 = ua / 3 ; move ua , v0 * v0 )  | ( move 0 , ua ; move 0 , ul / 4 ; move ua , ul )  | ( move 0 , ul ; v0 = ul ; move ua , ul / 4 )  | ( v0 = ul / 4 ; move ua , ul + v0 ; pen v0 )  | ( move 0 , ul ; ( pen ul ; move ua , ul / 4 ; pen 4 ) )  | ( v0 = ul ; v1 = v0 / 4 ; move ua , ul + v1 )  
[2358] ( move ua , ua ; move 4 + ul , 4 )  | ( move ua , ua ; move 3 + 2 , 3 + ul )  | ( move ua , 0 ; move 3 , 4 ; move 2 , ua )  | ( move ua , ua ; move ul , 4 ; move 4 , ua )  | ( move ua , ua ; v0 = 4 ; move ul + v0 , v0 )  
[2359] ( move ua , ua - 4 ; move ua , 4 )  
[2360] ( move ua - ul , ul ; move 3 , 3 )  | ( move 4 + ul , ul ; move 3 , 2 + ul )  | ( move 4 , ul ; move ul , 0 ; move 3 , 3 )  
[2361] ( move ua , ul ; move ul , 4 + 3 )  | ( move ua , ul ; move ul , 2 / 3 )  | ( move ua , ul ; move ul , 3 / 4 )  | ( move ua , ul ; move ul , ul / 2 )  | ( move ua , ul ; move ul , 4 / ua )  | ( move ua , 2 - ul ; move ul , 4 + 3 )  | ( move ua , ul ; pen ua ; move ul , 4 + 3 )  | ( move ua , ul ; move ul , 4 + 3 ; pen ul )  | ( move ua , ul ; move ul , 2 / 3 ; pen ua )  | ( v0 = ua ; move ua , ul ; move ul , 4 / v0 )  | ( pen ul / ua ; ( move ua , ul ; move ul , 3 / 4 ) )  | ( move ua , ul ; v0 = 4 + 4 ; move ul , 4 * v0 )  
[2362] ( move 3 , 4 + ul ; move ua , ul )  | ( move 3 , 4 + ul ; move ua , ua + ul )  | ( move 3 , 4 + ul ; move ua , ul ; pen ua )  
[2363] ( move 3 , ua - 4 ; move ua , ul )  
[2364] ( move 4 + ul , ua ; move ua , 4 )  | ( move 4 + ul , ua ; move ua , 4 ; pen ul )  | ( pen ul ; move 4 + ul , ua ; move ua , 4 )  | ( move ul , ua ; ( move 4 , ua ; move ua , 4 ) )  | ( move 3 , 0 ; move ul + ul , ua ; move ua , 4 - ua )  | ( move 4 + ul , ua * 4 ; ( pen ul ; move ua , 4 ) )  | ( move 4 + ul , ua ; move ul , 4 ; move ua - ul , 0 )  | ( ( move 3 , 0 ; move ul + ul , ua ) ; move ua , 4 ; pen ul )  
[2365] ( move ua - 4 , 3 ; move ua , ul )  
[2366] ( move ul , 4 ; move ua - 2 , ul )  
[2367] ( move 3 , 2 ; move ua , ul / ua )  | ( move 3 , 2 ; move ua , ul / ua ; v0 = ul / ua )  
[2368] ( move ul , ua ; move ua , 3 * 3 )  
[2369] ( move ua , 3 ; move ul , 4 + ul )  | ( move 0 , ua ; move ua , ua + 3 ; move ul , 3 + 2 )  | ( move ua , 3 ; move ul , 4 + ul ; v0 = ua + ul )  
[2370] ( move 4 - ua , 3 ; move ua , ul )  | ( move 0 - ua , 4 ; move ua - 4 , 0 - ul )  | ( move 4 - ua , 3 ; ( move ua , ul ; v0 = ua ) )  
[2371] ( move ua - ul , 3 ; move ua , 4 )  | ( pen ul ; move ua - ul , 3 ; ( move ua , 4 ; move 0 , ul ) )  
[2372] ( move 4 + ul , ua ; move 3 , ul )  | ( move 4 + ul , ua * 3 ; move 3 , ul )  | ( move 4 + ul , ua ; move ua - 3 , ul )  | ( ( move 3 + 2 , 0 ; move 3 , ul ) ; pen ul + ul )  | ( move 4 + ul , ua ; move 3 , ul ; v0 = ul / 4 )  | ( ( move 4 + ul , 0 ; v0 = ul ) ; move v0 + 2 , ul )  
[2373] ( move 3 , ua * ua ; move 3 , ul )  | ( v0 = ul ; move 3 , ua * ua ; move 3 , v0 )  
[2374] ( move ua - ul , 4 ; move 2 , ul )  | ( move ua - ul , 4 ; move 2 , ul ; move 0 , ul )  
[2375] ( move ua , ul - 4 ; move ul , 2 )  | ( move ua , ua - 3 ; move ul , ul + ul )  | ( move ua , ul - 4 ; v0 = ua ; move ul , 2 )  
[2376] ( move ua , 4 + ul ; move 3 , ul )  | ( move ua , 4 + ul ; move 3 , ua + ul )  | ( move 0 , 4 ; move ua , ul ; move 3 , ul )  | ( move 0 , ua + 2 ; move ua , 3 ; move 3 , ul )  
[2377] ( move ul , 2 ; move 4 + ul , ul )  | ( move 2 - ul , 2 ; move 4 + ul , ul )  | ( move ul , ua + 2 ; move 4 + ul , ul )  | ( move ul , ul + ul ; move 4 + ul , ul )  | ( ( move ul , 2 ; move ua / 2 , ul ) ; move 2 , ua )  | ( move ul , 3 - ul ; move ul , ul ; move 3 + ul , 0 )  | ( move ul , 2 ; ( move 4 + ul , ul ; v0 = 4 + ul ) )  | ( move ul , 4 / 2 ; move ul + ul , ul ; move 2 + ul , 0 )  | ( move ul , ul + ul ; ( move ul + ul , ul ; move 3 , ua ) )  
[2378] ( move ua , ul ; move 4 + ul , 3 )  | ( move ua , ul ; move ua - ul , 3 )  | ( move ua , ul ; move ua - ul , 3 - ua )  | ( pen ua + 2 ; move ua , ul ; move 3 + 2 , 3 - ua )  | ( ( move ua , ul - ua ; v0 = 3 ) ; move 4 + ul , v0 )  
[2379] ( move 3 , ua * ua ; move ua , 4 )  
[2380] ( move ul , 3 ; move ua , 4 + ul )  | ( move ul , 3 ; move 0 , 4 ; move ua , ul )  | ( move ul , 3 ; ( move 0 , 4 ; move ua , ul ) )  | ( move ul , 3 ; move ua , 4 + ul ; v0 = ul )  
[2381] ( move ul , ua / 3 ; move ua , 2 )  | ( move ul , ua / 3 ; move ua , 2 - ua )  | ( move ul , ua / 3 ; move ua , 2 ; pen ul )  
[2382] ( move 4 - ua , ul ; move 2 , ul )  | ( move 4 - ua , ua + ul ; move 2 , ul )  | ( move 4 - ua , ul ; move 3 - ul , ua + ul )  | ( ( move 4 - ua , ul ; move 2 , ul ) ; pen ua )  | ( ( v0 = 2 ; move 4 - ua , ul ) ; move v0 , ul )  
[2383] ( move 2 , 3 / ua ; move ua , ul )  | ( pen ua ; move 2 , 3 / ua ; move ua , ul )  | ( move 2 , 3 / ua ; move ua , ul - ua ; pen 0 )  
[2384] ( move ua , ua ; move 2 , ul / 3 )  | ( move ua , 0 ; move 2 , 2 / ua ; pen 2 )  
[2385] ( move 3 - ua , 4 ; move ua , ul )  
[2386] ( move ua , 4 + ul ; move ua , 4 )  | ( move ua , 4 + ul ; pen ua ; move ua , 4 )  
[2387] ( move ua , 3 / ua ; move ua , 3 )  | ( move ua , 3 / ua ; move ua , 2 + ul )  | ( move ua , ul / 3 ; move ua , ua - 3 )  
[2388] ( move ul , ul - 4 ; move ua , 2 )  | ( move 0 - ua , ua - ul ; move 0 - ul , 4 )  | ( pen ul ; ( move ul , ua - 3 ; move ua , 3 - ul ) )  
[2389] ( move 4 , 3 ; move ua , ua - ul )  | ( move 3 + ul , 3 ; move ua , 3 - 4 )  | ( move 4 , 4 - ul ; move ua , 0 - ul )  | ( move ul , 0 ; move 4 , 3 ; move ua , ua - ul )  | ( move 4 , 3 ; move ua , 0 - ul ; v0 = ua / 4 )  | ( ( move 0 , 3 ; pen ul ; move 4 , ua ) ; move ua , 2 - 3 )  
[2390] ( move 2 , ul ; move 2 , ul / ua )  
[2391] ( move 3 - ua , 3 ; move ul , ul )  | ( ( move 3 - ua , 3 ; pen ua * 4 ) ; move ul , 2 - ul )  
[2392] ( move 3 , ul ; move ua , 4 + ul )  | ( move 2 + ul , ul ; move ua , 4 + ul )  | ( move 4 - ul , ul ; move ua , 4 + ul )  | ( move 3 , ul ; move ua , 3 + 2 ; pen 0 )  | ( move 3 , ul ; move 0 , 4 ; move ua , ul )  | ( move 2 + ul , ul ; ( move ua , 4 + ul ; pen 0 ) )  
[2393] ( move ul , 3 ; move ul - ua , 3 )  | ( move ul / 4 , 2 + 2 ; move ua , 2 )  | ( move 2 / ua , 4 + ul ; move ua , ul )  | ( move ul / 4 , 4 ; move ua , 2 ; v0 = ul / ua )  
[2394] ( move 4 , ul ; move ua - ul , 2 )  | ( move 4 , ul - ua ; move ua - ul , 2 )  | ( move 4 , ul ; v0 = ul ; move ua - v0 , 2 )  
[2395] ( move ua , ul ; move ua , 4 + 4 )  | ( move ua , ul ; move ua , 4 * 2 ; pen ul )  
[2396] ( move 4 + ul , ul ; move ua , 3 )  | ( move ua - ul , ul - ua ; move ua , 2 + ul )  | ( ( move ul , ul ; move 4 , ua ) ; move ua , 3 )  | ( move 3 , ul ; move 4 / 2 , ua * 4 ; move ua , 3 )  
[2397] ( move ua , ul ; move 2 , 3 / ua )  | ( move ua , ul ; move 4 / 2 , 2 / 4 ; pen ul )  | ( ( move ua , ul ; move 2 , 3 / ua ) ; v0 = 3 )  
[2398] ( move ua , ul ; move 2 , 4 / ua )  
[2399] ( move ul , 2 ; move 3 , ul / ua )  | ( move ul , 2 ; move 0 - 3 , ul - 4 )  | ( move ul , 3 - ul ; move 3 , ul / ua ; move 0 , ul - ua )  
[2400] ( move ua , ul / ua ; move 2 , 4 )  | ( move ua , ul / ua ; move 0 , 4 - ua ; move 2 , ua )  | ( move ua , ul / ua ; move 2 , ua + 4 ; v0 = ul )  
[2401] ( move 2 , ul ; move ua , 4 / ua )  | ( move 2 , ua + ul ; move ua , 4 / ua )  | ( move 2 , ul ; pen 2 ; move ua , 4 / ua )  
[2402] ( move ua + 4 , ul ; move ul , 4 )  | ( v0 = ua + 4 ; move v0 , ul ; move ul , v0 )  | ( move ua + 4 , ul ; pen 2 + ul ; move ul , ua + 4 )  | ( ( move ua + 4 , ul ; pen ua ) ; move ul , 3 + ul )  | ( move 4 , ul ; ( move ua , 0 ; pen ua ) ; move ul , 4 )  | ( ( move ua + 4 , ul ; move ul , 4 ) ; move 0 , ua / 4 )  | ( pen 2 ; move ua + 4 , ul ; ( pen 4 * 2 ; move ul , 4 ) )  
[2403] ( move 3 , 4 ; move ua - ul , ul )  | ( ( move 3 , 4 ; pen 3 - ul ) ; move ua - ul , ul )  | ( ( move 3 , ua + 4 ; move ua - ul , ul ) ; pen ul )  
[2404] ( move 3 , ul ; move ua - ul , 4 )  
[2405] ( move ul , 4 + 4 ; move ua , ul )  | ( move ul , 4 * 2 ; move 0 , ul - ua ; move ua , 0 )  | ( move ul , 4 * 2 ; move ua , ul ; v0 = 3 - ul )  
[2406] ( move 4 , ul ; move ul - ua , 3 )  | ( move 4 , 2 - ul ; move ul - ua , 3 )  
[2407] ( move 4 , 3 ; move ul - ua , ul )  | ( move 4 , 3 ; move ul - ua , ua + ul )  
[2408] ( move ua , ul ; move 4 - ua , 4 )  | ( v0 = 4 - ua ; move ua , ul ; move v0 , v0 )  | ( v0 = 4 ; move ua , ul ; move v0 - ua , v0 )  
[2409] ( move ua , ul ; move 2 / 3 , ul )  | ( move ua , ul ; move 4 / ua , ul )  | ( move ua , 2 - ul ; move ul , 2 / ua )  | ( move ua , ul ; move 4 / ua , ua + ul )  | ( pen 3 ; move ua , ul ; move 4 / ua , ul )  | ( move ua , ul ; v0 = ul / 3 ; move ul , v0 )  
[2410] ( move 3 - ua , ul ; move ul , 4 )  | ( move ul - 4 , ul ; ( move ul , 4 ; v0 = 3 ) )  
[2411] ( move ua , 4 ; move ua , ul - 4 )  | ( move ua , 3 + ul ; move ua , ua - 3 )  | ( move ua , 4 ; move ua , ul - 4 ; pen ul )  
[2412] ( move ul , ua ; move 3 , 3 / ua )  | ( move ul , 0 ; move ua - 3 , 2 / 4 )  | ( move ul , ua * 2 ; move 3 , 3 / ua )  | ( move ul , ua * 2 ; move 2 + ul , 3 / ua )  
[2413] ( move ua + ul , 4 ; move ul , 4 )  | ( move ua + ul , 4 ; move ul , ua + 4 )  | ( move 2 + ul , 4 ; move 4 , 0 ; move ul , 4 )  | ( move ua , 4 ; ( move ul , ua ; move ul , 4 ) )  
[2414] ( move 4 + ul , 3 ; move ul , ul )  | ( move 3 + 2 , 3 ; move ul , ul - ua )  | ( move 4 + ul , 3 ; move ul , ua + ul )  | ( move 4 + ul , 3 - ua ; move ul , ul )  | ( move ul , 3 ; move 4 , ua ; move ul , ul )  | ( move 4 , 3 ; move ul , ua ; move ul , ul )  | ( move 4 + ul , 3 ; pen ua ; move ul , ul )  | ( move 4 + ul , 3 ; move ul , ul ; move 0 , ul )  | ( move 4 + ul , 3 ; move ul , ul ; v0 = ua )  | ( move 4 + ul , ua + 3 ; move ul , ul ; pen ul )  | ( v0 = ul ; move 4 + v0 , 2 + ul ; move ul , ul )  | ( pen 3 ; pen ul ; ( move 4 + ul , 3 ; move ul , ul ) )  | ( v0 = ua - 2 ; ( move 4 + ul , 3 ; move ul , ul ) )  | ( pen ul ; ( ( move ul , 3 ; move 4 , ua ) ; move ul , ul ) )  
[2415] ( move ua , 4 ; move ul , 4 + ul )  | ( move ua , 3 + ul ; move ul , 4 + ul )  | ( move ua , 4 ; move 0 , 3 ; move ul , 2 )  | ( move ua , 4 ; v0 = ua ; move ul , 4 + ul )  | ( pen 3 ; move ua , 4 ; ( pen ul ; move ul , 3 + 2 ) )  | ( move 0 , ul ; ( move ua , 3 ; move ul , 4 + ul ) ; pen 4 )  | ( ( pen 4 + ul ; pen ua ; move ua , 4 ) ; move ul , 3 + 2 )  
[2416] ( move 4 , 2 ; move ua , ul / ua )  
[2417] ( move ul , 3 ; move ua , ua / 3 )  | ( ( move ul , ua + 3 ; move 0 , 0 ) ; move ua , ua / 3 )  
[2418] ( move ua , 2 ; move ul / 3 , ul )  | ( move ua , 3 - ul ; move ul / 4 , ul )  | ( v0 = ul / 4 ; move ua , 2 ; move v0 , ul )  | ( move ua , 2 ; v0 = ul / 2 ; move v0 , v0 )  
[2419] ( move ul , ua ; move 3 , ua / 3 )  
[2420] ( move 3 / 2 , ul ; move ua , ul )  | ( move ua / 4 , ul ; move ua , ul )  | ( move ua / 4 , ul - ua ; move ua , ul )  | ( pen 3 ; move ua / 4 , ul ; move ua , ul )  | ( move 3 / 2 , ul ; move ua , ul ; v0 = 3 )  | ( pen ua ; ( move 3 / 2 , ul ; pen ul ) ; move ua , ul )  | ( move ul , ua + ul ; ( move ul / 2 , 0 ; move ua , ul ) )  
[2421] ( move 3 , ul ; move ua , ua / 3 )  | ( move 3 , ul ; ( pen 3 ; move ua , ua / 3 ) ; pen 2 + ul )  
[2422] ( move 3 , 2 / ua ; move ul , ul )  | ( move 3 , ul / 3 ; move ul , ul )  | ( move 3 , ul / 3 ; move ul , ua + ul )  | ( move 4 - ul , ul / 3 ; move ul , 3 - 2 )  | ( move 2 + ul , ul / 3 ; move ul , ul - ua )  | ( pen ua ; move 2 + ul , 2 / ua ; move ul , ul - ua )  
[2423] ( move ul - 4 , ul ; move 2 , ul )  | ( move ul - 4 , ul ; move 3 - ul , ul )  | ( move ul - 4 , ul - ua ; move ul + ul , ul )  | ( move 0 - 3 , ul ; move 3 - ul , ul ; v0 = 4 )  
[2424] ( move ua , 4 + ul ; move ul , 4 )  | ( move ua , 4 + ul ; move ul , ua - 2 )  | ( move ua , 4 + ul ; v0 = ul ; move ul , 4 )  | ( ( move ua , 4 + ul ; move ul , 4 ) ; v0 = ua + ua )  
[2425] ( move ul , 4 ; move ua + ul , 4 )  | ( move ul , 3 + ul ; move ua + ul , 4 )  | ( move ul , 4 ; move ua + ul , 3 + ul )  | ( move ul , 4 ; move ua + ul , ua + 4 )  | ( pen ua + ul ; move ul , 4 ; move ua + ul , 4 )  | ( pen ua / 4 ; move ul , 4 ; move ua + ul , 3 + ul )  | ( ( move ul , 4 ; move ua + ul , ua + 4 ) ; pen ua )  | ( ( v0 = 4 ; move ul , v0 ) ; move ua + ul , 4 )  | ( ( move ul , 4 ; move ua + ul , ua + 4 ) ; pen ua + 4 )  | ( move 0 , 4 ; ( pen 3 ; move ul , 0 ; move ua + ul , 4 ) )  
[2426] ( move ul , ul ; move 3 - ua , 4 )  
[2427] ( move ul , ul / 2 ; move ua , 3 )  | ( move ul , ul / 2 ; v0 = ua ; move v0 , 3 )  | ( pen ua ; ( move ul / 2 , ul / 2 ; move ua , 2 + ul ) )  
[2428] ( move ul , 4 + ul ; move 3 , ul )  | ( move ul , 4 + ul ; move ua / 2 , ul )  | ( move ul , 4 + ul ; move 4 - ul , ul )  | ( pen ua + 3 ; move 2 - 3 , 2 ; move 3 , 4 )  | ( ( move ul , 3 + 2 ; move 3 , ul ) ; v0 = ul )  | ( ( move ul , 4 + ul ; move 3 , ul ; v0 = ua ) ; pen ul )  
[2429] ( move 4 , ua ; move ul , ua - 4 )  | ( move 4 , ua ; move 2 - ul , ua - 4 )  | ( pen ul ; move 4 , ua ; move ul , ua - 4 )  | ( move 2 * 2 , ua ; move ul , 0 - 4 ; pen ua )  | ( move 3 + ul , ua ; move ul , ua - 4 ; v0 = ua )  
[2430] ( move ua , ul / 4 ; move ua , 2 )  | ( pen ua ; move ua , ul / 4 ; move ua , 2 )  | ( ( pen ul ; move ua , ul / 4 ) ; move ua , 2 )  
[2431] ( move 3 , 2 ; move ul , ul / ua )  | ( pen 4 ; move 4 , 2 ; move ul / ua , ul )  | ( move 3 + ul , ul + ul ; move ul / ua , ul )  | ( move ul , 0 - ul ; pen 0 ; ( pen ua ; move 3 - ua , 3 ) )  
[2432] ( move ul , ul / ua ; move 3 , 2 )  | ( move ul , ul / ua ; move 3 , 2 ; pen ul )  | ( move ul , ul / ua ; v0 = 2 + ul ; move v0 , 2 )  
[2433] ( move ul , 2 / ua ; move 3 , ul )  | ( move ul , 2 / ua ; move 3 , 2 - ul )  | ( move ul , ul / 3 ; move 3 , ul ; pen ul )  | ( move ul , ul / 3 ; v0 = ul ; move 3 * v0 , v0 )  | ( move ul , ul / 3 ; ( pen ua + 2 ; pen 2 ) ; move 3 , ul )  
[2434] ( move 4 + ul , ua ; move 4 , ul )  | ( move 4 , ua ; move ul , ua ; move 4 , ul )  | ( move ul , ua ; move 4 , 0 ; move 4 , ul - ua )  | ( move 4 + ul , ua ; pen 2 + ul ; move 4 , ul )  | ( ( move 3 + 2 , 0 ; pen 3 - ul ) ; move 4 , ul )  | ( pen 4 - 3 ; move 4 + ul , ua * 4 ; move 4 , ul )  | ( move 4 + ul , 0 ; ( pen ul ; move 3 + ul , ul ) )  | ( ( pen ul ; move 4 , ua ; move ul , ua ) ; move 4 , ul )  | ( move 3 + 2 , 0 ; ( v0 = 3 + ul ; move v0 , ul ) )  | ( move 0 , ua - ul ; move 4 + ul , ul ; move 3 + ul , ul )  
[2435] ( move 4 , ua - ul ; move 3 , ul )  | ( move 3 + ul , 3 - 4 ; move 3 , ul )  | ( move 3 + ul , ua - ul ; move 3 , ul )  | ( move ul , 2 - 3 ; move 3 , 0 ; move 3 , ul )  | ( move 4 , ua - ul ; move 3 , ul ; pen ul / 2 )  | ( move 4 , ua - ul ; move 2 , ul ; move ul , ua )  | ( move 4 , ua - ul ; ( pen 4 + 2 ; move 3 , ul ) )  | ( move 4 , ul - 2 ; ( pen 2 ; move 2 , ul ) ; move ul , ua )  
[2436] ( move ua + ul , ul ; move 4 , 4 )  | ( move ua + ul , ua + ul ; move 4 , 4 )  | ( pen 4 ; move ua + ul , ul ; move 4 , 4 )  | ( move ua + ul , ul ; move 0 , ul ; move 4 , 3 )  | ( move ua + ul , ul ; ( move 3 + ul , 4 ; pen 3 ) )  | ( ( move ua + ul , ul ; move 4 , 4 ) ; move 0 - ul , ul )  
[2437] ( move ul , ua ; move 4 , 2 / ua )  | ( move ul , ua ; pen 3 + 2 ; move 3 + ul , 2 / ua )  
[2438] ( move ul , 2 / ua ; move ua , 4 )  
[2439] ( move ul , ul ; move ua - 3 , 4 )  | ( move ul , ul ; pen ul ; move ua - 3 , 2 + 2 )  
[2440] ( move 4 , ua - ul ; move ul , 3 )  | ( move 4 , ul - 2 ; move ul , 4 - ul )  | ( v0 = 4 ; move ul , ul + v0 ; move 4 , v0 * v0 )  
[2441] ( move ul , ul ; move 3 , ul - 3 )  | ( move ul , ul - ua ; move 3 , 0 - 2 )  | ( move ul , ul ; move 2 + ul , ua - 2 )  | ( move ul , ul ; move 2 + ul , ul - 3 )  | ( move ul , ul ; move 3 , ul - 3 ; pen 0 )  | ( pen ul ; move ul , ul ; move 3 , ul - 3 )  | ( pen 3 / ua ; move ul , ul ; move 3 , ul - 3 )  | ( move 2 - 3 , ua - 2 ; v0 = 3 ; move 3 , ul )  | ( ( move ul , ul ; v0 = 3 ) ; move v0 , ul - v0 )  
[2442] ( move ua , 2 ; move ul , ua / 4 )  | ( move ua , 2 ; v0 = ua / 4 ; move ul , v0 )  
[2443] ( move ul , 2 ; move ua , ua / 4 )  | ( move ul , 2 ; move ua , ua / 4 ; pen 2 )  | ( move ul , 2 ; pen ua ; move ua , ua / 4 )  
[2444] ( move 4 , ua - ul ; move ua , 4 )  | ( move 4 , ul - 2 ; move ua , 3 + ul )  | ( move 4 , ua - ul ; move ua , ua + 4 )  | ( move 4 , ua - ul ; move ua , 4 - ua )  | ( v0 = ul - 3 ; ( move 4 , ul + v0 ; move ua , 4 ) )  
[2445] ( move ul , ul - 3 ; move 3 , ul )  | ( move 0 , ua - 2 ; ( move ul , 0 ; move 3 , ul ) )  | ( move ul , ua - 2 ; v0 = 2 + ul ; move v0 , ul )  
[2446] ( move 4 + ul , ul ; move ua , 4 )  | ( move 2 , ul ; move 3 , 0 ; move ua , 4 )  | ( pen 2 ; move 4 + ul , ul ; move ua , 4 )  | ( pen 4 ; move 4 + ul , ul ; move ua , 4 )  | ( move 4 + ul , ul ; move ua , 4 ; pen ua )  | ( pen ua ; move 4 + ul , ul ; move ua , 4 )  | ( pen ul ; move 4 + ul , ul ; move ua , 4 )  | ( move 4 + ul , ul ; move ua , 4 ; move 0 , ul )  | ( ( pen 2 ; move 4 + ul , ua + ul ) ; move ua , 4 )  | ( ( move ul , ul ; move 4 , ua ; pen 2 ) ; move ua , 4 )  
[2447] ( move 4 , ua ; move ua - ul , 4 )  | ( move 4 , 0 ; move ua - ul , ua + 4 )  | ( move 4 , ua ; move ua - ul , 2 + 2 )  | ( move 4 , 0 - ua ; move ua - ul , 4 ; v0 = 3 + ul )  
[2448] ( move ul - ua , ul ; move 4 , 3 )  | ( move ul - ua , ul ; move 3 + ul , 3 )  | ( move ul - ua , ul ; move 4 , 3 - ua )  
[2449] ( move ua , ul ; move ul - 4 , 3 )  | ( move 3 , 4 ; move ua , ul / ua )  | ( move 3 , 3 + ul ; move ua , ul / ua )  | ( move 3 , 3 + ul ; pen ul ; move ua , ul / ua )  
[2450] ( move ua , ua / 3 ; move ua , 4 )  
[2451] ( move ul - ua , ua ; move 4 , 4 )  | ( move ul - ua , ua ; move 4 , 4 ; v0 = ul )  | ( move 3 , ua + ua ; move ul - ua , ua ; move 4 , 4 )  | ( move ua , ua ; ( move ul - ua , ua ; move 4 , 4 ) )  | ( pen ua + ul ; move ul - ua , ua ; move 4 , ua + 4 )  
[2452] ( move 3 , 3 / ua ; move ua , ul )  
[2453] ( move 4 , ua - 4 ; move ua , ul )  
[2454] ( move ul , ua * ua ; move 4 , 3 )  | ( move ul , ua * ua ; move 4 , 2 + ul )  | ( move ul , ua * ua ; move ua - 2 , 3 ; v0 = 2 + ul )  
[2455] ( move ul , 4 ; move ua , ul - 3 )  | ( move 0 - ul , ul ; move ua , ul )  | ( move ul - 2 , ul ; move ua , ul )  | ( pen 4 ; move ul , 4 ; move ua , ul - 3 )  | ( move ul - 2 , ul ; pen ul ; move ua , ul )  
[2456] ( move ul , 3 * 3 ; move ua , ul )  | ( ( pen ua - 2 ; move ul , 3 * 3 ) ; move ua , ul )  
[2457] ( move ul , ul ; move ua , 3 / 2 )  | ( move ul , ul ; move ua , 3 / 2 ; pen 0 )  | ( move ul , ul ; ( pen ul ; move ua , 3 / 2 ) )  
[2458] ( move ul , ua ; move 4 , 4 + ul )  | ( move ul , ua * 2 ; pen 3 ; move 4 , 4 + ul )  | ( move ul , 0 ; v0 = 4 ; move v0 , ul + v0 )  | ( move ul , ua + ua ; move 4 , 3 + 2 ; v0 = 4 + 3 )  
[2459] ( move ua + 4 , 4 ; move ul , ul )  | ( move ua + 4 , 4 ; move ul , ua + ul )  | ( move ua + 4 , 3 + ul ; move ul , ul )  | ( move ua , 4 ; move 4 , ua ; move ul - 2 , 4 )  | ( move ul , ul ; move ua + 4 , 3 ; move ul , ul )  
[2460] ( move ua , ul / 3 ; move ul , 2 )  | ( move ua , ul / 3 ; pen ul ; move ul , 2 )  
[2461] ( move 3 , ul ; move ul , 2 / ua )  | ( move 3 , ul ; move ul , ul / 3 )  | ( move 3 , ul ; move ul , ul / 4 )  | ( move 2 + ul , ul ; move ul , ul / 3 )  | ( move 4 - ul , ul ; move ul , ul / 4 )  | ( move ua / 2 , ua + ul ; move ul , ul / 4 )  
[2462] ( move ua , 4 ; move 2 , ul / ua )  | ( move ua , 4 ; pen 3 ; move 4 - ua , 0 - 3 )  
[2463] ( move ul , 4 ; move ua , 2 / ua )  | ( move ul , 3 + ul ; move ua , ul / 3 )  | ( move ul , ua + 4 ; move ua , ul / 3 )  | ( pen ua - 2 ; move ul , 4 ; move ua , ul / 3 )  | ( move ul , 4 - ua ; move ua , ul / 3 ; pen ua )  | ( v0 = ul ; move v0 , 4 ; move ua , v0 / 3 )  | ( v0 = ul ; move v0 , 3 + ul ; move ua , v0 / 3 )  
[2464] ( move ul , 3 ; move 4 , ua * ua )  
[2465] ( move 3 , ul ; move 4 + ul , ul )  | ( move 3 , ul ; move 3 + 2 , ua + ul )  | ( pen 3 ; move 3 , ul ; move 3 + 2 , ul )  | ( move 3 , ul ; move 3 + 2 , ul ; pen 4 )  | ( move 3 , ul ; move 4 , ul ; move ul , ua )  | ( move 2 + ul , ul ; move 4 + ul , ul ; pen ul )  | ( move 2 , ul ; move ul , 0 ; move 4 + ul , ua + ul )  | ( move 3 , ua + ul ; move 3 + 2 , ua + ul ; pen ul )  | ( ( move 3 , ul ; move 4 , ul ; move ul , 0 ) ; pen 4 )  | ( move 4 - ul , 2 - ul ; move 4 + ul , ul ; v0 = 0 )  | ( move 3 , ul ; move 4 + ul , ua + ul ; v0 = ua + ua )  
[2466] ( move 4 - ua , ua ; move 4 , ul )  | ( move 4 - ua , 0 ; move 3 + ul , ul )  | ( move 4 - ua , 0 ; pen ua ; move 4 , ul )  | ( move ul , ua ; ( move 4 - ua , ua ; move 3 + ul , ul ) )  
[2467] ( move 4 , ul ; move ua , 4 + ul )  | ( move 4 , ul ; move ua , 4 + ul ; pen 0 )  | ( move 3 + ul , ul ; move 0 , 4 + ul ; move ua , 0 )  | ( pen ul ; move 4 , ul ; ( pen 3 ; move ua , 4 + ul ) )  | ( ( move 4 , ul ; pen ul ) ; move ua , 4 + ul ; move ul , 2 )  
[2468] ( move ua , 4 ; move ul , 2 / ua )  | ( move ua , 2 * 2 ; move ul , ul / 3 )  | ( move ua , 4 ; move ul , ul / 3 ; v0 = 3 )  | ( move 2 , ua + ul ; pen ua / 4 ; move ul - ua , 3 )  | ( v0 = ua ; ( move v0 - 4 , ul ; move ul - ua , 3 ) )  | ( ( pen 3 ; move ua , 4 ) ; move ul , 2 / ua ; move 0 , ul )  
[2469] ( move ul , ua / 4 ; move ua , 2 )  
[2470] ( move ua , ul ; move 3 / 2 , ul )  | ( move ua , ul ; move ua / 4 , ul )  | ( move ua , ul ; move 3 / 2 , ua + ul )  | ( move ua , ul - ua ; move ua / 4 , ua + ul )  | ( move ua , ul ; move ua / 4 , ul ; v0 = 3 )  | ( move ua , ul ; move ua / 4 , ul ; pen 3 - 4 )  | ( move ua , ul ; move ua / 4 , ul ; move 0 , ul )  | ( ( v0 = ua ; move v0 , ul ) ; move v0 / 4 , ul )  | ( ( move ua , ul ; move ul / 2 , ul ) ; pen 3 ; move ul , 0 )  
[2471] ( move 3 , ul ; move 4 - ua , ul )  | ( move 3 , ul ; v0 = ua ; move 4 - ua , ul )  | ( ( move 3 , ul ; move 4 - ua , ul ) ; move 2 , 0 )  
[2472] ( move ua , 2 / ua ; move 4 , ul )  | ( move ua , 2 / ua ; move 4 , ua + ul )  
[2473] ( move 4 , ul ; move 3 , ua - ul )  | ( move 3 + ul , ul ; move 3 , ul - 2 )  | ( move 4 , ul ; move 4 - ul , 0 - ul )  | ( move 4 , ul - ua ; move 3 , ua - ul )  | ( move 3 + ul , 2 - ul ; move 3 , ua - ul )  | ( move 4 , ul ; v0 = 3 ; move v0 , v0 - 4 )  
[2474] ( move 3 , ua ; move 3 , ul / ua )  | ( move 3 , 0 ; move ua / 2 , ul / ua )  | ( move 2 , 0 ; move ul , ua ; move 3 , ul / ua )  | ( move 4 - ul , 0 ; move 3 , ul / ua ; pen ua - ul )  
[2475] ( move 2 , ua ; move ua , ul / 4 )  
[2476] ( move ua , ul - 4 ; move 3 , ul )  | ( move ua , ua - 3 ; pen 3 ; move 3 , ul )  | ( move ua , ul - 4 ; v0 = ul ; move 3 , v0 )  | ( ( move ua , ua - 3 ; pen 3 ) ; move 3 , ul ; pen 0 )  
[2477] ( move 4 , ul ; move ul - 2 , ul )  | ( move 3 + ul , ul ; move 0 - ul , ul )  | ( pen 3 + ul ; move 4 , ul ; move 0 - ul , ul )  | ( pen ua + ua ; move 4 , ul ; move 0 - ul , ul )  | ( pen 3 ; move 4 , ul ; ( move 0 - ul , ua + ul ; pen 3 ) )  
[2478] ( move ua , 4 ; move 4 - ua , ul )  | ( pen ua * 4 ; ( move ua , 4 ; move 4 - ua , ul ) )  
[2479] ( move ua , 4 + 4 ; move ul , ul )  | ( move ua , 4 * 2 ; move ul , ul )  | ( pen 3 ; move ua , 4 + 4 ; move ul , ul )  | ( move ua , 4 + 4 ; move ul , ul ; pen ul / ua )  | ( move ua , 4 * 2 ; v0 = ul ; move v0 , v0 )  | ( move 0 , 4 ; move ua , 3 + ul ; move 2 - ul , ul )  | ( ( move ua , 4 + 4 ; move 2 - ul , ul ) ; pen 4 - ul )  
[2480] ( move ul , 2 / 3 ; move ua , ul )  
[2481] ( move ua , 4 ; move 4 , ua * ua )  | ( move 0 , 4 ; move ua , 0 ; move 4 , ua * ua )  
[2482] ( move 4 , ul - 3 ; move ua , ul )  | ( move 4 , 2 - 4 ; ( move ua , ul ; pen 4 ) )  
[2483] ( move 3 , ua - ul ; move 4 , ul )  | ( move 2 + ul , ua - ul ; move 4 , ul )  | ( move 3 , 2 - 3 ; move 3 + ul , ul ; pen ul )  | ( move ul , ua - ul ; move 2 , 0 ; move 4 , ul )  | ( move 3 , ua - ul ; move 4 , ul - ua ; v0 = ul )  
[2484] ( move ul , 4 ; move 3 - ua , ul )  | ( move ua / 2 , 4 + ul ; move ul , 3 - ul )  
[2485] ( move 3 , ul ; move 4 , ua * ua )  | ( move 4 - ul , ul ; move 4 , ua * ua )  | ( pen ul ; move 3 , ul - ua ; move 4 , ua * ua )  
[2486] ( move 2 , ul ; move ua , ua / 4 )  | ( move ul + ul , ul ; ( move ua , ua / 4 ; v0 = ua ) )  
[2487] ( move ua , ua ; move 3 , 4 / ua )  | ( move 4 , 0 ; move ua - 4 , 0 ; move 3 , 4 / ua )  
[2488] ( move 4 + 3 , ul ; move ul , ul )  | ( move ua + ul , ul ; move ul , ul )  | ( move 4 + 3 , ul ; move ul , ua + ul )  | ( move 3 , ul ; move 4 , 0 ; move ul , ul )  | ( move 4 + 3 , ul ; move ul , ul ; pen 3 )  | ( move 4 , ul ; move 3 , ua * 4 ; move ul , ul )  | ( move ua + ul , ul ; move ul , ul ; v0 = 0 )  | ( pen ul ; ( move 4 + 3 , ul ; move ul , ua + ul ) )  
[2489] ( move ul , ul ; move ua , 2 / 3 )  | ( move 0 , ul ; move ul , ua ; move ua , 2 / 3 )  | ( move ul , ua + ul ; move ua , 2 / 3 ; pen 3 )  | ( pen ua ; ( move 3 / 4 , 2 / 3 ; move ua , ul - ua ) )  
[2490] ( move ua , ul / ua ; move 3 , 3 )  | ( move ua , ul / ua ; move 3 , 3 - ua )  | ( move 4 - ul , ua ; move 4 + 2 , ul - 4 )  | ( move ua , ul / ua ; v0 = 3 ; move v0 , v0 )  | ( move 2 + ul , ua ; v0 = ul - 4 ; move ua , v0 )  
[2491] ( move ul , 4 ; move ua , 4 + ul )  | ( move ul , ua + 4 ; move ua , 3 + 2 )  | ( move ul , 3 + ul ; move ua , 4 + ul )  | ( move ul , 4 ; move ua , 4 + ul ; pen 2 )  | ( ( move ul , 4 ; move ua , 4 + ul ) ; pen ul )  | ( move ul , 4 ; ( move ua , 4 + ul ; v0 = 2 ) )  
[2492] ( move ul - ua , 3 ; move ul , 4 )  | ( move ul - ua , 3 - ua ; move ul , 4 )  
[2493] ( move ua / 4 , ul ; move ua , 2 )  | ( move 3 / 2 , ul ; move ua , ua + 2 )  | ( move ua / 4 , ul ; move ua , ul + ul )  | ( pen ua ; move ua / 4 , ul ; move ua , 2 )  | ( ( pen ul ; move 3 / 2 , ul ) ; move ua , 2 ; v0 = 0 )  
[2494] ( move ua , 4 / ua ; move 2 , ul )  | ( move ua , 4 / ua ; move ul + ul , ul )  | ( move ua , 4 / ua ; move ul + ul , ul ; v0 = 2 + ul )  
[2495] ( move ul / 2 , 3 ; move ua , ul )  | ( move 3 / ua , 3 ; move ua , ul - ua )  | ( move 3 / ua , 3 ; move ua , ul ; pen ul )  | ( v0 = ua ; move 3 / v0 , 3 ; move ua , ul )  
[2496] ( move ul , ul ; move ua , 4 * 2 )  | ( move ul , ul - ua ; move ua , 4 * 2 )  
[2497] ( move 4 , ul ; move ua - 4 , ul )  | ( move 4 , ul ; v0 = ul ; move ua - 4 , v0 )  
[2498] ( move 4 , ua * ua ; move 4 , ul )  | ( move 4 , ua * ua ; ( move 3 , ul ; move ul , ua ) )  
[2499] ( move ua , ul ; move 3 , ul / 3 )  | ( move ua , ul ; move 3 , ul / 3 ; pen ul )  | ( move ua , ul ; pen 4 + 3 ; move 3 , ul / 3 )  | ( ( move ua , ul ; pen 2 ) ; move 3 , ul / 3 )  
[2500] ( move ul , ul ; move ua , 4 * 3 )  | ( pen ul ; move ul , ul ; move ua , 4 * 3 )  | ( move ul , ul ; move ua , 4 * 3 ; pen 3 - ua )  
[2501] ( move 4 , ul ; move 4 - ua , ul )  | ( move 2 * 2 , ul ; move 4 - ua , ul )  | ( v0 = ua ; move 4 , ul ; move 4 - v0 , ul )  | ( v0 = 4 ; ( move v0 , ul ; move v0 - ua , ul ) )  
[2502] ( move 4 * 2 , ul ; move ul , ul )  | ( move ua + 2 , ul ; move ul , ul )  | ( move 4 * 2 , ul ; pen ul ; move ul , ul )  | ( ( move 4 + 4 , ul ; pen 4 ) ; move ul , ul )  | ( move 2 , ul ; move 3 * 2 , ua ; move ul , ul )  | ( move ul , ul ; move ua + ul , ua ; move ul , ul )  | ( move 4 * 2 , ul ; ( move ul , ul ; v0 = 2 ) )  | ( move 4 + 4 , 2 - ul ; move ul , ul ; pen ua + ul )  | ( move ua + 2 , ul ; v0 = ul ; move v0 * v0 , ul )  
[2503] ( move 2 , ul / ua ; move 4 , ul )  | ( move 2 , ul / ua ; move 3 + ul , ul )  | ( move ul , ul / ua ; move ul , ua ; move 4 , ul )  | ( move 2 , ul / ua ; v0 = ul ; move 4 , v0 )  | ( move 2 , ul / ua ; move 0 , ul ; move 2 + 2 , 0 )  
[2504] ( move 4 , 4 ; move ul , ua * ua )  
[2505] ( move 2 , ul / 4 ; move ua , ul )  | ( move 2 , ul / 4 ; move ua , 2 - ul )  | ( move 2 , ul / 4 ; move ua , ul ; pen ua )  | ( move 2 , ul / 4 ; move ua , ul ; v0 = 2 )  | ( move 2 , ul / 4 ; v0 = ua ; move v0 , ul )  | ( pen ul ; ( pen 2 ; move ul + ul , ul / 4 ; move ua , ul ) )  
[2506] ( move ua , 4 ; move 3 / ua , ul )  | ( move ua , 2 * 2 ; move ul / 2 , ul - ua )  | ( move 0 , 4 ; move ua , ua ; move 3 / ua , ul )  | ( move ua , 2 * 2 ; move ul / 2 , ul ; pen ua )  
[2507] ( move ua - 4 , ul ; move 4 , ul )  | ( ( move ua - 4 , ul ; move 3 , ul ) ; move ul , ua )  
[2508] ( move ul , ul ; move 3 , ul - 4 )  | ( move 3 - ua , 2 - 4 ; move 2 , 0 )  | ( move ul , ul ; move 3 , ul - 4 ; pen 3 )  | ( move ul , ul ; move 3 , ua - 3 ; pen ul )  | ( move ul , ul ; move 2 + ul , ua - 3 ; pen 0 )  
[2509] ( move ul , ua ; move 3 , 4 / ua )  | ( move ul , ua ; move 3 , 4 / ua ; v0 = ua )  
[2510] ( move ul - ua , ul ; move 4 , 4 )  | ( move 0 , ua ; move ul - ua , ul ; ( move 4 , 4 ; pen ul ) )  
[2511] ( move ua , 4 / ua ; move 3 , ul )  
[2512] ( move 4 , ul / ua ; move 2 , ul )  
[2513] ( move 3 , ua / 4 ; move ua , ul )  | ( pen ua ; move 3 , ua / 4 ; move ua , ul )  
[2514] ( move ul , ul ; move 4 + ul , 4 )  | ( move ul , ul ; move 4 + ul , 3 + ul )  | ( move ul , ul ; move 2 , 4 ; move 3 , ua )  | ( move ul , ul ; move 4 + ul , 4 ; move 0 , ua )  | ( v0 = ul ; move v0 , v0 ; move ua - v0 , 4 )  | ( pen 4 ; move ul , ul ; ( move 2 , 3 + ul ; move 3 , 0 ) )  
[2515] ( move ul , 3 ; move 3 , ul / ua )  | ( move ul , 3 ; pen ul + ul ; move 3 , ul / ua )  | ( move ul , 3 ; move 2 , ul / ua ; move ul , ua * 3 )  | ( ( move ul , 2 + ul ; pen ua ) ; move 3 , ul / ua )  | ( pen 3 + 2 ; move ul , 4 - ul ; move 2 + ul , ul / ua )  
[2516] ( move ua , 2 / 4 ; move ul , ul )  | ( move ua , ul / 2 ; move ul , ul )  | ( move ua , 3 / ua ; move 2 - ul , ul )  | ( move ua , ul / 2 ; move ul , ul - ua )  | ( move ua , ul / 2 ; move ul , ul ; pen 0 )  | ( pen 2 ; ( move ua , ul / 2 ; move ul , ul ) )  | ( move ua , ul / 2 ; move 0 , ul ; move ul , ua )  | ( move ua , 2 / 4 ; move ul , ul ; v0 = ua + ul )  
[2517] ( move 3 , ul ; move 3 , ul / ua )  | ( move 3 , ul ; move ua / 2 , ul / ua )  
[2518] ( move ul , ul - 4 ; move 3 , ul )  | ( move ul , ua - 3 ; move ua / 2 , ul )  | ( move ul , ua - 3 ; move 3 , ul ; v0 = 4 + ul )  
[2519] ( move ua , 3 ; move ua / 4 , ul )  | ( ( move ua , 3 ; move ua / 4 , ul ) ; pen 3 )  | ( move ua , 3 ; ( move ua / 4 , ua + ul ; v0 = ul ) )  
[2520] ( move ua , 3 / ua ; move 4 , ul )  | ( move ua , 3 / ua ; move 3 + ul , ul )  
[2521] ( move ul , ul / ua ; move 4 , 2 )  | ( move ul , ul / ua ; move 3 + ul , ua + 2 )  
[2522] ( move ul / 2 , 4 ; move ua , ul )  | ( move 3 / ua , 4 ; move ua , ul )  | ( move 2 / 4 , 4 ; ( v0 = ul ; move ua , v0 ) )  
[2523] ( move ua , ua / 4 ; move ul , 3 )  | ( move ua , ua / 4 ; move 4 / ua , 3 )  
[2524] ( move ul - 4 , 4 ; move ua , ul )  | ( move 0 - 3 , 3 + ul ; move ua , ul )  | ( move 0 - 3 , 4 - ua ; move ua , ul ; v0 = ul )  
[2525] ( move 4 + ul , 4 ; move ul , ul )  | ( move ua - ul , 4 ; move ul , ul )  | ( move 3 + 2 , 3 + ul ; move ul , ul )  | ( move 4 + ul , 3 + ul ; move ul , ul )  | ( pen 4 ; move 4 + ul , 4 ; move ul , ul )  | ( move 3 + 2 , 4 ; v0 = ul ; move v0 , v0 )  | ( move 4 + ul , ua + 4 ; move 0 , 0 ; move ul , ul )  | ( ( move 4 + ul , 4 ; v0 = ul ) ; move ul , v0 )  | ( v0 = 3 + ul ; move ul + v0 , v0 ; move ul , ul )  
[2526] ( move ul , ua * ua ; move 4 , 4 )  | ( move ul , ua * ua ; move 3 , 4 ; move ul , ua )  | ( move ul , ua * ua ; v0 = 4 ; move v0 , v0 )  
[2527] ( move ua , ul / 4 ; move ul , 2 )  | ( move ua , ul / 4 ; pen 2 ; move ul , ul + ul )  
[2528] ( move ul , ul ; move 3 , ul / 2 )  | ( move ul , ul ; move 3 , 2 / 4 ; move 0 , ua )  | ( move ul , ul ; move 2 + ul , 2 / 4 ; pen 2 )  | ( move ul , ul ; move 0 , ul / 2 ; move 3 , ua )  | ( move ul , ul ; move 2 , ul / 2 ; move ul , ua )  | ( move 2 - ul , ul ; ( move 3 , ul / 2 ; v0 = ua ) )  
[2529] ( move 4 , ul ; move ua / 2 , ul )  | ( pen ua ; ( move 4 , ul ; move ua - 3 , ul ) )  
[2530] ( move ul - ua , 4 ; move ul , 4 )  | ( move ul - ua , 4 ; move 2 - ul , 4 - ua )  | ( move ul - ua , ua + 4 ; move ul , 3 + ul )  | ( move ul - ua , 2 + 2 ; ( move ul , 4 ; v0 = 0 ) )  
[2531] ( move ua , ul ; move ul , 4 * 3 )  | ( move ua , ua + ul ; pen ul ; move ul , 4 * 3 )  
[2532] ( move 4 , ul / ua ; move ul , 2 )  
[2533] ( move 4 , 4 ; move ua - ul , ul )  | ( move 3 + ul , 4 ; move ua - ul , ul )  
[2534] ( move 4 , 4 + ul ; move ul , ul )  | ( move 3 + ul , 3 + 2 ; move ul , ul )  | ( move 3 + ul , 4 + ul ; move ul , ul )  | ( v0 = 4 ; move v0 , 4 + ul ; move ul , ul )  | ( move 4 , 3 + 2 ; v0 = ul ; move v0 , v0 )  | ( move 4 , 4 + ul ; ( move 4 - 3 , ul ; pen 2 + ul ) )  | ( move 3 + ul , 4 + ul ; v0 = ul ; move v0 , v0 )  | ( ( move 4 , 4 + ul ; move ul , ul ; pen 2 ) ; v0 = ul )  
[2535] ( move ua , 4 * 3 ; move ul , ul )  | ( move ua , 4 * 3 ; move ul , ul ; v0 = 0 )  | ( ( move ua , 4 * 3 ; move ul , ul ) ; pen 0 )  | ( ( move ua , 4 * 3 ; move ul , ul ; pen ul ) ; v0 = 0 )  
[2536] ( move 3 , 3 / ua ; move ul , ul )  | ( move 3 , ul / 2 ; move ul , ua + ul )  | ( move ua - 3 , ul / 2 ; move ul , ul )  | ( move 3 , 3 / ua ; move ul , ul ; pen ua )  | ( move 3 , 2 / 4 ; ( v0 = ul ; move ul , v0 ) )  
[2537] ( move ua , ul ; move 3 , ua / 4 )  | ( move ua , ul ; move 2 + ul , ua / 4 ; move 0 , 0 )  
[2538] ( move 4 , ul ; move ul - ua , 4 )  | ( move 2 + 2 , ul ; move ul - ua , 4 )  | ( move 4 , ul ; move ul - ua , 4 ; v0 = 0 )  | ( move 4 , ul ; move ul - ua , 4 ; v0 = ul )  | ( move 4 , ul ; move ul - ua , 4 ; v0 = ua / 3 )  | ( pen 4 * 3 ; move 4 , ua + ul ; move ul - ua , ua + 4 )  
[2539] ( move ua , ul / 3 ; move 3 , ul )  | ( move ua , ul / 3 ; v0 = 3 ; move 3 , ul )  | ( move ua , ul / 3 ; pen ua ; move 2 + ul , ul )  
[2540] ( move 3 , ul / ua ; move ua , 4 )  | ( move ua , ul - ua ; move 3 , ua - 4 )  
[2541] ( move 4 , ua ; move ul - 4 , ul )  | ( move 3 + ul , ua ; move ul - 4 , ul )  | ( ( move 4 , ua + ua ; pen 2 ) ; move ul - 4 , ul )  
[2542] ( move 4 , 3 / ua ; move ua , ul )  | ( pen 4 ; move 4 , 3 / ua ; move ua , ul )  | ( move 0 , ua ; move 4 , 3 / ua ; move ua , ul )  
[2543] ( move ul , ua ; move 3 , ua / 4 )  | ( move ul , 0 ; move 2 + ul , ua / 4 )  | ( move ul , 0 ; pen ua ; move 3 , ua / 4 )  | ( move ul , ua ; pen 2 ; move 3 , ua / 4 )  | ( move ul , 0 ; ( pen ul ; pen ua ; move 4 - ul , ua / 4 ) )  
[2544] ( move ua , ul / 4 ; move ua , 3 )  | ( move ua , ul / 4 ; move ua , 3 ; pen 4 )  
[2545] ( move 4 , ul ; move ul , 4 + ul )  | ( move 4 , ul ; move ul , 4 + ul ; pen 0 )  | ( move 4 , ul ; v0 = 4 + ul ; move ul , v0 )  | ( move 3 + ul , ul ; pen ua + ul ; move ul , 4 + ul )  
[2546] ( move 4 , ul - 3 ; move ul , ul )  | ( move 4 , ul - 3 ; move 2 - 3 , 0 - 2 )  | ( move 3 + ul , ua - 2 ; ( pen ua - 3 ; move ul , ul ) )  
[2547] ( move ul , ul ; move 4 * 2 , ul )  | ( move ul , ul ; move ua + 2 , ul )  | ( move ul , ul ; move 4 + 4 , ua + ul )  | ( pen 4 ; move ul , ul ; move 4 * 2 , ul )  | ( pen ul ; move ul , ul ; move 4 + 4 , ul )  | ( move 3 - 2 , ul ; pen ul ; move 4 + 4 , ul )  | ( move ul , ul ; move ua - ul , ul ; move 3 , 0 )  | ( move ul , ul ; move ua + ul , ul ; move ul , ua )  | ( v0 = ul ; move v0 , ul ; move 4 * 2 , v0 )  | ( move ul , ul ; move ua + 2 , ul ; v0 = ua * ua )  | ( ( pen ul ; move ul , ul ) ; move ua , ul ; move 2 , 0 )  | ( pen ul ; ( move ul , ul ; move ua + 2 , ul ) ; pen ua * 4 )  
[2548] ( move ul , ul / 4 ; move ua , 2 )  | ( move ul , ul / 4 ; move ua , ul + ul )  
[2549] ( move ul , 2 ; move 4 , ul / ua )  | ( move ul , 2 ; move 4 , ul / ua ; v0 = 2 )  | ( move ul , 2 ; move 2 * 2 , ul / ua ; pen ul )  | ( ( move ul , 2 ; pen ul ) ; v0 = ul ; move 4 , ul / ua )  
[2550] ( move ul , 3 ; move ua , 4 / ua )  | ( move ul , 2 + ul ; move ua , 4 / ua )  | ( move ul , 3 ; move ua , 4 / ua ; move 0 , 2 )  
[2551] ( move 3 , 4 / ua ; move ua , ul )  | ( move 3 , 4 / ua ; move ua , ua + ul )  | ( move 3 , 4 / ua ; v0 = ua + 2 ; move ua , ul )  
[2552] ( move ul / 3 , 3 ; move ua , ul )  | ( move ua , 4 ; move ul / 3 , ul )  | ( move ua , 4 ; move ul / 3 , ul - ua )  | ( move 2 / ua , 3 ; pen ul ; move ua , ul )  | ( move ua , 4 ; move ul / 3 , 4 - 3 ; pen 0 )  | ( ( move ul / 3 , 3 ; move ua , ul ) ; pen 0 )  
[2553] ( move 4 , ul ; move 4 , ua * ua )  
[2554] ( move ul , ul / 2 ; move ua , 4 )  | ( move ul , 3 / ua ; move ua , 4 ; pen 3 )  | ( move ul , 3 / ua ; move ua , 4 ; v0 = 2 )  
[2555] ( move ul , 4 * 3 ; move ua , ul )  | ( move ul , 4 * 3 ; move ua , ul ; pen ul )  | ( move ul , 4 * 3 ; move ua , ul ; v0 = 3 * 2 )  
[2556] ( move 4 , ua - 4 ; move ul , ul )  | ( move ul , 0 ; v0 = 0 - 4 ; move v0 , v0 )  
[2557] ( move ua , ul / 2 ; move ul , 4 )  | ( pen ua ; move ua , ul / 2 ; move ul , 4 )  | ( move ua , ul / 2 ; move ul , 4 ; pen ul )  | ( move ua , ul / 2 ; move ul , 4 ; pen ul - ua )  
[2558] ( move ul , 2 / 4 ; move ua , ul )  | ( move ul , ul / 2 ; move ua , ua + ul )  
[2559] ( move ul , ua ; move 4 , ua / 3 )  | ( move ul , 0 ; move 3 + ul , ua / 3 )  | ( ( move ul , ua ; pen 4 ) ; pen ul ; move 4 , ua / 3 )  
[2560] ( move ul , 3 ; move ua , ul / 3 )  | ( move ul , ua + 3 ; move ua , 2 / ua )  | ( move ua , ul / ua ; move ul , 4 + 2 )  | ( move 2 - ul , 3 ; move ua , ul / 3 ; v0 = ua )  
[2561] ( move ul / ua , 2 ; move 4 , ul )  | ( move ul / ua , ul ; move 2 * 2 , 2 )  | ( move ul / ua , 2 ; move 3 + ul , ul )  | ( move ul - 4 , 3 ; move 2 - ul , 4 - ul )  | ( move ul / ua , ul - ua ; pen ua ; move 4 , 3 - ul )  
[2562] ( move ua , ua ; move 4 / 3 , ul )  
[2563] ( move ul , ul / 2 ; move 3 , ul )  | ( move ul , ul / 2 ; move 2 + ul , ul )  | ( move ul , ul / 2 ; move 2 + ul , ul ; pen ul )  | ( move ul , ul / 2 ; v0 = 3 ; move v0 , ul )  | ( ( move ul , ul / 2 ; move 2 , ul ) ; pen ul ; move ul , 0 )  
[2564] ( move ua , ul ; move 2 / 4 , ul )  | ( move ua , ul ; move 3 / ua , ul )  | ( move ua , ul ; move ul / 2 , ul )  | ( move ua , ul ; move ul , ul / 4 )  | ( move ua , ul ; move ul / 2 , 4 / ua )  | ( move ua , ul ; v0 = 0 ; move 3 / ua , ul )  | ( move ua , ul ; move 2 / 4 , ul ; pen ua * ua )  | ( pen 3 / ua ; move ua , ul ; move 3 / ua , ul )  | ( move ua , ul ; v0 = ul ; move v0 / 2 , v0 )  
[2565] ( move 3 * 3 , ul ; move ul , ul )  | ( move ua + ul , ul ; move ua / 4 , ua ; move ul , ul - ua )  
[2566] ( move 4 , 3 / ua ; move ul , ul )  | ( move 0 , ua ; move 4 , ul / 2 ; move ul , 4 - 3 )  | ( v0 = ul ; move v0 + 3 , 2 / 4 ; move v0 , v0 )  
[2567] ( move 4 , ua / 3 ; move ul , ul )  | ( move 4 , ua / 3 ; pen ua ; move ul , ul )  | ( pen ua ; move ul , 0 ; move 0 - 4 , ua / 3 )  | ( move 4 , ua / 3 ; ( v0 = ul ; move v0 , ul ) )  
[2568] ( move 3 , ul ; move ua , ul / 4 )  
[2569] ( move ul , 4 / 3 ; move ua , ul )  | ( move ul , 4 / 3 ; pen 2 ; move ua , ul )  
[2570] ( move ul , ul / 2 ; move 4 , ul )  | ( move ul , 3 / ua ; move 4 , ul ; pen ul )  
[2571] ( move ua , 4 / 3 ; move ul , ul )  
[2572] ( move ua , 4 ; move ua / 4 , ul )  | ( move ua , 4 ; move ua / 4 , ul ; pen 3 )  | ( move 0 , 4 ; move ua , 0 ; move ua / 4 , ul )  | ( move ua , 4 ; move 2 - ul , ul ; move ul / 2 , 0 )  
[2573] ( move ul , ul ; move 3 , 4 / ua )  
[2574] ( move ua , ul ; move 4 / 3 , ul )  | ( move ua , 2 - ul ; move 4 / 3 , ul )  | ( move ua , ul ; move 4 / 3 , ul ; v0 = ua )  
[2575] ( move 3 / 4 , ul ; move ua , ul )  | ( move ul / 2 , ul ; move ua , ua + ul )  | ( move 2 / 3 , ul ; move ua , ul ; pen ua )  | ( move ul / 2 , ul ; pen ul ; move ua , ua + ul )  | ( move 4 / ua , ul ; ( move ua , ul ; pen ul ) ; v0 = ul )  
[2576] ( move ul , 4 ; move ua , 4 / ua )  | ( pen ua ; move ul , 4 ; move ua , 4 / ua )  | ( pen 2 ; move ul - 2 , ul ; move 0 - ua , 2 / 4 )  
[2577] ( move ua , 3 / 4 ; move ul , ul )  
[2578] ( move 4 , ul ; move 3 , ul / ua )  | ( move 4 , ul ; move 2 + ul , ul / ua )  
[2579] ( move ua , ul ; move ul / 3 , 4 )  | ( move ua , ul ; move ul / ua , ua - 2 )  | ( move ua , ul ; move ul / ua , 4 + ul )  | ( move ua , ul ; move 2 / ua , 4 ; pen 0 )  | ( pen ul ; move 0 - ua , ua + ul ; move 2 / ua , 4 )  | ( move ua , ul ; ( pen ua ; move ul / 4 , 4 ) ; pen ul )  
[2580] ( move ul , ua ; move 3 , ul / 4 )  | ( move ul , ua ; pen 4 + 2 ; move 3 , ul / 4 )  | ( v0 = ua ; move ul , v0 ; move 3 , ul / 4 )  
[2581] ( move 3 , ul ; move ua / 4 , ul )  
[2582] ( move ul , 4 / ua ; move ua , 4 )  
[2583] ( move ul , ua / 4 ; move 3 , ul )  | ( pen ul ; move ul , ua / 4 ; move 3 , ul )  | ( move ul , ua / 4 ; move 3 , ul ; v0 = 4 )  | ( move ul , ua / 4 ; ( move 2 + ul , ul ; pen ul ) )  
[2584] ( move ua , ul / 3 ; move ul , 4 )  | ( move ua , ul / 3 ; move ua / 4 , 4 )  
[2585] ( move 4 , ul ; move ua , ua / 4 )  
[2586] ( move ul , ul / ua ; move 3 , 4 )  | ( move ul , ul / ua ; move 2 + ul , 4 )  | ( move ul , ul / ua ; pen ua ; move 3 , 4 )  | ( ( pen ua ; move ul , ul / ua ) ; move 2 + ul , 4 )  
[2587] ( move ua , ul ; move 4 / ua , 4 )  | ( move ua , ul ; move 4 / ua , 3 + ul )  | ( move ua , ul ; move ul , ua / 2 ; move ul , 3 )  
[2588] ( move ua , 3 ; move ul , ul / 4 )  | ( move ua , 3 ; move ul , ul / ua )  | ( move ua , ua + 3 ; move ul , ul / ua )  | ( move ua , 2 + ul ; move ul , ul / ua )  | ( move ul , 0 ; move 0 - ua , 3 ; v0 = 3 )  | ( ( pen ua ; move ua , 3 ) ; ( pen 3 ; move ul , 2 / ua ) )  
[2589] ( move ul , 4 / ua ; move 3 , ul )  | ( pen ua ; move ul , 4 / ua ; move 3 , ul )  | ( pen ul ; move ul , 4 / ua ; move 3 , ul )  
[2590] ( move 4 , ul / ua ; move ua , 4 )  | ( move 4 , ul / ua ; move ua , 4 ; pen ul )  
[2591] ( move ul , ua ; move 4 , ua / 4 )  
[2592] ( move ua , ul / 4 ; move 3 , ul )  | ( move ua , ul / 4 ; move 2 , ul ; move ul , 0 )  | ( ( move ua , ul / 4 ; pen ua ) ; move 3 , ul )  
[2593] ( move ul - 4 , 4 ; move ul , ul )  | ( move 0 - 3 , 4 ; move 3 - 4 , 4 ; v0 = ua * 3 )  
[2594] ( move ul / 3 , ul ; move ua , 4 )  | ( move ul / ua , 0 ; move ua , 4 + ul )  | ( move ul / 4 , ul ; pen 3 ; move ua , 4 )  | ( move ul / 4 , ul ; move 0 , ua ; move ua , ua + 4 )  
[2595] ( move 4 , ua ; move 4 , ul / ua )  
[2596] ( move ul , ul ; move 3 , ul / 3 )  | ( pen ua ; move ul , ul ; move 3 , ul / 3 )  
[2597] ( move ul , 3 ; move 4 , ul / ua )  
[2598] ( move ua , ua / 4 ; move ul , 4 )  
[2599] ( move 4 , 4 / ua ; move ul , ul )  
[2600] ( move ul , ul ; move 4 , ul / 3 )  | ( move ul , ul - ua ; move 4 , 2 / ua )  | ( move ul , ua + ul ; move 3 + ul , 2 / ua )  | ( move 0 , ua ; move ul , 3 - 2 ; move 4 , ul / 3 )  
[2601] ( move 4 , ul / ua ; move ul , 4 )  | ( move 4 , ul / ua ; move ul , 4 ; move 0 , 0 )  | ( move 4 , ul / ua ; ( pen ua ; pen ul ; move ul - 2 , ul ) )  
[2602] ( move 4 , ul ; move ul , ul / 3 )  | ( move 4 , ul ; pen ua ; move ul , 2 / ua )  | ( move 4 , ul ; pen ua ; move ul , ul / 3 )  | ( move 4 , ul ; ( pen 2 ; move ul , ul / 3 ) )  | ( move ul , ul ; move 2 + ul , ua ; move ul , 2 / ua )  
[2603] ( move 4 , ul / 3 ; move ul , ul )  | ( move 4 , ul / 3 ; move 0 , ul ; move ul , 0 )  | ( move 0 , 0 ; move 4 , ul / 3 ; move ul , ul )  | ( v0 = ul ; move 4 , ul / 3 ; move v0 , v0 )  | ( ( move 3 + ul , ul / 3 ; move ul , ul ) ; pen ul / ua )  | ( pen ul ; ( pen 2 + 2 ; move 4 , ul / 3 ) ; move ul , ul )  
[2604] ( move ul , ul ; move 4 , 4 / ua )  
[2605] ( move 4 , ul ; move ul , ua / 4 )  
[2606] ( move ul , ul / 4 ; move 3 , ul )  | ( move ul , ul / 4 ; move 3 , 2 - ul ; v0 = ul )  
[2607] ( move ua , ul / 4 ; move ul , 4 )  | ( move ua , ul / 4 ; pen 4 ; move ul , ul - 3 )  
[2608] ( move ul , ul / 3 ; move 4 , ul )  | ( ( move ul , ul / 3 ; move 4 , ul ) ; pen 0 )  | ( move 2 - ul , ul / 3 ; v0 = 4 ; move 2 * 2 , ul )  
[2609] ( move ul , ua / 4 ; move 4 , ul )  
[2610] ( move ua , ul / 4 ; move 4 , ul )  
[2611] ( move ul , 4 ; move ua , ul / 4 )  | ( move ul , 4 ; move ua , ul / 4 ; move ul / ua , 2 + ul )  
[2612] ( move ul , ul ; move 4 , ul / 4 )  | ( ( pen ua ; move ul , ul ) ; move 4 , ul / 4 )  
[2613] ( move ul , ul / 4 ; move 4 , ul )  | ( move ul , ul / 4 ; move 4 , 4 - 3 ; pen ua )  | ( pen 4 ; ( move ul , ul / 4 ; pen ua ; move 4 , ul ) )  
[2614] ( move 4 , ul / 4 ; move ul , ul )  | ( move 4 , ul / 4 ; move ul , ul ; pen ua + ul )  
[2615] ( move 4 , ul ; move ul / 4 , ul )  | ( move 4 , ul ; move ul / 3 , ua + ul )  | ( move 4 , ul - ua ; move ul / 4 , ul )  | ( move 4 , ul ; move ul / 3 , ul ; pen 4 )  | ( ( move 4 , ul ; move 2 / ua , ul ) ; pen 2 )  | ( move 4 , ul ; move 2 / ua , ul ; v0 = ua / 2 )  | ( move 3 + ul , ul ; move ul / 3 , ul ; v0 = 4 )  | ( pen ul / 4 ; move 3 + ul , ul ; move 3 / ua , ul )  | ( move 4 , ul ; ( move ul / 2 , ua + ul ; pen ul ) )  | ( v0 = ul ; move 4 , v0 ; move v0 / 3 , ul / v0 )  | ( pen ul ; ( move 4 , ul ; move 3 / ua , ul ; pen ul - 3 ) )  
[2616] ( move 2 , 2 ; pen 0 ; move 4 , 0 )  | ( move ul + ul , 2 ; pen 0 ; move 3 + ul , 0 )  
[2617] ( move 4 , 0 ; pen 0 ; move 4 , 0 )  | ( move 4 , 0 ; pen 4 - ua ; move 4 , ua )  | ( move 4 , 0 ; pen ul - ua ; move 4 , ua )  | ( move 4 , 0 ; ( pen 3 - ua ; move 4 , 0 ) )  | ( pen ul ; ( move 4 , ua ; pen 0 ) ; move 4 , ua )  
[2618] ( move 0 - ua , ua ; move ua , ul )  | ( move 0 - ua , ua ; move ua , ul ; v0 = ul )  | ( move 0 - ua , 0 ; v0 = ul ; move ua , v0 )  | ( move 0 - ua , 0 ; ( v0 = ul ; move ua , v0 ) )  | ( ( move 0 - ua , ua ; v0 = ua * 3 ) ; move ua , ul )  
[2619] ( move ul , 0 ; move ua , ua * ua )  | ( move ul , ua ; move ua , ua * ua )  | ( move ul , ua ; move ua , ua * ua ; pen 0 )  | ( move ul , ua ; pen 3 ; move ua , ua * ua )  | ( move ul , 0 ; v0 = ua ; move v0 , v0 * ua )  | ( v0 = ua ; move ul , v0 ; move ua , v0 * v0 )  | ( v0 = ua ; ( move ul , v0 ; move ua , ua * v0 ) )  
[2620] ( move 0 , ua * ua ; move ua , ul )  | ( v0 = ua + ul ; move ua , v0 * v0 )  | ( v0 = ul - ua ; move ua , v0 * v0 )  | ( v0 = ua - ul ; move ua , v0 * v0 )  | ( move ul , 0 ; move 0 , ul ; move ua , ua * ua )  | ( move 0 , ul ; move ua , ua * ua ; pen 4 + ul )  | ( move 0 , ua * ua ; v0 = ul / ua ; move ua , ul )  | ( v0 = ul - ua ; v1 = v0 ; move ua , v1 * v1 )  
[2621] ( move ua , ul ; move 0 - ua , ul )  | ( ( move ua , ul ; pen ua ) ; pen ua ; move 0 - ua , ul )  | ( move ua , ua + ul ; move 0 - ua , ul ; v0 = 3 - ua )  
[2622] ( move 0 - ua , ul ; move ua , ul )  | ( move 0 - ua , ua + ul ; move ua , ul )  | ( move 0 - ua , ul + ul ; move ua , ua - ul )  | ( v0 = 0 ; ( move v0 - ua , ul ; move ua , ul ) )  | ( v0 = 0 - ua ; move v0 , ua + ul ; move ua , ul )  
[2623] ( move ul , 0 ; move ua + ul , ul )  | ( move ul , ua ; move ua + ul , ul )  | ( move ul , 0 ; move ul , ul ; move ua , 0 )  | ( move ul , 0 ; move ua + ul , ul ; pen 3 )  | ( move ul , 0 ; move ul , ul ; move ua , ua )  | ( pen 2 ; move ul , ua ; move ua + ul , ul )  | ( move ul , ua ; move ul , ul ; move ua , ua )  | ( move ul , ua ; move ua , ul ; move ul , ua )  | ( pen ua ; move ul , ua ; move ua + ul , ul )  | ( move ul , ua + ua ; move ua + ul , ul - ua )  | ( move ul , 0 ; move ua + ul , ul ; v0 = ua )  | ( move ul , 0 ; ( pen ua ; move ua + ul , ul ) )  | ( move ul , ua ; move ua + ul , ul ; v0 = ul )  | ( move ul , ua ; pen ua + 4 ; move ua + ul , ul )  | ( pen 2 - ul ; move ul , ua ; move ua + ul , ul )  | ( move ul , ua * 4 ; move ua + ul , ul ; pen ul )  | ( move ul , ua ; move ua , ul ; move ul , ua + ua )  | ( v0 = ua ; move ul , 0 ; move v0 + ul , ul )  | ( move ul , 0 ; v0 = ua + ul ; move v0 , ul )  | ( move ul , 0 ; move ua - ul , ul ; move 3 - ul , 0 )  | ( move ul , 0 ; ( move ua + ul , ul ; v0 = ua ) )  | ( move ul , ua * 4 ; move ua + ul , ul ; v0 = 4 )  | ( ( pen 3 ; move ul , 0 ) ; move ua + ul , ul - ua )  | ( move ul , ua ; move 0 , 0 ; move ua + ul , ua + ul )  | ( pen ua + ul ; ( move ul , 0 ; move ua + ul , ul ) )  | ( move ul , ua ; move ua + ul , ul ; v0 = ua + ua )  | ( ( v0 = ul ; move ul , 0 ) ; move v0 + ua , v0 )  | ( move ul , ua ; ( v0 = ua + ul ; move v0 , v0 ) )  | ( v0 = ul ; ( move v0 , ua ; move ua + v0 , v0 ) )  | ( move ul , 0 ; move ua , ul ; ( move ul , ua ; pen ua + ul ) )  | ( ( move ul , ua ; pen ul ) ; move ua + ul , ul ; move 0 , ul )  
[2624] ( move ua - ul , 0 ; move ua , ul )  | ( move ua - ul , ua ; move ua , ul )  | ( move ua - ul , ua ; move ua , ul ; v0 = 3 )  | ( move ua - ul , 0 ; move ua , ua + ul ; pen 2 )  | ( move ua - ul , ua ; move ua , ul ; pen ua + 2 )  | ( pen ul ; ( move ua - ul , ua ; move ua , ul ) )  | ( move ua - ul , 0 ; v0 = ul ; move ua , v0 )  | ( move ua - ul , ua ; move ua , ul ; move 0 , 2 - 3 )  | ( move ua - ul , ua ; move ua , ul ; v0 = 2 / 3 )  | ( ( move ua - ul , 0 ; pen 0 ) ; pen ul ; move ua , ul )  | ( move ua - ul , ua ; move 0 , ua * 3 ; move ua , ua + ul )  | ( move ua - ul , ua ; ( move ua , ul ; pen ua * 2 ; pen 2 ) )  | ( pen ul ; ( move ua - ul , ua ; move 0 , ul ; move ua , ua ) )  
[2625] ( move ul - ua , 0 ; move ua , ul )  | ( move ul - ua , ua ; move ua , ul )  | ( move ul - ua , ua ; move ua , ul ; pen 0 )  | ( pen ul ; move ul - ua , 0 ; move ua , ul )  | ( move ul - ua , ua ; pen ua ; move ua , ul )  | ( move ul - ua , ua * 4 ; move ua , ul - ua )  | ( pen 2 ; ( move ul - ua , 0 ; move ua , ul ) )  | ( move ul - ua , ua ; v0 = ua ; move v0 , ul )  | ( move ul - ua , 0 ; move ua , ul ; v0 = 4 - ul )  | ( move ul , 0 ; move ul - ua , ua ; move ua , ua + ul )  | ( move ul - ua , ua ; v0 = ul ; ( move ua , ul ; pen 3 ) )  | ( move ul - ua , 0 ; pen 0 ; ( pen ua - ul ; move ua , ul ) )  
[2626] ( move ua , 0 ; move ul - ua , ul )  | ( move ua , ua ; move ul - ua , ul )  | ( move ua , ua * 4 ; move ul - ua , ul )  | ( move ua , ua ; move ul - ua , ua + ul )  | ( move ua , ua ; move ul - ua , ul - ua )  | ( move ua , 0 ; move ul - ua , ul ; v0 = 2 )  | ( ( move ua , 0 ; move ul - ua , ul ) ; pen ul )  | ( pen ua + ul ; move ua , 0 ; move ul - ua , ul )  | ( move ua , ua ; v0 = 2 ; move ul - ua , ul - ua )  | ( ( move ua , ua ; pen 2 ; pen 4 + 2 ) ; move ul - ua , ul )  
[2627] ( move ua + ul , ua ; move ua , 2 )  | ( move ua + ul , ua ; move ua , ul + ul )  | ( move ua + ul , ua ; move ua , 2 ; v0 = ul )  | ( move ua + ul , ua ; pen 2 ; move ua , 3 - ul )  | ( move ua + ul , ua ; move 0 , ul ; move ua , ul )  | ( v0 = ua ; move ua + ul , v0 ; move v0 , 2 )  | ( v0 = ua ; move ul + v0 , v0 ; move v0 , 2 )  | ( ( move ua , ua ; move ul , ua ) ; pen ua ; move ua , 3 - ul )  
[2628] ( move ul - ua , 0 ; move ul , ul )  | ( move ul - ua , ua ; move ul , ul )  | ( move ul - ua , 0 - ua ; move ul , ul )  | ( move ul - ua , ua ; move ul , 2 - ul )  | ( move ul - ua , ua ; move ul , ua + ul )  | ( v0 = 0 ; move ul - ua , 0 ; move ul , ul )  | ( move ul - ua , ua ; v0 = 2 ; move ul , ul )  | ( move ul - ua , ua ; move ul , ul ; v0 = 3 )  | ( move ul - ua , ua ; v0 = ul ; move v0 , ul )  | ( move ul - ua , ua ; v0 = ul ; move ul , v0 )  | ( move ul - ua , ua ; v0 = ul ; move v0 , v0 )  | ( v0 = ua ; move ul - v0 , v0 ; move ul , ul )  | ( move ul - ua , ua ; move ul , ul ; v0 = ua - 3 )  | ( move ul - ua , ua * 4 ; ( pen ul ; move ul , ul ) )  | ( ( move ul - ua , 0 ; v0 = ul ) ; move v0 , ul )  | ( ( move ul - ua , 0 ; move ul , ul ) ; v0 = 4 + 2 )  | ( move ul - ua , ua ; v0 = 2 - ul ; move v0 , v0 )  | ( v0 = ul - ua ; ( move v0 , ua ; move ul , v0 ) )  | ( v0 = ua ; move ul - ua , v0 ; move ul , ul + v0 )  | ( pen ul ; ( move ul - ua , ua ; move 0 , ul ; move ul , ua ) )  
[2629] ( move ua + ul , ul ; move ua , 2 )  | ( move ua + ul , ua + ul ; move ua , 2 )  | ( move ua + ul , ul ; move ua , 3 - ul )  | ( move ua , ul ; move ul , 0 ; move ua , 2 )  | ( move ua + ul , ul - ua ; move ua , ul + ul )  | ( move ua + ul , ul ; v0 = 2 ; move ua , 2 )  | ( pen 4 ; move ua + ul , ul ; move ua , ul + ul )  | ( move ua + ul , ul ; v0 = 2 ; move ua , v0 )  | ( move ua , ua + ul ; move 2 - ul , 0 ; move ua , 2 )  | ( move ua , ul ; ( move ul , ua * 3 ; move ua , 2 ) )  | ( ( move ua + ul , ul ; move ua , 2 ) ; v0 = ua )  | ( move 0 , ul + ul ; move ua + ul , ua - ul ; move ua , 2 )  | ( move ua + ul , ul ; pen 4 + 2 ; ( pen ul ; move ua , 2 ) )  
[2630] ( move ul , 0 ; move ua - ul , ul )  | ( move ul , ua ; move ua - ul , ul )  | ( move ul , 0 ; move ua - ul , 2 - ul )  | ( move ul , 0 ; move ua - ul , ul - ua )  | ( move ul , ua * 3 ; move ua - ul , ul )  | ( move ul , ua ; move ua - ul , ua + ul )  | ( move ul , ua ; move ua - ul , ul - ua )  | ( pen 3 ; move ul , ua ; move ua - ul , ul )  | ( move ul , ua ; pen 4 ; move ua - ul , ul )  | ( move ul , 0 ; move 4 , ul ; move 4 / 3 , ua )  | ( move ul , 0 ; move ua - ul , ul ; v0 = ul )  | ( move ul , 0 ; v0 = ul ; move ua - ul , ul )  | ( pen ua ; move ul , 0 ; move ua - ul , ul - ua )  | ( move ul , ua ; move ua - ul , ul ; pen ua * 4 )  | ( move ul , ua ; move ua - ul , ul ; v0 = ua + ul )  | ( move ul , ua ; move ua - ul , ul ; v0 = ua - ul )  | ( v0 = ul ; move ul , ua * 2 ; move ua - v0 , ul )  | ( pen 3 - 2 ; move ul , ua * 3 ; move ua - ul , 4 - 3 )  | ( v0 = ul ; move v0 , v0 - ul ; move ua - ul , v0 )  
[2631] ( move ul , ul ; move ua , 0 - ul )  | ( move ul , ul ; move ua , ul - 2 )  | ( move ul , ul ; move ua , ua - ul )  | ( move ua , ua / 2 ; move ul , ul ; pen 0 )  | ( pen ul ; move ul , ul ; move ua , 2 - 3 )  | ( move ul , ul ; move ua , ua - ul ; pen 0 )  | ( move 3 - 2 , ua + ul ; move ua , ua - ul )  | ( move ua , ua / 2 ; move ul , ul ; v0 = 4 )  | ( ( pen 2 ; move ul , ul ) ; move ua , ul - 2 )  | ( pen 4 + ul ; move ua , ua / 2 ; move ul , ul )  | ( move ul , ul ; ( pen 4 ; move ua , ua - ul ) )  | ( move ul , ul ; v0 = ul - 2 ; move ua , v0 )  | ( v0 = ul ; move v0 , ul ; move ua , v0 - 2 )  | ( move ul , ua + ul ; move ua , ua - ul ; v0 = ul )  | ( move ul , ul ; move ua , ua - ul ; v0 = ul + ul )  | ( move 2 - ul , ul ; v0 = ua - ul ; move ua , v0 )  | ( move ul , ul ; move ua , ul - 2 ; ( pen 4 ; pen ul ) )  
[2632] ( move ua - ul , ua ; move ua , 2 )  | ( move ua - ul , 0 ; move ua , 2 ; pen 3 )  | ( move ua - ul , ua ; move ua , 2 ; pen 4 )  | ( move ua - ul , ua ; move ua , 2 ; v0 = ua )  | ( move ua - ul , 0 ; pen ua ; move ua , 3 - ul )  
[2633] ( move ua , ua ; move ua - ul , 2 )  | ( move ua , ua ; pen 2 ; move ua - ul , 2 )  | ( pen ua ; move ua , ua ; move ua - ul , 2 )  | ( move ua , ua ; move 0 , ua ; move ua - ul , 2 )  | ( ( move ua , ua ; pen ul ) ; move ua - ul , 2 ; v0 = ul )  
[2634] ( move ua , ul ; move ua + ul , 2 )  | ( move ua , ul ; move ua + ul , ua + 2 )  | ( move ua , ul ; move ua + ul , 2 - ua )  | ( move ua , ul ; move ua + ul , 2 ; pen 0 )  | ( move ua , ul ; move ua , 2 ; move ul , ua )  | ( move ua , ul ; pen ua ; move ua + ul , 2 )  | ( move ua , ul ; ( move ul , 2 ; move ua , 0 ) )  | ( ( move ua , ul ; move ua + ul , 2 ) ; pen 3 )  | ( ( pen ua ; move ua , ul ) ; move ua + ul , 2 )  | ( pen ul ; move ua , ua + ul ; move ua + ul , 2 )  | ( v0 = 2 ; move ua , ul ; move ua + ul , v0 )  | ( move ua , ul ; move ua + ul , 2 - ua ; v0 = 3 )  | ( move ua , ul - ua ; move ua + ul , 2 ; v0 = ua )  | ( move ua , ua + ul ; v0 = ua + ul ; move v0 , ua + 2 )  | ( move ua , ul ; ( move ua , 2 ; pen 4 / ua ; move ul , ua ) )  
[2635] ( move ua , ul ; move 0 - ul , ul )  | ( move ua , ul ; move 3 / 4 , ul - 3 )  | ( move ua , ul ; move 2 - 3 , ul ; v0 = ua * ua )  
[2636] ( move 2 - ua , ua ; move ua , ul )  | ( move 2 - ua , 0 ; move ua , ul ; move 0 , 2 )  | ( move 2 - ua , ua ; move ua , ul ; v0 = ua + ul )  
[2637] ( move ul , 0 ; move ul - ua , ul )  | ( move ul , ua ; move ul - ua , ul )  | ( move 2 - ul , 0 ; move ul - ua , ul )  | ( move ul , ua ; move ul - ua , ul - ua )  | ( move ul , 0 ; pen ul ; move ul - ua , ul )  | ( move ul , 0 ; move ul - ua , ul ; pen ul )  | ( pen ua ; move ua - ul , ul ; move ul , 2 )  | ( move ul , ua + ua ; move ul - ua , ul - ua )  | ( move ul , 0 ; move ul - ua , ul ; v0 = 0 )  | ( move ua - ul , ul ; move ul , ua + 2 ; pen 2 )  | ( pen 3 ; ( move ul , ua ; move ul - ua , ul ) )  | ( pen ul ; ( move ul , ua ; move ul - ua , ul ) )  | ( ( pen ul ; move ul , ua ) ; move ul - ua , ul )  | ( move ul , ua + ua ; move ul - ua , ul ; pen ua )  | ( v0 = ul - ua ; move ul , ua ; move v0 , ul )  | ( move ul , 0 ; v0 = ul - ua ; move v0 , v0 )  | ( ( v0 = ua ; move ul , v0 ) ; move ul - v0 , ul )  | ( v0 = ul - ua ; move ua + v0 , ua ; move v0 , v0 )  | ( v0 = ul ; move v0 , ua / v0 ; move ul - ua , v0 )  
[2638] ( move ua - ul , 0 ; move ul , ul )  | ( move ua - ul , ua ; move ul , ul )  | ( move ua - ul , 0 ; move ul , 2 - ul )  | ( move ua - ul , ua * 3 ; move ul , ul )  | ( move ua - ul , ua ; move ul , ul - ua )  | ( ( move ua - ul , 0 ; move ul , ul ) ; pen ul )  | ( v0 = ul ; move ua - v0 , ua ; move ul , v0 )  | ( v0 = ul ; move ua - v0 , 0 ; move v0 , v0 )  | ( move ua - ul , ua ; move ul , ul ; v0 = 2 - ua )  | ( move ua - ul , ua ; ( move ul , ul ; pen ua + 3 ) )  | ( move ua - ul , 0 ; v0 = ul ; move v0 , ua + ul )  | ( ( move ua - ul , ua ; v0 = ul ) ; move v0 , v0 )  | ( move ul , ua - 2 ; ( move 0 , ul ; move ul - ua , ul ) )  
[2639] ( move 0 - ul , ul ; move ua , ul )  | ( move 3 - 4 , ul - ua ; move ua , ul )  | ( move 0 - ul , ul ; move ua , ua + ul )  | ( move 2 - 3 , ul ; pen ul ; move ua , ul )  | ( move 0 , ua ; move ul - 2 , ul ; move ua , ul )  | ( move 0 , ul ; move 0 - ul , ua + ua ; move ua , ua + ul )  
[2640] ( move ua - 2 , ua ; move ua , ul )  | ( move ua - 2 , ua + ua ; move ua , ul )  | ( move ua - 2 , ua + ua ; move ua , ul ; pen ul )  
[2641] ( move ua , ua * ua ; move ua , 2 )  | ( ( move ua , ua * ua ; move ua , ua + 2 ) ; pen ua )  
[2642] ( move ua , ul ; move 2 - ua , ul )  | ( move ua , ul ; move 2 - ua , 2 - ul )  | ( move ua , ua + ul ; move 2 - ua , ul )  | ( move ua , ul ; move 2 - ua , ul ; pen ul )  | ( move ua , ul ; move 2 - ua , ua + ul ; pen 3 )  
[2643] ( move 2 - ua , ul ; move ua , ul )  | ( move 2 - ua , ul ; move ua , ua + ul )  | ( move 2 - ua , ua + ul ; move ua , ul )  | ( move 2 - ua , 2 - ul ; pen 2 ; move ua , ul )  | ( ( move 2 - ua , ua + ul ; pen ua ) ; move ua , ul )  | ( move 2 - ua , ul ; ( move ua , ul ; move 0 , 3 - ua ) )  
[2644] ( move ul - ua , 2 ; move ua , ul )  | ( move ul - ua , ua + 2 ; move ua , ul )  | ( move ul - ua , ul + ul ; move ua , ul )  | ( move ul - ua , 2 - ua ; move ua , ul ; pen 4 )  
[2645] ( move ua , ul ; move ul - ua , 2 )  | ( move ua , ua + ul ; move ul - ua , ua + 2 ; move 0 , ul )  
[2646] ( move ul , ul ; move ua , ua - 2 )  | ( move ul , ul ; move ua , ul - 3 )  | ( move ul , 2 - ul ; move ua , ua - 2 )  | ( move ul , ua + ul ; move ua , ua - 2 )  | ( move ul , ua + ul ; move ua , ul - 3 )  | ( move ul , ul ; move ua , 0 - 2 ; pen 3 )  | ( move 0 , ua ; move ul , ul ; move ua , 0 - 2 )  | ( move 0 , ul ; move ul , 0 ; move ua , ua - 2 )  | ( move ul , ul ; move ua , ul - 3 ; v0 = ua )  | ( pen ua + 2 ; move ul , ul ; move ua , ua - 2 )  | ( move ul , ul ; move ua , ul - 3 ; pen 3 - ul )  | ( pen 4 + ul ; move ul , ul ; move ua , ul - 3 )  | ( pen ua ; move ul , ul ; ( pen ua ; move ua , ul - 3 ) )  
[2647] ( move ua , ul ; move ua + ul , 3 )  | ( move ua , ua + ul ; move ua + ul , 3 )  | ( move ua , ul ; move ua + ul , ua + 3 )  | ( ( move ua , ul ; move ua + ul , 3 ) ; pen 4 )  | ( move ua , ul ; move ua + ul , 3 - ua ; pen 2 )  | ( move ua , ua + ul ; move 0 , 3 ; move ua + ul , ua )  | ( move ul , ul ; move ua - ul , ua ; move ua + ul , 3 )  | ( ( move ua , ul ; move ua + ul , 3 ) ; v0 = ua + 4 )  
[2648] ( move ul , 0 ; move ua , ul / ua )  | ( move ul , ua ; move ua , ul / ua )  | ( move ul , 0 ; move ua + ul , ul / ua )  | ( move ul , ua * 3 ; move ua , ul / ua )  | ( move ul , ua ; move ua + ul , ul / ua )  | ( pen ua ; move ul , ua ; move ua , ul / ua )  | ( move ul , ua + ua ; move ua + ul , ul / ua )  | ( move ul , 0 ; move ua , ul / ua ; pen 3 / 4 )  | ( move ul , 0 ; move ua , ul / ua ; v0 = ua )  | ( pen 2 ; move ul , ua * 3 ; move ua , ul / ua )  | ( v0 = ua ; move ul , 0 ; move v0 , ul / v0 )  | ( v0 = ua ; move ul , ua ; move v0 , ul / v0 )  | ( move ul , 0 ; move ua , ul / ua ; v0 = 2 + ul )  | ( move ul , ua ; ( move 0 , ua ; move ua , ul / ua ) )  
[2649] ( move ul / ua , 0 ; move ua , ul )  | ( move ul - ua , ul ; move ul , 3 )  | ( move ul / ua , ua ; move ua , ul )  | ( move ul / ua , 0 ; move ua , ul - ua )  | ( move ul / ua , ua * 4 ; move ua , ul )  | ( move ul / ua , 0 ; pen ua ; move ua , ul )  | ( move ul / ua , 0 ; v0 = ua ; move ua , ul )  | ( move ul / ua , ua + ua ; pen 3 ; move ua , ul )  | ( v0 = ul / ua ; move v0 , ua ; move ua , ul )  | ( move ul / ua , 0 ; move ua , ul ; v0 = ua * ua )  | ( pen ul ; ( ( move ul / ua , ua ; move ua , ul ) ; pen ua ) )  
[2650] ( move ul , ua * ua ; move ua , 2 )  | ( move ul , ua * ua ; move ua , 2 ; pen ul )  | ( move ul , ua * ua ; move ua , 2 ; move 0 , 2 )  | ( ( move ul , ua ; move ul , ua * ua ) ; pen ul ; move ua , 2 )  
[2651] ( move ua + ul , ul ; move 2 , ul )  | ( move ua + ul , ul ; move 2 , 2 - ul )  | ( move ua + ul , ua + ul ; move 2 , ul )  | ( move ua + ul , ul ; move 3 - ul , ul )  | ( move ua + ul , ul ; move ul + ul , ul )  | ( move ul , ul ; move ua , ua ; move 2 , ul )  | ( move ua + ul , ul ; move 2 , ul ; pen ul )  | ( move ua + ul , ul ; move ul + ul , ua + ul )  | ( move ua , ul ; ( move ul , 0 ; move 2 , ul ) )  | ( move ul , ul ; move ua , ua + ua ; move 2 , ul )  | ( v0 = ua + ul ; move v0 , v0 ; move 2 , ul )  | ( v0 = ua + ul ; move v0 , v0 ; move 2 , v0 )  | ( ( move ua + ul , ul ; move 2 , ul ) ; pen ua + ua )  | ( move ua + ul , ul ; v0 = ul ; move 2 * v0 , ul )  | ( move ua + ul , ul ; ( move 2 , ul ; v0 = 2 / ua ) )  
[2652] ( move ua , ua * ua ; move ul , 2 )  | ( move ua , ua * ua ; move ul , 4 - 2 )  
[2653] ( move ua , ua ; move 3 , ua * ua )  | ( pen 3 ; move ua , ua ; move 3 , ua * ua )  | ( pen ua ; move ua , ua ; move 3 , ua * ua )  | ( move ua , ua ; v0 = ua ; move 3 , v0 * v0 )  | ( move 0 , ua ; move ua , ua ; move 4 - ul , ua * ua )  
[2654] ( move ua , 2 ; move ul , ua * ua )  | ( move ua , ua + 2 ; move ul , ua * ua )  | ( move ua , 2 ; move ul , ua * ua ; v0 = 0 )  
[2655] ( move ul , ua - 2 ; move ua , ul )  | ( move ul , ul - 3 ; move ua , ul )  | ( move ul , 0 - 2 ; move ua , ul ; pen 4 / ua )  | ( move ul , ul - 3 ; move ua , ul ; pen ua + 3 )  | ( ( move ul , ul - 3 ; v0 = ua ) ; move ua , ul )  
[2656] ( move ua + ul , ul ; move ua , 3 )  | ( move ua , ul ; move ul , 0 ; move ua , 3 )  | ( move ua , ul ; move ul , ua ; move ua , 3 )  | ( move ua + ul , ua + ul ; move ua , 3 - ua )  | ( move ua + ul , ul ; move ua , 3 ; v0 = 4 )  | ( move ua + ul , ul - ua ; move ua , 3 ; pen ua )  | ( move ua , ul - ua ; move ul , 0 ; move ua , ua + 3 )  | ( v0 = ua + ul ; move v0 , v0 ; move v0 - ul , 3 )  | ( ( move ua + ul , ua + ul ; pen 3 ; move ua , 3 ) ; pen 0 )  
[2657] ( move 2 , ul ; move ua + ul , ul )  | ( move 2 , ul - ua ; move ua + ul , ul )  | ( move 3 - ul , ul ; move ua + ul , ul )  | ( move 2 , ul ; move ua + ul , ul ; pen 0 )  | ( pen 2 ; move 2 , ul ; move ua + ul , ul )  | ( move 2 , ul ; move ua + ul , ul ; pen 4 )  | ( move 2 , ul ; move ua + ul , ul ; v0 = 0 )  | ( move 2 , ul ; move 2 , ul ; move ua - ul , ua )  | ( move 2 , ul ; move ua + ul , ul ; v0 = ul )  | ( ( move 2 , ul ; move ul , ul ) ; move ua , ua )  | ( move ul + ul , ul ; move ul , ul ; move ua , 0 )  | ( move 2 , ul ; pen ul ; move ua + ul , ua + ul )  | ( v0 = ua ; move 2 , ul ; move v0 + ul , ul )  | ( move 2 , ul ; v0 = ua + ul ; move v0 , v0 )  | ( ( move 2 , ul ; move ua + ul , ul ) ; v0 = 3 )  | ( move ul + ul , ua + ul ; move ua + ul , ua + ul )  | ( move 2 , ua + ul ; ( move ul , ul ; move ua , ua ) )  | ( move 2 , ua + ul ; pen ua + 3 ; move ua + ul , ul )  | ( move 2 , ul ; move ua + ul , ua + ul ; pen 4 - ua )  | ( pen ua ; ( move 2 , ul - ua ; move ua + ul , ul ) )  | ( ( move 2 , ul ; move ua , ul ) ; move ul , 0 ; pen ul )  | ( move ul + ul , ul ; v0 = ua + ul ; move v0 , ul )  | ( ( move 2 , ul ; move ul , ul ; move ua , ua ) ; v0 = ul )  | ( pen 2 ; ( move 2 , ua + ul ; move ua + ul , ul ) ; pen ul )  
[2658] ( move ua + ul , ul ; move ul , 2 )  | ( move ua + ul , ul - ua ; move ul , 2 )  | ( move ua + ul , ul ; move ul , ul + ul )  | ( move ua + ul , ul ; move ul , 2 ; pen 2 )  | ( move ua + ul , ul ; pen 3 ; move ul , 2 )  | ( move ul , ul ; move ua , ua ; move ul , 2 )  | ( move ua + ul , ul ; move ul , 2 ; v0 = 4 )  | ( move ua + ul , ul ; pen 3 + 3 ; move ul , 2 )  | ( move ul , ul ; move ua , ua * 2 ; move ul , 2 )  | ( move ua + ul , ul ; move ul , 2 ; v0 = ul )  | ( move ua + ul , ul ; move ul , ua + 2 ; pen ul )  | ( v0 = ul ; move ua + ul , v0 ; move v0 , 2 )  | ( ( move ua + ul , ul ; move ul , 2 ) ; v0 = 3 )  | ( move ua , ua + ul ; ( move ul , 0 ; move ul , 2 ) )  | ( move ul , ul ; ( move ua , ua * 2 ; move ul , 2 ) )  | ( move ua + ul , ul ; v0 = 2 - ua ; move ul , v0 )  | ( move ua + ul , ul ; v0 = 3 - ul ; move ul , v0 )  | ( v0 = ua + ul ; move v0 , 2 - v0 ; move ul , 2 )  | ( v0 = ul ; move ua + ul , v0 ; move v0 , 3 - v0 )  
[2659] ( move ua + ul , 2 ; move ul , ul )  | ( move ua + ul , ul + ul ; move ul , ul )  | ( move ua + ul , 2 ; ( move ul , ul ; pen ul ) )  | ( move ua + ul , 2 ; v0 = ul ; move ul , v0 )  | ( move ua + ul , 2 ; move ul , ul ; v0 = 4 - ua )  | ( move ua + ul , 2 ; move ul , ul ; v0 = ul + ul )  | ( ( move ua + ul , 2 ; move ul - 2 , 4 ) ; move ul , 0 )  | ( ( move ua + ul , 2 ; move ul , ul ) ; pen ul ; pen ua )  | ( move ua + ul , ua + 2 ; ( pen ua + 2 ; move ul , ul ) )  | ( move ua + ul , 2 ; ( pen 2 ; pen 4 ) ; move ul , ul - ua )  | ( move ua + ul , ul + ul ; v0 = ua + ul ; move ul , v0 )  
[2660] ( move ua , ua ; move ua + ul , 4 )  | ( move ua , ua * 3 ; move ua + ul , 4 )  | ( move ua , ua ; move ul , 4 ; move ua , 0 )  | ( move ua , ua ; move ul , 4 ; move ua , ua )  | ( move ua , ua ; move ua , 4 ; move ul , ua )  | ( move ua , 0 - ua ; move ua + ul , 3 + ul )  | ( move ua , ua ; move ua + ul , 4 ; move 0 , 4 )  | ( ( move ua , 0 ; move ua , 4 ) ; move ul , ua )  | ( move ua , 0 ; pen 4 ; move ua + ul , 3 + ul )  | ( move ua , 0 ; ( move 3 - ul , 4 ; move ua - ul , ua ) )  | ( ( move ua , ua ; move ul , 4 ; v0 = ul ) ; move ua , 0 )  
[2661] ( move ua , 3 ; move ua , ua * ua )  | ( pen ul ; move ua , 3 ; move ua , ua * ua )  | ( pen 2 * 2 ; move ua , 3 ; move ua , ua * ua )  
[2662] ( move ul , 3 ; move ua + ul , ul )  | ( move ul , ua + 3 ; move ua + ul , ul )  | ( move ul , 4 - ul ; move ua + ul , ul )  | ( move ul , 3 ; move ua , ul ; move ul , 0 )  | ( move ul , 3 ; move ua + ul , ul ; pen 2 )  | ( move ul , 2 + ul ; move ua + ul , ua + ul )  | ( move ul , 3 ; ( move ul , ul ; move ua , 0 ) )  | ( ( move ul , 3 ; move ua , ul ) ; move ul , ua )  | ( move ul , 3 ; v0 = ua + ul ; move v0 , v0 )  | ( v0 = ul ; move ul , 3 ; move v0 + ua , v0 )  | ( move ul , 3 ; ( move ua + ul , ul ; v0 = 4 ) )  | ( v0 = 3 ; ( move ul , v0 ; move ua + ul , ul ) )  | ( ( move ul , 3 ; move ua + ul , ul ; pen ul ) ; v0 = ua )  
[2663] ( move 3 - ua , ul ; move ua , ul )  | ( pen ua / 4 ; move 3 - ua , ul ; move ua , ul )  | ( move 3 - ua , ul ; v0 = ua ; move v0 , ua / v0 )  
[2664] ( move ul , ul ; move ua - ul , 2 )  | ( move ul , ul ; move ua - ul , 2 - ua )  | ( move ul , ul ; move ua - ul , ul + ul ; pen 3 )  
[2665] ( move ul - ua , 3 ; move ua , ul )  | ( move ul - ua , 3 ; move ua , 2 - ul )  | ( move ul - ua , 2 + ul ; move ua , ul )  | ( pen 2 ; move ul - ua , 3 ; move ua , ul )  | ( move ul - ua , 3 ; ( move ua , ul ; pen 4 ) )  
[2666] ( move ua + ul , 3 ; move ul , ul )  | ( move ua + ul , 2 + ul ; move ul , ul )  | ( move ua + ul , 3 ; move 0 - ul , 3 + ul )  | ( move ua + ul , 2 + ul ; pen ua ; move ul , ul )  | ( ( move ua + ul , ua + 3 ; move ul , ul ) ; pen ua )  
[2667] ( move 2 , ul ; move ua - ul , ul )  | ( move 2 , ua + ul ; move ua - ul , ul )  | ( move 3 - ul , ul ; move ua - ul , ul )  | ( move 4 / 2 , ul ; pen 4 ; move ua - ul , ul )  | ( move ul , ul ; move ul , 0 ; move ua - ul , ul )  | ( v0 = ul ; move 2 , v0 ; move ua - ul , ul )  | ( move 2 , ul ; ( pen ua ; move ua - ul , ua + ul ) )  
[2668] ( move ua , ua * ua ; move 3 , ul )  | ( ( move 0 , ua * ua ; pen 2 ; move ua , ua ) ; move 3 , ul )  
[2669] ( move 3 , ua * ua ; move ua , ul )  | ( ( move 2 + ul , ua * ua ; pen 2 ) ; move ua , ul )  | ( move 3 , ua * ua ; ( pen 3 + ul ; move ua , ul ) )  
[2670] ( move ua , ul ; move ua , ua - 4 )  | ( move ua , ul / ua ; move ua , 4 )  | ( move ua , ul ; move ua , 0 - 4 ; pen ua * 4 )  
[2671] ( move ua + 3 , ul ; move ul , ul )  | ( move ua + 3 , ua + ul ; move ul , ul )  | ( move ua + 3 , ul ; move ul , ua + ul )  | ( move ua + 3 , ul ; move ul , ul - ua )  | ( move ua , ul ; move 3 , 0 ; move ul , ul )  | ( move 3 , ul ; move ua , ua ; move ul , ul )  | ( move ua + 3 , ul ; pen ul ; move ul , ul )  | ( move ul , ul ; move ua + 2 , 0 ; move ul , ul )  | ( move ua + 3 , ul ; move ul , ul ; v0 = ua )  | ( move ua , ul - ua ; move 3 , ua ; move ul , ul )  | ( move ua + 3 , ul ; v0 = ul ; move ul , v0 )  | ( pen 2 - ul ; ( move ua + 3 , ul ; move ul , ul ) )  | ( ( pen 2 ; pen ua ) ; move ua + 3 , ul ; move ul , ul )  | ( move ua + 3 , ul ; v0 = ul ; move v0 * v0 , v0 )  | ( pen 3 ; ( move ua + 3 , ul ; move 0 , ul ) ; move ul , ua )  
[2672] ( move ul , ua - 3 ; move ua , ul )  | ( move ul , ua - 3 ; ( pen ul ; move ua , ul ) )  | ( move ul , 0 - 3 ; v0 = ua ; move v0 , ul )  | ( move ul , ul - 4 ; v0 = 0 ; move ua , ul / v0 )  | ( ( move ul , ul - 4 ; move ua , ul ) ; v0 = ua / 2 )  | ( ( move ul , ul - 4 ; v0 = ul - ua ) ; move ua , ul )  
[2673] ( move ul , ul ; move ul - ua , 2 )  | ( move ul , ul ; move ul - ua , ua + 2 )  | ( move ul , ul ; move ul - ua , ul + ul )  | ( pen 3 + ul ; move ua - ul , 3 ; move ul , ul )  | ( v0 = ul ; move v0 , v0 ; move ul - ua , 2 )  | ( ( pen ua ; move ul , ul ; move 0 , ul ) ; move ul - ua , ul )  
[2674] ( move 2 - ua , ul ; move ul , ul )  | ( move 2 - ua , ul - ua ; move ul , ul )  | ( move 2 - ua , ul ; v0 = ul ; move v0 , v0 )  | ( move 2 - ua , ul ; move ul , ua + ul ; v0 = 0 )  | ( move 4 / ua , 0 - ul ; v0 = 4 ; move v0 , 2 )  | ( ( move 2 - ua , ul ; v0 = ul / 3 ) ; move ul , ul )  
[2675] ( move ul , ua ; move ua + ul , 4 )  | ( pen ua ; ( move ul , ua ; move ua + ul , 4 ) )  | ( move ul , ua * 2 ; move ul / 4 , 4 ; move ua + ul , ua )  | ( move ul , 0 ; ( move ul , 4 ; move ua , 0 ) ; v0 = ul )  
[2676] ( move ua + ul , ul ; move 3 , ul )  | ( move ua + ul , ul ; move 3 , ua + ul )  | ( move ua + ul , ul ; move 3 , ul - ua )  | ( move ua + ul , ul ; move 3 , ul ; pen 0 )  | ( move ua , ul ; move ul , ua ; move 3 , ul )  | ( move ua + ul , ua + ul ; pen ul ; move 3 , ul )  | ( ( move ua , ua + ul ; move ul , 0 ) ; move 3 , ul )  | ( v0 = ua + ul ; move v0 , v0 ; move 3 , v0 )  | ( move ul , ul ; ( move ua , ua ; move 4 - ul , ul ) )  | ( ( move ua + ul , ul ; move ul , ul ; move 2 , 0 ) ; pen ul )  
[2677] ( move 2 , ua ; move ua , ul / ua )  | ( move ul + ul , 0 ; move ua , ul / ua )  | ( move 2 , ua ; move ua , ul / ua ; v0 = 4 )  | ( move 4 / 2 , ua ; move ua , ul / ua ; pen ua - 3 )  | ( move ul + ul , 0 ; v0 = ul ; move ua , v0 / ua )  | ( move ul + ul , ua ; v0 = ul / ua ; move ua , v0 )  
[2678] ( move ua , 3 ; move ul - ua , ul )  | ( move ua , 3 - ua ; move ul - ua , ul ; move 0 , 0 )  
[2679] ( move ul - ua , ua ; move 3 , ul )  | ( move ul - ua , 0 ; move 3 , ua + ul )  | ( move ul - ua , ua ; move 3 , ul - ua )  | ( move ul - ua , ua ; move 3 , ul ; pen 2 )  | ( move ul - ua , 0 ; move 3 , ul ; move 0 , 0 )  | ( move ul - ua , 0 ; pen 3 ; move 2 + ul , ul )  | ( v0 = ua ; move ul - v0 , v0 ; move 3 , ul )  | ( ( move 0 , 0 ; move ul - ua , ua ) ; move 3 , ul )  | ( move ul - ua , 0 ; move 3 - ul , ul ; move ul , 0 )  | ( ( pen 4 * 3 ; move ul - ua , ua ) ; move 3 , ul )  
[2680] ( move ua , ua - 3 ; move ul , ul )  | ( move ua , ul - 4 ; move ul , ul )  | ( move ua , ua - 3 ; move ul , ua + ul )  | ( move ua , ua - 3 ; move ul , ul - ua )  | ( move ua , ul - 4 ; move ul , ul ; pen 2 )  | ( pen ul ; move ua , ua - 3 ; move ul , ul )  | ( move ua , 0 - 3 ; v0 = ul ; move v0 , ul )  | ( move ua , ul - 4 ; v0 = ua ; move 2 - ul , ul )  | ( move ua , ul - 4 ; v0 = ua ; move ul , v0 / ua )  | ( move ua , ul - 4 ; move 2 - ul , ul ; v0 = ul / ua )  
[2681] ( move 3 - ua , ua ; move ul , ul )  | ( move 3 - ua , ua * 2 ; move ul , ul )  | ( move 3 - ua , 0 ; move ul , ul ; pen ul )  | ( pen 3 ; move 3 - ua , ua ; move ul , ul )  
[2682] ( move ul , 2 ; move ul - ua , ul )  | ( move ul , 2 ; move ul - ua , ua + ul )  | ( pen ua ; move ul , 2 ; move ul - ua , ul )  | ( move ua - ul , 3 ; move 0 - ul , ua - ul )  | ( move ul , 2 ; ( pen 3 ; move ul - ua , ul ) )  | ( ( move ul , 2 ; move ul - ua , ul ) ; pen ua )  | ( move ul , ua + 2 ; move ul - ua , ul ; pen ul )  | ( pen 4 + 4 ; move ul , 2 ; move ul - ua , ua + ul )  | ( move ul , ul + ul ; v0 = ul - ua ; move v0 , ul )  
[2683] ( move ua , ua * ua ; move ua , 4 )  | ( pen ul ; move ua , ua * ua ; move ua , 4 )  
[2684] ( move ua , ul ; move ua + ul , 4 )  | ( move ua , ul ; move ua + ul , 3 + ul )  | ( move ua , ul ; move ua + ul , 4 - ua )  | ( move ua , ul ; move ua + ul , 4 ; pen 0 )  | ( pen 3 ; move ua , ul ; move ua + ul , 4 )  | ( move ua , ul ; move ua , 4 ; move ul , ua )  | ( move ua , 2 - ul ; pen ul ; move ua + ul , 4 )  | ( move ua , ul ; move 0 , 4 ; move ua + ul , ua * 2 )  | ( move ua , ul - ua ; move 0 , ua ; move ua + ul , 4 )  | ( move ua , ua + ul ; ( move ul , 4 ; move ua , ua * 3 ) )  | ( move ua , ul - ua ; move ua + ul , 4 ; v0 = ua + ul )  | ( move ul , ul - ua ; move ua - ul , ua ; move ua + ul , 4 )  
[2685] ( move 3 , ua ; move ua - ul , ul )  | ( move 4 - ul , 0 ; move ua - ul , ul )  | ( move 3 , ua * 2 ; move ua - ul , ul )  | ( move 3 , ua * 3 ; move ua - ul , ul )  | ( move 3 , 0 ; move 0 , ua ; move ua - ul , ul )  | ( move 3 , ua ; move ul , ul ; move ua - 2 , 0 )  | ( move 3 , 0 ; move ua - ul , ul ; pen ul / ua )  | ( move 3 , 0 ; move 3 / ua , ul ; move 3 + 2 , ua )  | ( move 3 , ua * 2 ; move ua - ul , ul ; v0 = ul )  | ( pen ua + ul ; ( move 3 , 0 ; move ua - ul , ul ; pen ua ) )  
[2686] ( move 2 , ul ; move ul - ua , ul )  | ( move 2 , ul ; move ul - ua , ua + ul )  | ( ( move 2 , ul ; pen 2 ) ; move ul - ua , ul )  | ( move 2 , ul ; move 0 , ua ; move ul - ua , ul )  | ( pen ua * 3 ; move 2 , ul ; move ul - ua , ul )  | ( move ul , ul ; move ul , 0 ; move ul - ua , ul )  | ( move 2 , ul ; ( move ul - ua , ul ; v0 = 2 ) )  | ( pen ul / 2 ; ( move 2 , ul ; move ul - ua , ul ) )  | ( move 2 , ul - ua ; ( move ul - ua , ul ; v0 = 2 ) )  | ( move 2 , ul ; ( move ul - ua , ul ; pen ul ; pen 4 * 2 ) )  
[2687] ( move ul - ua , ul ; move 2 , ul )  | ( move ul - ua , ul ; move 2 , 4 - 3 )  | ( move ul - ua , ul ; move 2 , 2 - ul )  | ( move ul - ua , ul ; move ul + ul , ul )  | ( move 0 , ul ; move ul - ua , 0 ; move 2 , ul )  | ( move ul - ua , ul ; move 2 , ul ; v0 = ul )  | ( move ul - ua , ul ; pen ua * 4 ; move 2 , ul )  | ( move ul - ua , ul ; move 0 , 0 ; move ua / 3 , ul )  | ( v0 = ul - ua ; move v0 , v0 ; move 2 , v0 )  | ( move ul - ua , ul ; ( v0 = ul ; move 2 , v0 ) )  | ( move ul - ua , ua + ul ; v0 = ul ; move 2 , v0 )  | ( move ul - ua , ul ; ( move 2 , ul ; v0 = ul - 2 ) )  
[2688] ( move ua , 2 / ua ; move ua , ul )  | ( pen 4 / ua ; move ua , 2 / ua ; move ua , ul )  | ( move ua , 2 / ua ; pen 2 + ul ; ( move ua , ul ; pen 4 ) )  | ( move 0 , ua ; move ua , 2 / ua ; ( move ua , ul ; pen ul ) )  
[2689] ( move 4 , ua ; move ua , ua * ua )  | ( move 4 , 0 ; move ua , ua * ua ; v0 = ua )  | ( move 4 , 0 ; v0 = ua ; move v0 , v0 * v0 )  | ( move 4 , ua ; move ua , ua * ua ; v0 = 4 - ua )  | ( move 3 + ul , ua ; move ua , ua * ua ; v0 = ua + 2 )  
[2690] ( move ua , ul ; move 3 , ua * ua )  | ( move ua , ul ; move ul , ua * ua ; move 2 , 0 )  
[2691] ( move ua + ul , ul ; move ua , 4 )  | ( move ua + ul , ul ; move ua , ua + 4 )  | ( move ua + ul , ul ; move ua , 4 - ua )  | ( move ua , ul ; move ul , 0 ; move ua , 4 )  | ( move ul , ul ; move ua , ua ; move ua , 4 )  | ( pen ul ; move ua + ul , ul ; move ua , 4 )  | ( move ua + ul , ul ; move ua , 4 ; pen ul )  | ( move ua + ul , ul ; move 0 , ul ; move ua , 3 )  | ( move 0 , ul ; move ua + ul , ua ; move ua , 4 )  | ( move ua , ul ; ( move ul , ua ; move ua , 4 ) )  | ( move ua + ul , ul ; v0 = 4 ; move ua , v0 )  | ( move ua , ul ; ( move ul , 0 ; pen ul ; move ua , 4 ) )  | ( ( move ua + ul , ul ; v0 = 3 + ul ) ; move ua , v0 )  
[2692] ( move ua , ul ; move 3 - ua , ul )  | ( move ua , ua + ul ; move 3 - ua , ul )  | ( move ua , ul ; move 3 - ua , ul ; move 3 , 0 )  
[2693] ( move ul , 2 ; move ua - ul , ul )  | ( move ul , 2 ; move ua - ul , ul - ua )  | ( move ul , ul + ul ; move ua - ul , ul )  | ( move ul , 2 - ua ; move ua - ul , ua + ul )  | ( ( pen 3 ; move ul , 2 ) ; move ua - ul , ul )  | ( move ul , 2 ; move ua - ul , ul ; move ul , 3 )  | ( pen ul ; ( move ul , 2 ; move ua - ul , ul ) )  | ( move ul , 2 ; v0 = ua - ul ; move v0 , ul )  | ( move ul , 2 ; move ua - ul , ul ; v0 = ul / 4 )  | ( move ul , ua + 2 ; v0 = ua - ul ; move v0 , ul )  
[2694] ( move 3 , ul ; move ua , ua * ua )  | ( move 3 , ul ; move ua , ua * ua ; pen 3 )  | ( move 2 + ul , ul ; move ua , ua * ua ; pen ul - ua )  | ( move 0 , 0 ; move 3 , ul ; ( move ua , ua * ua ; pen ul ) )  | ( pen 3 ; ( ( move 3 , ul ; move ua , ua * ua ) ; pen ua ) )  
[2695] ( move ua - 3 , ul ; move ua , ul )  | ( move ua - 3 , 4 - 3 ; move ua , ul )  | ( move ua - 3 , ul ; move ua , 2 - ul )  | ( move ua - 3 , ua + ul ; move ua , ul )  | ( move ua - 3 , ul ; move ua , ul ; pen ul )  | ( pen 2 ; move ua - 3 , ua + ul ; move ua , ul )  | ( move ua - 3 , ul ; ( move ua , ul ; move 0 , ua ) )  
[2696] ( move ua - 2 , ul ; move ul , ul )  | ( move ua - 2 , ul ; move ul , ua + ul )  | ( move ua - 2 , ul ; move ul , ul ; v0 = 4 )  | ( move ul / 4 , ul ; move 4 , ua ; move ul , ul )  | ( move ua - 2 , ul ; move ul , ul ; move 0 , ua * 4 )  | ( move ua - 2 , ua + ul ; move ul , ul ; v0 = ul )  | ( move ua - 2 , ua + ul ; pen ua - ul ; move ul , ul )  | ( move ua - 2 , 2 - ul ; move ul , ua + ul ; v0 = ul )  | ( move ua - 2 , ua + ul ; move ul , ua + ul ; v0 = ul )  
[2697] ( move ua , ul ; move ua - 3 , ul )  | ( move ua , ul ; move ua - 3 , ua + ul )  
[2698] ( move ul , ua ; move 3 - ua , ul )  | ( move ul , ua ; move 3 - ua , ul ; move 0 , ua )  | ( move ua - 3 , ul ; move ul , ua / 3 ; v0 = 0 )  
[2699] ( move ul , ul ; move 2 - ua , ul )  | ( move ul , ul ; move 2 - ua , 2 - ul )  | ( move ul , ul ; pen ua ; move 2 - ua , 2 - ul )  | ( move ul , ul ; ( move 2 - ua , ul ; pen ua ) )  | ( ( move ul , ul ; pen ul ) ; move 2 - ua , ul )  | ( pen ua ; move ul , ul ; move 2 - ua , ua + ul )  | ( move 2 - ul , ua + ul ; pen 4 ; move 2 - ua , ul )  
[2700] ( move ul , 3 ; move ua - ul , ul )  | ( move ul - ua , 4 ; move ul , ua / 3 )  | ( move ul , 4 - ul ; move ua - ul , ul )  | ( move ul , 3 ; move ua - ul , ua + ul ; move ul , 3 )  
[2701] ( move 3 , ua * ua ; move ul , ul )  | ( move 3 , ua * ua ; pen 4 ; move ul , ul )  | ( move 3 , ua * ua ; move ul , ul ; v0 = ul )  | ( pen ua - 2 ; move 3 , ua * ua ; move ul , ul )  | ( move 3 , ua * ua ; ( move ul , ul ; move 0 , ul ) )  
[2702] ( move ua , ul / ua ; move 2 , ul )  | ( move ua , ul / ua ; move 2 , ul - ua )  | ( move ua , ul / ua ; move ul + ul , ul )  | ( pen 3 ; move ua , ul / ua ; move 2 , ul )  | ( move ua , ul / ua ; pen ul ; move 2 , ul )  | ( pen 4 - ul ; move ua , ul / ua ; move 2 , ul )  | ( ( move ua , ul / ua ; pen ua * 4 ) ; move 2 , ul )  | ( pen 2 * 2 ; move ua , ul / ua ; move ul + ul , ul )  | ( move ua , ul / ua ; ( move 2 , ul ; v0 = ul / 2 ) )  | ( move ua - ul , ul / ua ; ( move ul , ua ; move 2 , ul ) )  
[2703] ( move ua - ul , ul ; move 3 , ul )  | ( move ua - ul , ul ; move 2 + ul , ul )  | ( move ua - ul , ul - ua ; move 3 , ul )  | ( move 2 , ul ; move ua - 3 , ua ; move 3 , ul )  | ( move ua - ul , ua + ul ; move 2 - ul , ul ; move 2 , 0 )  
[2704] ( move ua + ul , 4 ; move ul , ul )  | ( move ua + ul , 2 + 2 ; move ul , ul )  | ( move ua + ul , 3 + ul ; move ul , ul )  | ( move ua + ul , 4 - ua ; move ul , ul )  | ( move ua + ul , 4 ; pen 4 ; move ul , ul )  | ( pen 4 ; move ua + ul , 4 ; move ul , ul )  | ( move ua + ul , 4 ; move ul , ul ; pen ua )  | ( pen ua ; move ua + ul , 4 ; move ul , ul )  | ( pen ul ; move ua + ul , 4 ; move ul , ul )  | ( move ua + ul , 3 + ul ; move ul , ua + ul )  | ( move 0 , ua ; move ua + ul , 4 ; move ul , ul )  | ( move ua + ul , 4 ; move ul , ul ; v0 = ua )  | ( move ua + ul , 4 ; move ul , ul ; v0 = ul )  | ( move ua + ul , 4 ; move ul , ua + ul ; pen 0 )  | ( move ua + ul , 4 ; v0 = 3 + ul ; move ul , ul )  | ( ( pen 4 + ul ; move ua + ul , 4 ) ; move ul , ul )  | ( move 0 , ul ; move ua + ul , 4 - ul ; move ul , ul )  | ( move ua + ul , 4 ; move ul , ul ; v0 = ul - ua )  | ( ( move ua , 4 ; move ul , ua ) ; move ul , ul - ua )  | ( move ua + ul , 4 ; v0 = ua - ul ; move ul , ul - ua )  | ( ( move ul , 4 ; move ua , 0 ; v0 = 2 ) ; move ul , ul )  | ( pen ul ; ( move ua + ul , 4 ; move ul , ul ) ; v0 = ul )  
[2705] ( move ul - ua , ul ; move 3 , ul )  | ( move ul - ua , ul ; move 2 + ul , ul )  | ( move ul - ua , ul ; move 4 - ul , ul )  | ( move ul - ua , ul ; move 2 , ul ; move ul , ua )  | ( move ul - ua , ul ; ( v0 = ua ; move 3 , ul ) )  | ( move ul - ua , ua + ul ; v0 = ua ; move 3 , ul )  | ( move ul - ua , ul ; v0 = ul ; move 3 , v0 * v0 )  
[2706] ( move ua , 2 ; move ul , ul / ua )  | ( move ua + ul , 3 - ul ; move 2 / ua , 2 )  
[2707] ( move ul , ul ; move 3 - ua , ul )  | ( pen ul ; move ul , ul ; move 3 - ua , ul )  | ( move ul , ul ; ( move 3 - ua , ul ; v0 = ul ) )  | ( ( move ul , ua + ul ; v0 = ua ) ; move 3 - v0 , ul )  
[2708] ( move 2 , ul / ua ; move ua , ul )  | ( move 4 - 2 , ul / ua ; move ua , ul )  | ( pen ua + 4 ; ( move 2 , ul / ua ; move ua , ul ) )  | ( move ul + ul , ul / ua ; move 0 , ul ; move ua , ua )  
[2709] ( move ul , ul ; move ua + ul , 4 )  | ( move ul , ul ; move 4 + 3 , ua + 4 )  | ( move ul , ul ; move ul , 4 ; move ua , 0 )  | ( v0 = ua + ul ; move ul , v0 ; move v0 , 4 )  | ( ( pen 2 ; move ul , ul ) ; move ua + ul , 3 + ul )  | ( move ul , ul ; move ua + ul , 3 + ul ; move 0 , ua )  | ( move ul , ul ; move ua + ul , 3 + ul ; v0 = ul )  | ( pen ua * 3 ; move ul , ul ; move ua + ul , ua + 4 )  | ( ( pen 4 ; pen ua ) ; move ul , ul ; move ua + ul , 2 * 2 )  
[2710] ( move ua , ul - 4 ; move ua , ul )  | ( pen ua ; move ua , ua - 3 ; move ua , ul )  | ( move ua , ul - 4 ; pen ul + ul ; move ua , ul )  | ( move ua , ul - 4 ; move 0 , 2 - ul ; move ua , ua )  | ( v0 = ua ; ( move v0 , ul - 4 ; move v0 , ul ) )  | ( pen ua ; move ua , ua - 3 ; ( move ua , ul ; pen ul ) )  
[2711] ( move ua , ul ; move 4 , ua * ua )  
[2712] ( move ua , ul ; move 4 - ua , ul )  | ( move ua , ul ; move 4 - ua , ua + ul )  | ( move ua , ul ; move 0 , ua ; move 4 - ua , ul )  
[2713] ( move 4 , ua * ua ; move ua , ul )  | ( move 3 + ul , ua * ua ; move ua , ul )  | ( move 2 * 2 , ua * ua ; move ua , ul ; v0 = 2 )  
[2714] ( move ul - ua , 4 ; move ua , ul )  | ( pen ul ; move ul - ua , 4 - ua ; move ua , ul )  | ( move ul - ua , 4 ; move ua , ua + ul ; pen 3 - 2 )  
[2715] ( move ul , 3 ; move ul - ua , ul )  | ( move ul , 2 + ul ; move ul - ua , ul )  | ( move ul , 3 ; move ul - ua , ua + ul )  | ( move ul , 3 ; pen 4 / 3 ; move ul - ua , ul )  | ( move ul / ua , 0 ; move ul , 3 - ua ; move ul - ua , ul )  | ( ( move ua - ul , 4 ; pen ul ) ; move 0 , ul ; move ul , ul )  
[2716] ( move ul , 2 / ua ; move ua , ul )  | ( move ul , ul / 3 ; move ua , ul )  
[2717] ( move ua , 2 / ua ; move ul , ul )  | ( move ua , ul / 3 ; move ul , ul )  | ( move ua , 2 / ua ; move ul , ul ; v0 = 2 - ul )  
[2718] ( move ua , ul ; move ua - ul , 4 )  | ( move ua , ul ; move 4 + ul , 3 + ul )  | ( move ua , ul ; move ua - ul , ua + 4 ; v0 = 4 )  | ( ( move ua , ul ; pen ul ) ; move 4 + ul , 4 ; pen 4 + 2 )  
[2719] ( move ul , ul ; move ua , 2 / ua )  | ( pen 3 ; move ul , ul ; move ua , 2 / ua )  | ( move 2 - ul , ul ; move 4 + 2 , ul / 3 )  | ( move 0 , ua ; move ul , ul ; move ua , ul / 3 )  | ( pen ul ; ( move ul , ul ; pen ua ; move ua , 2 / ua ) )  
[2720] ( move 3 - ua , ul ; move ul , ul )  | ( move 3 - ua , ul ; v0 = 2 ; move ul , ul )  | ( move 3 - ua , ul ; ( pen ul ; move ul , ul ) )  | ( move 3 - ua , ul ; move ul , ul ; move 0 , 3 + ul )  | ( move ul / ua , ul ; move 3 - ua , 0 ; move ul , ul )  | ( pen 3 ; ( move 3 - ua , ul ; move ul , ul ; v0 = ul ) )  | ( move 0 , ul ; ( pen ul ; move 3 - ua , ua ) ; move ul , ul )  | ( pen ul ; pen ua + 2 ; ( move 3 - ua , ul ; move ul , ul ) )  
[2721] ( move 3 , ul ; move ul , ua * ua )  | ( move 3 , 4 - 3 ; move ul , 4 + 4 )  | ( move 3 , ua + ul ; move ul , ua * ua )  | ( move 2 , ul ; move 2 - ul , ua ; move ul , ua * ua )  
[2722] ( move 4 , ul ; move ua , ua * ua )  | ( move 4 , ul ; move 0 , ua * ua ; move ua , ua )  | ( move 4 , ul ; v0 = ua ; move v0 , v0 * ua )  
[2723] ( move 3 , ul ; move ul - ua , ul )  | ( move 3 , ul ; move ul - ua , ua + ul )  | ( move 3 , ul ; ( pen 2 ; move ul - ua , ul ) )  | ( move 3 , ul ; v0 = ul - ua ; move v0 , ul )  | ( v0 = ul - ua ; move 3 , ul ; move v0 , v0 )  | ( v0 = ul ; move 3 , v0 ; move v0 - ua , v0 )  | ( move 3 , 2 - ul ; ( move ul - ua , ul ; v0 = 2 ) )  
[2724] ( move ul , ua - 4 ; move ua , ul )  | ( move ua , ul / ua ; move ul , ua - ul )  | ( move ul , 0 - 4 ; v0 = ua ; move v0 , ul )  | ( move ul , ua - 4 ; v0 = ua ; move v0 , ul )  
[2725] ( move ul , ua ; move ul - ua , 4 )  
[2726] ( move ul , ua * ua ; move 3 , ul )  | ( move ul , ua * ua ; move 3 , ul ; v0 = 3 )  | ( pen 2 / ua ; move ul , ua * ua ; move 3 , ul )  | ( ( move ul , ua * ua ; move 3 , ul ) ; v0 = 4 - ul )  
[2727] ( move ul , 4 ; move ua , ua * ua )  | ( move ul , 4 - ua ; move ua , ua * ua ; pen 0 )  
[2728] ( move ua , ul / ua ; move ul , 2 )  | ( move ul , 0 - ul ; move ua , ua - 2 )  | ( move ua , ul / ua ; move ul , 2 - ua )  | ( move ua , ul / ua ; pen 2 ; move ul , 2 )  | ( move ua , ul / ua ; move ul , 2 ; v0 = ul )  | ( move ul , 0 - ul ; v0 = ul - 3 ; move ua , v0 )  | ( ( move ua , ul / ua ; move ul , ul + ul ) ; move 0 , ua )  
[2729] ( move ua , ul ; move 2 , ul / ua )  | ( move ua , ul ; pen ua ; move 2 , ul / ua )  | ( move ua , ul - ua ; move ua - 4 , ul / ua )  | ( move ua , ul ; v0 = ul ; move 2 * v0 , v0 / ua )  
[2730] ( move ua - ul , ul ; move ua , 4 )  | ( move ua - ul , ul - ua ; move ua , 4 )  | ( move ua - ul , ul ; move ua , 4 ; move 0 , ul )  | ( move ua - ul , ul ; v0 = 4 ; move ua , v0 )  | ( pen 3 ; move ua - ul , ua + ul ; move ua , 3 + ul )  | ( move ua - ul , ua + ul ; v0 = ua ; move v0 , 4 )  
[2731] ( move ua - 4 , ul ; move ua , ul )  | ( move ua - 4 , ul ; move ua , ua + ul )  
[2732] ( move 2 / ua , ul ; move ua , ul )  | ( move ul / 3 , ul ; move ua , ul )  | ( move ul / 4 , ul ; move ua , ul )  | ( move 2 / ua , ul ; move 3 + 3 , ul )  | ( move 2 / ua , 2 - ul ; move ua , ul )  | ( move 2 / ua , ua + ul ; move ua , ul )  | ( move ul / 3 , ul ; pen 3 ; move ua , ul )  | ( move ul / 3 , ua + ul ; pen 2 ; move ua , ul )  | ( move 2 / ua , ul ; v0 = ua ; move v0 , ul )  | ( move ul / 3 , ul ; v0 = ua ; move v0 , ul )  | ( move ul / 3 , ul ; move ua , ul ; v0 = 3 * 2 )  | ( pen ul ; move ul / 4 , ul - ua ; ( pen ul ; move ua , ul ) )  
[2733] ( move 4 - ua , ul ; move ua , ul )  | ( move 4 - ua , ua + ul ; move ua , ul )  | ( move 4 - ua , ul ; move ua , ua + ul )  | ( ( move 4 - ua , ul ; move ua , ul ) ; v0 = ul )  
[2734] ( move 4 , ua ; move ul - ua , ul )  | ( move 3 + ul , 0 ; move ul - ua , ul )  | ( move 3 , 0 ; move ul , ua ; move ul - ua , ul - ua )  | ( ( move 4 , ua ; v0 = ul - ua ) ; move v0 , ul )  | ( v0 = ua ; move 4 , 0 ; move ul - v0 , ul + v0 )  | ( move 2 + ul , ua ; move ul , ua ; move ul - ua , ua + ul )  | ( ( pen ul ; ( move 4 , 0 ; move ul - ua , ul ) ) ; pen ul )  
[2735] ( move ul , ul / ua ; move ua , 2 )  | ( move ul , ul / ua ; move ua , 4 - 2 )  | ( move ul , ul / ua ; move ua , ul + ul )  
[2736] ( move ua , ul ; move ua , ua / 3 )  | ( pen ul ; move ua , ul ; move ua , ua / 3 )  | ( move ua , ul ; ( move ua , ua / 3 ; pen ul ) )  
[2737] ( move ua , ua * ua ; move 4 , ul )  | ( move ua , ua * ua ; v0 = ul ; move 4 , ul )  
[2738] ( move ul , 2 ; move ua , ul / ua )  | ( move ul , ul + ul ; move ua , ul / ua )  | ( pen ul ; move ul , 2 ; move ua , ul / ua )  | ( move ul , 2 ; move ua , ul / ua ; v0 = 2 )  
[2739] ( move ua , ua * ua ; move ul , 4 )  | ( move ua , ua * ua ; move ul , 2 - 4 )  
[2740] ( move ul , ul ; move ul - ua , 3 )  | ( move ul / ua , 3 ; move ua , ul )  | ( move ul , ul ; pen ul ; move ul - ua , 3 )  | ( pen 4 / ua ; move ul , ul ; move ul - ua , 3 )  | ( move ua , 4 ; v0 = ua ; move 2 / v0 , ul )  | ( v0 = ul ; move v0 , v0 ; move v0 - ua , 3 )  | ( v0 = ul - ua ; ( move ul , v0 ; move v0 , 3 ) )  
[2741] ( move 4 , ua ; move ua - ul , ul )  | ( move 3 + ul , ua ; move ua - ul , ul )  | ( v0 = ua ; move 4 , v0 ; move v0 - ul , ul )  | ( move 3 + ul , ua ; move ua - ul , ul ; pen 4 + 4 )  | ( move 4 , ua ; move ua - ul , ul ; v0 = ul + ul )  | ( move 3 + ul , ua ; v0 = ul ; move ua - ul , v0 )  
[2742] ( move ua , 4 ; move ul - ua , ul )  | ( move ua , ua + 4 ; move ul - ua , ua + ul )  | ( move ua , 4 ; move ul - ua , ul ; v0 = 0 )  | ( move 0 , 3 ; move ua , ul ; move ul - ua , ul )  | ( ( pen ua ; move ua , 4 ) ; move ul - ua , ul )  | ( move ua , 4 ; move ul - ua , ul ; v0 = ua * 4 )  | ( move ua , 3 + ul ; ( move ul - ua , ul ; v0 = ul ) )  | ( pen ua * 4 ; pen ul ; ( move ua , 4 ; move ul - ua , ul ) )  
[2743] ( move 2 , ul ; move ua , ul / ua )  | ( move 2 , ul ; pen 4 ; move ua , ul / ua )  | ( move ul + ul , ul ; move ua , ul / ua ; move 0 , ua )  | ( v0 = ul ; move ul + ul , ul ; move ua , ul / ua )  | ( move 2 , ua + ul ; ( move ua , ul / ua ; v0 = 0 ) )  
[2744] ( move ul , ul ; move ua , 4 + ul )  | ( move ul , ul ; pen ul ; move ua , 4 + ul )  | ( move 2 - ul , ul ; move ua , 4 + ul ; pen ul )  | ( move ul , ul ; ( move ua , 4 + ul ; v0 = ul / ua ) )  
[2745] ( move ul , ua ; move 3 , ul / ua )  | ( move ul , 0 ; move ua / 2 , ul / ua )  | ( move ul , ua ; move 3 , ul / ua ; pen 4 )  | ( move ul , 0 ; move ul , ul / ua ; move 2 , ua )  
[2746] ( move ul , ul ; move ua , ua / 3 )  | ( move ul , ul ; move 3 * 2 , ua / 3 )  | ( move ul , ua + ul ; move ua , ua / 3 )  | ( move ul , ul ; pen 3 + ul ; ( move ua , ua / 3 ; pen ul ) )  
[2747] ( move ua - ul , ul ; move 4 , ul )  | ( move ua - ul , ul ; move 3 + ul , ul )  | ( move ua - ul , ul ; move 2 + 2 , 2 - ul )  | ( move ua - ul , ul - ua ; move 4 , ul ; v0 = ua )  | ( v0 = ua ; move ua - ul , ul - v0 ; move 4 , ul )  
[2748] ( move ul - ua , 4 ; move ul , ul )  | ( move ul - ua , ua + 4 ; move ul , ul )  | ( move ul - ua , 4 ; move ul , ul ; pen ul )  | ( move ul - ua , 4 ; move ul , ul ; pen ua * ua )  | ( move ul - ua , 4 ; v0 = ul ; move v0 , ul )  | ( move ul - ua , 4 ; pen ua * 4 ; move ul , ua + ul )  | ( move ul - ua , 4 ; ( move ul , ul - ua ; pen ul ) )  
[2749] ( move ul , ua ; move ua , 4 / ua )  | ( move ul , 0 ; move ua , 4 / ua ; pen ul )  | ( move ul , ua ; pen ua ; ( move ua , 4 / ua ; v0 = 4 ) )  | ( move ul , ua ; ( move ua , 4 / ua ; pen ul ) ; v0 = ua )  
[2750] ( move ul - ua , ul ; move ul , 4 )  | ( move ul - ua , ul ; move 2 - ul , 4 )  | ( pen 3 ; move ul - ua , ul ; move ul , 4 )  | ( move ul - ua , ul ; move ul , 4 ; pen 3 )  | ( v0 = ul - ua ; move v0 , v0 ; move ul , 4 )  | ( v0 = ul ; move v0 - ua , ul ; move v0 , 4 )  
[2751] ( move 4 , ul ; move ul , ua * ua )  | ( move 4 , 3 - 2 ; move ul , ua * ua )  | ( move 3 + ul , ul ; move ul , ua * ua )  | ( move 3 + ul , ul ; ( move 0 , 4 ; move ul , 4 ) )  | ( move 4 , ul ; move ul , ua * ua ; v0 = 4 + ul )  | ( move 3 + ul , ul ; pen 4 + ul ; move 0 - ul , 4 + ul )  
[2752] ( move ul , ul ; move ua , 3 / ua )  | ( move ul , 2 - ul ; move ua , 3 / ua )  | ( move ul , ul ; move ua , 3 / ua ; pen 0 )  | ( move ul , ul ; move ua , 3 / ua ; pen 3 )  | ( v0 = ul ; move v0 , v0 * v0 ; move ua , 3 / ua )  
[2753] ( move 4 , ua * ua ; move ul , ul )  | ( move 4 , ua * ua ; move ul , ua + ul )  | ( move 3 + ul , ua * ua ; move ul , ul )  | ( pen ul ; move 4 , ua * ua ; move ul , ua + ul )  | ( move 4 , ua * ua ; v0 = ul ; move ul , v0 )  
[2754] ( move ua , ul ; move 3 , ul / ua )  | ( move ua , ul ; move ua / 2 , ul / ua )  | ( move ua , ul ; v0 = 2 + ul ; move v0 , ul / ua )  | ( move ua , ul ; ( move 2 - 3 , ul / ua ; move 4 , ua ) )  
[2755] ( move ul , 4 ; move ul - ua , ul )  | ( move ul , 3 + ul ; move ul - ua , ul )  | ( move ul , 4 ; pen 3 ; move ul - ua , ua + ul )  | ( move ul , 4 ; v0 = ul ; move v0 - ua , v0 )  | ( move ul , ua + 4 ; v0 = ul - ua ; move v0 , v0 )  | ( move ul , 3 + ul ; v0 = ul - ua ; move v0 , v0 )  | ( v0 = ul ; move v0 , 4 ; move ul - ua , ul / v0 )  
[2756] ( move ul - ua , ul ; move 4 , ul )  | ( move ul - ua , 2 - ul ; move 4 , ul )  | ( move ul - ua , ul ; move 3 + ul , ul )  | ( move ul - ua , ul ; move 4 , ul - ua )  | ( ( move ul - ua , ul ; pen ua ; pen ul ) ; move 4 , ua + ul )  
[2757] ( move ul , ua * ua ; move 4 , ul )  | ( move ul , ua * ua ; move 4 , ua + ul )  | ( move ul , ua * ua ; ( move 3 , ul ; move ul , ua ) )  
[2758] ( move 3 , ul ; move ua , ul / ua )  | ( move 3 , ul ; v0 = ua ; move v0 , ul / v0 )  | ( move 3 , ua + ul ; v0 = ua ; move ua , ul / v0 )  | ( move 0 , ua ; ( move 2 + ul , ul ; move ua , ul / ua ) )  
[2759] ( move ul , 3 ; move ua , ul / ua )  | ( move ul , ua + 3 ; move ua , ul / ua )  | ( move ul , 4 - ul ; move ua , ul / ua )  
[2760] ( move ul , ul ; move ul - ua , 4 )  | ( move ul , ul ; move ul - ua , ua + 4 )  | ( move ul , ul ; move ul - ua , 3 + ul )  | ( pen ul ; move ul , ul ; move ul - ua , 4 )  | ( move ul , ul ; pen 3 ; move ul - ua , ua + 4 )  | ( v0 = ul ; move v0 , v0 ; move ul - ua , 4 )  
[2761] ( move ul , ua / 3 ; move ua , ul )  | ( move ul , ua / 3 ; ( move ua , ul ; v0 = ul ) )  | ( move 2 - ul , ua / 3 ; pen ua + ul ; move ua , ul )  
[2762] ( move ua , ul / ua ; move 3 , ul )  | ( move ua , ul / ua ; move 0 , ul ; move 3 , 0 )  | ( move ua , ul / ua ; move 3 , ul ; v0 = 4 + ul )  | ( move ua , ul / ua ; v0 = ul ; move 2 + v0 , ul )  | ( move ua , ul / ua ; ( move 3 , ul ; pen ua * ua ; pen ul ) )  
[2763] ( move ul , ul ; move 4 , ua * ua )  | ( move ul , ul ; move 4 , ua * ua ; pen ul )  | ( move ul , ua + ul ; pen ul ; move 4 , ua * ua )  
[2764] ( move 4 , ul ; move ua - ul , ul )  | ( move 4 , ul ; move ua - ul , ul ; pen ua + ul )  | ( move 4 , ul ; v0 = ua ; move v0 - ul , ul )  | ( ( pen ul ; move 0 , 0 ; move 4 , ul ) ; move ua - ul , ul )  
[2765] ( move ua - ul , 4 ; move ul , ul )  | ( move ua - ul , 2 + 2 ; move ul , ua + ul )  | ( move ua - ul , 4 ; move ul , ul ; v0 = ua )  | ( move 3 / ua , ul ; move ua - ul , 3 ; move ul , ul )  | ( ( move 0 , 0 ; move ua - ul , 2 * 2 ) ; move ul , ul )  | ( v0 = ul ; move ua - v0 , 3 + ul ; move v0 , v0 )  
[2766] ( move 4 , ul ; move ul - ua , ul )  | ( move 2 * 2 , ul ; move ul - ua , ul )  | ( move 3 + ul , ul ; move ul - ua , ul )  | ( move 4 , ul ; move ul - ua , ul ; pen 3 )  | ( pen ua ; move 4 , ul ; move ul - ua , ul )  | ( move 4 , ul ; v0 = ul - ua ; move v0 , ul )  
[2767] ( move 3 , ul / ua ; move ua , ul )  | ( ( move 0 , ul / ua ; move 3 , ua ) ; move ua , ul )  
[2768] ( move ul - 4 , ul ; move ua , ul )  | ( pen 3 + ul ; move ul - 4 , ul ; move ua , ul )  | ( move ul - 4 , ul ; move ua , ul - ua ; v0 = ua + 2 )  
[2769] ( move ua , ua / 4 ; move ul , ul )  | ( move ua , ua / 4 ; move ul , ua + ul )  | ( move ua , ua / 4 ; ( pen ul ; move ul , ul ) )  | ( move ua , ua / 4 ; ( pen ul - 2 ; move ul , ul ) )  | ( move ua , ua / 4 ; move ul , ul ; v0 = ul + ul )  | ( move ua , ua / 4 ; move ul , ua + ul ; v0 = ua + 2 )  
[2770] ( move ul , ua ; move 4 , ul / ua )  | ( move ul , ua ; ( move 4 , ul / ua ; pen ua ) )  | ( move ul , ua ; ( pen 4 + ul ; pen ul ; move 4 , ul / ua ) )  
[2771] ( move ua , ul / 4 ; move ua , ul )  | ( move ua , ul / 4 ; move ua , ua + ul )  | ( move ua , ul / 4 ; move ua , ul ; pen 3 + 2 )  | ( pen ul ; ( move ua , ul / 4 ; pen ua ) ; move ua , ul )  
[2772] ( move 4 , ul / ua ; move ua , ul )  | ( move 3 + ul , ul / ua ; move ua , ul )  | ( move 4 , ul / ua ; move ua , ul ; move 0 , 3 )  | ( move 4 , ul / ua ; move ua , ul ; v0 = 3 )  | ( move ul , ul / ua ; move 3 , ua * 4 ; move ua , ul )  | ( ( move 3 , ul / ua ; move ul , ua ) ; move ua , ul )  | ( ( move 4 , ul / ua ; v0 = ua ) ; move v0 , ul )  
[2773] ( move ul , ua / 4 ; move ua , ul )  | ( move ul , ua / 4 ; move 3 , ul ; move 3 , 0 )  
[2774] ( move ul , ul / ua ; move 3 , ul )  | ( move ul , ul / ua ; move 3 , ua + ul )  | ( move ul , ul / ua ; move 2 + ul , ul )  | ( pen ul / ua ; move ul , ul / ua ; move 4 - ul , ua + ul )  
[2775] ( move ul , ul ; move 3 , ul / ua )  | ( move ul , ua + ul ; move 3 , ul / ua )  | ( move ul , ul ; move ua - 3 , ul / ua )  | ( move ul , ul ; move 4 - ul , ul / ua )  | ( pen ul ; move ul , ul ; move ua / 2 , ul / ua )  | ( move ul , ul ; v0 = ul - 4 ; move v0 , v0 )  
[2776] ( move ua , ul / ua ; move ul , 4 )  | ( move ua , ul / ua ; move ul , 3 + ul )  | ( move ua , ul / ua ; move ul , 3 + ul ; pen ul )  | ( move ua , ul / ua ; move ul , 4 ; v0 = ua / 2 )  | ( move ua , ul / ua ; ( pen 2 - ul ; move ul , 4 ) )  | ( move ua , ul / ua ; move ul , 4 ; v0 = ul - ua )  | ( v0 = ua ; move v0 , ul / v0 ; move ul , 2 * 2 )  
[2777] ( move 3 , ul / ua ; move ul , ul )  | ( move 4 - ul , ul / ua ; move ul , ul )  | ( pen ua ; move 3 , ul / ua ; move ul , ul )  | ( ( pen 3 ; move 3 , ul / ua ) ; move ul , ul )  
[2778] ( move ua , ul ; move ul , ua / 4 )  | ( move ua , ua + ul ; move ul , 3 / 2 )  | ( move ua , ul ; move ul , ua / 4 ; pen 0 )  | ( move ua , ul ; move ul , ua / 4 ; move 0 , 4 )  
[2779] ( move ul , 4 / ua ; move ua , ul )  
[2780] ( move ua , ul ; move 4 , ul / ua )  | ( move ua , ul ; move 3 + ul , ul / ua )  | ( move ua , ua + ul ; v0 = ul / ua ; move 4 , v0 )  
[2781] ( move ul , ul ; move ua , ua / 4 )  
[2782] ( move ua , ul / ua ; move 4 , ul )  | ( move ua , ul / ua ; move 3 + ul , ul )  | ( ( move ua , ul / ua ; move 3 , ul ) ; move ul , ua )  
[2783] ( move ul , ul ; move 4 , ul / ua )  | ( move ul , ul ; move 4 , ul / ua ; v0 = ua )  | ( move ul , ul ; move 2 + 2 , ul / ua ; pen ul )  | ( pen ua + ul ; move ul , ul ; move 4 , ul / ua )  | ( move ul , ul ; v0 = ua ; move 4 , ul / v0 )  | ( move ul , 3 - 2 ; move 4 , ul / ua ; v0 = ua )  
[2784] ( move 4 , ul ; move ul , ul / ua )  | ( move 2 - ua , ua + ul ; move ul , 3 )  | ( move 4 + ul , ul ; move ul / 4 , ul )  | ( pen ul / 3 ; move 4 , ul ; move ul , ul / ua )  | ( move 2 - ua , ul ; ( move ul , 3 ; v0 = ua + ua ) )  
[2785] ( move ul , ul ; move ua , ul / 4 )  | ( pen ul ; move ul , ul ; move ua , ul / 4 )  | ( move ul , ul ; v0 = ul / 4 ; move ua , v0 )  | ( v0 = ul ; ( move v0 , ul ; move ua , v0 / 4 ) )  
[2786] ( move ul , ul / 4 ; move ua , ul )  | ( move ul , ul / 4 ; pen 3 ; move ua , ul )  | ( move ul , ul / 4 ; pen 4 ; move ua , ul )  | ( move ul , ul / 4 ; move ua , ul ; v0 = 2 )  | ( pen ua + ul ; move ul , ul / 4 ; move ua , ul )  | ( v0 = ul ; move v0 , ul / 4 ; move ua , ul )  | ( move ul , ul / 4 ; v0 = ua + ua ; move ua , ul )  
[2787] ( move 4 , ul / ua ; move ul , ul )  | ( move 3 + ul , ul / ua ; move ul , ul )  | ( move 4 , ul / ua ; move ul , ul ; pen ul + ul )  | ( move 4 , ul / ua ; v0 = ul ; move v0 , v0 )  | ( move 4 , ul / ua ; move 2 - ul , ul ; v0 = 3 )  | ( ( move 0 , ua ; move 3 + ul , ul / ua ) ; move ul , ul )  
[2788] ( move ul , ul / ua ; move 4 , ul )  | ( move ul , ul / ua ; move 2 + 2 , ul )  | ( move ul , ul / ua ; move 3 + ul , ul )  
[2789] ( move ua , ul / 4 ; move ul , ul )  | ( pen ul ; move ua , ul / 4 ; move ul , ul )  | ( move ua , ul / 4 ; ( pen 2 ; move ul , ul ) )  | ( move ua , ul / 4 ; v0 = ul ; move v0 , ul )  
[2790] ( move 0 , 2 ; pen 0 ; move ua , 2 )  | ( move 0 , 2 ; pen ul - ua ; move ua , 2 )  | ( move 0 , 4 ; ( pen 0 ; move ua , 0 ) ; v0 = ul )  
[2791] ( move 4 , 0 ; pen 0 ; move ul , 0 )  | ( move 4 , ua ; pen 0 ; move ul , 0 )  | ( move 4 , 0 ; pen 0 ; move ul , ua )  | ( move 4 , ua ; pen 0 ; move ul , ua )  | ( move 4 , ua ; pen 2 - 3 ; move ul , 0 )  | ( move 4 , ua + ua ; pen 0 ; move ul , 0 )  | ( move 4 , ua ; ( pen 0 ; move ul , ua ) )  | ( move 4 , ua ; pen ul - ua ; move ul , ua )  | ( move 4 , ua ; ( pen 2 - 4 ; move ul , ua ; pen 3 ) )  
[2792] ( move ul , 0 ; pen 0 ; move 3 , 2 )  
[2793] ( move 2 , ua ; pen 0 ; move 4 , 0 )  | ( move 2 , ua ; ( pen ul - ua ; move 4 , 0 ) )  
[2794] ( move 4 , 0 ; pen 0 ; move 2 , ul )  | ( ( move 3 + ul , 0 ; pen 0 ) ; move 2 , ul )  
[2795] ( move 2 , 2 ; pen 0 ; move 2 , ul )  | ( move 3 - ul , 2 ; pen 0 ; move 2 , ul - ua )  
[2796] ( move 2 , 0 ; pen 0 ; move 4 , ul )  | ( ( move 2 , ua ; pen 0 ) ; move 4 , ul )  | ( move 2 , ua ; ( pen 0 - 4 ; move 4 , ul ; pen ua - ul ) )  
[2797] ( move 2 , 2 ; pen 0 ; move ua , 4 )  
[2798] ( move 0 , ul ; pen 0 ; move 4 , 3 )  | ( ( move 0 , ua ; pen 0 ) ; ( move 4 , 4 ; move 0 , 3 ) )  
[2799] ( move 4 , 0 ; pen 0 ; move 3 , ul )  | ( ( move 4 , 0 ; pen ul / ua ) ; move 3 , ul )  
[2800] ( move 4 , 0 ; pen 0 ; move ul , 4 )  
[2801] ( move ul , 4 ; pen 0 ; move 4 , 0 )  | ( move ul , 2 + 2 ; pen 0 ; move 3 + ul , ua )  
[2802] ( move 4 , 4 ; pen 0 ; move ul , 0 )  | ( move 3 + ul , ua + 4 ; pen 0 ; move ul , 0 )  | ( ( move 4 , 4 ; pen 2 - ua ) ; move ul , ua )  
[2803] ( move 2 , 4 ; pen 0 ; move 2 , ul )  
[2804] ( move 3 , 3 ; pen 0 ; move ul , 4 )  
[2805] ( move 4 , ua ; pen 0 ; move 3 , 4 )  
[2806] ( move 3 , 4 ; move 2 , 3 ; pen ul )  | ( move ua - 3 , 4 ; move 2 , 3 - ua )  | ( move 3 , 4 ; pen ul ; move ul + ul , 3 )  | ( ( v0 = 3 ; move v0 , 4 ) ; move v0 - ul , v0 )  
[2807] ( move 2 , 4 ; pen ua ; move 4 , 3 )  | ( move 2 , 4 ; move ul , 3 ; move 3 , ua )  | ( move 2 , ua + 4 ; move 3 , 3 ; move ul , ua )  
[2808] ( move ua , ua ; move ua , ua * ua )  | ( pen ul ; move ua , 0 ; move ua , ua * ua )  | ( ( pen 4 ; move ua , ua ) ; move ua , ua * ua )  | ( pen ua ; ( move ua , ua ; move ua , ua * ua ) )  | ( move ua , 0 ; move ua - 4 , ua * ua ; move 4 , 0 )  | ( move ua , 0 ; move ua , ua * ua ; v0 = 4 + ul )  | ( v0 = ua ; move v0 , ua ; move v0 , ua * v0 )  | ( move ua , ua ; v0 = ua ; move v0 , v0 * v0 )  | ( v0 = ua ; move v0 , ua ; move ua , v0 * v0 )  | ( v0 = ua ; move ua , v0 ; move v0 , v0 * v0 )  | ( v0 = ua ; move v0 , v0 ; move v0 , v0 * v0 )  | ( move ua , 0 ; ( v0 = ua ; move v0 , v0 * v0 ) )  | ( ( move ua , 0 ; move ua , ua * ua ; pen ul ) ; v0 = 0 )  
[2809] ( move ua , ua * ua ; move ua , ul )  | ( move ua , ua * ua ; ( v0 = ul ; move ua , v0 ) )  | ( ( move ua , ua * ua ; move ua , 2 - ul ) ; move 0 , 4 )  | ( v0 = ua + ul ; move ua , ua * v0 ; move ua , v0 )  
[2810] ( move ua , ul ; move ua , ua * ua )  | ( move ua , ul ; move ua , ua * ua ; pen 4 )  | ( move ua , ul ; v0 = ua ; move v0 , ua * v0 )  
[2811] ( move ua , ul ; move ul , ua * ua )  | ( move ua , ua + ul ; move ul , ua * ua )  | ( move ua , ul ; move ul , ua * ua ; v0 = 4 )  | ( move ua , ul ; v0 = ul ; move v0 , 4 * 2 )  | ( move ua , ul ; ( pen ua ; move ul , ua * ua ) )  | ( move ua , ua + ul ; move 0 , 4 * 2 ; move ul , 0 )  | ( ( move ua , ul ; move ul , ua * ua ; pen ul ) ; pen ul )  | ( ( pen ua ; ( move ua , ul ; pen ul ) ) ; move ul , ua * ua )  
[2812] ( move ua , ul ; move ul - ua , ul )  | ( move ua , ua + ul ; move ul - ua , ul )  | ( move ua , ul ; pen ul ; move ul - ua , ul )  | ( move ua , ul ; pen 2 * 2 ; move ul - ua , ul )  | ( move ua , ul ; move ul - ua , ul ; pen ua + 3 )  | ( move ua , ul ; move ul - ua , ul ; pen 4 + ul )  | ( move ua , ul ; ( move ul - ua , ul ; pen ua ) )  | ( move ua , ul ; move ul - ua , ul ; pen ul / ua )  | ( move ua , ul ; v0 = ua ; move ul - v0 , ul )  | ( v0 = ua ; move v0 , ul ; move ul - v0 , ul )  | ( move ua , ul ; move ul - ua , ul ; move 0 , ul / 2 )  | ( ( move ua , ul ; v0 = ul - ua ) ; move v0 , v0 )  
[2813] ( move ua + ul , ul ; move ul , ul )  | ( move ua + ul , ul ; move ul , ul - ua )  | ( move ua + ul , ul ; move ul , ul ; pen 3 )  | ( move ua + ul , ul ; pen ul ; move ul , ul )  | ( pen ul ; move ua + ul , ul ; move ul , ul )  | ( move ua + ul , ul ; move 0 , 0 ; move ul , ul )  | ( move ul , ul ; move ua , ua ; move 0 - ul , 4 )  | ( ( move ul , ul ; move ua , 0 ) ; move ul , ul )  | ( ( move ul , ul ; move ua , ua ) ; move ul , ul )  | ( pen 4 + ul ; move ua + ul , ul ; move ul , ul )  | ( move ul , ua + ul ; move ua , ua ; move ul , ul )  | ( move ua + ul , ul ; v0 = ul ; move v0 , v0 )  | ( v0 = ul ; move ua + v0 , v0 ; move ul , v0 )  | ( ( v0 = ua + ul ; move v0 , v0 ) ; move ul , ul )  | ( move ua + ul , ua + ul ; v0 = ul ; move v0 , v0 )  
[2814] ( move ua , ua * ua ; move ul , ul )  | ( move ua , ua * ua ; move ul , 2 - ul )  | ( move ua , ua * ua ; move ul , ua + ul )  | ( move ua , ua * ua ; pen 2 ; move ul , ul )  | ( move ua , ua * ua ; v0 = ul ; move v0 * v0 , v0 )  
[2815] ( move ul , ul ; move ua , ua * ua )  | ( move ul , ua + ul ; move ua , ua * ua )  | ( move ul , ul ; move ua , ua * ua ; pen 0 )  | ( move ul , ul ; pen ul ; move ua , ua * ua )  | ( move ul , ul ; v0 = ua ; move ua , ua * v0 )  | ( move ul , ul ; v0 = ua ; move v0 , ua * v0 )  
[2816] ( move ul - ua , ul ; move ua , ul )  | ( move ul - ua , ul ; move ua , ua + ul )  | ( move ul - ua , ua + ul ; move ua , ul )  | ( move ul - ua , ul ; move ua , ul ; pen 3 + ul )  | ( ( move ul - ua , ul ; move ua , ul ) ; pen ul )  | ( ( move ul - ua , ul ; move ua , ul ) ; v0 = 2 )  | ( v0 = ul - ua ; move v0 , v0 ; move ua , v0 )  | ( move ul - ua , ul - ua ; move ua , ul ; v0 = ul )  | ( move ul - ua , ua + ul ; move ua , 3 - 2 ; v0 = ul )  | ( ( move ul - ua , ul - ua ; move 0 , ua ) ; move ua , ul )  | ( move ul - ua , ul ; v0 = ul ; ( move ua , ul ; pen 2 ) )  
[2817] ( move ul , ua * ua ; move ua , ul )  | ( move ul , ua * ua ; move ua , ul ; pen ua )  | ( pen ua * 3 ; move ul , ua * ua ; move ua , ul )  | ( pen ua + ul ; ( move ul , ua * ua ; move ua , ul ) )  | ( ( pen ua + 3 ; move ul , ua * ua ) ; move ua , ua + ul )  | ( move ul , ua * ua ; ( pen 3 ; move ua , ul ; pen ua - 3 ) )  
[2818] ( move ul , ul ; move ua + ul , ul )  | ( move ul , ul ; move ua + ul , 4 - 3 )  | ( move ul , 2 - ul ; move ua + ul , ul )  | ( move ul , ul ; move ua + ul , ua + ul )  | ( move ul , ua + ul ; move ua + ul , ul )  | ( move ul , ul - ua ; move ua + ul , ul )  | ( move ul , ul ; move ul , ul ; move ua , 0 )  | ( move ul , ul ; pen 2 ; move ua + ul , ul )  | ( move ul , ul ; move ua + ul , ul ; pen ul )  | ( pen ul ; move ul , ul ; move ua + ul , ul )  | ( ( move ul , ul ; move ul , ul ) ; move ua , 0 )  | ( move ul , ul ; move ua - ul , ul ; move 2 , ua )  | ( move ul , ul ; move ua + ul , ul ; pen ua - 2 )  | ( move ul , ul ; move ua + ul , ul ; pen ua * 3 )  | ( move ul , ul ; move ua + ul , ul ; pen 4 / ua )  | ( move ul , ul - ua ; pen ua ; move ua + ul , ul )  | ( move ul , ul ; pen ua + ul ; move ua + ul , ul )  | ( move ul , ul ; v0 = ua + ul ; move v0 , ul )  | ( move ul , ul ; ( move ua + ul , ul ; v0 = 2 ) )  | ( move ul , ul ; ( move ua - ul , ul ; move 2 , ua ) )  | ( v0 = ua + ul ; move ul , v0 ; move v0 , v0 )  | ( v0 = ul ; move v0 , v0 ; move v0 + ua , ul )  | ( v0 = ul ; move ul , v0 ; move v0 + ua , v0 )  | ( v0 = 0 ; move ul , ul ; move ua + ul , ul + v0 )  | ( ( move ul , ul ; v0 = ua + ul ) ; move v0 , v0 )  | ( move 2 - ul , ul ; ( move 0 , ua ; move ua + ul , ul ) )  | ( v0 = ua + ul ; move ul , v0 - ua ; move v0 , v0 )  | ( v0 = ul ; move v0 * v0 , ul ; move v0 + ua , ul )  | ( move 2 - ul , ul ; ( v0 = ua + ul ; move v0 , ul ) )  | ( ( move ul , ul - ua ; move ua + ul , ul ) ; pen ua + ul )  | ( ( move ul , ua + ul ; move ua , ul ; move ul , 0 ) ; pen 2 )  | ( ( move ul , ul ; move ul , ul ) ; v0 = ua ; move ua , ua )  
[2819] ( move ul - ua , ul ; move ul , ul )  | ( move ul - ua , ul ; move ul , 2 - ul )  | ( move ul - ua , ul ; move ul , ua + ul )  | ( pen 2 ; move ul - ua , ul ; move ul , ul )  | ( move ul - ua , ul ; move ul , ul ; pen 4 )  | ( pen ua ; move ul - ua , ul ; move ul , ul )  | ( move ul - ua , ul ; move ul , ul ; pen ua )  | ( move ul - ua , ul ; move ul , ul ; pen ul )  | ( ( move ul - ua , ul ; move ul , ul ) ; pen 3 )  | ( v0 = ul ; move ul - ua , v0 ; move v0 , ul )  | ( move ul - ua , ul ; v0 = ul ; move v0 , v0 )  | ( move ul - ua , ul ; move 0 , ul - ua ; move ul , ua )  | ( v0 = ul ; move ul - ua , v0 ; move v0 , v0 )  | ( move ul - ua , ul ; move ul , ul - ua ; v0 = ul )  | ( move ul - ua , ul ; v0 = ul ; move 2 - ul , v0 )  | ( move ul - 2 , 2 ; move ua - ul , 2 - 3 ; pen ul - ua )  | ( ( v0 = ul ; move v0 - ua , ul ) ; move v0 , v0 )  | ( v0 = ul ; move v0 - ua , ul / v0 ; move v0 , ul )  | ( move ul - ua , ua + ul ; move ul , ul ; v0 = ul / ua )  | ( ( pen 4 ; move ul - ua , ul ; pen ua + ul ) ; move ul , ul )  
[2820] ( move ul , ul ; move ul - ua , ul )  | ( move ul , ua + ul ; move ul - ua , ul )  | ( move ul , ul ; move ul - ua , ua + ul )  | ( move ul , ul ; move ul - ua , ul ; pen ul )  | ( move ul , ul ; move ul - ua , ul ; v0 = 0 )  | ( move ul , ul ; move ul - ua , ul ; v0 = 2 )  | ( move ul , ul ; ( move ul - ua , ul ; pen 2 ) )  | ( move ul , ul - ua ; pen ul ; move ul - ua , ul )  | ( move ul , ul ; v0 = ul ; move ul - ua , v0 )  | ( move ul , ul ; v0 = ul - ua ; move v0 , v0 )  | ( move 0 , ul ; ( move ul , ua ; move ul - ua , ul ) )  | ( v0 = ul ; move v0 , ul ; move v0 - ua , v0 )  | ( pen 4 - ul ; move ul , ua + ul ; move ul - ua , ul )  | ( move ul , ul ; ( move ul - ua , ul ; pen ua + ua ) )  | ( v0 = ul ; move ul / v0 , v0 ; move ul - ua , v0 )  
[2821] ( move ul , ul ; move ua - ul , ul )  | ( move ul , ua + ul ; move ua - ul , ul )  | ( move ul , ul ; move ua - ul , ua + ul )  | ( move ul , ul ; move ua - ul , ul - ua )  | ( move 0 , ul ; move ul , 0 ; move ua - ul , ul )  | ( pen 4 ; move 3 / 4 , ul ; move ua - ul , ul )  | ( move ul , ul ; pen 4 / 2 ; move ua - ul , ul )  | ( pen 3 ; move ul , ul ; move ua - ul , ua + ul )  | ( move ul , ul ; move ua - ul , ul ; pen ua / 2 )  | ( v0 = ul ; move ul , v0 ; move ua - ul , v0 )  | ( move ul , ul ; v0 = ul ; move ua - v0 , v0 )  | ( move ul , ul - ua ; move ua - ul , ua + ul ; pen 4 - ua )  | ( move ul , ul ; ( move ua - ul , ul ; move 0 , 4 ) ; pen ua )  
[2822] ( move ua , ul / ua ; move ua , ul )  | ( pen 4 + 3 ; move ua , ul / ua ; move ua , ul )  | ( move ua , ul / ua ; pen ua * 2 ; move ua , ul )  | ( move ua , ul / ua ; ( pen ul ; move ua , ua + ul ) )  
[2823] ( move ul , ul ; move ua , ul / ua )  | ( move 4 - 3 , ul ; move ua , ul / ua )  | ( move 4 / ua , ul ; move ua , ul / ua )  | ( move ul , ua + ul ; move ua , ul / ua )  | ( move ul , ul ; move ua , ul / ua ; pen 3 )  | ( move ul , ul ; move ua , ul / ua ; pen ua )  | ( move ul , ul ; move ua , ul / ua ; pen ul )  | ( move ul , ul ; pen ul ; move ua , ul / ua )  | ( move ul , ul ; move ua , ul / ua ; v0 = 4 )  | ( move 0 , ul ; move ul , ua ; move ua , ul / ua )  | ( move ul , ul ; move ua , ul / ua ; v0 = ul )  | ( v0 = ul ; move v0 , v0 ; move ua , v0 / ua )  | ( move ul , ua + ul ; move ua , ul / ua ; v0 = ul )  | ( move ul , ul - ua ; move ua , ul / ua ; v0 = ua + ul )  | ( move ul , ul ; ( move ua , ul / ua ; pen ul / ua ) ; pen 2 )  
[2824] ( move ua , ul / ua ; move ul , ul )  | ( move ua , ul / ua ; move ul , ua + ul )  | ( move ua , ul / ua ; move ul , ul ; pen 0 )  | ( move ua , ul / ua ; pen 3 ; move ul , ul )  | ( move ua , ul / ua ; pen ul ; move ul , ul )  | ( move 0 , ul / ua ; move ua , 0 ; move ul , ul )  | ( move ua , ul / ua ; move ul , ul ; v0 = ul )  | ( move ua , ul / ua ; ( move ul , ul ; pen ua ) )  | ( v0 = ul ; move ua , v0 / ua ; move v0 , ul )  | ( ( pen 4 ; move ua , ul / ua ; pen ul ) ; move ul , ul )  | ( move ua , ul / ua ; v0 = 4 - 3 ; move ul , ul / v0 )  
[2825] ( move ua , ul ; move ul , ul / ua )  | ( pen ua ; move ua , ul ; move ul , ul / ua )  | ( move 0 , ua ; move ua , ul ; move ul , ul / ua )  | ( move ua , ul ; move ul / ua , ul ; move ul , 0 - ul )  
[2826] ( move ul , ul / ua ; move ua , ul )  | ( move ul , ul / ua ; move ua , 2 - ul )  | ( move ul , ul / ua ; move ua , ua + ul )  | ( move ul , ul / ua ; move ua , ul ; pen ua )  | ( move 0 , 0 ; move ul , ul / ua ; move ua , ul )  | ( move 0 , ua ; move ul , ul / ua ; move ua , ul )  | ( ( move ul , ul / ua ; move ua , ul ) ; pen ul )  | ( move ul , ul / ua ; move ua , ul ; pen ua + ua )  | ( move ul , ul / ua ; move ua , ua + ul ; pen ua )  | ( move ul , ul / ua ; move ul , ul ; move ua - ul , 0 )  | ( v0 = ul ; move v0 , v0 / ua ; move ua , v0 )  
[2827] ( move ul , 0 ; pen 0 ; move ua , 0 )  | ( move ul , 0 ; pen 0 ; move ua , ua )  | ( move ul , ua ; pen 0 ; move ua , 0 )  | ( move ul , ua ; pen 0 ; move ua , ua )  | ( move 2 - ul , 0 ; pen 0 ; move ua , 0 )  | ( ( move ul , 0 ; pen 0 ; v0 = 3 ) ; move ua , 0 )  | ( ( move ul , ua ; pen 0 - ua ) ; move ua , ua ; v0 = 2 )  
[2828] ( move 2 , 0 ; pen 0 ; move ua , ua )  | ( move 2 , ua ; pen 0 ; move ua , ua )  | ( ( move 2 , 0 ; pen ul ) ; pen 0 ; move ua , 0 )  | ( move 2 , 0 ; ( pen ul ; pen 0 ; move ua , ua ) )  | ( ( move 4 / 2 , ua ; pen 0 ; move ua , 0 ) ; pen ua )  
[2829] ( move 2 , 0 ; move 3 + 2 , 0 - 3 )  | ( move 4 + ul , ul / ua ; move 2 , 3 )  | ( move 2 , ua ; move ul - ua , ul / ua )  
[2830] ( move 0 , ul ; pen 0 ; move ua , 2 )  | ( move 0 , 0 ; pen 0 - ul ; move ua , 3 )  | ( move 0 , ul ; ( pen 0 ; move ua , 2 ) )  | ( move 0 , ul ; pen 0 ; move ua , 2 - ua )  | ( move ul / ua , 2 ; pen 0 ; move ua , ul )  | ( move 0 , 2 ; pen 0 - 2 ; move ua , ua + ul )  | ( ( move 0 , 2 ; pen 0 - ua ) ; move ua , ul )  | ( move 0 , ua ; pen 3 - ua ; move ua , ua + 3 )  
[2831] ( move ul , 0 ; pen 0 ; move ua , 2 )  
[2832] ( move 3 , 0 ; pen 0 ; move ua , ul )  | ( move 2 + ul , ua ; pen 0 ; move ua , ul - ua )  | ( move 3 , 0 ; ( pen ul ; pen 0 ) ; move ua , ul )  | ( ( move 3 , ua ; pen 0 ) ; move ua , ul ; v0 = ul )  
[2833] ( move ua , 2 ; pen 0 ; move 2 , ua )  
[2834] ( move ul , ua ; pen 0 ; move 3 , 0 )  | ( move ul , 0 ; pen 0 ; move 3 , ua )  | ( move ul , ua ; pen 0 ; move 3 , ua )  | ( move ul , ua ; pen ul - 3 ; move 3 , 0 )  | ( ( move 2 - ul , ua ; pen 0 ) ; move 3 , ua )  | ( move ul , 0 ; pen ul - ua ; move 3 , ua + ua )  | ( move ul , 0 ; pen ul - ua ; move 2 + ul , 0 - ua )  
[2835] ( move 3 , 0 ; pen 0 ; move ul , ua )  | ( ( move 2 + ul , 0 ; pen 0 ; move ul , ua ) ; pen ua - 3 )  
[2836] ( move ul , 3 ; pen 0 ; move ua , 0 )  | ( move 2 - 3 , 0 - ua ; pen ul - ua ; move ua , 3 )  | ( ( move ul , 3 ; v0 = ua ) ; pen 0 ; move v0 , v0 )  
[2837] ( move ua , 2 ; pen 0 ; move 2 , ul )  
[2838] ( move ul , 2 ; pen 0 ; move ua , 2 )  | ( move ul , 2 ; pen 0 ; move ua , ul + ul )  | ( ( pen ul - 3 ; move 0 - ua , 4 ; pen ul ) ; move ul , ul )  
[2839] ( move ul , 0 ; pen 0 ; move ua , 4 )  | ( move ul , ua ; ( pen ul ; pen 2 - ua ) ; move ua , 4 )  
[2840] ( move 2 , ua ; pen 0 ; move 2 , ul )  | ( move ul + ul , ua ; ( pen 0 ; move 3 - ul , ua + ul ) )  
[2841] ( move ul , ul ; pen 0 ; move 4 , 0 )  | ( move ul , ua + ul ; pen 0 ; move 4 , 0 )  | ( move ul , ua + ul ; pen 3 - 4 ; move 4 , ua )  
[2842] ( move ua , 2 ; pen 0 ; move 3 , ul )  | ( move ua , ul + ul ; pen ul / ua ; move 3 , ul )  
[2843] ( move 2 , 0 - 2 ; move 2 * 2 , 3 )  
[2844] ( move 0 , ul ; pen 0 ; move 4 , ul )  | ( ( move 0 , ul ; pen 0 ; move 4 , ul ) ; pen ua )  
[2845] ( move ul , 0 ; pen 0 ; move 4 , ul )  | ( move ul , ua ; pen 0 ; move 4 , ul )  | ( move ul , ua ; pen 0 - 3 ; move 4 , ul )  | ( move ul , ua ; pen ul - 2 ; move 4 , ul )  | ( move ul , 0 ; ( pen ua - 4 ; ( pen 0 ; move 4 , ul ) ) )  
[2846] ( move 4 , 2 + 2 ; move 3 + 2 , 2 )  
[2847] ( move 3 , ua ; pen 0 ; move ua , 4 )  | ( move 3 , 0 ; ( pen 0 - 4 ; move ua , 4 ) ; pen 4 - ul )  
[2848] ( move 2 , ul ; pen 0 ; move ua , 4 )  
[2849] ( move 2 , 2 ; move 4 + 2 , 0 - 4 )  
[2850] ( move 4 , ua ; pen 0 ; move ua , 3 )  
[2851] ( move ua , ua ; pen 0 ; move 4 , 4 )  
[2852] ( move ul , 3 ; pen 0 ; move 4 , ua )  
[2853] ( move ul , ul ; pen 0 ; move 4 , 2 )  | ( move ul , ul ; ( pen ul / ua ; move 2 + 2 , ul + ul ) )  
[2854] ( move 3 * 2 , 0 ; move 4 + 3 , 2 )  
[2855] ( move 3 , ul ; pen 0 ; move ua , 4 )  
[2856] ( move 3 , ua ; pen 0 ; move 4 , ul )  
[2857] ( move ul , 2 ; pen 0 ; move 4 , ul )  | ( move ul , 3 - ul ; pen 0 ; move 4 , ul )  
[2858] ( move 4 , ul ; pen 0 ; move ua , 3 )  
[2859] ( move ul , 4 ; pen 0 ; move 3 , ul )  
[2860] ( move 3 , ul ; pen 0 ; move ul , 4 )  | ( move 3 , ul - ua ; pen 0 ; move ul , 4 )  
[2861] ( move 2 , 3 - 2 ; move 4 * 2 , 2 )  
[2862] ( move 4 , ul ; pen 0 ; move 4 , ul )  
[2863] ( move 4 , 3 + 3 ; move 0 - 3 , 4 )  
[2864] ( move 0 - 4 , 4 ; move 3 - 2 , 3 )  
[2865] ( move 3 , 4 - 2 ; move 2 , 3 + 3 )  | ( move 3 , 3 - ul ; move 2 , 3 * 2 )  
[2866] ( move 2 , 2 ; move 3 + 3 , 2 / 3 )  
[2867] ( move 2 - 4 , 3 * 2 ; move 4 , 2 )  
[2868] ( move 3 + 2 , 4 * 3 ; move 4 , 2 )  
[2869] ( move 4 / 2 , 2 / 3 ; move 2 , 2 )  
[2870] ( move 4 , 4 / 3 ; move 0 - 2 , 4 )  
[2871] ( move 2 , 4 - 2 ; move 3 * 3 , 4 )  | ( ( move 2 , 2 ; move 3 , 4 ) ; move ua , ua )  | ( ( move 2 , 2 ; move 4 , 3 + ul ) ; move 4 + ul , 0 )  | ( move ul , ul + ul ; ( move ua , 4 ; move 2 + ul , ua ) )  
[2872] ( move 4 , 3 + 3 ; move 3 * 3 , 3 )  
[2873] ( move 4 , 3 / 2 ; move 4 + 3 , 4 )  
[2874] ( move 4 , 3 ; move 3 / 2 , 3 * 3 )  
[2875] ( move 0 , ua ; pen 0 ; move ua , ua )  | ( move 0 , ua * 4 ; pen 0 ; move ua , 0 )  | ( move 0 , ua ; pen 3 - ua ; move ua , 0 )  | ( move 0 , ul - 2 ; pen 0 ; move ua , ul )  | ( ( move 0 , ua ; v0 = 0 ; pen v0 ) ; move ua , 0 )  | ( ( v0 = 0 ; move v0 , ua ) ; pen 0 ; move ua , ua )  
[2876] ( move ua , ua ; pen 0 ; move ul , 0 )  | ( move ua , ua ; pen 0 ; move ul , ua )  | ( ( move ua , 0 ; pen 0 ) ; v0 = ul ; move ul , 0 )  | ( ( v0 = ua ; move v0 , v0 ) ; pen 0 ; move ul , ua )  | ( ( move ua , ua ; pen 4 - ua ) ; move ul , ua * 3 ; pen ua )  
[2877] ( move 0 , ua ; pen 0 ; move ua , ul )  | ( move 0 , ul ; pen 0 ; move ua , ua )  | ( move 0 , ul ; ( pen 0 ; move ua , ua ) )  | ( move 0 , ua + ul ; pen 0 ; move ua , ua )  | ( move 0 , ua + ua ; pen 0 ; move ua , ul )  | ( move 0 , ua ; pen 0 - ua ; move ua , ul )  | ( move 0 , ua ; pen 3 - ua ; move ua , ul )  | ( ( move 0 , ua ; ( v0 = ul ; pen 0 ) ) ; move ua , ul )  | ( ( move 0 , ul - ua ; pen 0 ; move ua , ua ) ; v0 = ul )  
[2878] ( move ua , ul ; pen 0 ; move ul , 0 )  | ( move ua , ul ; pen 0 ; move ul , ua )  | ( ( move ua , ul ; pen 0 ) ; move ul , 0 )  | ( ( move ua , ul ; pen 0 ) ; move ul , ua )  | ( move ua , ul ; pen 4 - ua ; move ul , ua )  | ( ( move ua , ul ; pen 0 ) ; move ua / 4 , ua )  | ( ( move ua , ul ; pen 4 * 3 ; pen 0 ) ; move 2 , ua )  | ( move ua , ul ; pen 0 ; ( move 2 , ua ; move 4 , 3 - ua ) )  
[2879] ( move ul , ul ; pen 0 ; move ua , 0 )  | ( move ul , ul ; pen 2 - ua ; move ua , 0 )  | ( move ul , ua + ul ; pen 0 ; move ua , ua )  | ( move ul , ul ; pen 0 ; move ua , ua + ua )  | ( move ul , ul ; pen ul - ua ; move ua , 0 )  | ( move ul , ua + ul ; ( pen 0 ; move ua , ua ) )  | ( ( move ul , 2 - ul ; pen 3 ) ; pen 0 ; move ua , 0 )  | ( v0 = ul ; ( move v0 , ul ; pen 0 ; move ua , 0 ) )  | ( v0 = ul ; ( move v0 , ul ; pen 0 ) ; move ua , ua )  | ( ( move ul , ul ; v0 = ua ) ; pen 0 ; move v0 , ua )  | ( move ul , ul ; ( pen ul - ua ; move ua , ua ; pen ul ) )  
[2880] ( move ul , 0 ; pen 0 ; move ua , ul )  | ( move ul , 0 ; ( pen 0 ; move ua , ul ) )  | ( move ul , ua ; ( pen 0 ; move ua , ul ) )  | ( move ul , ua ; pen 0 ; move ua , ua + ul )  | ( ( move ul , ua ; pen ul - 3 ) ; move ua , ul )  | ( pen ul / 2 ; ( move ul , ua ; pen 0 ) ; move ua , ul )  | ( ( move ul , ua ; pen 0 ) ; v0 = ul ; move ua , v0 )  
[2881] ( move ua , ua ; pen 0 ; move ua , 2 )  | ( move ua , ua ; ( pen 0 ; move ua , 2 ) )  | ( move ua , ua ; ( pen ul - 3 ; move ua , 3 - ul ) )  | ( move ua , ua + ua ; pen 3 - ua ; move ua , ua + 2 )  
[2882] ( move 0 , ul ; pen 0 ; move ua , ul )  | ( move 0 , 2 - ua ; pen 0 ; move ua , ua )  | ( move 0 , ul ; ( pen 0 ; move ua , ul ) )  | ( move 0 , ul ; pen 0 ; move ua , ua + ul )  | ( move 0 , ul ; pen ul - ua ; move ua , ul )  | ( move 0 , ul ; ( pen 0 - 3 ; ( move ua , ul ; pen ul ) ) )  
[2883] ( move ua , 0 ; pen 0 ; move ul , ul )  | ( move ua , ua ; pen 0 ; move ul , ul )  | ( move ua , 0 ; pen 0 ; move 2 - ul , ul )  | ( move ua , ua + ua ; pen 0 ; move ul , ul )  | ( move 3 * 2 , ua ; pen ul - ua ; move ul , 4 * 2 )  | ( move ua , ua ; ( v0 = 0 ; pen v0 ) ; move ul , ul )  | ( pen ua * 3 ; ( move ua , 0 ; pen 0 ; move ul , 3 - 2 ) )  | ( move ua , ua * 3 ; pen 0 ; ( move ul , ul ; move 0 , 2 ) )  | ( move ua , 0 ; ( pen ul - ua ; move ul , ul ; move 0 , 3 ) )  | ( move ua , ua ; ( pen 0 ; move ul , ul ) ; v0 = 2 / ua )  
[2884] ( move ul , 2 ; pen 0 ; move ua , ua )  
[2885] ( move 3 , 0 - 3 ; move 2 , ua + 2 )  | ( move 3 , ua - 3 ; v0 = 2 ; move v0 , v0 )  
[2886] ( move 2 , ul ; pen 0 ; move ua , ua )  | ( ( move 2 , ul - ua ; pen 0 ) ; pen ul - 2 ; move ua , 0 )  
[2887] ( move 3 * 2 , 0 ; move 2 , ua + 2 )  | ( move 3 * 2 , 0 ; move ul + ul , ul + ul )  | ( move 3 + 3 , 0 ; v0 = 2 ; move v0 , v0 )  
[2888] ( move ua , 2 ; pen 0 ; move ua , ul )  
[2889] ( move 0 - 3 , 0 ; move 2 , ul - 3 )  
[2890] ( move ua , ul ; pen 0 ; move 2 , ua )  | ( v0 = 0 ; ( move ua , ul ; pen 0 ; move 2 , 0 ) )  | ( move ua , ul ; ( pen 2 - ua ; move 2 , ua ) ; pen ua + ua )  
[2891] ( move 2 , 3 + 2 ; move ua + 2 , 2 )  
[2892] ( move ul , 2 ; pen 0 ; move ua , ul )  | ( move ul , 2 ; pen 4 - ua ; move ua , ul )  | ( move ul , 2 ; pen ul - 3 ; move ua , ul )  | ( ( move ul , ul + ul ; pen ua ) ; pen 0 ; move ua , ul )  
[2893] ( move ua , 3 + 2 ; move 2 , 0 - 4 )  
[2894] ( move 2 + ul , 0 ; move 2 , 4 + 3 )  
[2895] ( move 0 - 4 , 0 ; move 4 , 2 + ul )  
[2896] ( move 0 - 2 , 0 ; move 2 , ua / 4 )  
[2897] ( move 2 , 3 ; move 0 - 2 , 3 + ul )  
[2898] ( move ua , ua ; pen 0 ; move ua , 4 )  | ( ( move ua , ua ; pen 0 ; move ua , 4 ) ; v0 = 0 )  | ( move ua , ua ; ( pen ua * 3 ; pen ul - ua ; move ua , 4 ) )  
[2899] ( move 2 , ua + 3 ; move 4 , 0 - 2 )  
[2900] ( move ua , ul ; pen 0 ; move 3 , ul )  | ( move ua , ul ; pen ul - ua ; move 3 , ul )  | ( move ua , ul ; pen ul / ua ; ( move 2 + ul , ul ; pen 2 ) )  
[2901] ( move 3 , ua ; pen 0 ; move ul , ul )  | ( move 3 , ua ; pen 3 - 4 ; move ul , ul )  | ( move 4 - ul , ua ; pen 0 ; move ul , 2 - ul )  | ( ( move 3 , ua ; pen 0 - ul ) ; move ul , ul - ua )  | ( move 0 , 0 ; ( move 3 , ua ; pen ul - 4 ; move ul , ul ) )  
[2902] ( move ua , 4 ; pen 0 ; move ul , ua )  | ( move ua , 4 ; ( pen 0 ; move ul , 0 ) )  
[2903] ( move 2 , 2 - 3 ; move 0 - 3 , ul )  | ( move 2 + ul , ua ; move ul + ul , ua / 3 )  
[2904] ( move ul , ua ; pen 0 ; move 3 , ul )  | ( ( move ul , ua ; pen 0 ; pen ul - ua ) ; move 2 + ul , ul )  
[2905] ( move 2 , 0 ; move 2 - ua , 4 * 2 )  
[2906] ( move 3 , 4 + ul ; move 2 , 0 - 2 )  
[2907] ( move 2 , 2 ; move 0 - 4 , ua - 3 )  
[2908] ( move ua , ul ; pen 0 ; move ua , 4 )  
[2909] ( move 4 , ua ; pen 0 ; move ua , ul )  
[2910] ( move 3 , 3 + 2 ; move 3 , 0 - ul )  | ( move ul - 4 , 4 ; move ul - 4 , ul ; v0 = ul + ul )  
[2911] ( move 2 - ua , 0 ; move 3 * 3 , 2 )  
[2912] ( move 3 , 0 - ul ; move 4 , 2 + 2 )  
[2913] ( move 0 - 3 , 3 ; move 3 + ul , 3 )  | ( move ul - 4 , ua + 3 ; move 4 , 3 )  
[2914] ( move 4 , ua ; pen 0 ; move ul , ul )  | ( ( move 4 , ua ; pen 0 ) ; move ul , ul )  | ( move 4 , ua ; pen 0 ; move ul , ua + ul )  | ( move 4 , ua ; pen 0 ; move ul , ul - ua )  | ( move 2 * 2 , ua ; pen 0 ; move ul , ua + ul )  
[2915] ( move 2 , 2 + ul ; move 4 + 3 , 2 )  
[2916] ( move 3 + 2 , ua ; move 3 * 2 , 2 )  
[2917] ( move 3 , 0 ; move 2 - 4 , 3 + ul )  | ( v0 = 4 ; move v0 - ul , ua ; move 2 - v0 , v0 )  
[2918] ( move 2 , ul - 3 ; move 2 , 3 + 2 )  
[2919] ( move 0 - 3 , ul - 2 ; move 2 , 4 )  | ( move ul - 3 , 3 ; move 3 , ua - 4 )  
[2920] ( move 3 - ul , 0 ; move 2 , 4 + 3 )  | ( move 2 , 0 ; move 0 , 4 ; move 2 , 3 )  
[2921] ( move ua , ul ; pen 0 ; move ul , 4 )  | ( move ua , ul ; move ul / 3 , 0 - ul )  | ( move ua - ul , ul ; move 0 , 4 ; move ul , 2 )  
[2922] ( move 4 , 0 ; move 3 + ul , 4 + 2 )  | ( move ua - 2 , 0 ; move 3 + ul , 4 + 2 ; pen 0 )  
[2923] ( move ua , 4 ; pen 0 ; move ul , ul )  | ( move ua , 4 ; pen 0 ; move ul , ua + ul )  | ( move ua , 4 ; pen 0 ; move 2 - 3 , ul - 3 )  | ( ( move ua , 4 ; pen ul - ua ) ; move ul , ul )  | ( ( move ua , 4 ; pen 0 - 3 ) ; move ul , 4 / ua )  
[2924] ( move 3 + 2 , 3 + 2 ; move ua , 4 )  | ( v0 = 3 + 2 ; move v0 , v0 ; move ua , 4 )  
[2925] ( move 0 - 3 , 2 ; move 3 , 2 / ua )  
[2926] ( move 2 , 2 ; move 3 - ul , 3 + 2 )  | ( move ul + ul , ul + ul ; move 0 , 4 ; move 2 , ul )  
[2927] ( move 0 , ul / 3 ; move 3 + 2 , 2 )  
[2928] ( move ul , ul ; pen 0 ; move 3 , ul )  | ( move ul , ul ; ( pen 0 ; move 3 , ul ) )  | ( move ul , ul ; pen ul - ua ; move 3 , ul )  | ( ( move ul , ul ; pen 0 ) ; move 4 - ul , ul )  
[2929] ( move ul , 4 ; pen 0 ; move ua , ul )  | ( ( move ul , 2 + 2 ; pen 0 ) ; move ua , ul )  | ( ( move ul , 4 ; pen 0 ; move ua , ul ) ; v0 = ul )  
[2930] ( move 3 , 0 - 4 ; move 2 + ul , 3 )  | ( ( move 3 , ua - 4 ; move 3 , 3 ) ; v0 = 0 )  
[2931] ( move 3 , 4 + 2 ; move 2 , 3 + ul )  
[2932] ( move ua / 2 , 0 ; move 3 / 2 , 2 )  
[2933] ( move 2 , 4 - ua ; move 3 , 0 - 4 )  | ( move 3 , ua / 2 ; move ul , 4 ; ( pen 2 ; move ul , ua ) )  
[2934] ( move 4 , 0 ; move ul - 3 , 3 + 3 )  
[2935] ( move 4 , ul ; pen 0 ; move ul , ul )  | ( move 4 , ul ; pen ul - 2 ; move ul , ul )  | ( move 4 , 2 - ul ; pen 0 - ul ; move ul , ul )  | ( ( move 4 , ul ; pen ul - 4 ) ; move ul , ul )  | ( v0 = ul ; move 4 , ul ; ( pen 0 ; move v0 , ul ) )  | ( move 4 , ul ; ( pen 0 ; v0 = ul ) ; move v0 , ul )  | ( move 4 , ul ; pen 0 ; ( v0 = ul ; move ul , v0 ) )  
[2936] ( move 0 , 4 * 3 ; move 4 , ua + 2 )  | ( ( pen ua ; move 0 , ua / 4 ) ; move 4 , 3 )  | ( move ul , ua / 4 ; pen 4 - ul ; move 4 , 3 )  | ( v0 = ua - 2 ; move v0 , v0 / 3 ; pen v0 / 2 )  
[2937] ( move ua + 2 , 4 ; move 3 * 2 , 2 )  
[2938] ( move 4 , 0 ; move ua - 3 , 3 * 2 )  | ( move 4 , 0 ; v0 = 3 ; move v0 , v0 + v0 )  
[2939] ( move 3 + 2 , ua - 3 ; move 3 , 3 )  
[2940] ( move 3 , 3 ; move 3 - ua , 0 - 4 )  
[2941] ( move 2 , 2 - 3 ; move ua , 3 * 2 )  | ( move 2 , 0 - ul ; move ua , 4 + 2 )  
[2942] ( move 3 , 4 + 2 ; move ul , 3 + 2 )  
[2943] ( move 3 , ul - 2 ; move 2 , 4 + 2 )  
[2944] ( move 0 - ua , 4 ; move 2 , 3 * 3 )  
[2945] ( move 3 , 3 + ul ; move 2 , 2 - 3 )  
[2946] ( move 2 - ul , 2 ; move 0 - 4 , 4 )  
[2947] ( move 0 , 3 * 3 ; move ua + 3 , 4 )  | ( move 0 , 4 * 3 ; move ua + 3 , ul )  | ( v0 = ua + 3 ; v1 = v0 ; move v1 , 4 / v1 )  
[2948] ( move 2 , 0 - ua ; move 4 , 3 * 3 )  
[2949] ( move 3 , 3 * 3 ; move 2 , ua + 2 )  
[2950] ( move 0 - 2 , 2 / 4 ; move 3 , ua )  | ( move ul - 3 , 2 / 4 ; move 3 , ua )  
[2951] ( move 0 - 4 , 2 * 2 ; move 3 , ul )  
[2952] ( move 3 , ua * 2 ; move 4 + 3 , 2 )  | ( move 3 , ua ; move 2 / 3 , ul + ul ; move ua , ua + ua )  
[2953] ( move 2 + ul , 2 ; move 3 , 2 / 3 )  
[2954] ( move 0 , 3 * 3 ; move 3 + ul , 4 )  
[2955] ( move 0 - 4 , 4 ; move 3 , 3 + ul )  
[2956] ( move 2 , ul - 2 ; move 4 + 2 , 4 )  
[2957] ( move 4 , 2 / 3 ; move ul , 0 - 2 )  | ( move ul , ua * ua ; v0 = ul ; move 4 , 3 - v0 )  
[2958] ( move 2 * 2 , 0 ; move 3 , 4 / ua )  | ( move 4 , 0 ; ( move 3 , 4 / ua ; pen ua + ul ; pen ua ) )  | ( move 4 , ua ; ( pen ua ; pen ul ; move 2 + ul , 4 / ua ) )  
[2959] ( move ul - 4 , 2 ; move 3 + 2 , 3 )  
[2960] ( move 2 , ul ; move 4 + 4 , 0 - 4 )  
[2961] ( move 0 - 3 , 3 ; move ul , 4 * 2 )  
[2962] ( move ua - 4 , 3 ; move 2 , 4 + 2 )  | ( move ua - 4 , 3 ; move 2 , 3 * 2 )  
[2963] ( move 3 + 3 , 3 + 3 ; move ua , 4 )  
[2964] ( move ua - 4 , 0 ; move 3 , 2 / 3 )  
[2965] ( move 4 * 2 , 0 ; move ua + 4 , 4 )  
[2966] ( move 2 + ul , 2 - 4 ; move 3 , 3 )  | ( v0 = 3 ; move v0 , ul - v0 ; move v0 , v0 )  
[2967] ( move 4 , 2 ; move ua + 2 , 3 * 3 )  
[2968] ( move 4 , 3 ; move 0 - 2 , 4 - ul )  
[2969] ( move 0 - ul , 2 - 4 ; move 4 , 3 )  | ( pen 2 ; move 2 - ua , ul ; move ul / 3 , ul - 3 )  
[2970] ( move 0 - 4 , ul ; move 4 , 3 + 3 )  
[2971] ( move 4 + 3 , 0 ; move 4 / ua , 2 )  
[2972] ( move ua + 4 , 4 ; move 3 - 2 , 2 )  | ( move ua , 3 + ul ; move 4 , ua ; move ul , ul + ul )  
[2973] ( move 3 , 2 ; move 4 + ul , 2 - 3 )  
[2974] ( move 3 , 4 + 3 ; move ua / 2 , 2 )  
[2975] ( move 3 , ua ; move 3 * 3 , 2 * 2 )  
[2976] ( move ua , 3 / 4 ; move 3 + 2 , 2 )  
[2977] ( move 4 + 2 , 3 ; move ul - 4 , 2 )  
[2978] ( move 2 , 3 ; move ua - 2 , 2 / 4 )  
[2979] ( move 4 , 3 ; move 3 + ul , 4 + 2 )  
[2980] ( move 3 , 0 - 3 ; move 4 , ul / 2 )  
[2981] ( move 3 * 2 , 0 ; move ul - 4 , 4 )  
[2982] ( move 4 - ul , 4 ; move 3 + 2 , 2 )  | ( pen ul ; ( move 3 , 4 ; move 4 + ul , 2 ) )  
[2983] ( move 0 , 3 * 3 ; move 3 * 3 , ul )  
[2984] ( move ua + 2 , 4 ; move 2 , 4 * 3 )  
[2985] ( move 0 - 4 , ul ; move 4 - 3 , 3 )  
[2986] ( move ua / 2 , 0 ; move 4 , 4 + 4 )  | ( move 3 , 0 ; v0 = 4 + 4 ; move 4 , v0 )  | ( move 3 , ua ; move 0 , ul - ua ; move 3 + ul , 4 + 3 )  
[2987] ( move 4 , 3 + ul ; move 3 , 2 - 3 )  
[2988] ( move 2 , 4 + 3 ; move 4 , 3 + ul )  | ( move 0 , 4 + 3 ; move 2 , 0 ; ( pen ua ; move 4 , 4 ) )  
[2989] ( move 0 - 4 , 2 ; move ua , 4 * 4 )  
[2990] ( move 2 , 4 - 3 ; move ua , 4 + 3 )  
[2991] ( move 4 , 0 - ua ; move 4 * 2 , 4 )  
[2992] ( move ul , 3 + 2 ; move 3 , 4 + 4 )  
[2993] ( move 2 , 4 + 2 ; move ul - 4 , 3 )  | ( move 2 , 3 * 2 ; move 3 - ua , 3 ; v0 = 4 )  
[2994] ( move 2 , 4 - ul ; move 3 , 3 + 3 )  | ( move ul , 3 ; move ul , 0 ; move ua / 2 , 3 * 2 )  
[2995] ( move 4 , 2 / 3 ; move 2 , 2 + ul )  
[2996] ( move 3 + 2 , 0 ; move 4 , ul / 4 )  
[2997] ( move 4 , 4 + 3 ; move 3 , 2 + ul )  
[2998] ( move 3 , 4 + 3 ; move ua - 3 , 3 )  
[2999] ( move 4 , 3 ; move 4 + ul , 3 + 2 )  
[3000] ( move 2 - 4 , 2 ; move 3 - ul , 4 )  
[3001] ( move 2 , 4 ; move ua + 4 , 3 / 2 )  
[3002] ( move 2 , 3 ; move ua + 3 , 4 / 3 )  
[3003] ( move 4 , 2 ; move ul / 3 , 3 + 2 )  | ( move ua / 2 , 2 ; move 0 - ul , 3 )  | ( move 3 + ul , 2 ; move 2 / ua , 4 + ul )  
[3004] ( move ul - 2 , 4 ; move 4 + 4 , 2 )  
[3005] ( move 3 , ul / 4 ; move 0 - 4 , 2 )  
[3006] ( move 3 , ul - 2 ; move 4 , 3 * 2 )  
[3007] ( move ua / 3 , 3 ; move 3 * 2 , 2 )  
[3008] ( move 4 , 4 ; move 2 + 2 , ul - 4 )  | ( move 4 , 3 + ul ; move 4 , ua - 3 )  | ( move 4 , ua + 4 ; move 4 , ua - 3 ; pen ua * 4 )  | ( v0 = 4 ; move v0 , v0 ; move v0 , ul - v0 )  | ( v0 = 3 + ul ; move v0 , v0 ; move v0 , ua - 3 )  
[3009] ( move 0 - 4 , ua ; move 4 / 2 , 4 )  
[3010] ( move 4 * 2 , 4 ; move 0 - ul , 4 )  | ( move 4 * 2 , 4 ; move ul , ua + ul )  | ( move ua + 2 , 4 ; move 0 , ua ; move ul , ul )  | ( move 3 , 4 ; move 4 + ul , ua ; move ul , ul )  | ( move ua + 2 , 4 ; v0 = ul ; move v0 , v0 )  | ( move ua , ua + 4 ; move 2 , ua ; move ul , 3 - 2 )  | ( v0 = 4 + 3 ; move v0 + ul , 4 ; move ul , v0 )  | ( move ua + 2 , 3 + ul ; move ul , ul ; move ul , ul + ul )  
[3011] ( move 2 , 2 / 3 ; move 4 + ul , 3 )  
[3012] ( move 4 + 4 , ul ; move 2 , 3 * 2 )  | ( move ua + 2 , ul ; move ul / ua , 3 ; move 2 , 2 + ul )  
[3013] ( move 2 - 4 , 4 * 3 ; move ua , 2 )  
[3014] ( move 2 , ua ; move 4 * 2 , 4 * 2 )  | ( move ul + ul , 0 ; move ua , 4 * 2 ; move 2 , ua * 2 )  
[3015] ( move 2 + ul , 3 ; move 4 + 4 , 4 )  | ( ( pen ua + ua ; move 3 , 3 ) ; move ua + 2 , 4 )  
[3016] ( move 2 , ua * 3 ; move 2 , 2 / 4 )  | ( move 2 , 0 ; move 2 , 2 / 4 ; v0 = ul )  
[3017] ( move 3 , 3 * 2 ; move 3 , ua - 4 )  
[3018] ( move 4 - 2 , 3 ; move 4 , ua - 3 )  
[3019] ( move 2 * 2 , 4 ; move ua , 3 - 4 )  | ( move 3 + ul , 2 + ul ; move ua , ua / 2 ; move 4 , ul )  
[3020] ( move 4 * 2 , 2 ; move 3 , 3 - ul )  | ( move 4 * 2 , ul + ul ; pen ua * ua ; move 3 , ul + ul )  
[3021] ( move 2 / 4 , 2 ; move ua , 3 * 2 )  | ( move ul , 3 - ul ; move ul , 3 ; move ua , 2 + ul )  
[3022] ( move 3 , 3 / 2 ; move 3 , 3 + ul )  
[3023] ( move 2 - 4 , 4 ; move 3 , ua + 4 )  
[3024] ( move ua - 4 , 2 ; move 4 , 4 + 3 )  
[3025] ( move 0 - ul , 3 / 4 ; move 4 , 2 )  | ( ( move ul , 4 ; pen 4 ) ; move 4 , 4 + ul )  | ( v0 = 4 ; move ul , v0 ; move v0 , v0 + ul )  | ( ( move 0 , ul ; move ul , 3 ) ; move 3 + ul , 4 + ul )  
[3026] ( move 2 - ul , 3 * 2 ; move 3 , 4 )  
[3027] ( move 3 , ul ; move 4 + 2 , 4 + 4 )  
[3028] ( move 2 - 4 , 2 / 3 ; move ua , 4 )  
[3029] ( move 4 - ul , 3 ; move 3 , 4 + 3 )  
[3030] ( move 4 + ul , 4 + 3 ; move 4 , 3 )  
[3031] ( move 4 , ul - 2 ; move 3 , 4 * 2 )  
[3032] ( move ul - 2 , 4 ; move 4 + 3 , 4 )  | ( move ul , ul ; move 0 , 3 ; move 4 + 3 , ua + 4 )  | ( move 2 - ul , ul ; v0 = 4 + 3 ; move v0 , v0 )  | ( ( move 0 , 3 ; pen ua ) ; move ul , 4 ; move ua + ul , ul )  
[3033] ( move ul , 3 + 2 ; move 3 , 3 / 4 )  
[3034] ( move 4 , 4 * 3 ; move 4 , ua + 2 )  
[3035] ( move 4 , 2 ; move 4 + 4 , 4 + ul )  
[3036] ( move 3 , 2 ; move 3 - ua , 4 / 3 )  
[3037] ( move 2 , ul - 3 ; move 3 , 4 * 3 )  
[3038] ( move 4 , 4 * 3 ; move ua + 2 , 4 )  
[3039] ( move 4 , 2 + ul ; move 4 , 3 - 4 )  | ( move 4 , 3 ; move 4 , ua - ul ; pen 3 * 2 )  | ( move 0 , 2 ; move 4 , ul ; move 2 * 2 , 0 - ul )  
[3040] ( move ul - 4 , 0 ; move 4 , 4 / 2 )  | ( move ul - 4 , ua ; pen 4 ; move 4 , 2 )  | ( move ul - 4 , ua ; v0 = 4 ; move v0 , 2 )  | ( ( move ul - 4 , ua ; move 4 , 2 ) ; v0 = 2 )  
[3041] ( move 2 , ul / 4 ; move 2 , 4 - 2 )  
[3042] ( move 4 + 3 , 2 ; move 4 , 3 / ua )  
[3043] ( move 2 , 2 ; move ul - 4 , 4 / 2 )  
[3044] ( move 4 / 2 , 3 * 2 ; move 2 , ul )  | ( move ul + ul , 3 + 3 ; move ul , ul ; move ul , ua )  
[3045] ( move 2 , 4 * 3 ; move 3 , 2 / ua )  
[3046] ( move 3 , 4 - 2 ; move ul , 3 / 2 )  | ( move 3 , ul + ul ; move ul , ua / 4 )  
[3047] ( move ul , 2 * 2 ; move 4 , 3 / 2 )  
[3048] ( move 4 , 2 ; move 3 * 3 , 4 - ul )  
[3049] ( move 3 , ul / 3 ; move 2 , 2 / 3 )  
[3050] ( move 4 , 3 * 2 ; move ul , 4 * 2 )  | ( move 3 - 2 , 4 + ul ; move 2 - ua , ul )  
[3051] ( move ul , 4 - 2 ; move 3 * 3 , 4 )  | ( move ul , ua + 2 ; move ua + 3 , 4 ; pen ua )  
[3052] ( move 4 + 3 , 4 ; move 4 , 4 + ul )  
[3053] ( move 2 * 2 , 4 * 3 ; move 4 , ul )  
[3054] ( move 4 / ua , 2 ; move 4 , 4 + 3 )  
[3055] ( move ul / 3 , 4 + 3 ; move 4 , 2 )  
[3056] ( move 2 - ul , 4 ; move 3 , 4 * 3 )  | ( move ul , 4 ; move 2 + ul , 4 * 3 ; pen 0 - 2 )  
[3057] ( move ul , 3 + 3 ; move 4 , 4 * 3 )  
[3058] ( move ul , 4 + 3 ; move 4 , 4 - 3 )  | ( pen 3 ; move ul , 4 + 3 ; move 4 , ul )  | ( move ul , 4 + 3 ; move 4 , ul ; move 0 , ua )  
[3059] ( move 3 , 4 / 2 ; move ua , 4 + 4 )  
[3060] ( move 4 + 4 , 4 ; move 3 , 4 + ul )  
[3061] ( move 3 , 4 ; move 4 + ul , 2 / 3 )  
[3062] ( move 4 , 4 + 2 ; move 4 / 2 , ul )  | ( move 0 , 3 ; move 4 , 3 ; move 2 , ul )  | ( move 4 , 3 * 2 ; move 2 , ul ; pen 0 )  | ( pen ul ; move 4 , 3 + 3 ; move 2 , ul )  
[3063] ( move ua - 4 , 3 ; move 4 / 2 , 3 )  
[3064] ( move 4 + ul , 4 ; move 3 * 2 , 4 )  
[3065] ( move 3 , 4 ; move 3 * 2 , 4 / ua )  | ( move 2 + ul , 4 ; move ua , 4 / ua )  | ( move 3 , 4 ; move ua , 4 / ua ; pen ul )  
[3066] ( move 4 , 3 * 3 ; move 2 , ua / 4 )  
[3067] ( move 4 + 3 , 4 ; move 4 / 2 , ul )  | ( move 2 + ul , 4 ; move 4 , ua ; move 2 , ul )  
[3068] ( move 4 - ua , 3 ; move 3 , 4 * 4 )  
[3069] ( move 4 + ul , 4 / 3 ; move 2 , 4 )  
[3070] ( move 4 / 2 , 3 ; move 4 , 4 - ua )  | ( move 2 , 3 ; pen ul + ul ; move 4 , 4 )  | ( move ua - 4 , 3 ; move 3 + ul , 4 ; pen 0 )  | ( move ul + ul , 3 ; v0 = 4 ; move v0 , v0 )  | ( move ul + ul , 3 ; move 4 , 4 ; v0 = ul - ua )  | ( v0 = 4 ; ( move 2 , v0 - ul ; move v0 , v0 ) )  | ( pen ua ; ( move ul , 3 ; ( move ul , 0 ; move 4 , 4 ) ) )  
[3071] ( move 4 , 2 ; move ua / 2 , 4 / 3 )  
[3072] ( move 3 , ul ; move 4 / 3 , 2 - 4 )  
[3073] ( move 4 , 4 * 3 ; move 3 - ua , 4 )  
[3074] ( move 4 , 3 / 4 ; move ul , 2 - 3 )  
[3075] ( move 3 / 2 , 4 ; move 4 , 4 + ul )  
[3076] ( move 4 + ul , 3 ; move 4 / 3 , 4 )  
[3077] ( move 3 , 3 ; move ua / 3 , 3 / 4 )  | ( move 3 , 3 ; move ul + ul , 4 + 3 ; v0 = ua )  
[3078] ( move 3 / 4 , 4 ; move 4 , ul - 3 )  
[3079] ( move 4 / 3 , 4 * 3 ; move 3 , ul )  
[3080] ( move 3 , 4 * 3 ; move 4 , ul / 4 )  
[3081] ( move 0 - ua , 0 ; move 0 - ul , 3 )  | ( move ul , ua + 3 ; move ua , 0 - 3 )  | ( move ul , 2 + ul ; move ua , ua - 3 )  | ( move ua , ua / 2 ; move ul , ua + 3 )  | ( move 2 - ul , 3 ; pen ua ; move ua , ul - 4 )  | ( v0 = 3 ; move ul , v0 ; move ua , ua - v0 )  
[3082] ( move ua , 0 ; move ua - 2 , 3 + 2 )  | ( move ua , 0 ; move ua - 2 , 4 + ul )  | ( move ua , ua + ua ; move ua - 2 , 4 + ul ; v0 = 2 )  
[3083] ( move ua + 2 , ua + 2 ; move 3 , 2 )  
[3084] ( move ua + 2 , 0 - 3 ; move ua , 3 )  
[3085] ( move 2 , 2 - ua ; move 2 , 0 - ul )  | ( ( pen ul ; move 2 , ua + 2 ) ; move 2 , ua - ul )  | ( v0 = 2 ; move v0 , v0 ; move v0 , ua - ul )  
[3086] ( move 3 + 2 , 0 ; move ul - ua , 2 )  | ( move 4 , 0 ; ( move ul , 0 ; move ul - ua , ul + ul ) )  
[3087] ( move ua , 4 ; move 0 - 2 , ua + 2 )  | ( move ua , ua + 4 ; move 2 - 4 , 2 )  
[3088] ( move ua + 2 , 2 ; move 2 , 2 + ul )  | ( move ua + 2 , 2 ; move 3 - ul , 2 + ul )  
[3089] ( move 0 - ua , ua ; move 2 + 2 , 4 )  | ( move 0 - ua , ua + ua ; move 4 , 4 )  
[3090] ( move 0 - 2 , 2 ; move ua - 3 , ul )  
[3091] ( move 0 - 4 , ua ; move 2 , 2 + ul )  | ( move 0 - 4 , ua ; move ul + ul , 3 )  
[3092] ( move ul , ua - 4 ; move 0 - 3 , 0 )  | ( move 3 , ua - 4 ; move ul , 3 ; move 0 , 4 * 2 )  
[3093] ( move ua + 2 , 0 ; move ua - 3 , 4 )  
[3094] ( move 0 , 2 ; move 2 - ua , 2 / ua )  
[3095] ( move 3 , 2 + ul ; move 0 - ul , 2 )  | ( pen ul ; move 3 , 3 ; move ul - 2 , 2 )  | ( pen ul ; move 3 , 3 ; move ul - 2 , 3 - ul )  
[3096] ( move 3 , 3 - ua ; move ua , 0 - 2 )  | ( move 3 , 3 ; move ua , ul - 3 ; pen 3 )  | ( pen 4 * 2 ; move ua / 2 , ua + 3 ; move ua , ul - 3 )  
[3097] ( move ua , 4 + 2 ; move ul , 0 - 2 )  | ( move ua , 4 + 2 ; pen 3 ; move ul , ul - 3 )  | ( move ul / 4 , 3 ; move ua , 3 ; move ul , ua - 2 )  
[3098] ( move 0 - 2 , 3 ; move ul + ul , 2 )  
[3099] ( move ua - 2 , 2 ; move ua , 3 + 2 )  
[3100] ( move 2 + ul , 0 ; move ua , 4 + 3 )  
[3101] ( move ua , 0 ; move 2 - ua , 3 * 2 )  
[3102] ( move 0 - ua , 3 + 2 ; move ua , 4 )  
[3103] ( move ua - ul , 0 ; move 3 , 3 + 2 )  
[3104] ( move ua - 3 , 0 ; move 4 , 0 - ul )  
[3105] ( move ua , 3 + 2 ; move 0 - ua , 4 )  
[3106] ( move 4 + 2 , 0 ; move 3 , ua + ul )  | ( move 3 + 3 , ua ; pen ul ; move 3 , ul )  | ( move 4 + 2 , 0 ; pen ul ; move 3 , ua + ul )  | ( move ul , ua ; move 3 + 2 , ua ; move 3 , ul )  | ( move ul , 0 ; move 4 + ul , ua ; move 3 , ul - ua )  
[3107] ( move ua + ul , 0 ; move 2 , 2 - 4 )  
[3108] ( move 4 , 2 ; move ua + 2 , ua + 2 )  | ( v0 = ua + 2 ; move 4 , 2 ; move v0 , v0 )  | ( move 4 , 2 ; ( move ua + 2 , 2 ; v0 = 0 - ul ) )  
[3109] ( move 3 - ua , 2 ; move 2 , ua + 3 )  
[3110] ( move 3 , 0 ; move ul - ua , 4 + 2 )  
[3111] ( move 3 + 3 , 0 ; move ua , ul - 3 )  
[3112] ( move 0 - 3 , 2 ; move ua , 4 + ul )  | ( move ul - 4 , 2 ; move ua , 4 + ul )  
[3113] ( move 0 - 4 , ua - 2 ; move 2 , ul )  
[3114] ( move 4 + 2 , ua ; move 2 - ua , 2 )  
[3115] ( move ua + 2 , 2 ; move 3 , ua - 3 )  
[3116] ( move ul , ul ; pen 0 ; move ua , ul )  | ( move ul , ul ; pen 0 ; move ua , ua + ul )  | ( move ul , ul ; pen 0 ; move ua , ul - ua )  | ( move ul , ul ; pen 0 - ua ; move ua , ul )  | ( move ul , ul ; ( ( pen ul ; pen 0 ) ; move ua , ul ) )  
[3117] ( move 2 , 4 + 2 ; move ua + ul , 2 )  
[3118] ( move ul , ua ; move 4 + 2 , 2 + 2 )  | ( move ul - 2 , 3 ; move 3 * 2 , ul )  | ( move ul , ua * 3 ; move 3 * 2 , 4 )  | ( ( move ul , ua ; move 3 * 2 , 4 ) ; pen 2 )  | ( move ul , ua + ua ; v0 = 3 * 2 ; move v0 , 4 )  
[3119] ( move 3 - ul , 2 ; move 0 - ua , 3 )  | ( move ua , 4 + ul ; move ul + ul , ul / ua )  
[3120] ( move 4 , ua - 2 ; move ua , 2 + 2 )  | ( move 4 , 2 - 4 ; move ua , 4 ; move 0 , 2 )  | ( v0 = 2 ; move 4 , ul - 3 ; move ua , v0 + 2 )  | ( ( move 4 , ul - 3 ; move ua , 4 ) ; v0 = ua * ua )  
[3121] ( move 3 - ua , 0 ; move ua , 3 * 2 )  
[3122] ( move ul , 0 ; move ua + 2 , 2 / 3 )  | ( move ul , ua ; move ua + 2 , 2 / 3 )  
[3123] ( move 3 , ul ; move 2 - ua , 2 + 2 )  | ( move 3 , ul ; move 2 - ua , ua + 4 )  | ( move 2 + ul , ul ; move 2 - ua , 4 ; v0 = 3 )  | ( move 3 , ul ; v0 = 2 - ua ; move v0 , 3 + ul )  
[3124] ( move ua + 3 , ua + 2 ; move 2 , 4 )  
[3125] ( move 0 - 2 , 4 ; move ua - 2 , ul )  
[3126] ( move 0 - 4 , 0 ; move 4 , ua - ul )  
[3127] ( move ua - 3 , 0 ; move ua - 4 , 2 )  
[3128] ( move 2 , 3 - ua ; move 2 - ua , 2 )  | ( move 2 , 4 - ul ; move 2 - ua , 2 )  
[3129] ( move 3 , 0 - 3 ; move ua , 3 + ul )  | ( pen ul ; move ua - 4 , 0 - 3 ; move ua , 4 )  | ( ( move 3 , ul - 4 ; v0 = ua ) ; move v0 , 4 )  
[3130] ( move 4 , 2 ; move 0 - ua , 3 + ul )  
[3131] ( move 0 - 3 , 3 ; move 2 , ua - ul )  | ( move 0 - 2 , 2 ; move 3 , ul ; v0 = ua )  
[3132] ( move 3 + 3 , 2 ; move ul + ul , 2 )  | ( move 3 * 2 , 2 ; move ul + ul , 2 )  | ( move 3 * 2 , 2 ; v0 = 2 ; move v0 , v0 )  | ( v0 = 2 ; move 3 + 3 , v0 ; move v0 , v0 )  | ( v0 = 3 - ul ; move 4 + v0 , v0 ; move v0 , 2 )  
[3133] ( move 4 + ul , 0 - 4 ; move ua , 2 )  
[3134] ( move 3 , 0 - ul ; move ua , 2 - 4 )  
[3135] ( move 4 , ua ; move ua - 2 , 3 + 2 )  
[3136] ( move 0 - 4 , ua ; move ul - 2 , 3 )  | ( move ul , 3 ; move 4 , ul - 4 ; v0 = 2 )  
[3137] ( move ul , 0 ; move ua + 3 , 3 - 4 )  | ( move ul , ua ; move ua + 3 , ua - ul )  
[3138] ( move ua + 3 , 2 - 3 ; move ul , 2 )  
[3139] ( move 2 , ua ; move 0 - 4 , ua - 4 )  
[3140] ( move 2 , 4 ; move 0 - ua , 3 - ul )  
[3141] ( move 2 , 3 + 2 ; move 4 , ua + ul )  | ( move 4 - ua , 2 ; ( move 0 , ua ; move 4 , 4 ) )  
[3142] ( move ua + 3 , ul ; move 4 , 0 - 3 )  
[3143] ( move ul , 0 - 2 ; move 3 + ul , 4 )  | ( move ul , ul - 3 ; move 4 , 4 - ua )  | ( ( move 0 , ul ; move ul , 0 - 3 ) ; move 4 , 4 )  | ( move 3 - 4 , ul ; move 4 , ul ; ( v0 = ua ; pen ul ) )  
[3144] ( move 4 + ul , ua ; move 3 + 2 , 2 )  | ( move 4 + ul , ua ; move 4 + ul , 2 )  | ( v0 = 3 + 2 ; ( move v0 , 0 ; move v0 , 2 ) )  
[3145] ( move ua - 2 , 2 ; move ua - 4 , 2 )  
[3146] ( move ua - 2 , ul ; move 4 + 2 , 2 )  
[3147] ( move 3 + ul , 0 ; move 2 - 4 , ul )  | ( move 4 , 0 ; move ul - 3 , ua + ul )  | ( move 4 , 0 ; move 2 - 4 , ul ; pen 2 )  | ( pen ua ; move 4 , 0 ; move ul - 3 , ul )  | ( move 4 , 0 ; pen ul ; move ul - 3 , ul )  | ( move 4 , ua * 3 ; pen 2 ; move 2 - 4 , ul )  | ( move 4 , ua ; ( move 0 - 2 , ul ; v0 = ul ) )  | ( move 4 , 0 ; ( move ul - 3 , ul ; pen 4 ; pen ul ) )  
[3148] ( move 3 + ul , 2 ; move 2 - ua , 3 )  | ( move 4 , 2 ; move 2 - ua , ua + 3 ; v0 = ua )  
[3149] ( move 4 + 2 , 3 + 2 ; move ua , ul )  
[3150] ( move 3 - ul , 0 ; move ua , 4 + 3 )  | ( move ul + ul , ua ; move ua , 4 + 3 )  
[3151] ( move 4 , ua + ul ; move 2 , 3 + 2 )  | ( move 3 + ul , ul ; move 2 , 3 + 2 )  | ( move 4 , ul ; move 2 , 4 + ul ; pen ua * ua )  
[3152] ( move 3 , 0 - 4 ; move ua + ul , 3 )  
[3153] ( move ua - 4 , 0 ; move ua , 3 * 2 )  | ( move ul + ul , ua ; pen ua ; move ua , 4 + 2 )  | ( move 2 , ua ; move 3 , 4 + 2 ; move 4 - ul , ua )  
[3154] ( move 4 + 3 , ua + ul ; move 2 , 2 )  | ( move 4 , ul ; move 3 , ua ; move 2 , 2 )  
[3155] ( move 0 , ul ; move ua + 3 , 3 / 2 )  
[3156] ( move 4 + ul , 0 ; move ul - 2 , 3 )  | ( move 4 + ul , ua ; move ul - 2 , 3 )  | ( move ua - ul , ua * 4 ; move 0 - ul , 3 )  
[3157] ( move 4 , 2 + ul ; move 0 - ul , 3 )  | ( move 4 , 3 ; move 0 - ul , 3 - ua )  | ( v0 = 3 ; move 4 , v0 ; move 2 - v0 , v0 )  
[3158] ( move 4 + 3 , 2 ; move ua , ua + 3 )  | ( move ua , 2 ; move ul , ua ; move ua , 3 )  | ( move ul , 2 ; ( move ua , ua ; move ua , 3 ) )  | ( move ul , ul + ul ; move ua , ua ; move ua , 3 )  | ( ( move ua + ul , 2 ; move 0 , 3 ) ; move ua , 0 )  | ( move ul / 3 , 0 ; move ua + ul , 2 ; move ua , 2 + ul )  
[3159] ( move ul / 2 , 0 ; move 3 + 2 , ul )  | ( move ul / 2 , 0 ; move 4 + ul , ul )  | ( move ul / 2 , ua ; move 4 + ul , ul )  | ( move 3 / ua , ua ; v0 = ua - ul ; move v0 , ul )  
[3160] ( move ul - ua , 0 ; move 3 , 4 + 3 )  
[3161] ( move ua + 3 , ua - 2 ; move 3 , 3 )  
[3162] ( move 3 , ul - 2 ; move ua + 2 , 3 )  | ( move 2 , ua - ul ; move ua + 2 , ua + 3 )  
[3163] ( move 2 , 0 ; move ua - 4 , 2 / ua )  | ( move 2 , 0 ; move ul + ul , ul / 3 )  | ( move 2 , ua ; ( move ul , ul / 3 ; move ul , ua ) )  
[3164] ( move ua , 3 ; move 0 - 3 , ul - 3 )  | ( move 3 , ul ; move 0 - ua , ul + ul )  
[3165] ( move 2 + ul , 0 ; move 2 , ul / 3 )  
[3166] ( move ua - ul , 0 ; move 3 * 3 , 2 )  
[3167] ( move ul - 4 , 0 ; move 3 + 2 , ul )  
[3168] ( move ua - 2 , 4 + 2 ; move ua , 4 )  
[3169] ( move 3 + 2 , ua ; move ua , 3 / 2 )  
[3170] ( move 2 , 2 / ua ; move 2 + ul , 3 )  | ( move 2 , 2 / ua ; pen ua ; move 3 , 3 )  | ( move 2 , ul / 3 ; v0 = 3 ; move v0 , v0 )  
[3171] ( move 2 , ul / 2 ; move ua + 3 , 2 )  
[3172] ( move 3 + ul , 3 ; move 3 - ua , 2 )  
[3173] ( move 4 + 2 , ua + ua ; move 3 , 4 )  
[3174] ( move 2 + ul , 4 ; move ua - 3 , 2 )  
[3175] ( move ul , 4 * 3 ; move 0 - ua , 2 )  | ( move ul , ul - 3 ; move ua , 4 * 4 ; move ul , ul )  
[3176] ( move 2 / 4 , 0 ; move ua + 3 , ul )  
[3177] ( move 2 , ul ; move ua + 2 , 4 * 2 )  
[3178] ( move ul + ul , 0 ; move 4 , 4 + 3 )  
[3179] ( move 3 , ua + 3 ; move ua , 4 + 3 )  | ( move 0 - ul , ua ; move 2 , 3 ; move ua , 4 + 3 )  
[3180] ( move 3 - ua , ua + 3 ; move 4 , 2 )  
[3181] ( move ua - ul , 0 ; move 3 , 2 / 3 )  
[3182] ( move ul , 3 + 2 ; move ua , 3 * 2 )  | ( move ul , 4 + ul ; move ua , 3 * 2 )  | ( move ua , ua / 4 ; move 2 / 4 , ul ; v0 = ul )  
[3183] ( move ul , 3 + 2 ; move 4 + ul , 2 )  
[3184] ( move ua - 2 , 0 ; move ua , 3 / 4 )  
[3185] ( move ul - 4 , 2 ; move 3 , 0 - ul )  | ( move ul - 4 , ul ; move 3 , ul - ua )  | ( move 0 - 3 , ua + ul ; move 2 + ul , ul )  | ( move ul - 4 , ul ; move ul , ul ; move 2 , 0 )  | ( move 0 - 3 , ul ; move 0 , 0 ; move 3 , ua + ul )  
[3186] ( move 2 , 2 ; move ul + ul , 4 + 3 )  
[3187] ( move ua , 4 + ul ; move 2 , 3 + 3 )  
[3188] ( move 3 + ul , 0 - ul ; move 4 , 3 )  | ( ( move 3 + ul , ua - ul ; pen ua - ul ) ; move 4 , 3 )  
[3189] ( move ua - 2 , ua ; move 2 , 4 * 2 )  
[3190] ( move 2 , ul - 2 ; move 2 , 4 + ul )  
[3191] ( move 0 - ul , 4 * 3 ; move ua , 2 )  
[3192] ( move 4 + ul , 0 ; move 3 + ul , 4 )  | ( move 4 + ul , ua ; v0 = 4 ; move v0 , v0 )  
[3193] ( move 2 - ua , 3 ; move ul , 4 + 2 )  
[3194] ( move 3 - ua , 0 ; move 4 , ul - 3 )  
[3195] ( move 2 * 2 , 3 ; move ul , ua - 2 )  | ( move ul , 3 ; move 3 , ua ; move ul , ua - 2 )  | ( move 4 , 3 ; ( move 0 , ul ; move ul , ul - 4 ) )  
[3196] ( move ua , 3 ; move ua - 2 , 4 - 2 )  
[3197] ( move 2 , ua / 2 ; move ua , 4 + 2 )  
[3198] ( move 4 , ua + ua ; move 2 , 4 + 3 )  
[3199] ( move ua , 4 + 3 ; move 3 - ua , 2 )  
[3200] ( move 4 - ua , 2 ; move 2 , ua - 3 )  
[3201] ( move 2 + ul , 3 ; move ul - 2 , 3 )  | ( move 3 + ul , 3 ; move ul / ua , 2 * 2 )  | ( move ua / 2 , 2 + ul ; move ul , 0 ; move ul / ua , 4 )  
[3202] ( move 4 * 2 , ua ; move 2 , ua + 3 )  | ( move ua , ua ; move ul , 0 ; move 2 , 2 + ul )  | ( move 4 * 2 , 0 ; move 2 , 2 + ul ; v0 = 2 - ul )  
[3203] ( move ul + ul , 2 ; move 3 , 4 + 2 )  | ( ( move 2 , 2 ; pen ul ; pen ua ) ; move 3 , 3 * 2 )  
[3204] ( move 4 * 2 , 0 ; move 3 - ua , ul )  
[3205] ( move 3 , 0 ; move 4 + ul , 4 + ul )  | ( move 3 , ua ; v0 = 4 + ul ; move v0 , v0 )  
[3206] ( move ua + 2 , 4 + ul ; move 2 , 4 )  | ( move ul + ul , 4 + ul ; move ua , 0 - ua ; move 2 , 4 )  
[3207] ( move 2 - ua , 3 ; move 4 + ul , 2 )  
[3208] ( move 0 - 3 , 2 / 3 ; move ul , ul )  
[3209] ( move 3 , 4 + 3 ; move ua , 3 + ul )  
[3210] ( move 3 - 4 , 3 ; move ua , 2 + ul )  | ( move 3 - 4 , 4 - ul ; move ua , 3 )  
[3211] ( move 2 , 2 / ua ; move 3 , ul - 2 )  
[3212] ( move 2 , 4 ; move 4 + ul , ua + 3 )  
[3213] ( move 2 , ul ; move ua + 3 , 3 * 3 )  
[3214] ( move ul , ul ; move 3 + 2 , 4 + 3 )  | ( move ul , ul ; ( move 3 , 4 + 3 ; move 2 , ua ) )  
[3215] ( move ul / 2 , ua + 2 ; move 4 , 2 )  | ( move 3 / ua , 2 ; move 4 , ua + 2 )  | ( move ul / 2 , ul + ul ; move 4 , 2 ; v0 = 0 )  
[3216] ( move ua , ua ; move 3 + 3 , 3 * 3 )  
[3217] ( move 0 , 3 * 3 ; move 4 + ul , ul )  | ( v0 = 4 + ul ; move v0 , 3 / v0 )  | ( v0 = 3 + 2 ; move v0 , v0 + v0 )  | ( v0 = 4 + ul ; move 0 , v0 ; move v0 , v0 )  | ( v0 = 4 + ul ; ( move v0 , 2 * v0 ; pen ul ) )  | ( v0 = 4 + ul ; v1 = 3 ; move v0 , v0 + v0 )  
[3218] ( move 2 , 3 ; move ua + ul , 4 * 2 )  
[3219] ( move 3 - ua , ul ; move 4 + 3 , 2 )  
[3220] ( move 2 , 4 ; move ua - 3 , ul - 2 )  
[3221] ( move ua , ul ; move 2 * 2 , 3 * 2 )  | ( ( pen ul ; move ua , ul ) ; move 4 , 3 + 3 )  
[3222] ( move ul + ul , 2 ; move 4 , 2 - 3 )  
[3223] ( move 4 , ul ; move 2 - ua , 4 + 2 )  
[3224] ( move 4 / 3 , 0 ; move ua + 3 , ul )  
[3225] ( move 2 * 2 , ul ; move ul , 3 + 3 )  | ( move 4 , ul - ua ; move ul , 4 + 2 )  | ( move 4 , ul - ua ; move ul , 3 + 3 )  | ( pen ua ; move 4 , ul ; move ul , 3 + 3 )  | ( move 4 , ul ; move 0 , 4 ; move ul , ul + ul )  | ( move 4 , ul ; v0 = 4 + 2 ; move ul , v0 )  | ( v0 = 4 ; move v0 , v0 / 4 ; move ul , 3 + 3 )  | ( move 2 + ul , ul ; ( move ul , ua ; move ul , 4 + 2 ) )  | ( ( move 4 , ul - ua ; pen ua ; pen ul ) ; move ul , 3 * 2 )  
[3226] ( move 3 , 3 / ua ; move ua + 2 , 3 )  
[3227] ( move ul , 0 ; move 4 + 3 , ul / 2 )  | ( move ul , ua + ua ; move 0 , 0 ; move ua + ul , ul / 2 )  
[3228] ( move 2 , 2 ; move ul + ul , 4 * 2 )  | ( move 3 - ul , 2 ; move ul + ul , 4 * 2 )  
[3229] ( move 3 , ua + 2 ; move 4 + ul , 4 )  | ( move 3 , 2 ; move 4 + ul , 4 ; move 0 , 3 * 2 )  
[3230] ( move 3 * 2 , 0 ; move ul , ua / 3 )  | ( move 3 * 2 , ua ; move ul , 2 ; v0 = ul )  | ( move 3 * 2 , ua ; pen 4 ; move ul , ua + 2 )  | ( move 3 , 0 ; move 3 , ua ; move ul , ul + ul )  | ( move 4 + 2 , 0 ; v0 = ul ; move v0 , 2 )  | ( move 3 + 3 , 0 ; ( move ul , 2 ; v0 = ua ) )  | ( move 4 + 2 , ua ; move ul , ua + 2 ; move 0 , ua / 2 )  
[3231] ( move 4 - ua , 2 ; move ua , 3 * 2 )  
[3232] ( move 4 + ul , 0 ; move ua , 4 / 2 )  | ( move 4 + ul , ua ; move ua , 3 - ul )  | ( move 4 , ua ; move ul , 0 ; move ua , 2 )  | ( move 3 + 2 , ua ; move ua , 2 ; pen ul )  | ( move 4 + ul , ua ; pen ul ; move ua , 2 )  | ( move 4 + ul , ua ; move ua , 2 ; pen ul )  | ( move 4 + ul , ua * 3 ; move ua , 2 ; v0 = ul )  | ( move ul - 3 , ua ; ( move 4 + ul , 0 ; move ua , 2 ) )  
[3233] ( move ua - 2 , 4 + 2 ; move ul , 4 )  
[3234] ( move 2 , ua - ul ; move 4 , 4 + 2 )  
[3235] ( move 2 , ul / 2 ; move 2 + ul , 3 )  
[3236] ( move 4 + 3 , 0 ; move 3 / ua , ul )  | ( move 4 + 3 , ua ; move ul / 4 , ul + ul )  | ( move 4 + 3 , ua ; move 0 , 3 ; move 2 / ua , 4 )  
[3237] ( move ul , 2 / ua ; move 3 , 3 + 2 )  
[3238] ( move 3 + ul , ua - 4 ; move 3 , 2 )  
[3239] ( move 0 - 3 , 4 ; move ua , 3 / ua )  
[3240] ( move ua - 4 , ul ; move 3 + 3 , 2 )  
[3241] ( move 2 + ul , 4 * 2 ; move 2 , ul )  
[3242] ( move 3 , ua - 2 ; move ua - 4 , 3 )  
[3243] ( move ua - 3 , 4 + ul ; move 3 , 2 )  
[3244] ( move ul - 3 , 0 ; move ua , 4 * 3 )  
[3245] ( move ul , 2 + 2 ; move ua , 2 / 4 )  | ( move ul , ua + 4 ; move ua , ul / 2 )  
[3246] ( move 3 , 2 - ua ; move 4 + 3 , ul )  
[3247] ( move ua - 4 , 3 + 3 ; move 2 , ul )  
[3248] ( move 3 , ul ; move 4 + 3 , 2 - ua )  
[3249] ( move ua + ul , 2 ; move 4 + 3 , 4 )  
[3250] ( move ul - 4 , ul ; move 3 + 2 , 2 )  
[3251] ( move 3 , ua + 3 ; move 4 , ul - 2 )  
[3252] ( move 3 + 2 , 3 / ua ; move ua , 3 )  
[3253] ( move ua , 3 ; move 2 * 2 , 4 + ul )  | ( move ua , 2 + ul ; ( move 0 , 2 ; move 4 , 3 ) )  | ( move ua , 3 ; ( move 4 , 4 + ul ; v0 = 4 ) )  | ( move ua , 3 ; v0 = 4 ; move v0 , v0 + ul )  
[3254] ( move 2 / ua , 0 ; move 4 , 4 + ul )  
[3255] ( move 3 , 3 ; move ua - ul , 2 - 3 )  
[3256] ( move ua + 3 , 4 ; move 4 , ua + 3 )  
[3257] ( move ua , 3 / 4 ; move 0 - ul , 2 )  
[3258] ( move ua + ul , 4 + 3 ; move 4 , 2 )  
[3259] ( move 2 , 2 - 3 ; move ua , ul - 4 )  
[3260] ( move ua / 2 , ua ; move 0 - 4 , 4 )  
[3261] ( move ua - 3 , 2 ; move 4 - 2 , ul )  
[3262] ( move 4 - ul , 2 ; move 3 + 2 , ul )  | ( move 3 , 2 ; move 4 / 2 , ul ; move 3 , ua )  
[3263] ( move 2 , ul ; move 4 * 2 , ua - 2 )  
[3264] ( move 4 + ul , 2 + ul ; move 2 , 4 )  
[3265] ( move 4 + 3 , ul ; move ua - 3 , 2 )  | ( move 3 * 2 , ul ; ( move ul , ua ; move 3 , 2 - ua ) )  
[3266] ( move ua - 4 , 2 ; move 3 + 3 , ul )  
[3267] ( move ua / 4 , 0 ; move ua , 3 * 2 )  
[3268] ( move ua , 4 + 2 ; move 4 + ul , 3 )  
[3269] ( move 2 , 2 + ul ; move ua , 4 * 3 )  
[3270] ( move 4 , ua + ul ; move 3 , 3 + 3 )  | ( move 4 , ua + ul ; move 3 , 4 + 2 )  | ( move 4 , ul ; pen ua ; move 3 , 3 * 2 )  
[3271] ( move 4 , 4 + ul ; move 3 , 0 - ul )  
[3272] ( move 2 - 4 , 0 ; move ua , ul / 3 )  | ( move 4 - ua , ua ; move ua , ul / 3 )  
[3273] ( move 2 , ul ; move 3 + 3 , 4 + ul )  
[3274] ( move ua - 3 , 0 ; move ul , 4 * 3 )  
[3275] ( move 2 , 2 + ul ; move 4 + ul , 4 )  
[3276] ( move 3 - ua , ul - 3 ; move 3 , 2 )  
[3277] ( move 4 , 3 ; move 4 + 2 , ua + ul )  
[3278] ( move ul - 3 , ua - 3 ; move 2 , 3 )  | ( move 3 - 4 , ua ; move 3 , ua - 3 )  
[3279] ( move 3 + 2 , 2 - 4 ; move ul , ul )  | ( move 3 + 2 , ua - 2 ; move ul , ul )  | ( move 4 + ul , ul - 3 ; move ul , ul ; pen 0 )  
[3280] ( move 3 - ul , ul ; move 4 , 0 - 4 )  | ( move 4 , ul / ua ; move ul + ul , 4 )  
[3281] ( move 2 , 4 + ul ; move ua , 4 + 4 )  
[3282] ( move 3 , 4 + 2 ; move ul , ul - 3 )  
[3283] ( move 4 + ul , 4 ; move ua + 2 , 4 )  
[3284] ( move 3 , 2 * 2 ; move ua , ua / 3 )  | ( pen 2 ; move ua / 2 , 4 ; move ua , ua / 3 )  
[3285] ( move 3 * 2 , 2 - ul ; move ua , 4 )  | ( ( move 4 + 2 , ul ; move ua , 4 - ua ) ; v0 = ul )  
[3286] ( move 2 , ul / ua ; move 3 , 4 + 2 )  | ( move ul , ua * 3 ; move 3 , ua + 3 ; move 2 , 2 / ua )  
[3287] ( move 4 , 0 ; move ul / 2 , 4 + ul )  
[3288] ( move ul , 0 - ul ; move 4 , 4 * 2 )  
[3289] ( move ul , 0 ; move 4 + ul , 4 * 3 )  
[3290] ( move 2 , 4 + 3 ; move ua , ul / 2 )  
[3291] ( move 3 , 3 + ul ; move 3 , 4 + ul )  | ( move 4 - ul , 4 ; move 3 , 4 + ul )  
[3292] ( move 3 , ua - 3 ; move ua , 2 / 3 )  
[3293] ( move 2 , 4 + ul ; move 4 + 3 , ul )  
[3294] ( move 4 / 3 , 0 ; move 3 + ul , ul )  
[3295] ( move 3 , ul ; move 4 + 2 , 4 + ul )  
[3296] ( move ul - 3 , 4 ; move ua , 4 + 2 )  
[3297] ( move 3 , ul / 2 ; move 4 , ua + 2 )  
[3298] ( move 2 + ul , 4 ; move ua - 3 , 4 )  | ( move 3 , 4 ; v0 = 2 ; move ua - 3 , 4 )  
[3299] ( move ua + 2 , 4 ; move ua / 3 , 3 )  | ( move ua + 2 , 4 ; move 2 , 3 ; v0 = ua )  
[3300] ( move 3 , 2 ; move ua + ul , 2 / 4 )  
[3301] ( move 3 + 2 , ul ; move 4 , ua - 4 )  
[3302] ( move 4 + ul , 3 ; move ul , 2 - 3 )  | ( move 4 + ul , 3 ; move ul , 3 - 4 )  
[3303] ( move 2 + ul , ua ; move 2 , 4 * 4 )  
[3304] ( move 4 + ul , ul - 4 ; move 2 , 2 )  
[3305] ( move ul , ul ; move 0 - 4 , 3 / 2 )  
[3306] ( move 4 , ua + 2 ; move 2 , 4 / ua )  
[3307] ( move 3 , 0 - ul ; move 4 , ul - 4 )  
[3308] ( move 4 * 2 , 2 ; move ul , ul - 2 )  | ( move ua + 2 , ul + ul ; move ul , ul - 2 )  
[3309] ( move 2 , 4 * 4 ; move ua + 2 , ul )  
[3310] ( move 4 , 2 ; move ua - 4 , 3 + ul )  | ( move 4 , ul + ul ; move ua - 4 , 3 + ul )  
[3311] ( move 4 , ua ; move ul / 3 , 0 - 3 )  | ( ( move 4 , ua ; move 0 , ua ) ; move ul / ua , 4 )  
[3312] ( move 2 , ua * 2 ; move 3 * 3 , ul )  
[3313] ( move 4 , 3 ; move ul / 2 , ua + 2 )  | ( move 4 , 3 ; move 2 / 3 , 2 ; pen 0 )  
[3314] ( move ua , 0 ; move 4 / ua , 3 / 2 )  
[3315] ( move ua , 4 + 3 ; move ul / 2 , 2 )  
[3316] ( move ul , 4 + ul ; move 3 , 4 + 2 )  | ( move 3 , 3 / 2 ; move ul , 4 / ua )  
[3317] ( move 4 , 0 ; move ul - 4 , 4 + ul )  
[3318] ( move 2 + ul , 4 ; move ua , 3 - 4 )  | ( move 3 , 3 + ul ; pen ua - 3 ; move ua , 0 - ul )  
[3319] ( move ua , 3 + 2 ; move ua , 4 / 3 )  
[3320] ( move 3 , 3 - ua ; move 3 , ua - 4 )  
[3321] ( move 2 , 4 ; move 4 + ul , ua + 4 )  
[3322] ( move 3 + ul , 3 / ua ; move 3 , 2 )  | ( move 4 , 3 / ua ; move 4 - ul , 2 )  
[3323] ( move ul , 4 + 3 ; move 3 + ul , 3 )  | ( move ul , 4 ; move ul , 3 ; ( pen ul ; move 4 , 3 ) )  
[3324] ( move 3 , ul - ua ; move 4 + 2 , 4 )  | ( move 3 , ul ; move 3 + 3 , 3 + ul ; pen ua * 2 )  
[3325] ( move ua , ul / 2 ; move 3 * 2 , 2 )  
[3326] ( move 2 + ul , 4 ; move 3 * 2 , ul )  | ( move 3 , 4 ; move 3 + 3 , ul ; move 0 , ua )  
[3327] ( move 4 + ul , ul ; move 3 + 2 , 4 )  | ( move 4 + ul , ul ; move 4 + ul , 4 )  
[3328] ( move 4 * 2 , 3 ; move ua , ua + 4 )  | ( pen ul + ul ; move 4 * 2 , 3 ; move ua , 3 + ul )  
[3329] ( move ul + ul , 3 - 4 ; move 3 , 2 )  | ( pen 3 ; move ua / 3 , 0 - ul ; move 3 , 2 )  
[3330] ( move 4 + 4 , 0 ; move ul , 3 / ua )  
[3331] ( move ua - 3 , 4 * 2 ; move ua , 3 )  
[3332] ( move 2 , 3 ; move 4 + 4 , ua - ul )  
[3333] ( move ua - 4 , ua ; move 2 , 4 * 2 )  
[3334] ( move ua , 4 + ul ; move 2 / 3 , 2 )  
[3335] ( move 3 + 2 , 4 + ul ; move ul , 4 )  | ( pen ul ; move 3 + 2 , 3 + 2 ; move ul , 4 )  
[3336] ( move ua + ul , 4 ; move 2 , 4 + 4 )  
[3337] ( move 0 - ua , ul ; move 4 / 2 , 4 )  
[3338] ( move 4 + 3 , 4 ; move 3 , ua + ul )  
[3339] ( move 0 - ua , 4 / 3 ; move ul , 3 )  
[3340] ( move 3 , 3 ; move 3 + ul , ua - 4 )  
[3341] ( move 4 , 4 + 3 ; move ua , 2 / ua )  
[3342] ( move 3 * 2 , 4 + ul ; move 3 , ul )  
[3343] ( move 3 + ul , 4 ; move ua , 4 * 2 )  
[3344] ( move 3 , ua * 3 ; move ua , 4 * 2 )  | ( move 4 - ul , ua ; move ua , 4 + 4 )  | ( move 3 , ua * 4 ; pen ua ; move ua , 4 * 2 )  | ( move 3 , ua ; move ua , 4 * 2 ; v0 = ua - 3 )  
[3345] ( move 2 , ul - 3 ; move 2 , ul / 3 )  | ( move 2 , 0 - 2 ; move ul + ul , 2 / ua ; pen ul )  
[3346] ( move 3 , ua / 4 ; move ua - 2 , 3 )  
[3347] ( move ul , ua + 2 ; move 4 , 2 / 4 )  | ( move ul , ul + ul ; move 4 , 2 / 4 )  
[3348] ( move 2 , ua / 2 ; move 2 , ua / 4 )  
[3349] ( move 3 , 3 ; move 4 * 2 , ul - ua )  
[3350] ( move ua - 2 , ul - 3 ; move 4 , 4 )  
[3351] ( move 3 - 4 , ul + ul ; move 4 , 2 )  
[3352] ( move 3 - ul , 3 ; move 4 + ul , 3 )  | ( move 2 , 3 ; move 0 , 2 ; move 4 + ul , ul )  
[3353] ( move 3 , ua / 3 ; move 2 * 2 , ul )  
[3354] ( move 2 / 3 , ul - ua ; move 4 , 2 )  
[3355] ( move 4 , 3 - ul ; move ua , 4 + 3 )  | ( move 4 , 2 ; move 0 , 4 + ul ; move ua , 3 - ul )  
[3356] ( move ul , 2 ; move 3 * 2 , ua / 3 )  
[3357] ( move 3 + ul , 2 ; move ul , 4 * 3 )  | ( move ul , ul - 3 ; move 2 - ua , 4 ; v0 = 2 )  
[3358] ( move 3 , ua / 2 ; move 3 , 4 - ua )  
[3359] ( move 4 , ua - 3 ; move 4 + 3 , ul )  
[3360] ( move 4 * 2 , ua ; move ul , 3 * 2 )  | ( move 2 / ua , ul ; move ua + 2 , ul - 2 )  | ( move 4 * 2 , ua ; move ul , 3 + 3 ; v0 = ul - 4 )  
[3361] ( move 4 - 2 , 3 ; move 4 , ua - ul )  | ( move ul + ul , 4 - ul ; pen 3 ; move 4 , ua - ul )  
[3362] ( move ua , 4 ; move 4 * 2 , ua - 3 )  
[3363] ( move 3 / 4 , 2 ; move ua - 2 , ul )  
[3364] ( move 4 , ua / 2 ; move 3 - ul , 2 )  | ( move 2 , ul + ul ; move 0 , ul - 3 ; move 4 , 0 )  
[3365] ( move 4 , 4 - ua ; move ua / 2 , 2 )  
[3366] ( move 2 - ua , 4 * 3 ; move ul , 3 )  
[3367] ( move 4 + 3 , 2 ; move ul , ua / 3 )  | ( move 4 , 2 ; move 3 , ua ; move ul , 2 )  
[3368] ( move 3 * 2 , ul / 3 ; move ua , 2 )  
[3369] ( move 4 , 2 / 4 ; move ua , 2 + ul )  | ( pen 2 ; move 3 + ul , ul / 2 ; move ua , 3 )  
[3370] ( move 4 + ul , 0 ; move ua / 4 , 4 )  
[3371] ( move 2 , ua / 2 ; move 3 , ul / 2 )  | ( move ul - 3 , 0 ; move 0 , 3 * 2 ; move 3 , 4 )  
[3372] ( move ua - 3 , 4 + ul ; move 3 , 4 )  
[3373] ( move 3 , ul + ul ; move 4 , 2 - 4 )  
[3374] ( move 2 , 4 + 4 ; move 4 , ua - ul )  
[3375] ( move ul , 4 + 2 ; move 3 , 4 - ul )  | ( move 0 , 3 ; move ul , 3 ; move 4 - ul , 3 )  | ( move ul , 3 * 2 ; v0 = 2 + ul ; move v0 , v0 )  
[3376] ( move 2 / 3 , 3 ; move 3 + ul , ul )  
[3377] ( move 2 , ul ; move 4 + 3 , ul / 2 )  
[3378] ( move 4 , 2 ; move 4 + ul , 3 - ul )  
[3379] ( move 3 , 4 ; move 4 + ul , 2 - ul )  | ( move 3 , 3 + ul ; move 2 , ul ; move 3 , 0 )  | ( move 3 , 4 ; move 3 + ul , ul ; move ul , ua )  
[3380] ( move 3 , ul + ul ; move 3 , 3 - 4 )  | ( move 3 , 2 ; pen ul ; move 3 , 0 - ul )  | ( ( move 3 , ul + ul ; move 3 , 3 - 4 ) ; v0 = ul )  
[3381] ( move 4 , 0 - 4 ; move 3 , ul / ua )  
[3382] ( move ua , 4 * 2 ; move 3 - ul , 3 )  
[3383] ( move ul - 3 , 2 ; move 4 , 2 / ua )  
[3384] ( move 3 - ua , 3 ; move 3 / 2 , ul )  
[3385] ( move ua + ul , 4 * 3 ; move 4 , 2 )  
[3386] ( move 2 , ul / 4 ; move 0 - 4 , ul )  
[3387] ( move ul , 2 - ua ; move 4 + 4 , 4 )  | ( move ul , 2 ; move 2 , 4 ; move ua , ua * 3 )  | ( move ul , 2 ; ( move 4 + 4 , 4 ; pen 2 - ua ) )  
[3388] ( move 2 - ua , 2 / ua ; move 4 , 4 )  
[3389] ( move 3 , 3 * 2 ; move ua - 4 , ul )  
[3390] ( move ul , 3 - ul ; move 3 , 4 + 3 )  
[3391] ( move 3 * 2 , ua ; move 4 , ul - 3 )  
[3392] ( move ul - 3 , 4 ; move ua , 4 + 3 )  
[3393] ( move ul , 4 + 2 ; move ua , 4 * 3 )  
[3394] ( move 4 + ul , ua ; move 4 - 2 , 4 )  | ( v0 = 4 ; move ul + v0 , ua ; move 2 , v0 )  | ( move 4 , ua ; move ul , 0 ; move 3 - ul , 3 + ul )  | ( v0 = 4 ; ( move v0 + ul , ua ; move 2 , v0 ) )  
[3395] ( move 2 + ul , 2 / 4 ; move ua , 4 )  
[3396] ( move 3 , 3 + ul ; move 2 , ua / 4 )  
[3397] ( move 4 + ul , 3 ; move 3 , ul - 3 )  
[3398] ( move ul - 3 , 2 ; move 3 , ul / 2 )  
[3399] ( move 3 , 3 ; move 4 * 2 , ul + ul )  
[3400] ( move 2 , ul ; move ua / 2 , 3 / 2 )  
[3401] ( move 4 + 2 , 4 ; move ua / 2 , ul )  
[3402] ( move 4 * 2 , ul ; move ua , 4 - 2 )  | ( move 4 * 2 , ul ; move ua , ul + ul ; v0 = 4 + ul )  
[3403] ( move ua - ul , 3 ; move 2 , 4 / 2 )  
[3404] ( move 4 , ua - 4 ; move 3 , 3 + ul )  | ( v0 = 0 ; move 4 , v0 - 4 ; move 3 , 4 )  
[3405] ( move 2 , 3 / ua ; move 4 - 2 , ul )  | ( move ul + ul , 3 / ua ; pen ua ; move 2 , ul )  | ( ( move ul , 3 / ua ; move ul , 0 ) ; move 2 , ul )  
[3406] ( move 2 * 2 , ua / 4 ; move 2 , ul )  | ( move 3 + ul , ua / 4 ; move 2 , ul )  
[3407] ( move ua / 3 , 3 + 3 ; move ua , 4 )  | ( move 2 , 3 + 3 ; ( move ua , 4 ; pen ua + ua ) )  | ( move ul , 2 + ul ; move 2 , 3 - ua ; move ua , 4 )  
[3408] ( move ua , 2 ; move 4 + 4 , 4 - ul )  | ( move ua , 2 ; move ul + ul , 2 + ul ; move ua , ua )  
[3409] ( move 3 * 2 , 2 ; move 3 / ua , ul )  | ( move ua , 3 - ul ; move ul / 2 , ul )  
[3410] ( move 4 , ua - ul ; move 4 - 2 , 3 )  | ( move 4 , ul - 2 ; v0 = 3 ; move ua / v0 , v0 )  
[3411] ( move 2 , 3 / ua ; move 3 , 4 - ua )  
[3412] ( move ua , 4 ; move 0 - ul , 4 / 3 )  
[3413] ( move 4 , ua * ua ; move 2 , 3 * 3 )  
[3414] ( move 4 , ua + ul ; move 4 , 4 + 3 )  | ( move 4 , ul ; move 4 , 4 + 3 ; v0 = ul )  
[3415] ( move 4 , 4 + 3 ; move 3 , ul + ul )  
[3416] ( move 4 - ua , ul ; move 4 + 4 , 3 )  | ( move ul - 3 , ul ; move ul , 3 ; move ua + ul , 0 )  
[3417] ( move 3 , 4 * 3 ; move ua , 3 - ul )  | ( move 2 + ul , 4 * 3 ; pen ul ; move ua , ul + ul )  
[3418] ( move 2 , ua + ul ; move 4 , 3 / 4 )  
[3419] ( move ul + ul , 4 ; move 4 , 4 + 3 )  
[3420] ( move 3 * 2 , ul ; move ul , 4 + 4 )  
[3421] ( move 2 + ul , 3 ; move 4 / 3 , ul )  
[3422] ( move 4 - ul , 4 + 4 ; move ul , 2 )  | ( move 0 , 3 * 2 ; move 3 , ul + ul ; move ul , 2 )  
[3423] ( move ua , 3 * 2 ; move ul , 4 * 3 )  
[3424] ( move 3 - ul , 4 ; move 3 , ul - 3 )  
[3425] ( move 4 + ul , 3 ; move 4 + ul , 4 )  
[3426] ( move 2 + ul , 3 ; move 3 , ul / 4 )  
[3427] ( move ua , 4 * 3 ; move 4 + ul , 3 )  
[3428] ( move 0 , ul ; move 3 * 3 , ul / 4 )  
[3429] ( move ul , ua / 3 ; move 4 + 3 , 3 )  
[3430] ( move 3 - ul , 3 * 3 ; move ua , 4 )  
[3431] ( move 4 , ua / 3 ; move ua - 2 , 4 )  
[3432] ( move 4 + 3 , ul ; move 4 , 4 + ul )  | ( move 2 + ul , 2 - ul ; move 4 , 0 ; move 4 , 4 + ul )  
[3433] ( move 4 , 4 ; move ul / 3 , 0 - ul )  
[3434] ( move 3 , 3 / 4 ; move 3 - ua , ua )  
[3435] ( move 4 + ul , 4 ; move 4 , ul - 2 )  | ( move 4 + ul , 4 ; move 4 , ua - ul ; v0 = 4 )  
[3436] ( move 4 , ua / 2 ; move ua + 4 , 4 )  
[3437] ( move 4 - ua , 2 / 4 ; move ua , 3 )  
[3438] ( move 3 , ua + 4 ; move 3 , 4 / ua )  
[3439] ( move 4 + ul , ul - 2 ; move 4 , 4 )  
[3440] ( move 3 + ul , 4 * 3 ; move ua , 4 )  
[3441] ( move 3 , 4 + ul ; move 4 , 3 - ul )  
[3442] ( move ua - ul , 3 / 4 ; move 3 , 2 )  
[3443] ( move 4 + ul , ul - 3 ; move 4 , 3 )  
[3444] ( move 3 , 4 * 3 ; move 4 , ua + ul )  
[3445] ( move ua / 4 , 3 ; move 4 , 2 - ua )  
[3446] ( move ul , 4 * 2 ; move 3 , 4 + ul )  
[3447] ( move ua / 3 , 4 ; move 2 , 4 + ul )  
[3448] ( move 2 , ua * ua ; move 4 , 4 * 3 )  
[3449] ( move 3 * 2 , 2 / 3 ; move ul , ul )  
[3450] ( move 3 , 3 / 4 ; move 2 , ua - ul )  | ( move 4 - ul , 4 + 3 ; move 2 , ua - ul )  
[3451] ( move ua , 4 * 4 ; move ua + 3 , 4 )  
[3452] ( move ul , 3 / 2 ; move ua , 3 - 4 )  
[3453] ( move 4 , ua - 3 ; move 4 + ul , 4 )  
[3454] ( move 4 , ua ; move 4 + 4 , 4 + ul )  
[3455] ( move ul , ua + 4 ; move 4 , 4 + 4 )  
[3456] ( move 3 , ul ; move 3 / 2 , 4 - ua )  | ( pen ul ; move 3 , ul ; move ua / 4 , ua + 4 )  | ( move 3 , ul ; ( move ul / 2 , 4 ; move ul , ua ) )  
[3457] ( move 3 * 3 , ul ; move ul , 3 * 2 )  | ( move 4 + 4 , ua + ul ; move 4 - ua , 3 - ua )  
[3458] ( move 2 + ul , 3 ; move 4 , 4 / ua )  
[3459] ( move ua , 4 + 4 ; move 4 + ul , 4 )  
[3460] ( move 3 / 2 , ul ; move ua , 2 / 3 )  
[3461] ( move 3 , 4 * 3 ; move 3 - ua , ul )  
[3462] ( move ua , 4 * 2 ; move ul , 3 * 3 )  
[3463] ( move 3 , 3 + 2 ; move ul , ul / 4 )  | ( move ua / 4 , 2 ; move ul - 4 , 3 )  
[3464] ( move 2 , 4 / ua ; move ul - 4 , 2 )  
[3465] ( move 4 , 3 / 2 ; move 3 , ul - ua )  
[3466] ( move ul - 3 , 4 ; move ua , 3 * 3 )  
[3467] ( move 4 , 3 ; move 3 * 3 , ul + ul )  
[3468] ( move 2 , 4 / 3 ; move 4 , ul - ua )  
[3469] ( move ul + ul , 2 / 4 ; move 4 , 3 )  
[3470] ( move ul , 2 - 4 ; move ua , 3 / 4 )  
[3471] ( move 4 , ua * 3 ; move 3 , ul / 2 )  | ( move 2 * 2 , ua ; move 3 , 2 / 4 ; pen 4 )  | ( move 4 , ua * 4 ; v0 = ul / ua ; move 3 , ul / 2 )  
[3472] ( move ul - ua , 4 ; move 3 / 4 , 2 )  
[3473] ( move 4 , 3 * 3 ; move 3 - ul , ul )  | ( move 4 , 3 * 3 ; move ul + ul , ul )  
[3474] ( move 2 / 4 , 4 ; move ua , ul - 3 )  
[3475] ( move 3 - ul , 3 ; move 2 , ul / 4 )  
[3476] ( move ua , 4 + 4 ; move ua / 3 , 4 )  
[3477] ( move 4 - ul , 2 - 4 ; move ul , 4 )  
[3478] ( move ul , ua / 4 ; move 4 , 2 - 3 )  
[3479] ( move 4 + ul , 4 / ua ; move 3 , 3 )  
[3480] ( move 3 , 3 / 4 ; move ul , 2 - ul )  | ( move 3 , 3 / 4 ; v0 = ul ; move v0 , v0 )  
[3481] ( move 3 , 4 * 3 ; move ul , 4 - ua )  | ( ( move ul / ua , 4 * 3 ; move 3 , ua ) ; move ul , 4 )  
[3482] ( move ul , 3 - 4 ; move ua , 4 * 3 )  
[3483] ( move ul / 2 , 4 ; move 4 , ua + 4 )  
[3484] ( move ua , 4 ; move 4 / 3 , ul - 2 )  
[3485] ( move 3 , ua ; move ul - 3 , 4 / 3 )  
[3486] ( move ul - 3 , 4 ; move 3 , 3 / ua )  
[3487] ( move 4 , ua - 4 ; move 3 - ul , 4 )  
[3488] ( move 4 / 2 , 4 + ul ; move 3 , ul )  | ( move 2 , 4 + ul ; move 3 , ul ; pen ul )  | ( move 2 , 4 + ul ; pen ul ; move 3 , ul )  
[3489] ( move ua , 3 / 4 ; move 4 , ul - 2 )  
[3490] ( move 4 , 3 ; move 3 / ua , 4 + ul )  
[3491] ( move ul , ul / 3 ; move 4 , 4 + 2 )  | ( move ul - 3 , ua - 3 ; move 4 - ul , 3 )  
[3492] ( move 3 , 3 * 2 ; move 4 , ul / ua )  
[3493] ( move 3 , ua - 4 ; move 3 , 4 / ua )  
[3494] ( move 3 , 3 / 4 ; move 3 + ul , ul )  
[3495] ( move 2 , ul / 2 ; move 2 , ul / 4 )  
[3496] ( move ul , 4 ; move ua / 2 , 3 / 2 )  
[3497] ( move 4 , ul ; move 3 * 3 , 4 - ua )  
[3498] ( move 2 , 4 / 3 ; move ua , ul / 2 )  
[3499] ( move 3 , 3 ; move ul + ul , 4 * 4 )  
[3500] ( move ua , 2 / 4 ; move ul , 4 + 4 )  
[3501] ( move ul , 3 + 3 ; move 4 , ua / 4 )  
[3502] ( move 4 , ul ; move 4 + ul , 4 * 3 )  
[3503] ( move 3 , ul / 3 ; move 3 , ul / 2 )  
[3504] ( move ul , 3 ; move ul - 4 , 4 * 3 )  
[3505] ( move ul / 3 , 3 ; move 3 * 3 , ul )  
[3506] ( move ua , 4 * 3 ; move ul / 2 , 4 )  | ( move ul / ua , ua / 4 ; move ua , ul )  
[3507] ( move ua , 3 / 4 ; move 4 , 4 + ul )  | ( move ua , 3 / 4 ; move 4 , 4 + ul ; pen 3 )  
[3508] ( move ua , ua / 4 ; move 4 , 3 - 4 )  
[3509] ( move 4 , ul / 4 ; move ua / 2 , 2 )  
[3510] ( move 3 , 3 / 4 ; move 3 - ul , ul )  | ( move 3 , 3 / 4 ; ( move 2 , ul ; pen 0 ) )  | ( ( move 3 , 4 + 3 ; move ul + ul , ul ) ; v0 = 0 )  | ( ( move ul , 4 ; pen 3 ) ; move 3 , 3 ; move 3 - ul , ul )  
[3511] ( move 4 , 3 ; move ua - 4 , ul / 3 )  
[3512] ( move 4 , ua ; move ua / 3 , 4 * 3 )  
[3513] ( move 4 , ua - 4 ; move 4 , ua / 3 )  
[3514] ( move 4 * 2 , ul / 2 ; move ul , 4 )  | ( move 4 * 2 , ul / 2 ; move 2 - 3 , ul )  
[3515] ( move 4 , 4 + ul ; move ua / 3 , 4 )  | ( move 4 , 4 + ul ; move ul + ul , 4 )  
[3516] ( move 3 , 3 / 4 ; move 4 - ua , ul )  
[3517] ( move 2 , ua / 4 ; move 4 , 3 / ua )  
[3518] ( move ua , 4 * 4 ; move ul , 2 / 3 )  
[3519] ( move ul , 4 + 4 ; move 3 , ul / 4 )  
[3520] ( move 4 * 2 , ul ; move ul / 3 , 4 )  | ( move ua + ul , ul ; move 0 - ul , 4 - ul )  | ( move 4 , ul ; move 4 , ua ; move ul / 4 , 4 )  
[3521] ( move 2 , ul / 4 ; move ul - 4 , 4 )  
[3522] ( move ul , 4 - ul ; move 3 , 3 / 4 )  
[3523] ( move 3 , 3 / 4 ; move ul - 4 , ul )  
[3524] ( move 4 , 3 - 4 ; move ul , ul / 3 )  
[3525] ( move 4 , 4 / 3 ; move 4 + ul , ul )  
[3526] ( move 3 , ua * 3 ; move 4 , ul / 4 )  | ( move 3 , 0 ; move 4 , ul / 4 ; v0 = 0 )  
[3527] ( move ul , 4 / 3 ; move 3 , ua / 3 )  
[3528] ( move ul / 3 , 3 ; move 4 , 3 / ua )  | ( move 2 + ul , ul / 3 ; move 3 - 4 , 3 )  
[3529] ( move 4 , 4 / 3 ; move 4 , ul + ul )  
[3530] ( move 2 / 4 , ul / 2 ; move 4 , ul )  
[3531] ( move 4 , ul ; move ua / 3 , 4 * 4 )  | ( move 4 , ul ; v0 = 4 ; move ul + ul , v0 * v0 )  
[3532] ( move 4 , 4 * 4 ; move ua / 3 , ul )  | ( move 4 , 4 * 4 ; ( pen ua + ul ; move 2 , ul ) )  
[3533] ( move 3 , 4 / 3 ; move ul , ul / 4 )  
[3534] ( move ua , 0 ; move ul - ua , 0 - 2 )  
[3535] ( move ua + 2 , 0 ; move 2 , ul + ul )  
[3536] ( move ua + ul , 0 ; move 2 + ul , 2 )  | ( pen ul / ua ; move ua + ul , ua ; move 3 , 2 )  | ( ( move ua + ul , ua ; move 3 , 2 ) ; v0 = ua )  
[3537] ( move 2 , 0 ; move ua + ul , ua - 2 )  | ( move ul , ua ; move ul , 0 - 2 ; move ua , ua )  | ( move ul , ua ; move ua , ua - 2 ; ( move ul , 0 ; pen 3 ) )  
[3538] ( move 0 - 3 , 0 ; move ua , ua * ua )  | ( move ul - 4 , 0 ; move ua , ua * ua )  
[3539] ( move ua + ul , 0 ; move ua + 3 , 2 )  | ( move ua + ul , 0 ; move ua + 3 , ua + 2 )  | ( move ua + ul , 0 ; move ua + 3 , 2 ; pen ul )  
[3540] ( move 0 - ua , ua ; move ua - 2 , 2 )  
[3541] ( move 2 - ua , 0 ; move ua + ul , 2 )  
[3542] ( move 0 - 3 , 0 ; move ul - ua , ul )  | ( move ua - ul , ul ; move 3 , ua - ul )  | ( move ul - 4 , ua ; move ul - ua , ul )  
[3543] ( move ua , ua * ua ; move 2 , 0 - 2 )  
[3544] ( move ua - 2 , 0 ; move ul - ua , 2 )  
[3545] ( move ul , 0 ; move ua + ul , 0 - 4 )  | ( move ul , ua ; move ua + ul , ua - 4 )  
[3546] ( move 3 - ua , 0 ; move ua , ua - 2 )  
[3547] ( move ul - ua , 2 ; move 0 - ua , 2 )  | ( move ua , 4 ; move ua - ul , ul - 3 )  
[3548] ( move ua - 2 , 0 ; move 2 + ul , ul )  | ( pen ul / 3 ; move ua - 2 , 0 ; move 3 , ul )  | ( move ua - 2 , 0 ; pen 2 ; ( move 2 + ul , ul ; pen 4 ) )  
[3549] ( move 3 + 2 , 0 ; move ua + ul , ul )  | ( ( move 4 , 0 ; move ul , ua ) ; move ua + ul , ul )  
[3550] ( move ua , 4 ; move 0 - ua , 0 - ul )  | ( move ua , 2 + ul ; move 0 - ua , ul )  
[3551] ( move 2 + ul , 0 ; move 3 - ua , ul )  | ( move 3 , ua * 2 ; move 3 - ua , ul )  | ( move 4 - ul , ua ; move 3 - ua , ul )  | ( move 3 , ua ; v0 = 2 + ul ; move v0 - ua , ul )  
[3552] ( move ul , 2 + 2 ; move ua + ul , 2 )  | ( move 2 - ul , 3 + ul ; move ua + ul , ul + ul )  | ( move ul , 4 ; move ua + ul , ua + 2 ; pen ul - ua )  | ( pen ul ; ( move ul , 4 ; pen ua ) ; move ua + ul , ua + 2 )  
[3553] ( move ul , ua + 2 ; move ua , 3 + 2 )  | ( move ul , 4 / 2 ; move 0 , 4 ; move ua , ul )  | ( move 3 - 4 , 4 + ul ; move 0 , ul ; move ua , ul )  | ( ( move ul , 2 ; v0 = ua ) ; move v0 , 4 + ul )  | ( ( move ul , 2 ; pen ul ; move 0 , 4 ) ; move ua , ul )  
[3554] ( move ua + 2 , ua - ul ; move 2 , 2 )  
[3555] ( move 3 , ua + ul ; move ua + 2 , 2 )  | ( move 2 + ul , ul ; move ua + 2 , ua + 2 )  | ( move 3 , ul ; move 3 - ul , 2 ; move ua , 0 )  | ( move 3 , ul ; move ua + 2 , 3 - ul ; move ul , 3 )  | ( v0 = 2 ; move 3 , v0 - ul ; move v0 + ua , v0 )  | ( move 3 , ul ; ( pen ua / 3 ; move ua + 2 , 2 ; pen 2 ) )  
[3556] ( move ua , 0 - ul ; move ul , 0 - 4 )  
[3557] ( move 4 , ua ; move ua + 2 , 0 - ul )  
[3558] ( move 2 - ua , ua ; move 2 + ul , 2 )  
[3559] ( move 3 , 0 ; move ua + ul , ul - 2 )  
[3560] ( move 2 , 0 ; move ua + ul , 4 + ul )  | ( move 2 , ua ; move ua + ul , 4 + ul )  | ( move ul + ul , 0 ; move ua + ul , 4 + ul )  
[3561] ( move ul , 0 ; move 3 + 2 , ua - ul )  
[3562] ( move 2 - ua , 2 ; move ua , 2 - ua )  
[3563] ( move ua , 3 + 3 ; move 0 - ua , ul )  | ( move ua , 3 * 2 ; move 0 - ua , ul )  
[3564] ( move 2 , 0 ; move 3 - ua , ua - ul )  | ( move 2 , ua ; move 3 - ua , ua - ul )  
[3565] ( move ua + ul , ul ; move 2 , 0 - 3 )  | ( move ua + ul , ul ; move 2 , ua - 3 )  | ( v0 = ua + ul ; move v0 , v0 ; move 2 , ul - 4 )  
[3566] ( move 2 , 0 ; move ul - ua , 3 + ul )  | ( move 2 , 0 ; move ul - ua , 4 ; v0 = ul )  
[3567] ( move ua + ul , 0 ; move 2 , 4 + ul )  
[3568] ( move 0 - 4 , ul ; move ua , ua + 2 )  | ( move 0 - 4 , ul ; v0 = 2 ; move ua , v0 )  
[3569] ( move ua , ul ; move 3 + 2 , 0 - ul )  
[3570] ( move ul - 3 , 0 - ua ; move ua , 2 )  | ( move 0 , ua ; ( move 0 - 2 , ua ; move ua , 2 ) )  | ( pen ul + ul ; move 2 - 4 , ua * 4 ; move ua , 2 )  
[3571] ( move 0 - ul , ul ; move ua , 0 - 4 )  
[3572] ( move ul + ul , 0 ; move 2 , ua - 3 )  | ( move 0 , ua ; move 2 , ua ; move 2 , ul - 4 )  | ( ( move ul , ua ; move ul , ua ) ; move 2 , ul - 4 )  
[3573] ( move 3 , ua + 3 ; move ua , 0 - ul )  | ( ( v0 = 3 ; move v0 , v0 ) ; move ua , v0 - 4 )  | ( ( v0 = 3 ; move v0 , 4 - ul ) ; move ua , ul - 2 )  | ( ( pen ua + ul ; move 3 , 3 ; move ua , 0 - ul ) ; pen ua )  
[3574] ( move ua + ul , 0 ; move ul - 3 , 2 )  
[3575] ( move 0 , 3 / ua ; move ua , ua + 2 )  | ( v0 = 3 / ua ; move ua , 2 + v0 )  | ( v0 = 2 - ua ; move ua , v0 / ua ; v1 = 0 )  
[3576] ( move 2 , ul ; move ua + ul , 0 - 3 )  
[3577] ( move 0 - 3 , ul ; move ua + 2 , ul )  
[3578] ( move ua - ul , 2 ; move 0 - 2 , ul )  
[3579] ( move ua + 2 , 0 ; move ua , ua / 3 )  
[3580] ( move ua - 3 , 0 ; move 2 , ul - ua )  | ( move ua - 3 , ua ; pen 4 ; move 2 , ul )  | ( move ua - 3 , ua ; move 2 , ul ; move 0 , ul )  
[3581] ( move ul , 0 ; move ua + ul , 4 + 2 )  | ( move ul , ua ; ( move ua + 2 , 4 + 2 ; pen ul ) )  
[3582] ( move ua + 2 , 3 - ua ; move ua , 2 )  | ( move ua + ul , ua + 3 ; ( move ul , ua ; move ua , 2 ) )  
[3583] ( move 0 - 3 , ul ; move ua , 2 + ul )  | ( move 0 , ul ; ( move ul - 4 , ua ; move ua , 3 ) )  | ( pen ua * 2 ; ( move ul - 4 , ul ; move ua , 3 ) )  
[3584] ( move ua - 2 , ua ; move ua + 3 , 2 )  
[3585] ( move 0 - ua , 4 ; move ua + 2 , ul )  
[3586] ( move ul , 3 ; move 0 - ua , 2 + ul )  | ( ( move ua , 3 * 2 ; move ul , ul / ua ) ; pen ul )  
[3587] ( move 4 , 0 ; move 2 - ua , ua + ul )  | ( move 4 , 0 ; move 2 - ua , ul ; pen ul + ul )  | ( move 4 , ua ; ( move 0 , ul ; move 2 - ua , ua ) )  
[3588] ( move ua , ua - 2 ; move ul , 0 - 4 )  
[3589] ( move 0 - ua , 3 ; move ua + 4 , ul )  
[3590] ( move 2 , 2 - ua ; move ul + ul , 2 )  | ( move 2 , 2 ; move ul + ul , ul + ul )  | ( v0 = 2 ; move 2 , 2 ; move v0 , v0 )  | ( pen ua - ul ; move 2 , 3 - ul ; move 2 , 2 )  | ( v0 = 2 ; move 2 , v0 ; move v0 , v0 )  | ( v0 = 2 ; move v0 , v0 ; move v0 , 2 )  | ( v0 = 2 ; move v0 , v0 ; move 2 , v0 )  | ( move 2 , 2 ; ( v0 = 2 ; move v0 , v0 ) )  | ( v0 = 2 ; move v0 , v0 ; move v0 , v0 )  | ( ( v0 = 2 ; move v0 , v0 ) ; move v0 , 2 )  | ( v0 = ul + ul ; move 2 , v0 ; move v0 , v0 )  | ( v0 = ul + ul ; move v0 , 2 ; move v0 , v0 )  | ( move 2 , ul + ul ; ( pen 2 ; move 2 , 2 ) ; pen ua )  | ( v0 = 4 / 2 ; move v0 , v0 ; move v0 , v0 )  | ( ( v0 = 2 ; move v0 , v0 ) ; move v0 , v0 )  | ( move 2 , 2 ; ( v0 = ul + ul ; move v0 , v0 ) )  | ( v0 = ul + ul ; move v0 , v0 ; move v0 , v0 )  
[3591] ( move 2 - ua , ul ; move 2 , ua - 2 )  
[3592] ( move ul - ua , ua ; move 0 - 4 , 2 )  
[3593] ( move ul , 0 - ul ; move ua - 3 , 2 )  | ( move ul , 0 - ul ; move ua - 3 , 3 - ul )  
[3594] ( move ul , ul ; move ua + 4 , 0 - 2 )  
[3595] ( move ul - ua , 0 ; move 2 - ua , 4 )  
[3596] ( move 4 , ul - ua ; move ua , 0 - 2 )  | ( move 3 + ul , ul ; move ua , ul - 3 )  | ( move 4 , ul ; move ua , 0 - 2 ; pen 0 )  | ( move 4 , ul ; move ua , 0 - 2 ; v0 = ua )  | ( pen 3 ; move 4 , ul ; ( move ua , ua - 2 ; pen ul ) )  | ( move 4 , ul ; ( move ua , ul - 3 ; move 0 , ul ) ; pen 0 )  | ( pen ua ; ( move 4 , ul ; move ua , ul - 3 ; v0 = ul ) )  
[3597] ( move 2 , ua - 4 ; move 0 - ua , ul )  
[3598] ( move 2 , 3 - ul ; move 0 - ua , ul )  
[3599] ( move 2 , 4 + 2 ; move ua , ua + ul )  | ( move 2 , 3 * 2 ; move ua , ul ; pen 2 )  | ( move 0 , 4 ; move 2 , ul + ul ; move ua , ul )  
[3600] ( move ua , ua - 2 ; move 3 , 2 - ua )  
[3601] ( move ua - 2 , ua ; move 2 , ua - 3 )  
[3602] ( move ul - 2 , ul ; move ua + 2 , 2 )  | ( move ul , 2 + 2 ; move ua + 2 , 3 - 4 )  
[3603] ( move 2 - ua , 2 + ul ; move ul , 2 )  
[3604] ( move ua - ul , ul ; move 3 , 0 - 2 )  
[3605] ( move ul - ua , 0 ; move 3 - ua , 3 )  
[3606] ( move ua , 0 - 3 ; move ul - 2 , ul )  | ( move ua , ua - 3 ; move ul , ul - 3 )  
[3607] ( move ua , 0 - 4 ; move 3 , ua + ul )  
[3608] ( move ua , 0 ; move 4 - ua , ul - 2 )  | ( move ua , ua ; move 4 - ua , ua - ul ; move 0 , ul )  
[3609] ( move ua + ul , ul ; move 0 - 2 , 4 )  
[3610] ( move ua , 2 ; move ua + 2 , 3 - ul )  | ( move ua , 2 ; move ua - 2 , 2 ; move 2 + 2 , 0 )  | ( ( move 0 , 0 ; move ua , 2 ) ; move ua + 2 , 2 )  
[3611] ( move ua , 2 ; move 4 + 2 , ua + ul )  | ( move ua , 2 ; ( pen 2 ; move 3 * 2 , ul ) )  
[3612] ( move ul , ua * 2 ; move ua + 2 , 2 )  | ( move ul , ua ; move ua , 2 ; move 2 , ua )  | ( move ul , 0 ; ( move ua + 2 , 2 ; pen ua ) )  | ( v0 = ua + 2 ; move ul , 0 ; move v0 , v0 )  | ( move ul , ua ; v0 = ua + 2 ; move v0 , v0 )  
[3613] ( move 3 + 2 , ua ; move 2 , ua - ul )  
[3614] ( move 3 , ua ; move 0 - ua , 4 + ul )  
[3615] ( move ua + ul , 2 ; move ul , 0 - 4 )  
[3616] ( move 2 - ua , ul + ul ; move 2 , 2 )  | ( pen ul ; move 2 - ua , 2 ; move 2 , 2 )  
[3617] ( move ua + 2 , 2 ; move 3 , ua * ua )  
[3618] ( move 0 - 3 , ua ; move 3 , ua * ua )  
[3619] ( move ua + 2 , 2 - ua ; move 3 , ul )  | ( ( move ua + 2 , 2 ; pen ua ) ; move 3 , ul )  | ( pen ul ; move ua + 2 , ul + ul ; move 3 , ul )  | ( move 3 , 2 ; move ua - ul , ua ; move 3 , ua + ul )  | ( ( move ua + 2 , 2 ; v0 = ul ) ; move 3 , v0 )  | ( ( pen ua * 4 ; move ua + 2 , ua + 2 ) ; move 3 , ul )  
[3620] ( move ul , 3 ; move ua - ul , 0 - 2 )  
[3621] ( move ua + 2 , ua ; move 2 , 4 + ul )  
[3622] ( move 0 - ua , 3 ; move 3 , ul - ua )  | ( ( move 0 - ua , 3 ; move 3 - ul , ul ) ; move ul , 0 )  
[3623] ( move ua , ua - ul ; move 4 , 0 - 2 )  | ( move 4 , ul / ua ; move ua , 2 ; v0 = 0 )  
[3624] ( move ua - ul , ul ; move 0 - 3 , 2 )  
[3625] ( move 2 , 0 ; move 4 + ul , ua * ua )  
[3626] ( move 2 - ua , ul - 2 ; move ua , 2 )  
[3627] ( move 0 - ua , ua - ul ; move 4 , 2 )  
[3628] ( move ua + 2 , ul ; move 2 , ua + 4 )  | ( move 3 - ul , ul ; move ua , 0 ; move ul + ul , 4 )  | ( move ua + ul , ul ; ( move ul , ua ; move 2 , 4 ) )  | ( v0 = 0 - 3 ; ( move ua + 2 , ul ; move 2 , 4 ) )  | ( ( move 2 , ua + ul ; move ua , ua ) ; move ul + ul , 4 )  | ( move ua + 2 , 2 - ul ; pen ul ; ( pen ul ; move 2 , 4 ) )  
[3629] ( move 4 , 0 - ul ; move 2 , ul - ua )  | ( move 4 , ua - ul ; move 2 , ul ; v0 = 0 )  | ( move 4 , ul - 2 ; v0 = 4 / 2 ; move v0 , ul )  
[3630] ( move 2 , 3 ; move 2 - ua , ul - ua )  | ( move 2 , 3 ; move 2 - ua , ul ; v0 = ul )  | ( move 2 , 3 ; move 2 - ua , ul ; v0 = 2 - ua )  
[3631] ( move 4 , ul - ua ; move ua + 2 , 2 )  | ( move 4 , ua + ul ; move ua , 2 ; move 3 - ul , 0 )  
[3632] ( move ul - ua , 3 ; move 2 + 2 , ul )  | ( move ul - ua , 3 ; v0 = ul ; move 4 * v0 , ul )  
[3633] ( move 2 , ua ; move ua / 2 , ua - 2 )  
[3634] ( move 2 - ua , 2 + ul ; move ua , 4 )  
[3635] ( move 4 + 2 , ua - ul ; move ua , 2 )  
[3636] ( move ua + 3 , 3 - ul ; move ua , 2 )  | ( move ua + 3 , 2 - ua ; move ua , 2 ; v0 = ul / 4 )  
[3637] ( move ul + ul , 0 ; move ul - 4 , 2 )  | ( move 3 , 2 ; v0 = ul - 3 ; move v0 , v0 )  
[3638] ( move 3 , ul - 3 ; move 0 - ul , ua )  | ( move 3 , ul - 3 ; move ul , ua - 3 )  
[3639] ( move 0 - 4 , 2 - ua ; move ul , ul )  | ( move ul , ua ; move 3 , 2 ; move 4 / ua , ua )  
[3640] ( move 3 + ul , 3 + 2 ; move ua , ul )  | ( move 0 , 4 ; move 4 , ul ; move ua , ul )  | ( move 4 , 4 + ul ; v0 = ul ; move ua , ul )  | ( v0 = 3 + ul ; move v0 , ul + v0 ; move ua , ul )  | ( pen 3 ; move 0 , 4 ; ( move 4 , ua + ul ; move ua , ul ) )  
[3641] ( move ua , 3 - ul ; move 0 - ul , 3 )  | ( pen ua ; move ua , ua + 2 ; move ul - 2 , 3 )  
[3642] ( move 3 , ua - 2 ; move ua + ul , 3 )  | ( ( move 3 , 2 - 4 ; move ua , 3 - ua ) ; move ul , ua )  
[3643] ( move ua , 0 ; move ul - 3 , 2 / ua )  
[3644] ( move 2 , 0 - ul ; move 4 + ul , ul )  | ( move 2 , ua - ul ; move 4 + ul , ul )  | ( move 2 , 2 - 3 ; move 4 + ul , ul - ua )  | ( move 2 , ua - ul ; move 4 + ul , ua + ul )  | ( move 2 , 0 - ul ; move 4 + ul , ul ; move ul / ua , 3 )  
[3645] ( move ua , 4 + 2 ; move ua , ua - 3 )  
[3646] ( move 4 , ul ; move 0 - 3 , ua + ul )  | ( move 4 , ua + ul ; move ul - 4 , ul )  | ( move 4 , ul ; v0 = ul - 4 ; move v0 , ul )  
[3647] ( move 0 - 3 , ua - 4 ; move ul , ua )  
[3648] ( move 0 - ua , ul - 4 ; move 2 , ul )  | ( move ua , ul / ua ; move ul - 3 , ua + ul )  
[3649] ( move 2 + ul , ul - 2 ; move 2 , ul )  | ( move 3 , ua - ul ; move 2 , ul ; pen 2 )  | ( move 2 + ul , ua - ul ; move ul + ul , ul )  | ( move 3 , ua - ul ; move ul , ul ; move ul , ua )  | ( move 3 , ul - 2 ; v0 = ul ; move v0 + v0 , v0 )  
[3650] ( move ua , 2 + ul ; move ua + 3 , 4 )  
[3651] ( move ua + 2 , ua ; move 4 , ua - 3 )  
[3652] ( move 3 * 2 , 0 ; move ua - ul , ul )  
[3653] ( move 3 - ua , 0 - ua ; move 4 , ul )  | ( pen ua ; move 3 - ua , ua ; move 4 , ul )  | ( move 3 - ua , ua ; move 3 , ul ; move ul , ua )  
[3654] ( move 3 , ua + ul ; move ua + 3 , 3 )  | ( move 3 , ul ; v0 = 3 ; move ua + v0 , v0 )  | ( move 4 , ul ; ( v0 = 3 ; move v0 + ua , v0 ) )  
[3655] ( move ua , 4 + ul ; move 3 , 0 - ul )  
[3656] ( move 2 , ul ; move ua + ul , 2 - 3 )  
[3657] ( move 2 + ul , ua * ua ; move 2 , 3 )  
[3658] ( move ul , ua - 3 ; move ua + 2 , 3 )  
[3659] ( move 4 + 3 , ua ; move 2 , ua + ul )  | ( move 4 , 0 ; move 3 , 0 ; move 2 , ul )  | ( move 4 + 3 , ua ; move ul + ul , ul )  | ( ( move 4 + 3 , ua ; move ul + ul , ul ) ; v0 = ul )  
[3660] ( move ua , ua ; move 3 + 2 , ua - 4 )  
[3661] ( move 2 - ua , ua ; move ua , 4 - 2 )  | ( move 2 - ua , ua ; move ua , ul + ul )  
[3662] ( move ua - 2 , 2 - 3 ; move ua , ul )  | ( move ua - 2 , ua - ul ; ( move ua , ul ; pen ua ) )  
[3663] ( move ua + ul , ul ; move 2 , 4 + 2 )  
[3664] ( move 3 , ua + 3 ; move ul , ua - 2 )  | ( move 0 - ul , ul ; move ul - 4 , 2 )  | ( move 3 , 3 ; move ul , ua - 2 ; pen ua + ul )  | ( pen ua - ul ; move 3 , ua + 3 ; move ul , 0 - 2 )  
[3665] ( move ua , 3 ; move ua - 2 , ua + 4 )  
[3666] ( move 2 , ul ; move 0 - 4 , ul + ul )  
[3667] ( move 2 , 4 + ul ; move 2 , ua + ul )  
[3668] ( move 4 , ua + ul ; move 2 , ua - 2 )  | ( move 4 , ul ; move 2 , ua - 2 ; pen 0 )  
[3669] ( move ul - ua , 3 + ul ; move 2 , 2 )  | ( move ul - ua , 4 ; move 2 , 2 - ua )  | ( move ul - ua , 4 ; move 0 , ul ; move 2 , ul )  | ( move 2 , 2 + ul ; ( move ul , ul ; move 4 , ua ) )  
[3670] ( move ua , 3 ; move 3 + 2 , ua - ul )  
[3671] ( move ua / 2 , 2 ; move 0 - ul , ul )  | ( move 3 , ul + ul ; move ul , ul - 3 )  | ( pen ua ; move 3 , 2 ; move ul , ul - 3 )  | ( move 0 , ul ; ( pen 4 ; move 3 , ul ) ; move ul , ul - 3 )  
[3672] ( move ua + 2 , ua - ul ; move 2 , 4 )  
[3673] ( move ua , 3 ; move ua / 2 , ua + 2 )  
[3674] ( move 2 , ua * 2 ; move ua + 3 , ul )  | ( move 3 - ul , ua ; move ua + 3 , ul )  
[3675] ( move 2 , ua ; move 4 + 3 , ua + ul )  | ( move 2 , 0 ; pen ul ; move 4 + 3 , ul )  | ( move ul , ua ; ( move ul , ua ; move 4 + 3 , ul ) )  | ( move 2 , ua ; ( move 4 , ul ; move 3 , ua ; pen ul ) )  
[3676] ( move ua , ua ; move 3 * 3 , ua + 2 )  | ( pen ul / ua ; move ua , 0 ; move 3 * 3 , 2 )  
[3677] ( move 2 , 2 - 4 ; move ua , ua + ul )  
[3678] ( move 2 , 2 ; move 3 - ua , ul - ua )  | ( move ul + ul , 2 ; move 3 - ua , ul )  | ( move 3 - ul , ul + ul ; move 3 - ua , ul )  | ( move ul + ul , 2 ; move 3 - ua , ul ; pen ua )  
[3679] ( move ua , 2 - ul ; move ua + 2 , 4 )  | ( move ua , ul ; move 0 , ua ; move ua + 2 , 4 )  | ( move ua , ul ; ( move ua + 2 , 4 ; pen ul ) )  | ( move ua , ul ; move ua + ul , 4 ; move ul , ua )  
[3680] ( move 4 , ua - ul ; move 0 - ul , 2 )  | ( move 4 , 0 - ul ; move ul , ul - 2 )  | ( pen ul ; move 4 , ul - 2 ; move ul , 0 - ul )  
[3681] ( move ua , ua ; move ua + 2 , 4 * 2 )  
[3682] ( move ua / 2 , 0 ; move ua + 4 , ul )  | ( pen ua ; move ua / 2 , 0 ; move ua + 4 , ul )  | ( ( move 3 , ua ; move ua + 4 , ul ) ; move 0 , 0 )  
[3683] ( move ul - ua , 0 ; move 2 , ul - 4 )  | ( move ul - ua , ua ; move 2 , ua - 3 )  
[3684] ( move ua + ul , ua - 2 ; move 3 , 3 )  | ( move ua + ul , ul - 3 ; move 2 + ul , 3 )  
[3685] ( move ua - 3 , ua ; move ul , 3 + 2 )  | ( move ua - 3 , 0 ; move ul , ua - ul )  
[3686] ( move 2 - ul , 3 ; move ua + 2 , ul )  | ( ( move ul , 3 ; move ua , ul ) ; move ua / 3 , 0 )  | ( move ul , 3 ; move ua , ua + ul ; move 4 / 2 , ua )  | ( v0 = ua + 2 ; move ul , 3 ; move v0 , v0 - ul )  
[3687] ( move ul - ua , 2 ; move 2 , ua + 4 )  
[3688] ( move ul - 3 , 3 ; move ua , 0 - ul )  | ( move 0 - ua , 2 ; move ul + ul , ul )  
[3689] ( move 4 , ua ; move 2 + 2 , ua * ua )  | ( move 4 , ua ; move 3 + ul , ua * ua )  | ( pen ul ; move 4 , ua * 4 ; move 4 , ua * ua )  | ( move 4 , ua ; v0 = ua ; move 4 , v0 * ua )  | ( v0 = ua ; move 4 , v0 ; move 4 , v0 * v0 )  
[3690] ( move ua , 2 + ul ; move 2 , 4 + ul )  | ( move ua , 4 - ul ; move 2 , 4 + ul )  | ( move ua , 2 + ul ; move 2 , 4 + ul ; move 0 , ul )  
[3691] ( move 0 - ua , 2 / ua ; move ul , 3 )  
[3692] ( move 4 + 2 , ul ; move ua + ul , 2 )  
[3693] ( move ul - ua , 2 ; move ua , 2 * 2 )  | ( move ul - ua , ul + ul ; move ua , 4 )  | ( move ul - ua , 2 - ua ; move ua , 4 ; v0 = 4 )  
[3694] ( move ul , 0 ; move ua + ul , 2 / 3 )  
[3695] ( move ua , ul - 3 ; move 2 , 3 - ua )  | ( pen 3 ; move ua , ul - 3 ; move 2 , ua + 3 )  | ( v0 = 3 ; move ua , ul - v0 ; move v0 , v0 )  
[3696] ( move 3 - ua , 4 - ua ; move ua , 2 )  
[3697] ( move 2 - ua , ul ; move 2 , ua - 4 )  
[3698] ( move 2 , ua ; move 3 + ul , ua - 4 )  
[3699] ( move 4 , ua * ua ; move 0 - 3 , ul )  
[3700] ( move 3 , ua - 2 ; move ua - ul , 3 )  
[3701] ( move ua + 2 , 3 ; move ul + ul , 4 )  
[3702] ( move ua - 2 , ua + ul ; move 4 , 3 )  | ( move ul / 4 , ul ; move 4 , 0 ; move 4 , 4 - ul )  | ( move ua - 2 , ul ; ( move 0 , ua + ua ; move 4 , 3 ) )  
[3703] ( move ua + 2 , 2 ; move ul , ul / 2 )  
[3704] ( move ua - 2 , ua - 3 ; move ua , 4 )  
[3705] ( move 4 + ul , 0 ; move 2 / ua , ul )  
[3706] ( move 3 + 3 , ul ; move ul - ua , 2 )  | ( move 4 + 2 , 4 - 3 ; move ul - ua , 2 )  
[3707] ( move ua - ul , 4 ; move 2 + 2 , ul )  | ( move ua - ul , 4 ; move 3 + ul , ul )  
[3708] ( move ul - 3 , ua ; move ua - 3 , 2 )  
[3709] ( move 2 , 4 + ul ; move ua , 3 + ul )  | ( move 0 , 3 ; move ul , 4 / 2 ; move ua , 4 )  | ( move 2 , 4 + ul ; ( move ua , 2 + 2 ; move 0 , ul ) )  | ( move ua / 3 , 4 + ul ; move ua , 4 ; move 0 , 4 - ul )  
[3710] ( move ua , ul ; move ua + 2 , 4 * 2 )  
[3711] ( move 3 - ua , ul ; move 2 , 3 + ul )  
[3712] ( move 3 , ua ; move ul + ul , 3 + 3 )  | ( move 0 , ul ; move 3 , ua - ul ; move 3 - ul , 4 + 2 )  
[3713] ( move 2 , ua - 2 ; move 3 - ul , ul )  | ( move 2 , ul - 3 ; move ul + ul , ul ; pen ul )  
[3714] ( move ul - 3 , 2 - ua ; move ua , 3 )  | ( pen ul ; move ul , 3 - 4 ; move ua , 4 + 2 )  | ( move ul / 2 , ua + ul ; move ua + ul , 4 - ua )  
[3715] ( move ua - 4 , 3 + 2 ; move ua , ul )  
[3716] ( move 2 - ua , ua * 2 ; move ua , 4 )  
[3717] ( move ua , ua ; move 2 + ul , 3 * 3 )  | ( move ua , ua ; v0 = 3 ; move v0 , v0 * v0 )  
[3718] ( move ua , 3 + ul ; move ul , 4 + 2 )  | ( move ua , 3 + ul ; move ul , 3 * 2 )  | ( pen ua ; move ua , 4 ; move ul , 3 * 2 )  | ( move ua , 4 ; v0 = ua ; move ul , 4 + 2 )  | ( pen 2 + ul ; move ua , 4 ; move ul , 4 + 2 )  | ( move ua , 4 ; move ul , 3 * 2 ; v0 = ua * 4 )  
[3719] ( move ul / 2 , 2 ; move ua + 2 , ul )  
[3720] ( move ua , 4 + ul ; move 3 + ul , 2 )  | ( move ua , 4 + ul ; pen ul + ul ; move 4 , ua + 2 )  
[3721] ( move ua , 4 + 3 ; move 2 + ul , ul )  
[3722] ( move 4 , ul ; move ul + ul , 0 - 3 )  | ( pen 4 + ul ; move 4 , ul ; move 2 , ul - 4 )  | ( move 4 , ul ; pen 3 ; move ul + ul , ul - 4 )  | ( move 3 + ul , ul ; move ul , 3 ; move ul , 4 / ua )  
[3723] ( move ul , 4 + ul ; move ua , 3 + 2 )  
[3724] ( move ul , ua + 2 ; move 3 , 2 / ua )  | ( move ul , 2 ; move 2 + ul , ul / 3 )  
[3725] ( move ua + ul , ul ; move 4 + 3 , 2 )  
[3726] ( move ua , ua + 2 ; move ul , 3 * 3 )  
[3727] ( move ul + ul , 3 ; move 2 , ul - 2 )  | ( move 2 , 3 ; move 2 , ul - 2 ; v0 = 4 )  | ( move ul , 3 ; move ul , ua ; move 2 , 3 - 4 )  | ( ( move 2 , 3 ; pen 4 / ua ) ; move 2 , ua - ul )  
[3728] ( move 0 - ua , 3 ; move ul , 3 / ua )  
[3729] ( move 4 + ul , 2 ; move 2 + ul , ul )  | ( move 4 + ul , ua + 2 ; move 3 , ul )  | ( move 4 , 3 - ul ; move ul , 0 ; move 3 , ul )  | ( move 4 , 4 - 2 ; ( move ul , ua ; move 3 , ul ) )  | ( move 4 + ul , 2 ; move ul , 2 - ul ; move 3 - ul , 0 )  | ( pen 3 ; ( move ul , 2 ; ( move 4 , ua ; move 3 , ul ) ) )  | ( ( move 4 , 2 ; move ul , ua + ua ; move 3 , ul ) ; pen ua )  
[3730] ( move ua , ua + 4 ; move 4 + ul , 2 )  | ( move ua , 4 ; move 3 , 2 ; move 2 , 0 )  | ( move ua , 4 ; move 2 , 2 ; move 3 , ua )  | ( move ua , 4 ; move 2 , 2 ; move 3 , ua * 2 )  | ( move ua , 3 + ul ; move 0 , 2 ; move 4 + ul , ua )  
[3731] ( move ua , 2 ; move 4 - ua , 3 - ua )  
[3732] ( move 3 + ul , 2 ; move 3 , ua - ul )  | ( move 4 , 2 ; move 3 , ul - 2 ; v0 = 3 + 2 )  
[3733] ( move 4 - ua , ul / ua ; move 2 , 0 )  | ( move 4 - ua , ul / ua ; move 2 , ua )  
[3734] ( move 4 , ua * ua ; move ua + 3 , 2 )  
[3735] ( move 3 , 4 ; move ua + 2 , ul + ul )  | ( move 3 , 4 ; move ua + 2 , 2 ; pen ua - 2 )  
[3736] ( move 2 , 2 ; move 4 - ua , ul + ul )  
[3737] ( move 3 , 2 ; move ua + ul , ua - 4 )  
[3738] ( move 2 - ua , 2 ; move ul - ua , 4 )  
[3739] ( move ua , ul ; move 4 - 2 , ua - 2 )  | ( move ua , ul ; move 4 / 2 , ua - 2 )  | ( move ua , ua + ul ; pen ua ; move 2 , ul - 3 )  | ( ( move ua , ul ; move 2 , ul - 3 ) ; v0 = ul )  | ( move ua , ul ; ( move 2 , 2 - 4 ; v0 = ul / 4 ) )  | ( ( move ua , ul ; move 0 , ua ; move 2 , ul - 3 ) ; pen 3 )  
[3740] ( move 4 - ua , ua ; move 4 , ua + 2 )  | ( move 0 , ua ; move 4 - ua , 0 ; move 4 , 2 )  
[3741] ( move ua + 2 , ul ; move 3 - ul , 3 )  | ( move ua + 2 , ul ; move 0 , 0 ; move 2 , 3 )  | ( move ua + 2 , ua + ul ; move 2 , 3 ; pen ua + ua )  
[3742] ( move 3 - ua , 3 ; move ua , 3 + ul )  
[3743] ( move 3 , ul ; move ua + ul , 4 + 2 )  | ( v0 = 3 ; move v0 , ul ; move ua + ul , v0 + v0 )  
[3744] ( move 3 , ul + ul ; move ul , 0 - 4 )  
[3745] ( move ul , 4 ; move 0 - ua , 3 - ul )  | ( move ua , 3 * 2 ; pen 4 ; move ul , ul )  | ( ( move ua , 3 * 2 ; move ul , ul ) ; pen ua )  | ( move ua , 4 + 2 ; move ul , 2 - ul ; v0 = ua )  
[3746] ( move ul , 3 ; move 0 - ua , ul / 2 )  
[3747] ( move ua , ua - ul ; move 4 + 3 , 2 )  | ( move ua , 2 - 3 ; move 3 + 3 , 2 ; move ul , 0 )  
[3748] ( move 4 + 3 , ua ; move ua , ua + 4 )  | ( ( v0 = 2 ; move 4 + 3 , 0 ; pen ul ) ; move ua , 4 )  
[3749] ( move ul , 2 ; move 0 - ua , ua / 4 )  
[3750] ( move 4 + ul , 0 ; move 4 , ul + ul )  | ( move 2 , ua ; move 3 , ua ; move 4 , 2 )  | ( move 4 + ul , 0 ; ( move 4 , 2 ; pen ul ) )  | ( ( move 4 + ul , 0 ; pen ul ) ; move 4 , 2 )  | ( move 4 + ul , ua ; ( move 4 , 2 ; pen ua ) )  
[3751] ( move 0 , ul ; move ua + ul , 4 * 3 )  | ( v0 = ua + ul ; move v0 , 3 / v0 )  
[3752] ( move 3 + 2 , 4 + ul ; move ua , ul )  | ( move 3 + 2 , 4 + ul ; move ua , 2 - ul )  | ( move 4 + ul , 3 + 2 ; move ua , ul ; pen 4 )  
[3753] ( move 0 , ua + 4 ; move ua , ul / 3 )  | ( move 0 , 3 * 2 ; move 3 + 3 , 3 / 2 )  
[3754] ( move 4 , 3 + 2 ; move ua + ul , ul )  
[3755] ( move 4 , ul + ul ; move ua + 3 , 2 )  
[3756] ( move 3 + 2 , ua ; move ua , ul - 4 )  
[3757] ( move ul + ul , 2 ; move 2 , ul - 3 )  | ( move ul + ul , 2 ; move ul + ul , ul - 3 ; pen 2 )  
[3758] ( move 4 , ul ; move 0 - ua , 4 + ul )  | ( move 4 , ul ; ( move 0 - ua , 4 + ul ; pen ua ) )  
[3759] ( move 4 + ul , 2 ; move 2 , ua - ul )  
[3760] ( move ua + ul , 3 * 3 ; move ua , 2 )  
[3761] ( move 3 , ua ; move ul - 4 , ua + 2 )  | ( move 3 , 0 ; pen 3 ; move ul - 4 , 2 )  | ( move 3 , ua ; pen ul ; move 0 - 3 , ul + ul )  
[3762] ( move ua - 4 , 0 ; move 4 + ul , ul )  
[3763] ( move 0 - 3 , 4 ; move ul - ua , ul )  | ( move ul - 4 , 4 ; move ul - ua , ua + ul ; v0 = ua )  
[3764] ( move ua + 3 , ul - ua ; move 2 , 4 )  | ( ( move ua + 3 , ul ; move 2 , 2 + 2 ) ; pen ul )  
[3765] ( move ul , ua ; move 3 + 2 , 4 + ul )  
[3766] ( move 2 - ua , ul ; move 4 + ul , 2 )  
[3767] ( move 3 , ua + 2 ; move ua - ul , 4 )  | ( move 3 , 2 ; ( move ua - ul , 4 ; v0 = ul ) ; pen 0 )  
[3768] ( move 3 - ua , ua ; move 2 + ul , 4 )  
[3769] ( move 2 - ua , ua / 3 ; move ua , 2 )  
[3770] ( move 2 * 2 , ul ; move 2 , ua * ua )  | ( move 4 , ul ; move 2 , ua * ua ; pen 4 + ul )  
[3771] ( move 2 , ua * ua ; move 2 , 4 + ul )  
[3772] ( move 2 + ul , ul ; move ua + 4 , 3 )  | ( move 4 , ul ; move ua + 4 , 3 ; v0 = ua )  | ( ( pen ua + 4 ; move ua - 2 , ul ) ; move ua + 4 , 3 )  
[3773] ( move ul , 2 + ul ; move ua , 4 + 3 )  
[3774] ( move ua + ul , 3 ; move 4 , 2 + ul )  | ( move 4 + 3 , 3 ; move 0 , 3 ; move 4 , ua )  | ( move ul , 3 ; move ua , ua * 4 ; move 4 , 3 )  | ( move 0 , 0 ; ( move ua + ul , 3 ; move 3 + ul , 3 ) )  
[3775] ( move ul , ua ; move ua + 3 , 4 + 3 )  
[3776] ( move ua , ua - ul ; move 3 / 2 , 2 )  
[3777] ( move ul , 0 ; move ul - 4 , 4 + ul )  
[3778] ( move ua + ul , 4 - 2 ; move ua , 4 )  | ( move ua + ul , ua + 2 ; move ua , 4 )  | ( move ua + ul , ul + ul ; move ua , 4 )  | ( ( move ua + ul , 2 ; pen ua ) ; move ua , 4 )  | ( move ua + ul , 2 ; move ua , 4 ; v0 = ul + ul )  
[3779] ( move 3 + ul , 4 ; move 2 - ua , ul )  
[3780] ( move ua , ua / 2 ; move 2 , 2 / ua )  
[3781] ( move ua - 4 , ua * ua ; move 2 , 3 )  
[3782] ( move 4 , ua ; move ul - ua , 4 + 2 )  
[3783] ( move 3 + 2 , ul ; move ua , ua / 3 )  
[3784] ( move ul + ul , 2 ; move 3 , 4 + ul )  | ( ( v0 = 2 ; move v0 , v0 ) ; move 3 , 3 + v0 )  
[3785] ( move 3 , ua + 3 ; move 4 , ua * ua )  | ( move 4 - ul , 3 ; move 4 , ua * ua ; pen ul )  
[3786] ( move ua - 3 , ul - 3 ; move 2 , ul )  
[3787] ( move 4 + ul , 4 ; move ua , 2 + ul )  | ( move ua - ul , 4 ; pen ul ; move ua , ua + 3 )  | ( move ua - ul , 4 ; move ua , 3 ; v0 = ua + 3 )  
[3788] ( move ul , 4 + 2 ; move ua + ul , 4 )  | ( move ul , 3 * 2 ; move ua + ul , 4 ; pen ul )  
[3789] ( move ua - ul , 2 ; move ul - 3 , 3 )  
[3790] ( move ul , 3 ; move ua + ul , 4 + 3 )  
[3791] ( move ua , 2 - 3 ; move 2 , ul / ua )  | ( move ua , 2 - 3 ; move 2 , ul / ua ; v0 = ua )  
[3792] ( move ul + ul , 3 ; move 4 + ul , 2 )  | ( move 2 , 3 ; move 0 , ul ; move 4 + ul , ul - ua )  
[3793] ( move 2 , ua ; move ua - 3 , 3 / ua )  | ( move 2 , ua ; move 4 - ul , 3 / ua )  | ( move 2 , ua ; move 4 - ul , 3 / ua ; v0 = 3 + 3 )  
[3794] ( move 2 , ul ; move 3 - ua , 4 + ul )  
[3795] ( move ua , 2 ; move ul - 3 , 4 - ua )  
[3796] ( move 4 , 2 + ul ; move ua , ul - 3 )  | ( move 3 + ul , 3 ; move ua , ul - 3 )  
[3797] ( move ul - ua , 3 - ul ; move 3 , 2 )  | ( pen ul ; move ul - ua , 2 ; move 3 , 2 )  
[3798] ( move 2 , 2 ; move ua + ul , 4 / ua )  
[3799] ( move ua / 2 , ul ; move 3 + ul , 2 )  | ( move ua - 3 , ul ; move 0 , ul ; move 4 , ul - ua )  
[3800] ( move 4 + ul , ua ; move 2 , 3 - ul )  | ( ( move ul , ua ; move 4 , 0 ; move 2 , 2 ) ; v0 = ul )  
[3801] ( move 0 , 3 / ua ; move ua , 3 / ua )  | ( v0 = ua / 3 ; move ua , 2 / v0 )  
[3802] ( move 4 , ua - ul ; move ua - 3 , 2 )  
[3803] ( move 2 , 2 ; move ul - ua , 3 / ua )  
[3804] ( move 3 , ua - ul ; move 3 - ul , 2 )  | ( move 2 + ul , ua - ul ; move 3 - ul , 2 )  | ( move 3 , ua - ul ; v0 = 2 ; move v0 , v0 )  | ( move 3 , ua - ul ; move ul + ul , 2 ; pen ua + ul )  
[3805] ( move 2 - ua , ua ; move ul , 3 / 2 )  
[3806] ( move 3 * 3 , ua ; move ul , ua - 2 )  | ( ( move 3 * 3 , 0 ; pen 2 + 2 ) ; move ul , 4 )  
[3807] ( move ua - ul , 4 ; move 3 + 2 , ul )  | ( move ua - ul , 4 ; move 3 + 2 , ul ; v0 = 3 )  
[3808] ( move 2 , ua * ua ; move 3 - ua , 4 )  
[3809] ( move 3 , 3 + ul ; move ua + ul , 4 )  | ( move 2 + ul , 4 ; move ua + ul , 4 )  | ( move 3 , 4 ; move ua + ul , 4 ; move 2 , ua + 3 )  | ( move 3 , 4 ; move 0 , ul - ua ; move ua + ul , 3 )  
[3810] ( move 2 , 3 * 2 ; move ul - ua , ul )  
[3811] ( move 3 , ua - ul ; move 4 + 2 , ul )  
[3812] ( move ua + 4 , ul ; move 2 - 3 , ul )  
[3813] ( move ul , 0 ; move 4 + ul , ua / 3 )  | ( move ul - ua , ua / 3 ; move ul , ul )  
[3814] ( move 4 + ul , 0 - 4 ; move ul , ul )  
[3815] ( move ul , ul ; move 3 + 2 , ul - 3 )  | ( move ul , ul ; move 4 + ul , ul - 3 )  
[3816] ( move 3 + 2 , ua ; move ul - 4 , ul )  | ( pen ua ; move 4 + ul , ua ; move ul - 4 , ul )  
[3817] ( move 3 , ul ; move ua - ul , 2 - 3 )  | ( move ul - ua , ua ; move ul - 4 , ul )  
[3818] ( move 2 , ul + ul ; move ua , 3 * 3 )  
[3819] ( move ua , 4 + 2 ; move 2 , ul / ua )  | ( ( move ua / 3 , 3 ; move 0 - ua , 3 ) ; pen ul / ua )  
[3820] ( move 3 + ul , 2 ; move ul , ul - 3 )  | ( move 0 - ul , ua ; ( v0 = 0 ; move v0 - 4 , 2 ) )  
[3821] ( move 3 , 2 / ua ; move ua + ul , 3 )  
[3822] ( move ul - 3 , 2 ; move ua + ul , 4 )  
[3823] ( move 2 / ua , ua + ul ; move 4 , 2 )  | ( move ul / 3 , 2 ; move ul , ua + ul ; move 3 , ua )  
[3824] ( move ul , 4 + ul ; move 3 - ua , 2 )  
[3825] ( move 2 , ul / 3 ; move ua + ul , 2 )  
[3826] ( move ua + ul , 4 / ua ; move 2 , 2 )  
[3827] ( move ua , 4 + ul ; move ul , 4 + 2 )  
[3828] ( move ua - ul , 2 ; move 4 , 2 - ul )  | ( move ua - ul , 2 ; move 4 , ua + ul )  | ( move ua - ul , 2 ; pen ua + ua ; move 4 , ul )  | ( ( move ul , 2 ; move ua - 2 , ua * 2 ) ; move 4 , ul )  
[3829] ( move 2 - 4 , ul ; move 2 , ul + ul )  | ( pen ul ; move ul - 3 , ul ; move 2 , 2 )  | ( ( move ul - 3 , ul ; move 2 , 2 ) ; pen ua )  | ( ( move 2 - 4 , ul ; move 2 , 2 ) ; v0 = 0 )  
[3830] ( move 3 , ua + 4 ; move ua , 2 / ua )  | ( v0 = 3 ; move v0 , 4 ; move ua , ul / 3 )  
[3831] ( move 0 - 3 , ul ; move ua , 4 / ua )  
[3832] ( move ul , ul ; move 0 - 3 , 3 / ua )  
[3833] ( move ua , 4 ; move 4 - ua , 2 + ul )  | ( move ua , 3 + ul ; pen ua * 2 ; move 4 - ua , 3 )  
[3834] ( move 3 , ua - 2 ; move ul , ul - 3 )  
[3835] ( move ul , ua ; move 3 + 2 , ul / 2 )  | ( move ul , 0 ; ( move 4 + ul , 3 / ua ; v0 = 0 ) )  
[3836] ( move 3 + 2 , ua ; move ul , ul / 2 )  | ( move 4 + ul , ua * 4 ; move ul , 2 / 4 )  | ( ( pen ua ; move 4 + ul , ua ) ; move ul , 3 / ua )  
[3837] ( move 2 , ua + 4 ; move ua - 4 , ul )  | ( move ul + ul , 3 + ul ; move ua - 4 , ul )  
[3838] ( move 2 , ul ; move 4 + 4 , ua + ul )  | ( move ul + ul , ul ; move 4 * 2 , ul )  | ( move 2 , ua + ul ; move 4 + ul , ul ; move 3 , ua )  | ( v0 = 4 + ul ; move 2 , ul ; move 3 + v0 , ul )  
[3839] ( move 3 + 2 , ul ; move 4 , ua - ul )  | ( move 4 + ul , ua + ul ; move 4 , 0 - ul )  
[3840] ( move 3 , ul ; move ul - ua , 4 + 2 )  
[3841] ( move ul , 4 + 3 ; move 3 , ua + ul )  | ( move ul , 4 + 3 ; pen ua ; move 3 , ul )  | ( move ul , 4 + 3 ; v0 = 3 ; move 3 , ul )  | ( move 0 - 3 , 4 * 2 ; move 2 - 3 , ua - ul )  
[3842] ( move ul - ua , ul ; move 0 - 4 , 4 )  
[3843] ( move ul , 4 ; move ua - 3 , ua - 2 )  
[3844] ( move 4 , ua ; move 2 - ua , 3 - ul )  | ( move 4 , 0 ; move 2 - ua , 2 ; pen 0 )  
[3845] ( move ul , 2 / ua ; move ua + 2 , 4 )  
[3846] ( move 3 , ua * ua ; move 3 , ua + 4 )  
[3847] ( move 4 , 3 + 3 ; move ua , ul - ua )  | ( move 4 , 4 + 2 ; move ua , ul ; v0 = ua + ua )  | ( move 4 , 4 + 2 ; move ua - 4 , ul ; move 3 + ul , ua )  
[3848] ( move ul - 3 , ul ; move ua + 3 , 3 )  
[3849] ( move 2 * 2 , 4 ; move ua , ua * ua )  
[3850] ( move ul , 3 ; move ua + ul , 3 * 2 )  
[3851] ( move 3 - ul , 3 ; move ua + 3 , ul )  | ( move 2 , 3 ; move ua , ul ; move 3 , ua )  
[3852] ( move 4 , 3 + 2 ; move ul , ua - ul )  | ( move ul / ua , 3 ; move 4 , 2 ; move ul , ua - ul )  
[3853] ( move 2 , 3 ; move ul - 4 , ua + ul )  | ( move 2 , 3 ; v0 = 0 - 3 ; move v0 , ul )  
[3854] ( move 4 + 2 , ul ; move ua - ul , 3 )  
[3855] ( move 2 - ua , 3 ; move ua - ul , 4 )  | ( move 2 - ua , 3 ; move ua - ul , 3 + ul )  
[3856] ( move ua , 4 ; move 3 + ul , ua - 3 )  | ( move ua , 4 ; move 2 + ul , ul - 4 )  | ( move ua , 4 ; move 4 , ua - 3 ; v0 = ua )  
[3857] ( move 3 , 4 + ul ; move ul , 2 + ul )  | ( move 3 , 4 + ul ; move 4 - ua , ua )  | ( move 3 , 4 + ul ; v0 = 2 ; move ul , ul + v0 )  
[3858] ( move 2 - ua , 4 ; move ua , 3 - ul )  
[3859] ( move ua - ul , 3 ; move 3 , ul - 2 )  
[3860] ( move ul , 3 - ua ; move ua , 3 * 2 )  
[3861] ( move 3 , 2 ; move 4 + ul , ul + ul )  | ( ( move 0 , ul - ua ; move 3 , ul ) ; move 4 + ul , 2 )  
[3862] ( move 4 + 4 , ua * ua ; move ua , 2 )  
[3863] ( move ua , 3 - ul ; move 2 - ua , 4 )  
[3864] ( move ul - 4 , 0 ; move ua , 3 / ua )  
[3865] ( move ua - 2 , ul / 2 ; move ul , 2 )  
[3866] ( move 0 - 3 , 3 / ua ; move ul , ul )  
[3867] ( move ua + 3 , 2 ; move ul - 4 , ul )  
[3868] ( move 2 - ua , 4 + ul ; move ua , 4 )  
[3869] ( move ua , ua * 4 ; move 0 - 4 , ul )  
[3870] ( move 2 , ul ; move 3 - ua , 4 - ua )  
[3871] ( move 4 , ua - 2 ; move 3 - ua , ul )  
[3872] ( move 3 , ul ; move ul - ua , 2 - 3 )  | ( move 2 + ul , ul ; move ul - ua , ua - ul )  | ( ( move ua - ul , 0 ; move 0 , 0 ) ; move ul - 4 , ul )  
[3873] ( move 3 , ul - 3 ; move ua , ua + 4 )  | ( ( move 3 , ul - 3 ; v0 = 4 ) ; move ua , v0 )  
[3874] ( move 2 , ua ; move 4 + 4 , ua - ul )  
[3875] ( move 3 + 2 , ul - 4 ; move ua , ul )  | ( move 4 + ul , ul - 4 ; v0 = ul ; move ua , ul )  | ( move ul , ua - 3 ; ( move 4 , ua ; move ua , ul ) )  | ( ( pen ua ; move 4 + ul , ul - 4 ) ; move ua , ul )  | ( move 0 , ul - 4 ; ( move 4 + ul , ua ; move ua , ul ) )  
[3876] ( move 3 , ua * ua ; move 4 , 2 + ul )  
[3877] ( move ua , 4 * 3 ; move ua , ua + 3 )  
[3878] ( move 2 , ul ; move 4 + ul , 3 + ul )  
[3879] ( move 2 , ul - 4 ; move 3 , ua + ul )  
[3880] ( move 2 , ul - 2 ; move ua , ul / 3 )  
[3881] ( move 4 , ua ; move 0 - ul , 4 / ua )  
[3882] ( move ul - ua , 4 ; move 3 - ua , 3 )  
[3883] ( move ul - 4 , 3 + 3 ; move ua , ul )  
[3884] ( move ul + ul , ua ; move 3 , 3 * 3 )  | ( ( move 2 , ua ; move 3 , 3 * 3 ) ; v0 = 2 )  | ( pen ul ; move ul + ul , ua * 3 ; move 2 + ul , 3 * 3 )  
[3885] ( move 2 + ul , ua * ua ; move 4 , 4 )  
[3886] ( move ul , ua ; move ua + 2 , 3 / 4 )  
[3887] ( move ul - ua , 3 ; move 4 - ul , 2 )  
[3888] ( move 2 - 3 , ul ; move 4 , ua * ua )  
[3889] ( move ua - 4 , 2 ; move ul + ul , 4 )  
[3890] ( move ua + 2 , ul - 4 ; move ul , 4 )  
[3891] ( move 4 , 2 - 4 ; move ua , ua * ua )  
[3892] ( move ua , 3 ; move ul + ul , 3 * 3 )  | ( move 0 , 0 ; move ua , 3 ; move 2 , 3 * 3 )  
[3893] ( move 2 , ua - ul ; move 4 - ul , 3 )  | ( move 2 , ua - ul ; move 3 , 3 ; v0 = 2 )  | ( move 2 , ua - ul ; v0 = 3 ; move v0 , v0 )  | ( pen ul ; move ul - 4 , ul + ul ; move ul + ul , ul / ua )  
[3894] ( move 4 + ul , 3 - ul ; move ul , 2 )  | ( move 3 + 2 , 2 ; move 0 , ul ; move ul , ul )  | ( move 4 + ul , 2 ; move ul , ul + ul ; v0 = ul )  | ( move 4 + ul , 4 / 2 ; move 0 , 2 - 3 ; move ul , 3 )  
[3895] ( move 2 , ul - 4 ; move 3 , ul + ul )  
[3896] ( move 3 , ua / 4 ; move ul , ua + 2 )  
[3897] ( move 4 , 3 + ul ; move ua , 4 + ul )  
[3898] ( move 3 , ua / 3 ; move ua , ua + 4 )  
[3899] ( move ul - 3 , ul ; move 3 - ua , 3 )  
[3900] ( move 4 + 3 , ua - ul ; move 3 , ul )  
[3901] ( move ul - 4 , ua ; move 4 , ua + 3 )  | ( move 3 - ua , ua * 3 ; v0 = 4 ; move 4 , 3 )  
[3902] ( move ul - 4 , 3 + ul ; move ua , 3 )  
[3903] ( move ua , 2 / ua ; move ua , 4 * 2 )  
[3904] ( move ua + 3 , ul / 4 ; move ua , 2 )  
[3905] ( move 3 , ua - ul ; move 2 , ul - 4 )  
[3906] ( move ua , ua * ua ; move 3 , 4 + 4 )  
[3907] ( move 4 , 2 ; move ua + ul , ul - 4 )  
[3908] ( move ul , ul - 2 ; move ua , 3 / 2 )  | ( move ul , ua - ul ; move ua , 3 / 2 )  
[3909] ( move ul , ul ; move 4 + 3 , ua + 4 )  | ( move ul , ul ; move 3 / ua , 4 ; move ua , ua )  
[3910] ( move ul - 4 , 0 ; move ul , ul / 2 )  | ( move 3 - ua , ua ; move ul , 2 / 4 )  
[3911] ( move 3 + ul , 3 ; move ua - ul , 4 )  | ( move 0 , 2 ; ( move 4 , ul ; move ua - ul , 4 ) ; pen 3 )  
[3912] ( move 4 + ul , 4 ; move ua - 2 , ul )  
[3913] ( move 4 , ul ; move ul / 2 , 0 - ul )  | ( move 3 / ua , ua / 2 ; move 4 , ul ; pen ua )  
[3914] ( move ua , 4 + ul ; move ul , 4 + 3 )  | ( ( move ua , 3 + 2 ; pen ua ; pen ua ) ; move ul , 4 + 3 )  
[3915] ( move 2 , 4 + ul ; move 4 + ul , ul )  
[3916] ( move ul - 4 , 3 ; move 2 - ua , ul )  
[3917] ( move ua , 4 + 4 ; move ul , 3 + ul )  
[3918] ( move 4 + 4 , 2 ; move ua - ul , ul )  
[3919] ( move ua , ul - 4 ; move 3 , ua + 4 )  | ( move 0 , ua - 4 ; move ua , ul ; move 3 , 4 )  
[3920] ( move 4 , ul ; move ua + ul , 3 * 2 )  
[3921] ( move ul - ua , ua ; move 2 / 3 , 3 )  | ( move ul - ua , 0 ; move ul / 2 , 3 - ua )  | ( move ul - ua , ua ; move ul / 2 , ua + 3 )  
[3922] ( move 2 , ul / 3 ; move ua - 2 , ul )  
[3923] ( move ul , ua - ul ; move 4 * 2 , 2 )  | ( move ul , ua - ul ; move 0 , 3 ; move 4 * 2 , ul - 2 )  | ( move ul , ua - ul ; v0 = 2 ; move v0 + ua , v0 )  
[3924] ( move ua , 3 ; move ul / 2 , ul - 2 )  
[3925] ( move ul - ua , ua * 3 ; move 4 , 2 )  | ( move 2 , ua ; move ul - ua , 0 ; move 4 , 2 )  | ( pen ua ; ( move ul - ua , ua ; move 3 + ul , 2 ) )  
[3926] ( move 2 , 2 / 4 ; move ua , ua - ul )  | ( move 2 , ul / 2 ; pen 3 ; move ua , ua - ul )  | ( move 2 , ul / 2 ; pen ul ; move ua , ua - ul )  
[3927] ( move ul - 3 , 0 ; move ua , ul / 4 )  
[3928] ( move 2 , ul - 4 ; move ua , 3 - ul )  | ( pen ua ; move 2 , ul - 4 ; move ua , 2 )  | ( move 2 , ul - 4 ; pen ua ; move ua , ul + ul )  | ( move 2 , ua - 3 ; ( move ua , 2 ; v0 = 4 + ul ) )  
[3929] ( move 4 + 3 , ua ; move ul , 4 + ul )  | ( move ua + ul , 0 ; move ul , ua - ul )  | ( move ua + ul , ua ; move ul , ua - ul )  | ( move ua , 0 ; move ul , ua ; move ul , ua - ul )  | ( move ua + ul , 0 ; move ul , 0 - ul ; v0 = 0 )  
[3930] ( move ua + ul , 2 / 4 ; move ua , 3 )  
[3931] ( move ul - 3 , ua ; move 3 , 2 / ua )  
[3932] ( move ul , 4 + 2 ; move 4 , ua - ul )  
[3933] ( move 2 , ul - 3 ; move 4 + ul , ul )  | ( move ul - ua , ua - ul ; move 2 , 4 / 2 )  
[3934] ( move 4 , ul - 3 ; move ul + ul , 2 )  | ( move 4 , ul - 3 ; v0 = 2 ; move v0 , v0 )  
[3935] ( move 2 , 4 ; move 4 - ua , ul + ul )  
[3936] ( move ua - 3 , ul ; move 4 , 2 - ul )  
[3937] ( move 2 , ua - ul ; move 3 , ul / 2 )  
[3938] ( move ul , ua + 4 ; move ua , 4 * 2 )  | ( move ul , 4 ; move 0 , 4 ; move ua , 3 + ul )  | ( move ul , ua + 4 ; pen ua ; move ua , 4 + 4 )  
[3939] ( move ul - 3 , 3 ; move ua , 4 + ul )  
[3940] ( move 4 - ua , 0 ; move 4 , ul / ua )  
[3941] ( move 3 - ua , ua ; move 3 , ul / 2 )  
[3942] ( move 4 - ua , 3 ; move ua , 2 / ua )  
[3943] ( move ul - 3 , 2 ; move ua - 4 , ul )  | ( move 4 - ua , 4 - ul ; move 2 , ua - ul )  
[3944] ( move 2 , 4 ; move 4 + ul , ua * ua )  | ( move 2 , 4 ; move 4 + ul , ua * ua ; v0 = 3 )  
[3945] ( move 2 , 3 / ua ; move 3 , ul - ua )  | ( move 2 , 2 / 4 ; pen ua + 3 ; move 3 , ul )  | ( move ul , ul / 2 ; move ul , ua ; move 3 , ua + ul )  
[3946] ( move 0 - ul , 4 * 4 ; move ua , ul )  
[3947] ( move ul , ul ; move 2 + 2 , ua / 4 )  | ( move ul , ul ; move 3 + ul , ua / 4 )  | ( ( v0 = 4 ; move ul , ul ) ; move v0 , ua / v0 )  
[3948] ( move ua - ul , 2 / 3 ; move 2 , ul )  
[3949] ( move ul / ua , 0 ; move 4 + 4 , ul )  | ( move ua + 2 , ul ; move ul / ua , ul )  | ( move ua + 2 , ul ; move ul / 3 , ul - ua ; pen 4 )  | ( move ul / ua , 0 ; v0 = 2 ; move ua + v0 , ul )  | ( move ul / ua , ua + ua ; move 4 , ua + ul ; move 4 , 0 )  
[3950] ( move 3 , 3 ; move ua + ul , 4 - ul )  | ( move 3 , 3 ; move ua , 3 ; move ul , ua )  | ( move ul , 0 ; move 3 , 3 ; move ua + ul , 4 - ul )  | ( v0 = 3 ; move v0 , v0 ; move ua + ul , v0 )  
[3951] ( move 2 - ua , ul ; move ul , 4 * 2 )  | ( move 2 - ua , ul ; pen ua ; move ul , ua * ua )  
[3952] ( move 2 + ul , ul / 3 ; move 2 , ul )  | ( move 3 , ul / 3 ; move 2 , ua + ul )  | ( move 3 , ul / 3 ; ( move 2 , ul ; v0 = ul ) )  
[3953] ( move ua - 2 , 4 / ua ; move ul , 2 )  
[3954] ( move 2 , ul - 3 ; move ua - 4 , ul )  
[3955] ( move 4 - ul , 0 - 4 ; move ul , ul )  | ( move 3 , ua - 4 ; move ul , ul ; v0 = ul )  
[3956] ( move ua , ua / 3 ; move ul , 4 + 2 )  
[3957] ( move 3 - ua , ua / 4 ; move 2 , ua )  
[3958] ( move 4 , ul + ul ; move 2 , ul - 3 )  | ( move 3 + ul , 3 - ul ; move 2 , 0 - 2 )  
[3959] ( move ua - 3 , 3 ; move 4 , ul + ul )  
[3960] ( move 2 , ul ; move 3 + ul , ua / 3 )  
[3961] ( move ua - ul , ul ; move 3 * 3 , 2 )  
[3962] ( move 4 + ul , ua + ul ; move 3 , 4 )  | ( move 4 + ul , ul ; move 3 , 4 ; pen 0 )  | ( move 4 + ul , ul ; move 3 , 4 ; pen ua )  
[3963] ( move ul - 4 , 4 + ul ; move ua , 2 )  
[3964] ( move ua + ul , ul - 4 ; move 4 , 2 )  
[3965] ( move ul / 2 , ua ; move 2 * 2 , ul )  | ( move 2 / 4 , ua + ua ; move 4 , ul )  | ( move 3 / ua , ua ; move 3 + ul , ul )  | ( move ul / 2 , ua ; move 4 , ul ; pen 4 )  | ( move 3 / ua , ua ; move 4 , ul ; pen ua )  | ( move 3 / ua , 0 ; move 4 , ul ; v0 = ua )  | ( move 2 / 4 , ua ; move 4 , ul ; v0 = ul )  | ( v0 = 4 ; move 2 / v0 , 0 ; move v0 , ul )  | ( move 2 / 4 , 0 ; move 3 + ul , ul ; v0 = ul )  
[3966] ( move ua + 2 , 4 / ua ; move 3 , ul )  
[3967] ( move 4 , ul ; move ul / 2 , ua + 2 )  | ( move ul / 2 , ul / ua ; move 4 , 4 )  
[3968] ( move ul , ul ; move ua - 3 , 4 + 3 )  
[3969] ( move ul - ua , ua ; move 3 - 4 , 3 )  | ( move ua - ul , 0 ; move ul / ua , ua + 4 )  | ( move ul / 4 , 2 - ul ; move ul - ua , ua - ul )  | ( move ul - ua , ua ; move 0 - ul , 3 ; pen ul - ua )  
[3970] ( move ul - ua , 4 ; move 4 + ul , 2 )  
[3971] ( move 4 + ul , 2 ; move ul , ua - 4 )  
[3972] ( move 3 - ua , ul / 4 ; move ul , 0 )  
[3973] ( move 2 + ul , 2 ; move 4 , ul / ua )  | ( move 0 , ul ; move 3 , ul ; move 4 , ul / ua )  
[3974] ( move ua , 2 ; move ul - ua , 4 * 3 )  
[3975] ( move 4 + ul , ul ; move ua + 3 , 4 )  
[3976] ( move 4 , ua - ul ; move 2 + ul , 4 )  | ( move 4 , ua - ul ; move 3 , 4 ; pen ul )  | ( v0 = 4 ; move 4 , ua - ul ; move 3 , v0 )  
[3977] ( move ul - ua , 3 ; move ul , 4 * 2 )  
[3978] ( move 2 , 4 * 4 ; move ua + ul , ul )  
[3979] ( move 3 * 3 , ul ; move ul , 3 + ul )  | ( move 3 , ul ; move 4 + 2 , ua ; move ul , 4 )  
[3980] ( move ua - 2 , 3 ; move ul , ua / 4 )  
[3981] ( move 4 + ul , 3 - ul ; move ua , 4 )  | ( move ul , 2 ; move 4 , 0 ; move ua , 3 + ul )  
[3982] ( move 0 , ul / 4 ; move 4 , ua - ul )  
[3983] ( move ua , 3 / ua ; move ua , 3 * 3 )  
[3984] ( move ua , ul - 4 ; move 4 , ua - 3 )  
[3985] ( move ul , 4 + ul ; move 3 , 2 / ua )  
[3986] ( move 4 + ul , 3 ; move 4 + ul , ul )  | ( v0 = 4 + ul ; move v0 , 3 ; move v0 , ul )  
[3987] ( move 3 + ul , 4 + ul ; move ul , 4 )  | ( move 4 , 4 + ul ; v0 = ul ; move ul , 4 )  | ( v0 = 4 ; move v0 , ul + v0 ; move ul , 4 )  | ( v0 = 4 ; move v0 , ul + v0 ; move ul , v0 )  
[3988] ( move 2 , 4 / ua ; move ua , 4 + ul )  
[3989] ( move ua - ul , ua + 4 ; move 4 , 4 )  | ( v0 = 4 ; move ua - ul , v0 ; move v0 , v0 )  
[3990] ( move ul - 4 , ul + ul ; move 2 , 4 )  
[3991] ( move ul , 4 * 2 ; move 3 , ul - ua )  
[3992] ( move 3 / ua , ua * ua ; move 4 , 2 )  
[3993] ( move 4 / 3 , ua ; move 2 + ul , ul )  | ( move 4 / 3 , ua ; ( move 3 , ul ; pen ul ) )  | ( move ul , 0 ; move ul / 3 , ua + ua ; move 3 , ul )  
[3994] ( move ua / 2 , ul ; move 3 + ul , 4 )  | ( move ua - 3 , ul ; move ul , ua + 4 ; move 3 , ua * 4 )  
[3995] ( move ua , ua * ua ; move 4 * 2 , 4 )  
[3996] ( move 3 - ul , ul ; move 3 , 4 + ul )  
[3997] ( move 4 , 2 / ua ; move ul - 2 , ul )  | ( move 4 , ul / 3 ; v0 = ul ; move ul , 4 )  
[3998] ( move 3 + ul , ul - 4 ; move ua , 4 )  
[3999] ( move ul - ua , 4 ; move ua - 3 , 4 )  
[4000] ( move ul - 4 , 4 ; move 2 + ul , ul )  | ( move ul - 4 , 4 ; move 3 , ul ; v0 = ul )  
[4001] ( move ua , 4 + ul ; move ul - 3 , 4 )  
[4002] ( move ul , 3 - 4 ; move ua + ul , 4 )  | ( move 0 - ul , 2 ; move ua + ul , ul )  | ( move ul , ul - 2 ; move 4 / 3 , 4 ; move ua , ua )  | ( move 0 - ul , ul + ul ; v0 = ua + ul ; move v0 , ul )  
[4003] ( move 4 - ua , 3 ; move ua , 3 / ua )  
[4004] ( move 2 , ul / 4 ; move 2 , ua - ul )  
[4005] ( move ua , 3 * 3 ; move ul - 3 , ul )  
[4006] ( move ua , ul / 4 ; move 2 , 3 + ul )  | ( move ua , ul / 4 ; move ul + ul , 4 ; pen 2 )  
[4007] ( move ua - ul , 3 ; move 4 / ua , 2 )  
[4008] ( move ul - 3 , 3 ; move ua , ua / 3 )  
[4009] ( move 4 , 4 - ua ; move ua - 3 , ul )  
[4010] ( move 3 , ua - 4 ; move ua , ua / 3 )  
[4011] ( move ul - 3 , ul ; move 3 , 4 - ua )  | ( pen 2 + 2 ; move ul - 3 , ul ; move 3 , 3 + ul )  | ( pen ul / 3 ; move ul - 3 , ul ; move 3 , 4 - ua )  
[4012] ( move ua - ul , 4 + ul ; move 3 , 4 )  
[4013] ( move 4 + ul , 4 ; move ul - ua , 3 )  
[4014] ( move ul - 3 , ul ; move ua , 3 * 3 )  
[4015] ( move ua - ul , 2 ; move ul , 2 / 4 )  | ( move ua - ul , 2 ; pen ua ; move ul , 2 / 4 )  
[4016] ( move 3 + ul , 4 ; move 4 + ul , ul )  | ( move 4 , 4 ; move 3 + 2 , ul ; move ul , 3 )  
[4017] ( move 3 + ul , ul ; move 4 - ua , 4 )  | ( ( pen ul ; move 4 , ul ) ; move 4 - ua , 4 )  | ( move 4 , ua + ul ; move 4 - ua , 4 - ua ; pen ul / ua )  
[4018] ( move 4 , ul ; move ua + ul , 3 * 3 )  
[4019] ( move 3 + ul , 4 / ua ; move ua , 3 )  | ( move ul , 0 ; move 4 , 4 / ua ; move ua , 3 )  
[4020] ( move ua , 3 - 4 ; move 4 + ul , ul )  | ( move ua , ua - ul ; move 4 + ul , ul )  | ( pen ul ; move ua , ua - ul ; move 3 + 2 , ul )  | ( move ua , 3 - 4 ; pen 3 + ul ; move 4 + ul , ul )  
[4021] ( move 2 , ul - 4 ; move ua - 4 , ul )  
[4022] ( move 2 / ua , ul ; move 4 , 3 + ul )  | ( move ul / 3 , ul ; move ua - 2 , 4 )  
[4023] ( move ua , ua - ul ; move 3 * 3 , 4 )  
[4024] ( move ua - 4 , ua - 4 ; move ua , 4 )  
[4025] ( move ua - 4 , ua ; move 3 , ul / 2 )  
[4026] ( move 4 + ul , 3 ; move ua / 2 , ul )  | ( move 4 , 3 ; move ul , ua ; move 3 , ul )  | ( ( move 4 , 3 ; move ul , 0 ) ; move 3 , ua + ul )  | ( ( move ul , 3 ; move 4 , ua ) ; move 3 , ul ; pen 4 )  | ( move 4 + ul , 2 + ul ; ( pen ul + ul ; move 3 , ul ) )  
[4027] ( move ua / 4 , 2 ; move 3 - ua , ul )  
[4028] ( move 4 , ul / 3 ; move ua , ua - 2 )  
[4029] ( move ul , 4 / ua ; move 0 - 4 , ul )  
[4030] ( move ua , 3 / ua ; move ul / 2 , 2 )  | ( move ua , 3 / ua ; move ul / 3 , ul )  
[4031] ( move 3 , ua ; move ua + ul , 3 / 4 )  
[4032] ( move 3 , ua - 3 ; move ul - 4 , ul )  
[4033] ( move 3 + 2 , ul ; move ul , ua / 4 )  | ( move 3 + 2 , ul ; move ul , ua / 4 ; pen ul )  | ( move 3 , ul ; move ua / 3 , 0 ; move ul , 4 + 4 )  
[4034] ( move 3 , ua - 4 ; move ul - 3 , ul )  
[4035] ( move 4 + ul , 2 ; move ua , 4 / ua )  
[4036] ( move ul , 3 / 2 ; move 3 , ua - ul )  
[4037] ( move ua - 4 , ul ; move ua , 4 + 4 )  
[4038] ( move 4 , 3 / ua ; move 2 , ua * ua )  
[4039] ( move 4 , ul / 3 ; move ul , ua + 2 )  | ( ( pen ul ; move 4 , 2 / ua ; move 0 , ul ) ; move ul , ul )  
[4040] ( move 4 * 2 , ua - 3 ; move ul , ul )  
[4041] ( move ul , ul / 2 ; move ua - 2 , 4 )  
[4042] ( move ua - ul , ul ; move 3 * 2 , 4 )  
[4043] ( move 4 + ul , ul ; move ul , 3 * 2 )  | ( move 4 , ul ; pen ul ; move 0 - 2 , 3 )  
[4044] ( move ul , ua * ua ; move 4 + 3 , 4 )  
[4045] ( move ul , 4 ; move ua + ul , 4 + 4 )  
[4046] ( move ul , 2 / 4 ; move ua - 2 , ul )  | ( pen 4 ; move ul , 2 / 4 ; move 4 , ul )  
[4047] ( move 2 + ul , ua / 4 ; move 3 , ul )  
[4048] ( move ul , ul / 2 ; move 3 , ua + 4 )  
[4049] ( move ua , ul / 3 ; move 3 , ua - 3 )  | ( ( move ua , ul / 3 ; move 3 , ul - 4 ) ; pen ul )  
[4050] ( move ua - ul , 4 + 4 ; move 3 , ul )  
[4051] ( move 3 , 3 / ua ; move ua - ul , 3 )  
[4052] ( move 4 , 3 ; move ul - 3 , ul + ul )  
[4053] ( move ul , ul + ul ; move 3 , 4 * 2 )  | ( move 0 - ul , 4 + ul ; move 3 , 4 + ul )  
[4054] ( move ua , 2 ; move ul - 4 , 4 / ua )  
[4055] ( move ua / 4 , 3 ; move 3 + ul , ul )  | ( pen ua ; move ua / 4 , 3 ; move 4 , ul )  
[4056] ( move 4 - ua , ul / 3 ; move 2 , ul )  
[4057] ( move ua , 4 / 2 ; move ul - ua , 4 )  | ( move ua , 2 ; move ul - ua , 4 - ua )  
[4058] ( move ul , 2 ; move ul - 4 , 3 / ua )  
[4059] ( move 4 , 4 + 4 ; move ul , ua * ua )  
[4060] ( move 4 , 4 / ua ; move ua + ul , 3 )  
[4061] ( move ua , 4 * 4 ; move ua , 3 - ul )  
[4062] ( move ua , ul / 4 ; move 4 + ul , 2 )  
[4063] ( move 4 , ul / 3 ; move 2 , ua * ua )  
[4064] ( move ul - 4 , 3 / ua ; move 2 , ul )  
[4065] ( move 4 + 3 , ul ; move ul / 2 , ul )  | ( move 2 / ua , ua ; move ua , ul ; move ul , ua )  | ( move ul / 3 , 0 ; move ua + ul , ul ; pen 2 * 2 )  | ( v0 = ua + ul ; move ul / 3 , ua ; move v0 , v0 )  
[4066] ( move 3 , ul / 3 ; move ua + ul , 4 )  
[4067] ( move 4 + 4 , ul / ua ; move ul , 2 )  
[4068] ( move ul , 4 ; move 3 + ul , ua / 3 )  
[4069] ( move 4 , ul ; move 3 + 3 , ul / ua )  
[4070] ( move ua / 4 , ul ; move 3 , ua + 4 )  
[4071] ( move ua - 4 , 4 / 2 ; move ua , ul )  | ( move ua - 4 , ul + ul ; move ua , ul )  
[4072] ( move ul , ua ; move ua + 4 , 3 / 4 )  
[4073] ( move ul , ua / 4 ; move 3 , 3 - ua )  | ( move 2 , ua / 4 ; move ua - 3 , 4 - ul )  
[4074] ( move ul + ul , ul ; move 4 + 4 , 4 )  
[4075] ( move 4 , ul - 3 ; move 4 + ul , ul )  
[4076] ( move ua , ua / 4 ; move 4 , ua - 3 )  
[4077] ( move ul - 2 , ua / 4 ; move 3 , ul )  | ( ( move 3 , 4 * 3 ; move ul , 2 ) ; v0 = ul )  | ( ( move 0 , ua ; move 3 , 4 * 3 ) ; move ul , ul + ul )  
[4078] ( move ul - 3 , 4 ; move 4 - ua , ul )  | ( move 2 - 4 , 4 ; move 4 - ua , ul ; move 0 , ul - 3 )  
[4079] ( move ua - 2 , 3 / 4 ; move ul , ul )  
[4080] ( move 4 + ul , ua / 4 ; move 2 , ul )  
[4081] ( move ul - 4 , ul ; move 4 , ul - 2 )  | ( move ul - 4 , ua + ul ; move 4 , ul - 2 )  
[4082] ( move ul , ul / 4 ; move 3 + ul , 2 )  | ( pen 4 ; move ul , ul / 4 ; move 4 , 2 )  | ( move ul , ul / 4 ; move 4 , 2 ; pen ul )  
[4083] ( move 3 - ul , ua ; move 4 , ua / 3 )  
[4084] ( move ua , ul / 3 ; move 4 + 3 , ul )  
[4085] ( move 3 + 3 , ul / ua ; move 4 , ul )  | ( move 3 * 2 , ul / ua ; v0 = 0 ; move 4 , ul )  
[4086] ( move ul - ua , ul ; move 3 , 4 * 3 )  
[4087] ( move ul - 2 , 4 ; move 4 - ul , ul )  | ( pen ul ; move 2 - 3 , ua + 4 ; move 3 , ul )  | ( move 0 - ul , 4 ; move 3 , ul ; pen ua / 4 )  | ( pen 4 ; ( move 2 - 3 , 4 - ua ; move 3 , ul ) )  | ( ( v0 = ul - 2 ; move v0 , 4 ) ; move 3 , ul )  
[4088] ( move ua , 3 - ua ; move 4 / 3 , ul )  
[4089] ( move 4 + ul , ul ; move 2 / 3 , ul )  | ( move ul , ul ; ( move 4 , ua ; move 2 / 3 , ul ) )  
[4090] ( move 3 , ul - 4 ; move ua - 4 , ul )  
[4091] ( move ua - 3 , 4 ; move ul - 4 , ul )  
[4092] ( move 4 , ul - 3 ; move 2 , ul / ua )  
[4093] ( move ul , 4 * 3 ; move ua - 3 , ul )  
[4094] ( move 4 , ua / 4 ; move 3 , ua + ul )  | ( ( v0 = 4 ; move v0 , ua / v0 ) ; move 3 , ul )  
[4095] ( move 4 + ul , ul ; move 4 , 4 + ul )  | ( move 4 + ul , 2 - ul ; move 3 + ul , 3 + 2 )  
[4096] ( move ua , 3 * 3 ; move ul , 3 / ua )  
[4097] ( move 4 + ul , 2 ; move ul , 4 / ua )  
[4098] ( move 4 - ua , 4 ; move ua , 4 - ul )  
[4099] ( move ul - 4 , 4 ; move 3 + ul , ul )  | ( move ul - 4 , 4 ; move 4 , ul - ua )  
[4100] ( move ua + ul , 4 ; move 4 , ul - 4 )  
[4101] ( move ua - 3 , 4 ; move ul , ua / 3 )  | ( move ul , 4 - ul ; ( move 3 - ua , ul ; pen ua - ul ) )  
[4102] ( move 4 - ua , ul ; move 4 * 2 , ul )  
[4103] ( move ul - ua , ul ; move 3 , 4 / 2 )  | ( move ul - ua , ul ; move 2 + ul , 2 )  | ( move ul - ua , ul ; move 3 , ul + ul )  | ( ( move ul - ua , ul ; move 3 , 2 ) ; pen ul ; pen 3 )  
[4104] ( move ua , 4 + 3 ; move ul , ul / 3 )  | ( move ul + ul , 4 ; move ul - ua , ua + 3 )  
[4105] ( move ua , ua / 4 ; move 4 - 2 , ul )  | ( move ua , ua / 4 ; move 2 , ua + ul )  | ( move ua , ua / 4 ; move ul + ul , ul )  | ( v0 = ua ; move v0 , ua / 4 ; move ul + ul , ul )  
[4106] ( move 3 , 4 ; move ul - ua , ua / 3 )  
[4107] ( move ua , ul / 2 ; move 4 , ul - 3 )  
[4108] ( move 3 , ul + ul ; move 3 , ua / 4 )  
[4109] ( move 4 + ul , 3 - ul ; move ul , 4 )  | ( move 4 + ul , ua + 2 ; move ul , ua + 4 )  | ( move 3 + 2 , 2 ; move 2 - ul , 4 ; pen ua )  | ( move 4 + ul , 2 - ua ; move ul , 4 ; pen ua )  
[4110] ( move 4 , ul ; move ul - 2 , ul / 2 )  
[4111] ( move ua , 2 / 4 ; move 4 , ua * ua )  
[4112] ( move ul , ul / 2 ; move 3 + ul , 4 )  
[4113] ( move 4 + ul , ua / 3 ; move 3 , ul )  
[4114] ( move ul - 4 , 3 ; move ul + ul , 4 )  | ( move 0 - 3 , ua + 3 ; move ua / 3 , 4 )  
[4115] ( move ul - 4 , 4 + ul ; move 3 , ul )  
[4116] ( move 3 + ul , ul / 3 ; move 3 , ul )  | ( move 4 , ul / 3 ; pen ua ; ( pen ua ; move 3 , ul ) )  
[4117] ( move 2 - ua , ul / 4 ; move 3 , ul )  
[4118] ( move 4 , ua / 2 ; move ua - 4 , ul )  
[4119] ( move ul , ua ; move ul - 4 , 3 * 3 )  
[4120] ( move 4 , ul / 2 ; move ul , 4 + ul )  | ( move 4 , ul / 2 ; move ul , 4 + ul ; pen ua )  
[4121] ( move ul , 4 * 3 ; move ua , ua / 3 )  
[4122] ( move ul , 4 * 2 ; move ua , ul / 3 )  
[4123] ( move 3 , 4 + ul ; move ul , 4 / ua )  
[4124] ( move ul , ul ; move 3 * 2 , 4 / ua )  
[4125] ( move ua + 4 , 4 ; move ul , ua / 4 )  
[4126] ( move 4 * 2 , ua ; move ul / 3 , ul )  | ( move 4 * 2 , 0 ; move 2 / ua , ua * ua )  | ( move 3 / ua , ua - ul ; move ua + 2 , ul )  
[4127] ( move ul , ul - 4 ; move 4 + ul , 4 )  | ( move ul , ua - 3 ; pen 2 - ul ; move 3 + 2 , ua + 4 )  | ( move ul , ua - 3 ; pen 4 * 3 ; move 4 + ul , 3 + ul )  
[4128] ( move 3 , ul / 4 ; move 3 , ua - ul )  
[4129] ( move 3 - 4 , 4 / ua ; move ua , ul )  | ( move 0 - ul , 4 / ua ; move ua , ul )  | ( move ul - 2 , 4 / ua ; move ua , ul ; v0 = ul )  
[4130] ( move 3 * 3 , ul ; move ul , ul / 2 )  | ( move ua + 3 , ul ; move ul , 4 / ua )  
[4131] ( move 2 , ul / 4 ; move ua / 2 , ul )  
[4132] ( move ua , ul / 3 ; move 2 , ul / 3 )  
[4133] ( move 4 * 2 , 3 ; move ul , ul / ua )  | ( move 4 + 4 , 3 ; v0 = 3 ; move ul , ul / ua )  | ( move 2 + ul , 3 ; move 4 + ul , ua ; move ul , ul / ua )  
[4134] ( move ua , 4 + ul ; move 3 , ul / 4 )  
[4135] ( move 3 , ul / ua ; move ul , 3 - 4 )  | ( move 3 , ul / ua ; move ul , ua - ul )  
[4136] ( move ul , 4 / ua ; move 3 , ua - 4 )  
[4137] ( move 2 , ul - 4 ; move 4 , ul / ua )  | ( move 3 , ul / 3 ; move 3 - ua , 3 ; v0 = ul )  
[4138] ( move ua + ul , 4 * 4 ; move ul , 4 )  
[4139] ( move 4 / ua , ua ; move 4 * 2 , ul )  | ( pen ul ; move 4 / ua , 0 ; move ua + 2 , ul )  
[4140] ( move ul , 4 - ul ; move 4 , 4 + ul )  
[4141] ( move ul - 4 , 4 ; move 4 + ul , ul )  
[4142] ( move ul , 4 * 2 ; move ua , 4 / ua )  
[4143] ( move ua , 4 - ul ; move 3 , ua / 4 )  
[4144] ( move 4 , 2 / ua ; move ua / 3 , ul )  
[4145] ( move 4 / 3 , ua - ul ; move 3 , ul )  
[4146] ( move ul , 2 ; move 4 + ul , ul / 4 )  
[4147] ( move ua , ul ; move 4 / 2 , ul - 4 )  | ( move ua , ul ; move ua / 3 , ua - 3 )  | ( move ua , ul ; move ul - 3 , ul / ua )  | ( move ua , ul ; pen 2 ; move 3 , 0 - 3 )  | ( move ua , ul - ua ; move ul + ul , ua - 3 )  | ( move ua , ul ; ( move 3 , ua - 3 ; v0 = 4 ) )  | ( v0 = 3 ; move ua , ul ; move v0 , ua - v0 )  | ( ( pen ua ; move ua , ul ) ; move ul + ul , ua - 3 )  | ( pen ul / ua ; ( move ua , ul ; move 4 - ul , ua - 3 ) )  
[4148] ( move 4 - ua , ul ; move 3 , ua / 4 )  
[4149] ( move 2 , ua - ul ; move 4 , ul / 4 )  
[4150] ( move ua , 4 / ua ; move ul / 3 , 2 )  
[4151] ( move ul , ul ; move 3 - ua , 3 / 4 )  
[4152] ( move ul , ua + ul ; move 4 , 4 / 3 )  | ( pen ua ; move ul , ul ; move 4 , 4 / 3 )  
[4153] ( move ua / 4 , 4 + ul ; move 3 , ul )  
[4154] ( move 4 / 2 , ul ; move ul - ua , 4 )  | ( pen ul ; move 2 , ul ; move ul - ua , ua + 4 )  
[4155] ( move ul - ua , 4 ; move ua , 3 / 4 )  
[4156] ( move 3 , ua - ul ; move 4 , ul / 3 )  
[4157] ( move 3 , ul ; move ul - 3 , ul / 3 )  | ( move 3 , ul ; move 4 - ua , ul / 3 ; v0 = 4 - 2 )  
[4158] ( move ul , 4 ; move 3 + ul , ua / 4 )  
[4159] ( move 4 , 3 + ul ; move ul , ul / 3 )  | ( move 3 + ul , 3 + ul ; move ul , 2 / ua )  | ( move 4 , 4 ; ( move ul , 2 / ua ; pen ul ) )  | ( move 3 + ul , ua + 4 ; pen 3 ; move ul , ul / 3 )  | ( move 4 , 3 + ul ; v0 = 2 / ua ; move ul , v0 )  | ( ( pen ua ; move 4 , 4 ) ; move ul , ul / 3 ; v0 = ul )  
[4160] ( move 4 / 3 , ul ; move ua , ua - 4 )  
[4161] ( move 4 , ul / 2 ; move ul - ua , 4 )  
[4162] ( move ua , ua ; move 4 / 2 , ul / 4 )  | ( pen ul ; ( move ua , ua ; move 4 / 2 , ul / 4 ) ; pen 0 )  
[4163] ( move 3 , ul / 3 ; move 3 , ul / ua )  
[4164] ( move ul , ul - 4 ; move ua , 3 / 4 )  
[4165] ( move 4 + ul , ul ; move ua / 4 , 4 )  
[4166] ( move ul / 4 , 3 ; move ul - ua , 4 )  
[4167] ( move 3 , ul ; move 4 - ua , ul / 4 )  
[4168] ( move ul - 4 , ul ; move 4 - ul , 4 )  
[4169] ( move 3 , ul ; move ua / 4 , ul / 2 )  
[4170] ( move 4 , 4 / ua ; move ua , ul / 2 )  
[4171] ( move ul / 3 , ul ; move ua , 4 * 3 )  
[4172] ( move ua , ul ; move 4 - ul , 4 * 4 )  
[4173] ( move ul , 4 ; move 3 * 3 , ul / ua )  
[4174] ( move ua / 2 , ul / 3 ; move ul , 4 )  
[4175] ( move ul - 4 , 4 / 3 ; move ul , ua )  
[4176] ( move 4 - ul , ul ; move 4 , ul / 2 )  
[4177] ( move 4 / ua , 4 + ul ; move 4 , ul )  | ( move 0 , ul ; move ul / 2 , 4 ; move 2 + 2 , ul )  
[4178] ( move 4 , ua - ul ; move ua / 4 , 4 )  | ( move 4 , ua - ul ; move 2 , 4 ; v0 = 2 )  
[4179] ( move 4 , ul / 2 ; move ul / 2 , ul )  | ( v0 = ul / 2 ; move 4 , v0 ; move v0 , 4 / v0 )  
[4180] ( move ul , ul / 3 ; move 3 , ua / 3 )  
[4181] ( move ua , 3 / ua ; move ul , 4 / 3 )  
[4182] ( move 4 , 2 / ua ; move 4 , ul / ua )  
[4183] ( move ul , 4 + ul ; move 4 , ul / 4 )  
[4184] ( move 3 / ua , ul ; move 4 , 4 / ua )  
[4185] ( move ua , ul / 3 ; move 4 , ua / 4 )  | ( move ua , 2 / ua ; move 3 , ua / 4 ; move ul , ua )  
[4186] ( move ul , 4 / 3 ; move 4 - ul , ul )  
[4187] ( move ul , 4 * 4 ; move ua , ul / 3 )  
[4188] ( move ul / 4 , 4 + ul ; move 4 , ul )  | ( ( pen 2 ; move ul / 4 , 2 + 2 ) ; move 4 , 2 )  
[4189] ( move 4 , ul / 4 ; move ul / 2 , ul )  
[4190] ( move 4 , ul ; move ul - 4 , ul / 4 )  
[4191] ( move ua , 4 * 4 ; move ul / 4 , ul )  
[4192] ( move 4 , ul / 4 ; move 4 , ul / ua )  
[4193] ( move 2 , 0 ; move 3 , 4 * 2 ; pen 0 )  
[4194] ( move 4 , 2 ; move 4 , 4 ; move 4 , 4 )  
[4195] ( ( move 3 , 2 ; pen 0 ) ; move 3 , 0 )  | ( move 3 , 2 ; pen 0 ; ( move ul , 0 ; move 2 , ua ) )  
[4196] ( move 3 , 0 ; move 3 , 2 - 3 ; pen 4 )  | ( ( pen ul ; pen ua ; move 3 , 0 ) ; move 3 , ua - ul )  
[4197] ( move 4 - 3 , 0 ; pen 0 ; move 4 , 4 )  | ( ( move ul , 0 ; pen 0 ) ; move 4 , 3 + ul )  
[4198] ( move 0 - ua , ua + 2 ; move ua , ul )  | ( move 0 - ua , 2 ; v0 = ul ; move ua , ul )  | ( move 0 - ua , 2 ; move ua , ul ; move ul / 4 , ua + 3 )  
[4199] ( move ua + ul , 0 ; move ua + ul , 2 )  | ( move ua + ul , 0 ; move ua + ul , ul + ul ; pen ua )  | ( v0 = ua + ul ; move v0 , 0 ; move v0 , 2 * v0 )  
[4200] ( move 2 , ua ; move ua + ul , 0 - ul )  
[4201] ( move 0 - ua , ua ; move 2 , ua - ul )  
[4202] ( move ul , 0 ; move ua + 2 , ua * ua )  
[4203] ( move ua , 0 ; move ua - ul , ua - 2 )  
[4204] ( move ul , 0 ; move ua + ul , 2 - ua )  | ( move ul , ua ; move ua + ul , ul + ul )  | ( move ul , ua ; move ul , 2 ; move ua , 0 )  | ( pen ua + 2 ; move ul , 0 ; move ua + ul , 2 )  | ( move ul , ua ; move ua + ul , 2 ; pen 4 - ua )  | ( move 2 - ul , 0 ; move ua + ul , 2 ; pen ul / 3 )  | ( move ul , ua ; ( move ua , 2 ; pen 2 ) ; move ul , 0 )  | ( move ul , 0 ; ( v0 = 4 / 2 ; move ua + ul , v0 ) )  | ( move ul , 0 ; move ul / ua , 2 - ul ; move ua + ul , ul )  
[4205] ( move 3 + 2 , 2 ; move 3 , 4 ; pen 4 )  
[4206] ( move ua , 0 ; move ul - ua , 2 - ua )  | ( move ua , 0 ; move ul - ua , 3 - ul )  | ( ( move ua , ua ; move ul - ua , 2 ) ; pen 0 )  | ( pen ul / 3 ; move ua , ua ; move ul - ua , ua + 2 )  
[4207] ( move 0 - ua , ua + ul ; move 2 , ul )  | ( move 0 - ua , ul ; v0 = 2 ; move v0 , ul )  | ( move 0 - ua , ul ; v0 = ua ; move ul + ul , ul )  
[4208] ( move ua + ul , 0 ; move ua , ua - 3 )  | ( ( move ul , ua ; move ua , ua ) ; move ua , ul - 4 )  | ( move ua + ul , ua ; v0 = ul ; move ua , v0 - 4 )  | ( move ua + ul , ua ; ( v0 = ul - 4 ; move ua , v0 ) )  
[4209] ( move 2 , ul ; move 0 - ua , ua + ul )  
[4210] ( move ua , ua ; move 0 - ua , 3 - ul )  
[4211] ( move ua - 2 , 0 ; move ul - ua , ul )  
[4212] ( move 0 , ul ; move ua + 3 , ua * ua )  | ( v0 = ua - ul ; move 4 + v0 , v0 * v0 )  | ( v0 = ul - ua ; move 4 - v0 , v0 * v0 )  
[4213] ( move ua - 3 , 0 ; move ua , ua - ul )  | ( move ua - 3 , 0 ; v0 = 2 ; move ua , ul - v0 )  
[4214] ( move 2 , 0 - ul ; move ua + ul , ul )  | ( move 2 , ua - ul ; move ua + ul , ua + ul )  
[4215] ( move ua - ul , ua ; move ul , 0 - 2 )  | ( move ua - ul , ua ; move 0 - ul , ul )  | ( move ul , ul ; move ul - ua , ul - 2 )  | ( move ua - ul , ua ; move ul , ul - 3 )  | ( move 4 / 3 , ua ; ( move 4 , 0 ; move ul , ua - 2 ) )  
[4216] ( move 0 - ua , ua ; move 3 , ul + ul )  
[4217] ( move ua + ul , 0 - 2 ; move ul , ul )  | ( move ua + ul , ul - 3 ; move ul , ul )  
[4218] ( move ua + ul , 2 + ul ; move ua , 2 )  | ( move ua + ul , 3 ; move ua , 2 ; move 2 , 3 )  | ( move ua + ul , 3 ; move ua , 2 ; v0 = ul )  | ( move 0 , 3 ; move ul , 0 ; ( move ua , ua ; move ua , 2 ) )  | ( move ua + ul , 3 ; pen 4 ; ( pen 3 ; move ua , ua + 2 ) )  
[4219] ( move ua - ul , 0 ; move ul + ul , 2 )  | ( ( move ua - ul , ua ; move 0 , 2 ) ; move 2 , ua )  | ( ( move ua - ul , ua ; move 2 , ul + ul ) ; pen 0 - ul )  
[4220] ( move 0 - ul , ul ; move ua + ul , 2 )  
[4221] ( move ua , ul ; move ua - 2 , 0 - ul )  
[4222] ( move ua , ua + 2 ; move ua - 2 , ul )  | ( move ua , 2 ; move ul , ul ; move ua - 3 , 0 )  
[4223] ( move 0 - ua , 3 ; move ua + ul , ul )  
[4224] ( move ul , 0 - 2 ; move ua + ul , ul )  | ( move ul , ua - 2 ; move ua + ul , ul )  | ( move ul , ul - 3 ; move ua + ul , ul )  | ( move ul , ul - 3 ; move ua , ul ; move ul , ua )  
[4225] ( move ul / ua , 0 ; move ua , 0 - ul )  | ( move ul / ua , 0 ; move ua , ua - ul )  | ( move ul / 4 , ul ; pen 3 ; move ua , ul - 3 )  
[4226] ( move ua , 2 ; move ua + ul , ua + 3 )  | ( move ua , 2 ; move ua + ul , 3 ; move ul - ua , ua )  
[4227] ( move ua + 3 , 2 ; move ua , ua * ua )  
[4228] ( move 0 - 3 , ua * ua ; move ua , ul )  
[4229] ( move 0 - ua , 4 + ul ; move ua , ul )  
[4230] ( move 3 , ua + ul ; move ua + ul , 2 )  | ( move 3 , ul ; move ua , 2 ; move ul , 0 )  | ( move 3 , ul ; move ul , 2 ; move ua , ua )  | ( move 3 , ul ; pen ul ; move ua + ul , 2 )  | ( ( pen ua - ul ; move 3 , ul ) ; move ua + ul , 2 )  
[4231] ( move ua + ul , 3 ; move ua + ul , 2 )  | ( move ua + ul , 2 + ul ; move ua + ul , 2 )  | ( move ua + ul , ua + 3 ; move ua , ua + 2 ; move ul , 0 )  
[4232] ( move ua , ua ; move ua - 2 , ul - 2 )  | ( move ua , ua ; v0 = ua / 3 ; move v0 - ua , v0 )  
[4233] ( move ul - ua , 0 ; move ul , ua - 3 )  
[4234] ( move 0 - ua , ul ; move 3 - ua , ul )  | ( move ua - 3 , ul + ul ; move ua , ul - 2 )  
[4235] ( move ua - ul , ua + 2 ; move 2 , ul )  | ( ( move ua - ul , 2 ; move 2 , ul ) ; pen ua )  | ( move ul - 3 , 4 - ul ; move ul - ua , 3 - 4 )  | ( move ua - ul , 2 ; v0 = ul ; move v0 + v0 , ul )  
[4236] ( move ua + 2 , ul ; move ul , ua - 2 )  | ( move ua + 2 , 2 - ul ; move ul , 0 - 2 )  | ( pen 4 ; move ua + 2 , ul ; move ul - 2 , ul )  
[4237] ( move ua , 2 ; move ua - ul , 2 + ul )  
[4238] ( move ua + ul , 3 + 2 ; move ua , ul )  
[4239] ( move 0 - ua , ul ; move 3 + ul , ul )  | ( move 0 - ua , ul - ua ; move 4 , ul )  | ( move 0 - ua , ul ; move 4 , ul ; pen ua )  | ( move 0 - ua , ul ; move 4 , ul ; v0 = 0 )  
[4240] ( move ul + ul , 0 ; move ua , 2 / ua )  | ( move 2 , 0 ; move ua , ul / 3 ; v0 = ua * ua )  | ( ( move 2 , ua ; move ua , 2 / ua ) ; v0 = ul - ua )  
[4241] ( move ua , ua ; move ua + 2 , 4 + ul )  | ( move ua , ua ; move 0 , 4 ; move ua + 2 , ul )  | ( pen 4 ; move ua , ua ; move ua + 2 , 4 + ul )  | ( move ua , ua ; ( move ua , 3 + 2 ; move 2 , ua ) )  
[4242] ( move 3 , ua ; move ua - 2 , ua + ul )  | ( move 4 - ul , ua ; move ua - 2 , ul )  | ( move 3 , 0 ; move 4 , ul ; move 2 / ua , ua )  | ( move 3 , 0 ; ( move ua - 2 , ul - ua ; pen 3 ) ; pen ul )  
[4243] ( move ul - ua , 0 ; move ua + 4 , ul )  
[4244] ( move 4 , 4 ; move 3 , 2 / 4 ; pen 0 )  
[4245] ( move 4 , ua ; move 0 - ua , ul + ul )  | ( move 4 , ua ; move 0 - ua , ul + ul ; move 0 , ul )  | ( pen ua * ua ; ( move 4 , 0 ; move 0 - ua , ul + ul ) )  
[4246] ( move ul , 0 ; move ua - 3 , ul + ul )  | ( pen 4 ; move ul , ua * 3 ; move ua - 3 , 2 )  
[4247] ( move 2 , ul - ua ; move ua , ua - 2 )  | ( move ul + ul , ul ; move ua , ua - 2 )  | ( move 2 , ul ; pen 3 ; move ua , 2 - 4 )  | ( move 2 , ul ; pen 4 ; ( pen ua * 2 ; move ua , ua - 2 ) )  
[4248] ( move ul - ua , 0 - 2 ; move ul , ul )  
[4249] ( move ul - ua , 0 ; move 3 , ua - ul )  
[4250] ( move ua - ul , ua + 3 ; move ua , 2 )  
[4251] ( move ua + 2 , ul ; move ul + ul , 2 )  | ( move ua + 2 , ua + ul ; move 2 , 4 / 2 )  | ( move ua , ul ; ( move 2 , ua ; move 2 , 2 ) )  | ( move ua + ul , ul ; move ul , 0 ; move 2 , 2 )  
[4252] ( move ua + ul , ul - ua ; move 2 , 2 )  | ( move ua + ul , ul - ua ; move 2 , ua + 2 )  | ( move ua + ul , ul ; move ul , 2 ; move ul , 0 )  | ( move ua + ul , ul ; v0 = 2 ; move v0 , v0 )  | ( move ua + ul , ul ; move 0 , ul ; move 3 - ul , ul )  | ( move ua + ul , ua + ul ; move 2 , 4 / 2 ; pen 4 - ua )  
[4253] ( move ul - ua , ul ; move ul , 0 - 2 )  
[4254] ( move ua , 2 ; move 3 - ua , ua + ul )  
[4255] ( move 0 - ua , 4 ; move ua + ul , ul )  
[4256] ( move 2 , ua * ua ; move ua + ul , 2 )  
[4257] ( move 3 , ua * ua ; move ua , ua + 2 )  | ( move 3 , ua * ua ; move ua , 3 - ul ; pen ul )  
[4258] ( move 4 - ua , 0 ; move ua + ul , ul )  | ( move ul - 4 , 0 ; move ua + ul , ul )  | ( move 0 - 3 , 0 ; v0 = ua + ul ; move v0 , v0 )  | ( ( move 3 - ua , ua ; move ua + ul , ul ) ; v0 = ul )  
[4259] ( move ua , ua * ua ; move 2 , 2 - ua )  | ( move ua , ua * ua ; move 2 , ul + ul )  
[4260] ( move ul , ul ; move ua + 3 , ua - 2 )  | ( pen ua ; move ul , ul ; move ua + 3 , ua - 2 )  | ( move ul , ul ; ( move 0 , ul ; move ua + 3 , ua - 3 ) )  
[4261] ( move ua , 2 ; move 3 + ul , ua * ua )  
[4262] ( pen 4 ; move 4 , 4 + 3 ; move 4 , 2 )  
[4263] ( move ua + ul , ua - ul ; move 3 , 2 )  
[4264] ( move ua , ua * ua ; move ul , 3 + 2 )  | ( move ua , ua * ua ; move ul , 0 - ul )  
[4265] ( move ua + ul , 2 ; move ul + ul , 3 )  | ( ( move 4 , 2 ; move 3 , 0 ) ; move 2 , 3 )  
[4266] ( move ua + ul , 2 ; move ul , ul - 2 )  | ( move ua + ul , 2 ; move ul , 4 + ul )  | ( move ua + ul , 2 ; move 2 - 3 , ua + 2 )  | ( ( move ua + ul , 4 - 2 ; pen ul ) ; move ul , ua - ul )  
[4267] ( move ua , 3 ; move ua + ul , 3 + ul )  
[4268] ( move 2 , ua ; move ua + ul , 2 / ua )  
[4269] ( move ua , ul + ul ; move ua + 2 , 4 )  | ( move ua , 2 ; ( move ua , 4 ; move 2 , ua ) )  | ( pen ua ; move ua , 3 - ul ; move ua + 2 , 4 )  
[4270] ( move 3 + 2 , ua ; move ua - ul , ul )  | ( move ul , ua ; move 4 , ua * 2 ; move ua - ul , ul )  | ( move 4 + ul , ua ; move ua - ul , ul ; v0 = ua )  | ( move 3 , ua + ua ; move ul + ul , 0 ; move ua - ul , ul )  
[4271] ( move ua - ul , 0 ; move ua - 4 , ul )  
[4272] ( move 3 , ul ; move ua - 2 , ua + ul )  
[4273] ( move 2 - ua , ul ; move 2 + ul , ul )  | ( move 2 - ua , ul ; move 3 , ul ; v0 = 0 )  
[4274] ( move 4 - ua , 2 ; move ua , ua + ul )  | ( move 4 - ua , 2 ; pen ua + 2 ; move ua , ul )  
[4275] ( move 3 / ua , 0 ; move ua + ul , ul )  
[4276] ( move ua + 4 , ul ; move ul , 0 - ul )  | ( move ul , ua / 2 ; move ua + 4 , ul )  
[4277] ( move 3 + ul , ua * ua ; move ua , 2 )  | ( move 4 , ua * ua ; move ua , ul + ul )  
[4278] ( move ua - ul , ua - 2 ; move ua , 3 )  
[4279] ( move ua , 3 ; move ua - 3 , ua + ul )  
[4280] ( move ul , 0 ; move ua - ul , ua - 4 )  
[4281] ( move 2 , 3 + ul ; move ua + ul , ul )  | ( move 2 , 4 ; move ua + ul , ul ; pen ul )  | ( move 3 - ul , 4 - ua ; move ua + ul , ul )  | ( move 2 , 4 ; move ua + ul , ul ; v0 = 2 )  | ( move 2 , 3 + ul ; move ua , ul ; move ul , ua )  | ( move ul , 4 ; move ul , ua ; move ua + ul , ul )  
[4282] ( move ua + ul , 4 ; move ul , 0 - ul )  | ( move ua + ul , 4 ; move ul , 4 + ul )  | ( move ua + ul , 4 ; move ul , ua - ul )  | ( move ul , 4 ; move ua , 0 ; move ul , ul - 2 )  
[4283] ( move ua , 4 ; move ua + 2 , ua * ua )  
[4284] ( move ul , ua - 4 ; move ua , ua + 2 )  | ( move ul , ua - 4 ; move ua , 2 ; pen 4 )  | ( pen ul ; move ul , ua - 4 ; move ua , 2 )  | ( pen ul ; move ul , ua - 4 ; ( move ua , 2 ; pen ua ) )  
[4285] ( move ua , ua - 2 ; move ua , ua - 4 )  | ( move ua , 0 - 2 ; ( move ua , ua - 4 ; pen ul ) )  
[4286] ( move ua - ul , 0 ; move ul - 3 , ul )  | ( move 2 , ul ; move ul - ua , ul - 2 ; pen 2 )  | ( ( move 2 , ul ; pen ul ) ; move ul - ua , ua - ul )  
[4287] ( move ua , ua + 3 ; move 3 - ua , ul )  
[4288] ( move ua , ua - 4 ; move ua , 2 + ul )  
[4289] ( move ul + ul , 0 ; move 2 , ul / ua )  | ( move 2 , ua ; move ul + ul , ul / ua )  | ( ( move 2 , 0 ; pen ul ; move 2 , ul / ua ) ; v0 = ua )  
[4290] ( move 3 , ua ; move ul - ua , ul - 2 )  
[4291] ( move ul , 0 ; move ua + ul , ul / 3 )  | ( move ul , ua ; move ua + ul , ul / 3 )  
[4292] ( move ul , 0 - 4 ; move ua - ul , ul )  
[4293] ( move ua , ua - 2 ; move 4 , ua * ua )  
[4294] ( move ua + 2 , ua / 2 ; move ul , ul )  | ( move ul , ul ; v0 = ua + 2 ; move v0 , v0 - 3 )  
[4295] ( move ua + ul , 0 ; move ul , 4 / ua )  | ( move 0 , ua ; move ua + ul , ua ; move ul , 4 / ua )  
[4296] ( move ul , 4 ; move ua + 2 , ua * ua )  
[4297] ( move ua , ul ; move 4 + 2 , ul + ul )  | ( move ua , ua + ul ; move 2 , 2 ; move 4 , ua )  
[4298] ( move 2 , ua ; move ua + ul , 3 / ua )  
[4299] ( move ul , ua - 2 ; move ua + ul , 4 )  | ( move ul , ul - 3 ; move ua + ul , 4 )  
[4300] ( move ua - ul , 0 ; move ua , ua / 4 )  
[4301] ( move 3 , ul ; move ul - ua , 2 + ul )  | ( move 3 + 2 , 4 ; move 3 , ul / ua ; v0 = ua )  | ( move 3 , ul ; ( move ul - ua , 3 ; v0 = ul ) )  
[4302] ( move ul , 2 / ua ; move ua + 2 , ul )  
[4303] ( move ul , ua ; move ua + 3 , 4 + ul )  | ( move ul , ua ; v0 = 2 ; move ua + 3 , 4 + ul )  
[4304] ( move 4 , 3 ; move ua + ul , ua + ul )  | ( move 4 , 3 ; move ua , ul ; move ul , 0 )  | ( move 4 , 4 - ul ; move ua + ul , ua + ul )  | ( move 0 , ua ; move 4 , 3 ; move ua + ul , ul )  
[4305] ( move ua + 2 , ul ; move ul , 4 + ul )  | ( move ua + 2 , ul ; move 0 , 4 ; move ul , ul )  
[4306] ( move ua + ul , 2 ; move ul , 3 - ul )  | ( ( move ua + ul , ul + ul ; move ul , 2 ) ; pen ul )  | ( ( pen ul ; move ul , 2 ; move ua , ua ) ; move ul , 2 - ua )  
[4307] ( move 2 / ua , ua ; move ua , ul - 2 )  | ( move ul / 2 , ul ; move ua , ua - 2 )  
[4308] ( move ul , ua + 2 ; move ul - ua , 4 )  | ( move ul , ul + ul ; move ul - ua , 4 )  | ( pen ul ; move ul , 2 ; move ul - ua , 4 )  
[4309] ( move ua + ul , 3 ; move ua + ul , 4 )  | ( pen 4 ; move ua + ul , 3 ; move ua + ul , 4 )  
[4310] ( move 3 , ua - ul ; move ua + ul , 3 )  | ( pen 3 ; move 2 , ua - ul ; move ua + ul , 3 )  | ( pen ua - ul ; move 2 , ua - ul ; move ua + ul , 3 - ua )  
[4311] ( move ua + 2 , 4 ; move ul - ua , ul )  
[4312] ( move ua + ul , ua - 4 ; move ua , 3 )  
[4313] ( move 2 , 3 - ua ; move ua - ul , ul )  | ( move 2 , 4 - ul ; v0 = ul ; move ua - v0 , v0 )  
[4314] ( move 3 - ua , ul ; move 2 , ul + ul )  | ( v0 = 3 - ua ; move v0 , ul ; move 2 , v0 - ul )  
[4315] ( move 2 , 4 ; move ul - ua , ua + ul )  | ( move 2 , ua + 4 ; v0 = ul ; move ul - ua , v0 )  
[4316] ( move 3 + 2 , ul ; move ul , ua - ul )  | ( move ua - ul , ua + ul ; move ul , 4 + ul )  | ( move 4 + ul , ul ; move ul , 0 - ul ; pen 0 )  | ( ( pen ul ; move ua - ul , ul ) ; move ul , 4 + ul )  | ( move 0 , ul ; move ua - ul , ua ; move ul - 2 , 2 - ua )  
[4317] ( move ul - 2 , 2 ; move ul - ua , ul )  
[4318] ( move ua - 2 , ua ; move 4 + ul , ul )  
[4319] ( move ul , ua * ua ; move ua + 4 , 2 )  
[4320] ( move ua , ua - ul ; move 4 , ua + 3 )  | ( move ua , ul - 2 ; move 4 , 3 ; pen ul + ul )  | ( move ua , ua - ul ; move 0 , 2 ; move 4 + ul , ul )  
[4321] ( move 3 , ua * ua ; move ul , 2 + ul )  | ( move 2 + ul , ua * ua ; move ul , ua + 3 )  | ( move ul - 4 , ua * ua ; pen ul + ul ; move ul , 0 )  
[4322] ( move 0 - ul , ul ; move ua , ul - 4 )  | ( move ul - 2 , ul ; move ua , ul - 4 )  | ( move ul / ua , ul - 4 ; move ua + ul , ul ; pen ua )  
[4323] ( move ul - ua , 0 ; move 3 , ul / ua )  
[4324] ( move 2 , ul - 2 ; move ul - ua , ul )  
[4325] ( move ul , ul ; move 0 - ua , ul / 2 )  
[4326] ( move ua + ul , 4 + ul ; move 2 , ul )  
[4327] ( move 3 + 2 , ua - ul ; move ul , ul )  | ( v0 = ua - ul ; move v0 , v0 ; move ul , ul )  | ( move 3 + 2 , ul - 2 ; move ul , ua + ul ; pen ul )  
[4328] ( move 2 , ua - 4 ; move ua + ul , ul )  
[4329] ( move ul - ua , ua ; move ua - 4 , 2 )  
[4330] ( move ua , ua - 4 ; move ul + ul , 2 )  | ( move ul / ua , 0 ; move ua , ua - 4 ; move 2 , 2 - ua )  
[4331] ( move ua - 3 , 3 ; move ua + ul , ul )  
[4332] ( move ul , ua - 2 ; move ua , ul - 3 )  | ( move ul , ul - 3 ; move ua , ul - 3 )  
[4333] ( move 3 + ul , 2 ; move ul , ua * ua )  | ( move 4 , 2 ; pen 2 + ul ; move ul , 4 * 2 )  
[4334] ( move ua , ul / ua ; move ua + 3 , 2 )  
[4335] ( move ul , 2 ; move ua + 2 , ul / ua )  | ( move ul , 2 ; move ua + ul , ul / ua ; pen ul )  
[4336] ( move ul , 0 ; move ul - ua , ul - 4 )  | ( move ul , ua ; move ul - ua , ua - 3 )  | ( move ul , ua ; move ul - ua , ul - 4 )  | ( move ua , ul / ua ; move ul / ua , ul )  
[4337] ( move ul - 4 , ua ; move ua + 2 , ul )  
[4338] ( move ul , ua + 2 ; move ua - ul , 4 )  | ( move ul , ua + 2 ; v0 = ul ; move ua - v0 , 4 )  
[4339] ( move ua - ul , ul ; move 3 - ua , 2 )  
[4340] ( move 2 - ua , ul ; move 3 + ul , ul )  | ( move 0 , ul ; move 2 - ua , ua ; move 4 , ul )  | ( move 2 - ua , ul ; move 3 , ul - ua ; move ul , 0 )  
[4341] ( move ul , ua ; move ua + ul , 4 + 3 )  | ( move ul , 0 ; move ua , 4 + 3 ; move ul , ua * 2 )  
[4342] ( move ul - ua , 4 ; move ua + 2 , ul )  
[4343] ( move ul - ua , 2 ; move ua , 4 + ul )  
[4344] ( move ua , 3 / ua ; move ua + ul , 2 )  
[4345] ( move ua + ul , ul ; move 2 - 3 , ul )  | ( move ua + ul , ul ; move 0 - ul , ul )  | ( move ul , ul ; ( move ua , ua ; move ul - 2 , ul ) )  
[4346] ( move ua - ul , ul ; move ua , 4 + 2 )  | ( ( move 4 , ul ; move ul , ua ) ; move ua , 3 + 3 )  | ( move 4 + ul , ul ; pen 4 + ul ; move ua , 3 + 3 )  
[4347] ( move ua , ua ; move ua - 3 , ua - 4 )  
[4348] ( move ul , 3 ; move ua + 4 , ua + ul )  | ( move ul , 2 + ul ; move ua + 4 , ul )  | ( move ul , 4 - ul ; move ua + 4 , ul )  | ( move ul , 3 ; move 4 , ua + ul ; move ua , ua )  | ( move ul , 3 - ua ; move ua + 4 , ul ; pen ul )  | ( v0 = ua + 4 ; move ul , 3 ; move v0 , ul )  | ( ( move 0 , ua + 2 ; move ul , ul ) ; move ua + 4 , ul )  
[4349] ( move ul - ua , 3 + 2 ; move ul , ul )  | ( move ul - ua , 4 + ul ; move ul , ul )  | ( pen ul ; move ul , 3 ; move ua - ul , 2 )  | ( move ul - ua , 4 + ul ; move 0 - ul , ul - 3 )  | ( move ul - ua , 4 + ul ; move ul , ul ; v0 = ul )  
[4350] ( move ua , ua + 4 ; move ua - 3 , ul )  | ( move ua , 4 ; move 3 , ul ; move ul , ul )  
[4351] ( move ua , ua ; move ul + ul , 4 + 3 )  | ( v0 = ua ; move v0 , v0 ; move 2 , 4 + 3 )  | ( move ua , 0 ; move ul + ul , 4 + 3 ; v0 = 0 )  
[4352] ( move ua + 2 , ua * ua ; move ul , 4 )  
[4353] ( move 4 + ul , ua ; move ua - ul , 2 )  
[4354] ( move ua , ua / 3 ; move ua , 2 + ul )  | ( move ua , ua / 3 ; pen ua ; move ua , 3 )  
[4355] ( move ua , 2 ; move ua - 4 , ul + ul )  
[4356] ( move ua + ul , ua - 4 ; move 2 , ul )  
[4357] ( move ua + ul , ua - 2 ; move ul , 4 )  
[4358] ( move ua , 0 ; move ua / 4 , ua * ua )  
[4359] ( move ul , 0 ; move ua - ul , ul / 2 )  | ( move ul , 0 ; move ua - ul , 2 / 4 ; pen 3 / ua )  
[4360] ( move ul - ua , ul ; move 3 + 2 , ul )  
[4361] ( move ua , 0 - ul ; move 3 / ua , ul )  
[4362] ( move ua , ua + ul ; move ul - 4 , 2 )  
[4363] ( move ua + 2 , ua ; move ua , ua / 4 )  
[4364] ( move 2 - 3 , ul ; move ua + ul , ul )  
[4365] ( move ua , 3 + ul ; move ua - 4 , ul )  | ( move ua , 4 ; v0 = ua - 4 ; move v0 , ul )  
[4366] ( move 4 , ua ; move ua + ul , ul - 3 )  
[4367] ( move 3 , 3 ; move ul - ua , ul - ua )  
[4368] ( move 4 - ua , ua ; move ua , ul - 3 )  
[4369] ( move 3 + 2 , ua ; move ul , ul / ua )  | ( move ua - ul , ua ; move ul , ul / ua )  
[4370] ( move ul + ul , ua * ua ; move 4 , 2 )  | ( move 2 , ua * ua ; move ul , 2 ; move 3 , ua )  
[4371] ( move 3 , ua ; move ul - ua , 2 / ua )  | ( ( move 3 , 0 ; pen ul ) ; move ul - ua , 2 / ua ; pen 4 )  
[4372] ( move ul - ua , 0 ; move 4 / ua , ul )  | ( move ul - ua , ua * 3 ; move 4 / ua , ul )  
[4373] ( move ua - ul , ua - 2 ; move 4 , ul )  
[4374] ( move 2 , 4 ; move ul - ua , ua - ul )  
[4375] ( move ua - 3 , ul ; move ua , 4 - ua )  
[4376] ( move ua + ul , ul / ua ; move 3 , 2 )  
[4377] ( move 3 - ua , ua ; move ua - 4 , ul )  
[4378] ( move 2 - ua , ul ; move 4 + ul , ul )  
[4379] ( move ul , ua - 3 ; move 3 , ua - ul )  | ( move ul - 2 , ua ; move 4 - ul , ua - 4 )  
[4380] ( move ua - 4 , ul ; move 2 + ul , ul )  
[4381] ( move ua - 2 , 4 - ul ; move ua , ul )  
[4382] ( move ua - ul , 4 + ul ; move 2 , ul )  
[4383] ( move ul - 3 , ul ; move 2 - ua , ul )  
[4384] ( move 2 , 4 ; pen 3 ; move 4 , 4 * 4 )  
[4385] ( move ua , ul - 3 ; move ua , 4 + ul )  
[4386] ( move ua , 2 / 3 ; move ul , ua + ul )  | ( move ua , 2 / 3 ; v0 = ul - ua ; move ul , v0 )  
[4387] ( move 2 - 4 , ua ; move ul - ua , ul )  | ( move ua - ul , ul ; move 2 , ua - ul )  | ( move ua - ul , ul ; v0 = ul ; move ul + v0 , ua - ul )  
[4388] ( move 4 , ul ; move 3 - ua , ua + ul )  | ( move 4 , ul ; ( move 3 - ua , ul ; pen ua ) )  
[4389] ( move 3 - ua , ua + 4 ; move ul , ul )  | ( move 3 / 4 , 2 ; move ua - 3 , ua + 2 )  | ( ( move 3 - ua , 4 ; move ul , ul ) ; pen 3 )  | ( move 3 - ua , 4 ; v0 = 0 ; move ul - v0 , ul )  
[4390] ( move 4 , 2 ; move ul - ua , ua * ua )  
[4391] ( move ua + 3 , ul ; move 2 / ua , ul )  | ( move ua + 3 , ul ; move 3 / ua , ul / 3 )  
[4392] ( move 2 , 4 ; move ua - ul , ua * ua )  
[4393] ( move 2 - ua , ul - 4 ; move ua , ul )  
[4394] ( move ua , ul ; move 0 - ul , ua / 4 )  | ( move ua , ul ; move ul , 4 + ul ; move ul , 3 )  
[4395] ( move ua , 3 * 3 ; move ul , ua + ul )  | ( move ua , 3 * 3 ; move 2 - 3 , ul - 3 )  
[4396] ( move 3 , ua * ua ; move ul , ul - 2 )  
[4397] ( move ul + ul , 2 ; move ul - ua , 4 )  | ( move 2 , 2 ; move 0 , 4 ; move ul - ua , 0 )  
[4398] ( move ua + ul , ul ; move 2 , ul / 2 )  | ( move ua + ul , ul ; move ul + ul , ul / 2 )  | ( move ul , ul ; move ua , 0 ; move 2 , 2 / 4 )  
[4399] ( move ua , ul / 2 ; move ua - 2 , ul )  
[4400] ( move 2 , ul - 4 ; move ua + ul , ul )  | ( move ul + ul , ua - 3 ; move ua + ul , ul )  | ( move 2 , ul - 4 ; move ua + ul , ul ; pen 2 )  
[4401] ( move ua , ua * ua ; move 3 , ul - 3 )  
[4402] ( move 3 , 4 + ul ; move ua + ul , ul )  | ( move 4 - ul , 4 + ul ; move ua + ul , ul )  | ( pen ua ; move 3 , 4 + ul ; move ua + ul , ul )  
[4403] ( move ua - ul , 2 ; move 4 , ul + ul )  | ( move ua - ul , 2 ; move 4 , 2 ; pen 0 )  
[4404] ( move ul , ua - 2 ; move ua , ua / 3 )  
[4405] ( move ul - ua , 0 ; move ul , ul / 3 )  | ( move ul - ua , ua ; move ul , ul / 3 )  | ( move ul - ua , 0 ; pen 4 - ul ; move ul , ul / ua )  
[4406] ( move ul + ul , ua - 4 ; move ua , 3 )  
[4407] ( move 3 , ul - 2 ; move ua - ul , ul )  
[4408] ( move ua + 3 , 4 ; move ul + ul , ul )  | ( move ua , 4 ; move 3 , 0 ; move 3 - ul , ul )  
[4409] ( move ul , ul / 2 ; move ua , ua - 2 )  
[4410] ( move ua , ua + 2 ; move ul , 4 / ua )  
[4411] ( move 3 , ua ; move ua + ul , ua / 3 )  | ( move ua / 2 , 0 ; move ua + ul , ua / 3 ; pen ua * ua )  
[4412] ( move ul , ua ; move ua + 2 , 4 / ua )  
[4413] ( move ul - ua , 4 ; move ua + ul , 3 )  
[4414] ( move ul - 4 , ua ; move ul - ua , 2 )  
[4415] ( move ua + ul , ul ; move 3 , ul - 3 )  | ( move ua , ul ; move ul , ua ; move 3 , ul - 3 )  
[4416] ( move 4 , ua ; move ua + ul , 4 + ul )  
[4417] ( move ua , 2 / ua ; move ua , ul - 3 )  
[4418] ( move ua , ua - 3 ; move 2 , ul / ua )  
[4419] ( move ua - ul , ua - 2 ; move ul , 4 )  | ( move ua - ul , 2 - 4 ; move ul , 4 - ua )  
[4420] ( move ua + ul , ua ; move 3 / 2 , ul )  
[4421] ( move ua , ul - 4 ; move ua + ul , 3 )  
[4422] ( move ul - 4 , ua ; move ua - ul , 2 )  
[4423] ( move 0 , ul / 4 ; move ua + ul , ul )  | ( ( move 0 , ul / 4 ; move 4 , ul ) ; move 3 + ul , 0 )  
[4424] ( move 4 * 2 , ua ; move ua , ul + ul )  
[4425] ( move 4 + ul , ul ; move ua , ul - 2 )  | ( move 4 + ul , ul ; move ua , ua - ul ; pen 0 )  
[4426] ( move ua - ul , ul ; move 3 , 3 + ul )  | ( move ua - ul , ul ; v0 = ul ; move 3 , 4 )  | ( pen ua ; move ua - ul , ul ; move 2 + ul , 4 )  
[4427] ( move 4 + ul , ua ; move 3 , ua - ul )  
[4428] ( move ua , ul ; move ua + ul , 3 * 3 )  
[4429] ( move ua , ua ; move ul - 2 , ul / 2 )  
[4430] ( move ua , ua - ul ; move 3 , 4 + ul )  
[4431] ( move ul - ua , ua ; move 3 , ua - 4 )  
[4432] ( move 3 , ua / 2 ; move ua + ul , ul )  | ( move ua + ul , ul ; move 3 , ua - ul )  
[4433] ( move ua , ua + 2 ; move ua / 4 , ul )  
[4434] ( move ul + ul , 2 ; move 4 + ul , ul )  | ( move 2 , ul + ul ; move 4 , ul ; move ul , ua )  | ( move 2 , ul + ul ; move 4 , ul ; move ul , ua + ua )  
[4435] ( move 3 - ua , ul ; move 3 , ua - ul )  
[4436] ( move ua / 2 , ua + 4 ; move ua , ul )  | ( move ua / 2 , 4 ; move ua , ul ; v0 = ul )  | ( move ua / 2 , 3 + ul ; move ua , ul ; v0 = 2 )  | ( ( move ul , ua ; move ua / 2 , ua + 4 ) ; move ua , ul )  
[4437] ( move 4 + ul , ua - ul ; move ua , 3 )  
[4438] ( move 3 - ua , ul - 2 ; move ul , ul )  
[4439] ( move ua + ul , ua / 2 ; move 3 , ul )  | ( move 3 , ul ; v0 = ua + ul ; move v0 , ua - ul )  
[4440] ( move ua , 4 ; move ua + ul , ul - 3 )  | ( move ua , 4 ; move ua + ul , ul - 3 ; pen ul / ua )  | ( pen ua + ul ; move ua , 2 * 2 ; move ua + ul , ua - 2 )  
[4441] ( move ua , ul / 3 ; move ua , ua + 3 )  | ( move ua , 2 / ua ; move 0 , 2 ; move ua , ul )  
[4442] ( move ua , ul / ua ; move ul , 0 - 4 )  
[4443] ( move 4 , 2 ; move ua - ul , ua - ul )  
[4444] ( move 2 , ul / 3 ; move ua , ua + ul )  | ( move 2 , 2 / ua ; v0 = 4 ; move ua , ul )  
[4445] ( move ua , ua - 2 ; move ul , 3 / ua )  
[4446] ( move ua + ul , 4 ; move 3 , ua * ua )  | ( ( move ua + ul , 4 ; pen ua ) ; move 3 , ua * ua )  
[4447] ( move ul - 4 , ua ; move ua + 3 , ul )  | ( move 0 - 3 , ua ; move ua + 3 , ul ; v0 = 4 )  | ( ( move 0 - 3 , ua ; move ua + 3 , ul ) ; v0 = ua )  
[4448] ( move ua + ul , ul - 3 ; move ua , 4 )  | ( move ua + ul , 2 - 4 ; v0 = ua ; move v0 , 4 )  
[4449] ( move 3 , 4 - ua ; move ul - ua , ul )  | ( pen ua + ul ; move 3 , 4 ; move ul - ua , ul )  | ( ( move 3 , 3 + ul ; move ul - ua , ul ) ; pen ua )  | ( ( pen 2 ; move 3 , 4 ; move ul - ua , ul ) ; pen 0 - 2 )  
[4450] ( move 4 , ul ; move ua + ul , ua - 4 )  
[4451] ( move 4 + ul , 2 / ua ; move ua , ul )  
[4452] ( move ul , 4 ; move ua + ul , 4 + ul )  
[4453] ( move ua - 4 , ul / ua ; move ua , 2 )  | ( move ua , ul - 2 ; move ua - 4 , ul - 3 )  
[4454] ( move ul , ul / ua ; move ua + 4 , 2 )  
[4455] ( move ul + ul , ua / 4 ; move ua , 2 )  
[4456] ( move ul , ua - 4 ; move ua , 4 + ul )  
[4457] ( move ul - ua , ul ; move 3 , 4 + ul )  
[4458] ( move ul - 3 , ul ; move ua , 4 + ul )  
[4459] ( move ua , ua - 4 ; move ul , 3 - ul )  | ( move 0 , ua ; move ua , ua - 4 ; move ul , 2 )  
[4460] ( move ua , ua / 4 ; move ua + ul , 3 )  
[4461] ( move 4 + 2 , ul / ua ; move ua , ul )  | ( move 4 + ul , ul / ua ; move ul , ua ; move ua , ul )  
[4462] ( move ul , ul - 2 ; move 4 , ua * ua )  
[4463] ( move 4 + ul , ua ; move 4 + ul , ul )  
[4464] ( move ua , 4 + ul ; move 4 + ul , ul )  | ( ( v0 = 4 + ul ; move ua , v0 ) ; move v0 , ul )  
[4465] ( move 4 + ul , ul / ua ; move ua , 2 )  
[4466] ( move ua - 3 , ua * ua ; move ul , 4 )  
[4467] ( move ua , ul - 2 ; move ul , 3 / ua )  | ( move ua , ua - ul ; move 4 / 3 , ul / 3 )  
[4468] ( move ul - ua , ul ; move 4 + ul , 3 )  | ( move ul - ua , 4 ; move 3 / 2 , ul - 4 ; move 4 , 0 )  
[4469] ( move ua , ul ; move ul - 4 , ua + 4 )  | ( v0 = 4 ; ( move ua , ul ; move ul - v0 , v0 ) )  
[4470] ( move ua , ua + ul ; move ua , 4 * 4 )  | ( move ua , ul ; move ua , 4 * 4 ; move ul , 3 )  
[4471] ( move ul , 4 - ul ; move 2 - ua , ul )  | ( move ul , 3 ; pen 3 ; move 2 - ua , ul )  
[4472] ( move ua , ua / 4 ; move ul , 2 - ua )  
[4473] ( move ua , ua * ua ; move 4 , 4 + ul )  
[4474] ( move 3 , ul - 3 ; move ul + ul , ul )  
[4475] ( move ua + ul , 3 / ua ; move ua , 4 )  
[4476] ( move ua , 2 - ul ; move ua , ua / 4 )  | ( move ua , ua + ul ; move ua , ua / 4 )  
[4477] ( move ua - ul , 2 ; move 3 , ul / ua )  
[4478] ( move ul - 4 , ua ; move ua , 3 - ul )  | ( move ul - 4 , 0 ; ( pen ul ; move ua , 2 ) )  
[4479] ( move 4 , ul + ul ; move 3 , ua * ua )  
[4480] ( move 4 , ua ; move 4 - ua , ua - ul )  | ( move 4 , 0 ; move ua / 4 , ua / 3 ; move ul , ua )  
[4481] ( move ua + 4 , 4 ; move ul - ua , ul )  
[4482] ( move 4 + ul , 4 ; move ua , ua * ua )  
[4483] ( move ul , 3 - ul ; move ua + ul , 4 )  | ( move ul , 2 ; move ua , 4 ; move ul , ua )  | ( ( move ul , 2 ; move ul , 4 ) ; move ua , ua )  | ( move ul , 3 - ul ; move 0 , 4 ; move ua + ul , 0 )  
[4484] ( move ua + 4 , ul ; move ua , ul - 4 )  
[4485] ( move ua - ul , ua ; move ua / 4 , 2 )  | ( move 4 + ul , ua ; move ua / 4 , ua * ua )  
[4486] ( move ul - ua , 4 ; move ul + ul , 3 )  | ( move ul - ua , 2 + 2 ; move ul + ul , 3 )  
[4487] ( move ua - ul , ua ; move 2 , ua / 4 )  
[4488] ( move 3 , ul / ua ; move ul , 2 - ua )  | ( move 3 , ul / ua ; move ul , 2 ; pen ua )  
[4489] ( move ul , 3 - 4 ; move ua , ua - ul )  | ( move ul , ua - ul ; move ua , 0 - ul )  | ( move ul , ul - 2 ; move ua , ua - ul )  | ( move 0 - ul , ua - 4 ; move ua , 2 ; move ul / ua , ul )  
[4490] ( move ua , ua - 4 ; move 3 - ul , ul )  
[4491] ( move ua + ul , ul ; move 4 + ul , 4 )  
[4492] ( move 2 - ua , ul ; move ul , ul / 2 )  | ( move 2 - ua , ul ; move ul , ul / 3 )  
[4493] ( move ul + ul , ua ; move 4 , ul - 3 )  
[4494] ( move ua , 4 * 2 ; move ul + ul , ul )  | ( move ua , 4 + 4 ; move ul + ul , ul - ua )  | ( move ua , 4 * 2 ; move 2 , ul - ua ; pen ul )  
[4495] ( move ua , ul / 2 ; move ua + ul , 4 )  
[4496] ( move ul - ua , ul ; move 2 , ul - 4 )  
[4497] ( move 3 , ua * ua ; move ul , ua - 4 )  
[4498] ( move 4 + ul , ua ; move 2 , ul / ua )  | ( move ua - ul , ua ; move ua / 4 , ul / ua )  
[4499] ( move ua , ul - 4 ; move ul + ul , 3 )  | ( move ua , ul - 4 ; pen ua ; move 2 , 3 )  
[4500] ( move ul - ua , ua ; move 3 , ul / 2 )  
[4501] ( move 3 , ul ; move ul - ua , ul - 3 )  
[4502] ( move 3 , 4 ; move ul - ua , ul + ul )  | ( pen ua ; ( pen 3 ; move 3 , 4 ; move ul - ua , 2 ) )  | ( move 2 , 3 + ul ; ( move ul , ua ; move ul - ua , 2 ) )  
[4503] ( move ul - 3 , ul ; move 3 - ua , ul )  
[4504] ( move ua - ul , 3 ; move ua - 4 , ul )  | ( pen ua / 4 ; move ua - ul , 3 ; move ua - 4 , ul )  
[4505] ( move 2 / ua , ua ; move 4 + ul , ul )  | ( move ul / 4 , ua ; move 4 + ul , ul - ua )  | ( move 4 + ul , ul ; v0 = 3 / ua ; move v0 , v0 )  | ( move 4 + ul , ul ; ( pen ul ; pen 2 ) ; move ul , ul / 4 )  
[4506] ( move ul , ua - 4 ; move ua + ul , 4 )  
[4507] ( move 3 , ua * ua ; move ua , 4 - ul )  | ( pen ul ; move 3 , ua * ua ; move ua , ua + 3 )  
[4508] ( move 3 , ua - ul ; move 4 + ul , ul )  
[4509] ( move ul , ul - 3 ; move 3 - ua , ul )  
[4510] ( move ul , ua + 4 ; move ul - ua , 4 )  | ( move ul , 4 - ua ; move ul - ua , 4 ; pen ua )  
[4511] ( move ul + ul , 3 ; move 2 , ul / ua )  | ( move 0 , 0 ; move 2 , 0 ; move 4 - ua , 3 )  | ( move 2 , 2 + ul ; move ul + ul , ul / ua )  | ( pen 2 ; move 2 , 3 ; move 4 - ua , ul - 4 )  | ( move 2 , 0 ; v0 = 3 ; move ul - v0 , v0 )  | ( pen 3 ; ( move 2 , 0 ; pen ul + ul ) ; move 2 - 4 , 3 )  
[4512] ( move ul - ua , 3 ; move ul , 4 + ul )  
[4513] ( move ul , 2 ; move ua - ul , ul / 2 )  
[4514] ( move ua , ua - 3 ; move ul , ul / 2 )  
[4515] ( move 3 , 4 + ul ; move ul , ua * ua )  
[4516] ( move ul , ul ; move ua + ul , 3 - 4 )  | ( move ul , ul ; move ua + ul , ua - ul )  | ( move ul , ul ; pen 4 ; move ua + ul , ua - ul )  | ( pen ul ; ( move ul , ul ; move ua + ul , ua - ul ) )  | ( move ua + ul , ua / 2 ; v0 = ul ; move v0 , ul )  | ( move ul , ul ; ( move 0 , ua - ul ; move ua + ul , ua ) )  
[4517] ( move ua + ul , ul ; move 2 , 4 / ua )  | ( move ua + ul , ul ; pen 3 ; move 2 , 4 / ua )  
[4518] ( move ua , ul ; move 4 + ul , ua - 4 )  
[4519] ( move ua , ul / ua ; move 2 - ua , 4 )  
[4520] ( move ua - ul , ua ; move 3 , ul - 4 )  
[4521] ( move 3 , ul ; move ua - 4 , ul - ua )  | ( move 3 , ul ; v0 = 2 * 2 ; move ua - v0 , ul )  
[4522] ( move 3 - ua , ul ; move 4 , ul - ua )  | ( move 3 - ua , ul - ua ; move 4 , ul )  | ( move 3 - ua , ul ; move 4 , ul ; v0 = ua )  
[4523] ( move ul - ua , 4 ; move 3 , ua * ua )  
[4524] ( move 4 , ul ; move ua - ul , ua + 4 )  
[4525] ( move ua + ul , ul ; move ul , 4 * 2 )  | ( move ua + ul , ul - ua ; move ul , ua * ua )  | ( pen ul ; move ua + ul , ul ; move ul , ua * ua )  | ( ( move ua , ul ; move ul , 0 ) ; move 2 - ul , ua * ua )  | ( move ua + ul , ul ; ( pen ua + ul ; move ul , ua * ua ) )  
[4526] ( move ua + ul , 3 / ua ; move 3 , ul )  
[4527] ( move ua , 2 / 3 ; move ul , ul + ul )  
[4528] ( move ua + ul , 4 ; move 4 , ua - ul )  
[4529] ( move 4 / ua , ul ; move ua + ul , 2 )  
[4530] ( move ua - ul , ul ; move 3 , 4 + ul )  
[4531] ( move ul - 4 , 3 ; move ua + ul , ul )  
[4532] ( move ua , 2 ; move ua / 4 , ua - ul )  
[4533] ( move 3 , ua * ua ; move 4 , ul - ua )  
[4534] ( move ua , ul ; move 3 / ua , ul - 2 )  
[4535] ( move ul , 2 / 3 ; move ua + ul , ul )  
[4536] ( move ua + 3 , ul / 2 ; move ul , ul )  
[4537] ( move ua - ul , ul - 4 ; move 2 , ul )  
[4538] ( move ul , ua ; move 4 + ul , 2 / ua )  
[4539] ( move ul - ua , ua ; move 4 + ul , 4 )  
[4540] ( move ul , 0 - ul ; move ua , ul / 4 )  
[4541] ( move ul , 3 ; move ua + ul , ul / 2 )  
[4542] ( move ul , ul ; move 3 * 3 , ul + ul )  
[4543] ( move ua , ul / 2 ; move ua / 2 , ul )  
[4544] ( move ua , ul / 3 ; move 3 - ua , ul )  
[4545] ( move ul , ua - 4 ; move 4 , ua - ul )  | ( move 0 , ul ; move 4 , 4 * 4 ; move ul , ul )  
[4546] ( move ua , 4 / ua ; move 2 - ul , ul )  | ( ( move ua , 4 / ua ; move ul , ul ) ; pen 3 - ul )  | ( ( move ua , 4 / ua ; v0 = ul ) ; move v0 , v0 )  
[4547] ( move 3 , ul / 2 ; move ul , ua - ul )  
[4548] ( move ul , ul / 3 ; move ua - ul , 2 )  
[4549] ( move ua , 4 + ul ; move 3 / ua , ul )  | ( move ua , 4 + ul ; move ul / 2 , ul )  
[4550] ( move 2 , ua ; move ul - ua , ul / 4 )  | ( move ul , ua ; move ul - ua , ul / 4 ; v0 = ul )  
[4551] ( move ua + 3 , ul ; move ul , ua / 4 )  
[4552] ( move ul , ua * ua ; move 3 , 4 - ul )  | ( ( pen 3 ; move ul , ua * ua ) ; v0 = 3 ; move 3 , 3 )  
[4553] ( move ul , ul ; move ua - ul , 3 * 3 )  
[4554] ( move ua , ua ; move ua - ul , 4 / 3 )  
[4555] ( move ua + ul , ul / 2 ; move ul , 4 )  
[4556] ( move ua + ul , ua / 4 ; move 3 , ul )  
[4557] ( move ul , ul ; move 4 + ul , 4 + ul )  | ( move ul , ul ; move 2 , 4 + ul ; move 3 , ua )  
[4558] ( move ul , ua / 4 ; move ua - 2 , ul )  
[4559] ( move ua , 4 ; move ul + ul , ua / 3 )  
[4560] ( move ul , ua - 4 ; move 4 , ua * ua )  
[4561] ( move 3 , ul / ua ; move ua , ul - 3 )  
[4562] ( move ul , ua - 3 ; move ua , ul / 3 )  
[4563] ( move ul , 2 - ua ; move ua , ul / 4 )  | ( move ul , ul + ul ; move ua , ul / 4 )  | ( move ul , 2 ; move ua , ul / 4 ; pen 2 )  
[4564] ( move ul , ul / 4 ; move ua + 2 , ul )  
[4565] ( move ua - ul , 2 ; move ul , ul / 3 )  
[4566] ( move 4 + ul , ul ; move ul - 3 , ul )  | ( move 4 , ul ; move 2 - ul , ua ; move ul - 3 , ul )  
[4567] ( move 4 + ul , ul ; move 4 + ul , ul )  
[4568] ( move ul - 3 , ua ; move ua , 4 / ua )  | ( move ul - 3 , 0 ; move ua , 2 / 3 ; pen 3 )  
[4569] ( move ul - 4 , ul + ul ; move 3 , ul )  | ( move ul - 4 , 2 ; move 2 + ul , ua + ul )  
[4570] ( move ul - ua , ul ; move ua , 4 * 3 )  
[4571] ( move 2 / ua , ul ; move ua , ua / 3 )  
[4572] ( move ua , ua ; move ul - ua , 3 / 4 )  
[4573] ( move 3 - ua , ul ; move 3 , ul / ua )  
[4574] ( move ul - ua , ul ; move ul , 3 / 2 )  
[4575] ( move ul , 2 ; move ua - ul , ua / 4 )  
[4576] ( move 4 + ul , 4 + ul ; move ul , ul )  | ( move ul , 4 + ul ; move 4 , 0 ; move ul , ul )  | ( move 3 + 2 , 4 + ul ; move ul , 2 - ul ; pen 3 )  | ( pen ul ; move 3 + 2 , 4 + ul ; move ul , ua + ul )  
[4577] ( move ua / 4 , ua ; move 3 + ul , ul )  | ( ( move ua / 4 , ua ; move 4 , 3 - 2 ) ; v0 = 4 )  
[4578] ( move ua - ul , 4 ; move ua , ua / 3 )  
[4579] ( move 4 / ua , ua ; move ua + 4 , ul )  
[4580] ( move ua , ul / ua ; move 3 , 4 + ul )  
[4581] ( move ua - ul , ua / 2 ; move 4 , ul )  | ( move 4 , ul - ua ; move ua - ul , 0 - ul )  
[4582] ( move 4 - ua , ul ; move 4 , ua - ul )  
[4583] ( move ua , 2 / 4 ; move ul - ua , ul )  
[4584] ( move ua , ua ; move 4 / ua , ul - 3 )  
[4585] ( move ua , 2 ; move 3 , 0 ; move 4 , 3 )  
[4586] ( move ul + ul , 4 ; move ua , ul - 4 )  | ( move ul , ul ; move 2 , 3 ; move ua , ul - 4 )  
[4587] ( move 4 - ua , ul ; move ua - 4 , ul )  
[4588] ( move 4 - ul , ul ; move 3 - ua , ul )  | ( pen ua ; move 3 , ul ; move 3 - ua , ua + ul )  | ( ( move 3 , ul ; move 3 - ua , ul ) ; pen ua * ua )  
[4589] ( move 4 + ul , ul ; move 4 , ua * ua )  | ( move 4 + ul , ul ; move 3 + ul , ua * ua )  
[4590] ( move 4 + ul , ua ; move ul , ul - 4 )  
[4591] ( move 3 / ua , ua ; move ua , ul / 2 )  | ( move 3 / ua , ua ; move 3 + 3 , ul / 2 )  
[4592] ( move ul , ua - ul ; move 3 , ua / 3 )  
[4593] ( move ul , 4 ; move 4 + ul , ul - ua )  | ( move ul , 4 ; move 4 , ul ; move ul , ua )  | ( move ul , 4 ; move 4 + ul , ul ; pen ua )  | ( move ul , 4 ; move 2 + 2 , ul ; move ul , ua )  | ( move ul , 3 + ul ; move 3 + 2 , ul ; pen ul )  | ( ( move ul , 4 ; move 2 , ua + ul ) ; move 3 , 0 )  | ( move ul , 4 - ua ; move 4 + ul , ul ; v0 = 0 )  | ( ( move ul , 4 ; move ul , 2 - ul ) ; move 4 , ua )  | ( v0 = ul ; move v0 , 2 + 2 ; move 4 + ul , ul )  
[4594] ( move ul , ua + 3 ; move ua , ul / 4 )  | ( move ul , 3 ; move 0 , ul / 4 ; move ua , ua )  | ( move ul , 3 ; v0 = ul / 4 ; move ua , v0 )  
[4595] ( move ua , ua ; move 3 - ua , ul / 4 )  
[4596] ( move ua , ua * ua ; move ul , 2 / 4 )  | ( move ua , ua * ua ; move ul / 2 , ul )  
[4597] ( move 4 , ua - ul ; move ua - 4 , ul )  
[4598] ( move ua , ul / ua ; move ua , 3 / 2 )  
[4599] ( move ua , 3 / ua ; move ua - 4 , ul )  
[4600] ( move 3 , 3 ; move 2 , 0 ; move ua , 4 )  | ( move 2 + 2 , ua + 3 ; move ul , 0 ; move ua , 3 + ul )  
[4601] ( move ul , ua - ul ; move 3 , ul / 2 )  
[4602] ( move ua , ua + ul ; move 4 , ua / 4 )  | ( pen ul ; ( move ua , ul ; move 4 , ua / 4 ) ; v0 = 3 )  
[4603] ( move 3 , ul / 4 ; move ua , ua + ul )  | ( move 3 , ul / 4 ; ( move ua , ul ; v0 = 0 ) )  
[4604] ( move ul / 2 , ua ; move 4 , ua - ul )  
[4605] ( move ua - 4 , ua * ua ; move 4 , ul )  
[4606] ( move ul - 2 , ul / 3 ; move ua , ul )  
[4607] ( move ua , ul ; move ul - 4 , ua - 4 )  
[4608] ( move ul , ul - 4 ; move 3 , ua * ua )  
[4609] ( move ul - ua , ul ; move ua / 4 , 2 )  | ( pen 4 ; move 3 / 2 , 0 ; move 4 + ul , 2 - ul )  
[4610] ( move ul / ua , 3 ; move ua + 4 , ul )  
[4611] ( move 3 / 4 , ua ; move ua , ua - ul )  
[4612] ( move ul , 4 * 3 ; move ua - ul , ul )  
[4613] ( move ul - 4 , ul ; move ua , ul - 4 )  
[4614] ( move ul , ua * ua ; move 3 , 4 / ua )  
[4615] ( move ua + ul , ul / 4 ; move 3 , ul )  
[4616] ( move ul , 3 / 2 ; move ua , ul / ua )  | ( move ul , 3 / 2 ; move ua , ul / ua ; pen 4 )  
[4617] ( move ul , ul - 3 ; move 3 , ul / ua )  
[4618] ( move ul / 2 , ul ; move 4 + ul , ul )  | ( move 4 / ua , ul ; move ul , ua + ul ; move 4 , ua )  
[4619] ( move 2 , ul / ua ; move ul - 4 , ul )  
[4620] ( move ua , ul / 4 ; move ua + ul , 4 )  
[4621] ( move ua - ul , ul ; move ul / 2 , 4 )  | ( move ua - ul , ul ; move ul / 2 , 4 + 2 )  
[4622] ( move ul , ul / 4 ; move ua , 3 + ul )  
[4623] ( move 3 - ua , ul / 4 ; move ua , ul )  | ( move 3 - ua , ul / 4 ; move ua , ua + ul )  
[4624] ( move ua , ul - 3 ; move ul , ua / 4 )  | ( pen ua ; move ua , ua - 2 ; move ul , ua / 4 )  
[4625] ( move 2 , ul / ua ; move 4 - ul , ul )  | ( move 2 , ul / ua ; v0 = 4 ; move 3 , ul )  | ( move 2 , ul / ua ; move 3 , 3 - 2 ; pen ua - 4 )  
[4626] ( move 2 , ul ; move ul - 4 , ul / ua )  
[4627] ( move ua , ul / ua ; move 4 + ul , 4 )  
[4628] ( move 4 , ua - ul ; move 3 / ua , ul )  | ( move 4 , ul - 2 ; pen ua ; move 3 / ua , ua + ul )  
[4629] ( move 2 , 2 ; move ul , 2 ; move 3 , 3 )  
[4630] ( move ul - 4 , ua / 3 ; move ua , ul )  
[4631] ( move ua - ul , 4 ; move 4 - ul , ul )  
[4632] ( move ul + ul , ul / 4 ; move 2 , ul )  
[4633] ( move 4 - ul , ul ; move ua , ul / 2 )  | ( move 4 - ul , ul ; move ua , ul / 2 ; pen 4 )  
[4634] ( move ul , 4 ; move ua + ul , ul / 3 )  
[4635] ( move 2 , 4 / ua ; move ua , ul / ua )  
[4636] ( move ul + ul , 3 ; move ua , ul / 4 )  | ( move 2 , 2 + ul ; move ua , ul / 4 ; pen ua )  
[4637] ( move ua , ul / 4 ; move ul , ul - 2 )  | ( move ua , ul / 4 ; move 0 , ua + 2 ; move ul , 3 )  | ( move ua , ul / 4 ; ( pen ul ; move ul , ua - ul ) )  | ( ( move 3 * 2 , ul / 4 ; move ul , ua - ul ) ; pen v0 )  
[4638] ( move ul , ul / 3 ; move ul - ua , 3 )  
[4639] ( move 3 , 0 ; move 3 , ul ; move 2 , 4 )  
[4640] ( move ua , 4 * 4 ; move ul , ul - ua )  | ( move ua , 4 * 4 ; v0 = 2 ; move ul , ul )  | ( move ua , 4 * 4 ; ( pen 0 ; pen 2 ) ; move ul , ul )  
[4641] ( move ul - ua , ul ; move 4 , 3 / ua )  
[4642] ( move 2 , 2 ; move 4 , ul ; move 4 , 0 )  
[4643] ( move 3 , ul / ua ; move 4 + ul , ul )  | ( ( move 3 , ul / ua ; pen ul ) ; move 4 + ul , ul )  
[4644] ( move 4 , ul ; move ul - ua , 3 / ua )  
[4645] ( move 4 - ua , ul / ua ; move ua , 4 )  
[4646] ( move ua , ul - 4 ; move 3 / ua , ul )  
[4647] ( move ul , ua - 3 ; move 4 , ul / ua )  
[4648] ( move 3 , ul / ua ; move 4 , ul - ua )  | ( move ua / 2 , ul / ua ; move 4 , ul )  | ( move 3 , ul / ua ; move 4 , ul ; v0 = 4 )  
[4649] ( move 4 + ul , ul - 4 ; move ul , ul )  | ( move 4 + ul , ul - 4 ; v0 = ul ; move ul , ul )  
[4650] ( move 3 + ul , ul ; move 4 , ul / ua )  | ( move 4 , ua - 2 ; move 0 - 4 , ua + 3 )  
[4651] ( move ul - 4 , 2 / ua ; move ul , ul )  | ( move ul - 4 , 2 / ua ; pen 4 ; move ul , ul )  
[4652] ( move 3 , ul ; move ua / 4 , ua - ul )  
[4653] ( move ul , ul / 2 ; move 4 + ul , ul )  
[4654] ( move 3 , 2 ; move 2 , 2 ; move ua , 4 )  
[4655] ( move 4 - ul , ul / ua ; move 3 , ul )  
[4656] ( move 4 , ul / ua ; move 4 + ul , ul )  
[4657] ( move ua , ul - 3 ; move ul , ul / 4 )  | ( move ua , ul - 3 ; move ul / 4 , 0 ; move ul , ul / 4 )  
[4658] ( move ul + ul , ul ; move 3 , ul / 4 )  
[4659] ( move ul , ul + ul ; move 4 , ua / 4 )  
[4660] ( move 4 , 4 + ul ; move ul / ua , ul )  | ( move 4 , 4 + ul ; ( pen 3 ; pen ul ) ; move ul / ua , ul )  
[4661] ( move ua , ul / 3 ; move 3 / ua , ul )  | ( pen ua + ul ; move ua , ul / 3 ; move 2 / 3 , 2 )  
[4662] ( move ul / ua , ul ; move 4 + ul , 4 )  | ( move 0 , 4 ; move ul , 4 ; move 4 , ul / ua )  | ( move 2 / ua , ul ; move ua - ul , 3 + ul ; v0 = 2 )  
[4663] ( move ua , ul / 2 ; move ul , ul / 3 )  
[4664] ( move 3 , ul / 2 ; move ul , ul / ua )  
[4665] ( move 4 + ul , ul / ua ; move ul , 4 )  
[4666] ( move ua , ul ; move ul - 3 , ul / 4 )  | ( move ua , ul ; ( v0 = ua + ua ; move 2 , 4 * 4 ) )  
[4667] ( move ua , ul / 2 ; move 4 / ua , ul )  
[4668] ( move ul , ua - ul ; move 4 , ua / 4 )  
[4669] ( move 3 , ul ; move ul + ul , ul / 4 )  | ( ( pen ua ; move 3 , ul ) ; move 2 , ul / 4 )  
[4670] ( move 4 , ul ; move 4 + ul , ul / ua )  
[4671] ( move ul , 4 / ua ; move 4 , ul - ua )  
[4672] ( move ul , 2 ; move 3 , 2 ; move 4 , 2 )  
[4673] ( move ua , 2 / ua ; move ul , ul / 4 )  
[4674] ( move ul , ul / ua ; move 4 + ul , 4 )  
[4675] ( move ua , ul / 4 ; move ul / ua , 2 )  | ( move ul / 4 , 0 ; move ul - ua , ul / 4 ; move ul , 3 )  
[4676] ( move ul , ul - 4 ; move ua , ua / 4 )  
[4677] ( move 4 , ua - ul ; move ul / 3 , ul )  | ( pen ua ; move 4 , ul - 2 ; move ul / 3 , ul )  | ( move 4 , ua - ul ; move ul / 4 , ul ; v0 = ua - ul )  
[4678] ( move ul / 4 , ul ; move 4 , ua + ul )  | ( pen 4 ; move ul / ua , ua + ul ; move 4 , ul )  | ( move ul / 4 , ul - ua ; move ua - 2 , ul - ua )  
[4679] ( move ua - ul , ul / 3 ; move ul , 4 )  
[4680] ( move 4 , 0 ; move 3 , ul ; move 4 , 2 )  
[4681] ( move 4 + ul , ul / 4 ; move ul , ul )  | ( move 4 , ul / 4 ; move ul , 0 ; move ul , ul )  | ( ( move 2 , ul / 4 ; move 3 , 0 ) ; move ul , ul )  
[4682] ( move 4 , 4 ; move 0 , 3 ; move ul , 3 )  | ( move 4 , 4 ; move 0 , 0 ; move ul , 3 * 2 )  | ( v0 = 2 + 2 ; move v0 , v0 ; move ul , v0 + 2 )  | ( pen ua + ul ; ( pen ua ; move 4 , 4 ) ; move ul , 3 * 2 )  
[4683] ( move 3 , ul / ua ; move ul , 4 / ua )  
[4684] ( move 4 , ul / ua ; move ua , ua / 4 )  
[4685] ( move 4 , ul / ua ; move ul / 2 , ul )  
[4686] ( move ua , ua / 4 ; move ul / 3 , ul )  | ( move ul , 4 + ul ; move 0 , 0 ; move 0 - ua , 3 * 2 )  
[4687] ( move 3 , 4 ; move 3 , 2 ; move 2 , ul )  
[4688] ( move ul / 3 , ua / 4 ; move ua , ul )  | ( pen 4 ; ( move 2 / 4 , ul ; move ua , ua / 4 ) )  
[4689] ( move ua , ul / 4 ; move ua , ua / 4 )  
[4690] ( move 4 , ul - 4 ; move ul , ul / ua )  
[4691] ( move ua - ul , ul / 4 ; move ul , 4 )  
[4692] ( move ul , ul / 2 ; move 4 , ul / ua )  
[4693] ( move 4 , 2 ; move 3 , ua ; move 3 , 4 )  | ( move 4 + 3 , 2 ; pen 3 + ul ; move 3 , 4 )  | ( ( move 4 + 3 , ul + ul ; move ul , 4 ) ; move 2 , 0 )  
[4694] ( move 4 / ua , ul / 4 ; move ua , ul )  
[4695] ( move 2 , ua ; move 4 , 4 ; move 3 , 3 )  
[4696] ( move 4 , ua / 4 ; move ul , ul / ua )  
[4697] ( move 3 , 4 ; move ul , 2 ; move 3 , 4 )  
[4698] ( move ul , 2 ; move 4 , 4 ; move 3 , 3 )  
[4699] ( move 4 , ul / 4 ; move ul , ul / ua )  
[4700] ( move 4 , 4 ; move 0 , ul ; move 4 , 4 )  | ( move 4 , 4 ; move ul , 3 + 2 ; move 3 , ua )  
[4701] ( move 3 , 4 ; move 3 , 3 ; move 3 , ul )  
[4702] ( move ul , ul / ua ; move 4 , ul / 4 )  
[4703] ( move 3 - ua , 0 ; move 2 , 2 ; pen 0 )  | ( move 3 - ua , 0 - ua ; move 2 , 3 - ul )  
[4704] ( move 2 , ul ; move 2 , 4 ; move 4 , 4 )  
[4705] ( move 4 , 4 ; move ua , 2 ; move 3 , 4 )  
[4706] ( move 3 , 4 ; move ua , 3 ; move 3 , 4 )  
[4707] ( move 4 , 0 ; pen 0 ; move ua , 2 + 2 )  | ( ( move 4 , ua ; pen ul - ua ) ; move ua , 4 )  
[4708] ( v0 = 3 + 2 ; move 4 , ua / v0 )  | ( v0 = ua / 2 ; move 4 , 4 / v0 )  
[4709] ( move 3 , 3 ; pen 0 ; move 3 , 0 - ua )  
[4710] ( move 3 , 0 ; pen 0 ; move ul , 4 + 2 )  
[4711] ( move 0 , 3 * 3 ; pen 0 ; move ua , 2 )  
[4712] ( move 4 , 4 ; move 4 , 4 ; move ua , 4 )  
[4713] ( v0 = 2 / 3 ; move ua , 4 * v0 )  | ( v0 = 4 / 3 ; pen 2 ; move ua , v0 + v0 )  | ( pen ul / ua ; v0 = ul - 4 ; move ua , v0 / ua )  
[4714] ( move 2 , ua + 2 ; move 3 , 2 ; pen 2 )  | ( move 2 , 2 ; move 3 , 2 - ua ; pen 4 + ul )  | ( move ul , ul + ul ; move ul , ua ; move 3 , 2 )  | ( ( v0 = 2 ; move v0 , v0 ) ; move 3 , v0 )  | ( pen ua ; move 3 - ul , ul + ul ; move 3 , 3 - ul )  | ( v0 = ul + ul ; move v0 , v0 ; move 3 , v0 )  | ( v0 = 2 ; move v0 , v0 ; move v0 + ul , v0 )  | ( v0 = 2 ; move v0 , v0 ; move ul + v0 , v0 )  | ( v0 = 3 - ul ; move v0 , ul + ul ; move 3 , v0 )  | ( move 2 , 2 ; pen ua ; ( move 3 , ul + ul ; v0 = 3 ) )  
[4715] ( move 0 , 4 + ul ; pen 0 ; move 4 , 2 )  | ( move 0 , 2 ; pen 0 ; move 4 , 4 + ul )  | ( move 0 , 3 - ua ; ( pen ul - 4 ; move 4 , 3 + ul ) )  
[4716] ( move 3 , 2 ; move 2 , 0 - 4 ; pen ua )  
[4717] ( move 2 , 4 ; pen 0 ; move 3 , ua + 3 )  
[4718] ( move 3 , 0 ; pen 0 ; move 3 , ua * 4 )  | ( move 3 , 0 ; pen ul / 3 ; move 3 , 0 )  
[4719] ( move ul , 3 ; pen 0 ; move 3 , 3 + 2 )  
[4720] ( move 0 , 3 ; pen 0 ; move 4 , ua * 4 )  | ( move 0 , 2 - ul ; pen 0 ; move 4 , 4 - 2 )  | ( move ul / ua , 2 ; pen 0 ; move 3 + ul , ul )  | ( move 0 , 3 - ul ; pen ul - ua ; move 4 , ul )  | ( ( move 0 , 4 ; pen 0 ; move 4 , ua - ul ) ; v0 = ul )  
[4721] ( v0 = 4 / ua ; move 4 , v0 - 4 )  | ( v0 = 2 - ua ; move v0 , ul / v0 )  | ( ( move 0 , ul - 3 ; move 4 , ua * ua ) ; pen ul )  
[4722] ( move ul , 2 ; pen 0 ; move 4 + 3 , 3 )  
[4723] ( move 4 , 0 ; pen 0 ; move ul , 4 / 2 )  
[4724] ( move 3 , 0 ; pen 0 ; move 4 / 3 , ul )  
[4725] ( move 2 , 3 / 2 ; move ua , 2 ; pen 2 )  
[4726] ( move 2 , 2 ; ( pen 0 ; move ua , 2 ) )  
[4727] ( move 4 , 0 ; pen 4 ; move 3 - ua , 2 )  | ( move 2 , 0 ; move ul + ul , 0 ; move 3 - ua , 2 )  
[4728] ( move 3 , 3 ; pen 0 ; move 3 , 4 - ua )  | ( move 3 , 3 ; pen ul - 3 ; move 3 , 4 )  
[4729] ( move 3 , 3 ; pen 3 ; move ua , 3 + 3 )  | ( ( move 0 , 3 ; move 3 , ua ) ; move ua , 3 * 2 )  
[4730] ( move ua , 0 ; pen 3 ; move 2 , 4 / 3 )  
[4731] ( move 4 , 0 ; pen 2 / 4 ; move ua , 2 )  
[4732] ( move 4 , 4 + 3 ; pen 0 ; move 4 , ua )  
[4733] ( move 3 , ua - 3 ; pen 2 ; move 2 , 4 )  
[4734] ( move 2 - 3 , 3 ; pen ul ; move 3 , 3 )  | ( v0 = 3 ; move 0 - ul , v0 ; move v0 , v0 )  
[4735] ( pen 2 ; move 3 * 2 , 3 ; move 3 , ul )  | ( move ul , ul ; move 4 + 2 , 2 ; move 3 , ul )  
[4736] ( move ul , 4 ; ( pen 0 ; move 3 , 0 ) )  
[4737] ( move ul , 0 ; ( pen 0 ; move 4 , 3 ) )  | ( move ul , ua ; ( move 0 , ul ; pen 0 ; move 4 , 2 - ua ) )  
[4738] ( move 3 , 0 ; pen ul - 3 ; move 4 , 4 )  | ( move ua - 3 , 0 ; ( pen 4 - ul ; pen 0 ; move 4 , 4 ) )  
[4739] ( move 4 + 2 , 3 ; pen 4 ; move 2 , ul )  | ( move 2 , 3 ; move 4 , ua ; move 2 , ul )  | ( move 2 , ua + 3 ; move 4 , ua ; move 2 , ul )  | ( move ul , ua + 3 ; move 3 + 2 , 0 ; move 2 , ul )  
[4740] ( move 3 , 2 ; ( pen 0 ; move 2 , ul ) )  
[4741] ( move 3 , 4 ; pen 0 ; move 4 - ul , 4 )  
[4742] ( pen 2 ; move ul , 3 * 3 ; move 4 , 2 )  
[4743] ( pen 4 ; move 3 + 2 , 3 ; move 4 , ul )  | ( move 4 + ul , 3 ; move 4 , ul ; v0 = ul )  | ( move 4 + ul , 3 ; pen ua * 3 ; move 2 * 2 , ul )  | ( ( move 4 + ul , 3 ; pen ul ; pen ul ) ; move 4 , ul )  
[4744] ( move ul , ua ; move 0 - ua , ua * ua )  
[4745] ( move ul , 0 ; move ua + ul , ua * ua )  | ( move ul , ua ; move ua + ul , ua * ua )  
[4746] ( move ul , 0 ; move ua + ul , ua - ul )  | ( move ul , ua ; move ua + ul , ua - ul )  | ( pen ul ; move 4 - 3 , ua * 4 ; move ua + ul , ul - 2 )  
[4747] ( move 0 - ul , ua ; move ua + ul , ul )  | ( move ul - 2 , 0 ; pen ul ; move ua + ul , ul )  | ( move 0 - ul , ua ; move ua + ul , ul ; pen ul - 2 )  
[4748] ( move 3 , ul ; pen 3 ; move 2 , 2 / 3 )  
[4749] ( move 4 , 0 ; pen 4 ; move 3 * 3 , ul )  | ( move 2 + 2 , ua ; pen 4 ; move 3 * 3 , ul )  | ( move 4 , ua ; move 3 * 3 , ua + ul ; pen 0 )  
[4750] ( move ul - ua , 0 ; move ua , ua - ul )  
[4751] ( move ul - ua , 0 ; move ua + ul , ul )  | ( move ul - ua , 0 ; move ua + ul , ul ; pen ua )  | ( move ul - ua , ua ; pen ul ; move ua + ul , ul )  | ( move ul - ua , 0 ; ( move ua , ul ; move ul , ua ) )  
[4752] ( move ua , 0 - ul ; move ua - ul , ul )  | ( move ua , ua - ul ; move ua - ul , ul )  
[4753] ( move ua - ul , 0 ; move ul - ua , ul )  | ( move ua - ul , ua ; move ul - ua , ul )  | ( ( move ua - ul , 0 ; v0 = ul ) ; move ul - ua , v0 )  
[4754] ( move ua - ul , 0 ; move ul , ua - ul )  | ( move ua - ul , ua + ua ; move ul , 0 - ul )  | ( v0 = ua - ul ; move v0 , ua ; move ul , v0 )  
[4755] ( move 0 - ua , ua * ua ; move ul , ul )  
[4756] ( move ua + 3 , 4 ; pen 3 ; move 4 , 4 )  
[4757] ( move 0 , ua * ua ; move ul - ua , ul )  | ( v0 = ua - ul ; move v0 , v0 * v0 )  | ( v0 = ul - ua ; move v0 , v0 * v0 )  | ( move 0 , ua * ua ; pen ul ; move 3 + 2 , ul )  | ( v0 = ua - ul ; pen ua ; move v0 , v0 * v0 )  | ( move 0 , ua * ua ; move ul - 2 , ul ; move 2 - ua , 0 )  | ( pen 2 + ul ; v0 = ua - ul ; move v0 , v0 * v0 )  | ( v0 = ul - ua ; ( move v0 , v0 * v0 ; pen ul ) )  | ( ( v0 = ua - ul ; pen ul ) ; move v0 , v0 * v0 )  
[4758] ( ( move 4 , ua ; pen 0 ) ; move 4 , 2 )  
[4759] ( move ua + 4 , 4 ; move 4 , 3 ; pen 3 )  | ( pen ua + 3 ; ( move ua + 4 , 4 ; move 4 , 3 ) )  
[4760] ( pen 4 ; move 4 + 3 , 3 ; move 3 , ul )  | ( move 4 + 3 , 3 ; ( move 3 , ul ; move 0 , 0 ) )  
[4761] ( move ua + ul , ua ; move 2 , ua - ul )  | ( move ua , 0 ; move ul , ua ; move 3 - ul , 0 - ul )  
[4762] ( move 2 - ua , ua ; move ua , ua * ua )  
[4763] ( move ua + 2 , ua ; move ul - ua , ul )  | ( move ua + 2 , ua ; v0 = ul - ua ; move v0 , ul )  
[4764] ( move ua + 2 , ua ; move ul , ua - ul )  | ( move ua + 2 , 0 ; move ul - 2 , ua + 2 )  
[4765] ( move ua , ua + 2 ; move ul - ua , ul )  
[4766] ( move ua - ul , ua + ul ; move ua , 2 )  | ( ( move ua - ul , ul ; move ua , 2 ) ; pen 2 )  | ( move ua - ul , ul ; v0 = ua ; move v0 , 2 - ua )  
[4767] ( move ua + ul , ua ; move 2 - ua , ul )  
[4768] ( move ua + 2 , ua - ul ; move ul , ul )  
[4769] ( move 3 , ul ; pen 3 ; move 4 * 2 , 4 )  | ( move 3 , ul ; v0 = 4 ; move v0 + v0 , v0 )  | ( move 2 + ul , ul ; move ul + ul , 4 ; move 4 + 2 , 0 )  
[4770] ( move ul - ua , ul ; move ua + 2 , ul )  | ( ( move ul - ua , ul ; v0 = ua + 2 ) ; move v0 , ul )  
[4771] ( move ul + ul , ua ; move 2 , ua * ua )  
[4772] ( move ua + ul , ua ; move ua - ul , 3 )  
[4773] ( move ul , ua * ua ; move ua + 2 , ul )  
[4774] ( move ul , ul ; move ua + ul , ua - 2 )  | ( move ul , ul - ua ; move ua + ul , 2 - 4 )  | ( move ul , ua + ul ; move ua + ul , ul - 3 )  | ( move ul , ul ; move ua , ul - 3 ; move ul , 0 )  | ( move ul , ul ; pen 2 ; move ua + ul , ul - 3 )  | ( move ul , ul ; v0 = ua + ul ; move v0 , v0 - 3 )  
[4775] ( move ua , ua * ua ; move 2 - ua , ul )  
[4776] ( move ua - ul , 2 ; move ua , ua * ua )  
[4777] ( move ul - 2 , ua ; move ua , ua * ua )  
[4778] ( move ul - ua , ua ; move ua - 2 , ul )  
[4779] ( move 4 + 4 , 2 ; move 4 , 4 ; pen ul )  | ( v0 = 4 ; move v0 + v0 , 2 ; move v0 , v0 )  
[4780] ( move ua - 2 , ua * ua ; move ua , ul )  
[4781] ( move ul , ua ; move ua - 2 , ua - ul )  
[4782] ( move ua , 2 ; move ua - ul , ul - ua )  | ( move ua , 3 - ul ; move ua - ul , ul )  | ( move ua , 2 ; pen 4 ; move ua - ul , ul )  | ( pen 2 ; move ua , ul + ul ; move ua - ul , ul )  | ( move ua , 2 ; move 0 , 4 ; move ua - ul , ul - 4 )  | ( move ua , 2 ; ( move 0 , ua ; move ua - ul , ul ) )  | ( pen ul ; move ua , 2 - ua ; move ua - ul , 4 - 3 )  | ( move ua , 4 - 2 ; v0 = ul ; move ua - ul , v0 )  
[4783] ( move ua + ul , ua ; move ua + ul , 4 )  | ( move ua + ul , ua ; move ua + ul , 3 + ul )  | ( pen ua ; move ua + ul , 0 ; move ua + ul , 4 )  | ( v0 = ua + ul ; move v0 , ua ; move v0 , 4 )  | ( v0 = ua + ul ; move v0 , 0 ; move v0 , 4 * v0 )  
[4784] ( move ua + ul , 2 ; move ua - ul , ul )  
[4785] ( move 3 , 4 ; move 4 + 3 , ul ; pen 4 )  
[4786] ( move ul - ua , ua ; move 2 , ul + ul )  | ( move ul - ua , 0 ; pen 3 ; move 2 , 2 )  | ( move ul - ua , ua + ua ; v0 = 3 - ul ; move 2 , v0 )  
[4787] ( move ua , ul / ua ; move ua , ua + 2 )  | ( v0 = 0 - ul ; move ua , v0 ; move ua , v0 + v0 )  
[4788] ( pen ul ; move 4 , 2 ; move 3 * 3 , 4 )  
[4789] ( move ua + ul , ul ; move 2 , ua * ua )  
[4790] ( move ua + ul , ul ; move ua - ul , 2 )  | ( move ua + ul , ul ; move ua - ul , 2 ; move 0 , 3 )  
[4791] ( move ua , ua ; move ua + ul , ua - 4 )  
[4792] ( move 3 , ua - ul ; move ua , ul + ul )  | ( ( move 3 , ua - ul ; move ua , 2 ) ; pen ul )  
[4793] ( move ua , ua ; move ul - ua , 2 / ua )  
[4794] ( move 4 , ua ; move ua + ul , ua - ul )  | ( move 4 , 0 ; move ua , ua - ul ; move ul , 0 )  | ( move 4 , 0 ; v0 = ua + ul ; move v0 , v0 - 2 )  | ( move 4 , ua ; move 0 , ul - 4 ; move ua + ul , 2 - ua )  
[4795] ( move ua + ul , ua - 3 ; move ul , ul )  | ( pen ua + 4 ; move ua + ul , ul - 4 ; move ul , ul )  
[4796] ( move ul - ua , ul ; move 2 , ul + ul )  | ( pen 2 ; move ul - ua , ul ; move ul + ul , 4 / 2 )  | ( move ul - ua , ua + ul ; pen ua + 4 ; move 3 - ul , 2 )  
[4797] ( move 3 , ua + ul ; move ua - ul , ul )  | ( move ul - ua , 2 ; move ul - 4 , ua - ul )  | ( move 3 , ua + ul ; pen ua + 4 ; move ua - ul , ua + ul )  | ( ( pen ua + ul ; move ua / 2 , ul ) ; move ua - ul , ul )  
[4798] ( move ua + 3 , ua - ul ; move ul , ul )  | ( move ua + 3 , ua - ul ; move ul , ul ; pen 0 )  
[4799] ( move ul , ua ; move ua + 4 , ua - ul )  | ( move ul , 0 ; move ua , ul - 2 ; move 4 , ua )  
[4800] ( move ua - ul , ul ; move ua - 2 , ul )  
[4801] ( move ua - 3 , ua ; move ua - ul , ul )  
[4802] ( move 3 - ua , ua ; move ul - ua , ul )  
[4803] ( move ua , ua * ua ; move ua - ul , 3 )  | ( move ua , ua * ua ; pen ul ; move 4 , 3 )  | ( move ua , ua * ua ; move 4 , ua + 3 ; v0 = ul - ua )  
[4804] ( move ua , ul - 2 ; move ul , ua * ua )  
[4805] ( move ua , 0 ; move 2 , 2 ; move ul , 2 )  | ( move ua , ua ; move ul + ul , 2 - ua ; move ul , 2 )  
[4806] ( move ua - 3 , ul + ul ; move ua , ul )  | ( move ua - 3 , 2 ; pen ul ; move ua , ul )  
[4807] ( move ua + 3 , ul ; move ul - ua , ul )  | ( move ua + 3 , ua + ul ; pen ua ; move ul - ua , ua + ul )  
[4808] ( move ua - ul , 2 ; move ul - ua , ul )  
[4809] ( move ul - ua , 0 ; move ul / ua , ul )  | ( move ul / ua , 0 - ul ; move ua - ul , ul )  | ( move ul / 2 , 3 - 4 ; ( move ua - ul , ul ; pen 4 ) )  | ( pen ul ; move ul - ua , ua * 2 ; move ul / ua , 2 - ul )  
[4810] ( move ua - ul , ua ; move 3 , ua - ul )  
[4811] ( move 4 + ul , ua ; move ua , ua * ua )  | ( pen ua ; move 4 + ul , ua ; move ua , ua * ua )  
[4812] ( move ua , 4 + ul ; move ua + ul , ul )  | ( move ul , 3 ; move ua , 2 ; move ua + ul , ul )  | ( move ua , 4 + ul ; move ul , ul ; move ua , ua )  | ( move 0 , ul ; move ua , ua + 4 ; move ua + ul , ul )  | ( ( move ua , 4 + ul ; move ua + ul , ul ) ; pen ua )  
[4813] ( move ul , 2 ; move ul - ua , ua - ul )  | ( move 3 , ul ; move ua - 4 , ua ; move 0 - ul , ul )  | ( ( move ul , 2 ; pen ua * 2 ) ; move ul - ua , ua - ul )  
[4814] ( move ua + ul , ul ; move ua + ul , 4 )  
[4815] ( move ua - ul , ua ; move ua + ul , 4 )  | ( move ua - ul , 0 ; move 0 , 0 ; move ua + ul , 3 + ul )  
[4816] ( move 2 , ua * ua ; move ul + ul , ul )  | ( move ul + ul , ua * ua ; move 2 , ul )  | ( move 2 , ua * ua ; move 2 , ul ; move 2 - ul , 3 )  
[4817] ( move ua - ul , ua ; move ua - ul , 3 )  
[4818] ( move 3 - ua , ul ; move ua + ul , ul )  
[4819] ( move ul - ua , 2 ; move ua - ul , ul )  
[4820] ( move ul - ua , 3 ; move ua + ul , ul )  
[4821] ( move ua - 4 , ua ; move ua + ul , ul )  | ( move ua - 4 , ua ; move ul , ul ; move ua , ua )  
[4822] ( move ua + 3 , ul ; move ul , ua * ua )  
[4823] ( move ul - ua , ua ; move ul , ul - 2 )  | ( move ul - ua , ua ; move ul , ua - ul )  | ( move ul - ua , ua * 4 ; move ul , ua - ul )  | ( move 3 , ua / 2 ; move 2 , 0 ; move ul , ua + 2 )  | ( move ul / 2 , ua ; move ul - ua , 0 ; move ul , ua - ul )  
[4824] ( move ua - ul , ua - ul ; move ul , 2 )  
[4825] ( move ua + ul , ul ; move 3 - ua , ul )  
[4826] ( move ul , ul / ua ; move ua + 2 , ul )  | ( ( pen 2 ; move ul , ul / ua ) ; move ua + 2 , ul )  
[4827] ( move ul , ua - 3 ; move ul - ua , ul )  | ( v0 = ul ; move v0 , ua - 3 ; move v0 - ua , ul )  
[4828] ( move ua , 0 ; move 3 , 2 ; move ua , 3 )  
[4829] ( move ua , ua * ua ; move ul - 3 , ul )  
[4830] ( move ua , ua ; move ua + ul , ua / 4 )  | ( move ua , ua ; move ua + ul , ua / 4 ; pen 0 )  
[4831] ( move ua - ul , ul ; move ul - ua , 3 )  | ( move 4 + ul , ul ; move ul - ua , 3 ; move 0 , 4 / ua )  
[4832] ( move ua , 4 + ul ; move ul , ua * ua )  | ( ( move ua , 3 + 2 ; v0 = ua ) ; move ul , ua * ua )  
[4833] ( move ua - ul , ul ; move ua , 4 + ul )  
[4834] ( move ua - 3 , ul ; move ul , ua * ua )  | ( move ua - 3 , ua + ul ; move ul , ua * ua )  
[4835] ( move ul - 3 , ul ; move ua , ua - ul )  | ( move 0 - ua , ua + ua ; move 2 , 2 - ul )  | ( move 0 - ua , 0 ; v0 = ul / 3 ; move 2 , ul )  
[4836] ( move ua + ul , ua * ua ; move 4 , ul )  
[4837] ( move ua + ul , 2 / ua ; move ul , ul )  
[4838] ( move ua , ua / 3 ; move ua , ul + ul )  
[4839] ( move ul - ua , ua - 3 ; move ul , ul )  
[4840] ( move ua + ul , 4 + ul ; move ul , ul )  | ( move ua + ul , 3 + 2 ; move ul , ul - ua )  | ( ( move ua + ul , 4 + ul ; move ul , ul ) ; pen ua - 3 )  
[4841] ( move ua , ul / ua ; move ua - ul , 2 )  | ( move ua , ul / ua ; move 0 , 3 ; move ua - ul , ua - ul )  
[4842] ( move 3 - ul , ua * ua ; move ua , ul )  | ( move 2 , ua * ua ; v0 = 0 - ul ; move ua , ua + ul )  
[4843] ( move ul , 4 ; move ua + ul , ua * ua )  
[4844] ( move ul - ua , 3 ; move ul , ua - ul )  | ( move ul , ua - ul ; move ua - ul , 4 )  
[4845] ( move ua + ul , ul / ua ; move 2 , ul )  
[4846] ( move ua , ul / ua ; move 2 , ua - ul )  
[4847] ( move ua + ul , ul ; move ul , 2 / ua )  | ( pen ul ; move ua + ul , ul ; move ul , ul / 3 )  | ( move ua + ul , ul ; move ul , ul / 4 ; v0 = ul )  
[4848] ( move ul , ua * ua ; move ua - ul , 3 )  | ( pen ul ; move ul , ua * ua ; move ua - ul , 3 )  
[4849] ( move ua , ul ; move ua - 4 , ua - ul )  
[4850] ( move ua , 4 + ul ; move ua - ul , ul )  | ( move ua , 4 + ul ; pen 4 ; move ua - ul , ul )  
[4851] ( move ul , ua ; move 4 + ul , ua * ua )  | ( move ul , ua * 4 ; move ua - ul , ua * ua )  
[4852] ( move 3 , ul + ul ; move ul , ua - ul )  | ( v0 = 2 ; move ua / v0 , v0 ; move ul , 0 - ul )  | ( move 3 , 2 ; ( v0 = 2 ; move v0 - ul , 0 - ul ) )  
[4853] ( move ul - ua , ua ; move ua , 3 / ua )  | ( move ul - ua , ua * 3 ; pen 2 ; move ua , 3 / ua )  | ( move ul - ua , ua ; move ua , 3 / ua ; v0 = 3 - ua )  
[4854] ( move ua , ua * ua ; move ul - ua , 4 )  
[4855] ( move ul , ul ; move ua / 2 , ua + ul )  | ( move ul , ul ; move ua - 3 , ul ; pen 3 )  | ( pen ul ; move ul , ul ; move ua / 2 , ul )  | ( pen ua + 3 ; move ul , ul ; move ua / 2 , ul )  | ( ( move ul , ul ; move ua - 3 , ul ) ; v0 = ua + ua )  
[4856] ( move ul / 2 , ua ; move ua , ua - ul )  | ( move 3 / ua , 0 ; v0 = ul ; move ua , ua - v0 )  
[4857] ( move ul , ul ; move ua + ul , 2 / ua )  | ( move ul , ul ; pen 2 ; move ua + ul , 2 / ua )  | ( move ul , ul ; v0 = ul ; move ua + ul , v0 / 3 )  
[4858] ( move ua , ua * ua ; move 4 + ul , ul )  
[4859] ( move 4 , ua ; move ua - ul , ul + ul )  | ( move 4 , 0 ; pen ua + ul ; move ua - ul , ul + ul )  
[4860] ( move ul - ua , ul ; move 3 , ua - ul )  
[4861] ( move ua , ul - ua ; move ua - 4 , ul )  | ( move ua , 2 - ul ; pen 3 ; move ua - 4 , ul )  | ( move ua - 3 , ul ; move 3 , ua ; move ua - 4 , ul )  | ( move ua , ul ; ( move ua - 4 , ul ; v0 = 2 ) ; pen ua )  
[4862] ( move ul , 4 + ul ; move ua + ul , ul )  | ( move 0 , 4 ; move ul , ul ; move ua + ul , ul )  | ( move ul , 3 + 2 ; move 0 , 0 ; move ua + ul , ul )  | ( move 0 , ul ; ( move ul , 4 ; move ul , ul ) ; move ua , 0 )  | ( pen ua ; ( move ul , 3 + 2 ; move ul , ul ) ; move ua , ua )  
[4863] ( move ul , ul ; move ua + ul , 4 + ul )  | ( move ul , ul - ua ; move ua + ul , 4 + ul )  
[4864] ( move ua , ua - ul ; move 4 , ul + ul )  | ( move ua , 3 - 4 ; move 3 + ul , 2 ; move 0 , 3 )  | ( move ua , 2 - 3 ; v0 = 2 ; move v0 * v0 , v0 )  
[4865] ( move 3 , ua * ua ; move ul + ul , ul )  | ( move 2 + ul , ua * ua ; pen 2 ; move 2 , 2 - ul )  
[4866] ( move ul - ua , ua ; move 4 + ul , ul )  | ( move ul - ua , 0 ; move ul , ul ; move 4 , 0 )  | ( move ul - ua , ua ; move 3 + 2 , ul ; v0 = ul )  | ( move ul - ua , 0 ; ( move 4 + ul , ul ; pen ua ; pen 0 ) )  
[4867] ( move ul - ua , ul - 2 ; move ul , ul )  | ( move ul - ua , 3 - 4 ; move ua / 4 , ul )  
[4868] ( move ua , ul ; move ul - ua , 4 + ul )  | ( move ua , ul - ua ; move ul - ua , 4 + ul ; pen 0 )  | ( pen 3 ; move ua , ul - ua ; move ul - ua , 4 + ul )  
[4869] ( move ul + ul , ua * ua ; move ua , 4 )  | ( move 2 , ua * ua ; move ua , 4 ; v0 = ua )  | ( move 2 , ua * ua ; ( move ua - 4 , 4 ; move 4 , 0 ) )  
[4870] ( move ul , 4 + ul ; move ua , ua * ua )  
[4871] ( move ua - ul , ua ; move ua - ul , 4 )  
[4872] ( move ua + 4 , ul ; move ul - ua , ul )  
[4873] ( move ua + ul , ul ; move 4 , ua - ul )  | ( move 4 , ua / 2 ; move ua + ul , ul ; move 0 , 0 )  
[4874] ( move ua , ua * ua ; move ul - 4 , ul )  | ( move ua , ua * ua ; move ul - 4 , ul - ua ; pen ul )  
[4875] ( move 2 , ul / ua ; move ul + ul , ul )  | ( move 2 , ul / ua ; move 2 , ul ; move 0 , 3 )  | ( move 2 , ul / ua ; ( move 2 , ul ; v0 = ua ) )  
[4876] ( move ul - ua , ul ; move ul , 2 / ua )  | ( move ul - ua , ul ; move ul , ul / 3 )  
[4877] ( move ul , 4 + ul ; move ua - ul , ul )  
[4878] ( move ul , ul ; move ua + ul , ul / 2 )  | ( move ul , ua + ul ; move ua + ul , ul / 2 )  
[4879] ( move ua , ul + ul ; move 3 , ul / ua )  | ( ( move ua , 2 ; move 3 , ul / ua ) ; move ul , 4 )  
[4880] ( move ul , ul / 2 ; move ua + ul , ul )  
[4881] ( move ua , ua / 3 ; move ua - ul , ul )  
[4882] ( move ul , ul ; move ul - ua , 2 / ua )  
[4883] ( move ul , ul ; move ul - ua , ul - 3 )  | ( v0 = 2 - 3 ; move ua + v0 , v0 ; move ul , v0 )  | ( v0 = ua - ul ; ( move v0 , v0 ; move ul , v0 ) )  
[4884] ( move ua , ul ; move ul - 4 , ua * ua )  
[4885] ( move ul - ua , 4 ; move ul + ul , ul )  | ( move ul - ua , 4 ; move 2 , ul ; v0 = ul )  | ( move ul - ua , 4 ; v0 = 3 - ul ; move 2 , v0 - ul )  
[4886] ( move ua - ul , ul ; move 4 + ul , ul )  
[4887] ( move 2 , ul ; move ua - ul , ul / ua )  
[4888] ( move ua , 0 ; move 2 , 4 ; move 2 , ul )  | ( move ua , ua + ua ; move 2 , 4 ; move ul + ul , ua + ul )  
[4889] ( move 2 , ul / ua ; move ua - ul , ul )  
[4890] ( move ua , ul / 2 ; move ua - ul , ul )  | ( move ua , 2 / 4 ; pen ua ; move ua - ul , ul )  
[4891] ( move ua , ua / 3 ; move ul - ua , ul )  
[4892] ( move ul , 0 ; move 0 , 4 ; move ua , 4 )  | ( move ul , ua ; pen ul ; move ua , 4 + 4 )  | ( move ul , ua ; move ua , 4 + 4 ; v0 = 4 + 2 )  
[4893] ( move 2 , ua ; move ua , 2 ; move 3 , 2 )  
[4894] ( move 3 / ua , ul ; move ua , ul + ul )  | ( move 3 / ua , ul ; pen ul ; move ua , ua + 2 )  | ( move 2 / 4 , ul ; move 3 * 2 , ua + 2 ; v0 = 3 )  
[4895] ( move ua + ul , ua ; move ul / ua , 4 )  | ( move ua + ul , 0 ; move ul / ua , ua + 4 )  
[4896] ( move ua , ul ; move ul - ua , 3 / ua )  | ( move ua , ul ; pen ul + ul ; move ul - ua , ul / 2 )  | ( ( move ua , ul ; v0 = ul ) ; move v0 - ua , 3 / ua )  
[4897] ( move ua - ul , ul / 2 ; move ua , ul )  
[4898] ( move 2 , 0 ; move 2 , ul ; move 3 , ul )  
[4899] ( move 3 , ul / ua ; move ua + ul , ul )  
[4900] ( move ul , ul ; move ua - ul , 4 + ul )  | ( move ul , ul ; move ua - ul , 4 + ul ; move 0 , 0 )  
[4901] ( move ua - 4 , ul ; move ul + ul , ul )  | ( pen 4 ; ( pen 4 ; move ua - 4 , ul ) ; move 2 , ul )  | ( pen 2 ; move ua - 4 , ul ; ( v0 = ul ; move 2 , ul ) )  
[4902] ( move ul - ua , ua * ua ; move ul , 4 )  
[4903] ( move ua , 2 ; move 0 , 4 ; move 3 , ul )  
[4904] ( move 4 + ul , ul / ua ; move ua , ul )  
[4905] ( move ul - 4 , ua ; move ua , ul / ua )  
[4906] ( move ua - ul , ul ; move 3 , ul / ua )  
[4907] ( move ul , ua ; move ua + ul , ul / 4 )  
[4908] ( move ul - ua , ul / 3 ; move ua , ul )  
[4909] ( move ul , ul - 4 ; move ua - ul , ul )  
[4910] ( move 4 / ua , ul ; move ua + ul , ul )  
[4911] ( move ua , ul ; move 2 , 3 ; move 2 , 2 )  
[4912] ( move ul , ua - ul ; move ua , 4 / ua )  | ( move ul , ua - ul ; v0 = ua ; move v0 , 4 / v0 )  
[4913] ( move ua , ua / 4 ; move ul , ua - ul )  
[4914] ( move ul - 4 , ul ; move ul - ua , ul )  | ( move 0 - 3 , ul ; move ul - ua , ul ; pen ul )  
[4915] ( move ul / 3 , ul ; move ua , ua * ua )  | ( move 2 / ua , ua + ul ; move ua , ua * ua )  
[4916] ( move ul / 3 , ul ; move ua + ul , ul )  | ( move ua , ul + ul ; move ul , ua ; move ul / ua , ua * ua )  
[4917] ( move ul , ul / 3 ; move ua + ul , ul )  
[4918] ( move ul - 4 , ul ; move ua - ul , ul )  | ( ( move ul - 4 , ul ; move ua - ul , ul ) ; pen ua + ul )  
[4919] ( move ul , ul / ua ; move ua - 3 , ul )  
[4920] ( move ua , 0 ; move ua , 4 ; move 3 , 3 )  
[4921] ( move ua - ul , ua ; move ua / 4 , ul )  
[4922] ( move ul , ul ; move ul - ua , ul - 4 )  | ( move ul , ul ; move 4 + ul , ul / ua )  | ( ( pen 3 ; pen 3 ) ; move ul , ul ; move ul - ua , ul - 4 )  
[4923] ( move 2 , 0 ; move 2 , ul ; move ul , 4 )  
[4924] ( move 4 , ul / ua ; move ua , ua * ua )  
[4925] ( move ua + ul , ul / ua ; move 4 , ul )  | ( move ua + ul , ul / ua ; move ul , ul ; move 3 , 0 )  
[4926] ( move ua + ul , ua / 4 ; move ul , ul )  | ( move ua + ul , ua / 4 ; move ul , ul ; v0 = 0 )  
[4927] ( move ul - ua , ua / 4 ; move ua , ul )  
[4928] ( move ua + ul , ul ; move ul , 4 / ua )  | ( move ua + ul , ua + ul ; move ul , ul / 2 )  | ( move 4 + 3 , ul ; move ul , 4 / ua ; v0 = ul )  | ( move ua + ul , 2 - ul ; move ul , 4 + 3 ; move 0 , ul )  
[4929] ( move ua / 4 , ul + ul ; move ua , ul )  | ( move ua / 4 , ua + 2 ; move ua , 2 - ul )  | ( pen 2 ; ( move 3 / 2 , 2 ; move ua , ul ) )  | ( ( pen ul ; move ua / 4 , ul + ul ) ; move ua , ul )  
[4930] ( move ua - ul , ul ; move ul , ul / 2 )  
[4931] ( move 2 , 4 ; move ul , 2 ; move ua , 2 )  | ( pen ua ; move 2 , 4 ; ( move ul , ul + ul ; move ua , 2 ) )  
[4932] ( move 2 , 4 ; move ua , 0 ; move ul , 4 )  | ( move 4 , 4 ; move 4 , ua ; move ul , 4 )  | ( move ua + 2 , 4 ; move ul , 4 ; pen 4 )  | ( pen ul ; move ua + 2 , 4 ; move ul , 4 )  | ( move 0 , 4 ; ( move ua + 2 , ua ; move ul , 4 ) )  | ( move ua , ua + 4 ; move ul + ul , ua ; move ul , 4 )  
[4933] ( move ul , ul ; move ua - ul , 4 / ua )  
[4934] ( move ul , ul / 3 ; move ul - ua , ul )  
[4935] ( move 2 , ua ; move ul , 2 ; move 2 , 4 )  
[4936] ( move ul , ul / 4 ; move ua + ul , ul )  | ( move ul , ul / 4 ; move ua + ul , ul ; v0 = ua )  
[4937] ( move ua - ul , ul ; move ua / 4 , ul )  
[4938] ( move ua , 0 ; move 3 , 4 ; move 3 , ul )  
[4939] ( move ul + ul , ul ; move ua , ul / 4 )  
[4940] ( move ua , ul ; move 2 , 2 ; move 2 , 4 )  
[4941] ( move 3 , ul ; move 3 , 2 ; move ua , 2 )  
[4942] ( move ul - ua , ua / 4 ; move ul , ul )  
[4943] ( move ua , 0 ; move 4 , 3 ; move ua , 4 )  
[4944] ( move ua , ul / ua ; move ul , 3 / ua )  | ( move ua , ul / ua ; move ul , ul / 2 )  | ( move ua , ul / ua ; v0 = 3 / ua ; move ul , v0 )  
[4945] ( move ul , ul ; move ua + ul , ul / 4 )  
[4946] ( move ul , ul / 3 ; move ua - ul , ul )  
[4947] ( move ua , ul / ua ; move ul - 4 , ul )  
[4948] ( move 4 , ua ; move 4 , 2 ; move ul , 0 )  | ( move 4 , 0 ; move 4 + ul , 2 ; pen ul )  | ( move 2 + ul , ua ; move ul , 0 ; move 3 + 2 , 2 )  
[4949] ( move ul , ul / ua ; move 4 + ul , ul )  | ( move ua - ul , ul - 3 ; pen ua - ul ; move ul , 0 - ul )  
[4950] ( move ul / 4 , ua ; move ua - ul , ul )  | ( move 2 / ua , ua ; move ua - ul , ul - ua )  | ( move ul / 3 , 0 ; move ua - ul , ul ; pen 0 )  | ( move 2 / ua , ua ; move 2 , ul ; move 3 , ua * 2 )  | ( move ul - ua , ul ; move 2 / ua , 2 ; v0 = ul )  
[4951] ( move ul , 0 ; move 3 , ul ; move 3 , 3 )  
[4952] ( move 4 , ul ; move ua , 2 ; move 2 , 2 )  
[4953] ( move ua , 3 / ua ; move ul / ua , ul )  
[4954] ( move 4 , ul ; move ul + ul , ul / ua )  | ( move 4 , ul ; pen ua * 4 ; move ul + ul , ul / ua )  
[4955] ( move 3 , ul ; move 4 , 0 ; move 3 , ul )  | ( ( move 4 + 3 , ul ; pen ua ) ; move 3 , ul - ua )  | ( move ul , ul - ua ; move 4 + 2 , ua ; move 3 , ul )  | ( move 3 , ul ; ( move 4 , 0 ; move 3 , ul - ua ) ; pen ul )  
[4956] ( move 2 , 2 ; move ul , ul ; move 3 , 3 )  
[4957] ( move 2 , 4 ; move ul , 2 ; move 2 , ul )  
[4958] ( move 3 , 2 ; move 2 , ul ; move 3 , ul )  
[4959] ( move ua , ul / ua ; move ua / 4 , ul )  
[4960] ( move ul , 0 ; move 4 , 4 ; move ul , 2 )  | ( ( move ul , ua ; move 4 , 4 ) ; move ul , 2 )  
[4961] ( move 3 , ul ; move 2 , 3 ; move ua , 3 )  | ( move 3 , ul ; move ul + ul , 3 ; move ua , ua + 3 )  
[4962] ( move ua , 4 / ua ; move ul , ul / ua )  
[4963] ( move ul , ul / 3 ; move ua , ul / ua )  
[4964] ( move ul , ul / ua ; move ua , ul / 3 )  
[4965] ( move ul , ua ; move 0 , 4 ; move 3 , 4 )  
[4966] ( move ul / 4 , ul ; move ul - ua , ul )  | ( move 4 + ul , ua + 2 ; move ul / ua , ul )  | ( move 3 + 2 , 2 ; pen 2 ; move ul / 4 , ua + ul )  | ( move 2 / ua , ul ; ( move ul - ua , ul ; pen ul ) )  
[4967] ( move 2 , 3 ; move ul , 4 ; move ul , 2 )  
[4968] ( move ul , 0 ; move 3 , ul ; move 4 , 4 )  
[4969] ( move 4 , ul / ua ; move ul , ul / ua )  
[4970] ( move 3 , 3 ; move 3 , 4 ; move ua , ua )  
[4971] ( move 0 - ua , 0 ; pen 0 ; move 2 , ul )  
[4972] ( move 3 , ua ; move 4 , 2 ; move 3 , ul )  
[4973] ( move ul , 3 ; move 4 , ul ; move 2 , 2 )  
[4974] ( move 2 , 2 ; move 4 , ul ; move 3 , ul )  
[4975] ( move 3 , 3 ; move ul , 3 ; move ua , 4 )  
[4976] ( move 4 , ul ; move 3 , 4 ; move ua , 2 )  
[4977] ( move ua , ul ; move 3 , 3 ; move 3 , 4 )  
[4978] ( move 3 , 3 ; move ul , ul ; move 2 , 4 )  
[4979] ( move 3 , 3 ; move 4 , 3 ; move ua , ul )  
[4980] ( move ul , 3 ; move ua , 4 ; move 4 , 2 )  
[4981] ( move ua , ua ; move 4 , 3 ; move 4 , 3 )  
[4982] ( move 4 , ul ; move 3 , 4 ; move ua , 3 )  
[4983] ( move ul , 0 - ua ; pen 0 ; move 4 , 0 )  | ( move ul , 0 ; pen 3 - 4 ; move 4 , ua )  
[4984] ( move 4 , 3 ; move ul , 4 ; move ul , 2 )  
[4985] ( move 0 , 0 ; pen 0 ; move 4 , ul - ua )  | ( move 0 , ua ; pen ul - 3 ; move 4 , ul )  | ( move 0 , ul ; ( pen 0 ; v0 = 3 ; move 4 , ua ) )  | ( ( move 0 , ua + ua ; pen 0 ) ; move 4 , ul ; pen 3 )  
[4986] ( move ul , ua ; move 2 , 4 ; move 4 , 4 )  
[4987] ( move ul , 2 ; pen 0 ; move 2 + ul , 0 )  
[4988] ( move 3 , 3 ; move ul , ul ; move 3 , 4 )  
[4989] ( move 0 - 2 , ua ; pen 0 ; move ua , 3 )  | ( move ul - 3 , ua ; pen 0 ; move ua , 3 )  
[4990] ( move ua , ul ; move 3 , 4 ; move 3 , 4 )  
[4991] ( move 3 , ul ; move 3 , 4 ; move ua , 4 )  | ( move 2 + ul , ul ; move 3 , 4 ; move ua , 4 )  
[4992] ( move ul , 4 ; move 2 , 4 ; move 4 , ul )  
[4993] ( move 4 , ul ; move 3 , 4 ; move 3 , ul )  
[4994] ( move 2 , ul ; move 4 , ul ; move 4 , 4 )  
[4995] ( move 0 , 3 + 3 ; pen 0 ; move ua , ul )  | ( ( move 0 , ua + ul ; pen 0 ) ; move ua , 4 + 2 )  
[4996] ( move 4 - ua , 0 ; pen 0 ; move ua , 2 )  
[4997] ( move ua + 2 , 3 ; pen 0 ; move ua , 2 )  
[4998] ( move 4 , ua ; move 4 , 3 ; move 4 , ul )  
[4999] ( move 4 , ul ; pen 0 ; move 2 + ul , 0 )  | ( move 4 , ul ; pen 0 ; move ua / 2 , 0 )  | ( move 2 , ul ; ( move 2 , ua ; pen 0 ) ; move 3 , 0 )  
[5000] ( move 4 , 0 ; pen 0 ; move ua - ul , 2 )  
[5001] ( move ua - 4 , 3 ; pen 0 ; move ua , 0 )  | ( move 2 , 3 ; ( pen ul - 3 ; move ua , 0 ) ; pen 2 )  
[5002] ( move 0 , 3 ; pen 0 ; move ua , ua - 4 )  
[5003] ( move 2 , 3 + 2 ; pen 0 ; move ua , ul )  | ( move ul + ul , 4 + ul ; pen 0 ; move ua , ul )  
[5004] ( move 0 , 2 ; pen 0 ; move ua - ul , 4 )  
[5005] ( move ul , ua - 4 ; pen 0 ; move 3 , 0 )  
[5006] ( move 3 , ul ; pen 0 ; move ua - 4 , 0 )  
[5007] ( move 2 - ua , ua ; pen 0 ; move 2 , 4 )  
[5008] ( v0 = ua * 2 ; move 4 , ul / v0 )  | ( move ul , ul / 4 ; move 4 , 3 ; pen ul )  
[5009] ( move 3 , ua + 2 ; pen 0 ; move ua , 4 )  | ( ( move 3 , 2 ; pen 0 ) ; move ua , 3 + ul )  
[5010] ( v0 = ul / 4 ; move ua , 3 - v0 )  | ( ( move 0 , ul + ul ; move ua , 3 / 4 ) ; pen ul )  
[5011] ( move ua , ua ; pen 0 ; move 4 + 3 , 2 )  
[5012] ( move 3 , 0 ; pen 0 ; move ul + ul , 4 )  | ( move 3 , ua ; pen 3 - ua ; move 2 , 4 )  | ( move ua / 2 , ua ; pen 0 ; move 2 , 2 + 2 )  
[5013] ( move ua , 0 ; pen 3 - ua ; move 3 , 2 )  | ( move ua , ua * 4 ; pen 0 ; move 3 , 2 )  | ( pen ua ; ( move ua , 0 ; pen 0 ) ; move 2 + ul , 2 )  | ( ( move ua , ua ; pen 0 ; move ul + ul , 2 ) ; move ul , 0 )  
[5014] ( pen 2 ; move ul , 2 ; move 0 - ua , 3 )  | ( move ul / 3 , 3 + ul ; move ua + ul , ul )  | ( move ul / 2 , 4 ; ( move ua , ul ; move ul , ua ) )  
[5015] ( move 4 + ul , 2 ; pen 0 ; move 2 , ul )  
[5016] ( move ul , 4 ; pen 0 ; move 2 - ua , 2 )  
[5017] ( move 3 , ua * 2 ; pen 0 ; move 2 , ul )  | ( pen ul / ua ; ( move 3 , ua * 4 ; pen 0 ) ; move 2 , ul )  
[5018] ( move 0 - 4 , 4 ; pen 0 ; move ua , ul )  
[5019] ( move ul , 0 - 4 ; pen 0 ; move ua , 4 )  
[5020] ( move 2 , ua ; pen 0 ; move ua , 4 * 2 )  
[5021] ( move 2 , 2 + ul ; pen 0 ; move 4 , ul )  
[5022] ( move ua , 2 - ul ; pen 0 ; move 4 , 2 )  | ( move ua , ul ; pen 0 ; move 3 + ul , 2 )  | ( ( move ua , ul ; pen 0 ) ; move 4 , ua + 2 )  
[5023] ( move ua , ua / 3 ; pen 0 ; move 4 , 0 )  
[5024] ( move 2 , ul + ul ; pen 0 ; move 3 , 4 )  
[5025] ( move 0 - 2 , 3 ; pen ul ; move 3 , ul )  | ( pen ua - ul ; move ul - 3 , 3 ; move 3 , ul )  
[5026] ( move 3 , 0 ; move ua , ua - 4 ; pen 3 )  | ( move 4 , 0 ; move ua , ua - 4 ; pen 3 )  | ( move 2 + ul , ua ; move ua , ua - 4 ; pen 2 )  | ( move ul , ua ; move 2 , ua ; move ua , ua - 4 )  | ( ( v0 = ua - 4 ; move 4 , ua ) ; move ua , v0 )  
[5027] ( pen ua ; move 4 , 2 ; move ua + 2 , 3 )  
[5028] ( move ua , 3 ; pen 0 ; move ul , 3 * 2 )  
[5029] ( move 3 , 2 ; move ua - 3 , 2 ; pen ul )  
[5030] ( move 2 , 2 ; move ua , 2 - 4 ; pen ul )  | ( ( v0 = 2 ; move v0 , v0 ) ; move ua , v0 - 4 )  | ( v0 = ul + ul ; move ua , ua / v0 ; move v0 , v0 )  
[5031] ( move 2 , 2 ; pen 0 ; move ua , ul / 4 )  
[5032] ( move 3 , ul ; pen 0 ; move 3 , ua * 3 )  | ( move 3 , ul ; pen 0 ; move ua - 3 , ua )  | ( move 3 , ul ; ( pen 0 - ul ; move 4 - ul , 0 ) )  
[5033] ( move ul , ua / 4 ; pen 0 ; move 4 , 0 )  
[5034] ( move 2 , ua ; pen ua ; move 2 , 3 - 4 )  | ( move 2 , ua ; move 2 , ua - ul ; pen 3 )  | ( move 2 , ua ; move 2 , ua - ul ; pen ua )  | ( move 2 , 0 ; move 2 , 0 - ul ; v0 = 0 )  | ( pen 2 ; ( move 2 , ua ; move 2 , ua - ul ) )  | ( pen ua ; move ul + ul , ua ; move ul + ul , 2 - 3 )  | ( move 2 , ua * 3 ; move ul , 3 - 4 ; move ul , ua * 4 )  
[5035] ( move 2 - ua , ua ; pen 3 ; move 4 , 2 )  
[5036] ( move ua + 2 , 4 ; pen 3 ; move 2 , ul )  | ( move 4 * 2 , 4 ; move 2 , ul ; v0 = 2 )  | ( move ua + 2 , ua + 4 ; pen ua ; move 2 , ul )  | ( v0 = 2 ; move ua + v0 , 4 ; move v0 , 2 - ul )  
[5037] ( ( move 3 , ul ; pen 0 ) ; move ua , 0 )  | ( move 2 + ul , ul ; pen 0 ; move ua , ua )  | ( move ua - 3 , ul ; pen ul - 4 ; move ua , ua )  
[5038] ( move 4 , 4 ; pen 0 ; move 3 , ua + ul )  
[5039] ( move 4 , 2 - ul ; pen 0 ; move 3 , ul )  
[5040] ( move 4 , 0 ; pen ul ; move 2 , 4 + ul )  | ( move 4 , ua ; ( pen ua ; move 2 , 4 + ul ) )  | ( move 4 , 0 ; move 2 , 4 + ul ; v0 = ua - 4 )  | ( ( move 3 , ua ; move ul , 0 ) ; move 2 , 4 + ul )  | ( move 4 , 0 ; move ul + ul , 4 + ul ; v0 = ua )  
[5041] ( move 4 + ul , 2 ; pen ua ; move 2 , 3 )  | ( move 4 + ul , 2 ; v0 = 2 ; move v0 , 3 )  
[5042] ( move 3 - ul , 4 ; pen 0 ; move 3 , ua )  
[5043] ( move 3 , 0 ; pen 3 ; move 4 , ua - ul )  | ( move 3 , ua ; move 4 , ua - ul ; v0 = 3 )  | ( move 3 , ua ; ( move 3 + ul , ua - ul ; pen 0 ) )  | ( ( move 3 , ua ; v0 = ul - 2 ) ; move 4 , v0 )  
[5044] ( move ua , 4 ; pen ua ; move 3 , 3 + 2 )  | ( move ua , 4 ; pen ua + ul ; move 3 , 4 + ul )  | ( pen ua ; ( move ua , 3 + ul ; move 3 , 3 + 2 ; pen 0 ) )  
[5045] ( move 3 , ul ; move 3 , ua - 4 ; pen 0 )  | ( move 2 + ul , ul / ua ; move 3 , ua + 4 )  
[5046] ( move ua - ul , 3 ; pen 0 ; move 3 , 4 )  
[5047] ( pen 3 ; move 2 , 4 ; move 2 , ua * ua )  | ( v0 = ua ; move 2 , 4 ; move 2 , v0 * v0 )  
[5048] ( pen ua ; move 3 , 3 ; move 4 + ul , 2 )  | ( move 3 , 4 - ul ; move 4 , ua + 2 ; move ul , 0 )  | ( move 3 , 3 ; move ul + ul , 3 - ul ; move 3 , ua )  
[5049] ( move 3 , 0 ; move 2 , ul / 4 ; pen ua )  
[5050] ( move 2 , 4 ; move 3 - ua , 2 ; pen ul )  
[5051] ( move 4 , ul ; pen ul - 4 ; move 2 , 0 )  
[5052] ( move 4 , 4 ; pen 0 ; move ul , 2 - ul )  | ( move 4 , 4 ; pen 0 ; ( move ul , ul ; pen 3 + ul ) )  
[5053] ( move 4 , ul - 4 ; pen 0 ; move ua , 3 )  
[5054] ( pen 2 ; move 4 + ul , 3 ; move ul , 2 )  | ( ( move 3 + 2 , 3 ; move ul , 2 ) ; pen 4 - 3 )  | ( move 2 , 4 - ul ; move 2 + ul , ua ; move ul , 2 )  | ( move ul , 2 ; move ul - 4 , ua + ul ; move 2 - 4 , 0 )  | ( move 2 + 2 , 2 + ul ; ( move ul , ua ; move ul , 2 ) )  
[5055] ( move ul , 4 ; ( pen 0 ; move ua , 0 ) )  
[5056] ( move 3 , 3 ; pen ul ; move 0 - 4 , ul )  | ( move 3 , 3 ; ( move 0 - 4 , ul ; move 0 , ul ) )  
[5057] ( move 4 + 4 , 2 ; move 3 - 2 , 3 + 2 )  | ( pen ua ; ( move ua , 2 ; move 2 , ua ; move ul , 4 + ul ) )  
[5058] ( move 0 , ul ; pen 0 ; move 4 , ul / 4 )  
[5059] ( pen ua ; move 3 , 0 - 4 ; move 4 , ul )  | ( pen ua ; move 3 , ua - 4 ; move 4 , ul - ua )  
[5060] ( move 3 , 0 ; pen ul / 2 ; move ua , 4 )  
[5061] ( move ul , 3 ; pen 0 ; move ua / 2 , 4 )  
[5062] ( pen 2 ; move ua , ul ; move 3 * 3 , 2 )  
[5063] ( move ul , ul - 4 ; move 3 , 2 ; pen 2 )  
[5064] ( move 3 , ul - 3 ; pen ua ; move 4 , 2 )  | ( move 4 - ul , ul - 3 ; move 3 + ul , 2 )  | ( move 3 , ul - 3 ; ( pen 3 / 4 ; move 3 + ul , 2 ) )  
[5065] ( move 2 , 2 / 3 ; move ua , 4 ; pen ua )  
[5066] ( move 3 , 0 ; pen ul ; move 4 , 3 / ua )  
[5067] ( pen ua ; move 3 , ul ; move 4 , 4 + 2 )  | ( ( pen ua ; pen ul ) ; move 4 - ul , ul ; move 4 , 3 + 3 )  
[5068] ( pen 2 ; move 2 , ul ; move ua - 4 , 4 )  | ( move 3 - ul , ul ; move 2 , 3 + ul ; move ul / ua , 0 )  
[5069] ( pen ul ; move 4 + 2 , ul ; move 4 , 2 )  
[5070] ( move ua , ul ; pen 3 ; move 3 , 4 + 3 )  | ( move ua , ul ; v0 = 3 ; move v0 , v0 + 4 )  
[5071] ( move 3 , 3 ; pen ua ; move 3 , 4 + ul )  
[5072] ( pen 4 ; move 4 , 4 ; move 0 - ua , ul )  | ( move 3 , 4 ; move ul , ua ; move 0 - ua , ul )  
[5073] ( move 3 , 4 + ul ; move 2 , 3 ; pen ul )  
[5074] ( move ua , 2 ; move 3 * 2 , 4 ; pen ul )  
[5075] ( move 3 , ul ; move 4 + 3 , ul ; pen 3 )  
[5076] ( pen 2 ; move 4 , ua / 3 ; move 2 , ul )  | ( move 3 + ul , ua / 3 ; move 2 , ul ; v0 = 0 - 3 )  
[5077] ( move 3 / 2 , ul ; pen 2 ; move ua , 4 )  | ( move ua / 4 , ul ; move ul / ua , 4 - ul ; move ua , ul )  
[5078] ( pen 3 ; move 3 - ua , ua ; move 4 , 4 )  | ( move 3 - ua , ua ; move 4 , 4 ; pen ul )  
[5079] ( move 4 , 3 / 4 ; pen 0 ; move ua , ul )  
[5080] ( move 3 , 3 ; move 4 , 3 + ul ; pen ul )  | ( move 3 , 3 ; v0 = 4 ; move v0 , v0 )  | ( v0 = 3 ; move v0 , v0 ; move 4 , 4 )  | ( pen ul ; ( move 3 , 3 ; move 4 , ua + 4 ) )  | ( move 3 , 3 ; move 3 , 4 - ua ; move ul , ua )  | ( ( v0 = 4 ; move 3 , 3 ) ; move v0 , v0 )  | ( pen 4 ; move 3 , 3 ; ( v0 = 4 ; move v0 , v0 ) )  
[5081] ( move 3 , 4 ; move ul , 4 / ua ; pen 0 )  
[5082] ( pen 3 ; move 3 , 3 * 3 ; move ua , ul )  
[5083] ( move 3 , 3 ; ( pen 0 ; move ua , ul ) )  
[5084] ( move ua , 2 ; move ua , 4 * 4 ; pen 4 )  | ( move ua , 2 ; ( move ua , 4 * 4 ; pen ua * 3 ) )  
[5085] ( move ul , 4 / 3 ; pen ua ; move 3 , 2 )  
[5086] ( move 4 + 3 , ua ; move 4 , 4 ; pen ul )  | ( move 4 + 3 , 0 ; pen 0 ; ( pen ul ; move 4 , 4 ) )  
[5087] ( pen 4 ; move 2 - ua , 4 ; move 4 , ul )  
[5088] ( pen 3 ; move ua , ul ; move 3 * 3 , 4 )  
[5089] ( move 4 + 2 , 3 / 2 ; move 4 , 2 - 3 )  
[5090] ( move ua + ul , ua ; move ua , ua * ua )  | ( move ua + ul , 0 ; v0 = ua ; move v0 , v0 * v0 )  
[5091] ( move ul - 4 , 3 ; pen 2 ; move ul , 4 )  
[5092] ( pen ul ; move ul , 4 ; move 3 , 3 * 3 )  
[5093] ( move ua + ul , ua ; move ul - ua , ul )  | ( move ua + ul , ua * 4 ; move ul - ua , ul )  
[5094] ( move ua , ua ; move ul - ua , ua - ul )  
[5095] ( ( move ul , ul ; pen 0 ) ; move 3 , 4 )  | ( move ul , ua + ul ; pen 4 - ua ; move 3 , 4 )  | ( move ul , ul ; ( pen 0 ; move 3 , 4 ; v0 = ul ) )  
[5096] ( move 3 , ul / ua ; pen 3 ; move 4 , 3 )  | ( move 4 , 0 ; move ua - 3 , ua - 3 ; v0 = ul )  
[5097] ( move ua , 4 ; pen ul ; move 4 , 4 + 4 )  | ( move ua , 4 ; v0 = 4 ; move v0 , v0 * 2 )  
[5098] ( move ua , ul ; move ua + ul , ua * ua )  
[5099] ( move ua + ul , ul ; move ua , ua * ua )  
[5100] ( move ul - ua , ua ; move ua , ua * ua )  | ( move ul - ua , ua * 2 ; move ua , ua * ua )  
[5101] ( pen 4 ; move 2 , ul ; move ua , 4 * 4 )  | ( pen ul ; move ua / 3 , ul ; move ua , 4 * 4 )  
[5102] ( pen ul ; move 3 , ua - 4 ; move 4 , 4 )  
[5103] ( move 4 / 3 , 4 ; pen ul ; move ua , 2 )  
[5104] ( move ua , ua * ua ; move ua , ua * ua )  
[5105] ( move 4 , 3 ; move 4 , ul / 3 ; pen ua )  
[5106] ( move ua + ul , ul ; move ul - ua , ul )  | ( move ua + ul , ul ; move ul - ua , ua + ul )  | ( v0 = ul ; move ua + v0 , ul ; move v0 - ua , v0 )  | ( ( move ua , ul ; move ul , ua ; pen ua ) ; move ul - ua , ul )  
[5107] ( move ua + ul , ua * ua ; move ul , ul )  | ( move ua + ul , ua * ua ; move ul , 2 - ul )  | ( ( move ua + ul , ua * ua ; v0 = ul ) ; move ul , ul )  
[5108] ( move ul - ua , ul ; move ua , ua * ua )  | ( v0 = ua ; move ul - v0 , ul ; move v0 , v0 * ua )  
[5109] ( move ul - ua , ul ; move ua + ul , ul )  
[5110] ( pen 4 ; move ul , ul / 4 ; move 3 , 2 )  | ( ( move ul , ul / 4 ; move ul , 2 ) ; move 2 , ua ; pen ul )  
[5111] ( pen ul ; move 4 , 3 ; move 3 , ul / 3 )  
[5112] ( move 3 , 4 * 4 ; move 4 , ul ; pen ua )  
[5113] ( move ua - ul , ul + ul ; move ua , ul )  | ( move ul , 0 ; move ua - ul , ul + ul ; move ua , ul )  
[5114] ( move ua , ua * ua ; move ul - ua , ul )  
[5115] ( move ua , ul ; move ua - ul , ul + ul )  | ( move ua , ua + ul ; move ua - ul , 2 - ua )  | ( move ua , ul ; move ua - ul , 2 ; pen 2 + ul )  
[5116] ( move ua + ul , ua - ul ; move ul , ul )  | ( move ul , ua - ul ; move ua , 0 ; move ul , ul )  | ( move ua + ul , ul - 2 ; move ul , ul ; pen ul )  | ( pen ua ; move ua + ul , ul - 2 ; move ul , ul - ua )  | ( move ua + ul , ua - ul ; move ul , ua + ul ; pen 4 )  | ( move 0 , ua - ul ; move ua + ul , ua ; move 2 - ul , ul )  | ( ( pen ul ; move ul , ul - 2 ; move ua , ua ) ; move ul , ul )  
[5117] ( move ul - ua , ua * ua ; move ul , ul )  
[5118] ( move ul , ul ; move ul - ua , ua * ua )  
[5119] ( move 4 / 3 , 4 ; pen ul ; move ua , 4 )  
[5120] ( move ua - ul , ua * ua ; move ul , ul )  
[5121] ( pen 4 ; move ul , 3 / 4 ; move ua , 4 )  | ( move ul , 3 / 4 ; move ua , 4 ; v0 = ua )  
[5122] ( move 2 , 0 ; move ua , ul ; move 2 , ul )  
[5123] ( move ua - ul , ul ; move ul + ul , ul )  | ( move ua - ul , ul ; move 2 , ul ; v0 = ul )  | ( v0 = ul ; move ua - v0 , ul ; move 2 , v0 )  | ( pen ul / 2 ; move ua - ul , ul ; move ul + ul , ul )  | ( ( v0 = ua - ul ; move v0 , ua + ul ) ; move 2 , ul )  
[5124] ( move 2 , 0 ; move ua , ul ; move ua , 3 )  | ( move 2 , ua ; move ua , ul ; move ua , 3 )  | ( ( move 2 , ua * 3 ; move ua , ul ) ; move ua , 3 )  
[5125] ( move ua - ul , ul ; move ul - ua , ul )  
[5126] ( move ul , ua * ua ; move ul - ua , ul )  
[5127] ( move ua , 0 ; move 2 , ul ; move 3 , ul )  
[5128] ( move ua , ua - ul ; move ul / ua , ul )  | ( move ua , ul - 2 ; move ul / ua , ul ; pen ul )  
[5129] ( move ua , ua ; move 2 , 2 ; move 2 , ul )  | ( move ua , 0 ; move ul + ul , 2 - ua ; move 2 , ul )  
[5130] ( move ua + ul , ul / ua ; move ul , ul )  | ( pen ul ; move ua + ul , ul / ua ; move ul , ul )  
[5131] ( move ul - ua , ul ; move ua , ul / ua )  | ( ( v0 = ul - ua ; move v0 , ul ) ; move ua , ul / ua )  
[5132] ( move 2 , 0 ; move 2 , ul ; move ul , ul )  | ( move 2 , ua ; move 2 , ul - ua ; move ul , ul )  
[5133] ( move ul , ul ; move ua + ul , ul / ua )  | ( move ul , ul - ua ; move ua + ul , ul / ua )  | ( ( move ul , ul ; move ua , ul / ua ) ; move ul , ua )  
[5134] ( move ul , 0 ; move ua , ul ; move 3 , 2 )  
[5135] ( move ul , 0 ; move ul , 2 ; move 2 , ul )  
[5136] ( move 3 , 0 ; move ul , ul ; move ua , 2 )  | ( move ua / 2 , 0 ; ( move ul , ul ; move ua , 2 ) )  | ( ( move ua - 2 , ua ; move ul , ul ) ; pen ua ; move ua , 2 )  
[5137] ( move ul / ua , ua * ua ; move ua , ul )  
[5138] ( move ul , ul / ua ; move ua + ul , ul )  | ( move ul , ul / ua ; ( move ul , ul - ua ; move ua , ua ) )  
[5139] ( move ua , 0 ; move 3 , 2 ; move ul , ul )  
[5140] ( move 3 , 0 ; move ul , ul ; move 2 , ul )  | ( move 3 , ua ; ( move ul , ul ; move 2 , ul ; v0 = ua ) )  
[5141] ( move ua , ua ; move 3 , 2 ; move 2 , ul )  
[5142] ( move ua , ul ; move ul , 2 ; move 2 , 2 )  | ( move ua , ul ; move ul , 2 ; ( move 2 , 2 - ua ; pen ul ) )  
[5143] ( move ua , 0 ; move 2 , ul ; move ul , 4 )  | ( move ua , ua + ua ; move 2 , ul ; move ul , 4 )  
[5144] ( move 3 , ua ; move ua , ul ; move 2 , 2 )  
[5145] ( move 2 , 0 ; move 3 , ul ; move ul , ul )  
[5146] ( move ua , 0 ; move ua , 4 ; move ua , 4 )  
[5147] ( move ua , 0 ; move ul , 4 ; move ul , 2 )  
[5148] ( move ua , ua ; move ua , 2 ; move 3 , 3 )  
[5149] ( move 4 , 0 ; move ua , ul ; move ua , 3 )  
[5150] ( move ua , 2 ; move ua , ul ; move 3 , 2 )  
[5151] ( move 2 , 3 ; move ua , ua ; move ul , 2 )  | ( move 2 , ua + 3 ; move ua , ua ; move ul , 2 )  | ( ( v0 = ua + 2 ; move v0 , 3 ) ; move ul , v0 )  
[5152] ( move ul / ua , ul ; move ul - ua , ul )  | ( move ul - ua , ul + ul ; move ul / 4 , 2 )  | ( move ul / ua , ua + ul ; move ul - ua , ul )  
[5153] ( move 4 , 2 ; move ua , ul ; move ua , 2 )  
[5154] ( move ua , 0 ; move 3 , ul ; move 4 , ul )  | ( move ua , 0 ; move 3 , ul ; move 3 + ul , ul )  
[5155] ( move ul , ul ; move 2 , 2 ; move 2 , ul )  
[5156] ( move ua , 3 ; move 2 , 4 ; move ua , ua )  
[5157] ( move ul , ua ; move 2 , ul ; move 3 , 2 )  
[5158] ( move ua , ul ; move ua , 4 ; move 2 , 2 )  | ( move ua , ul ; move ua , 4 ; move 2 , ul + ul )  
[5159] ( move 2 , 0 ; move ul , ul ; move ul , 4 )  
[5160] ( move 4 , ua ; move 2 , ul ; move ua , 2 )  
[5161] ( move 3 , ua ; move 2 , 3 ; move ua , ul )  
[5162] ( move ul , 2 ; move ua , 2 ; move ua , 4 )  
[5163] ( move ul , ua ; move ua , 2 ; move 2 , 4 )  
[5164] ( move ul , 2 ; move ua , ul ; move 4 , 2 )  
[5165] ( move 3 , ul ; move 2 , ul ; move ul , 2 )  
[5166] ( move 2 , 2 ; move ul , ul ; move ua , 4 )  | ( move 2 , 2 ; move ul , ul ; ( move ua , 4 ; v0 = ul ) )  
[5167] ( move 4 , ua ; move ul , 3 ; move ua , 2 )  
[5168] ( move 3 , 0 ; move ul , ul ; move 4 , ul )  
[5169] ( move 2 , ul ; move 2 , ul ; move ua , 4 )  
[5170] ( move 2 , ul ; move ul , 3 ; move 2 , ul )  
[5171] ( move 2 , 4 ; move ua , ul ; move ua , 3 )  
[5172] ( move ua , 3 ; move 3 , 2 ; move ul , ul )  
[5173] ( move 2 , ua ; move ua , ua ; move 4 , 4 )  | ( move ua + 2 , ua ; v0 = 4 ; move v0 , v0 )  
[5174] ( move 0 - 2 , 0 ; move ua + 2 , 2 + 2 )  
[5175] ( move ul , ua ; move ul , 2 ; move 3 , 3 )  
[5176] ( move 4 , ul ; move 2 , 2 ; move ua , ul )  
[5177] ( move 3 , ul ; move ul , 2 ; move ul , 2 )  
[5178] ( move ua , 4 ; move 3 , ul ; move 2 , ul )  
[5179] ( move 2 , 3 ; move ua , 4 ; move ul , ul )  
[5180] ( move ul , 2 ; move 2 , ul ; move ul , 4 )  
[5181] ( move ul , 2 ; move ua , ul ; move 4 , 3 )  
[5182] ( move 3 , ua ; move ul , ul ; move 2 , 4 )  
[5183] ( move ul , ua ; move 3 , 4 ; move ul , 2 )  
[5184] ( move ul , 3 ; move ul , ul ; move 3 , 2 )  
[5185] ( move ua , 3 ; move 4 , ul ; move 2 , ul )  
[5186] ( move 3 , ua ; move ul , ul ; move 4 , 2 )  
[5187] ( move 3 , 2 ; move ul , 4 ; move ua , ul )  
[5188] ( move ul , 2 ; move ua , ul ; move 3 , 4 )  
[5189] ( move 2 , ul ; move ul , 3 ; move 3 , ul )  | ( ( move 2 , ua + ul ; move ul , 3 ) ; move 3 , ul )  
[5190] ( move ua , 4 ; move 2 , ul ; move 3 , ul )  
[5191] ( move ua , 3 ; move ul , ul ; move 3 , 3 )  
[5192] ( move 2 , ul ; move 3 , 4 ; move ua , ul )  | ( move 2 , ul - ua ; move 3 , 4 ; move ua , ul )  
[5193] ( move 4 , 2 ; move ul , ul ; move ul , 2 )  | ( ( move 4 , 2 ; move ul , ul ) ; move ul , ul + ul )  
[5194] ( move 3 , 3 ; move ua , 3 ; move ul , ul )  
[5195] ( move ul , 0 ; move ul , 4 ; move 4 , ul )  
[5196] ( move 3 , ua ; move ua , ul ; move 4 , 3 )  
[5197] ( move 2 , ua ; move ua , 4 ; move ul , 4 )  | ( move 2 , ua * 3 ; move ua , 4 - ua ; move 0 - ul , ul )  
[5198] ( move 3 , ul ; move 3 , ul ; move ul , 2 )  
[5199] ( move 3 , ua ; move 4 , ul ; move ul , 2 )  
[5200] ( move ua , 4 ; move ua , 2 ; move ul , 4 )  
[5201] ( move 3 , ua ; move 3 , ul ; move 4 , ua )  
[5202] ( move 2 , ua ; move 3 , ul ; move ul , 4 )  
[5203] ( move 4 , ua ; move ul , ul ; move 3 , 3 )  
[5204] ( move 4 , ul ; move 3 , 4 ; move ua , ua )  | ( move 4 , ul ; move ua + 3 , 4 ; ( pen ua ; pen ua + ul ) )  
[5205] ( move 4 , 3 ; move 2 , ul ; move ul , ul )  
[5206] ( move ua , ul ; move 4 , 2 ; move ul , 4 )  
[5207] ( move 3 , 3 ; move ul , 4 ; move ua , ul )  
[5208] ( move 4 , ul ; move ul , 3 ; move ul , 2 )  
[5209] ( move 4 , 3 ; move ua , ul ; move 3 , ul )  
[5210] ( move 4 , ua ; move ul , 3 ; move 3 , ul )  
[5211] ( move ua , ul ; move ul , 4 ; move 3 , 3 )  
[5212] ( move ul , 3 ; move ul , 4 ; move 2 , ul )  | ( move ul , 3 ; move ul , ua + 4 ; move 2 , ua + ul )  
[5213] ( move ua , 3 ; move 3 , 4 ; move ul , ul )  
[5214] ( move 4 , 3 ; move 3 , ul ; move ua , ul )  | ( move 3 + ul , 3 ; move 3 , ul ; move ua , ul )  
[5215] ( move 4 , ul ; move 2 , ul ; move ua , 4 )  
[5216] ( move 3 , ua ; move 4 , 3 ; move ul , ul )  
[5217] ( move ua , 2 ; move 4 , ul ; move ul , 4 )  
[5218] ( move 0 , ua ; pen 0 ; move 2 - ua , ul )  
[5219] ( move ua , ul ; move ul , 4 ; move 4 , 3 )  
[5220] ( move ua , 4 ; move ul , 3 ; move 4 , ul )  
[5221] ( move 2 , 0 ; pen 0 ; move ua , ul + ul )  | ( move 2 , ua ; ( pen 0 ; move ua , 2 ; v0 = 0 ) )  
[5222] ( move 4 , 3 ; move ua , ul ; move ul , 4 )  | ( move 3 + ul , 3 ; move ua , ul ; move ul , 4 )  
[5223] ( move ul , ua ; move ul , 4 ; move 4 , 3 )  
[5224] ( move ul , 3 ; move ul , ul ; move 3 , 4 )  
[5225] ( move 4 , 3 ; move ul , ua ; move ul , 4 )  | ( v0 = ua ; move v0 - ul , 3 ; move ul , 4 )  | ( move ul , 3 ; move 2 * 2 , 0 ; move ul , 3 + ul )  | ( move 3 + 2 , 3 ; ( v0 = ul ; pen ul ; move ul , 4 ) )  
[5226] ( move ul , 2 ; move 4 , ul ; move ul , 4 )  
[5227] ( move ua , ul ; move 4 , 3 ; move 4 , ul )  
[5228] ( move 4 , ua ; move ul , ul ; move 3 , 4 )  
[5229] ( move ul , 0 ; pen 0 ; move ua , 2 + ul )  | ( move ul , 0 ; pen ul - 3 ; move ua , 2 + ul )  
[5230] ( move 4 , ul ; move ul , 4 ; move ul , 2 )  
[5231] ( move 2 , ul ; move 4 , ul ; move ul , 4 )  
[5232] ( move 3 , 4 ; move ul , ul ; move ua , 4 )  
[5233] ( move ul , ul ; move 4 , 4 ; move ua , 3 )  
[5234] ( move 3 , ul ; move 4 , ul ; move ua , 4 )  
[5235] ( move ul , 4 ; move 4 , 2 ; move ul , ul )  
[5236] ( move 2 , ul ; pen 0 ; move 2 , ua + ua )  | ( move 2 - 4 , ul ; pen 0 - ul ; move 3 + ul , ua )  
[5237] ( move ua + ul , 3 ; pen 0 ; move ul , 0 )  
[5238] ( move 4 , ul ; move ul , 4 ; move ua , 4 )  
[5239] ( move 3 , ul ; move ul , 4 ; move 4 , ul )  | ( move 4 - ul , ul ; move ul , 4 ; move 4 , ul )  
[5240] ( v0 = ua + ul ; move ua , v0 / 4 )  | ( pen ua ; move 0 , ua - 2 ; move ua , 2 / 3 )  | ( move 3 / 4 , 3 * 2 ; move ua , ua / 3 ; pen ua )  
[5241] ( move 4 , ua ; move ul , ul ; move 4 , 4 )  
[5242] ( move ul , 4 ; move 3 , 4 ; move ul , ul )  
[5243] ( move 0 - 3 , 0 ; move 4 + ul , 2 + 2 )  
[5244] ( v0 = 4 + ul ; move ua , v0 / ua )  
[5245] ( move 4 , ua ; move 0 - ua , ul ; pen 0 )  
[5246] ( move 0 , ul ; pen 0 ; move 4 + ul , ua )  
[5247] ( move ua + ul , 4 ; pen 0 ; move ul , 0 )  | ( move ua + ul , 4 ; pen 0 ; move ul , ua )  
[5248] ( move ua , ua - ul ; move 2 , 2 ; pen 0 )  | ( move ua , ua - ul ; move 2 , 2 ; pen ua * ua )  | ( v0 = 2 ; ( move ua , ua - ul ; move v0 , 2 ) )  | ( ( move ua , ua - ul ; move 2 , 2 ; v0 = ul ) ; pen ul )  
[5249] ( move ul , ul ; move ul , 4 ; move 4 , 4 )  
[5250] ( move 2 , 2 ; pen 0 ; move ua , ul - ua )  
[5251] ( move 3 - ul , ua ; pen 0 ; move 2 , ua )  | ( move 2 , ua ; ( pen 0 ; move 2 , 0 ) ; v0 = ul )  
[5252] ( move 3 , ua + 2 ; pen 0 ; move ul , ul )  
[5253] ( pen ul ; move ua , 0 ; move ua - 3 , 2 )  | ( move ua , 0 ; move ua - 3 , ul + ul ; v0 = ua )  | ( move ua , ua ; ( move 0 , ul ; move ua - 3 , ul ) )  
[5254] ( move 3 , ul ; pen 0 ; move 2 , ua + ul )  | ( move 3 , ua + ul ; pen ul - ua ; move ul + ul , ul )  
[5255] ( move 4 + 2 , 0 ; move 0 - ua , 3 - 4 )  
[5256] ( move ua - ul , ul ; pen 0 ; move 4 , 0 )  
[5257] ( move 0 - ua , ua ; move ul , 3 ; pen 3 )  
[5258] ( move ua , ul ; pen 0 ; move ul , 3 + 3 )  
[5259] ( move ua , ua ; pen 0 - 3 ; move 3 , ul )  | ( move 4 + 2 , 0 ; ( pen 0 ; move 3 , ua + ul ; pen ul ) )  | ( move 0 , ua ; ( move ua , ua ; pen 0 ; move 2 + ul , ul ) )  | ( ( move ua , ua ; pen 2 - ua ; move 3 , ul ) ; move 0 , ul )  
[5260] ( move 4 , ul ; pen 0 ; move ul , 0 - ul )  
[5261] ( move 4 , ua + 2 ; pen 0 ; move ul , ul )  | ( move 4 , 2 ; ( pen 0 ; move ul , ua + ul ) )  | ( move 4 , ul + ul ; pen 0 ; ( move ul , ul ; pen ua ) )  
[5262] ( move ul , 3 ; pen 0 ; move 2 + ul , ul )  
[5263] ( move ua , 2 ; pen ua ; move 0 - 4 , ul )  
[5264] ( move 3 , ul ; move ua , 2 / ua ; pen 0 )  
[5265] ( move 2 + ul , 4 + 2 ; move 2 + 2 , 4 )  
[5266] ( pen ua ; move 4 + ul , 2 ; move ua , 2 )  | ( move 4 + ul , 2 ; move ua , 2 ; pen ua )  | ( move 4 + ul , ul + ul ; move ua , 2 ; pen ua )  | ( v0 = 2 ; ( move 3 + v0 , v0 ; move ua , 2 ) )  
[5267] ( move 2 + ul , ul ; pen 0 ; move 4 , ul )  
[5268] ( move 3 , 4 ; pen 0 ; move ul , ua + ul )  | ( move 4 - ul , 4 ; ( pen 0 ; move ul , ul ; move 0 , ul ) )  
[5269] ( pen ua ; move 2 , ua ; move 4 + ul , 2 )  | ( pen ul ; move ul - ua , ul + ul ; move 2 , ul )  | ( move 3 - ul , ua ; move 3 + ul , 2 ; move ul , ua * 4 )  
[5270] ( pen ua ; move ua , 4 ; move 3 , 0 - ul )  | ( move ua , 4 ; ( pen ul + ul ; move 3 , 0 - ul ) )  
[5271] ( move 2 , ul ; move 0 - 4 , ul ; pen ua )  
[5272] ( move ul , ua + 4 ; pen 0 ; move ua , 4 )  | ( move ul , 3 + ul ; pen 0 - ul ; move ua , 4 )  
[5273] ( move 3 , 3 ; pen 0 ; move ua - ul , ul )  
[5274] ( move 4 + ul , ua ; pen 0 ; move 3 , ul )  
[5275] ( move ua , ul ; pen ul - 2 ; move 4 , 0 )  | ( move ua , ul ; ( pen 0 ; move 3 + ul , 0 ) )  
[5276] ( move 2 , ua ; pen ua ; move ua - 4 , 2 )  
[5277] ( pen ua ; move 4 , 2 ; move ua , ua - 2 )  | ( move 4 , 3 - ul ; move ua , ul - 3 ; pen 2 / ua )  
[5278] ( move ul - ua , 3 ; pen 0 ; move 3 , ul )  
[5279] ( move ul , 3 ; pen 2 ; move ul - ua , 2 )  | ( pen 3 ; move ul , 3 ; move ul - ua , 2 )  | ( ( move ul , ua ; move ul , 3 ) ; move ul - ua , 2 )  
[5280] ( move ul - ua , 4 ; pen 0 ; move ul , 3 )  
[5281] ( move 2 , 0 - 2 ; move 3 + ul , 4 / 2 )  | ( move 2 , ua - 2 ; move 3 + ul , ul + ul )  | ( move 2 , ua - 2 ; move 4 , 2 ; v0 = ua )  
[5282] ( pen 2 ; move ua - ul , 4 ; move ua , 2 )  | ( move ua - ul , 2 + 2 ; move ua , 4 - 2 )  | ( pen ul ; move ua - ul , 2 * 2 ; move ua , 2 )  | ( move ua - ul , 4 ; pen 4 ; move ua , ul + ul )  
[5283] ( move ua , ua ; pen 0 ; move ua , 4 * 4 )  
[5284] ( move ul , 0 - 3 ; pen ua ; move 4 , ul )  | ( pen ul ; ( move ul , ua - 3 ; move 0 , ua ) ; move 4 , ul )  
[5285] ( move ul , 3 + ul ; pen 0 ; move 4 , ul )  | ( move ul , 4 ; pen 0 ; move 4 , ul - ua )  
[5286] ( pen ul ; move ua , 2 ; move ua - 2 , 4 )  
[5287] ( move 2 , ul ; pen 0 ; move ul - 4 , ul )  
[5288] ( move 3 * 2 , ul ; pen 0 ; move ul , ul )  | ( ( move ua , ul ; pen 0 ) ; move ul , ul )  | ( move ua , ul ; pen 0 ; move 2 - ul , 4 / ua )  | ( move ua , ua + ul ; pen 0 ; move ul - 2 , ua + 4 )  
[5289] ( move ua , ul ; pen 0 ; move 4 , 4 - ua )  
[5290] ( move ul , ul ; pen 2 / ua ; move 3 , 0 )  
[5291] ( move 4 - 2 , 0 ; move 3 + ul , 3 * 2 )  
[5292] ( move ua / 3 , ul ; pen 0 ; move 3 , ua )  | ( move 2 , ul - ua ; pen 0 ; move 3 , ua + ua )  | ( move 2 , ul ; pen ul / ua ; move 3 , ua * 2 )  
[5293] ( move 2 , ua ; move ua + 4 , ul ; pen 3 )  | ( move 2 , ua ; move ua + 4 , ul ; pen ua )  | ( move ul + ul , 0 ; move ua , ul ; move 4 , 0 )  | ( move 2 , ua ; move 4 , ul ; move ua , ua * 2 )  | ( move 2 , ua + ua ; move ua + 4 , ul ; pen ua )  | ( ( move 3 - ul , ua ; pen 3 ) ; move ua + 4 , ul ; pen 2 )  
[5294] ( move ul , ul ; pen 0 ; move 3 , 4 + ul )  
[5295] ( pen 3 ; move ua + ul , ul ; move 2 , 4 )  | ( ( move ul , ul ; move ua , 0 ) ; move 2 , 4 )  | ( move ua + ul , ul ; move ul , 4 ; move ul , ua )  | ( move ua + ul , ul ; move 0 , 2 * 2 ; move 2 , 0 )  | ( ( move ua , ul ; move ul , ua ; pen 4 ) ; move ua - 4 , 4 )  
[5296] ( pen ul ; move 2 , ul ; move 2 , 4 + ul )  | ( move 0 , ul ; move 2 , ua ; move 2 , 4 + ul )  
[5297] ( move ua , 2 ; ( pen 0 ; move ul , ua ) )  | ( move ua , ua + 2 ; pen 0 ; move ul , ua )  | ( move ua , 2 ; pen ul / ua ; move ul , ua )  | ( move ua , ul + ul ; pen ul - 3 ; move ul , ua + ua )  | ( ( move ua , 2 ; pen ua * 4 ) ; pen 0 ; move ul , ua )  
[5298] ( move 4 * 2 , 3 + ul ; move 3 + 2 , 2 )  
[5299] ( move 4 + ul , ul ; move 3 , 2 ; pen ua )  | ( ( move 0 , ul ; move 4 + ul , ua ) ; move 3 , 2 )  
[5300] ( pen ul ; move ua - 2 , 2 ; move 4 , ul )  | ( move 0 , ul ; move ua - 2 , ul ; ( move 4 , ul ; pen 3 ) )  
[5301] ( move ua , 3 * 3 ; move ua , 3 ; pen ua )  
[5302] ( move ua , 3 ; pen ua ; move 3 - ua , 4 )  
[5303] ( pen ul ; move 2 , 2 ; move ua , 3 / ua )  
[5304] ( pen ua ; move ua , 3 ; move 3 , ua - 4 )  
[5305] ( pen ua ; move 3 , 3 ; move ua - 3 , ul )  
[5306] ( move ul , ul / 2 ; pen 0 ; move 4 , ua )  
[5307] ( move 0 , 3 / 2 ; move 4 * 2 , 2 + ul )  | ( move ul , ul / 2 ; move ua + 2 , 4 - ua )  
[5308] ( move ul , 2 ; pen ul - 3 ; move ua , 3 )  
[5309] ( move 4 , ul ; pen 0 ; move ul , ua * 3 )  | ( move 3 + ul , ul ; pen 0 ; move ul , ua )  | ( move 4 , ul ; ( pen 0 ; move 4 - 3 , 0 ) )  | ( move 4 , ul ; ( v0 = 0 ; pen v0 ; move ul , v0 ) )  
[5310] ( move 3 , ul ; move 3 - ua , 2 ; pen ul )  
[5311] ( move 4 , ul / 2 ; pen 0 ; move ul , ua )  
[5312] ( move 2 , ua ; pen 2 / ua ; move 3 , ul )  
[5313] ( move 4 + 2 , 3 + ul ; move 2 , 4 * 2 )  
[5314] ( move 2 , ul ; pen ua ; move 2 , ul / 3 )  
[5315] ( move ul / 3 , 0 - 4 ; move 4 + 2 , 2 )  
[5316] ( move 4 , 4 - ul ; pen 0 ; move ul , ul )  
[5317] ( move ua , 4 ; pen ul - ua ; move 2 , 4 )  
[5318] ( move 2 , ul ; pen ua ; move ua , 2 / 4 )  
[5319] ( ( move ua , ul ; pen 0 ) ; move 2 , ul )  | ( move ua , ul - ua ; pen 2 - 3 ; move 2 , ul )  | ( move ua , ul ; pen 0 ; ( v0 = 2 ; move v0 , ul ) )  
[5320] ( move 3 , ul ; pen ul - 3 ; move ua , 3 )  | ( move 3 , ul ; pen ul - ua ; move ua , ua + 3 )  | ( move 2 + ul , ul ; ( pen 3 - ua ; move ua , 3 ) )  
[5321] ( move 3 , ul ; move 3 , 4 + ul ; pen ua )  
[5322] ( v0 = 4 / 3 ; move 4 , v0 + v0 )  
[5323] ( v0 = 4 * 2 ; move v0 , v0 / 3 )  
[5324] ( ( move ua , 2 ; pen 0 ) ; move ul , ul )  | ( move ua , 2 ; pen 3 - ua ; move ul , ul )  | ( move ua , 2 ; pen 2 / ua ; move ul , ul )  | ( move ua , 2 - ua ; pen 2 - 4 ; move ul , ul - ua )  
[5325] ( move ua , 4 + 4 ; move ua , 3 ; pen ul )  | ( move ua , 4 * 2 ; ( move ua , 3 ; v0 = ua ) )  
[5326] ( move 3 , 2 ; move ul - 3 , ul ; pen ul )  
[5327] ( pen ua ; move ua , 4 / 3 ; move 2 , ul )  
[5328] ( move 4 , 0 - ua ; move 3 + 3 , 4 / 3 )  
[5329] ( pen ul ; move ua , ua ; move 3 , 4 * 3 )  | ( move ua , ua * 3 ; move ua / 2 , 4 * 3 )  
[5330] ( move 4 , 4 ; pen ul ; move ua , ua - 3 )  | ( move 4 , 4 ; v0 = 3 ; move v0 + v0 , ua - v0 )  
[5331] ( move ul , ul ; ( pen 0 ; move 3 , ua ) )  
[5332] ( move 2 + 2 , ua * 3 ; move 4 , 4 * 2 )  | ( move 4 , ua * 2 ; v0 = 4 ; move v0 , v0 + v0 )  
[5333] ( move ua , 4 / 3 ; pen ul ; move ua , 2 )  
[5334] ( move ua , ul - 2 ; move 4 , 4 ; pen ul )  | ( move ua , ua - ul ; move 3 + ul , 3 + ul )  | ( move ua , ul - 2 ; move ul , 4 ; move 3 , 0 )  | ( move ua , ul - 2 ; v0 = 4 ; move 4 , v0 )  | ( move ua , ua - ul ; ( move 4 , 4 ; move 0 , 3 ) )  
[5335] ( move 3 , 4 ; move ua , ul - 3 ; pen ul )  
[5336] ( move 3 , ua ; pen 4 - ua ; move ul , 4 )  | ( pen 2 ; ( move 3 , 0 ; pen 0 ; move ul , 3 + ul ) )  
[5337] ( move ua , 4 ; pen ul - 3 ; move 3 , ul )  
[5338] ( move ua , ul / 2 ; pen 4 ; move 2 , ul )  | ( move ua , ul / 2 ; pen ul ; move ul + ul , ul )  | ( move ua , 2 / 4 ; ( v0 = 3 ; move 2 , ul ) )  
[5339] ( move ul , 3 ; ( pen 0 ; move ua , ul ) )  
[5340] ( move 3 , 2 * 2 ; move 4 + 4 , ua + 4 )  
[5341] ( move 2 , 4 + ul ; move 3 + 2 , 4 * 3 )  
[5342] ( move 3 + 3 , ua ; move 4 * 2 , 4 - 2 )  
[5343] ( pen ul ; move 3 - ua , 4 ; move 4 , ul )  
[5344] ( move 4 , ua * ua ; pen ua ; move 4 , 4 )  
[5345] ( move ua , ul ; ( pen 0 ; move 4 , ul ) )  | ( move ua , ul ; pen 3 - ua ; move 4 , ul )  | ( move ua , ul ; pen ul / 3 ; move 4 , ul )  | ( ( pen ul ; move ua , ul ) ; pen 0 ; move 4 , ul )  
[5346] ( move 3 , ul ; pen 2 / ua ; move 4 , ul )  
[5347] ( pen ul ; move 3 , ua ; move ua , 4 / 3 )  
[5348] ( move 3 / 4 , 0 - 3 ; move ua , 4 - 3 )  
[5349] ( move ul - 3 , ul ; pen ua ; move 4 , 4 )  
[5350] ( move 4 , ul ; pen ul ; move 3 , ul - 3 )  | ( move 4 , ul ; move 0 , ua ; move 3 , ul - 3 )  
[5351] ( move 2 , 2 * 2 ; move 3 - ua , 4 / 3 )  
[5352] ( move 4 , 3 / ua ; move 3 , ul ; pen ua )  | ( move 4 , ul / 2 ; pen ul ; move 3 , ul )  | ( v0 = ul ; move 4 , 3 / ua ; move 4 - ul , v0 )  | ( move 4 , ul / 2 ; ( v0 = ul ; move 2 + v0 , ul ) )  
[5353] ( pen ua ; move ul , 3 ; move 4 , ua / 3 )  
[5354] ( move 4 , 4 ; pen ul - ua ; move ua , 4 )  
[5355] ( move 4 - ul , 2 ; move 4 - 2 , 2 - 4 )  
[5356] ( move 4 , 4 ; move ul - ua , 3 ; pen ul )  
[5357] ( move 2 * 2 , ul / 3 ; move 4 + 3 , 2 )  
[5358] ( move 3 , 4 ; pen ul ; move ua , ul / 2 )  | ( move ua / 2 , 4 ; move ua , 2 / 4 ; v0 = ul )  
[5359] ( move 4 + 2 , 4 + 4 ; move 2 , ul / 2 )  
[5360] ( move 3 , 4 / 3 ; move ua - 2 , 3 * 2 )  
[5361] ( move 4 , 4 + 3 ; move 4 + 3 , 4 + ul )  
[5362] ( move 2 , 4 + 3 ; move 4 / 2 , ul - 3 )  
[5363] ( move ul , ul - 3 ; move 4 , ul ; pen 4 )  | ( v0 = ul ; move v0 , v0 - 3 ; move 4 , v0 )  | ( ( pen ua ; move ul , ul - 3 ; pen ul ) ; move 4 , ul )  
[5364] ( pen ul ; move ua , ul / 3 ; move 4 , 3 )  
[5365] ( move 4 * 2 , 4 + 3 ; move 3 , 4 - ua )  
[5366] ( move ul , ua ; move 4 , 4 / 3 ; pen ua )  
[5367] ( move 2 , ul / 3 ; move 4 , ul ; pen ul )  | ( pen 4 * 4 ; move 2 , ul / 3 ; move 4 , ul )  | ( move ul , 2 / ua ; move ul , ua ; move 4 , ul )  
[5368] ( move 4 , 4 / 3 ; move ua , ul ; pen ua )  
[5369] ( move ul - 4 , 3 + 2 ; move 3 , 4 * 3 )  
[5370] ( move 4 * 2 , 3 / 4 ; move 2 , 2 + ul )  
[5371] ( move 3 + ul , 4 * 2 ; move 4 - 3 , 4 )  
[5372] ( move 3 , 4 / ua ; move 2 * 2 , 4 * 2 )  
[5373] ( move ua , 0 ; move ua , 2 ; move ul , ul )  | ( move ua , ua * 4 ; move ua , 2 ; move ul , ua + ul )  
[5374] ( move 3 , 4 * 2 ; move 4 - ul , 3 - 4 )  
[5375] ( move 2 - ua , 4 ; move 3 / 2 , 4 * 4 )  
[5376] ( move ul , ul ; pen ul / 3 ; move 4 , 4 )  
[5377] ( move ua , ua ; move ua , 2 ; move ua , 3 )  
[5378] ( move ul , 0 ; move 2 , ul ; move ua , ul )  | ( move ul , 0 ; move 3 - ul , ul ; move ua , ul )  
[5379] ( move ua , 0 ; move ul , 2 ; move ul , ul )  | ( ( move ua , ua ; move ul , 2 ) ; move ul , ul )  | ( move ua , 0 ; ( move ul , 2 ; move ul , 2 - ul ) )  | ( move ua , ua ; pen ul ; ( move ul , 2 ; move ul , ul ) )  
[5380] ( move ul , 0 ; move ul , ul ; move ua , 2 )  | ( move 2 , ua ; ( move ul , ul ; move ua , 2 ) )  | ( move 0 , ua ; move ul , ua ; ( move ul , ul ; move ua , 2 ) )  
[5381] ( move ua , 2 ; move ul , 2 ; move ua , ul )  | ( move ua , 2 ; ( move ul , 2 - ua ; pen 2 ) ; move ua , ul )  
[5382] ( move ul , ua ; move 2 , ul ; move ua , 2 )  | ( move ul , ua ; ( move 2 , ul ; move ua , 2 ) )  
[5383] ( move ul , 0 ; move 2 , ul ; move ul , ul )  | ( move ul , ua ; move 2 , ul ; move ul , ul )  | ( move ul , ua * 3 ; move ul + ul , ul ; move ul , ul - ua )  | ( move 2 - ul , 0 ; pen ua ; ( move 2 , ul ; move ul , ul ) )  
[5384] ( move ua , ua ; move 3 , 2 ; move ua , ul )  
[5385] ( move ua , ua ; move ul , ul ; move 2 , 2 )  | ( move ua , 0 ; move ul , ul ; move ul + ul , 3 - ul )  
[5386] ( move ua , ua ; move ua , 2 ; move 3 , ul )  
[5387] ( move 3 , 0 ; move ul , ul ; move ua , ul )  | ( move 3 , 0 ; move ul , ua + ul ; move ua , ul )  | ( move 3 , ua ; ( move ul , ul ; move ua , ul ) )  | ( move 3 , ua + ua ; move ul , ul - ua ; move ua , ul )  | ( move 3 , ua ; move ul , ul ; ( pen ul ; move ua , ul ) )  
[5388] ( move ul , ul ; move ua , ul ; move 2 , 2 )  
[5389] ( move 4 , ua ; move ua , 2 ; move ua , ul )  
[5390] ( move ua , ua ; move 3 , ul ; move 2 , ul )  
[5391] ( move ua , ul ; move ua , 3 ; move 2 , ul )  | ( move ua , ul ; move ua , 3 ; ( pen ul ; move 2 , ul ) )  
[5392] ( move ua , ul ; move 2 , ul ; move ua , 3 )  
[5393] ( move ul , 0 ; move ua , ul ; move ul , 4 )  | ( move ul , ua ; move ua , ul ; move ul , 4 )  | ( ( move ul , ua ; move ua , ul ) ; move ul , 3 + ul )  
[5394] ( move ul , 2 ; move ua , ul ; move 2 , ul )  
[5395] ( move 2 , ua ; move ua , 3 ; move ul , ul )  | ( move ul + ul , 0 ; move ua , 3 ; move ul , ul )  
[5396] ( move ua , ul ; move ul , 2 ; move 2 , ul )  | ( ( move ua , ua + ul ; move ul , 2 ) ; move 2 , ul )  
[5397] ( move ua , ua ; move ua , 3 ; move 3 , ul )  | ( pen ua ; ( move ua + ul , ua ; move ua , 3 ) ; move 3 , ul )  
[5398] ( move 3 , 0 ; move ul , ul ; move ul , ul )  | ( ( move 3 , ua ; move ul , ul ) ; move ul , ul )  | ( move 2 + ul , ua ; move ul , ul ; move ul , ul )  | ( pen 4 - 3 ; ( move 3 , ua ; move ul , ul ) ; move ul , ul )  
[5399] ( move 3 , ua ; move ul , ul ; move ul , 2 )  | ( move 3 , 0 ; move ul , ua + ul ; move ul , 2 )  
[5400] ( move ua , ul ; move 3 , ul ; move ua , 3 )  
[5401] ( move ul , 2 ; move ul , ul ; move ua , 3 )  | ( move ul , 4 / 2 ; move ul , ua + ul ; move ua , 2 + ul )  
[5402] ( move ul , ua ; move ua , ul ; move 2 , 4 )  
[5403] ( move ua , ul ; move ua , 2 ; move 4 , ul )  
[5404] ( move ul , 0 ; move ul , ul ; move 4 , ul )  
[5405] ( move ua , 3 ; move ul , ul ; move 2 , ul )  | ( move ua , 3 - ua ; move ul , ul ; move 4 / 2 , 3 - 2 )  
[5406] ( move ul , ul ; move ul , 2 ; move ua , 3 )  | ( ( move ul , ul ; move ul , 2 ) ; move ua , 3 ; move ul , 3 )  
[5407] ( move ul , ua ; move 3 , 2 ; move ul , ul )  | ( move ul , ua ; ( move 3 , 4 / 2 ; move ul , ul - ua ) )  
[5408] ( move ul , 0 ; move 4 , ul ; move ul , ul )  | ( move ul , ua ; move 4 , ua + ul ; move ul , ul )  | ( move ul , ua ; ( move 4 , ua + ul ; move ul , ul ) )  
[5409] ( move 2 , ul ; move ul , 3 ; move ua , ul )  
[5410] ( move 2 , ul ; move ul , ul ; move 2 , ul )  
[5411] ( move ul , ul ; move 2 , 2 ; move ul , ul )  
[5412] ( move 2 , ul ; move 3 , ul ; move ua , ul )  
[5413] ( move ul , 2 ; move 2 , ul ; move ul , ul )  | ( move ul , ul + ul ; move 2 , ul ; move ul , ul )  
[5414] ( move ua , ua ; move ul , ul ; move 4 , 2 )  | ( move ua , ua ; move ul , ul ; move 3 + ul , 2 )  | ( move ua , ua ; move ul , ul - ua ; move 4 , ua + 2 )  
[5415] ( move ua , 4 ; move ul , ul ; move ua , 2 )  | ( move ua , 4 ; ( move ul , 2 - ul ; move ua , 2 ) )  
[5416] ( move 3 , ua ; move ua , ul ; move 3 , ul )  
[5417] ( move ua , ul ; move ul , ul ; move 2 , 4 )  | ( move ua , ul ; move 2 - ul , ul ; move 2 , 4 )  | ( move ua , ul ; move ul , ul ; move ul + ul , 4 )  
[5418] ( move ul , ua ; move 2 , ul ; move 4 , ul )  
[5419] ( move ua , 2 ; move 4 , ul ; move ul , ul )  
[5420] ( move 3 , ul ; move ul , ul ; move 2 , ul )  | ( move 3 , ul ; ( move ul , ul ; move 2 , 2 - ul ) )  
[5421] ( move 2 , ul ; move ul , ul ; move ul , 3 )  
[5422] ( move ua , ua ; move ua , 4 ; move 4 , ul )  | ( move ua , 0 ; move ua , 4 ; move 3 + ul , ua + ul )  
[5423] ( move ua , ua ; move 4 , ul ; move 3 , ul )  
[5424] ( move 4 , ua ; move ua , ul ; move 3 , ul )  | ( ( move 4 , 0 ; move ua , ul ) ; move 3 , ul )  | ( move 2 * 2 , ua ; move ua , ua + ul ; move ua / 2 , ul )  
[5425] ( move ul , 3 ; move 2 , ul ; move ul , ul )  
[5426] ( move ul , ul ; move 2 , ul ; move ua , 4 )  
[5427] ( move 3 , ul ; move ul , 2 ; move ul , ul )  
[5428] ( move ul , 2 ; move ul , ul ; move 3 , ul )  | ( move ul , 3 - ul ; move ul , ul ; move 3 , ul )  
[5429] ( move ua , 3 ; move ul , ul ; move ua , 4 )  
[5430] ( move 4 , ul ; move 2 , ul ; move ua , ul )  
[5431] ( move ua , 3 ; move ul , 3 ; move ul , ul )  
[5432] ( move ua , ua ; move ul , ul ; move 4 , 3 )  
[5433] ( move ua , ul ; move ul , ul ; move 4 , 2 )  
[5434] ( move ul , ua ; move ul , ul ; move 2 , 4 )  
[5435] ( move 2 , ul ; move 3 , ul ; move ul , ul )  
[5436] ( move ul , ua ; move ul , 4 ; move 2 , ul )  | ( move ul , ua ; move ul , 3 + ul ; move 2 , 2 - ul )  
[5437] ( move ul , ua ; move 3 , ul ; move ul , 4 )  
[5438] ( move 2 , ul ; move ul , 4 ; move ul , ul )  
[5439] ( move ul , ul ; move 2 , ul ; move ul , 4 )  
[5440] ( move 4 , ul ; move ua , 4 ; move ul , ua )  | ( ( move 4 , ul ; move ul , 4 ) ; move ua , ua )  
[5441] ( move ua , ua ; move ul , 4 ; move 4 , ul )  
[5442] ( move 3 , 4 ; move ua , ul ; move ul , ul )  
[5443] ( move ul , ul ; move 4 , ul ; move ul , 2 )  
[5444] ( move ul , ua ; move 4 , ul ; move 3 , ul )  
[5445] ( move 4 , ul ; move ul , ul ; move ul , 2 )  | ( move 4 , ul ; move ul , ul ; move ul , 2 - ua )  | ( move 4 , ul ; move ul , ul ; move ul , 3 - ul )  
[5446] ( move ul , ul ; move ul , ul ; move 4 , 2 )  | ( move ul , ua + ul ; move ul , ul ; move 4 , ul + ul )  
[5447] ( move ul , 3 ; move ul , 4 ; move ua , ul )  
[5448] ( move ul , 3 ; move ul , ul ; move 3 , ul )  
[5449] ( move ul , 4 ; move 3 , ul ; move ua , ul )  | ( move ul , 4 ; ( move 3 , ul ; move ua , ul ; pen 2 / ua ) )  
[5450] ( move ul , ul ; move 3 , ul ; move 3 , ul )  | ( move ul , ul ; ( pen ua ; move 3 , ul ) ; move 3 , ul )  | ( move 0 , 0 ; ( move ul , ul ; move 3 , ul ; move 3 , ul ) )  
[5451] ( move 4 , ul ; move ul , 3 ; move ua , ul )  
[5452] ( move ua , ul ; move 3 , 4 ; move ul , ul )  
[5453] ( move 4 , ul ; move ul , 2 ; move ul , ul )  
[5454] ( move ul , ua ; move 3 , 4 ; move ul , ul )  | ( move ul , ua ; ( move 3 , 3 + ul ; move ul , ul ) )  
[5455] ( move 3 , 4 ; move ul , ul ; move ua , ul )  
[5456] ( move ul , ul ; move 4 , ul ; move 3 , ul )  
[5457] ( move ul , ua ; pen 0 ; move ua + ul , 0 )  | ( ( pen 4 ; move ul - 2 , 0 ) ; pen 0 ; move ua + 2 , 0 )  
[5458] ( move ua , ul ; move 4 , 4 ; move ul , ul )  
[5459] ( move ul , ua ; move 4 , ul ; move 4 , ul )  
[5460] ( move 4 , ul ; move 3 , ul ; move ul , ul )  
[5461] ( move 3 , ul ; move ul , ul ; move 4 , ul )  
[5462] ( move ul , 4 ; move 4 , ul ; move ua , ul )  
[5463] ( move ul , 4 ; move ul , 4 ; move ua , ul )  
[5464] ( move 0 - 2 , ua + 2 ; move 2 + ul , 2 )  | ( ( move 0 , ua ; move ul - 3 , 2 ; pen ua ) ; move 3 , 2 )  | ( ( move ul - 3 , 2 ; pen ua ; pen ua ) ; move 3 , ua + 2 )  
[5465] ( move ua , ua - ul ; pen 0 ; move ul , 0 )  
[5466] ( move ul , ul ; move 4 , ul ; move 4 , ul )  
[5467] ( move 0 - 2 , ua ; move ua - 2 , 4 + 2 )  
[5468] ( move ua , ua ; pen 0 ; move 2 , ul - ua )  | ( move ua , ua ; pen 0 ; move ul + ul , ul )  
[5469] ( move ul , ua ; pen 0 ; move ua + ul , 2 )  
[5470] ( move ul , ua + 2 ; move 0 - 4 , 3 + 2 )  
[5471] ( move ua + 3 , 2 - 3 ; move 0 - ul , 2 )  
[5472] ( move ua , ul / ua ; pen 0 ; move ul , 0 )  
[5473] ( move 0 , 2 + ul ; move 2 + 2 , ua / 3 )  | ( v0 = ua * ua ; move 4 , v0 - 3 ; pen ul )  
[5474] ( move 2 , 0 - ua ; move 2 + 2 , 3 / ua )  
[5475] ( move ua + 2 , ul ; pen 0 ; move ul , ul )  | ( ( pen ul ; move ua + ul , ul ) ; pen 0 ; move ul , ul )  
[5476] ( move 3 - ua , ua ; pen 0 ; move ul , ul )  | ( move 3 , 0 - ua ; pen 0 ; move ul , 2 - ua )  | ( move ua - 3 , ua ; pen 0 - 3 ; move ul , 2 )  
[5477] ( move ul + ul , 3 ; pen 0 ; move ua , ul )  
[5478] ( move 0 - 4 , ua ; move ul / 2 , 0 - 2 )  
[5479] ( move 4 + 3 , 0 ; move 3 + ul , ua - 2 )  
[5480] ( move 2 , 3 - ua ; move 0 - 4 , 3 - ua )  
[5481] ( move 2 , 3 - ul ; move 3 + 2 , ua - 2 )  
[5482] ( move ua , 4 - ul ; pen 0 ; move ul , ua )  
[5483] ( move 0 - ua , ua - 2 ; move 2 , 2 / 4 )  
[5484] ( move ua , 4 + 2 ; move 0 - ul , 4 + 3 )  
[5485] ( move ua , ul ; pen 0 ; move ul - 3 , ul )  
[5486] ( move ua , ua ; pen 0 ; move ul , ul / 2 )  | ( move ua , ua * 3 ; pen 0 ; move ul , ul / 2 )  
[5487] ( move 4 - ua , 0 ; move 4 + 2 , ul - 2 )  | ( move ul - 4 , 0 ; move ua / 2 , ua - ul ; move 3 , ua )  
[5488] ( move 4 + ul , ua ; pen 0 ; move ul , ul )  | ( move 3 + 2 , ua ; pen ul - ua ; move ul , ul )  
[5489] ( move ua - ul , 2 ; pen ul ; move ua , 2 )  | ( move ua - ul , 2 ; v0 = 2 - ua ; move ua , v0 )  
[5490] ( move ua , ul ; pen 0 ; move ua - 4 , ul )  
[5491] ( move 0 , ua ; pen ul / ua ; move ua , 3 )  
[5492] ( move ua / 2 , ul ; pen 0 ; move ua , ul )  
[5493] ( move 3 + ul , 0 ; move 3 + 2 , ul / 3 )  | ( move 4 , ua ; move 4 + ul , 2 / ua ; pen 4 )  | ( move 4 , ua ; ( move 3 + 2 , 2 / ua ; pen 2 - ua ) )  
[5494] ( move ua , ua / 2 ; pen ua ; move ua , 3 )  | ( move ua , 3 ; move ua , ul - 4 ; pen ua )  | ( move 2 , ua ; move ua , ua / 2 ; move ua , 3 )  
[5495] ( move ul , 2 / ua ; move ua , 2 ; pen ua )  | ( move ul , 2 / ua ; pen ul ; move ua , 2 )  
[5496] ( move ul , ua ; pen 0 ; move 3 , ul / ua )  
[5497] ( pen ua ; move ul - ua , 3 ; move 2 , ul )  | ( move ul - ua , 3 ; move 2 , ul ; v0 = 3 )  | ( move ul - ua , 3 ; v0 = 2 ; move v0 , ul )  | ( move 2 / ua , 3 ; ( move ul - ua , 0 ; move 2 , ul ) )  | ( move ul , 3 ; move ul - ua , ua * 3 ; move 2 , ul - ua )  
[5498] ( v0 = 3 * 2 ; move v0 , ua / v0 )  | ( v0 = ua / 3 ; move ua , v0 + v0 )  
[5499] ( move 2 , ua * 2 ; move 2 + ul , 4 + 3 )  
[5500] ( v0 = 2 - ua ; move v0 , 4 / v0 )  | ( v0 = ua / 3 ; move 4 , v0 - 3 ; pen v0 )  
[5501] ( move 4 + 3 , 0 ; move ua + 2 , ua / 4 )  
[5502] ( move 0 , 3 * 2 ; move ul - ua , 4 + 3 )  | ( move 0 , ua + 2 ; move ul - ua , ua / 4 )  | ( move 0 , ul / ua ; move ua - ul , ul / 4 )  
[5503] ( move 4 + 2 , 4 ; move 3 + ul , ua + 2 )  
[5504] ( v0 = 3 / ua ; move 4 , v0 + v0 )  
[5505] ( move 3 * 2 , ua + 4 ; move ua - 2 , 2 )  
[5506] ( move ua - ul , ul ; pen 0 ; move ul , 4 )  | ( move ul - ua , ul - ua ; move 3 / ua , 4 )  
[5507] ( move 3 - ua , 2 ; move 2 * 2 , 3 - ua )  
[5508] ( move 2 * 2 , 0 - 4 ; move ua , ua - 4 )  
[5509] ( move 2 * 2 , ul ; move 3 + ul , 3 + 2 )  | ( ( pen 4 + ul ; move 4 , ul ) ; move 4 , 4 + ul )  | ( move 4 , ul ; move 3 , 4 + ul ; move 3 - 2 , ua * 2 )  
[5510] ( move ul , ua ; pen 3 / ua ; move ua , 2 )  
[5511] ( move ua , 2 + ul ; move 3 + 3 , 3 / 2 )  
[5512] ( move 0 - 4 , 4 + ul ; move 4 , 2 + ul )  
[5513] ( move ul , 0 - 2 ; move 4 + 3 , ul / 2 )  
[5514] ( move ua , 4 + 3 ; move ua + 2 , 3 * 3 )  
[5515] ( move 3 * 2 , ua - 4 ; move 2 , 2 + ul )  | ( ( move ua , ua - 4 ; pen 3 ) ; move 2 + ul , 3 )  | ( move 3 * 2 , ua - 4 ; move ua / 3 , 3 ; v0 = 2 )  
[5516] ( pen ua ; move ul - 4 , ul ; move ua , 2 )  | ( move 0 - 3 , ul ; ( move 0 , ul ; move ua , ul ) )  
[5517] ( move 3 , 2 / 3 ; move 0 - ul , ul - 2 )  
[5518] ( move 2 , 3 + ul ; move 3 + 2 , ua / 3 )  
[5519] ( move ul / 2 , 0 ; move ua + 2 , 2 / 4 )  | ( move 3 / ua , ua ; move ua + 2 , 3 / ua )  
[5520] ( move 0 - 3 , ua + 4 ; move ul , 4 * 2 )  
[5521] ( move ua , 4 + 3 ; move 4 + 4 , 2 + ul )  
[5522] ( move ua , ua / 3 ; move ul , 2 ; pen ul )  | ( move ua , ua / 3 ; ( pen 2 ; move ul , 2 ; pen 4 ) )  
[5523] ( move 4 , 4 * 4 ; move 0 - 2 , ua + ul )  
[5524] ( move 2 + 2 , 3 ; move ua - ul , 4 * 3 )  
[5525] ( move ua , ua ; pen ul - 3 ; move 4 , ul )  | ( move ua , ua ; pen ul - ua ; move 4 , ul )  | ( ( move ua , ua ; pen 0 ; move 4 , ul - ua ) ; pen ua )  
[5526] ( move 4 + 2 , ua * 2 ; move ua , 3 * 3 )  | ( move ua , ua ; ( move ua , 3 * 3 ; v0 = 3 ) )  
[5527] ( move 0 - 4 , 3 ; move ul - 4 , ua + 4 )  
[5528] ( move 3 * 2 , 4 - ul ; move 3 , ua + 2 )  
[5529] ( move ua - 2 , ua * 4 ; move 3 + 2 , 4 )  
[5530] ( move 3 + 2 , 4 ; move 4 - ua , 3 + ul )  
[5531] ( pen 2 ; move ua , ua / 3 ; move ul , ul )  
[5532] ( move ul - ua , ul ; move 4 , 2 ; pen ul )  
[5533] ( move 4 , 2 - ua ; move ul - 4 , 3 + 2 )  
[5534] ( move ua + 2 , ua * 4 ; move 2 , 3 * 3 )  
[5535] ( move 2 + 2 , 3 - ul ; move 4 , 4 + ul )  
[5536] ( move ua , 3 ; pen ul ; move ua , ua / 4 )  
[5537] ( move ul , ul ; pen ul / ua ; move 3 , 2 )  | ( pen ua ; ( move ul , ul ; pen 0 ) ; move 3 , 2 )  
[5538] ( move 3 - ua , 4 + ul ; move 4 - 2 , 3 )  
[5539] ( move 2 , 2 + ul ; move 4 + 3 , ua / 4 )  
[5540] ( move ul - 3 , 2 ; move 3 * 2 , ua - 4 )  
[5541] ( move 4 - ua , 3 ; move 0 - ua , 3 / 4 )  
[5542] ( move ul - 2 , 3 + 3 ; move 3 , ul / 2 )  
[5543] ( pen ul ; move ua - ul , ul ; move 4 , 3 )  | ( move ua - ul , ul ; pen ul ; move 4 , 3 )  | ( move ua - ul , ul ; ( move 0 , ul ; move 4 , 2 ) )  
[5544] ( move 4 , ul ; pen ul / ua ; move ua , 2 )  | ( pen ua + 4 ; ( move 4 , ul ; pen 0 ) ; move ua , 2 )  | ( pen ul ; ( move 4 , ul ; pen ul - 4 ) ; move ua , 2 )  
[5545] ( move 4 + 2 , ua / 4 ; move 4 , ua + 2 )  
[5546] ( move 3 , 4 + 4 ; move 2 * 2 , ul + ul )  
[5547] ( move ua , 2 / ua ; move 4 + 2 , 4 - 3 )  
[5548] ( move 3 , 4 - 2 ; move ul - 3 , ul - 2 )  | ( move 2 , ul ; move ul - 4 , ul ; v0 = ul )  | ( pen ua ; move ua / 3 , ul ; move ul - 4 , ul )  
[5549] ( move 3 - 2 , ua + 2 ; move 4 , ul / 4 )  | ( move ul , 2 ; v0 = 4 ; move 4 , ul / v0 )  
[5550] ( move ul - ua , 3 - 4 ; move 3 , 2 - 4 )  
[5551] ( move 4 + 3 , ul + ul ; move 2 , 2 / 4 )  
[5552] ( move ua + 3 , 3 * 3 ; move ua / 2 , 4 )  
[5553] ( move 2 / ua , ul ; move 4 * 2 , 3 - 2 )  | ( move ul / 3 , ul ; move 2 , ul ; move ua , ua )  
[5554] ( move ul - 4 , 0 - 4 ; move ul , 4 * 2 )  
[5555] ( move ua , ul / 4 ; pen ul ; move 2 , ul )  | ( move ua , ul / 4 ; ( pen 2 ; move 2 , ul ) )  
[5556] ( move ua + 3 , 2 / 3 ; move ua , 4 / 2 )  
[5557] ( move ul - 4 , 3 ; move 3 + ul , 4 + 3 )  
[5558] ( move ul , 4 / 3 ; move ua / 2 , 0 - 3 )  
[5559] ( move ua , 4 * 4 ; move ua - 2 , 4 + 3 )  
[5560] ( move 3 , ul ; move ua , 4 / ua ; pen ul )  
[5561] ( move ua / 2 , 4 * 3 ; move 3 + ul , 2 )  
[5562] ( move 4 + ul , 3 * 2 ; move 2 , 4 - ul )  
[5563] ( move 3 / ua , 0 ; move 3 * 2 , ua / 4 )  
[5564] ( move ul - 4 , 4 * 3 ; move 2 + ul , 2 )  
[5565] ( move ul + ul , 0 ; move 4 + 4 , 4 * 4 )  
[5566] ( move ul , ua / 4 ; move 3 * 2 , 3 + 2 )  
[5567] ( move ul , 4 - 2 ; move ua + 3 , 2 / 4 )  
[5568] ( move ul - 4 , 4 * 3 ; move 3 , ua + 3 )  
[5569] ( move ua + 4 , 4 + 3 ; move 2 / 4 , ul )  
[5570] ( move ua - 4 , ua + 3 ; move 4 , 4 * 3 )  
[5571] ( move ul , ua ; pen ul / ua ; move 4 , 4 )  
[5572] ( move 2 , ul / 4 ; move 2 + ul , 2 / 3 )  
[5573] ( move 4 , 3 * 2 ; move 3 / ua , ua + 4 )  
[5574] ( move 3 , ul ; pen ul / 4 ; move ul , ua )  | ( move 3 , ul ; pen ul / 4 ; ( move ul , 0 ; pen ul ) )  
[5575] ( move 4 - ul , 4 + ul ; move 4 + 4 , 2 )  
[5576] ( move 2 - 4 , 4 - ua ; move 3 - ul , 4 )  
[5577] ( move ua - 3 , 3 / ua ; move 3 , 2 / 3 )  
[5578] ( move 3 , 4 / ua ; pen ul ; move ul , ul )  | ( move 2 + ul , 2 / 3 ; pen ul ; move ul , ul )  
[5579] ( move ul - 4 , 3 / ua ; move 3 - 2 , 3 )  
[5580] ( move 3 - ua , 4 * 3 ; move ul , 4 * 2 )  
[5581] ( move 3 / ua , ul ; move 0 - 4 , 4 * 4 )  
[5582] ( move ul , 3 - ul ; move 2 * 2 , 3 / 4 )  
[5583] ( move ul , ul ; pen ul / 3 ; move 4 , ul )  
[5584] ( move ua / 4 , 4 + 2 ; move 4 * 2 , ul )  
[5585] ( move 2 - 4 , 4 ; move 4 + ul , ul / 3 )  
[5586] ( move 4 * 2 , 4 + ul ; move 4 , ua / 3 )  
[5587] ( move 4 + 3 , ul + ul ; move 4 , 4 / 3 )  
[5588] ( move 4 / 3 , ul - 4 ; move 3 , 2 / ua )  
[5589] ( move ua , 0 ; move ul , ul ; move ua , ul )  | ( move ua , ua ; move ul , ul ; move ua , ul )  | ( ( move ua , ua ; move ul , ul ) ; move ua , ul )  | ( move ua , ua ; move ul , ul ; move ua , ul - ua )  
[5590] ( move 3 - ua , 4 ; move 4 / 2 , ul / 3 )  
[5591] ( move ul , 0 ; move ul , ul ; move ua , ul )  | ( move 2 , ua ; move ul , ul - ua ; move ua , ul )  | ( ( move ul , 0 ; move ul , 0 ; move ul , ul ) ; move ua , ul )  
[5592] ( move ua , ua ; move 2 , ul ; move ua , ul )  
[5593] ( move ua / 3 , 4 * 3 ; move 4 / 2 , ul )  | ( move 2 , 4 * 3 ; v0 = ul ; move ul + v0 , v0 )  
[5594] ( move ua , 0 ; move ul , ul ; move ul , ul )  | ( move ua , ua ; move ul , ul ; move ul , ul )  | ( move ua , ua ; move ul , ul ; move ul , 2 - ul )  | ( move ua , ua * 3 ; move ul , ul ; move ul , ul )  | ( move ua , ua ; ( move ul , ul ; move ul , ul ) )  | ( ( move ua , ua ; move ul , ul ; move ul , ul ) ; pen ul )  
[5595] ( move ua , ua ; move ul , ul ; move ua , 3 )  | ( ( move ua , ua ; move ul , ul ) ; move ua , 3 - ua )  
[5596] ( move ua , ua ; move 2 , ul ; move ul , ul )  
[5597] ( move ua , ul ; move ul , 2 ; move ua , ul )  
[5598] ( move ua , ul ; move 3 , ul ; move ua , ul )  | ( move ua , ua + ul ; move 2 + ul , ul ; move ua , ul )  
[5599] ( move ua , ul ; move ul , ul ; move ul , 2 )  | ( move ua , ul ; move ul , ul ; move ul , 4 * 2 )  
[5600] ( move ua , ua ; move ul , 3 ; move ul , ul )  | ( ( move ua , ua ; move ul , 3 ) ; move ul , ul )  | ( ( move ua , ua ; move ul , 3 ) ; move ul , ul ; move 0 , ul )  
[5601] ( move ul , ul ; move ua , ul ; move 2 , ul )  
[5602] ( move ua , ul ; move ul , ul ; move 2 , ul )  | ( ( move ua , ul ; move ul , ul ) ; move 2 , ul )  | ( move ua , ul ; ( move ul , ua + ul ; move 2 , ul ) )  | ( move ua , ul ; ( move ul , ul ; v0 = ul ) ; move 2 , ul )  | ( ( move ua , ul ; pen ul ; move ul , ul ) ; move 4 - 2 , ul )  
[5603] ( move ul , ul ; move ua , ul ; move ul , 2 )  | ( move ul , 4 - 3 ; move ua , ul ; move ul , 2 )  | ( move ul , ul ; ( pen 3 ; move ua , ul ) ; move ul , 2 )  | ( ( move ul , ul ; move ua , ul ; move ul , 2 ) ; move 0 , 4 )  
[5604] ( move ua , ul ; move ul , 2 ; move ul , ul )  | ( move 3 * 2 , ul ; move ul , 2 ; move ul , ul )  
[5605] ( move ua , ua ; move 3 , ul ; move ul , ul )  | ( move ua , ua ; move 3 , ul ; ( pen ul ; move ul , ul ) )  
[5606] ( move ua , ul ; move ua , 3 ; move ul , ul )  
[5607] ( move ul , ua ; move ul , ul ; move ua , 4 )  
[5608] ( move 3 , ul ; move ua , ul ; move ul , ul )  | ( move 2 + ul , ua + ul ; move ua , ul ; move ul , ul )  
[5609] ( move ua , ul ; move ul , ul ; move 3 , ul )  | ( ( move ua , ul ; move ul , ul ) ; move 3 , ul )  
[5610] ( move 2 , ul ; move ul , ul ; move ul , ul )  | ( move 2 , ul ; move ul , ul ; move ul , ua + ul )  | ( move 2 , ul ; ( move ul , ul ; move 2 - ul , 2 - ul ) )  
[5611] ( move ul , ua ; move ul , ul ; move 3 , ul )  | ( move ul , ua ; move ul , ul ; move 3 , ul - ua )  
[5612] ( move ua , 3 ; move ul , ul ; move ul , ul )  | ( move ua , 3 ; ( move ul , ul ; move ul , ul ) )  
[5613] ( move 4 , ua ; move ua , ul ; move ul , ul )  | ( ( move 4 , ua ; pen ul ; move ua , ul ) ; move ul , ul )  
[5614] ( move ul , ua ; move ua , 4 ; move ul , ul )  | ( move ul , 0 ; move ua , 2 * 2 ; move ul , ul )  | ( move ul , 0 ; ( move ua , 4 ; move ul , ul ) )  | ( ( move ul , ua ; move ua , 4 ) ; move ul , ul )  
[5615] ( move 3 , ul ; move ul , ul ; move ua , ul )  
[5616] ( move ul , 4 ; move ua , ul ; move ua , ul )  | ( ( move ul , 4 ; move ua , ul ) ; move ua , ul )  
[5617] ( move ua , ul ; move 3 , ul ; move ul , ul )  | ( move ua , ul - ua ; move 3 , ua + ul ; move ul , ul )  | ( move ua , ul ; ( move 3 , ul ; move ul , ul ; pen ua ) )  
[5618] ( move ul , ul ; move ua , ul ; move ul , 4 )  | ( move ul , ul ; move ua , ul ; move ul , 2 * 2 )  | ( move ul , ul ; pen 4 ; ( move ua , ul ; move ul , 2 + 2 ) )  
[5619] ( move ul , ul ; move ua , ul ; move 4 , ul )  
[5620] ( move ua , ul ; move ul , ul ; move 4 , ul )  
[5621] ( move 4 , ua ; move ul , ul ; move ul , ul )  | ( move 4 , 0 ; ( move ul , ul ; move ul , ul ) )  | ( move 4 , 0 ; move ul , ul ; move ul , ul - ua )  | ( move 4 , ua * 3 ; move ul , ul ; move ul , ul )  | ( move 3 + ul , ua ; ( move ul , ul ; move ul , ul ) )  
[5622] ( move ul , ul ; move 4 , ul ; move ua , ul )  | ( ( move ul , ua + ul ; move 4 , ul ) ; move ua , ul )  
[5623] ( move 4 , ul ; move ul , ul ; move ua , ul )  
[5624] ( move ul , ul ; move ua , 4 ; move ul , ul )  | ( move ul , ul ; move ua , 3 + ul ; move ul , ul )  | ( move ul , ul ; ( move ua , 4 ; move ul , ul - ua ) )  
[5625] ( move ua + 2 , ul ; move 0 - 2 , ua + 2 )  
[5626] ( move ul , ul ; move 4 , ul ; move ul , ul )  | ( move ul , ul ; move 4 , ul ; move ul , ua + ul )  | ( ( pen ul ; move ul , ul ; move 4 , ul ) ; move ul , ul )  
[5627] ( move 4 + ul , 0 ; move 0 - ua , ua + 2 )  
[5628] ( move ul , ul ; move ul , ul ; move 4 , ul )  | ( ( move ul , ul ; move ul , ul ) ; move 2 * 2 , ul )  
[5629] ( v0 = 0 - ua ; move v0 , v0 * ua )  | ( pen ul ; v0 = ul - ua ; move ua , v0 * ua )  
[5630] ( move 3 , ua + ul ; move 0 - 3 , ua + 3 )  
[5631] ( move 0 - 4 , 0 - ua ; move 3 , ua - ul )  
[5632] ( move ua - ul , ua ; pen 0 ; move ul , ua )  | ( ( move ul - ua , 0 ; pen 0 ) ; move ua , ua ; v0 = ua )  | ( ( pen ua ; move ua - ul , ua ) ; pen ul / 4 ; move ul , 0 )  
[5633] ( move 3 + 2 , 2 + ul ; move ua + ul , 2 )  
[5634] ( move 2 , ua * 2 ; move ua + 3 , 0 - ul )  
[5635] ( move 0 - ua , 4 + ul ; move ua , 4 + 2 )  
[5636] ( move ul - 2 , 0 ; move ua - 2 , ua - 4 )  
[5637] ( move ul , 0 - 2 ; move 2 - ua , ul - 3 )  
[5638] ( move 4 + 3 , ua + ua ; move 2 - ua , 2 )  
[5639] ( move 3 + 3 , ul + ul ; move 2 , 0 - ul )  
[5640] ( move ul + ul , ul ; pen 0 ; move ua , ul )  | ( ( move 3 - ul , ul ; pen ul - 3 ) ; move ua , ua + ul )  
[5641] ( move ua + 2 , 2 / ua ; move ul - 2 , 2 )  
[5642] ( move ua + 2 , 2 - 4 ; move 2 , ul + ul )  
[5643] ( v0 = ua + 4 ; move v0 , ua / v0 )  
[5644] ( v0 = ua + ul ; move v0 , v0 / 3 )  | ( move ul , 4 * 3 ; pen ul ; move ua + ul , 3 )  
[5645] ( move ua , ua - 2 ; move 4 + 3 , ua + 3 )  
[5646] ( move 3 - ul , 0 ; move ul - 4 , 0 - ul )  
[5647] ( move 0 - ul , ul ; move ua + 3 , 2 - 4 )  | ( move ul , 0 - 2 ; move ua + 3 , ua + ul ; v0 = 2 )  
[5648] ( move ua - 2 , 2 * 2 ; move 2 , ua * ua )  
[5649] ( move ul , 2 ; move ua , ua * ua ; pen ua )  | ( move 0 , ul ; move ul , ul ; move ua , ua * ua )  | ( v0 = ua ; move ul , 2 ; move v0 , ua * ua )  
[5650] ( move ua , ul - 3 ; move 3 + ul , 0 - 3 )  
[5651] ( move 4 + 2 , ul - ua ; move 0 - 3 , ul )  | ( move 4 + 2 , ul ; move 0 - 3 , ul ; v0 = ua )  
[5652] ( move 4 + 2 , 3 ; move ua + ul , ua - 2 )  
[5653] ( move 3 - ua , 3 ; move 0 - 4 , ua + ul )  
[5654] ( move ua - 3 , ua + 2 ; move ua + 3 , 4 )  
[5655] ( move ul + ul , ua ; move 4 + 3 , 2 + 2 )  | ( move 2 , ua ; move 4 + 3 , 4 ; pen ul / 2 )  
[5656] ( move 3 + 3 , ua + ua ; move 2 , 4 + ul )  
[5657] ( move ul , ul - ua ; move 0 - 4 , 3 + 2 )  
[5658] ( move ua - 3 , ul ; move 3 * 2 , ua + 2 )  
[5659] ( move ua + 2 , 3 + 3 ; move ul , 4 + ul )  
[5660] ( move 2 , 3 / 2 ; move ul - ua , 0 - ul )  
[5661] ( move 4 , 0 - 3 ; move ul - ua , ua + 4 )  
[5662] ( move ul - 3 , ua ; move 2 + ul , 2 * 2 )  | ( v0 = 3 ; move ul - v0 , 0 ; move v0 , 4 )  
[5663] ( move ua - 3 , ua + ul ; move 3 , 2 - 3 )  | ( pen 3 ; move ua / 2 , 2 - ul ; move 3 , ul - 2 )  | ( v0 = 3 ; ( move v0 , ul ; move 3 , 3 - 4 ) )  | ( move ul - 4 , ua ; move 0 , 3 ; move 3 - ua , 2 - 4 )  
[5664] ( move 4 * 2 , ul ; move ua + 2 , 2 - ua )  
[5665] ( move ul - ua , 0 - 2 ; move ua / 4 , 2 )  
[5666] ( move 4 , ua + 2 ; move ul - 2 , 3 - ua )  | ( move ul , 3 + 2 ; move 0 , ul / ua ; move 4 , ua )  | ( move ul , 4 + ul ; move 4 , ul / ua ; move 0 , 3 )  
[5667] ( move 2 , 4 + 2 ; move ul - ua , ua + 4 )  
[5668] ( move ua + ul , 3 + ul ; move 3 , 2 * 2 )  | ( move ua + ul , 3 + ul ; move 3 , 4 ; v0 = 0 )  
[5669] ( move 2 - 4 , ua - ul ; move 2 + ul , 2 )  
[5670] ( move 2 , 2 / 4 ; move ua + ul , 0 - ul )  
[5671] ( move 4 + ul , 2 + ul ; move 3 - ua , 2 )  | ( move 4 + ul , 3 - ua ; move 3 - ua , 3 - ul )  
[5672] ( move 4 + 3 , 3 - ul ; move 0 - ua , ul )  
[5673] ( move ua , ul ; pen 0 ; move ul , ul / ua )  
[5674] ( move ua , ul ; pen ul - ua ; move 3 , ua )  | ( ( move ua , ul ; pen 2 - ua ) ; move 3 , 0 )  | ( move ua , ul ; pen ul - 3 ; move 3 , ua * 3 )  
[5675] ( move 2 , ul - 4 ; move 0 - 4 , ua - ul )  | ( move 4 , ua - 4 ; move 2 - 4 , ul - ua )  
[5676] ( move ul - 4 , 0 ; move ua + ul , 4 + 4 )  
[5677] ( move 3 - ua , 3 ; move ul - 4 , ua + 2 )  
[5678] ( move 3 , 4 + ul ; move 4 + ul , ua + 2 )  
[5679] ( move ua , 2 - 4 ; move 4 + 2 , ul + ul )  
[5680] ( move 2 - 3 , ua - 4 ; move ua - 2 , ul )  
[5681] ( move 3 - ua , 2 ; move ua - 3 , ua - 4 )  
[5682] ( move ua + 3 , ul ; move 4 * 2 , ua + 3 )  
[5683] ( move ua + ul , 2 ; move 3 - ul , 3 * 2 )  
[5684] ( move ua + ul , 4 + 2 ; move ul , 4 + 3 )  
[5685] ( move 2 - 3 , 2 - ua ; move 4 + ul , ul )  | ( move 0 - ul , 2 ; ( move 4 + ul , ul ; pen 3 ) )  | ( move 0 - ul , ul + ul ; v0 = ua ; move 4 + ul , ul )  
[5686] ( move 3 + 2 , 4 * 2 ; move ua , ul + ul )  
[5687] ( move 4 , 3 + 2 ; move ua - ul , 2 - ul )  | ( move 3 + ul , 4 + ul ; move ua - ul , ul )  
[5688] ( move 2 , ua - ul ; move 4 + 2 , ul - 3 )  
[5689] ( move 3 + ul , 4 + ul ; move ua + 4 , 2 )  
[5690] ( move ua + ul , ua * 4 ; move 4 + 2 , 2 )  
[5691] ( move 0 , ul / 2 ; move ua * 2 , 4 + ul )  
[5692] ( move 3 / 2 , ua - 3 ; move ua , 2 + ul )  | ( move 0 - ua , ua ; move ul + ul , ul / ua )  | ( move ua - 4 , ul - 4 ; move ua , 2 + ul ; v0 = ul )  
[5693] ( move ua , ul ; pen ul / ua ; move ua , 2 )  | ( move ua , ul ; ( pen 0 ; move ua , ua + 2 ; pen 0 ) )  
[5694] ( move 3 - ua , 2 - ul ; move 2 , ul - 3 )  
[5695] ( move 3 * 2 , 4 + ul ; move ua , ua - 2 )  
[5696] ( move 2 , ua - 4 ; move 2 * 2 , ul + ul )  
[5697] ( move ul / ua , 3 ; move ua + 2 , 2 - 3 )  
[5698] ( move 2 - ua , ua ; move 2 / ua , 3 * 2 )  
[5699] ( move ul - 2 , 3 ; move 4 + 3 , ua + ul )  
[5700] ( move 4 , 0 ; move 2 , 2 ; move 3 * 2 , 0 )  | ( ( move 4 , ua ; move 4 , 2 ) ; move 4 , ua )  
[5701] ( v0 = 4 + ul ; move v0 , ul / v0 )  | ( move 0 , 4 / 3 ; move ul , 2 ; move 4 , ua + ua )  
[5702] ( move 2 , ul + ul ; move 3 * 2 , ua + 4 )  | ( move 2 , 2 ; move 4 + 2 , 4 ; v0 = ul )  
[5703] ( move ul , 2 + ul ; move 2 + ul , 3 * 3 )  | ( v0 = 3 ; move ul , v0 ; move 3 , v0 * v0 )  
[5704] ( move ua , ua - 3 ; move ua - 3 , 2 - 4 )  
[5705] ( move ua , ua ; pen ul - ua ; move ul , 4 )  | ( ( move ua , ua * 3 ; pen 0 ; move ul , 4 ) ; v0 = ul )  
[5706] ( move ul - ua , 4 ; move 4 - ul , 0 - 2 )  | ( move ul - 4 , 2 ; move ua - ul , 4 / 2 )  
[5707] ( move 2 + ul , ul - 4 ; move 2 , 2 - ul )  | ( move 3 , ul - 4 ; move 2 , ul ; v0 = 0 )  
[5708] ( move 3 / 2 , ul ; move ua - 2 , ua - 2 )  
[5709] ( move ua , 3 - ua ; move 4 + 2 , ul - 3 )  
[5710] ( move 0 - ua , ul / ua ; move 2 * 2 , 4 )  
[5711] ( move 3 , ul + ul ; move 3 * 3 , ua + 2 )  
[5712] ( move ua , ua + ul ; move 4 / 3 , 3 + 2 )  
[5713] ( move 3 + 3 , ua - ul ; move ul - 4 , 2 )  
[5714] ( move 3 * 2 , ul ; move ua + 3 , 4 - ua )  
[5715] ( move 3 + ul , ul - 2 ; move 2 , ul / 2 )  
[5716] ( move 3 + ul , ua + 2 ; move 2 , ul / 4 )  
[5717] ( move ul , 3 * 2 ; move 4 + ul , ua - 2 )  
[5718] ( move 2 + ul , 2 + ul ; move 3 , 4 / ua )  | ( ( pen ua + 4 ; move 3 , 3 ) ; move 3 , 4 / ua )  
[5719] ( move 4 + ul , 3 ; move 2 + ul , 2 / ua )  
[5720] ( move ul , 2 + ul ; move 4 + ul , 3 * 2 )  
[5721] ( move ul - 4 , 0 - ul ; move 3 , 3 - ul )  
[5722] ( move ua / 2 , ul - 4 ; move ua , 3 + 2 )  
[5723] ( move 4 + ul , 4 ; move ul + ul , 3 + 2 )  
[5724] ( move 3 + 2 , ua + ul ; move 3 , ul / 3 )  
[5725] ( move 4 - ua , 4 + ul ; move 2 , 3 + ul )  
[5726] ( move ua + ul , 4 ; move 3 / ua , 0 - 4 )  | ( move ul , ua / 2 ; move ua , 4 ; move ul , ua )  | ( pen ul ; move ul , ua / 2 ; move ua + ul , 4 )  
[5727] ( move 2 , ua - ul ; move 3 * 3 , ua + 4 )  
[5728] ( move 2 , ua - 4 ; move 3 + ul , ul - 3 )  
[5729] ( move 2 , 4 + ul ; move ua + 4 , 3 - ul )  
[5730] ( move ua - ul , 3 ; move ua - 3 , 3 * 2 )  
[5731] ( move 2 / ua , 4 + ul ; move 3 + 2 , ul )  
[5732] ( move 2 - ua , ul ; move 4 / 2 , ua + 3 )  | ( move 2 - ua , 4 - 3 ; move 2 , 3 ; pen ul )  | ( move 2 - ua , ul ; pen ua - ul ; move 2 , 3 )  
[5733] ( move 4 + 2 , 3 / ua ; move ul + ul , 2 )  
[5734] ( move 4 + ul , ul - ua ; move 4 + 3 , 2 )  
[5735] ( move ua - ul , 2 ; move 4 + 4 , 3 + ul )  
[5736] ( move 3 , ua + 2 ; move 4 + ul , ul / 2 )  
[5737] ( move 4 + ul , ul / 2 ; move 2 , 2 - ua )  
[5738] ( move 4 , ua * 3 ; move 0 - 4 , ul - ua )  
[5739] ( move 2 , ul - ua ; move ua / 2 , 3 * 2 )  | ( move 2 , ul ; v0 = 3 ; move v0 , v0 + v0 )  | ( move 3 - ul , ul ; ( v0 = 4 + 2 ; move 3 , v0 ) )  
[5740] ( move ua - 4 , ul ; move 3 + 2 , ul - 3 )  
[5741] ( move 4 / ua , ul - 2 ; move ua + 4 , 2 )  | ( move ul / 3 , ua ; move ua + 4 , ul ; pen 0 )  
[5742] ( move 3 , 4 + ul ; move ua + 3 , ua / 3 )  
[5743] ( move 3 - ua , 4 + 2 ; move ul , ua / 3 )  | ( move ul , 4 + ul ; pen 4 ; move ua - 3 , ul )  | ( move ul , 4 + ul ; move ua - 3 , ul ; v0 = 0 )  
[5744] ( move ul / 2 , ua + 4 ; move 4 , 2 - ua )  | ( move ul / 2 , 4 ; v0 = ul ; move 4 , v0 + v0 )  
[5745] ( move ul - 3 , ua + 4 ; move ul - 4 , 2 )  
[5746] ( move 2 + 2 , ua * ua ; move 4 / 3 , ul )  
[5747] ( move 4 * 2 , ua / 4 ; move ua , ua + 2 )  
[5748] ( move 3 , 4 + 3 ; move 4 - ul , ua + ul )  
[5749] ( move ua - 4 , 0 ; move ul + ul , 4 * 4 )  
[5750] ( move ua + 2 , ua ; move 4 + ul , 4 * 4 )  
[5751] ( move 0 - ul , ul + ul ; move 4 , 4 * 3 )  
[5752] ( move 4 , ua - 3 ; move ul - 3 , 3 + ul )  
[5753] ( move 3 - ua , 4 ; move ua + ul , 4 + 4 )  
[5754] ( move ua / 2 , 3 + ul ; move ul - 4 , 2 )  
[5755] ( move 4 + ul , 4 * 3 ; move ua + ul , 2 )  
[5756] ( move 4 , 3 - ul ; move 3 + ul , ua - 3 )  | ( ( move 4 , ul + ul ; pen ua * 2 ) ; move 4 , 0 - 3 )  
[5757] ( move ua + 2 , 3 - ul ; move 4 , ua / 3 )  
[5758] ( move ul + ul , 4 + 4 ; move 3 , ul - 2 )  
[5759] ( move ul - 4 , ua + 4 ; move 4 - ua , 2 )  
[5760] ( move 4 , 3 / ua ; move 3 + ul , ua + 3 )  
[5761] ( move 3 , 4 + 3 ; move 0 , 2 ; move 2 , 3 )  
[5762] ( move 3 - 2 , 2 ; move ul - ua , ul / 3 )  
[5763] ( move 4 * 2 , 4 ; move 2 + ul , ul + ul )  
[5764] ( move 4 + 4 , ul ; move 3 / ua , 0 - ul )  
[5765] ( move 4 / 3 , 0 ; move ua / 2 , ua - ul )  
[5766] ( move ul - ua , ua / 3 ; move 3 , 4 + 2 )  
[5767] ( move ua - 3 , ul ; move 4 - ul , 4 + 2 )  | ( v0 = 3 ; move v0 , ul ; move 3 , v0 + v0 )  
[5768] ( move ul , 3 / 2 ; move 3 + 2 , ul / ua )  
[5769] ( move 4 * 2 , ua / 2 ; move ul , ua + 4 )  
[5770] ( move 3 , ul / ua ; move 4 + 3 , 3 - ua )  
[5771] ( move ua + 2 , 3 ; move ul / ua , 4 * 3 )  
[5772] ( move 4 * 2 , ul / 2 ; move 2 , ul + ul )  
[5773] ( move 4 , ua - 4 ; move ul + ul , 2 - 4 )  
[5774] ( move ul , ul / 2 ; move 4 + 2 , 4 + ul )  
[5775] ( move ul - 2 , ul / 2 ; move 4 , ul - 2 )  
[5776] ( move ul - 4 , ul ; move 0 - 4 , 4 - ul )  
[5777] ( move ul - ua , 3 + ul ; move 2 , 3 / 4 )  
[5778] ( move 4 , 3 + ul ; move 4 + ul , ua - 4 )  
[5779] ( move ua + 3 , ua / 3 ; move ua - 4 , 4 )  
[5780] ( move 4 + ul , 2 / 4 ; move ua , 3 + ul )  
[5781] ( move ua + 4 , ul ; move 2 / 4 , 3 + ul )  
[5782] ( move ul , 4 + ul ; move 3 * 2 , 2 / ua )  
[5783] ( move ua - ul , 3 / 4 ; move ua + 2 , 4 )  
[5784] ( move 3 , ua - 4 ; move 3 - ua , 4 - ul )  
[5785] ( move 3 + 2 , ul - 3 ; move ua / 4 , ul )  
[5786] ( move 2 , 4 - 3 ; move ua + ul , 4 / ua )  
[5787] ( move ua , ul / 2 ; move 3 + ul , 3 / 2 )  
[5788] ( move ua + 4 , 4 ; move ul - 3 , 2 / ua )  
[5789] ( move ua , ua - 2 ; move 3 - ul , 4 * 4 )  
[5790] ( move ua + ul , 4 ; move 4 - ua , 2 / 3 )  
[5791] ( move 2 + ul , 4 / ua ; move 2 , 4 - ul )  | ( move 3 , 4 / ua ; v0 = ua / 2 ; move ua / v0 , 3 )  
[5792] ( move 4 + ul , ua - 4 ; move 3 , ul - 3 )  
[5793] ( move ua / 3 , 3 - 4 ; move ua + ul , 4 )  
[5794] ( move ul - 3 , 3 / ua ; move ua - 3 , 4 )  
[5795] ( move ul , ul / 4 ; move 4 + 3 , 2 + ul )  
[5796] ( move 4 + 2 , ul / 3 ; move 4 - ua , ul )  
[5797] ( move 4 + 4 , ua - 2 ; move ul , ul / 3 )  
[5798] ( move ul , 2 / ua ; move 4 + 3 , ul / 2 )  
[5799] ( move ua , ul / 3 ; move 4 + ul , 4 + 3 )  
[5800] ( move 2 - ua , 4 / 3 ; move ul , 4 + ul )  
[5801] ( move 3 * 2 , 2 / 4 ; move ul + ul , ul )  
[5802] ( move 4 + 2 , ul ; move ul + ul , 4 / 3 )  
[5803] ( move 4 , ua * 3 ; move ul + ul , 4 * 2 )  | ( move 4 , 0 ; v0 = ua ; move ul + ul , v0 * v0 )  
[5804] ( move 4 + ul , ul ; move 3 * 2 , ul - 4 )  
[5805] ( move 4 + 3 , ul ; move 4 / 3 , ua + ul )  
[5806] ( move 4 / 3 , ua + 4 ; move ua , 4 + ul )  
[5807] ( move ul , 4 / ua ; move 4 + ul , 4 + 2 )  
[5808] ( move 3 - ul , ul / 2 ; move 4 + ul , 4 )  
[5809] ( move 4 , 3 - ua ; move 4 + ul , 4 / ua )  
[5810] ( move 4 , 4 - 3 ; move 2 , 2 ; move 2 , 2 )  
[5811] ( move ua + 4 , 4 * 3 ; move ul , ua / 3 )  
[5812] ( move ul , 3 * 3 ; move 4 - ul , ua - 4 )  
[5813] ( move 3 * 2 , ul - 3 ; move ul / 3 , ul )  | ( move ul - 2 , ul ; move 4 + ul , ua - 3 )  | ( move ul - ua , ul - 3 ; move ul , 2 + ul )  
[5814] ( move 2 * 2 , ua ; move ua / 3 , ul / 4 )  
[5815] ( move 3 + ul , ul - 4 ; move 2 , ul / 4 )  
[5816] ( move ul , ul / 3 ; move 4 + 3 , ua - 4 )  
[5817] ( move ua - 3 , ul / 4 ; move 3 * 2 , ul )  
[5818] ( move ua , 4 + 4 ; move 4 / 3 , ua - ul )  
[5819] ( move 4 , 4 + 4 ; move ua - ul , ul / 2 )  
[5820] ( move ul / 4 , 2 ; move ul - ua , 2 / 3 )  | ( v0 = 2 / 3 ; move 0 , v0 + ul ; move ul - ua , ul )  
[5821] ( move 3 - ua , 4 ; move ul + ul , 4 / 3 )  
[5822] ( move 3 , 4 ; move 2 , 2 ; move 4 , 2 - 3 )  
[5823] ( move 3 , 4 ; move 0 - 4 , 2 ; v0 = 2 )  
[5824] ( move ul / ua , 3 ; move 3 + ul , 4 / 3 )  
[5825] ( move ua , 3 * 3 ; move 4 - ul , ul / 3 )  
[5826] ( ( move 4 , 3 ; move 2 , 0 ) ; move 2 , 2 )  | ( move 3 + 3 , 3 ; move ua / 3 , ul + ul ; pen ua * 3 )  
[5827] ( move 4 + 4 , 2 - ul ; move ul , ul / 4 )  | ( move ua + ul , ua + ul ; move 2 , ul / ua )  | ( pen ua ; move ua + ul , ul ; move ul - 3 , ua - 3 )  
[5828] ( move ua - ul , 4 ; move 4 / ua , 4 * 2 )  
[5829] ( move 4 * 2 , ul / 3 ; move 4 - ua , ul )  
[5830] ( move 4 + ul , ul - 4 ; move 4 , ul / 2 )  
[5831] ( move ul - 3 , ul - 4 ; move 3 , 4 / ua )  
[5832] ( move 3 , 0 ; move 2 , 3 / 2 ; v0 = 3 )  
[5833] ( move 3 , 2 ; move 2 - 3 , 3 ; move 4 , 4 )  
[5834] ( move ua / 4 , 4 * 2 ; move ul - 4 , ul )  
[5835] ( move ua / 4 , 4 ; move 3 - ua , ua / 4 )  
[5836] ( move 3 * 3 , ul / ua ; move ul , 4 / 2 )  
[5837] ( move 4 , ul / 3 ; move ua / 2 , ua / 4 )  
[5838] ( move 4 , ul / 4 ; move 2 + ul , ul / 4 )  
[5839] ( move ua / 4 , ul / 3 ; move ua , 3 / 4 )  
[5840] ( move 4 , 3 ; move 4 , 4 ; move 2 , 4 * 2 )  
[5841] ( move 4 , 4 ; move 2 , 4 * 3 ; move 4 , 2 )  
[5842] ( move ul , ul ; move ua , ul ; move ua , ul )  | ( ( move ul , ul ; move ua , ul ) ; move ua , ul )  | ( move ul , ul ; move ua , ul ; move ua , ua + ul )  | ( move ul , ua + ul ; move ua , ul ; move ua , ul )  | ( move ul , ul ; move ua , ua + ul ; move ua , ul )  | ( move ul , ul ; ( pen ul ; move ua , ul ; move ua , ul ) )  
[5843] ( move ul , ul ; move ul , ul ; move ua , ul )  
[5844] ( move ua , ul ; move ul , ul ; move ul , ul )  | ( move ua , ul ; move ul , ua + ul ; move ul , ul - ua )  | ( ( move ua , ul ; move ul , ul ) ; move ul , ul ; pen 3 )  | ( move ua , ul ; v0 = ul ; ( move ul , ul ; move ul , ul ) )  
[5845] ( move ul , ul ; move ua , ul ; move ul , ul )  | ( move ul , ua + ul ; ( move ua , ul ; move ul , ul ) )  | ( move ul , ul - ua ; ( move ua , ul ; move ul , ul ) )  | ( move ul , ul ; ( pen ul ; move ua , ul ) ; move ul , ul )  | ( move ul , ul - ua ; move ua , ua + ul ; move 2 - ul , ul )  | ( ( move 0 , ul ; move ul , 0 ; move ua , ul ) ; move ul , ul )  
[5846] ( move 2 - ua , ua + ul ; move ua , 0 - 2 )  
[5847] ( move ua + 3 , ua + ul ; move 0 - 2 , ul )  
[5848] ( move ua + 2 , 0 ; move ul + ul , ua - 3 )  | ( ( move ul , ua ; move ua + ul , 0 ) ; move ul , ua - 3 )  
[5849] ( move ua - ul , ua + ua ; move 2 + 2 , 2 )  | ( move ua - ul , ua ; move 4 , 2 ; v0 = ul )  
[5850] ( move ua + 3 , ua + ul ; move ua + 2 , 2 )  | ( pen 4 * 2 ; move ua + 3 , ul ; move ua + 2 , 2 )  
[5851] ( move 0 - ua , 2 ; move 3 - ua , ul + ul )  
[5852] ( move 2 - ua , 0 ; move ua - 3 , ul - ua )  
[5853] ( move 3 , ua + ul ; move 0 - 2 , ul + ul )  
[5854] ( move ua + 2 , 2 ; move ua + ul , 3 + ul )  
[5855] ( move 0 - ua , ul ; move ua + ul , 4 + 2 )  
[5856] ( move 0 - ul , ua ; move 3 - ua , 2 - ua )  
[5857] ( move ul + ul , 0 ; move ua - ul , 3 + 2 )  | ( move ul + ul , ua ; move ua - ul , 4 + ul )  
[5858] ( move ul - ua , ul ; move 2 + ul , 0 - 2 )  
[5859] ( move 0 - 3 , 2 ; move ul + ul , ua + ul )  
[5860] ( move ua + 2 , ul - 4 ; move 0 - ua , ul )  
[5861] ( move ua + 2 , ua + 3 ; move ua , ua - 4 )  
[5862] ( move ua , ul + ul ; move 3 + 2 , ua - 2 )  
[5863] ( move ua + 2 , ua ; move 3 + 3 , ua * ua )  
[5864] ( move ua + ul , 0 - ul ; move 3 + ul , 3 )  
[5865] ( move ua - 2 , ua * 3 ; move 0 - ua , ul )  
[5866] ( move ua , ua + ul ; move 0 - 3 , 4 + ul )  
[5867] ( v0 = ua + ul ; move v0 , v0 / ua )  | ( v0 = 4 * 2 ; move ul - v0 , v0 * v0 ; pen ul )  | ( v0 = ua + ul ; move v0 , v0 / ua ; v1 = v0 )  
[5868] ( move ua + ul , 3 ; move 2 + ul , ua - 2 )  
[5869] ( move ua - 2 , ua + 2 ; move ua , 2 / ua )  
[5870] ( move ul + ul , 0 - 2 ; move ua , 4 + ul )  
[5871] ( move 4 + 2 , ua + ul ; move ul + ul , 2 )  | ( move 2 + ul , ul ; move 3 , ua ; move 2 , ul + ul )  | ( move 4 + 2 , ul ; v0 = 3 - ul ; move v0 , v0 )  
[5872] ( move ua + 2 , 3 * 2 ; move ul , ua + ul )  
[5873] ( move ua + 2 , 0 - ul ; move ul , ua / 3 )  
[5874] ( move 4 , 2 + ul ; move ua + 2 , ua - ul )  
[5875] ( move ul , ul - 3 ; move ua + ul , 0 - 3 )  
[5876] ( move 0 - ul , 3 / ua ; move ua , ua - 2 )  
[5877] ( move ua - ul , 3 + 2 ; move ua , 3 + ul )  
[5878] ( move ua - 4 , ul - ua ; move ua , 2 + 2 )  | ( move ul / 3 , ul ; ( move ul + ul , ua ; move ua , 4 ) )  
[5879] ( move ul - 2 , ua ; move 2 - ua , ul - 2 )  
[5880] ( move ul - ua , 0 - 3 ; move ul , 3 - ua )  
[5881] ( move ua + ul , 0 - ua ; move 4 , 4 + ul )  | ( move ul , 0 ; move ua , ua ; move 4 , 4 + ul )  
[5882] ( move 2 , ua + 3 ; move ua - ul , 3 + ul )  | ( move 2 , 2 + ul ; v0 = 4 ; move ua - ul , v0 - ua )  
[5883] ( move 3 + 3 , ua + ua ; move 3 , ua - ul )  | ( move ul , ua ; move 4 + ul , ua ; move 2 + ul , ua - ul )  
[5884] ( move 2 - ua , ul ; move ua - ul , 3 + 2 )  
[5885] ( move 2 - 3 , ua ; move ua + 3 , ul + ul )  
[5886] ( move ua - 2 , ua * ua ; move 3 , 2 + ul )  | ( move 0 , 0 ; move ua - 2 , ua * ua ; move 2 + ul , 3 )  
[5887] ( move 2 - ua , 4 + ul ; move 2 , ua + ul )  
[5888] ( move ua - ul , 0 - 4 ; move 2 , ul - ua )  
[5889] ( move 0 - 2 , ua * ua ; move 4 , ua * ua )  
[5890] ( move 4 , ua + 3 ; move ua + 2 , ua * ua )  
[5891] ( v0 = ua - ul ; move v0 , ua / v0 )  
[5892] ( move 2 , ul / ua ; move 0 - ua , ua - 3 )  | ( pen 2 ; move 2 , ul / ua ; move ua , ul / ua )  
[5893] ( move ua / 2 , ul ; move ua - 2 , 0 - ul )  
[5894] ( move 4 + ul , ua + ul ; move 3 , 0 - ul )  | ( move 3 , ua / 2 ; move ul , ul ; move 4 , ua )  
[5895] ( move ua + 2 , ul + ul ; move 3 , 3 + ul )  
[5896] ( move ua - 3 , 2 ; move ua + 3 , ua * ua )  
[5897] ( move ua + ul , 4 ; move ua + ul , 0 - 4 )  
[5898] ( move 2 - ua , ul ; move ua + 2 , 2 / ua )  
[5899] ( move ua , ua - ul ; move 3 + ul , 3 + 2 )  
[5900] ( move ua + ul , ua ; move 4 - ua , 3 + 2 )  
[5901] ( move 2 , ua + ua ; move ua - 2 , 3 / ua )  
[5902] ( move ua + 3 , 4 - ua ; move ua , ua + 3 )  
[5903] ( move 0 - ul , 2 / 3 ; move ua , ua + ul )  
[5904] ( move 2 - ua , 0 ; move ua / 3 , ul + ul )  
[5905] ( move ua + 2 , ua + 4 ; move ua - ul , 3 )  | ( move 3 - 2 , 4 ; move ua + ul , ua ; move ua , 3 )  
[5906] ( move ua + ul , ua + 3 ; move 2 , ua / 3 )  
[5907] ( move 0 , 0 ; move 3 , 0 ; move ua , 4 * 3 )  
[5908] ( move 3 , 0 ; move 2 , 3 + 2 ; move 2 , ua )  | ( move 3 , ua ; ( move 4 , 4 + ul ; pen ua ) )  
[5909] ( move 0 - ua , ua / 4 ; move ua + 3 , ul )  
[5910] ( move 2 , ua + ua ; move ul + ul , 3 / 2 )  
[5911] ( move 2 - ua , 3 ; move 2 - ul , ua - ul )  
[5912] ( move 2 - ua , 4 + ul ; move ua + 3 , ul )  
[5913] ( move 0 - ul , ua - 4 ; move 4 , ua + ul )  
[5914] ( move 3 * 2 , ua ; move 3 - ua , ua + ul )  
[5915] ( move 2 - ua , ua ; move 3 / 2 , ua + ul )  
[5916] ( move 0 - ua , ul + ul ; move ua / 2 , 4 )  
[5917] ( move 2 - ua , ua + ul ; move 3 * 2 , ul )  
[5918] ( move ua + ul , ua / 4 ; move 2 , 0 - ul )  
[5919] ( move ul , 2 - ua ; move ua + ul , 4 + 3 )  
[5920] ( move ua , 0 - 3 ; move 2 - ul , ul / ua )  | ( move ul , ua - 3 ; ( move ua , 0 ; move ul , ul / ua ) )  
[5921] ( move 2 - ul , ua ; move ua + 2 , 3 / ua )  
[5922] ( move ua - ul , 0 ; move ul - 3 , 4 + ul )  
[5923] ( move 3 - 4 , ua ; move 2 - ua , ua + ul )  
[5924] ( move 2 / 4 , ua + ul ; move 0 - ua , ul )  | ( move 4 + 2 , ul + ul ; pen ua ; move ul / 3 , ua + 2 )  
[5925] ( move 3 - ua , ul - 2 ; move ua , ua - 3 )  
[5926] ( move ua + 2 , ul ; move ul - 3 , 3 + ul )  
[5927] ( move ua - ul , 2 + 2 ; move ua - 4 , ul )  
[5928] ( move ul , ua + ua ; move 3 * 3 , ua - 2 )  
[5929] ( move ul - ua , 0 ; move ua + 2 , ul / 4 )  
[5930] ( move 4 + 3 , ua - ul ; move 0 - ul , ul )  | ( move ua , ua - ul ; move ul , ua ; move ul , 4 )  | ( ( move ua + ul , ua - ul ; pen ua ) ; move ul - 2 , ul )  
[5931] ( move 0 - ul , 3 ; move ua + ul , 4 - ul )  
[5932] ( move ua , 0 - ul ; move ul + ul , 3 / 2 )  
[5933] ( move 3 + 2 , ul ; move ua + ul , ua - 4 )  
[5934] ( move ua / 2 , 3 ; move ua + 2 , ua - ul )  
[5935] ( move 3 , ua / 3 ; move 0 - ua , ua - ul )  
[5936] ( move ua - ul , ua + 3 ; move ua - 2 , 4 )  
[5937] ( move 3 - ua , ua + 4 ; move 2 , ul + ul )  
[5938] ( move ua - 2 , 2 - ul ; move ua , ua - 4 )  
[5939] ( move 2 , 2 - ua ; move ua + ul , ul / 2 )  
[5940] ( move 2 , ua / 2 ; move ua + 3 , ul - ua )  
[5941] ( move ul - ua , ul - 4 ; move 2 , ua - 2 )  
[5942] ( move ua - 2 , 4 * 2 ; move ua + ul , ul )  
[5943] ( move 0 , 3 ; move ua , 2 ; move 3 , 0 - 4 )  
[5944] ( move ua , 3 - ul ; move 2 + ul , ua - 4 )  | ( move ua , 2 ; move 4 - ul , ua - 4 ; v0 = ul )  
[5945] ( move ua - ul , 4 + ul ; move 3 + ul , 2 )  
[5946] ( move 3 + ul , ua ; move 3 * 2 , ul + ul )  | ( move 4 , ua ; move 3 * 2 , 2 ; move 0 , ua )  
[5947] ( move ua - 4 , ul ; move ua + ul , 2 - 3 )  
[5948] ( move ua , ul - 3 ; move 3 + ul , 3 + ul )  
[5949] ( move 4 - ua , ul - ua ; move 3 - ua , 2 )  
[5950] ( move 4 + ul , ua + 3 ; move 3 , ul + ul )  
[5951] ( move 3 + ul , 3 ; move 3 + ul , ua * ua )  
[5952] ( move ua - ul , ua + 2 ; move ul - 3 , 4 )  
[5953] ( move 3 - ul , 2 ; move ua - ul , 3 + ul )  
[5954] ( move 2 , ua / 3 ; move ua + ul , ul - 2 )  
[5955] ( move 2 - ua , ul / 2 ; move ua , 3 + ul )  
[5956] ( move ua + 3 , 4 ; move 3 - ua , ul - ua )  
[5957] ( move ul , 3 * 3 ; move ua + 2 , ul - ua )  
[5958] ( move ul , 2 + ul ; move ua - 3 , ul - 3 )  
[5959] ( move ul - ua , 3 ; move ua + ul , 4 + 3 )  
[5960] ( move ua - 3 , ul ; move 4 + ul , ua - 2 )  
[5961] ( move ul , ua - 3 ; move ul - ua , 3 + 3 )  
[5962] ( move ul , ua + 4 ; move 3 - ua , ua + 4 )  
[5963] ( move ul - 3 , 3 + ul ; move ua , ua - 3 )  | ( move 0 - ua , ul ; pen ul ; move 4 / 2 , 3 )  
[5964] ( move ua , 0 ; move 2 - 3 , 0 ; move 3 , 4 )  
[5965] ( move ul + ul , ua + 2 ; move ul - 4 , 3 )  
[5966] ( move 0 - ul , ul ; move 4 + 4 , ua * ua )  
[5967] ( move ua + 2 , 2 * 2 ; move ul / ua , ul )  | ( move ul , ul ; ( move 3 - ua , 3 ; move 0 - 4 , ua ) )  
[5968] ( move ua - ul , 2 + ul ; move 3 , ul - 3 )  
[5969] ( move 4 + 3 , ul + ul ; move 2 , ua * ua )  
[5970] ( move ua - 4 , ua ; move ul - 4 , 0 - ul )  
[5971] ( move 2 - ua , 3 / ua ; move 3 , ua + ul )  
[5972] ( move ua + 2 , 4 + ul ; move 4 , ua * ua )  
[5973] ( move ua + 4 , ua - ul ; move 3 , 2 - ul )  
[5974] ( move ua - 3 , 3 ; move ul - ua , 3 + ul )  
[5975] ( move 4 * 2 , ul ; move 2 - ua , ua + ul )  
[5976] ( move ul - 3 , ua - 2 ; move ua , 4 + ul )  | ( move 4 - 2 , ul ; move ul / ua , ul - ua ; move ua , ul )  
[5977] ( move 4 , ua / 3 ; move ua + 2 , ul + ul )  | ( move 4 , ua / 3 ; move ul , 2 ; move ua + ul , 0 )  
[5978] ( move 2 , 4 / ua ; move 2 + ul , ua - ul )  
[5979] ( move 3 , 4 ; ( move 4 , 0 - 4 ; pen 3 ) )  
[5980] ( move ua + ul , 4 + 3 ; move ul , 4 + ul )  
[5981] ( move ua , ua / 3 ; move ul - 4 , ua + 2 )  
[5982] ( move ua / 2 , 2 / ua ; move 2 , ua - ul )  
[5983] ( move 4 , 3 * 2 ; move ua + ul , ul + ul )  
[5984] ( move ua - ul , 2 / 4 ; move ua , 2 + ul )  
[5985] ( move 3 + ul , ua ; move 4 + ul , ul - 3 )  
[5986] ( move 4 , ua + 3 ; move ua - ul , 4 + ul )  
[5987] ( move 4 + 2 , ul ; move ua / 2 , ua * ua )  
[5988] ( move ua - ul , 4 - ua ; move 4 + ul , 2 )  | ( move ua - ul , ua + 4 ; move 4 + ul , 2 - ua )  
[5989] ( move 3 - ua , ua / 4 ; move ua + ul , 2 )  
[5990] ( move 4 + ul , ul ; move 3 - ua , 3 + ul )  
[5991] ( move 3 * 3 , ua ; move 3 + ul , ul + ul )  | ( move 3 * 3 , ua ; move 4 , ua + 2 ; pen 4 )  | ( move 3 * 3 , ua ; move 4 , 3 - ul ; v0 = ul - 2 )  
[5992] ( move 4 + ul , 3 - ul ; move 2 , ua * ua )  
[5993] ( move ua + ul , ua - ul ; move 3 , 2 / 3 )  
[5994] ( move ua - 4 , 4 + ul ; move ua - ul , 2 )  
[5995] ( v0 = 4 + 3 ; move v0 , v0 + v0 )  | ( move 0 , 3 ; move ua + ul , ua / 4 ; pen ua )  | ( ( move ul , ua / 4 ; pen ul ) ; move ua + ul , 3 )  
[5996] ( move ul - ua , 2 / ua ; move 2 , ul - 3 )  
[5997] ( move 3 , ua - 2 ; move ul - 4 , ul + ul )  
[5998] ( move ua + ul , ul - 2 ; move 3 , 3 / ua )  
[5999] ( move ua - ul , 4 + ul ; move 4 , 2 + ul )  
[6000] ( move ua + ul , 3 ; move ul + ul , 4 * 2 )  
[6001] ( move 2 - ul , 3 / 2 ; move ua + ul , ul )  
[6002] ( move ua , 3 + ul ; move ua - ul , 4 + 4 )  
[6003] ( move 4 - 2 , ua * ua ; move ul - ua , 3 )  
[6004] ( move 2 - ua , ua + ul ; move 2 , ul / 4 )  
[6005] ( move ul - ua , 3 * 2 ; move 3 + ul , ul )  
[6006] ( move 4 - 2 , ul / ua ; move ua + ul , 2 )  | ( move 3 - ul , ul / ua ; move ua + ul , 2 ; pen 0 )  
[6007] ( move ul + ul , 2 ; move 2 - ua , ul / 4 )  
[6008] ( move 4 + ul , ua * 2 ; move 4 - ua , ul )  
[6009] ( move 2 + ul , ua ; move 4 + ul , ua / 4 )  
[6010] ( move ua , ua * 4 ; move ua + 3 , ua / 3 )  
[6011] ( move 4 / ua , ua - 2 ; move ua , ua - 4 )  | ( v0 = 3 + ul ; move ua , v0 * v0 ; move ul , v0 )  
[6012] ( v0 = 3 + 3 ; move v0 , v0 * v0 )  | ( v0 = 4 + 2 ; move v0 , v0 * v0 )  | ( v0 = 3 + 3 ; move v0 , v0 * v0 ; pen v0 )  
[6013] ( move ua + ul , ul ; move ul - 4 , 2 - 4 )  
[6014] ( move 4 + ul , ua + ul ; move 4 , 3 - ul )  | ( move ul , ua + ul ; move 4 , ua ; move 4 , 2 )  | ( move 4 + ul , ul ; ( move 4 , 2 ; move 0 , 0 ) )  | ( move 4 + ul , ul ; move 3 + ul , ul + ul ; v0 = ua )  
[6015] ( move ul , 4 * 3 ; move ua - ul , 2 + ul )  
[6016] ( move 4 + ul , 2 ; move ul / 3 , ua + ul )  
[6017] ( move ua , 3 * 2 ; move ul - 4 , ul + ul )  
[6018] ( move 4 + ul , ua - 2 ; move ul / 2 , ul )  
[6019] ( move ua - ul , ua - ul ; move 3 , 2 / 3 )  
[6020] ( move 3 + ul , ua / 3 ; move 3 , ua - ul )  
[6021] ( move ua + ul , ua - 3 ; move 4 / 2 , ul )  | ( move ua + ul , ul - 4 ; v0 = 4 ; move 2 , ul )  
[6022] ( move 4 * 2 , ul ; move ua - 4 , ua + ul )  
[6023] ( move ul - 3 , ua - ul ; move ua , 2 / 3 )  
[6024] ( move ua , 2 - 3 ; move ua / 4 , ul - ua )  
[6025] ( move ua - 2 , ul + ul ; move 3 / ua , 4 )  
[6026] ( move ul - 4 , ul ; move ul + ul , 4 + 2 )  | ( move 0 - 3 , ua + ul ; move 0 , 2 ; move 2 , 4 )  
[6027] ( move 2 / 3 , 4 + ul ; move ua + ul , ul )  
[6028] ( move 3 , ul ; move 4 , 0 - 4 ; move 2 , 0 )  
[6029] ( move ua - 3 , ua - ul ; move 4 + ul , 4 )  
[6030] ( move ul - ua , ul ; move 3 * 2 , ua - 4 )  
[6031] ( move 3 / 2 , 4 ; move ua + ul , ua - ul )  
[6032] ( move 3 + 2 , ul / 3 ; move ul - ua , ul )  
[6033] ( move ul - 3 , ua ; move 3 - ul , 4 + ul )  
[6034] ( move ua + 4 , ul ; move ul / 2 , ul - 2 )  
[6035] ( move ua - 2 , 4 / 2 ; move ul , ua * ua )  
[6036] ( move 2 , 0 ; move 0 - ul , 3 ; move 4 , 4 )  
[6037] ( move 4 * 2 , ua + ul ; move 4 , ua - ul )  | ( move 4 , ua / 2 ; move ua + 2 , ul ; pen ua / 4 )  
[6038] ( move ua + 4 , ul ; move ua - 4 , ul - 3 )  
[6039] ( move ua - ul , ua - 4 ; move 3 , 3 - ul )  
[6040] ( move 2 - ua , 4 / ua ; move ul + ul , 3 )  
[6041] ( move 2 , ul / 4 ; move ua + ul , 3 + ul )  
[6042] ( move 2 + ul , ul ; move 2 + ul , ul / 4 )  | ( move 2 , ul ; move ul , ua ; move 3 , ul / 4 )  
[6043] ( move 4 + ul , 4 * 2 ; move ul , ua + ul )  
[6044] ( move ul + ul , 4 + ul ; move ua , 2 / 3 )  
[6045] ( move 2 + ul , 3 - ul ; move ul , 3 / ua )  
[6046] ( move 4 , ua * ua ; move 2 / 3 , ua - ul )  
[6047] ( move 4 * 2 , ua - ul ; move ua , ul - 4 )  
[6048] ( move ul / 4 , ua ; move 2 - ua , 3 - ul )  | ( move 4 , 2 ; ( move ul / 3 , ul ; pen ul ; move 0 , 4 ) )  
[6049] ( move ua - ul , 4 ; move 4 + ul , ua - 4 )  
[6050] ( move ua - ul , 3 + ul ; move 3 , ul / 3 )  
[6051] ( move 4 + ul , ul ; move ua - ul , 4 + 4 )  
[6052] ( move 4 , ul ; move 3 + 2 , 2 ; move 2 , 2 )  
[6053] ( move 3 , ua ; move 2 , 3 ; move 0 - 3 , 4 )  
[6054] ( move 4 + ul , ua ; move 2 / 4 , ua * ua )  
[6055] ( move 4 , 0 ; move 3 , 4 - ua ; move 4 , 0 )  | ( ( move 4 , ua ; move 4 + 3 , 4 ) ; v0 = ua )  | ( v0 = 4 ; ( move v0 , ua ; move 3 + v0 , v0 ) )  
[6056] ( move 2 , 4 - ul ; move ul - 4 , ua * ua )  
[6057] ( move ul , ua / 3 ; move 4 + 3 , ul + ul )  
[6058] ( move 4 + ul , ua + ua ; move 3 , ul / 4 )  
[6059] ( move 2 / ua , ul - 3 ; move 4 , ul - ua )  
[6060] ( move ul , ul - 4 ; move 2 + ul , ul / 2 )  
[6061] ( move 4 , ul / 3 ; move ua + 3 , ul + ul )  
[6062] ( move ul + ul , ua ; move 4 + ul , 4 * 3 )  
[6063] ( move ua - ul , 2 ; move ua / 4 , 4 + ul )  
[6064] ( move ua , ul + ul ; move ua / 2 , 4 * 3 )  
[6065] ( move 3 + ul , 3 / ua ; move ua , ul - 4 )  
[6066] ( move ul , 4 / ua ; move ua + 3 , 2 / ua )  
[6067] ( move ul - 4 , ul + ul ; move 4 + 3 , ul )  
[6068] ( move ua - 2 , ul / ua ; move 2 , ul / 3 )  
[6069] ( move 4 + ul , 0 ; move 3 , 3 ; v0 = 0 )  | ( move ua - ul , ua ; v0 = 4 - ul ; move v0 , v0 )  
[6070] ( move ul + ul , ul - 2 ; move ua / 3 , 4 )  
[6071] ( move 4 - 3 , ul ; move ua - ul , 2 / ua )  
[6072] ( move ua / 4 , ua * ua ; move 2 - ua , 4 )  
[6073] ( move 3 + ul , 3 - ua ; move 4 / ua , ul )  | ( move 4 , 3 ; move ul , 3 / 4 ; pen ua - 2 )  | ( ( move 4 , 3 ; move 0 , 2 / 3 ) ; move ul , ua )  
[6074] ( move ua - ul , ul - 2 ; move 2 / 4 , ul )  
[6075] ( move ul - 4 , 4 - ul ; move 2 , ul + ul )  | ( move ul - 4 , 3 ; v0 = 2 ; move v0 , v0 )  
[6076] ( move 3 + ul , ul / ua ; move 4 , ua - 4 )  
[6077] ( move 2 , 0 - 2 ; move ul , 4 ; move 4 , 3 )  
[6078] ( move ul , 3 - 4 ; move 3 - ua , ul / ua )  
[6079] ( move 3 + ul , 4 / ua ; move 4 - ua , ul )  
[6080] ( move ul - 4 , ua ; move ul + ul , 4 * 3 )  
[6081] ( move 0 , 3 ; move 4 , 2 ; move ul - 3 , 3 )  
[6082] ( move ua / 4 , ua * 4 ; move ul - ua , 2 )  
[6083] ( move ua / 4 , ua - ul ; move ua , 4 * 2 )  
[6084] ( move 3 - ua , ul / 2 ; move ul , ua / 3 )  
[6085] ( move 2 , ul ; move 4 , 3 ; move 2 , 0 - 4 )  
[6086] ( move 4 , ua * 3 ; move 4 , 0 ; move 2 , 2 )  | ( pen 3 ; move 4 + 4 , 0 ; move 2 , 3 - ul )  | ( move 4 * 2 , ua ; v0 = 2 ; move v0 , 2 )  
[6087] ( move ua / 2 , ua / 4 ; move ul , ua + 4 )  
[6088] ( move 3 - ul , ul / ua ; move 4 + 3 , ul )  
[6089] ( move ul - ua , ul / 3 ; move 2 , 3 / ua )  
[6090] ( move ul + ul , ul - 4 ; move 4 , 3 - ul )  
[6091] ( move 4 + ul , 3 / ua ; move 4 - ua , ul )  
[6092] ( move 4 * 2 , ua / 3 ; move ul , ua * ua )  
[6093] ( move 2 , 0 ; move ua , 3 / 4 ; v0 = 0 )  
[6094] ( move 4 - ul , ul / 2 ; move 3 , ul + ul )  
[6095] ( move ul - ua , 3 - 4 ; move ul , ul / 2 )  
[6096] ( move ua / 4 , 4 ; move ua - ul , ul - 2 )  
[6097] ( move ua - 3 , 3 ; v0 = 0 ; move 3 , 2 )  
[6098] ( move ul , 3 + ul ; move 3 + ul , ul / 4 )  | ( move ul , 4 ; v0 = 4 ; move v0 , ul / v0 )  | ( v0 = 4 ; move ul , v0 ; move v0 , ul / v0 )  
[6099] ( move ul - 4 , ul ; move 4 - ul , 3 - ua )  
[6100] ( move 4 + ul , ua + 4 ; move 4 / ua , ul )  
[6101] ( move 4 , 0 ; move ul , 0 ; move 2 , 4 / 3 )  
[6102] ( move 3 , ul ; move 0 , 4 * 3 ; move 4 , 0 )  
[6103] ( move ua , 4 + 4 ; move 3 - ul , ul / ua )  
[6104] ( move ul , 2 - 4 ; move 2 , 2 ; move 3 , 2 )  
[6105] ( move ul - 4 , ul ; move ua - 2 , ul / 4 )  
[6106] ( move ul + ul , 4 ; move ul - 4 , ul / 2 )  
[6107] ( move ul - ua , 4 / 3 ; move 4 + ul , ul )  
[6108] ( move ua - 4 , ul ; move 4 - ul , 3 / ua )  
[6109] ( move 4 , 3 ; move 0 , 3 * 2 ; move ua , 4 )  
[6110] ( move ul - ua , ua ; move 4 / ua , 4 / 2 )  
[6111] ( move 4 , ua / 3 ; move ua + ul , ul / 3 )  
[6112] ( move 2 , ul - ua ; move ul - 4 , ul / 4 )  | ( move ul , ul ; move ul , 0 ; move ul - 4 , ul / 4 )  
[6113] ( move ul / ua , 3 / 2 ; move 4 , ua - ul )  
[6114] ( move ua , 4 + ul ; move ul - 4 , ul / 3 )  
[6115] ( move ua + ul , ul / 4 ; move 3 - 4 , ul )  
[6116] ( move 4 , 0 ; move 3 * 2 , 2 ; move 4 , ul )  
[6117] ( move 4 , ua * ua ; move ua / 4 , 4 + ul )  
[6118] ( move 3 - ul , ul + ul ; move 4 , ul / 3 )  | ( move 2 , 2 ; move 3 + ul , ul / 3 ; v0 = 3 )  
[6119] ( move 4 , 4 ; move ua + 2 , 3 ; move 3 , 2 )  
[6120] ( move 4 - ul , ul / 2 ; move ul - 3 , ul )  
[6121] ( move ul - 4 , ul / 2 ; move 4 , ul + ul )  
[6122] ( move 4 + ul , 4 - ul ; move ua , ua / 4 )  
[6123] ( move ul / 4 , 3 * 3 ; move ua + ul , ul )  
[6124] ( move 2 , 2 ; move ua + 3 , 2 ; v0 = 4 )  
[6125] ( move ul / 2 , ua ; move 4 + ul , ul / 3 )  
[6126] ( move 4 + ul , 4 / ua ; move 4 , ul - ua )  
[6127] ( move 3 , ul / 4 ; move ua - 4 , ul + ul )  
[6128] ( move ul / 3 , ua / 2 ; move 4 , ul - ua )  
[6129] ( move ul , 4 / ua ; move ua - ul , 4 * 2 )  
[6130] ( move 3 + ul , 2 / ua ; move ul , ul / 4 )  
[6131] ( move 2 + ul , 4 ; move 0 , 4 ; move 4 , 3 )  
[6132] ( move 4 , 2 / ua ; move 4 , 2 ; move 0 , 3 )  
[6133] ( move ua , 4 * 2 ; move ul - 4 , ul / ua )  
[6134] ( move ua + ul , 4 * 4 ; move ul , 4 / ua )  
[6135] ( move 4 / 3 , ua / 4 ; move ua , ul - ua )  
[6136] ( move ul / 3 , 4 - ul ; move ua , ul / 2 )  | ( move ul , 3 / ua ; move ul - ua , 3 - ua )  
[6137] ( move 4 , 4 ; move 2 , 2 / 3 ; move ul , 0 )  
[6138] ( move 4 + ul , ua / 4 ; move ua , ua / 4 )  
[6139] ( move ul , 4 + 4 ; move ua - ul , ul / 4 )  
[6140] ( move ul - ua , 4 / ua ; move ua , 4 / 3 )  
[6141] ( move 3 * 2 , 2 ; move ul , 3 ; move 4 , 3 )  
[6142] ( move 3 , 2 + 2 ; move 0 - ua , 3 ; pen 0 )  
[6143] ( move ul - 3 , ul / ua ; move 4 , 4 / ua )  
[6144] ( move ul , 4 / ua ; move ua / 2 , ua / 4 )  
[6145] ( move ul , 2 - 4 ; move 3 , 2 ; move 3 , 4 )  
[6146] ( move 2 , 4 ; move 4 , ua - 4 ; v0 = 0 )  
[6147] ( v0 = 4 ; move 2 , 4 + 3 ; move ua , 3 )  | ( move 0 , ua ; move 2 , 4 + 3 ; ( move ua , 3 ; pen ua ) )  
[6148] ( move 0 , 4 ; move ua , 4 * 3 ; move 4 , 4 )  | ( move ua , 4 * 4 ; pen ua + 2 ; move 4 , 4 )  | ( v0 = 4 ; move ua , v0 * v0 ; move v0 , v0 )  
[6149] ( move 4 , 4 ; move 2 , 2 ; move 3 , ul / 2 )  
[6150] ( move 4 + 3 , 4 ; move ua , 3 ; move 4 , 3 )  
[6151] ( move 3 + 3 , 4 ; v0 = 3 ; move ua , 4 )  | ( move 3 + 3 , 3 + ul ; move ua , 4 ; move ul / ua , 4 )  
[6152] ( move 2 , 0 ; ( move ua , 4 ; move 4 , 4 ) )  | ( move ul + ul , ua ; move ua , 4 ; move 3 + ul , 4 - ua )  
[6153] ( ( move 0 , 3 ; move ul , 4 ) ; move 3 , 3 )  | ( move ul - 2 , ua + 4 ; move 0 , 2 ; move 3 , 4 )  | ( move ul , ul ; v0 = 3 ; move v0 , v0 * v0 )  
[6154] ( move ua , 4 ; ( move 4 , 3 ; move 3 , 0 ) )  | ( move ua , 4 ; move 4 + 3 , ua + 3 ; v0 = ul )  
[6155] ( move 3 , 3 ; move 3 , 3 * 2 ; v0 = ul )  | ( v0 = 3 ; move v0 , 3 ; move v0 , 2 * v0 )  
[6156] ( move 2 , 3 ; move ua / 3 , 2 ; v0 = 4 )  
[6157] ( move 0 - ua , 0 ; move 3 , 4 + 3 ; pen 2 )  
[6158] ( move 0 - 4 , 3 ; pen 0 ; move 3 , ua + 2 )  
[6159] ( move 4 , 0 - 3 ; move ua + 2 , 4 ; pen 0 )  
[6160] ( move 4 + ul , 3 ; pen 0 ; move 3 - 2 , 0 )  
[6161] ( move 4 + 4 , ul ; move 4 , 2 ; v0 = 3 )  
[6162] ( move ul , 3 / 4 ; move 3 , 2 ; v0 = 3 )  | ( move ul , 4 ; move ul , 2 + ul ; move 3 , 2 )  
[6163] ( move ua , 4 ; move 0 - 2 , 2 / 3 ; pen 0 )  
[6164] ( move ul , 3 * 2 ; pen 0 ; move 3 , 3 + 2 )  
[6165] ( move 4 , 3 / 4 ; move 4 , ua ; move 4 , 4 )  
[6166] ( move 4 , 2 / 3 ; move 3 , 0 - ul ; pen 0 )  
[6167] ( move 4 + 3 , ua * 4 ; move 2 , 2 ; pen 0 )  | ( move 4 + 3 , ua ; v0 = 4 - 2 ; move v0 , v0 )  | ( move 4 + 3 , 0 ; move 2 , 3 - ul ; ( pen 0 ; pen ul ) )  
[6168] ( move 4 , 4 ; move 3 / 4 , ul ; v0 = 2 )  
[6169] ( move 4 / 2 , ua ; pen 0 ; move 2 * 2 , 3 )  | ( move ul + ul , ua + ua ; pen 0 ; move 4 , 4 - ul )  
[6170] ( move 4 * 2 , ua ; pen 0 ; move 2 * 2 , 4 )  
[6171] ( move 2 - 4 , 4 ; pen 0 ; move ua , 4 - 2 )  
[6172] ( move 3 , 4 ; ( move 4 , 3 ; move 4 , ul ) )  
[6173] ( pen 4 + 3 ; move 4 , 0 - ul ; move 3 , 2 )  | ( move 4 , 0 - ul ; move 3 , 2 ; pen ua - ul )  
[6174] ( move 3 + 2 , 2 ; ( pen 0 ; move 4 , ua ) )  
[6175] ( move ul , 3 ; move 3 * 2 , 4 + 4 ; pen 0 )  
[6176] ( move 3 , 0 ; pen ua - 3 ; move 3 , 4 * 3 )  
[6177] ( move ua , 2 ; move 0 , 0 ; move 0 - ua , 4 )  | ( move ua , 2 ; pen ua + 4 ; move 0 - ua , 4 )  
[6178] ( pen 4 - 2 ; move ua , 3 * 3 ; move 2 , 3 )  
[6179] ( move ua - ul , 0 - ul ; move ua , ua + 3 )  
[6180] ( move 3 , ul - ua ; move 0 - ua , ua + ul )  | ( move ul + ul , ul ; move ul , ua ; move 0 - ua , ul )  
[6181] ( pen 3 ; move 4 , 2 - 3 ; move 2 , 4 + ul )  
[6182] ( pen 4 ; move 4 , 3 ; move 0 - 4 , ua - 3 )  
[6183] ( move 4 + 3 , 2 ; pen 4 ; move 4 , ua - 2 )  
[6184] ( move 4 , 3 ; pen 2 + ul ; move 3 , 4 + 3 )  
[6185] ( move 4 , 3 ; pen 3 + ul ; move 2 , 2 / 3 )  
[6186] ( move ua - ul , 0 - 2 ; move ul + ul , ul )  
[6187] ( move ua + ul , 3 ; move 0 - ul , ul - ua )  | ( move ua + ul , 3 ; v0 = ul ; move v0 , 4 )  | ( move ua + ul , 2 + ul ; move ul , 4 ; pen ua - ul )  | ( move ua + ul , 3 ; ( move 0 , ua ; move 0 - ul , ul ) )  | ( pen 2 ; move ua + ul , 3 ; ( move ul , 4 ; v0 = ul ) )  
[6188] ( move ua + 2 , ua + ul ; move 3 , ul + ul )  | ( move 2 , ul ; move ua , ua ; move 3 , 2 - ua )  
[6189] ( move ua + ul , 2 ; move 2 + ul , ua * ua )  
[6190] ( move ua + ul , ua ; move ua + 3 , ua + 4 )  
[6191] ( move ua - ul , 0 - ul ; move 2 - ua , ul )  
[6192] ( move ua - ul , 2 ; move 0 - ul , ul + ul )  | ( move ua - ul , 2 ; pen 4 ; move ul , 3 + 2 )  
[6193] ( move 2 + ul , ua - 2 ; move ua , ua * ua )  
[6194] ( move 0 , ua + 3 ; move ua + ul , ul / ua )  
[6195] ( move 3 , ua - ul ; move ua + ul , ua + 2 )  
[6196] ( move ua + ul , 2 ; move ua + ul , 3 + ul )  | ( move ua + ul , ul + ul ; move ua + ul , 4 )  
[6197] ( move ul - ua , ua ; move 0 - ua , ul - 3 )  
[6198] ( move ua + 2 , 3 ; move ul - ua , ua * ua )  
[6199] ( move ua , ua + ua ; move 3 - ua , 3 - ul )  
[6200] ( move ul - ua , ua + ul ; move ua , 2 - 3 )  | ( pen ul ; move ul - ua , ul ; move ua , ua - ul )  
[6201] ( move ul + ul , 0 ; move 4 - ua , ua * ua )  
[6202] ( move 4 , ua + ua ; move 2 - ua , ua - ul )  
[6203] ( move 3 , 3 ; pen ua ; move 4 * 2 , 4 * 2 )  
[6204] ( move ul + ul , ua ; move 2 - ua , ua + 4 )  
[6205] ( move 3 / ua , 0 ; pen 4 ; move 4 , 4 * 2 )  
[6206] ( move ua - ul , 2 ; move ua - 2 , ua - ul )  
[6207] ( move 4 , ua * 4 ; pen 3 ; move 0 - 4 , 4 )  
[6208] ( move 2 - ua , ua + ul ; move 3 , ua * ua )  
[6209] ( move 2 + ul , 2 ; move ul - ua , ul + ul )  | ( move 4 - ul , 4 / 2 ; move ul - ua , ul + ul )  
[6210] ( pen 3 ; move ua + 2 , 4 / 3 ; move 4 , 3 )  
[6211] ( move 4 , 2 ; move ua / 4 , 3 + 2 ; pen 4 )  
[6212] ( move ul - ua , 0 ; move 4 - ua , ul - ua )  
[6213] ( move ul - ua , ua * ua ; move 3 , ua + 2 )  
[6214] ( move ua - ul , 2 - ul ; move ua , ua - 2 )  
[6215] ( ( move 3 , 0 - 4 ; move ul , 2 ) ; pen 3 )  | ( pen 3 + ul ; ( move 3 , ua - 4 ; move ul , ul + ul ) )  
[6216] ( move 0 - 3 , ua + ul ; move ua , ul / ua )  
[6217] ( move ua , ua + 2 ; move ua + ul , ul - 4 )  
[6218] ( move 2 , 0 ; move ul , 2 ; move ua , 3 + 2 )  
[6219] ( move ua + ul , ul ; move 4 + ul , ua - 2 )  
[6220] ( move 2 - ua , ua ; move ua + ul , ul / 2 )  
[6221] ( move 3 + 3 , ua + ul ; move ul - ua , ul )  | ( v0 = ul - ua ; move 3 + 3 , v0 ; move v0 , ul )  
[6222] ( move 2 - 4 , ul + ul ; move ua , ua + ul )  | ( v0 = ul ; move v0 - 3 , 2 ; move ua , v0 - ua )  
[6223] ( move ul - ua , 0 - ul ; move ua , 3 / ua )  
[6224] ( move ua - ul , 3 ; move ua - 3 , ua + ul )  
[6225] ( move ua - ul , 2 ; move 3 + ul , ua - ul )  
[6226] ( move ua + ul , 2 - ul ; move ua - ul , 3 )  | ( move ua + ul , ul ; move ua - ul , 2 + ul )  | ( ( move 0 , ua ; move ua + ul , ul ) ; move ua - ul , 3 )  
[6227] ( move ul - ua , 2 - ua ; move 4 , ua + ul )  
[6228] ( move ua - 3 , 2 + ul ; move ul , ua - ul )  
[6229] ( move ul , 2 / ua ; move ul - ua , 0 - ul )  
[6230] ( move ua + ul , ua - 2 ; move ua , ul - 4 )  
[6231] ( move ua , 2 - ua ; move 4 + ul , ua * ua )  
[6232] ( move ua - ul , ua + 2 ; move 4 + ul , ul )  
[6233] ( move ua + ul , ua + 3 ; move ul , 4 + ul )  
[6234] ( move ul - ua , ua ; move ua + 4 , ul - 2 )  
[6235] ( move 3 + ul , 3 ; move ua + ul , ua * ua )  
[6236] ( move 3 - ua , ua ; move ua + ul , ua - 4 )  
[6237] ( move ua , ua - 4 ; move ua + ul , 3 + ul )  
[6238] ( move 0 , ul - 4 ; move ua - ul , ua * ua )  | ( move 0 , ua * ua ; move ua - ul , ul - 4 )  
[6239] ( move 2 - ua , ua ; move ul - ua , ua - 4 )  
[6240] ( pen 3 ; move 2 + ul , 4 ; move 3 , 4 * 4 )  
[6241] ( move ua / 2 , 0 ; move ua - ul , ul / ua )  | ( move 3 , ua ; pen 4 ; move 3 * 2 , ul / ua )  
[6242] ( move ul + ul , ua - 4 ; move 2 + ul , ul )  
[6243] ( move 3 + ul , ua - ul ; move ua - 3 , ul )  
[6244] ( move ua - 2 , ul / ua ; move ua , 2 - ul )  
[6245] ( move ua , ul + ul ; move ua + ul , 4 + 4 )  
[6246] ( move ua - ul , 2 / ua ; move ua - ul , 2 )  
[6247] ( move ul - ua , ua * ua ; move 4 + 2 , ul )  
[6248] ( move 2 , 4 ; move 2 + ul , 2 ; move ua , 0 )  | ( move 2 , 3 + ul ; move ul / ua , 0 ; move ua + 3 , 2 )  
[6249] ( move ua , 0 ; move 2 , 3 ; move 2 , 3 + ul )  
[6250] ( move ua - ul , 3 ; move ua - ul , ul - 2 )  
[6251] ( move 4 , 0 ; move ul , 2 ; move ua - 3 , 0 )  | ( ( move 4 , ua ; v0 = ul ) ; move ua - 2 , 2 )  
[6252] ( move ul - ua , ua + ul ; move 4 - ua , 3 )  | ( move ul - ua , ul ; move 0 , ul ; move 3 - ua , 2 - ua )  
[6253] ( move 4 + ul , ua + ul ; move ua , 4 + ul )  | ( pen 3 ; move 4 + ul , ul ; move ua , 4 + ul )  
[6254] ( move ua - 3 , ul + ul ; move 3 , ua - ul )  
[6255] ( move 4 , 0 ; move 0 - 3 , ua ; move ul , 2 )  
[6256] ( move 2 - ua , ul ; move ua + ul , ul / 2 )  
[6257] ( move 0 - ul , ul / ua ; move 3 , ua - ul )  | ( move ul , 0 - 4 ; move 2 , ua ; move ul , 4 )  
[6258] ( move 0 , 2 * 2 ; move ua , 2 ; move 2 , ul )  | ( move 3 / 2 , ua + 3 ; move ua , 3 ; move 2 , ul )  
[6259] ( move ua + 3 , ua / 3 ; move ul , ua + ul )  
[6260] ( move ua + 2 , ul ; move ul - 4 , ul - ua )  
[6261] ( move 4 + 4 , 4 ; pen 4 ; move 3 + ul , 4 )  | ( v0 = 4 ; move v0 + v0 , 4 ; move v0 , v0 )  | ( v0 = 4 ; move v0 + v0 , v0 ; move v0 , v0 )  
[6262] ( move ua - 3 , 4 ; move ua + ul , ul + ul )  
[6263] ( move ul , ul + ul ; move 3 - ua , ul - 2 )  | ( move 0 , ul ; ( move ua - 3 , 0 ; pen ua ; move ul , 4 ) )  
[6264] ( move ul - 3 , ua ; move 3 + ul , ua * ua )  
[6265] ( move ua + ul , ua ; move 4 * 2 , ua * ua )  
[6266] ( move 3 , 0 ; move 2 , 2 ; move 2 , ua * ua )  
[6267] ( move ul , 4 + ul ; move ua + ul , 3 + ul )  
[6268] ( move 2 + ul , ul - 4 ; move ua + ul , ul )  
[6269] ( move ua , ua - 4 ; move 3 - ua , ul + ul )  
[6270] ( move 2 , ul - 3 ; pen 3 ; move 4 , 3 / 4 )  
[6271] ( move 4 + ul , ul + ul ; move ua - 2 , ul )  
[6272] ( move ua - ul , ua * ua ; move 3 + 3 , ul )  
[6273] ( move ua - ul , ul - ua ; move 3 , ua - 3 )  
[6274] ( move ua + ul , ua ; move 3 + ul , ul - 4 )  
[6275] ( move ua - ul , ua - ul ; move 4 , 2 + ul )  
[6276] ( move 3 - ua , ua ; move ul - 3 , ul + ul )  
[6277] ( move ul , ul + ul ; move ua - 3 , 3 + ul )  
[6278] ( move 0 , ul ; move ua , 0 ; move 2 , 3 * 3 )  
[6279] ( move 4 , 4 * 4 ; pen 3 ; move 4 , 2 + ul )  
[6280] ( move ua - 4 , ua + 4 ; move ua , ul + ul )  
[6281] ( move ua , ul + ul ; move ua - ul , 4 + 3 )  | ( move ua , ua + 2 ; move 4 , 3 / 4 ; move ul , ua * 3 )  
[6282] ( move ul , ul - 2 ; move ua / 2 , ua - ul )  
[6283] ( move ua - 3 , ul ; move 4 - ua , ul + ul )  
[6284] ( move ul - ua , 3 * 2 ; move ul + ul , ul )  
[6285] ( move ul , 2 / ua ; move ua - 3 , ul + ul )  
[6286] ( move ul / 3 , ua ; move ua - 2 , ua - ul )  | ( pen ul ; ( move 2 / ua , ua ; move 3 + ul , 0 - ul ) )  
[6287] ( move 4 , ul - 4 ; move ua + ul , ua + ul )  
[6288] ( move 3 , 0 ; move 3 , ua + 4 ; move ua , 2 )  
[6289] ( move ul - 3 , ua ; move 2 + ul , ul / ua )  
[6290] ( move ua - 3 , ul + ul ; move ua - 4 , ul )  
[6291] ( move ul - 2 , ul / ua ; move ua + 3 , ul )  
[6292] ( move ua , 2 / ua ; move ul / ua , 2 - ua )  | ( move ua , ul / 3 ; move ul / ua , ul ; move 0 , ua )  
[6293] ( move 2 , ul + ul ; move ua + ul , ua / 4 )  
[6294] ( move ul - ua , ua ; move ua + ul , 4 * 3 )  
[6295] ( move ua - 2 , ua ; move 4 / ua , ul + ul )  
[6296] ( move ul / 3 , ua * ua ; move ua , ua - 2 )  
[6297] ( move ul , ua * ua ; move ul - ua , 2 - 4 )  
[6298] ( move ul + ul , ua - ul ; move ua , 4 * 2 )  
[6299] ( move 0 - ul , 4 / ua ; move ul - ua , ul )  
[6300] ( move 4 - ua , ua ; move ul + ul , ua - 4 )  
[6301] ( move ul , 2 - ul ; move 4 + ul , ua * ua )  
[6302] ( move ul - ua , 2 - ul ; move ua , ul / 2 )  | ( move ul - ua , ul ; pen ua + ul ; move ua , ul / 2 )  
[6303] ( move ua , 4 + ul ; move 4 - ua , ua - ul )  
[6304] ( move 4 + ul , ua + 4 ; move ul , ua - ul )  | ( move ua - ul , 4 - ua ; move ul , 4 + ul )  | ( move 4 + ul , 2 + 2 ; move ul , 3 - 4 ; pen ua )  
[6305] ( move ua , 2 ; move 2 , 4 ; move ua , 0 - 3 )  
[6306] ( move ul - 3 , ua - ul ; move ua , ua - 4 )  
[6307] ( move ua - 3 , ul + ul ; move 4 + ul , ul )  
[6308] ( move ua , ua * ua ; move ul - ua , 2 / 3 )  
[6309] ( move 3 * 2 , 3 ; move 0 , 2 ; move ua , ua )  | ( move 4 + 2 , 3 ; move ua , ua + 2 ; v0 = 3 )  
[6310] ( move 0 , 3 + 3 ; move 3 , ua ; move 2 , ul )  | ( move 3 , 4 + 2 ; move ul + ul , ul ; pen ul )  
[6311] ( move 4 , 4 + ul ; move ua + ul , ua * ua )  
[6312] ( move 3 , ul - ua ; move ua - ul , 3 - ul )  
[6313] ( move ua , ua - ul ; move 3 - 4 , ul + ul )  
[6314] ( move 4 , 4 / 3 ; pen ul ; move 4 , 4 + 2 )  
[6315] ( move 3 + ul , ul ; move ua - ul , 4 + ul )  
[6316] ( move ul , 0 - ul ; move ul - ua , ul / 3 )  
[6317] ( move ul - 3 , ua ; move ul - ua , ua - 4 )  
[6318] ( move 0 , 4 ; move 0 , ul / 4 ; move ua , 0 )  | ( ( move 0 , 4 ; pen ua ) ; move ua , ul / 4 )  
[6319] ( move ua - 2 , ul - 4 ; move ul - ua , ul )  
[6320] ( move ul - 4 , ua - 3 ; move ul , ul + ul )  
[6321] ( move ua + ul , ua - ul ; move 2 , ul / 4 )  
[6322] ( move ua + ul , ul ; move ua / 3 , ul - 3 )  | ( move ul , ul ; move ua , ua ; move ua - 4 , ua - 2 )  
[6323] ( move ul - 3 , ul + ul ; move ua - ul , 4 )  
[6324] ( move ul + ul , 4 - ul ; move ua , 4 + ul )  
[6325] ( move 3 + ul , ul / 2 ; move ul , ul + ul )  | ( pen 3 ; move 4 , 3 / ua ; ( move ul , 2 ; v0 = ul ) )  
[6326] ( move 2 , 3 ; move ua + ul , 2 ; move 2 , 3 )  
[6327] ( move ua - ul , 4 + 4 ; move ul , ul + ul )  | ( move ua - 4 , 4 * 2 ; move 2 + ul , ua ; move ul , 2 )  
[6328] ( move 0 - 2 , ua ; move 3 , 4 ; move ul , 2 )  
[6329] ( move ua , ua / 3 ; move ul - ua , 4 + ul )  
[6330] ( move 3 / ua , ua ; move ua + ul , 3 / ua )  
[6331] ( move ul , ul + ul ; move ua - ul , 3 * 3 )  
[6332] ( move ul , ua - ul ; move 2 - ua , 4 / ua )  
[6333] ( move ua , 4 ; move ul , 4 + 2 ; move 2 , 0 )  | ( move ua , 4 ; ( move 3 , 3 * 2 ; v0 = ul ) )  
[6334] ( move 3 , 0 ; move ua , ua - 2 ; v0 = 2 )  | ( ( pen ua ; move 3 , 0 ) ; move ua , ul - 3 )  | ( move 2 + ul , ua ; move 0 , 2 ; move ua , ua - 4 )  | ( move 3 , ua ; ( move ua , ul - 3 ; pen 0 ) ; pen ul )  
[6335] ( move ua - ul , 4 - ul ; move 3 , ul + ul )  | ( pen 4 - ul ; move ua - ul , 3 ; move 3 , 2 )  
[6336] ( move ua + ul , ua - ul ; move ul , 2 / 4 )  
[6337] ( move ul + ul , ul / ua ; move 4 + ul , 2 )  
[6338] ( move 4 - ua , 4 + ul ; move ul + ul , ul )  
[6339] ( move 2 , 4 ; move 0 , ul - 3 ; move 2 , ua )  
[6340] ( move ua , ul - 4 ; move ul - ua , 4 + ul )  
[6341] ( move 3 + ul , ua / 3 ; move ul , ua * ua )  
[6342] ( move ua , 4 + ul ; move ul + ul , ul - 4 )  | ( move ua , 4 + ul ; move 4 - ua , ul / ua )  | ( move 3 / ua , 2 ; move ua , 3 ; move 4 - ua , ul / ua )  
[6343] ( move ul , 4 ; move 0 - ul , 2 ; move 4 , 0 )  
[6344] ( move 4 / 3 , ua + ul ; move ua , ua * ua )  
[6345] ( move 0 , 3 ; move ua , ua / 3 ; move 0 , 4 )  | ( v0 = 3 ; move ul , ua / v0 ; move ua , v0 )  
[6346] ( move ul - ua , ua * ua ; move 4 , ua - 4 )  
[6347] ( move 2 / 4 , ul ; move ua + ul , ua * ua )  
[6348] ( move ul , 3 - ul ; move 4 + ul , ua * ua )  
[6349] ( move 4 + ul , 4 - ul ; move ua , ua - ul )  
[6350] ( move 4 * 2 , ul ; move ul + ul , ua * ua )  
[6351] ( move 3 , 4 ; move 0 , 3 + 3 ; move ua , ua )  
[6352] ( move ul - 4 , ul - ua ; move 4 + ul , ul )  
[6353] ( move ul - ua , ua + 3 ; move ul , ul / 4 )  
[6354] ( move 2 , ua + 3 ; move 2 , 4 ; move ul , 2 )  
[6355] ( move 2 , ua * ua ; move ua / 3 , ul / ua )  | ( move ul , 4 * 2 ; v0 = ul - 4 ; move v0 , v0 )  
[6356] ( move ua + ul , ul / 3 ; move ua - ul , 4 )  
[6357] ( move ul / 2 , ul ; move ua - ul , 2 / ua )  | ( move ul / 2 , ul ; v0 = ua ; move v0 - ul , 2 / ua )  
[6358] ( move ua , 3 ; move 3 , 3 ; move 4 + ul , 0 )  
[6359] ( move ul , ul + ul ; move 4 - ul , ua - 4 )  | ( move ul , 2 ; move 3 , ua - 4 ; v0 = ul )  
[6360] ( move 4 , ul / ua ; move ua - 3 , ul + ul )  
[6361] ( move ul / 2 , 4 - ul ; move ua , ua * ua )  
[6362] ( move 4 - ul , ua - ul ; move ua - ul , 4 )  
[6363] ( move ua , 0 ; move 2 , ul / 2 ; move 4 , 2 )  
[6364] ( pen 4 ; ( move 3 , ul / 4 ; move 2 , 2 ) )  
[6365] ( move 4 , 2 ; move ul , 0 ; move 3 , ul - 2 )  
[6366] ( move 0 , 2 ; move ua , 3 ; move 2 , ul / 3 )  
[6367] ( move ul , 0 ; move 4 , 3 * 3 ; move 0 , ul )  | ( move ul , ua ; move ul / ua , 4 + 3 ; move 4 , 2 )  
[6368] ( move ua + ul , 4 + ul ; move 4 / ua , ul )  
[6369] ( move ul , ul ; move 4 , 2 + 2 ; move 2 , 2 )  
[6370] ( move ua , ul + ul ; move ul + ul , 3 / 4 )  
[6371] ( move ul - 4 , ua ; move ul + ul , ul / 2 )  
[6372] ( move 3 , 0 ; move ua - 3 , ul ; move 3 , 3 )  
[6373] ( move ul - ua , ul - 4 ; move ua , ul / 2 )  
[6374] ( move ul , ua - ul ; move ua + ul , 4 / 3 )  
[6375] ( move ua , 0 ; move 3 , 4 ; move 4 , 2 + ul )  
[6376] ( move 3 , 0 ; move 2 / ua , 4 ; move ua , 2 )  
[6377] ( move 3 , ul - 2 ; move 3 , 4 ; move 0 , ua )  | ( ( pen ua + 4 ; move 3 , 0 - ul ) ; move 3 , 4 )  | ( ( move 3 , 0 - ul ; v0 = 3 + ul ) ; move 3 , v0 )  
[6378] ( move 3 , 0 ; move ul , ul ; move 4 , 0 - 4 )  
[6379] ( move ua - ul , ua - ul ; move ua , 4 * 4 )  
[6380] ( move ua + ul , 4 / 3 ; move ul + ul , ul )  
[6381] ( move 4 + ul , ua + ul ; move 4 , ul / ua )  
[6382] ( move ul , ul / 4 ; move 2 + ul , ua - ul )  
[6383] ( move 4 , ul + ul ; move ul - 4 , ul + ul )  
[6384] ( move ua + ul , ul - 3 ; move ul , ua / 4 )  
[6385] ( move ul / 2 , ul ; move ua + ul , 3 / ua )  
[6386] ( move ul + ul , 4 + 4 ; move ua , ul / ua )  
[6387] ( move ua - ul , ul / 4 ; move ua - 2 , ul )  
[6388] ( move 4 / ua , 3 + ul ; move ua - ul , ul )  
[6389] ( move ul - 4 , ua - ul ; move ua , 4 - ul )  
[6390] ( move ua - 3 , 4 / ua ; move ua - ul , ul )  
[6391] ( move 2 , ul ; move 2 , ul ; move 3 + 2 , 4 )  
[6392] ( move 3 , ua - ul ; move 4 , 2 ; move 2 , 2 )  
[6393] ( move 3 , 0 ; move 4 / ua , 4 ; move ul , 0 )  
[6394] ( move 3 , ua + ua ; move 3 , 2 ; move 4 , 3 )  
[6395] ( move ul , 4 * 2 ; move 3 , 0 ; move ul , 2 )  
[6396] ( move ul , 0 ; move 2 , 4 ; move ua , 3 - 4 )  
[6397] ( move ua , 0 ; move 2 , 4 ; move 4 , ua - 4 )  
[6398] ( move ua + 2 , 4 ; move 2 , ul ; move 3 , 3 )  
[6399] ( move 4 , ua ; move 3 , 3 ; move 2 + ul , 2 )  
[6400] ( move ua , ul ; move 2 - 4 , 0 ; move 3 , 4 )  
[6401] ( move ul , ul / 4 ; move ua - ul , ua + 4 )  
[6402] ( move ul + ul , ul ; move 3 - ua , ul / 4 )  
[6403] ( move ul , ul + ul ; move ua / 2 , 4 / ua )  
[6404] ( move 2 , 2 - ua ; move 4 , 2 ; move ua , 4 )  
[6405] ( move ua , 3 ; move 2 , 4 + 2 ; move ua , 4 )  
[6406] ( move ua , 3 ; move 0 - 4 , ul ; move 4 , 2 )  
[6407] ( move ul + ul , ul + ul ; move 3 , ul / 4 )  
[6408] ( move 4 , 2 ; move ua + ul , 3 ; v0 = 0 )  | ( pen ua ; move 3 , 2 ; move ua + ul , 4 - ul )  | ( move ua - 4 , 2 ; move ul , 4 - ul ; move ua , 0 )  | ( move ul + ul , 2 ; ( pen ul ; move ua + ul , 3 ) )  
[6409] ( move 2 , 3 ; move ua , 2 ; move ul / 4 , 0 )  
[6410] ( move ul / 4 , ua + ul ; move 4 , ua * ua )  
[6411] ( move 3 + ul , 0 ; move ua , 4 ; move 4 , 3 )  
[6412] ( move 4 , 2 ; move ul - ua , 3 ; move 0 , 4 )  
[6413] ( move ul - ua , 2 ; move 4 , 2 ; v0 = 0 )  
[6414] ( move 4 , 0 ; move 4 , 4 + ul ; move 2 , ua )  
[6415] ( move ua - 3 , 2 ; move ua , 3 ; move 3 , 3 )  | ( pen 2 ; move 4 , 2 ; ( move ua , 3 ; move 3 , 3 ) )  
[6416] ( move 2 , 3 * 2 ; move 3 , ua ; move ua , 3 )  
[6417] ( move ul , 0 - 3 ; move 2 , 3 ; move ul , 4 )  
[6418] ( move ua , ul / 4 ; move ul + ul , 3 - ul )  | ( move ua , ul / 4 ; ( pen 4 ; move 2 , 2 ) )  
[6419] ( move ul - 4 , 2 ; ( move 4 , 4 ; pen 4 ) )  
[6420] ( move ul , ul ; move 3 , 3 * 2 ; move 0 , 3 )  
[6421] ( move 2 , ul ; move 3 , ul ; move 3 , 3 + 2 )  
[6422] ( move 2 , 3 ; move ul , 3 ; move ua , 4 + 3 )  
[6423] ( move 4 / 2 , 3 ; move ua , ua ; move 2 , 2 )  
[6424] ( move 0 , 3 ; move 4 , ua ; move ul - 3 , 4 )  
[6425] ( move 2 , ua ; move ul , 4 + 4 ; move 2 , 3 )  
[6426] ( move 4 , 0 ; move ul , 2 ; move 2 , 4 / ua )  
[6427] ( move 0 , 4 ; move ul , 3 ; move ua , 4 * 2 )  
[6428] ( move 4 , 0 ; move 3 - ul , 4 ; move ul , 2 )  
[6429] ( move 2 , 4 ; move ul , ul ; move 3 - 2 , 2 )  
[6430] ( move 3 , ul ; move ua - 3 , 2 ; move 4 , 2 )  
[6431] ( move 4 , 0 ; move ul , 3 ; move ua , 4 * 2 )  
[6432] ( move 4 , 2 ; move 3 + 3 , ul ; move 2 , ul )  
[6433] ( move 0 , 3 ; move 4 + ul , ua ; move 4 , 4 )  | ( pen ul ; move 4 + ul , ua + 3 ; move 4 , 3 + ul )  
[6434] ( move 4 , 3 ; move ul , 3 ; move 2 + ul , 2 )  
[6435] ( move 2 , ua - ul ; move 3 , 3 ; move 4 , 2 )  
[6436] ( move 3 , 3 ; move 3 , 2 ; move 3 + ul , ul )  
[6437] ( move 3 , ul ; move 0 , ul / 3 ; move 4 , 2 )  
[6438] ( move 4 , 0 ; move ua - ul , 3 ; move 4 , 4 )  
[6439] ( move ua , 4 ; move 4 , 2 ; move 2 , ul - 3 )  
[6440] ( move 4 + 4 , ul ; move ul , 4 ; move 3 , 0 )  | ( v0 = 4 ; move v0 + 4 , ul ; move v0 , 4 )  
[6441] ( move ua , 3 * 2 ; move 2 , 4 ; move 4 , ua )  
[6442] ( move ua , 4 ; move ul , 4 ; move 4 , 0 - 3 )  
[6443] ( ( move 3 , 0 ; move 2 , ul ) ; move ua , 3 )  
[6444] ( move 0 , 3 ; move 4 , ua ; move 3 , 4 / ua )  
[6445] ( move 4 , 3 - 4 ; move ua , 2 ; move ul , 2 )  
[6446] ( move 2 * 2 , 2 ; move ul , 4 ; move 3 , ul )  
[6447] ( move ul , 3 ; move 2 , 4 ; move 3 + ul , 3 )  
[6448] ( move 4 - ua , 0 ; move 4 , 4 ; move ua , 4 )  
[6449] ( move ua , 0 ; ( move 3 , ul ; move 3 , 2 ) )  
[6450] ( move 4 / ua , ul / ua ; move ua , 3 / ua )  
[6451] ( move ua , 3 ; move 4 , 3 + ul ; move 2 , 4 )  
[6452] ( move ul , 4 ; move 2 , ul ; move 2 - 3 , 3 )  
[6453] ( move 4 + ul , ul / ua ; move ul , ul / 3 )  
[6454] ( move ua , ua ; move 2 / 3 , 4 ; v0 = 0 )  
[6455] ( move 4 , 2 * 2 ; move ua , 4 ; move ul , 2 )  
[6456] ( move 4 , 2 ; move 3 , 3 - ul ; move ul , 2 )  
[6457] ( move 2 , 0 ; ( move ua , 4 ; move ua , 3 ) )  
[6458] ( move 2 , ul ; move ul - 4 , 3 ; v0 = 0 )  | ( pen 3 ; ( pen 2 ; ( move 2 , ul ; move 0 - 3 , 3 ) ) )  
[6459] ( move 3 , 4 ; move 2 , 3 ; move ua , 4 + ul )  
[6460] ( move 2 , 4 * 2 ; move 4 , 2 ; move ua , ul )  
[6461] ( move 4 , 0 ; move ua / 2 , 4 ; v0 = ua )  | ( move 4 , ua ; pen 2 ; move ua / 2 , ua + 4 )  
[6462] ( ( move 3 , ul ; move ua , 4 ) ; move 2 , 0 )  | ( move 3 , ul ; move ua + 2 , 4 ; v0 = ua + 4 )  | ( move 3 , ul ; move ua + 2 , 3 + ul ; move 0 , ua )  
[6463] ( move ua , 2 * 2 ; move 4 , ul ; move 4 , 3 )  
[6464] ( move ul , 3 ; move 4 , 4 ; move ua - 2 , 3 )  
[6465] ( move 4 , 4 ; move 2 , ua / 4 ; move ul , 0 )  
[6466] ( move ul , 3 ; move 3 , 3 ; move ua / 2 , 3 )  | ( ( move 3 , 3 + 3 ; move 3 , 3 ; pen ul ) ; pen ul / ua )  
[6467] ( move 3 , 4 ; move 3 , 3 - 2 ; move ul , ul )  
[6468] ( move ua , 2 ; move 3 / ua , 3 ; move 3 , 4 )  
[6469] ( ( move ua , ul ; move 3 , 3 ) ; move 3 , 0 )  | ( move ul , 3 ; ( move ua , ul - 3 ; move ua , 3 ) )  
[6470] ( move 3 , ul - 3 ; move 2 , 3 ; move 4 , ul )  
[6471] ( move 4 , 0 ; move ul / 4 , ul ; move 2 , 3 )  
[6472] ( move 0 , 4 ; move 4 , 2 / 4 ; move ul , ua )  | ( v0 = 4 - ua ; move v0 - 3 , ua * v0 )  | ( move 0 , 4 ; move ul , ul / 2 ; move ul - ua , ua )  
[6473] ( move 4 , 3 ; move ua , 4 + ul ; move 3 , 3 )  
[6474] ( move 4 , 3 - ua ; move 4 , ul ; move 3 , 2 )  
[6475] ( move 2 , ul ; move 3 , 2 / 4 ; move ua , 3 )  
[6476] ( ( move 4 , 2 ; move ul , 0 ) ; move 2 , ul )  | ( move 4 , 2 ; ( move ul , ua ; move 2 , ul ) )  | ( move 3 + ul , ul + ul ; move ul , 0 ; move 2 , ul )  
[6477] ( move 4 + ul , 2 ; move 2 , 4 ; v0 = ua )  | ( move 3 + 2 , ul + ul ; move 0 , 3 ; move 2 , ul )  
[6478] ( move ua + ul , 3 ; move 4 , 2 ; v0 = 3 )  | ( pen ul ; move ua + ul , 3 ; move 4 , ul + ul )  | ( v0 = ul + ul ; move ua + ul , 3 ; move 4 , v0 )  
[6479] ( move ua , ul ; move 4 , 3 - 2 ; move 3 , 4 )  
[6480] ( move ua , 3 * 2 ; v0 = ul ; move 2 , 4 )  
[6481] ( move ul / 2 , 2 ; move ul , 3 ; move 3 , 4 )  | ( move ul , 4 + ul ; move 3 , ua + 4 ; pen ul + ul )  
[6482] ( move 3 * 2 , 3 ; move ul , 2 ; v0 = ul )  
[6483] ( move ul , 4 * 3 ; move 0 , 4 ; move 4 , ul )  
[6484] ( move 0 - ul , 0 ; pen 0 ; move 3 + ul , 4 )  
[6485] ( move ul , 3 ; move 3 , 4 ; move ul , 2 - 4 )  
[6486] ( move 2 , ul ; move 4 , 4 ; move 3 - ua , 4 )  
[6487] ( move 3 , ul / 4 ; move 4 , ul ; move 3 , 0 )  
[6488] ( move 3 , ul / 4 ; move 4 , 0 ; move 3 , ul )  
[6489] ( move ul , 4 - 3 ; move 4 , 2 ; move 3 , ul )  
[6490] ( move 4 , 2 ; move 3 / ua , 3 ; move 4 , ua )  
[6491] ( move ul , 4 ; move 4 , 4 + 2 ; move 3 , ul )  
[6492] ( move 4 , ul / 3 ; move 0 , ul ; move 3 , 4 )  
[6493] ( ( move 4 , ul ; move 2 , 2 ) ; move ua , 2 )  
[6494] ( ( move 4 , 2 ; move ua , ul ) ; move 2 , 2 )  
[6495] ( move 4 , ul ; move 3 , ul ; move 4 + 3 , 3 )  
[6496] ( v0 = 0 ; move 3 / ua , 3 ; move 4 , ul )  
[6497] ( move 3 * 2 , ul ; move 3 , ul ; v0 = 2 )  | ( pen 3 ; ( move 3 * 2 , ul ; move 3 , ul ) )  | ( pen ul + ul ; move 4 + 2 , ul ; move 3 , ul )  | ( move 3 + 3 , ul ; ( move 3 , ua + ul ; move 0 , ua ) )  | ( move 3 * 2 , ul ; v0 = ul + ul ; move v0 + ul , ul )  
[6498] ( move 4 , 0 ; move ul , 4 * 4 ; move 4 , ua )  
[6499] ( move 4 , ul ; move 4 , ul / 2 ; move 2 , 3 )  
[6500] ( move ua , 3 ; move 3 , 4 ; move 4 , ul / 2 )  
[6501] ( move 2 - ua , 3 ; v0 = 4 ; move ul , 4 )  | ( move 2 - ua , 3 ; move 0 , ul ; move ul , 3 )  
[6502] ( move 2 , ua ; pen 0 - 3 ; move ua , 3 + 2 )  | ( move 3 - ul , 0 ; ( pen 0 ; move ua , 4 + ul ) )  
[6503] ( move 4 , ul - 4 ; move ua , 4 ; move 3 , 3 )  
[6504] ( ( move 2 , ul ; move 3 , 3 ) ; move ul , 2 )  
[6505] ( move 2 , 3 ; move ua , ul / 4 ; move 4 , 3 )  
[6506] ( move 4 , 3 - ul ; move 4 , 2 ; move ul , 4 )  
[6507] ( move 3 * 3 , ua ; move 2 , 4 ; v0 = ul )  
[6508] ( move 4 , ua - 2 ; move 4 , 3 ; v0 = ul )  | ( v0 = ua - 2 ; move v0 , v0 ; move v0 , 3 )  
[6509] ( move 4 , ul ; move 3 , ul / 4 ; move 0 , 4 )  
[6510] ( move 3 , 4 ; move 3 / 4 , ul ; move 3 , ua )  
[6511] ( move 3 , ul / 4 ; move ua , 4 ; move 3 , 3 )  
[6512] ( move 2 , 2 / 4 ; v0 = ul ; move ua , 4 )  | ( move ul + ul , 2 / 4 ; move ua , 4 ; v0 = ua )  
[6513] ( move 4 - ua , ul ; move 4 , 3 ; v0 = 3 )  
[6514] ( move 3 , ul - 4 ; v0 = 2 ; move 4 , ul )  | ( ( move 4 - ul , ul - 4 ; move 4 , ul ) ; pen ua )  
[6515] ( move ua , 3 ; move 4 - ua , 4 ; v0 = 4 )  
[6516] ( move ua + 3 , 4 ; move ul , 4 ; v0 = 4 )  | ( ( move ua + 3 , 4 ; move ul - 2 , ul ) ; v0 = ua )  
[6517] ( move ul - ua , 4 ; move 4 , 4 ; v0 = 2 )  
[6518] ( move 0 , 0 ; pen ul - 4 ; move ua + 2 , 4 )  
[6519] ( move 4 , ul ; move 3 , ua / 4 ; move 3 , 3 )  
[6520] ( move 3 , 4 / 3 ; move 4 , ul ; move 3 , ul )  
[6521] ( move 4 , ul ; move 4 + 3 , 4 ; v0 = ul )  
[6522] ( v0 = ua * 3 ; move 4 + 3 , ul / v0 )  | ( v0 = ul / 4 ; move ul , v0 * v0 ; move ua , ua )  
[6523] ( move ul - 4 , ul ; move 4 , 3 ; v0 = 3 )  | ( ( move 3 - ua , ul ; move 4 , 3 ) ; pen ul )  | ( move 3 - ua , ua + ul ; ( move 4 , 3 ; pen 3 ) )  
[6524] ( move ul , 4 / ua ; move 3 , 3 ; v0 = 3 )  
[6525] ( move 0 - 2 , ua * ua ; pen 0 ; move 4 , 4 )  
[6526] ( move ul , 4 ; move 3 - 4 , 4 ; move 4 , ul )  | ( move ul , 4 ; move ul , ua + ul ; move 4 , 4 )  
[6527] ( ( move ua , ul ; move 2 , 4 ) ; move 3 , 4 )  | ( move ua , ul ; pen ul ; ( move 2 , 4 ; move 3 , 3 + ul ) )  
[6528] ( pen 2 ; move 4 , ul + ul ; move 0 - 2 , 2 )  
[6529] ( pen ul ; move 3 , 2 ; move ua + 2 , 0 - 4 )  
[6530] ( move ua + 2 , ul ; pen 2 ; move 4 , 0 - 3 )  
[6531] ( move ul - 4 , 2 ; move 2 , 2 - ua ; pen 0 )  
[6532] ( move 0 , 3 ; pen 4 - ua ; move 3 + 2 , ul )  
[6533] ( move ul , 2 ; ( pen 0 ; move 2 - ua , 0 ) )  
[6534] ( move 2 , ul ; ( move ul , 4 ; move 4 , 3 ) )  | ( move 2 , ul ; move ul , ua + 4 ; move 2 * 2 , 3 )  
[6535] ( move ul , 4 ; move 3 , ul / 4 ; v0 = 2 )  | ( move ul , 4 ; ( move 2 + ul , ul / 4 ; v0 = ua ) )  
[6536] ( move ul , 4 ; move 3 , 4 / 3 ; move ul , 4 )  
[6537] ( move 4 , 4 ; move 4 , ul / 4 ; move 2 , ul )  
[6538] ( move 2 , ul ; ( move 4 , 4 ; move ua , 4 ) )  
[6539] ( move 3 , 0 ; move ua + ul , 4 / 3 ; pen 0 )  
[6540] ( pen 3 ; move ua , 0 ; move 3 - ua , 2 - 4 )  
[6541] ( move 2 , ul / 4 ; v0 = ul ; move 3 , 4 )  
[6542] ( pen 2 ; move 4 , 0 - 4 ; move ua + ul , 2 )  
[6543] ( pen ul ; move 4 + ul , 0 - 2 ; move 4 , 2 )  
[6544] ( pen ua ; move 3 + 2 , 4 ; move 2 , ul - 2 )  | ( move 2 , ua + 4 ; move 3 , ua ; move 2 , ul - 2 )  
[6545] ( pen ul ; move 3 + ul , 0 - 3 ; move 2 , 4 )  
[6546] ( move 2 , 3 + 3 ; move ua , 2 ; pen ua * 4 )  | ( move 2 , 3 + 3 ; v0 = 3 - 4 ; move ua , ul - v0 )  
[6547] ( pen ul ; move 4 + 2 , ua ; move 3 , 3 + 3 )  
[6548] ( move ua , 3 ; ( pen 0 ; move ua , 3 + 2 ) )  
[6549] ( move 4 , 4 + 3 ; move 3 + ul , ul ; pen 0 )  | ( move 4 , 4 + 3 ; move ul , ua + ul ; move 3 , ua * 2 )  
[6550] ( pen ua ; move 3 + 2 , ua ; move 3 , 3 / 2 )  
[6551] ( move 2 - 4 , 0 ; pen 3 / ua ; move 3 , ul )  
[6552] ( move 2 , 0 ; ( pen ul - 2 ; move 3 , ua ) )  | ( ( pen 2 ; move ua - 4 , ua ) ; pen 0 ; move 3 , 0 )  
[6553] ( move ul - ua , ua ; move 0 - ua , ua + ul )  | ( move ua , ul - ua ; v0 = ua - ul ; move v0 , v0 )  | ( move ul - ua , ua * 4 ; move 0 , ua / 2 ; move ua , ul )  
[6554] ( move 2 , 2 ; move ul - ua , 2 - 4 ; pen 4 )  
[6555] ( ( move 3 + ul , 2 ; pen 0 ) ; move 3 , ua )  
[6556] ( move 4 + 4 , 3 ; move 3 + ul , 2 ; pen ua )  
[6557] ( move 4 , 2 / 4 ; move ua , 0 - 2 ; pen ul )  
[6558] ( move 2 , 4 * 4 ; move ua , 3 + 2 ; pen ua )  
[6559] ( move 4 + ul , 3 ; pen ul ; move 4 , 0 - 4 )  
[6560] ( move 3 * 2 , 3 ; move 4 , 2 ; pen ul - ua )  
[6561] ( ( move ua , ua * 4 ; pen 0 ) ; move 2 , 2 )  
[6562] ( move ua - 2 , ua ; pen 4 ; move 4 , 2 - 4 )  | ( v0 = ua - 2 ; ( move v0 , 0 ; move 4 , v0 ) )  
[6563] ( move 3 , 4 - ul ; ( pen 0 ; move ul , 0 ) )  | ( move 3 , 3 ; ( pen ul ; pen 0 ; move ul , ua ) )  
[6564] ( ( move 2 , 3 ; move 4 - ua , ua ) ; pen 0 )  
[6565] ( move ua - 2 , ua ; move 2 , 4 ; pen 4 * 3 )  
[6566] ( ( move 2 , ua ; move 3 , 3 + 2 ) ; pen ua )  
[6567] ( move 2 , 4 ; ( pen 0 ; move ua , ua - 3 ) )  
[6568] ( ( move 4 , 0 ; move ua , 3 + 2 ) ; pen ul )  | ( pen 4 + 2 ; move 3 + ul , ua ; move ua , 4 + ul )  | ( move 4 , ua + ua ; move 0 , ua + ul ; move ua , 3 + ul )  | ( ( move 4 , ua ; pen ul ) ; move ua , 3 + 2 ; v0 = 3 )  
[6569] ( move 3 , ua + 4 ; ( pen 0 ; move ua , 3 ) )  
[6570] ( move 2 , 0 ; move 0 , ul ; move 0 - ua , ul )  
[6571] ( move ua / 2 , 2 ; move 4 , 4 + 2 ; pen ul )  
[6572] ( pen 3 ; move 2 , ul / 2 ; move ua , 2 - 4 )  
[6573] ( move 3 + ul , 3 ; move 4 , 4 / ua ; pen 0 )  
[6574] ( ( move 2 , 3 ; pen 0 ) ; move ua + ul , 4 )  
[6575] ( move 3 , ua ; pen ul - 4 ; move 3 , 4 + 2 )  
[6576] ( move ul , 3 ; pen ua ; move 4 + 3 , 3 / 2 )  
[6577] ( pen ua * 2 ; move 3 / 2 , 2 ; move 4 , ul )  
[6578] ( move 4 , 4 ; move 4 + 4 , 2 + ul ; pen ua )  | ( move 2 + 2 , 4 ; move ul , 3 ; move ua , ua )  | ( move ul , 3 + ul ; move 3 , 0 ; move ua + ul , 3 )  | ( v0 = 4 ; move v0 , v0 ; move ua + ul , v0 - ul )  
[6579] ( move 4 , ul ; pen 2 ; move ul - 3 , 3 * 2 )  
[6580] ( pen 2 ; move 2 , 2 / 4 ; move ua , 3 / ua )  
[6581] ( move ul , 4 / 3 ; pen ua ; move 0 - 3 , 4 )  
[6582] ( move ul , 3 ; move 0 - 4 , 2 / 4 ; pen ul )  
[6583] ( move 0 - ua , ua * ua ; move ul , ul + ul )  
[6584] ( move ua , 0 ; move ul , 3 + 2 ; move ua , 0 )  
[6585] ( move ul - ua , 0 ; move ul + ul , ua - ul )  
[6586] ( move 4 - ul , 0 ; move ua / 2 , 4 ; pen 4 )  
[6587] ( pen 4 ; move ul - ua , 4 + 4 ; move 2 , 3 )  
[6588] ( move ua , 4 * 2 ; move 4 , 3 ; pen 3 - ua )  
[6589] ( move ua + ul , 2 + ul ; move ul , ua - ul )  | ( move ua + ul , 4 - ul ; move ul , ua - ul )  | ( pen ua ; move ua + ul , 3 ; move ul , ul - 2 )  
[6590] ( move ua - ul , ua ; move 2 - ua , ua - ul )  
[6591] ( move ua , 4 / 2 ; pen 0 ; move 4 , ul / 3 )  
[6592] ( move 3 , ua / 4 ; ( pen 0 ; move ua , 2 ) )  
[6593] ( move ul - ua , ua ; move 2 + ul , ua * ua )  | ( move ul - ua , ua ; move 3 , ua * ua ; pen ua + 3 )  
[6594] ( move 4 - ua , 4 + 3 ; pen 4 ; move 3 , ul )  
[6595] ( pen ua * 3 ; move 3 , 4 * 3 ; move ua , 3 )  | ( move 2 , 4 * 3 ; v0 = 3 ; move ua , v0 )  
[6596] ( move ua , 0 ; move 2 , ul ; move 2 , ua + 2 )  
[6597] ( move ul - ua , ua ; move ua + ul , ul - 3 )  
[6598] ( pen ua ; move 2 , 4 / 3 ; move ua / 2 , 4 )  
[6599] ( move ul , 3 ; ( pen 0 ; move 3 , ul - 4 ) )  
[6600] ( pen 3 ; ( move ua , 4 ; move 3 - ua , 2 ) )  
[6601] ( pen 4 ; move 3 + 2 , 3 / 4 ; move ul , ul )  
[6602] ( move 3 , ul ; ( pen ul - 3 ; move 4 , 0 ) )  
[6603] ( move ua + ul , ul ; move 3 - ua , ua - ul )  
[6604] ( move 3 - ua , ua + ul ; move ua - ul , ul )  
[6605] ( move ua - ul , ua + ua ; move 4 + ul , ul )  
[6606] ( move ua - ul , ua ; move 3 + ul , ua * ua )  
[6607] ( move ul - ua , 0 ; move ua - ul , ul / ua )  
[6608] ( move ua - ul , ua - 3 ; move ul , ua + ul )  | ( pen ua + 4 ; move ul , ul ; move ul - ua , ua - 4 )  
[6609] ( move 0 - ua , 3 ; move ua , ul ; move 3 , 0 )  
[6610] ( move ul + ul , ua * ua ; move 2 , ul + ul )  | ( move 2 , ua * ua ; move ul , 2 ; move ul , ua )  
[6611] ( pen 4 ; move 2 * 2 , 4 ; move ul , 3 / ua )  
[6612] ( move ul - 2 , ul ; move ua + ul , ua * ua )  
[6613] ( move ua + ul , ul - ua ; move ul , ul - 2 )  | ( move ua + ul , ua + ul ; move ul , ua - ul )  | ( v0 = ua + ul ; move v0 , ul ; move ul , 2 - 3 )  | ( v0 = ua + ul ; move v0 , v0 ; move ul , ua - ul )  
[6614] ( move ul - 2 , ul ; move ua + ul , ua - ul )  | ( ( move 3 - 2 , 2 - 4 ; move ua , 2 ) ; move ul , 0 )  | ( ( move ul , ul - 3 ; move ua + ul , 2 ) ; v0 = 2 )  
[6615] ( ( move 4 , 4 + ul ; move ua , 4 ) ; pen 0 )  
[6616] ( move ul , ul + ul ; move 2 - ua , ua - ul )  | ( move 0 , ua / 2 ; move 2 - ua , ul ; move ul , ul )  
[6617] ( move 2 - ul , ul ; move ua + ul , ua * ua )  
[6618] ( move ua + 3 , 2 ; move ul , 2 ; move ua , 0 )  
[6619] ( move ul - 3 , ul ; move 4 , 2 ; pen 3 / 4 )  
[6620] ( ( move 2 , 3 ; move 4 - ua , ul ) ; pen 3 )  
[6621] ( move ua - ul , ua - 3 ; move ul , ua * ua )  
[6622] ( move ua , 3 ; move 0 - ul , 0 ; move 3 , ul )  
[6623] ( move ua , 2 / ua ; move ul + ul , ua - ul )  
[6624] ( move ua - ul , 2 / ua ; move ua + ul , ul )  
[6625] ( move 4 , ua ; move ul , 0 ; move 0 - 2 , ul )  
[6626] ( move ul - ua , ul - 2 ; move ul , ua - ul )  | ( move 0 , ul ; move ul - ua , 0 - 2 ; move ul , ua - ul )  
[6627] ( move 2 , ua * ua ; move 4 , ul ; move 0 , 0 )  | ( move 2 , ua * ua ; move 4 , ul ; v0 = 3 )  | ( move 2 , ua * ua ; move 4 , ul ; v0 = ua + ul )  | ( v0 = 2 * 2 ; move ul + ul , ua * ua ; move v0 , ul )  
[6628] ( move 3 , ua * ua ; move ua - ul , ul + ul )  
[6629] ( move 3 , 0 ; move ua , 2 + ul ; move ul , 2 )  
[6630] ( move ua + ul , ul ; move 3 - ul , ua - ul )  | ( move ua , ul ; move ul , 0 ; move 2 , ua - ul )  | ( ( move ul , ul ; move ua , ua ) ; move 3 - ul , ul - 2 )  | ( v0 = ua + ul ; move v0 , v0 ; move 2 , ua - v0 )  | ( ( move ua + ul , ul ; move 2 , 0 - ul ) ; pen 0 ; pen ua )  
[6631] ( move ul - ua , ua ; move 4 + ul , ua - ul )  
[6632] ( move ua + ul , ul ; move 4 - ua , ul + ul )  
[6633] ( move ul - ua , ul + ul ; move ua , 2 / ua )  | ( move ul - ua , 2 ; ( move ua , 2 / ua ; pen ua * 2 ) )  
[6634] ( move ul , ua * ua ; move 4 + ul , ua + ul )  
[6635] ( move 4 / 2 , ul ; ( pen 0 ; move 3 , ul ) )  | ( move 2 , ua + ul ; ( pen 0 ; move 3 , ul ) )  | ( move ul + ul , ul ; pen ul - ua ; move 3 , ul )  | ( move 2 , ul ; ( pen 0 ; move 2 + ul , ul ; pen 2 ) )  
[6636] ( move 3 , 4 * 3 ; pen 4 ; move 2 , ul / ua )  
[6637] ( move ua - ul , ul + ul ; move ua - ul , 3 )  
[6638] ( move ua , 0 ; move ul , 2 ; move 3 + 2 , ul )  
[6639] ( move ua - ul , 4 + ul ; move ua + ul , ul )  
[6640] ( move 2 , ul ; move 0 , 4 ; move ua + 2 , ua )  
[6641] ( move ul , 0 ; move 0 , 3 ; move ul - ua , 3 )  
[6642] ( move ul , ul + ul ; move ua + ul , 2 / ua )  
[6643] ( move ul , ua + ul ; move ul - ua , 4 + ul )  
[6644] ( move ul , 3 ; move ua , 2 ; move ua + 2 , 2 )  
[6645] ( move ua + ul , ul ; move ul - 4 , ul + ul )  
[6646] ( move ua + ul , ul / ua ; move 3 - ua , ul )  
[6647] ( move ua , 0 ; move ua , 2 ; move 3 , ul - 3 )  
[6648] ( move ul + ul , ul ; move ua + ul , ua / 3 )  
[6649] ( move ua , 0 ; move ul , 4 ; move 2 + ul , 2 )  
[6650] ( move ua , 0 ; move ul , 2 ; move ua / 4 , 0 )  
[6651] ( move ua , 4 ; move 2 , ua ; move 0 - ul , 2 )  
[6652] ( move ua , ua - ul ; move ul + ul , 3 / ua )  
[6653] ( move ul - ua , ul / 2 ; move ul , ua + ul )  | ( move ul - ua , ul / 2 ; pen ua ; move ul , ul )  
[6654] ( move ul , ul ; move 0 - 2 , 0 ; move ul , 4 )  
[6655] ( move ul / ua , ua - 3 ; move ua , ua * ua )  
[6656] ( move ul , ul ; ( pen 2 ; move 3 , 3 / 2 ) )  
[6657] ( v0 = ua + ul ; move v0 , v0 * v0 )  | ( v0 = ua + ul ; move v0 , v0 * v0 ; pen ul )  | ( pen 2 ; pen ul ; ( move 0 , ua * ua ; move ua , ul ) )  | ( ( v0 = ua + ul ; move v0 , v0 * v0 ) ; pen 4 )  
[6658] ( move ul - ua , ua + ua ; move ua , ul / 4 )  
[6659] ( move ul + ul , ul + ul ; move ua - 4 , ul )  | ( move ua / 3 , 2 ; pen ua ; move ua - 4 , ul )  
[6660] ( move ua + ul , ul - 4 ; move ul - ua , ul )  
[6661] ( move 3 , ua ; move 0 , 3 ; move 2 , ua * ua )  
[6662] ( move 0 , 3 ; move 3 - ua , 2 ; move ua , ul )  
[6663] ( move ua , ua ; move ul , 2 ; move 2 - 4 , 0 )  
[6664] ( move 4 , 4 ; ( pen 2 / ua ; move 2 , ua ) )  
[6665] ( move ul , ua / 3 ; move ua + ul , ul - ua )  
[6666] ( move ua , ul / ua ; move 3 + ul , ul + ul )  
[6667] ( move ul , 3 + ul ; move ua + ul , ul / ua )  
[6668] ( move ul , 4 ; move 4 * 2 , 4 * 3 ; pen ul )  
[6669] ( move ul , 2 ; move ua + 3 , 2 ; move ua , 2 )  
[6670] ( move 0 - ua , 3 ; move 0 , 4 ; move ul , ul )  
[6671] ( move ua , ua ; move 0 - 2 , 4 ; move 3 , ul )  
[6672] ( move ul , ua * ua ; move 3 - ua , ul / ua )  
[6673] ( move 3 , ua * ua ; move ul + ul , ul / ua )  
[6674] ( move 3 , 0 ; move ua , 3 - ul ; move ua , 3 )  
[6675] ( move 2 , 4 ; move 0 , 4 ; move ua , ua + ul )  
[6676] ( move 2 , ua ; move 0 - 4 , ua ; move ul , 3 )  
[6677] ( move 2 , 2 ; move ul , 2 ; move ua , ua * 2 )  
[6678] ( move 0 , 0 ; move 4 , ua / 3 ; move ua , ul )  
[6679] ( move 4 - ua , 0 ; move ul , ul ; move 4 , 0 )  
[6680] ( move 3 , 3 ; move ua , 2 + ul ; move ua , 2 )  | ( move 2 , 2 + ul ; move ua , 3 ; move ua , 2 - ua )  
[6681] ( move ul , 2 ; move ua + ul , 0 ; move 4 , 3 )  
[6682] ( move ul , ul - 3 ; move ua + ul , ul / ua )  
[6683] ( move ul , 0 ; move 4 + 2 , ul ; move ua , 3 )  | ( move ul , 0 ; ( move ua , ua + ul ; move ua , 3 ) )  
[6684] ( ( move 2 , ua / 4 ; move 4 , 2 ) ; pen ul )  | ( move 2 , ua / 4 ; pen ul ; move 3 + ul , ul + ul )  
[6685] ( move ul / 3 , 0 ; move ua , 0 ; move 3 , ul )  
[6686] ( ( move ua , 4 ; pen 4 ) ; move 3 - ua , 4 )  
[6687] ( move 4 , ul / 4 ; move 3 / 2 , 3 ; pen ul )  
[6688] ( move 2 , 2 ; move 3 , ul ; move 0 - ul , ul )  
[6689] ( move 2 , ua ; move 0 , ul ; move ua - 3 , 4 )  
[6690] ( move ua + 2 , 0 ; move ul , ul ; move 4 , 3 )  
[6691] ( move ua , ua / 2 ; move ul - ua , ul / ua )  
[6692] ( move ul - ua , 3 / ua ; move ul + ul , ul )  | ( move ul - ua , 3 / ua ; v0 = ul / 2 ; move 2 , ul )  
[6693] ( move 3 , 0 ; move ua - ul , 3 ; move ua , 3 )  
[6694] ( move ul , ul ; move ua , 0 ; move 3 , 4 + 2 )  
[6695] ( move ua , 0 ; move 4 , 2 ; move ua / 2 , ua )  
[6696] ( move ul - ua , 0 ; move 4 , ul ; move 4 , 0 )  | ( ( move ul - ua , ua ; move ul , ul ) ; move 4 + 3 , ua )  
[6697] ( move ul + ul , ul ; move ua - ul , ul / 2 )  
[6698] ( move 2 , 0 ; move ul , ul ; move 3 , 3 + ul )  
[6699] ( move 0 , 3 ; move ul , 4 ; move ua + ul , 2 )  | ( move ul , 4 ; move ul , ua + 3 ; move ua + ul , 4 - 2 )  
[6700] ( move ua , 3 + 2 ; move ua , 2 ; move ul , 3 )  | ( move ua , 4 + ul ; move 0 , ul ; move ua , ul )  | ( move ua , 4 + ul ; ( pen ul ; move ua , ul + ul ) )  
[6701] ( move ul , 0 ; move ua , 4 * 2 ; move 2 , ua )  
[6702] ( move ua - 4 , 3 ; move ul , 0 ; move ua , 2 )  | ( move ua - 3 , 3 ; ( pen ua ; move ua , ua + 2 ) )  
[6703] ( move ua + ul , ul / ua ; move ul + ul , 4 )  
[6704] ( move ua , ul ; move 0 , 2 ; move 3 - ua , 4 )  
[6705] ( move 3 , ul ; move ua , 0 ; move 2 , ua - 4 )  
[6706] ( move ul , 4 ; move 0 - ua , 0 ; move 4 , ul )  
[6707] ( move ul , 0 ; move 2 , ul ; move 2 , ul / 2 )  
[6708] ( move 2 , 0 ; move ul , 3 ; move ua / 2 , ul )  
[6709] ( move 2 , 0 - 4 ; move ul , 4 ; move ua , ua )  
[6710] ( move ua , ul / ua ; move ul - 4 , ul + ul )  
[6711] ( move ul / ua , ul / ua ; move ua , 2 - ul )  | ( ( v0 = ul / ua ; move v0 , v0 ) ; move ua , ul )  
[6712] ( move 3 , 0 ; move ul , ul ; move 3 + ul , 3 )  
[6713] ( move ua - ul , ua - 4 ; move ul , ul / ua )  | ( move ua , ua - 4 ; v0 = ul ; move ul / 4 , ul )  
[6714] ( move ua , ul / ua ; move ul - 4 , ua - ul )  
[6715] ( move 0 , ul ; move ua - 4 , 2 ; move 3 , ul )  
[6716] ( move 0 , 2 ; move ul , 4 ; move 3 , ul - ua )  
[6717] ( move ua , 4 * 2 ; move ul , 0 ; move ua , 3 )  
[6718] ( move 4 , 2 ; ( pen 3 ; move ul , ua / 4 ) )  
[6719] ( move ul , 4 + ul ; move 2 , 4 ; move ua , 0 )  
[6720] ( move ua - ul , ul / ua ; move ul - 3 , ul )  
[6721] ( move ul , ul / ua ; move ul - ua , ul - 3 )  
[6722] ( move 0 , ul ; move 2 , ul ; move 3 , ua - 4 )  
[6723] ( move ua , ul ; move 4 , ua - 3 ; move 3 , 0 )  
[6724] ( move ua , ua ; move 2 , 2 - 4 ; move ua , 3 )  
[6725] ( move ua , 0 ; move ua - 2 , 4 ; v0 = ua )  | ( move ua , 0 ; v0 = 2 ; move ua - v0 , 4 )  
[6726] ( move ul , 3 ; move 0 - 2 , ua ; move ul , 4 )  
[6727] ( move 0 , 4 ; move 3 , ul ; move ul - ua , 2 )  
[6728] ( move ua , ua ; move 3 / 2 , 2 ; move ua , 2 )  
[6729] ( move 2 , ul ; move 4 , ua + ul ; move 2 , 2 )  
[6730] ( move 4 , ua / 3 ; ( pen 2 ; move 4 , ul ) )  
[6731] ( move 4 + ul , ul ; move ul - ua , ul / ua )  
[6732] ( move ul , 0 ; move 4 , ua + ul ; move 3 , 3 )  
[6733] ( move 2 , 4 ; move ul , ul - 3 ; move ua , 0 )  
[6734] ( move ua , 4 ; move ul , 0 - 2 ; move 4 , ua )  | ( move ul , ua ; move ua , 4 ; move 4 + ul , ul - 3 )  
[6735] ( move ul , 3 ; move ua , 0 ; move 4 - ul , 2 )  | ( move ua + ul , 3 ; move 2 + ul , 2 ; v0 = 4 )  
[6736] ( move ul , 2 ; move 3 , 3 ; move 0 - ul , ul )  
[6737] ( move 0 , ul ; move 2 , 4 * 2 ; move ua , ul )  
[6738] ( move ul , 4 ; move ua , 0 ; move 4 + ul , 2 )  
[6739] ( move 0 , ul ; move 4 , ul ; move ua - 3 , 2 )  
[6740] ( move 4 - ua , 3 ; move ua , 2 ; move ua , 2 )  
[6741] ( move ua + 2 , 3 ; move ul , ul ; move 3 , 2 )  
[6742] ( move ul , 2 ; move 2 , ul ; move 2 + ul , 4 )  
[6743] ( move ul , ul / ua ; move ul - ua , ul / 2 )  
[6744] ( move ul - 3 , 3 ; move ua , 4 ; move ul , 0 )  
[6745] ( move 2 , 4 + ul ; move ua , 4 ; move ua , 2 )  
[6746] ( move ua , ul / ua ; move ul / 4 , ua + ul )  
[6747] ( move 4 - ua , 2 ; move 4 , ul ; move 0 , ul )  | ( pen 3 ; ( move 4 - ua , 2 ; pen ua ; move 4 , ul ) )  
[6748] ( move ul , 3 ; move 3 , ua - ul ; move 4 , 0 )  | ( move 0 - ul , 0 ; move 4 + 3 , 2 ; pen ul - ua )  
[6749] ( move 3 , 2 + ul ; move ua , 2 ; move 4 , ul )  
[6750] ( move ul , ua ; move 3 , ul - 3 ; move 4 , 0 )  
[6751] ( ( move 4 , 3 ; move ul - 4 , ul ) ; pen 4 )  
[6752] ( move ul , 0 ; move 4 , ul ; move ul , 2 * 2 )  
[6753] ( move ul + ul , ul ; move 4 - ul , ul / ua )  | ( move 2 , ul ; move 3 - ua , ul - 4 ; v0 = 3 )  
[6754] ( move ua , 4 ; move ul + ul , 3 ; move 2 , 2 )  
[6755] ( move 3 , 3 * 2 ; move ua , ul ; move ua , 2 )  
[6756] ( move 0 , 4 ; move 2 , 4 ; move ul + ul , ul )  
[6757] ( move 3 , ul ; move ua , 3 + ul ; move 3 , 2 )  
[6758] ( move ua , 4 ; move ua - 2 , ul ; move 3 , 2 )  
[6759] ( move ua , 3 ; move 4 , 2 ; move 2 + ul , ul )  
[6760] ( move 2 , ua ; move 3 - ul , ul ; move 3 , 2 )  
[6761] ( move ul , ua + 4 ; move 3 , 2 ; move ua , 3 )  
[6762] ( move 2 , 0 ; move ua / 2 , 4 ; move ul , ul )  
[6763] ( move ul - 3 , 4 ; move 2 , 0 ; move ul , ul )  
[6764] ( move ul - ua , 3 ; move 2 , 4 ; move ua , 2 )  
[6765] ( move 4 , 0 ; move ul , ul ; move 4 + 2 , ul )  
[6766] ( move ua , 3 ; move ua - ul , 2 ; move 2 , 4 )  
[6767] ( move ua , 2 - ul ; move 2 , 2 ; move 4 , ul )  
[6768] ( move 3 , 3 + 2 ; move ua , 4 ; move ul , ua )  
[6769] ( move 3 , 2 ; move 3 , ul ; move ua - 2 , ul )  
[6770] ( move 3 , 2 ; move 2 - ua , 3 ; move ul , ul )  
[6771] ( move 3 + ul , 2 ; move ua , 2 ; move ul , 4 )  
[6772] ( move ua - 4 , ul ; move 0 , 4 ; move 2 , ul )  
[6773] ( move 4 , ua ; move ua , 3 ; move ua + 3 , 3 )  | ( v0 = 3 ; move ua , v0 ; move v0 * v0 , 3 )  
[6774] ( move 2 * 2 , 2 ; move 3 , ul ; move ua , ul )  
[6775] ( move 2 , ua + 4 ; move ua , ul ; move 3 , 3 )  
[6776] ( move ul , 0 ; move ua , 4 * 3 ; move ua , 3 )  
[6777] ( move ua , 2 ; move 2 , 2 ; move ua , ua / 4 )  
[6778] ( move 4 , 0 ; move 4 + ul , ul ; move ul , 2 )  
[6779] ( move ul , 2 ; move ua , 0 ; move 4 , ul - 4 )  
[6780] ( move ua , 4 * 2 ; move ul , ua ; move 3 , 2 )  
[6781] ( move ua , ul ; move 0 - 3 , 4 ; move ul , 4 )  
[6782] ( move ua , 2 ; move 4 - ul , ua ; move 4 , 2 )  
[6783] ( move ua , 0 ; move ul , 3 ; move ua , 4 / 3 )  
[6784] ( move 0 , 4 + 4 ; move 3 , ul ; move ul , ul )  
[6785] ( move 0 , ul / 2 ; move 4 , ul ; move 2 , ul )  
[6786] ( move 2 , ua ; move 4 / ua , 2 ; move 2 , ul )  
[6787] ( move 4 , ua ; move 2 , ua - 2 ; move ul , 4 )  
[6788] ( move ua , 2 / ua ; move 3 , 4 ; move 2 , ua )  
[6789] ( move ua , 3 ; move 3 , 2 + ul ; move ul , 4 )  
[6790] ( move 2 , ul ; move 4 , 3 - ul ; move ua , 2 )  
[6791] ( move 4 , 2 ; move ul , ua ; move ul - 2 , 3 )  
[6792] ( move ul , ua ; move 4 / ua , 2 ; move 4 , 0 )  
[6793] ( move 2 , ul ; move 3 , ul ; move ua , 2 - 4 )  
[6794] ( move 2 , 3 ; move ua , 4 ; move ul , ua * 2 )  
[6795] ( move 4 + ul , ul ; move 0 , 4 ; move 3 , ul )  
[6796] ( move 3 , ua ; move 3 , ua - ul ; move 2 , 4 )  
[6797] ( move 4 , ua + ul ; move ua , 2 ; move 3 , 4 )  
[6798] ( move ua + 3 , ul ; move 2 , 2 ; v0 = ul )  
[6799] ( move ua , 2 ; move ua , 3 ; move ul , 3 - 4 )  | ( move ua , 2 ; move 2 + ul , 3 ; move 3 + ul , ua )  
[6800] ( move ua , 2 - ul ; move ul , 3 ; move 2 , 4 )  
[6801] ( move 0 , ua / 4 ; move 2 , ua ; move 4 , ul )  
[6802] ( move 3 , ul ; move 4 + ul , 2 ; move ua , 3 )  
[6803] ( move ul , ul ; move 4 , 0 ; move 2 , ua / 3 )  
[6804] ( move ua , ua ; move 2 , 3 ; move 4 * 2 , ul )  
[6805] ( move ul , 3 + 3 ; move 2 , 4 ; move ua , ul )  
[6806] ( move 4 - ua , 3 ; move ua , 3 ; move ua , 3 )  
[6807] ( move 3 , ul ; move 3 - 4 , 0 ; move ul , ul )  
[6808] ( move ul , ua ; move 2 , 3 + ul ; move 3 , 4 )  
[6809] ( move 4 , 0 ; move 4 , 3 ; move ul + ul , ul )  
[6810] ( move ul , 2 ; move ul , ua ; move 4 + 4 , 2 )  | ( pen ul ; move ul + ul , 2 ; move 4 + 4 , 2 )  | ( v0 = 2 ; move v0 , 2 ; move 4 * v0 , v0 )  
[6811] ( move 3 + ul , 3 ; move 2 , ua ; move 4 , ul )  | ( ( move 4 + ul , 3 ; move ul , 0 ; pen ua ) ; move 4 , ul )  
[6812] ( move 0 , 3 ; move ua , ua ; move ul / 3 , 4 )  | ( ( move ua , 4 - ul ; move ul , 3 ) ; move 2 / 3 , ul )  | ( move 0 - ul , ua * 2 ; pen ul ; move ua - ul , ua + 3 )  
[6813] ( move ul , 3 ; move 2 , ul ; move 2 , ua - 4 )  
[6814] ( move ua , 3 ; move ul , 3 ; move 2 , 3 - ul )  | ( move ua , 3 ; move ul , 4 - ul ; move 2 , 2 )  
[6815] ( move ul , 3 ; move ul , 0 ; move 4 , 4 + ul )  
[6816] ( move ua , 4 * 3 ; move ul , 4 ; move 0 , ua )  
[6817] ( move ua , ul / 2 ; move 0 , ul ; move 3 , 4 )  
[6818] ( move 0 , ul ; move 3 , 2 / 4 ; move ua , ul )  
[6819] ( move 0 , 3 ; move 4 , ua / 3 ; move ul , ua )  
[6820] ( move ul - 4 , ul ; move 0 , 4 ; move ua , 3 )  
[6821] ( move 3 , ua ; move 3 , ul ; move 4 + ul , 2 )  
[6822] ( move 2 , 3 ; move 3 , ua - 4 ; move ul , ul )  
[6823] ( move 2 , ua ; move ua , 3 / ua ; v0 = 2 )  
[6824] ( move ul , 0 ; move ul , ul / 3 ; move 4 , 2 )  
[6825] ( move ua , 3 / ua ; move ul , 3 ; move 3 , 2 )  
[6826] ( move 4 , 3 + 3 ; move ul , ul ; move 2 , ul )  
[6827] ( move ua + 4 , ul ; move 2 , 3 ; move 4 , ul )  
[6828] ( move 2 , ua * 2 ; move 4 , 3 ; move ul , ul )  
[6829] ( move ul , 4 ; move 4 , ul ; move 3 , ua + 2 )  
[6830] ( move ul , 2 + ul ; move 3 , ul ; move 3 , 4 )  
[6831] ( move 2 , ul ; move 0 , ua / 4 ; move 4 , ul )  
[6832] ( move 0 , 4 ; move ua , ul ; move 4 , ul / 2 )  
[6833] ( move 4 , ul ; move ua - 2 , ua ; move 3 , 4 )  
[6834] ( move ul , 4 * 4 ; move 0 , ua ; move 3 , ul )  
[6835] ( move 4 , 3 ; move ua , 4 ; move 3 + ul , ua )  | ( move 3 + ul , 3 ; move ua + 2 , 4 ; move 2 , 0 )  | ( v0 = 4 ; move 4 , 3 ; move v0 + ua , v0 )  | ( move 3 + ul , 3 ; v0 = 4 ; move ua + v0 , v0 )  
[6836] ( move 3 , 2 ; move 4 , 4 + ul ; move ul , ua )  
[6837] ( move ul , 2 / ua ; move 3 , 4 ; move 2 , ua )  
[6838] ( move ul , ul ; move 4 + 2 , ul ; move 3 , 3 )  
[6839] ( move 2 , ul ; move ua - 3 , ul ; v0 = 2 )  | ( move 2 , ul ; move ua - 3 , ul ; move 0 , ua )  | ( move 2 , ul ; move 3 , ul ; move 2 / ua , ua )  
[6840] ( move ua , 3 ; move 2 , ul / 2 ; move ul , 3 )  
[6841] ( move ul + ul , 3 ; move 4 , 2 ; move ua , 4 )  
[6842] ( move ua , 4 ; move 4 / 2 , 2 ; move ua , ua )  | ( move ua , 4 - ua ; v0 = ua + 2 ; move v0 , v0 )  
[6843] ( move ua + 3 , ul ; move ua , 3 ; move 4 , 4 )  
[6844] ( move ua , ul ; move 2 , 2 / 3 ; move 3 , ul )  
[6845] ( move 3 , 2 ; move ul - ua , ul ; v0 = 2 )  | ( move 3 , 2 ; v0 = ul - ua ; move v0 , v0 )  | ( pen 4 - ul ; ( move 3 , 2 ; move ul - ua , ul ) )  | ( move 4 - ul , 2 ; v0 = ul - ua ; move v0 , ul )  
[6846] ( move ul , ul ; move 3 , 4 ; move 2 + ul , 3 )  | ( ( move ul , ul ; move 3 , 3 + ul ) ; move 3 , 3 )  
[6847] ( move 3 , 0 - ul ; move ul , 4 ; move 4 , ul )  
[6848] ( move 4 , ua - ul ; move 3 , 2 ; move 3 , ul )  
[6849] ( move ua , 2 ; move 4 , 3 / ua ; move ul , 2 )  
[6850] ( move ua , ul ; move 4 , ul ; move 4 , 0 - 4 )  
[6851] ( move 2 - 4 , ua ; move 3 , ul ; move 3 , ul )  
[6852] ( move ul - 4 , 3 ; move ul , ul ; move 4 , 0 )  
[6853] ( move ua / 3 , 3 ; move ul , 2 ; move 2 , ul )  | ( ( move 2 , ua + 3 ; move ul , 2 ) ; move ul + ul , ul )  
[6854] ( move 2 / 3 , ul ; move 4 , ua ; move ua , 2 )  
[6855] ( move ul , 3 ; move 2 , 4 * 2 ; move ul , ua )  
[6856] ( move 2 , ul ; move 4 , 2 ; move ul / 2 , ua )  
[6857] ( move 3 , ua ; move 2 , 2 ; move 4 , ul / ua )  
[6858] ( move ua , 4 ; move ua , 4 ; move 4 , 2 + ul )  
[6859] ( ( move 3 , 0 ; move ua , ul ) ; move ul , 2 )  
[6860] ( move 3 , ul ; move 3 , ul ; move 2 , 4 + ul )  
[6861] ( move 0 - ul , ul ; pen 0 ; move 2 + ul , 0 )  
[6862] ( move 2 , 4 ; move 4 , ul ; move ul , ua + 4 )  
[6863] ( move 3 + ul , ul ; move ul , 3 ; move 4 , 3 )  
[6864] ( move 3 - ua , 4 ; move ul , ul ; move 2 , 4 )  
[6865] ( move ul , 0 ; move 4 , ul ; move 3 / ua , 4 )  
[6866] ( move 4 + ul , ua ; move 2 , ul ; move 4 , 4 )  
[6867] ( move 4 , ul ; move ul , ul ; move 4 + 3 , 2 )  
[6868] ( move ul , ul ; move ul , 4 * 3 ; move 4 , 0 )  
[6869] ( move 4 , 0 ; move 4 - ua , ul ; v0 = ul )  | ( pen 3 + ul ; move 4 , ua ; move 4 - ua , ul )  
[6870] ( move ul , ua ; move 3 , 2 ; move 3 , 4 / ua )  
[6871] ( move 4 , ua ; move ul - 2 , 4 ; move ul , 3 )  
[6872] ( move 2 , ua / 3 ; move ul , 3 ; move 3 , ul )  
[6873] ( move ua , 4 - 3 ; move 3 , ul ; move 3 , ul )  | ( ( pen 4 ; move ua , ul ) ; move 3 , ul ; move 3 , ul )  
[6874] ( move ul , ua * 3 ; move 4 , ul ; move 3 , 2 )  
[6875] ( move ul , 2 ; move ul , 4 + ul ; move 3 , 4 )  
[6876] ( move ua , 3 ; move ua , 2 ; move 4 / 3 , ul )  
[6877] ( move ul - 4 , ul ; move ul , 0 ; move 4 , 4 )  
[6878] ( move 2 , 4 ; move ul , 3 ; move 4 - ua , ul )  
[6879] ( move ua / 2 , 4 ; move ua , 4 ; move ul , 2 )  
[6880] ( move 3 , ul ; move 3 / ua , ua ; move 4 , 2 )  
[6881] ( move ua , 4 / 2 ; move ul , 3 ; move 2 , ul )  
[6882] ( move ul , 2 ; move 2 , ua / 4 ; move ul , 3 )  
[6883] ( move ua , 4 ; move 4 , 3 ; move ua , 4 + ul )  
[6884] ( move 3 , ul ; move 4 , ul / ua ; move 0 , 4 )  | ( ( pen ua ; move 3 , ul ) ; move 4 , ul / ua )  
[6885] ( move ua , 3 ; move ua , 4 + 4 ; v0 = ua )  
[6886] ( move 4 - ul , 3 ; move ua , 3 ; move 3 , ul )  
[6887] ( move ul , ul ; move 2 , 4 ; move ul - 4 , 2 )  
[6888] ( move 3 , ul ; move ua , ua / 4 ; v0 = 0 )  
[6889] ( move ul , 3 ; move 3 , 4 + ul ; move 4 , ua )  
[6890] ( move 0 - ul , 0 - ul ; move ua , 3 ; pen 0 )  | ( move ul , ua - ul ; move ul - 2 , ua * 3 ; move ua , 3 )  
[6891] ( ( move 2 , 0 ; move ul , 4 ) ; move ua , ul )  
[6892] ( move ul , 3 ; move 4 + ul , 3 ; move 3 , ul )  
[6893] ( move 4 , 4 ; move 2 - ua , ul ; move ul , 4 )  
[6894] ( move ul , 4 ; move 4 , 4 ; move ua - ul , 2 )  
[6895] ( move ul , 3 ; move 4 / 2 , ul ; move ul , 2 )  | ( move ul , 3 ; move 3 - ul , ul ; move ul , 2 )  
[6896] ( move ul , 4 - ul ; move 3 , ul ; move 4 , 2 )  
[6897] ( move 3 , 4 * 3 ; move ua , 4 ; move ul , ua )  
[6898] ( move 4 , 4 + ul ; move 3 , ua ; move ul , 4 )  
[6899] ( move 4 , ul ; move ua - 4 , 4 ; move 2 , ul )  
[6900] ( move ua - ul , 3 ; move 4 , 2 ; v0 = ul )  | ( move ua - ul , 4 - ul ; move 4 , 2 ; pen ul / ua )  
[6901] ( move 3 , 3 ; move 4 , ul ; move ul , 2 / ua )  
[6902] ( move 2 , 3 ; move ua / 3 , ul ; move ul , 4 )  
[6903] ( move 3 , 4 ; move 4 , ul ; move 3 , ul - ua )  
[6904] ( move ul , 2 / 3 ; move 4 , ua ; move 3 , ul )  
[6905] ( move ul , 2 ; ( move 2 , ul ; move ul , 2 ) )  
[6906] ( move ua , ul ; move 3 , ul / 3 ; move 3 , 3 )  
[6907] ( move ul , 4 ; move ul , ul ; move 3 , 4 + 3 )  
[6908] ( move ua , ua ; move 4 , 3 / 2 ; v0 = ua )  | ( move ua , ua + ua ; move 4 , 3 / 2 ; pen ua )  
[6909] ( move 2 , 3 ; move ul - 4 , ul ; move ul , 4 )  
[6910] ( move 2 , 4 ; move 4 , ul ; move 4 , ul + ul )  
[6911] ( v0 = ul - ua ; move 3 + 2 , ul / v0 )  
[6912] ( move ul , 2 ; move ul / 3 , 3 ; move ua , 4 )  
[6913] ( move 3 + ul , 4 ; move ul , 4 ; move 3 , ul )  
[6914] ( move 4 , ua * ua ; move 2 , ul ; v0 = 3 )  | ( ( move 4 , ua * ua ; pen 2 + ul ) ; move 2 , ul )  
[6915] ( move 3 , ua / 3 ; move ua , ul ; v0 = 2 )  | ( move 2 + ul , ua / 3 ; move ua , 2 - ul ; pen ul )  | ( move 3 , ua / 3 ; move ul / ua , ul ; move ua , ua * 3 )  
[6916] ( move ua , 4 ; move ua , 4 ; move 4 , 3 - ul )  
[6917] ( move 4 , ua / 4 ; move ua , ul ; v0 = 0 )  | ( move 2 + 2 , ua / 4 ; v0 = ua ; move ua , ul )  | ( move 3 + ul , ua / 4 ; move ua , ul ; v0 = ua )  | ( move 4 , ua / 4 ; ( v0 = ua - 4 ; move ua , ul ) )  
[6918] ( move 4 , ua ; move ul , 4 ; move 4 , ua + 4 )  
[6919] ( move ua , ua * ua ; move 3 , 3 ; v0 = 4 )  | ( ( move ua , ua * ua ; move ul , 3 ) ; move 2 , 0 )  
[6920] ( move ul , ul ; move 4 , 2 ; move 3 , 3 / ua )  
[6921] ( move 4 , 4 ; move ua - ul , 2 ; v0 = ua )  | ( move 4 , 4 ; move ua - ul , ua + 2 ; move 0 , ul )  
[6922] ( move ua , 4 ; move ul / 3 , ua ; move 2 , 4 )  
[6923] ( move 4 , ul - 4 ; move ua , 4 ; move ua , 3 )  
[6924] ( move 4 , ul ; v0 = ua ; move 2 , ua - 4 )  
[6925] ( move ul , ul ; move 2 , 2 / 4 ; move ul , 3 )  
[6926] ( move 4 , ua - 4 ; move 3 , ul ; v0 = ua )  
[6927] ( move 4 , 3 ; move ua , 4 / 2 ; move ul , ul )  
[6928] ( move ua , 4 ; move 2 , ul ; move ul , 3 / 4 )  
[6929] ( move 3 , ul / 4 ; move ul , ul ; v0 = 0 )  | ( move 2 + ul , ul / 4 ; move ul , ua + ul ; v0 = ul )  | ( v0 = 3 - ul ; move v0 + ul , ul / 4 ; move ul , ul )  
[6930] ( move 4 , ua ; move ul , ul ; move 4 / 2 , 3 )  | ( move 4 , ua ; move ul , ul ; move 4 / 2 , ua + 3 )  
[6931] ( move ua , ua ; move ul , 4 ; move 3 , 3 / 4 )  
[6932] ( move 4 , ul ; move 4 , ua - 3 ; move 4 , ul )  
[6933] ( move 3 , 0 ; ( move ul , ul ; move ul , 4 ) )  
[6934] ( move ul , 4 * 2 ; move 3 , 4 ; move ul , ul )  
[6935] ( move 3 , ul ; move 3 , 3 / ua ; v0 = ua )  
[6936] ( move 3 , ul ; move ul , 4 / ua ; move 4 , 2 )  
[6937] ( move 2 + ul , 0 ; pen 2 ; move 2 , ua - ul )  | ( move 3 , ua ; move ul + ul , ul - 2 ; v0 = 0 )  | ( move 3 , ua ; ( pen 3 ; v0 = ul ) ; move 2 , 3 - 4 )  | ( move 3 , ua + ua ; move ul + ul , ua - ul ; v0 = ua )  
[6938] ( move 4 , ul ; move 3 , 3 ; move ua , 4 / ua )  
[6939] ( move 4 , 4 ; move ul , ul ; move 3 + ul , 4 )  
[6940] ( move 3 , 2 ; ( move ul , ul ; move ul , 2 ) )  
[6941] ( move 4 , ul / ua ; move ul , 4 ; move 3 , 2 )  
[6942] ( move 2 , ul ; move ul , 4 - ul ; move 4 , 4 )  
[6943] ( move ul , 3 ; move 4 , 4 ; move ul , 4 + ul )  
[6944] ( move 3 / 2 , 4 ; move 3 , ul ; move ul , ul )  
[6945] ( move 4 , ua ; move ul - 3 , 4 ; move 4 , ul )  
[6946] ( move ul , 3 ; ( move ul , 2 ; move ua , 3 ) )  
[6947] ( move 3 , ul ; move 2 / ua , 4 ; move ul , 4 )  
[6948] ( move 4 , ul / 3 ; move 2 , ul ; move 3 , ul )  
[6949] ( move 4 , 4 ; move 3 , ul - 4 ; move ul , ul )  
[6950] ( move 3 , ul ; ( move 3 , ul ; move ua , 3 ) )  
[6951] ( pen ul ; move 0 - ua , 4 + 2 ; move ua , 2 )  
[6952] ( move ul , 4 * 3 ; move ua , ul ; move 4 , 4 )  
[6953] ( move ul , ul ; pen 0 ; move 4 + 2 , ua + 2 )  
[6954] ( move ul , ua ; ( move ul , 2 ; move 4 , 3 ) )  
[6955] ( move ul / ua , 4 ; move 4 , ul ; move 4 , 2 )  
[6956] ( move 4 - ua , ul ; move 3 , ul ; v0 = 4 )  
[6957] ( ( move 2 , ua ; move 3 , ul ) ; move 4 , ul )  | ( ( move 2 , 0 ; pen 3 ; move 2 + ul , ul ) ; move 4 , ul )  
[6958] ( ( move 2 , 3 ; move ul , ul ) ; move ul , 3 )  
[6959] ( move 2 , 3 / 4 ; move ua , ul ; v0 = ul )  
[6960] ( move ul , 3 * 3 ; move 4 , ul ; move ul , 4 )  
[6961] ( move ul , 4 ; pen 0 - 2 ; move ua + 2 , ul )  
[6962] ( move 4 , ua + ul ; pen 0 - ua ; move 3 , 2 )  
[6963] ( v0 = ul / 4 ; move ua + 4 , v0 - ul )  
[6964] ( ( move ua , 4 ; move ul , 4 ) ; move ul , 2 )  
[6965] ( ( move 3 , ul ; move ua , 3 ) ; move ul , 4 )  
[6966] ( pen ul ; move ul + ul , 0 ; move 2 , 4 + 2 )  | ( move 2 , ua ; pen ul ; ( move 2 , 3 * 2 ; pen 0 ) )  | ( move ul + ul , ua ; ( move 0 , 4 ; move 2 , ul + ul ) )  
[6967] ( move 3 , ul ; ( move ul , ul ; move 3 , 3 ) )  
[6968] ( move ul , 0 - ua ; pen 0 ; move 4 , 3 - ul )  
[6969] ( move ua - 2 , ua ; pen 0 ; move 4 , 2 - ul )  
[6970] ( move ul , 4 ; move 3 , 4 ; move ul , ua / 4 )  
[6971] ( move ua , 2 ; pen ua + 4 ; move 0 - 3 , ul )  | ( move ua , 2 ; v0 = ua + ua ; move 0 - 3 , ul )  | ( move ua , 2 ; pen ul ; ( move 0 - 3 , ul ; move ul , ua ) )  
[6972] ( move 4 , 3 / 4 ; move ul , 4 ; move ul , ua )  
[6973] ( move 3 , 3 + 2 ; move ul , ua - ul ; pen 0 )  
[6974] ( ( move 3 , 2 ; move ul , 4 ) ; move ul , ul )  
[6975] ( move ul / ua , 4 ; move 4 , 3 ; move ul , 4 )  | ( move 2 / ua , 4 - ua ; move 4 , 3 ; move ul , 4 )  
[6976] ( move 2 , 0 ; ( pen 0 ; move ua , ua + ul ) )  
[6977] ( move 3 , ua ; move 4 , ul / ua ; v0 = 4 )  | ( move 4 - ul , 0 ; pen ul ; move 4 , ul / ua )  
[6978] ( move ua - ul , 0 ; move 2 - ua , 4 ; pen 2 )  
[6979] ( move 4 , ul ; ( move ul , 3 ; move 2 , ul ) )  
[6980] ( move ua + 2 , ua ; move ua , 3 / 2 ; pen 2 )  
[6981] ( ( move 2 , 4 ; move ul , ul ) ; move ul , 4 )  
[6982] ( move ul , 3 ; ( move ul , ul ; move 4 , 3 ) )  
[6983] ( move 3 , ua + 2 ; pen ua ; move 2 , 4 + ul )  
[6984] ( move ua - ul , 0 ; pen 2 ; move ul , 4 + 3 )  
[6985] ( v0 = 4 ; move 3 , v0 ; move 2 , 4 + 2 )  
[6986] ( move ua - ul , 2 - 4 ; pen 0 ; move 3 , ua )  
[6987] ( move 4 + ul , ul ; pen 0 ; move 3 + 2 , ul )  
[6988] ( pen 2 ; move ua + ul , ua ; move 3 + 2 , 4 )  | ( move ua , ua ; move ul , ua ; move 4 + ul , 4 )  | ( move ua + ul , ua ; v0 = 4 ; move ul + v0 , v0 )  
[6989] ( move 2 , ua + 3 ; pen ua ; move 3 , ul - 2 )  | ( move 2 , 3 ; pen 4 + ul ; move 3 , ua - ul )  
[6990] ( pen 2 + ul ; move 2 , ua * ua ; move 3 , 2 )  
[6991] ( move ul + ul , 0 ; move 4 , 3 + 2 ; pen ul )  
[6992] ( move ul , 4 * 4 ; move ua , ul ; v0 = 4 )  
[6993] ( pen ua ; move 0 - ua , 3 ; move ul - 4 , 2 )  
[6994] ( move 3 - ul , 2 ; move ua , 4 + ul ; pen 0 )  | ( move 3 - ul , ul + ul ; move ua , 4 + ul ; pen ua + ul )  
[6995] ( pen ul ; move ua - 2 , 2 ; move 0 - 4 , ul )  
[6996] ( move 3 , 4 ; ( move 4 , ul ; move ua , ul ) )  
[6997] ( move 0 - 3 , 3 ; move ua , ua - 4 ; pen ua )  
[6998] ( move ua - 2 , ua ; move 2 , 2 - 4 ; pen ul )  
[6999] ( move 4 , 3 - ul ; pen 0 ; move ua + ul , 3 )  
[7000] ( move ua / 2 , 3 + 2 ; move 2 , ul ; pen ua )  | ( pen ul ; move 2 + ul , 4 + ul ; ( move 2 , ul ; pen 3 ) )  
[7001] ( move ul - 3 , 4 + ul ; pen 0 ; move 3 , ua )  
[7002] ( move 3 + 2 , ul ; pen 4 ; move ua , ua - 2 )  
[7003] ( move ul - 3 , 3 ; pen 0 ; move ua , 3 - ul )  
[7004] ( move ul , 4 * 3 ; move ua + ul , 2 ; pen 0 )  
[7005] ( move 0 , 0 ; pen ul / ua ; move 4 + ul , 4 )  
[7006] ( move 2 , 2 + ul ; pen ua ; move ua - 3 , 4 )  
[7007] ( move ua , ua / 3 ; pen 2 ; move 2 , ua - 2 )  
[7008] ( move 4 + ul , ul ; move 2 , 4 + ul ; pen 0 )  
[7009] ( pen ul ; move 4 , 2 ; move 3 + 2 , ua + ul )  | ( move 4 , 2 ; move 4 + ul , ul ; move ul - 2 , 0 )  
[7010] ( move 3 - ua , ul ; pen 0 ; move ua , 3 * 3 )  
[7011] ( move 4 , ua - 3 ; move ua , ua - 4 ; pen 0 )  
[7012] ( move 3 , ul / 4 ; pen 0 ; move ul , ua + 2 )  
[7013] ( move 2 , 4 + ul ; pen 4 ; move ua + 2 , ul )  
[7014] ( move 2 - ua , 3 ; move 4 , ua + 4 ; pen ua )  
[7015] ( move ul - 3 , ua - 4 ; move 2 , 2 ; pen ua )  
[7016] ( move 4 , ua + 3 ; move ua + ul , 4 ; pen 2 )  | ( move 4 , ua + 3 ; move 3 , 4 ; move ua - 2 , ua )  
[7017] ( move ua - 3 , ul / ua ; move 4 , 2 ; pen 0 )  
[7018] ( move 4 , 4 + 3 ; pen 0 ; move ul , ul + ul )  
[7019] ( move ul - 4 , 3 ; move ua , 4 - ua ; pen 0 )  | ( move 0 , ua + ul ; move ul - 4 , 2 ; move ua , 3 + ul )  | ( move ul - 4 , 4 - ul ; move ua , 4 ; v0 = ul - ua )  
[7020] ( move 3 , 4 + ul ; move ua + 2 , 3 ; pen ul )  
[7021] ( pen 3 ; move ua + ul , 3 + 2 ; move 4 , ul )  
[7022] ( move ua , 2 ; pen ul - 2 ; move ul - 3 , 3 )  
[7023] ( move ua , 0 - 4 ; pen 3 ; move ul , 4 + ul )  
[7024] ( ( move 4 , 0 ; pen 0 ) ; move ul + ul , ua )  | ( ( move 4 , 0 ; pen 0 ; v0 = 0 ) ; move 2 , v0 )  
[7025] ( move ul , 2 ; pen ul ; move 4 + ul , 3 + 2 )  
[7026] ( move 2 , ul / 2 ; move ua + ul , 3 ; pen 2 )  | ( move ul + ul , 2 / 4 ; move ul , 3 ; move ua , 0 )  
[7027] ( move ul , ua ; pen 0 ; move 4 + 3 , ul - 4 )  
[7028] ( pen ul + ul ; move 3 , ul ; move 2 , 4 + 2 )  | ( move ua - 3 , ul ; pen ua ; move 3 - ul , 3 * 2 )  | ( v0 = 2 ; move ul + v0 , ul ; move v0 , v0 + 4 )  
[7029] ( pen ua ; move 2 , ua - 4 ; move 3 - ul , 2 )  | ( move 2 , ua - 4 ; v0 = 2 ; move v0 , v0 )  
[7030] ( pen ul ; move 4 , 3 ; move 3 - ua , 0 - ul )  
[7031] ( pen ul ; move ul - 3 , ua ; move 3 , 0 - 4 )  
[7032] ( ( move ua , 0 ; pen 0 ) ; move 2 , ul / ua )  
[7033] ( move ua - 2 , 2 ; pen 4 - ul ; move 3 , ul )  
[7034] ( move 4 , 4 ; move ul - 3 , 2 ; pen ua + ua )  | ( move 4 , 4 ; move ul - 3 , 3 - ul ; v0 = ul )  
[7035] ( ( move 0 , ul ; pen 0 ) ; move 4 + ul , ul )  
[7036] ( pen ul ; move 4 * 2 , ua + 2 ; move ua , 4 )  
[7037] ( move ua , 4 + 3 ; pen 2 ; move 4 , ul - ua )  
[7038] ( move 2 , ua ; move ua - 4 , 4 ; pen ua + 4 )  
[7039] ( pen ua ; move 4 * 2 , ua + 2 ; move 4 , ul )  
[7040] ( ( move 3 , ua ; pen 0 ) ; move ul + ul , 2 )  
[7041] ( pen ua - 2 ; move ul - 4 , ul ; move 2 , 3 )  | ( move 3 - ua , ul ; move ul + ul , 3 ; pen 0 )  
[7042] ( move 2 , 3 ; move ua - 3 , 4 + ul ; pen ul )  
[7043] ( move 3 - 4 , 4 ; pen 0 ; move ul - ua , ul )  
[7044] ( move ua , 2 - 4 ; pen ua ; move 3 , 4 + ul )  
[7045] ( move ua + ul , ua ; pen 2 ; move 2 / 3 , 4 )  
[7046] ( pen 2 ; move ua , ul - 4 ; move 2 , ul - 3 )  
[7047] ( move 2 , 3 ; pen ua ; move ua - 3 , ua / 3 )  
[7048] ( move ul , ua + 4 ; move ua , 3 / 4 ; pen 0 )  
[7049] ( move 0 - 4 , ua ; move ua , 4 ; pen ul - 4 )  
[7050] ( move 2 , 4 + ul ; move 3 , 3 / ua ; pen ua )  
[7051] ( pen 4 ; move ua - 4 , 4 ; move ua , ua - 2 )  
[7052] ( move 3 , 2 - ua ; pen ua ; move 2 , ul / 4 )  
[7053] ( pen ua ; move ul - 4 , 4 / ua ; move 3 , 0 )  
[7054] ( move 4 - ua , ua * ua ; move 3 , 2 ; pen 4 )  
[7055] ( move 3 - ua , ul ; move 2 , ua - 4 ; pen 4 )  
[7056] ( move ua / 4 , 4 ; pen ua ; move ua + 2 , 3 )  | ( v0 = 3 ; ( move 2 , 4 ; move v0 * v0 , v0 ) )  | ( ( move 2 , 4 ; pen ul ) ; move ul , 3 ; move ua + 2 , 0 )  
[7057] ( move 2 - ua , ua ; pen ul ; move 2 , 3 / 4 )  
[7058] ( pen ul ; move 3 - ul , 4 ; move 2 , ul - 2 )  
[7059] ( pen ua ; move 3 , 3 - 4 ; move ua + ul , 4 )  
[7060] ( move ul - 4 , ua ; move ua - 3 , 4 ; pen 2 )  
[7061] ( move ul - 2 , ul ; move 3 , 3 * 3 ; pen ua )  
[7062] ( pen 2 ; move 3 , ul ; move 4 * 2 , ua * ua )  
[7063] ( move 4 / 3 , ul ; move ua , ua + 2 ; pen 3 )  
[7064] ( move 3 , ul / 3 ; move ua , 2 + ul ; pen 3 )  | ( move 3 , ul / 3 ; move ua , 3 ; v0 = ua + 2 )  
[7065] ( move ua + ul , 3 / 4 ; pen ul ; move 2 , 2 )  
[7066] ( move ua , 4 + 3 ; pen ul ; move 3 + ul , 4 )  
[7067] ( move ua , ua * ua ; move 3 , 4 ; pen 4 - 2 )  
[7068] ( pen 2 ; move ul , ua - 2 ; move 4 , ul / 3 )  
[7069] ( move 3 , 4 * 2 ; pen 4 - ua ; move ua , ul )  
[7070] ( move ua , 3 ; pen ua + 3 ; move ul , 4 * 4 )  
[7071] ( pen ul ; move 4 * 2 , ua ; move 3 , ul - 3 )  
[7072] ( move ua / 3 , ua ; pen ul ; move 3 + 3 , 4 )  | ( ( move 2 , ua ; move 2 , 4 ) ; ( move 4 , ua ; pen ul ) )  
[7073] ( move 4 + ul , ua / 4 ; move ua , 2 ; pen 3 )  
[7074] ( pen 3 ; move 2 , ua / 3 ; move ua / 2 , ul )  
[7075] ( pen ua ; move 3 , ul - 3 ; move 3 , ul - 4 )  
[7076] ( move ua + ul , 4 + ul ; move 4 , 3 ; pen 4 )  | ( move ua + ul , 4 + ul ; move 4 , 3 ; move ul , ua * 2 )  
[7077] ( pen ul ; move 3 - ua , 3 ; move 2 , 4 / ua )  
[7078] ( ( move ua - 2 , ul ; move 2 , 2 ) ; pen ul )  | ( ( pen 3 ; move ua - 2 , ul ) ; move 2 , ul + ul )  | ( move ua - 2 , ul ; v0 = ul + ul ; move v0 , v0 )  
[7079] ( move ul , 2 ; ( pen 0 ; move ua , ua / 3 ) )  
[7080] ( pen ul ; move 4 , 0 ; move ul - 3 , ul / 3 )  
[7081] ( move 4 + 3 , ua - 4 ; pen 3 ; move ul , ul )  | ( move ul , ul / ua ; move ua , 0 - ul ; move ul , ua + ua )  
[7082] ( pen 3 ; move ul - 3 , 3 ; move ua - 4 , ul )  
[7083] ( move ul , ul ; ( pen 0 ; move 3 + ul , 3 ) )  
[7084] ( move ul - 4 , 4 ; pen 2 + ul ; move ua , 4 )  | ( move 0 - 3 , 2 * 2 ; move ua , 4 ; v0 = 0 )  
[7085] ( move ul , 0 - ul ; move 4 , 4 * 3 ; pen ul )  | ( move ul , ua - ul ; move 4 , 4 * 3 ; pen ua / 4 )  
[7086] ( pen ul ; move 4 + 2 , ua ; move ua / 4 , 4 )  
[7087] ( move 3 , ul ; pen 2 - ul ; move 3 , ua / 4 )  
[7088] ( pen 4 ; move ul , ul ; move ua + 2 , 4 / 3 )  
[7089] ( move ua , ul / 3 ; move 4 , 2 * 2 ; pen ul )  
[7090] ( move 2 , 3 ; ( pen ul - ua ; move 2 , ul ) )  
[7091] ( move 2 , 4 * 3 ; pen ul ; move ul - ua , 4 )  
[7092] ( move ua / 3 , 2 ; move 4 - ua , ul ; pen 4 )  
[7093] ( move 4 , 4 + ul ; pen ua ; move 2 , ul / 3 )  
[7094] ( move 3 , 3 ; pen 4 ; move ua - ul , ua / 3 )  
[7095] ( move ul - 3 , ul ; pen 2 ; move ua / 3 , 4 )  | ( ( move ul - 3 , ua + ul ; pen ul ) ; move 2 , 4 )  
[7096] ( move ul - 4 , 0 ; pen ul ; move 4 , ul / 3 )  
[7097] ( move ul , 2 + ul ; move 4 , 4 / 3 ; pen ua )  
[7098] ( move ul , 3 ; move 3 - ua , 2 / 4 ; pen ul )  | ( move ul , 3 ; move 3 - ua , 2 / 4 ; v0 = ul )  
[7099] ( pen ul ; ( move 0 - ul , ul ; move 4 , 2 ) )  | ( v0 = ul ; move v0 - 2 , ul ; move 4 , v0 + v0 )  
[7100] ( move 2 , 4 - ua ; move 2 , ul / 4 ; pen ul )  
[7101] ( move ua + ul , ul ; move ua + ul , ul + ul )  | ( v0 = ua + ul ; move v0 , ul ; move v0 , 2 )  | ( move ua + ul , ul ; v0 = ul ; move v0 + ua , 2 )  
[7102] ( move ul , ua + ua ; move ul - ua , ua - ul )  | ( move ul , ua ; move ul - ua , 0 - ul ; move 0 , ua )  
[7103] ( move ul - ua , ua + ul ; move ua - ul , ul )  | ( move ul - ua , ul ; move ua - ul , ul - ua )  
[7104] ( pen ul ; ( move ua , 3 ; move 4 - ua , 2 ) )  | ( move ua , 3 ; move 4 - ua , ul + ul ; v0 = ul )  
[7105] ( move ul / 4 , ul ; move 4 * 2 , 2 ; pen ua )  | ( move ul / 3 , ua + ul ; move 4 + 4 , 2 ; pen 0 )  | ( move 2 / ua , ul ; v0 = ua + 2 ; move v0 , v0 )  
[7106] ( move ul , ua * ua ; move ua + ul , ua - ul )  
[7107] ( pen ul ; move 3 * 2 , ua ; move ul , 3 / 4 )  
[7108] ( move ul , ua - ul ; move ua + ul , ua * ua )  
[7109] ( pen ua ; move ua , 4 ; move 4 + ul , 4 / 3 )  
[7110] ( move ul , 3 ; move ua , ua * ua ; move 0 , 0 )  | ( move ul , 3 ; ( move ua , ua * ua ; v0 = 2 ) )  
[7111] ( move 4 , 4 / ua ; pen 3 ; move ul - ua , 3 )  
[7112] ( move 4 , ua / 3 ; pen ua ; move 2 , ul / 3 )  
[7113] ( pen ul ; move 2 , 3 ; move 4 - ul , 4 / ua )  
[7114] ( move 3 , 4 * 4 ; move ul , 3 - ua ; pen ul )  
[7115] ( move 4 + ul , 2 / 3 ; pen ul ; move ul , 4 )  
[7116] ( move ua + 2 , ul ; ( move 4 , 4 ; pen ua ) )  | ( move 2 , ul - ua ; move ua , ua ; move 4 , 4 )  
[7117] ( move 3 , ua / 3 ; pen 4 ; move ua , 4 - ul )  
[7118] ( move 3 , 4 / ua ; move 3 , 4 ; pen ua * ua )  
[7119] ( move ul , ul + ul ; move ua + ul , ua - ul )  
[7120] ( move 3 , ul / ua ; pen ul / 3 ; move 4 , 2 )  
[7121] ( move 0 , 2 ; move 2 , ua * ua ; move ua , ul )  
[7122] ( move 2 , 4 * 3 ; ( pen ua ; move ua , ul ) )  
[7123] ( move ul , ua ; move 2 , ul - 2 ; move ua , 0 )  | ( move ul , 0 ; ( move ua + 2 , ua - ul ; move 0 , ua ) )  | ( ( move ul , ua ; v0 = 3 ) ; move ua + 2 , ua - ul )  
[7124] ( move ua , 0 ; move 2 + ul , 3 ; move ua , ul )  | ( move ua , ua + ua ; move 3 , 3 ; move ua , ul )  
[7125] ( move ua - ul , 3 / 4 ; move 4 , 4 ; pen ua )  
[7126] ( move 4 + ul , 4 ; move ul , ul / 3 ; pen 3 )  
[7127] ( move 2 , ul ; ( move ua , 4 * 2 ; pen ul ) )  
[7128] ( move ul , 0 ; move 0 , ul ; move ua , 2 / ua )  
[7129] ( move 4 , ua ; move 0 - ul , ul ; move ua , 0 )  
[7130] ( move ua , ul / ua ; move ua - ul , ua + ul )  
[7131] ( move ul , 0 ; move 0 - 4 , ul ; move ua , ua )  
[7132] ( move ua , 0 ; move ul , ul ; move 2 , ua + 3 )  
[7133] ( ( move ua , 2 / ua ; pen ua ) ; move 3 , 4 )  
[7134] ( move ua + ul , 0 ; move 2 , ul ; move 2 , ul )  
[7135] ( move 2 , 2 ; move ul , ua + ul ; move ua , 2 )  
[7136] ( move 3 , 0 ; move ul , 0 - ul ; move ul , ul )  | ( ( move 3 , 0 ; move ul , 3 - 4 ) ; move ul , ua + ul )  
[7137] ( move ua / 4 , 4 ; pen 4 ; move 4 + ul , ul )  
[7138] ( move ua , ua ; move ua , 0 - 3 ; move 3 , ul )  
[7139] ( pen ul ; move ul / 2 , ul ; move 4 , 4 * 3 )  
[7140] ( move 2 , 0 ; move ul , ul ; move ua + ul , 3 )  
[7141] ( move 3 , ul ; pen ul / 4 ; move ul , 4 - 3 )  
[7142] ( move 4 , ua ; ( pen ul ; move 2 , ul / 2 ) )  
[7143] ( ( move 2 , 4 ; move ua , ul / 2 ) ; pen ul )  
[7144] ( move ua , 0 ; move ul , ul ; move 2 - ul , 2 )  | ( move ua , ua ; move ul , ul ; move ul , 2 - ua )  
[7145] ( move 0 , ul ; move ua - 2 , ua ; move ua , 4 )  | ( move ua - 2 , ul ; move 0 , 2 + ul ; move ua , ul )  | ( ( move ul / ua , 0 ; move 4 , 2 - ul ) ; move ua , 4 )  
[7146] ( move ua , ua ; move ul - 3 , 0 ; move 2 , ul )  
[7147] ( move ua , 4 * 2 ; ( move ua , 4 ; pen ul ) )  
[7148] ( move 2 , ua ; move 2 , ua - ul ; move ua , 2 )  
[7149] ( move ua , ua ; move ul + ul , 0 ; move 4 , 2 )  
[7150] ( move 2 , ul ; move 0 , ul ; move ua + ul , 4 )  
[7151] ( move ul , 2 ; move ul , 2 + 2 ; move ua , ul )  | ( move ul , 2 - ua ; move ul , 3 + ul ; move ua , ul )  
[7152] ( move ua , 3 ; move ua + ul , 2 ; move 2 , ul )  
[7153] ( move 3 , 0 ; move 3 - ua , ul ; move ua , ul )  
[7154] ( move ua , 4 ; move ua , 2 + ul ; move 2 , ua )  | ( pen ul ; ( move ua , 3 + ul ; move ua + 2 , 3 ) )  
[7155] ( move ua - ul , ul / ua ; move ul , ua * ua )  
[7156] ( move ua , 0 - ua ; move 4 , ul ; move ul , 2 )  
[7157] ( move 3 , 0 ; move 2 + ul , ul ; move ul , ul )  | ( move 3 , 0 ; move 4 - ul , ul ; move 2 - ul , ul )  
[7158] ( move ul - ua , ua ; move 0 , 3 ; move ua , 4 )  
[7159] ( move 2 , ua ; move ul , 2 ; move 2 , ul - ua )  | ( ( move ul + ul , ua ; move ul , 2 ) ; move 2 , ul )  
[7160] ( move 3 - ua , ua ; move ul , ua ; move 2 , 2 )  
[7161] ( move 3 , ul ; move ua - 3 , ul ; move 0 , ua )  
[7162] ( move ua , ul - ua ; move 2 , 2 ; move ua , 3 )  
[7163] ( move ua , 2 ; move ul , ul ; move 2 / ua , 0 )  | ( move ua , 3 - ul ; move ul / 4 , ul ; move ul , ua )  
[7164] ( move ul , 0 - 2 ; move ua , ul ; move 3 , ul )  
[7165] ( move ul , 0 ; move ul - ua , ul ; move 3 , 2 )  
[7166] ( move ul , 4 + ul ; move ul , 0 ; move ua , 2 )  
[7167] ( move ul , 0 ; move ua , 2 - ul ; move 3 , ul )  | ( move ul , ua ; ( move ua , ul ; move 3 , ul ) )  
[7168] ( move ua , 2 ; move 2 , 2 ; move ua - ul , ul )  
[7169] ( move ua - 4 , ul ; move ua , 2 ; move ul , 0 )  
[7170] ( move ua , 4 ; ( pen 2 ; move ul / 3 , ul ) )  | ( move ul , ul ; move ua , 3 ; move ul / 3 , ul )  
[7171] ( move ul / ua , ua * ua ; move ua - ul , ul )  
[7172] ( move ua - ul , 2 ; move ua , 2 ; move ua , 3 )  
[7173] ( move ul , 4 / ua ; ( pen ul ; move 3 , 2 ) )  
[7174] ( move ua , 2 ; move 0 - ul , ul ; move 4 , ua )  
[7175] ( move ua - ul , ua ; move 2 , 3 ; move ua , 2 )  
[7176] ( move 2 , ul ; move ul , 3 ; move ua , ua + 3 )  
[7177] ( move 3 , ul ; move ua , 0 - 3 ; move ul , ul )  
[7178] ( move ua , ul ; move 3 , 3 ; move ua + ul , 2 )  
[7179] ( move 3 / ua , 0 ; move ua , ul ; move ul , 2 )  
[7180] ( move ul , 2 * 2 ; move ua , ul ; move ua , 2 )  
[7181] ( move 3 , ul - ua ; move ul , 2 ; move ua , 2 )  
[7182] ( move ul , 0 ; move 4 , 2 ; move ul + ul , ul )  
[7183] ( move ua , ua ; move 4 , 2 + ul ; move 2 , ul )  
[7184] ( move ua , 0 ; move 4 , 4 ; move ua , ua - ul )  
[7185] ( move 2 , ul ; move ua , ua ; move 4 , ua - 2 )  
[7186] ( move 2 , ul ; move ua + ul , 3 ; move 2 , ul )  
[7187] ( move 3 , ua + ua ; move ul , ul ; move 2 , 3 )  
[7188] ( move 3 , 0 ; move ul , 3 - ul ; move ua , ul )  | ( move 3 , ua ; ( move ul , 2 ; move 0 , ul ) ; move ua , ua )  | ( ( pen ua ; move 4 , ua * 3 ) ; move ul , 2 ; move ua , ul )  
[7189] ( move ua , 4 ; move ua , 3 ; move ua + ul , 2 )  
[7190] ( move ua , 4 ; move ua , 2 ; move ua , ua - 3 )  
[7191] ( move 2 , 2 ; move ul , 4 ; move ua + ul , ua )  
[7192] ( move ua , 0 ; move ul , 4 ; move 3 - ua , ul )  
[7193] ( move ul + ul , 3 ; move ua , ua ; move 3 , 2 )  
[7194] ( move 2 , 3 ; move ul - ua , 2 ; move ul , ua )  
[7195] ( move ul , 3 / ua ; move ua , 0 ; move ul , 2 )  
[7196] ( move ul , 3 ; move ul , ul ; move 0 - 3 , ua )  
[7197] ( move ua , 2 + ul ; move ua , 4 ; move ul , 2 )  
[7198] ( move 3 , 2 ; move ua , ul ; move ua - ul , 2 )  
[7199] ( move 3 , ul ; move ua , ul ; move 3 , ua + 2 )  
[7200] ( move 2 , 0 - ul ; move ul , ul ; move 3 , ul )  
[7201] ( move ul , 4 + 2 ; move ua , ua ; move ul , 2 )  
[7202] ( move ua , ul ; move 2 , 2 ; move ua - ul , 3 )  
[7203] ( move ul - ua , 2 ; move 2 , ul ; move 3 , ua )  
[7204] ( move ul , 2 ; move ua + ul , 2 ; move ua , 4 )  
[7205] ( move ul , 2 - ul ; move 2 , ul ; move 2 , ul )  | ( move ul , ul ; ( move 2 , ul ; move 2 , ul ) )  
[7206] ( move 2 - ul , 2 ; move ua , ul ; move 3 , ul )  
[7207] ( move ua , 2 ; move ul + ul , 3 ; move 3 , ul )  
[7208] ( move ul , ul ; move ul , 3 - 2 ; move ua , 2 )  | ( move ul , ul ; move ul , ul ; move ua , 4 / 2 )  
[7209] ( move ua , 4 ; move ua , 3 ; move 2 + ul , ul )  
[7210] ( move 0 , ul ; move ua , ul ; move 3 , ua / 3 )  | ( move ua , 2 ; move 0 , ua / 3 ; move 3 , 0 - ua )  
[7211] ( move ua , 3 ; move 2 , ul ; move 3 , ul - ua )  
[7212] ( move ua , ul ; move 0 , 4 ; move ul - ua , 4 )  
[7213] ( move ul , ul ; move 0 , 2 ; move ua , ul / 3 )  
[7214] ( move 2 , 2 ; move 4 , ua ; move ua - ul , ul )  
[7215] ( move ul , 0 ; move 3 , 4 + ul ; move ul , ul )  
[7216] ( move 2 , ul ; move ua , ua ; move 3 , 4 + ul )  
[7217] ( move 4 , ua ; move ua , 4 ; move ua + ul , 2 )  
[7218] ( move 2 , 2 ; move ul , ul ; move ul , 3 + ul )  
[7219] ( move 3 , 2 + 2 ; move ul , ul ; move ul , ul )  | ( move 3 , 4 ; ( move ul , ul ; move ul , ul ) )  
[7220] ( move 3 , 3 ; move 3 , ua ; move ua , ua - ul )  
[7221] ( move ul , ul ; move 2 , 4 + 2 ; move ua , ul )  
[7222] ( move 2 , ul ; move ua , 2 ; move ul , 4 + ul )  
[7223] ( move 2 , ua + 4 ; move ul , ul ; move 2 , ul )  
[7224] ( move 3 , 0 ; move 3 - ul , ul ; move ul , ul )  
[7225] ( move ua , 2 ; move ul , 3 ; move 4 , ua + ul )  
[7226] ( move 2 , ul ; move ul , 4 ; move ua - 2 , ua )  
[7227] ( move ul , 0 ; move ul , ul ; move 3 , 4 + ul )  
[7228] ( move ul , ua ; move ul , 3 + ul ; move 3 , 2 )  
[7229] ( move ul , ua ; move 2 , 4 + ul ; move 2 , ul )  
[7230] ( move 3 , ua + 4 ; move ul , ul ; move ua , 2 )  
[7231] ( move 2 , 4 ; move ua , ul ; move 3 , ua + ul )  
[7232] ( move 3 , ul - ua ; move 3 , 2 ; move ua , ul )  
[7233] ( move ua , ul ; move 2 , ua ; move ua , 3 * 3 )  | ( move ua + 2 , ul ; move 0 , 4 + 3 ; move ua , ua + 2 )  
[7234] ( move ul , ul ; move 2 , 3 - ul ; move ua , 2 )  
[7235] ( move ul - 4 , ua ; move ul , ua ; move 2 , 2 )  
[7236] ( move ua , ua ; move ul , ua ; move 3 * 3 , 2 )  
[7237] ( move 4 , ua * 2 ; move ua , ul ; move ua , 2 )  
[7238] ( move ul , ua ; move 3 , 2 ; move ua - 3 , ul )  
[7239] ( move ul , ul ; move ul , 2 ; move 2 , ua - 3 )  
[7240] ( move ua + 4 , ul ; move ul , 2 ; move 2 , ul )  
[7241] ( move 3 , ul ; move 4 , ua ; move ua , ua - 2 )  
[7242] ( move ua , 4 + ul ; move 2 , ua ; move 3 , ul )  
[7243] ( move ul , ua - 2 ; move 4 , ua ; move 2 , ul )  
[7244] ( move 3 , ul ; move 3 , ua + 3 ; move ua , ul )  
[7245] ( move 2 , 3 ; move ul - ua , 3 ; move ua , ul )  
[7246] ( move 2 , ua ; move ul , 3 ; move ua , ua / 3 )  
[7247] ( move ul , ul / 2 ; move ua , 4 ; move ul , 0 )  | ( pen 3 ; ( move ul , ul / 2 ; move ua + ul , 4 ) )  | ( move ul , ul / 2 ; pen 3 + ul ; move ua + ul , 4 )  
[7248] ( move ul , ul ; move 2 - ul , 3 ; move 2 , ul )  
[7249] ( move 4 , ul ; move ua , ua + 2 ; move 4 , ul )  
[7250] ( move 4 , ua ; move 4 + ul , ul ; move ua , 2 )  
[7251] ( move 2 , ul ; move ul , 2 ; move ul - 4 , ua )  
[7252] ( move 3 , ul ; move 3 + 3 , ul ; move ua , ul )  
[7253] ( move 2 , ul ; move ul , ul - 3 ; move ul , 2 )  
[7254] ( move ua , 0 ; move ul , ul ; move 3 , 4 / ua )  
[7255] ( move 0 - 3 , ul ; move ul , ul ; move 4 , ul )  
[7256] ( move 2 , ua ; move ua , ul / ua ; move 3 , 3 )  
[7257] ( move ul , 0 ; move ua - ul , 4 ; move ul , 4 )  
[7258] ( move ua , ul ; move 2 , 4 ; move 4 , ua + ul )  
[7259] ( move ua - ul , 4 ; move ua , ua ; move 3 , 3 )  
[7260] ( move 2 , ul + ul ; move 4 , ul ; move 2 , ul )  
[7261] ( move 4 , ul ; move ul , 2 ; move 2 + ul , ul )  
[7262] ( move ul , 4 ; move ua , 0 ; move ul , 3 / ua )  
[7263] ( move ul , 3 ; move ul , 2 ; move 3 - ua , ul )  
[7264] ( move ua , ua ; move 4 + 2 , 4 ; move ul , ul )  
[7265] ( move 3 , 2 ; move ul , ul ; move ua - 4 , ua )  
[7266] ( move ua , ul ; move 4 , 3 + ul ; move ul , 2 )  
[7267] ( move ua , ul ; move 2 + ul , 3 ; move 4 , ul )  
[7268] ( move 3 + ul , ua ; move ua , 3 ; move 4 , ul )  
[7269] ( move 3 , ul + ul ; move ul , 3 ; move ua , 3 )  
[7270] ( move ul , ua ; move 2 , 3 ; move ua , 3 / ua )  
[7271] ( move ul , 3 ; move ua , ul / 3 ; move ul , 0 )  
[7272] ( move ua , 0 ; move ua , 4 ; move ua / 4 , ul )  
[7273] ( move ua , ul ; move 4 , ul - 4 ; move ul , 0 )  | ( move ua , ul ; ( move ul - ua , ul / ua ; pen ul ) )  
[7274] ( move ul , ua ; move ua , 2 ; move ul , 3 / 2 )  
[7275] ( move ul , ua ; move 2 , ua / 3 ; move ua , 3 )  
[7276] ( move ua , ul ; move 4 , ua ; move ua + 3 , 4 )  
[7277] ( move ul , ua ; move ua , 2 / 4 ; move ua , 2 )  | ( move 2 - ul , 0 ; move ua , 2 / 4 ; move ua , 2 )  
[7278] ( move ul , 3 ; move ul , ua ; move 4 - ua , 2 )  
[7279] ( move 3 , ul ; move 4 , ua ; move 2 , ua - ul )  
[7280] ( move 2 , 3 ; move 3 , ua * ua ; move ul , ul )  
[7281] ( move ua , 3 ; move ul , ua - ul ; move 2 , 4 )  
[7282] ( move 3 , ul ; move 3 , 3 ; move ua , ua - ul )  
[7283] ( move 4 , ua ; move ul , 2 ; move ul , 2 - ul )  
[7284] ( move ul , 3 ; move ul , 2 ; move ua - 3 , ul )  
[7285] ( move ul , ua ; move 4 + ul , ul ; move 3 , 2 )  
[7286] ( move ua , ul ; move 3 , 2 ; move 4 + ul , ul )  
[7287] ( move ul , 2 ; move ul - 4 , ul ; move ua , 2 )  
[7288] ( move ul - 2 , 4 ; move 3 , ul ; move ua , ua )  
[7289] ( move 3 - ul , 2 ; move 3 , ul ; move ua , ul )  
[7290] ( move ul , ua - ul ; move 3 , 2 ; move 4 , ua )  
[7291] ( move 3 , ua ; move ul - 3 , ul ; move ul , 2 )  
[7292] ( move 2 - ua , 4 ; move 3 , ua ; move ul , ul )  
[7293] ( move ua , 4 ; move ul , 3 + ul ; move 3 , ul )  
[7294] ( move 4 , ua ; move ul , ua ; move ua - 3 , 4 )  
[7295] ( move 3 , 4 ; move ul , ul ; move ua , 3 - ua )  
[7296] ( move ul , ua + ua ; pen 0 ; move 2 - ua , 0 )  
[7297] ( move 2 , 4 ; move ul - ua , 3 ; move ul , ul )  
[7298] ( move ul , 4 ; move ul , 4 + ul ; move ua , 2 )  
[7299] ( move 4 , 4 + ul ; move ul , 2 ; move ua , ul )  
[7300] ( move ul , ul ; move 0 - ul , 4 ; move 4 , ul )  | ( move 2 - ul , ul ; move ul , ul ; move 4 , 4 )  
[7301] ( move ua , 4 ; move 4 , ua - ul ; move ua , 3 )  
[7302] ( move ul , ua ; move 2 , ul ; move 4 , ul - 3 )  
[7303] ( move 4 , 0 ; move ul , ul ; move ul / 2 , ul )  
[7304] ( move 4 , 0 ; move ul , ul ; move ua , ua / 4 )  
[7305] ( move 4 , ua ; move 2 , ul ; move ul - 3 , ul )  
[7306] ( move ul , ua / 3 ; move ul , 2 ; move 2 , ul )  
[7307] ( move 3 , 2 ; move ul , ul ; move ua , ua / 3 )  
[7308] ( move ul , 2 - ul ; move ua , ul ; move 4 , 3 )  
[7309] ( move ul , 2 ; move 3 + ul , ul ; move 4 , ul )  | ( move ul , 2 ; move 4 , ua + ul ; move 3 + ul , ul )  | ( pen ua * 3 ; ( move ul , 2 ; move 4 , ul ; move 4 , ul ) )  
[7310] ( move ua , ua ; move 3 - 4 , 4 ; move ua , ul )  | ( move ua , 0 ; move ul , ua + ul ; move ua , 4 )  
[7311] ( move ul , ul ; move 3 , ul ; move ul , 3 + 3 )  
[7312] ( move ul , 2 ; move 4 - ul , 2 ; move ul , ul )  | ( move ul , 2 ; move 3 , ul + ul ; move ul , ul )  
[7313] ( move ul , 2 ; move ua , ul ; move 2 / 3 , ul )  | ( move ul , 2 ; ( move ua , ul ; move ul , ul ) )  
[7314] ( move 4 , ua + 2 ; move ul , 4 ; move ul , ul )  
[7315] ( move ul , ul ; move ul , ua ; move 2 , 2 / 3 )  
[7316] ( move 4 , ua ; move ul , 3 ; move ul , 3 + ul )  | ( move 4 , ua ; move ul - 2 , ua ; move ul , ul )  
[7317] ( move ua + 3 , ul ; move 4 , 4 ; move ul , ua )  
[7318] ( move 3 , 2 - ua ; move ul , ul ; move ul , 4 )  
[7319] ( move 2 , ua ; move ul , ul / 2 ; move ua , 4 )  
[7320] ( move 3 , ul ; move ul , 4 ; move ua + ul , 3 )  
[7321] ( move 2 , ua ; move ul , ul ; move 4 , 4 + ul )  
[7322] ( move ul , ua ; move ua , 4 ; move ul , 4 - 2 )  | ( move ul , ua ; move ua , 4 ; move ul , ua + 2 )  
[7323] ( move 2 , ul ; move ua , 4 ; move 4 - ua , ul )  
[7324] ( move 2 , ul ; move ua , 2 ; move ua / 4 , ul )  
[7325] ( move ua , 2 ; move ul , ul ; move 4 , 3 - ul )  | ( move ua , ua + 2 ; ( move ul , ul ; move 4 , 2 ) )  
[7326] ( move 3 , ul ; move ul , 4 ; move 2 + ul , ul )  
[7327] ( move 4 , ua / 4 ; move ul , 0 ; move ua , ul )  
[7328] ( move ul , 4 ; move 2 , ul ; move 4 , ua + ul )  
[7329] ( move ul , ul / 2 ; move ua , ul ; move 4 , 2 )  
[7330] ( move ul , ua ; move 4 * 2 , ul ; move ua , 4 )  
[7331] ( move ua , 2 ; move ul / ua , ul ; move 4 , 3 )  
[7332] ( move ul , 4 ; move ua , 4 - 2 ; move ul , ul )  
[7333] ( move 4 , 2 ; move ua / 3 , ul ; move ua , ul )  
[7334] ( move ua , 4 / 3 ; move ul , 2 ; move ul , ua )  
[7335] ( move 3 , 3 ; move 2 / ua , ul ; move ul , ul )  
[7336] ( move 3 , ul ; move 4 , ua - ul ; move 3 , ul )  
[7337] ( move 3 , ul ; move 4 , 2 - ul ; move ul , ul )  
[7338] ( move 4 + ul , 4 ; move ul , ul ; move ul , 2 )  
[7339] ( move 3 , 3 ; move ul - 4 , ul ; move ul , ua )  
[7340] ( move 2 , 4 + ul ; move ul , ul ; move 4 , ul )  
[7341] ( move ul , 2 ; move ul , 3 / ua ; move 3 , ul )  
[7342] ( move 2 / 3 , ua ; move ul , ul ; move ua , 4 )  
[7343] ( move 3 / ua , 4 ; move ua , ua ; move 3 , ul )  
[7344] ( move 3 + 3 , ul ; move 4 , ul ; move ul , ul )  
[7345] ( move ul , ua ; move 2 , ul ; move ua , 4 / 3 )  
[7346] ( move ul , 3 ; move ua / 4 , 2 ; move ua , ul )  
[7347] ( move ua , ul ; ( move ul , 2 ; move ua , 2 ) )  | ( move ua , ul ; ( pen 4 ; move ul , 2 ) ; move ua , 2 )  
[7348] ( move ua , ul / 3 ; move 2 , ua ; move 4 , ul )  
[7349] ( move ul , ul ; move 4 + 3 , 4 ; move ua , ul )  
[7350] ( move 4 , 3 ; move ul , ua + ul ; move ul , 4 )  
[7351] ( move ul - 4 , 3 ; move 2 , ul ; move ul , ul )  
[7352] ( move ua - 4 , ul ; move ua , ul ; move 3 , 4 )  
[7353] ( move 4 , 3 ; move ul , ul ; move ul , 2 - ul )  
[7354] ( move ul , ul / 3 ; move 4 , 2 ; move ua , ua )  
[7355] ( move ul - 4 , ua ; move 3 , 4 ; move ua , ul )  
[7356] ( move 4 + ul , ul ; move ul , ul ; move 3 , 3 )  
[7357] ( move ul / 3 , 4 ; move ul , 2 ; move ua , ua )  
[7358] ( move ul , ua + ul ; move 3 , 4 ; move 4 , ul )  
[7359] ( move ul , ua ; move 4 , 4 ; move 4 , ua + ul )  
[7360] ( move ul , 4 ; move ul - 3 , 2 ; move ul , ul )  
[7361] ( move ul , ul ; move 3 + 3 , 4 ; move ul , ul )  
[7362] ( move 3 + ul , ul ; move 3 , ul ; move 4 , ul )  
[7363] ( move 2 , 3 ; move ua , ul / 3 ; move ul , ul )  
[7364] ( move ul , 3 ; move ul , ua + ul ; move 4 , 4 )  
[7365] ( move ul , 3 ; move 3 , ul ; move ul + ul , 4 )  
[7366] ( move ul - 3 , ul ; move ua , ul ; move 4 , 3 )  
[7367] ( move ua , 4 ; v0 = ua ; move 3 , ua * ua )  
[7368] ( move ua , ua ; move ul / 4 , ul ; move 2 , 3 )  
[7369] ( move ul , ul ; move ua + ul , 4 ; move 3 , 4 )  
[7370] ( move ul - ua , 3 ; move ul , 3 ; move ul , 4 )  
[7371] ( ( move ul , ul ; move 2 , ul ) ; move ua , 2 )  | ( move ul , ul ; move 2 , ul ; move ua , 3 - ul )  
[7372] ( move 2 , 4 ; move ul , ul ; move ua , ul / 3 )  
[7373] ( move ul , 3 ; move ul , 4 ; move 2 , ul / ua )  
[7374] ( move ul , 4 ; move 4 , 4 ; move ua , ul - ua )  
[7375] ( move 2 , 4 * 4 ; move ul , ul ; move ua , ul )  
[7376] ( move ul , 2 ; ( move ua , ul ; move ul , 2 ) )  
[7377] ( move ua - 3 , ul ; move 4 , ul ; move 4 , ul )  
[7378] ( move ua , ua - 2 ; pen 0 ; move ua , ua - 2 )  
[7379] ( move 3 , ua ; move 2 , ul / 4 ; move ul , ul )  | ( ( pen 4 ; move 3 , ua ) ; move 2 , ul / 4 ; move ul , ul )  
[7380] ( move 4 , ul ; move ul , ul ; move 4 , 3 - ua )  
[7381] ( move ul , ua / 4 ; move ul , ul ; move 3 , 2 )  
[7382] ( move 4 , 3 ; move 4 , ul ; move ul , ul - ua )  
[7383] ( move ua - 4 , ua ; move 4 , ul ; v0 = ua )  | ( move 0 , ua ; move ua - 4 , ua * 2 ; move 4 , ul )  
[7384] ( move ul , 3 ; move ul / 2 , ul ; move 3 , ul )  
[7385] ( move ul , ul ; move 3 , 4 ; move ua - 4 , ul )  
[7386] ( move 4 , ua ; move 4 - ua , ul ; move ul , 4 )  
[7387] ( move ul , ua ; move ul / 3 , 4 ; move ua , 3 )  
[7388] ( move ul , ul ; move ua , ul / 2 ; move 3 , 4 )  
[7389] ( move ul , ua * 4 ; move 2 , 4 ; move ul , ul )  | ( ( move ul , ua ; move ul + ul , 4 ) ; move ul , ul ; pen ul )  
[7390] ( move ul , ua ; move 4 , ul / 3 ; move ul , 2 )  
[7391] ( ( move 2 , ua ; move ul , ul ) ; move ul , 2 )  | ( move 2 , 0 ; move 2 - ul , ul ; move ul , 3 - ul )  
[7392] ( move 4 , ua ; move ul , ua ; move ua , 4 * 4 )  
[7393] ( move ul , ul ; move ul / 4 , 3 ; move ua , 2 )  
[7394] ( move 4 , 3 ; move 4 - ua , ul ; move ul , ul )  
[7395] ( move ua , ua ; ( move 2 , 3 ; move ul , ul ) )  
[7396] ( move ua , 0 ; move 2 - ua , 2 - ua ; pen ua )  | ( move ua , 0 ; ( move 0 , 2 ; move 2 - ua , 0 ) )  | ( move ua , ua ; v0 = 2 ; move v0 - ua , ua + 2 )  
[7397] ( move ua , ua ; move ul , 4 ; move 4 , ul / 2 )  
[7398] ( ( move ua , 2 ; move 2 , ul ) ; move ul , ul )  
[7399] ( move 4 , 3 ; move ul + ul , 4 ; move ul , ul )  
[7400] ( move ul , ua ; move ul , 2 / 4 ; move ua , 4 )  
[7401] ( ( move ua , 0 ; move ul , ul ) ; move 4 , ul )  
[7402] ( move ul , 4 * 4 ; move 2 , ul ; move ua , ul )  
[7403] ( move 3 , 4 + ul ; move ul , ul ; move 4 , ul )  
[7404] ( move 4 , ul ; move ua , ua - 4 ; v0 = ua )  
[7405] ( move 3 , ul ; move 3 - 4 , ul ; move ul , ul )  
[7406] ( move 3 , ul ; move 3 / ua , ul ; move ul , 4 )  
[7407] ( move 3 , ua ; move ul / 3 , 4 ; move ul , ul )  
[7408] ( ( move ua , 3 ; move ul , 2 ) ; move ul , ul )  | ( move ua , 2 + ul ; move ul , 2 - ua ; move 3 / 4 , ul )  
[7409] ( move 3 , ul ; move ua , 4 ; move ua / 4 , ul )  
[7410] ( move ua , ua ; ( move 4 , 3 ; move ua , ul ) )  
[7411] ( move ua , 0 - ul ; move 2 - ua , 2 ; pen ua )  
[7412] ( ( move ul , 3 ; move ul , 2 ) ; move ua , ul )  
[7413] ( move ul , 4 ; move ul , 4 ; move ul - ua , 4 )  
[7414] ( move ul , 2 ; move ua , ul / 3 ; v0 = ul )  | ( move 0 , 3 - 4 ; move ul , 3 ; move ua , ul / 3 )  | ( move ul , ul + ul ; move ua , ul / 3 ; move 0 , 0 )  
[7415] ( move 3 , ul ; move ul / 4 , ul ; move ul , 2 )  
[7416] ( move 4 , ul ; move ua , 3 ; move ul / 3 , ul )  
[7417] ( move ua , ua ; ( move ul , 4 ; move 2 , ul ) )  | ( move ua , ua ; move ul , ua + 4 ; move 2 , ul )  
[7418] ( move ul , ul ; move 3 , 4 ; move ul / 2 , ul )  
[7419] ( move 4 , ua ; move ul , 4 ; move 3 / ua , ul )  | ( move 4 , ua ; move ul , 4 ; move ul / 2 , ul )  
[7420] ( move ua , 3 ; move 3 , ul ; move ul , ul / 4 )  
[7421] ( move ul , ul ; move 3 / 4 , ua ; move ua , 4 )  
[7422] ( move ua , 2 ; move ul / 4 , ul ; move ul , 4 )  
[7423] ( move ul - 4 , 4 ; move ul , ul ; move 3 , ul )  
[7424] ( pen ul ; move 0 - ua , 0 ; move ua , 4 + ul )  | ( move 0 - ua , 0 ; move 0 , ua + ul ; move ua , 4 )  
[7425] ( move ua , ul ; ( move 2 , ul ; move ua , 4 ) )  
[7426] ( move ua , ul ; move 3 , 4 ; move ul , 4 / ua )  
[7427] ( move ua , ul ; move 2 / 4 , ul ; move ul , 4 )  
[7428] ( move ul , ua ; move ul , 4 / 3 ; move 4 , ua )  
[7429] ( move ua - 2 , 3 ; v0 = 2 ; move v0 , 2 )  
[7430] ( move ul , ul - 3 ; move 4 , ul ; move 4 , ul )  
[7431] ( move ul , ua ; ( move 4 , 2 ; move ul , ul ) )  
[7432] ( move ua , 4 + 2 ; v0 = 2 ; move 3 , v0 )  
[7433] ( ( move 3 , ua ; move ul , ul ) ; move 3 , ul )  | ( move 3 , ua ; move ul , ul ; ( v0 = 0 ; move 3 , ul ) )  
[7434] ( move 4 , 4 * 3 ; move ul , ul ; move ul , ul )  
[7435] ( move ul , 4 ; move 4 , ul ; move ua , ua / 4 )  
[7436] ( move 4 , ul / 3 ; move ul , ul ; move 3 , ul )  
[7437] ( move 0 - 4 , ul ; move ua , 0 - ul ; pen ua )  | ( move 0 - ua , ua ; ( move 4 , ul ; pen ua ) )  | ( move 2 , ua ; move 0 - ua , 0 ; move 3 + ul , ul )  
[7438] ( move 0 , 0 ; pen ul - ua ; move 4 , ua - ul )  
[7439] ( move 3 + 2 , ul ; pen 0 ; move ul + ul , ua )  
[7440] ( ( move ua , ul ; move ua , 4 ) ; move 3 , ul )  
[7441] ( move ul , ua ; ( move 4 , ul ; move 2 , ul ) )  
[7442] ( ( move ul , ua ; move 2 , ul ) ; move ul , 4 )  
[7443] ( move 0 - ul , ua * 4 ; pen 0 ; move ua , ul )  
[7444] ( ( move ul , ul ; move ul , ul ) ; move 2 , 4 )  
[7445] ( move ua , 4 + 2 ; v0 = 4 ; move v0 , 2 )  
[7446] ( move ua - ul , ul ; pen ua + 2 ; move 2 , 2 )  | ( move ua - ul , ul ; v0 = ua + 2 ; move 2 , 2 )  | ( move ua - ul , 4 - 3 ; v0 = 2 ; move v0 , v0 )  | ( move ua - ul , ul ; v0 = ul + ul ; move v0 , v0 )  
[7447] ( move ua / 4 , ul ; move ul , 4 ; move 4 , ul )  
[7448] ( move ul , 4 ; move 3 , ul ; move ul / 4 , ul )  
[7449] ( move ul - ua , 0 ; move ua , 3 * 2 ; pen ua )  
[7450] ( move ua , 0 - ul ; pen ul ; move ua + 4 , 2 )  
[7451] ( move ul , ul ; ( move 4 , 2 ; move ul , ul ) )  
[7452] ( move 4 , ul ; move ul , ul ; move ul , 3 / 4 )  
[7453] ( move ul , 4 ; pen ua ; move ua + 2 , ua + 2 )  | ( move ul , 4 ; pen ul ; move ua + 2 , ul + ul )  | ( ( move ul , 4 ; move ua + 2 , 2 ; pen 4 ) ; pen 4 )  
[7454] ( move ua , 3 + ul ; pen ua ; move 2 , ua - 2 )  
[7455] ( move ua - 2 , ul ; pen 0 ; move ua , ua * 3 )  
[7456] ( move ul , 0 ; move ul - ua , 3 / ua ; pen 0 )  
[7457] ( move ua , ua ; move 3 * 2 , ua * ua ; pen 0 )  
[7458] ( move 2 - ua , 2 ; pen 0 ; move ua , ul / ua )  
[7459] ( move ul , ua ; move 4 , ul / 4 ; move ul , 4 )  
[7460] ( move 3 , ul + ul ; move 0 - ua , ul ; pen 3 )  
[7461] ( ( move ul , ul ; move ul , 4 ) ; move 3 , ul )  
[7462] ( move ul , 0 ; pen 3 - ua ; move 3 - ua , ul )  
[7463] ( ( move ul , ua ; move ul , ul ) ; move 4 , 4 )  | ( pen ul ; move 2 - ul , 0 ; ( move ul , ul ; move 4 , 4 ) )  
[7464] ( move ul , 2 ; pen 0 ; move 4 + ul , ua - ul )  
[7465] ( pen 3 ; move ua + ul , 2 ; move 2 - ua , ul )  
[7466] ( v0 = 4 + ul ; move 3 + v0 , 2 * v0 )  | ( v0 = 4 + ul ; move ua + ul , v0 + v0 )  | ( move 0 , ua - 2 ; ( pen ul ; move ua + ul , 4 * 3 ) )  
[7467] ( move 2 - ua , 3 ; pen ul ; move ua + ul , 2 )  
[7468] ( move ul , ul ; pen 0 ; move 4 + 2 , ua - ul )  
[7469] ( pen 3 ; move ua , ua * ua ; move 0 - ul , 3 )  
[7470] ( move ua , ul ; move 2 - ua , 2 ; pen 2 - ul )  | ( v0 = ua ; move v0 , ul ; move 2 - ua , 2 )  | ( v0 = 2 ; move ua , ul ; move v0 - ua , v0 )  
[7471] ( move 3 - ua , ul ; pen 0 ; move ul , 3 + ul )  
[7472] ( move 3 - ua , 2 ; pen ua ; move ua - 2 , ul )  
[7473] ( pen ua ; move 0 - ua , 4 ; move ul + ul , 3 )  
[7474] ( move ua - ul , 4 + ul ; move ua , 3 ; pen 0 )  
[7475] ( pen ua ; move 4 + ul , 3 ; move ua , ua + 2 )  
[7476] ( move ua , ua / 2 ; pen ul ; move ua + 2 , 2 )  
[7477] ( move 0 - 2 , 3 ; pen ul ; move ua - ul , ul )  
[7478] ( pen ul ; move 3 + 2 , ul ; move ua - 2 , ul )  
[7479] ( move 3 , ua ; pen 0 - ua ; move ul , ul / 2 )  
[7480] ( move ul + ul , ul / 3 ; move ua , 2 ; pen 0 )  | ( pen 3 ; move 2 , ul / 3 ; move ua , ul + ul )  
[7481] ( move ul + ul , ul ; pen 0 ; move ua , 4 * 2 )  
[7482] ( move 2 + ul , ua ; pen ul ; move 3 - ua , 3 )  
[7483] ( ( move ul , ul ; move 4 , ul ) ; move ul , 4 )  | ( move ul , ul ; ( pen ua ; move 4 , ul ) ; move ul , 4 )  | ( pen 4 - 3 ; ( move ul , ul ; move 4 , ul ) ; move ul , 4 )  
[7484] ( move 4 , 2 ; v0 = ul / 2 ; move 2 , v0 )  
[7485] ( pen ua ; move 3 , 0 ; move ua + ul , ua / 4 )  
[7486] ( pen 2 ; move 2 , 4 + ul ; move ua + ul , ul )  | ( move ul , 2 ; move 3 - ul , 3 ; move ua + ul , ul )  
[7487] ( move ua - ul , 0 ; pen ua ; move ul , 4 + 4 )  
[7488] ( move 3 , ua - 3 ; pen ul ; move ua + ul , 2 )  
[7489] ( move ul , 3 ; pen 4 ; move ua + ul , 0 - ul )  | ( move ul , 3 ; pen ul ; move ua + ul , ua - ul )  | ( ( move ul , 3 ; move ul , 3 - 4 ) ; move ua , 0 )  
[7490] ( pen 4 ; move ua , 0 ; move ul - ua , 4 + ul )  
[7491] ( pen ua + ul ; move ua , 0 ; move ua , 4 / 3 )  
[7492] ( move 3 , 2 ; pen ul + ul ; move ua - 2 , ul )  
[7493] ( move 2 + ul , ua ; move 4 - ua , 2 ; pen ul )  
[7494] ( move 0 , 4 ; pen ul - ua ; move 4 , ua + ul )  
[7495] ( move ua - 3 , 4 ; pen 0 ; move ul - ua , ul )  
[7496] ( pen 3 ; move ua - ul , 4 ; move 0 - ua , ul )  
[7497] ( move ul , ul ; move 3 + 2 , ua - ul ; pen 2 )  
[7498] ( move ua / 2 , ul ; pen ul ; move ul , 0 - 2 )  
[7499] ( v0 = 4 + 4 ; move ua , 2 ; move 4 , v0 )  
[7500] ( v0 = 3 * 2 ; move 3 , v0 ; move 4 , ul )  | ( ( move 3 , 3 * 2 ; v0 = 0 ) ; move 4 , ul + v0 )  
[7501] ( move 4 , 4 + ul ; pen ul ; move ua , 0 - ul )  
[7502] ( pen ul ; move 2 , 2 + ul ; move 4 , ua * ua )  
[7503] ( move 2 + ul , ua ; pen ul ; move 3 , 4 + ul )  | ( move 3 , 0 ; ( move 0 , 4 - ua ; move 3 , ul ) )  
[7504] ( move ua - 2 , ua * 4 ; move ua , 2 ; pen ul )  | ( move ua - 2 , ua ; ( v0 = ua ; move ua , 2 + v0 ) )  
[7505] ( pen 3 + ul ; move ua - ul , 2 ; move 3 , ul )  | ( move ua - ul , 2 ; move 3 , ul ; v0 = ul / ua )  | ( move ua - ul , ua + 2 ; v0 = ul ; move 3 , v0 )  
[7506] ( move ua - ul , 4 + ul ; pen 0 ; move 4 , ul )  
[7507] ( move 3 - ul , 4 + 2 ; move ua - 3 , 3 + 2 )  
[7508] ( move ua + ul , 4 ; pen 2 ; move ua - 3 , ul )  
[7509] ( move 2 , 3 + ul ; pen ul ; move 3 - ua , ul )  
[7510] ( pen ua ; move ul - ua , 4 ; move 4 , ua + 2 )  
[7511] ( pen ua ; move 2 - ua , ua / 4 ; move ua , 2 )  
[7512] ( v0 = 3 ; move v0 , 4 + 3 ; move 4 , ul )  
[7513] ( move 2 , ul - 3 ; move ul + ul , 2 ; pen ul )  
[7514] ( move ua , ua + 3 ; move ua - ul , 4 ; pen 3 )  
[7515] ( pen ua ; move 0 - ua , ul ; move 4 , ul / 2 )  
[7516] ( move ua + ul , 4 * 2 ; move ul , 2 ; pen ul )  
[7517] ( move ua , ul / 4 ; pen 0 ; move ul , 2 - ul )  
[7518] ( move ul , 0 ; pen ua ; move 4 * 2 , ul / ua )  | ( move ul , ua ; pen ul ; move 4 + 4 , ul / ua )  
[7519] ( move ul , ua + 4 ; pen 3 ; move ua , ua - 4 )  | ( ( move 0 - ua , 0 ; move ul , ul ; move ul , 4 ) ; pen ua )  
[7520] ( move 2 , ua ; move 3 , ua / 3 ; pen ul + ul )  | ( v0 = ua / 3 ; move 2 , 0 - ua ; move 3 , v0 )  
[7521] ( move 2 - ua , ul / ua ; move 2 , 4 ; pen ua )  
[7522] ( pen ua ; move ua + ul , 4 ; move 4 , 3 + ul )  | ( ( move ua + ul , 4 ; move 0 , ul ) ; move 4 , 3 )  
[7523] ( pen ul ; move 3 , 2 - ua ; move ua - 4 , ul )  
[7524] ( pen ul ; move 4 + 3 , ua ; move ua , 3 - ul )  
[7525] ( pen ul ; move 2 / ua , 4 ; move ua , ua - 2 )  
[7526] ( pen ul ; move 4 , ua - 3 ; move ua , ul - 2 )  
[7527] ( pen ua ; move 3 + 3 , ul - 4 ; move ua , ul )  
[7528] ( pen ul ; move ua , 0 ; move ua / 4 , ul - 3 )  
[7529] ( pen ul ; move ua + ul , ul ; move 4 , 4 + 2 )  
[7530] ( move ua , ua ; pen 4 ; move 4 + 3 , ua * ua )  | ( move ua , ua ; pen 4 + 3 ; move 4 + 3 , ua * ua )  
[7531] ( move ul , 4 + ul ; pen ua + ul ; move 3 , 3 )  
[7532] ( move 3 , ul ; pen ua - ul ; move ua - 2 , 4 )  | ( move 3 , ul ; ( pen 2 ; move 4 , 4 ) ; move ul / 3 , 0 )  
[7533] ( move ul - ua , 3 / ua ; pen 0 ; move ul , 4 )  
[7534] ( v0 = 4 + 4 ; move v0 , 4 ; move 3 , ul )  | ( move 4 + 4 , 4 ; ( move 3 , ul ; v0 = ul ) )  
[7535] ( pen ul ; move ua - 4 , 2 ; move ul - ua , 3 )  
[7536] ( pen 2 ; move ua , ua ; move 4 + ul , ul - 4 )  | ( move 3 + 2 , ul / ua ; move ua , 4 - ul ; pen ua )  
[7537] ( move 2 - 3 , ua + 4 ; move 3 * 3 , 2 + ul )  | ( move ul , 3 ; move 4 , 3 + ul ; move 4 + 2 , ua )  | ( move ul , 3 ; move ua + 2 , ua + 4 ; move ul + ul , 0 )  
[7538] ( pen ua + ua ; move 2 , ua ; move 3 , ul / 4 )  | ( ( move ul + ul , ua ; move 3 , ul / 4 ) ; move 0 , 3 )  
[7539] ( move 4 - ua , ul ; move 4 , ul ; pen 2 + ul )  
[7540] ( move ul , 4 / ua ; move ua , 2 ; pen ua + 4 )  
[7541] ( move 4 , ul ; move 3 - ua , ul - 3 ; pen ua )  
[7542] ( pen ul ; move 3 , 4 + ul ; move 4 , ua + ul )  
[7543] ( move 2 , 4 / ua ; move 2 + ul , ul ; pen ul )  
[7544] ( move ul - ua , 4 ; pen 3 ; move 3 + ul , ul )  
[7545] ( pen ul ; move 4 , ua + ul ; move 2 , ul / 2 )  | ( move ua - 2 , ul - ua ; pen ua ; move ul + ul , ul / 2 )  
[7546] ( move 4 , 4 ; move ul + ul , ua - 3 ; pen ua )  
[7547] ( move 2 , ul ; pen ul ; move ua - ul , 4 * 2 )  
[7548] ( move ul - ua , 3 ; move ul - 2 , 4 ; pen ul )  | ( ( pen ul ; move 3 / 4 , ul ) ; move 4 + ul , 2 )  
[7549] ( move ul + ul , 4 ; move ua - ul , 4 ; pen 2 )  | ( move ul + ul , 4 ; move ua - ul , 4 ; pen 4 + ul )  | ( move 2 , 4 ; ( pen ul ; move 0 , 4 ) ; move ua - ul , ua )  
[7550] ( move 4 / ua , 4 ; move ua + ul , 2 ; pen ua )  | ( pen ua + ul ; move 4 / ua , 4 ; move ua + ul , 2 )  
[7551] ( move 4 + 2 , ul / 2 ; pen ua ; move ul , ul )  
[7552] ( move ua , 2 ; pen 3 - ua ; move 4 / ua , ul )  
[7553] ( move ua , 4 + ul ; pen ua ; move 3 , ul / 2 )  
[7554] ( move 4 + ul , ul ; move 2 , ua - ul ; pen 4 )  
[7555] ( move 2 , ua + ul ; move 4 , ul / ua ; pen 3 )  | ( move 2 , ul ; move 3 + ul , ul / ua ; pen ul )  | ( ( move 2 , ul - ua ; pen 0 ) ; pen ua ; move 4 , ul / ua )  
[7556] ( pen 2 - ul ; move ul - 4 , ua ; move ua , 4 )  | ( pen ua + ul ; move ul - 4 , ua ; move ua , 4 )  
[7557] ( move ul - ua , ul ; move 2 , 4 + ul ; pen 4 )  
[7558] ( move ul - 4 , ul - 2 ; move 4 + 2 , 4 + 2 )  
[7559] ( pen ul ; move 4 / ua , 0 ; move 4 + ul , ul )  | ( move 4 / ua , ua ; move ul , ul ; move 4 , ua )  
[7560] ( pen 4 ; move 3 , 2 / ua ; move ul , ua * ua )  
[7561] ( move ua , ul / 2 ; move 3 , ul - 3 ; pen ul )  
[7562] ( move ua , ul / 2 ; move ul / 2 , ul ; pen 2 )  | ( move ua , ul / 2 ; v0 = ua * ua ; move ul , 3 / ua )  
[7563] ( move 3 , 4 / ua ; move 3 , ua - ul ; pen ua )  
[7564] ( pen ul ; move 4 , 4 / ua ; move ua , 2 - ua )  
[7565] ( pen ul ; move ua - 3 , 4 ; move 4 + ul , ul )  
[7566] ( move ua , ua / 2 ; pen 3 ; move ul - 4 , ul )  | ( ( move 0 - ua , ua ; move 2 , ul ) ; move ul , ua )  
[7567] ( move 4 , 3 + 2 ; move ul , ul / ua ; pen ul )  
[7568] ( move ul , 3 ; pen ul / 4 ; move ua + ul , 2 )  
[7569] ( pen ua ; move ua , 3 ; move 4 - ua , ul / 3 )  
[7570] ( move 3 , 4 / ua ; move ua + ul , 4 ; pen ua )  
[7571] ( move ul , ul ; pen ul / ua ; move 4 + 3 , 2 )  
[7572] ( move 4 - ua , 4 ; pen ua * 3 ; move ua , ul )  | ( move 4 - ua , 4 ; move ua , ua + ul ; v0 = ua )  | ( move 4 - ua , ua + 4 ; ( move ua , ul ; move ul , 4 ) )  
[7573] ( move ul , ul / 3 ; move ua - 2 , ul ; pen 3 )  
[7574] ( move ul , 4 ; move ua , ua / 4 ; pen ua + 3 )  
[7575] ( pen 4 ; move ua , ul / 4 ; move ua + ul , 2 )  
[7576] ( move 2 / 4 , ul ; move ua + 3 , ul ; pen ul )  
[7577] ( ( move ul , ul ; pen 0 ) ; move ua , 4 + ul )  
[7578] ( pen 3 ; move ul , 4 * 3 ; move ua + ul , ul )  
[7579] ( pen ul ; move ua , ua + ua ; move 4 , 4 * 4 )  
[7580] ( move ua - 3 , 3 ; pen ul ; move ua , ua / 4 )  
[7581] ( move ul , ul ; move ua + 3 , 4 / 3 ; pen ul )  
[7582] ( move 2 / 3 , ul ; move 4 , ua - ul ; pen ul )  
[7583] ( move ua / 2 , ul ; pen ul / 2 ; move 3 , ul )  
[7584] ( ( move ul - ua , ul ; pen 0 ) ; move 4 , ul )  
[7585] ( move ul , ul - ua ; ( pen 0 ; move 4 , ul ) )  
[7586] ( move ul / 4 , ua ; pen 2 ; move ul - ua , 4 )  | ( move ua - ul , ua + 4 ; move 2 / ua , 4 + ul )  
[7587] ( move 3 , ul / ua ; move 3 - ul , ul ; pen 3 )  | ( move ul , ul / ua ; move 2 , ua ; move 2 , ul )  
[7588] ( v0 = 3 / 4 ; move ul , 4 ; move 4 , v0 )  
[7589] ( move ua , 3 / ua ; pen ua ; move 4 , 3 / ua )  
[7590] ( move ua , 4 ; pen ul ; move ul + ul , 4 * 4 )  | ( ( move ua , ua + 4 ; move 2 , 4 * 4 ) ; move ul , 0 )  
[7591] ( move ua , 4 + 4 ; move ua / 4 , ul ; pen ul )  
[7592] ( move 4 , ul / 3 ; pen ua ; move ua - 4 , ul )  
[7593] ( move 3 , ua ; ( pen ua ; move ua , 3 / ua ) )  | ( move 3 , 0 ; ( pen ua ; pen ua ; move ua , 3 / ua ) )  
[7594] ( pen 4 ; move ua , 3 ; move ul - ua , ul / 4 )  
[7595] ( move 4 + ul , ua / 3 ; move ul , ul ; pen 4 )  
[7596] ( pen ul ; move 3 , ua / 4 ; move 4 + ul , ul )  
[7597] ( ( move ul , ua ; pen ul / 4 ) ; move ua , 0 )  
[7598] ( move ul , ua ; pen ul / 3 ; move 4 + 4 , ul )  
[7599] ( move ua , 0 ; move ul - ua , 2 ; move ua , ua )  
[7600] ( move ul - ua , 0 ; move ul , 0 ; move ul , ul )  
[7601] ( move ua , ua + ua ; move 2 , ul ; move ua , 2 )  
[7602] ( move ua , 4 - ul ; pen ul ; move 4 , ua / 4 )  
[7603] ( pen ul ; ( move ul , 3 ; move ul - ua , 4 ) )  | ( move ul , 4 - ul ; move ul - ua , 4 ; pen ul )  
[7604] ( move ul / 3 , ul ; pen ul / 4 ; move ua , 3 )  
[7605] ( move ul , 2 ; move ua , ua * ua ; move ul , 0 )  
[7606] ( move ua , ua ; move ul , ul ; move 0 - 2 , ul )  
[7607] ( move ua , ua ; move ul , ua + 3 ; move ua , 2 )  
[7608] ( move ul + ul , 0 ; move ua , ul ; move ul , 2 )  
[7609] ( move ua , 0 ; move ul , ul ; move 2 , ul - ua )  | ( move ua , 0 ; ( move ul , ul ; move ul + ul , ul ) )  | ( move ua , ua ; move ul , 2 - ul ; move 3 - ul , ua + ul )  | ( move ua , ua ; ( move ul , ul ; move ul , ul ; move ul , ua ) )  
[7610] ( move ul - ua , ua ; move ul , 0 ; move 2 , ul )  | ( move ul - ua , ua ; move ul , ua ; move 2 , ul )  
[7611] ( move ul , 0 ; move ua , ua + ul ; move ua , 4 )  | ( move 4 - 3 , ua ; ( move ua , ul ; move ua , 4 ) )  | ( move ul , 0 ; ( move ua , ua + ul ; move ua , 3 + ul ) )  | ( move ul , ua ; ( move ua , ul ; move ua , 4 ; v0 = ul ) )  
[7612] ( move ua / 4 , ul ; move ul - 4 , ul ; pen 4 )  
[7613] ( move ua , 0 - ul ; move ul , ul ; move ua , 2 )  | ( move ua , ul - 2 ; move ul , ul ; move ua , 2 )  
[7614] ( move 4 , ul ; pen ul - 4 ; move ul , ul / 3 )  
[7615] ( move ua , 0 ; move ul , 3 ; move ul , ua * ua )  
[7616] ( move ua , ua ; move 4 , ua + 2 ; move ua , ul )  | ( ( move ua , ua ; move 3 + ul , 2 ) ; move ua , ul )  
[7617] ( move ua , ua ; move ul , 3 ; move ua + ul , 2 )  
[7618] ( move ul , 0 ; move ua , ul ; move 3 + ul , ul )  
[7619] ( move ua , 0 ; move ul , ul ; move ua - ul , 3 )  
[7620] ( move ul , ua ; move 0 , 4 ; move ua , ua * ua )  
[7621] ( move ua , 2 ; move ua , ul + ul ; move 3 , ua )  
[7622] ( move ua , 2 + ul ; move ul , 3 ; move ua , ul )  
[7623] ( move 2 , ua - ul ; move ua , ul ; move ua , 3 )  
[7624] ( move 2 , 3 ; move ua , ua ; move ul - ua , ul )  
[7625] ( move ul , ua ; move ul , ua + ul ; move 3 , 2 )  
[7626] ( move ua - 2 , ua ; move 2 , ul ; move ul , ul )  
[7627] ( move ua , ul ; move ua , 2 ; move ua , 3 - ul )  
[7628] ( move ua , 2 ; move ua , 3 ; move ul - ua , ul )  
[7629] ( move ua , ul ; move ul - 2 , ul ; move 2 , ua )  
[7630] ( move ua , ul - ua ; move 3 , 2 ; move ua , ul )  | ( move ua , ua + ul ; move 3 , 2 ; move ua , ul - ua )  
[7631] ( move ul , ul / ua ; move ua , 0 ; move ua , 3 )  | ( move ua , ua ; move 0 , ua - 4 ; move ua + ul , ul )  
[7632] ( move 2 + ul , ul ; move ua , 2 ; move ul , ul )  
[7633] ( move ul , ua ; move ua - ul , 2 ; move 2 , ul )  
[7634] ( move ua + 3 , ul ; move ul , ul ; move ua , 2 )  
[7635] ( move 2 , ul ; move ul , ul ; move ua , 2 + ul )  
[7636] ( move 2 , ul + ul ; move ua , ul ; move ua , 3 )  
[7637] ( move ul , ua ; move 0 , 4 ; move ul - ua , ul )  | ( move ul , ua ; move ul - ua , 4 + ul ; v0 = ul )  | ( pen ul + ul ; move ul , 0 - ua ; move ul - ua , 4 + ul )  
[7638] ( move ul , ul - ua ; move ul , 2 ; move ua , 2 )  | ( move ua / 4 , ul ; ( move ul , 2 ; move ua , ul + ul ) )  
[7639] ( move ul , ua ; move ul , 3 / ua ; move ua , 0 )  
[7640] ( move ua - ul , ul ; move ua , 4 ; move ul , 0 )  
[7641] ( move ua , ul ; move 2 , 2 ; move ul , ua - ul )  
[7642] ( move ua + ul , 3 ; move ul , ul ; move ua , 2 )  | ( ( move ua + ul , 3 ; move ul , ul ) ; move ua , 2 )  
[7643] ( move ul , ua ; move 4 , ua ; move ua - 2 , ul )  
[7644] ( move ua , ul ; move ua + ul , 4 ; move ua , 3 )  
[7645] ( move ul , 3 ; move ua , ua ; move ua , 4 + ul )  
[7646] ( move 3 , 2 ; move ul - ua , ul ; move ua , ul )  
[7647] ( move 4 , ul ; move ua , ua - 2 ; move ul , ua )  
[7648] ( move 3 , ua ; move ul - ua , ul ; move ul , 2 )  
[7649] ( move ul , 2 ; move ul , ul ; move ua + ul , 3 )  
[7650] ( move ua , ul ; move ul , 3 ; move ul , ua - 2 )  
[7651] ( move ua , ua ; move 4 , ul ; move ul + ul , 2 )  
[7652] ( move ul , 0 ; move ul , ua * ua ; move 4 , ul )  
[7653] ( move ul , ua ; move ua + 4 , ul ; move ua , 3 )  
[7654] ( move ul , 2 ; move 3 , ua * ua ; move ua , ul )  
[7655] ( move ua , ul ; move ua , ua - 3 ; move 3 , ul )  
[7656] ( move ua , ul ; move ul , 4 ; move 2 , ua + ul )  
[7657] ( move ul , 0 ; move 2 , ul ; move ul , ul / ua )  
[7658] ( move ua , ul ; move 4 , 2 ; move ul , ua + ul )  
[7659] ( move ul / ua , ua ; move ul , 0 ; move 3 , ul )  
[7660] ( move 3 , 2 ; move ul , ul ; move ul , ua + ul )  | ( move 3 , 2 - ua ; move ul , ul ; move ul , ul )  
[7661] ( move ua , ua + ul ; move 4 , ul ; move ua , 3 )  
[7662] ( move 3 , 3 ; move ua , ua + ul ; move ul , ul )  
[7663] ( move ua , ul ; move 2 , ua ; move 2 , ul / ua )  | ( ( move ua + 3 , ul ; pen ua * 2 ) ; move ul , ul / 3 )  | ( move ua + 3 , ul ; ( pen 4 ; pen ul ) ; move ul , ul / 3 )  
[7664] ( move ua , ul ; move 0 , ul ; move ua , ua / 4 )  
[7665] ( move ul , ua * ua ; move 3 , 2 ; move ua , ul )  
[7666] ( move ul - 3 , ua ; move ua , ul ; move ua , 3 )  | ( ( move 3 - ua , ua ; move ua , ul ) ; move ua , 3 )  
[7667] ( move ul + ul , 0 ; move ul , 4 ; move ul , ul )  | ( move 2 , ua + ua ; move ul , 4 ; move ul , ul )  | ( ( move 2 , ua ; move ul , 3 + ul ) ; move ul , ul )  
[7668] ( move ul - ua , 3 ; move ul , ua ; move ul , 2 )  
[7669] ( move ul - 2 , ul ; move 2 , ul ; move ua , ul )  
[7670] ( move 2 , ul ; move 2 , ul + ul ; move ul , ul )  
[7671] ( move ul - 4 , 0 ; move ul , ul ; move ua , ul )  
[7672] ( move ul , 2 ; move 2 + ul , ul ; move ul , ul )  
[7673] ( move ul , ul ; move ul , ul ; move ua , 3 + 2 )  
[7674] ( move ua , ua ; move ua , 3 ; move 4 , ua * ua )  
[7675] ( move 3 + ul , ua ; move ul , ul ; move 2 , ul )  | ( pen ul ; ( move 4 , 0 ; move ul , ul ) ; move 2 , ul )  
[7676] ( move 2 , ul ; move ua , ul - ua ; move 3 , ul )  
[7677] ( move 2 , ul ; move ua , 2 - ul ; move ul , ul )  | ( move 2 , ul ; move ua , ul ; ( pen 3 + ul ; move ul , ul ) )  
[7678] ( move 3 , ul ; move ul , ul ; move ua , ua + 3 )  | ( move 3 , ul ; move 0 - ul , 3 + ul ; move ua , 0 )  
[7679] ( move 2 , ul ; move ua , 3 ; move ul , ua * ua )  
[7680] ( move ua , 4 + 2 ; move ul , ul ; move ua , ul )  
[7681] ( move ua , ul ; move ul , ul ; move ua , 4 + 3 )  
[7682] ( move ua , ua ; move 2 , ul ; move ul - 4 , ul )  
[7683] ( move 2 , ul ; move ul , ul ; move 3 + ul , ul )  | ( move 2 , ua + ul ; move ul , ul ; move 4 , ul )  
[7684] ( move 4 , ua - ul ; move ul , ua ; move 2 , ul )  
[7685] ( move ul , 2 ; move ua , ul ; move 4 - ua , ul )  
[7686] ( move ul , ua ; move 0 , ul ; move ua , ul / 4 )  
[7687] ( move ul , ul ; move ua , ua * ua ; move 4 , 2 )  
[7688] ( move ua + ul , 4 ; move ul , 3 ; move ua , ul )  
[7689] ( move 3 , ul - 2 ; move ua , ul ; move ul , ul )  
[7690] ( move 3 / ua , ul ; move ua , ua ; move ul , 2 )  
[7691] ( move 4 , ua ; move ul , ul + ul ; move 2 , ul )  
[7692] ( move ul , 4 + ul ; move ua , ul ; move 2 , ul )  
[7693] ( move ul , ul ; move ul , 2 - ul ; move 2 , ul )  
[7694] ( move ua - 3 , ua ; move ua , ul ; move 4 , ul )  
[7695] ( move ua , ua * ua ; move ua , 4 ; move 3 , ul )  
[7696] ( move 4 , ua + ul ; move ul , ul ; move ua , 3 )  
[7697] ( move 3 , ua ; move 3 / ua , ua ; move ua , ul )  
[7698] ( move 3 , ul ; move ua - 3 , ul ; move ua , ul )  
[7699] ( move ua , ul ; move ua , 3 ; move ul - 3 , ul )  
[7700] ( move 2 , ul ; move ul , ul ; move 3 , ul + ul )  
[7701] ( move 2 , ul ; move ul , ul ; move ul , 3 + ul )  | ( move 0 , ul ; ( move 2 , ua ; move ul , ul ; move ul , 4 ) )  
[7702] ( move ul , ua - 4 ; move ul , ul ; move ua , 2 )  
[7703] ( move ul - 2 , ul ; move ul , ul ; move 2 , ul )  
[7704] ( move ua , ua ; move 4 , ul ; move 2 - ul , ul )  | ( move ua , ua ; ( move 4 , ul ; move ul , ul ) )  | ( move ua , ua ; move 4 , ul ; move ul , ul - ua )  
[7705] ( move ua , ul ; move 2 , ul ; move 4 , ul + ul )  
[7706] ( move 3 - ul , 2 ; move ul , ul ; move ua , ul )  
[7707] ( move ul , ua / 3 ; move ua , ul ; move 2 , ua )  
[7708] ( move ua + ul , ua ; move ul , 3 ; move 4 , ul )  
[7709] ( move ul - ua , ul ; move 3 , ul ; move ul , 2 )  
[7710] ( move 3 , 3 ; move ua , ul ; move ul + ul , ul )  
[7711] ( move ua , ul ; move ua + ul , 4 ; move ua , 4 )  
[7712] ( move ua , ua ; move 2 , ua / 3 ; move ul , ul )  
[7713] ( move ul , ul ; move 3 + 2 , ul ; move ul , ul )  
[7714] ( move ul , ul ; move ua , ul ; move 2 + ul , 4 )  
[7715] ( move 2 , ua ; move ul , ul ; move ul - 3 , ul )  
[7716] ( move ua , 2 / ua ; move ul , ul ; move ul , 2 )  
[7717] ( move ul , 0 ; move ul / ua , 4 ; move ua , ul )  
[7718] ( move ua , ul ; move ul , 4 ; move 3 - ua , ua )  
[7719] ( move ul , ul ; move ul / ua , 2 ; move ua , 2 )  
[7720] ( move ul , 2 ; move 3 , ul ; move ul - ua , ul )  
[7721] ( move ul - 4 , ua ; move 3 , ul ; move ua , ul )  
[7722] ( move ua , ul ; move 3 , ul - 3 ; move ul , ul )  
[7723] ( move ul , ul ; move 4 , ul ; move ua , ua + 4 )  
[7724] ( move ul , 0 ; move 4 , ul ; move ul , ul / ua )  
[7725] ( move ua + ul , 3 ; move ul , 4 ; move ul , ul )  
[7726] ( move ul , ul ; move 3 , 4 ; move ul , ua + ul )  | ( move ul , ul ; ( v0 = 2 ; move 3 , 4 ) ; move ul , ul )  
[7727] ( move ul , ul ; move ua , 2 ; move ul - 4 , ul )  
[7728] ( move 4 , ua ; move ua , ul ; move ua - 4 , ul )  
[7729] ( move ua , 4 ; move ul , ul + ul ; move ua , 4 )  
[7730] ( move 3 , ul ; move 4 , ua * ua ; move ul , ua )  
[7731] ( move ul , ul ; move ua , ua ; move 2 , ua / 4 )  
[7732] ( move 3 , 0 ; pen 0 ; ( move 4 , ua ; pen 0 ) )  | ( ( move 3 , 0 ; pen 0 ; move 4 , ua ) ; pen ul )  | ( ( move 3 , 0 ; pen 3 ; pen 0 ) ; move 3 + ul , ua )  
[7733] ( move ul , ul ; move 4 , 2 ; move ul + ul , ul )  
[7734] ( move ul , ul ; move ul , 2 - 4 ; move ua , ul )  
[7735] ( move 4 , ua ; move ua , ul ; move 4 - ua , ul )  
[7736] ( move ul , ul ; move ua , ul - 2 ; move 4 , ul )  
[7737] ( move ua , ul ; move ua - 4 , ul ; move 3 , ul )  
[7738] ( move ua - 3 , ua ; move ul , ul ; move ul , 4 )  
[7739] ( move 4 , ul ; move ua , 3 ; move ul , ua - ul )  
[7740] ( move 4 , ul ; move ul , ua + ul ; move ua , 4 )  
[7741] ( move 4 + ul , ul ; move ul , 2 ; move ul , ul )  | ( move 4 + ul , ul - ua ; ( move ul , 2 ; move ul , ul ) )  
[7742] ( move ua , ul ; move 3 , 4 ; move ul - ua , ul )  
[7743] ( move ul , ua / 3 ; move ua , 3 ; move ua , ul )  
[7744] ( move ul / 3 , 2 ; move ua , ua ; move ul , ul )  
[7745] ( move ul , 0 ; move ul , ul ; move 4 , ul / ua )  
[7746] ( move ul , 3 + ul ; move ul , ul ; move 3 , ul )  
[7747] ( move ul - 4 , 2 ; move ul , ua ; move ul , ul )  
[7748] ( move ul / 3 , 2 ; move ul , ul ; move ua , ul )  
[7749] ( move ul , 3 ; move ua , ul / ua ; move ua , 4 )  
[7750] ( move ul , 3 ; move 4 , ul ; move ul + ul , ul )  
[7751] ( move 4 , ua * ua ; move ul , 4 ; move ua , ul )  
[7752] ( move 4 , ul ; move ua , ua / 3 ; move ul , ua )  
[7753] ( move 0 - ua , 3 ; v0 = ua ; move v0 , 2 )  
[7754] ( move 3 , ul ; move ul , ul / ua ; move ua , 3 )  
[7755] ( move ul , ua ; move ul , ul ; move 4 * 2 , ul )  
[7756] ( move ul , ul ; move ul , ua * ua ; move 3 , 4 )  
[7757] ( move ul , 2 ; move ul / 3 , ul ; move ua , ul )  
[7758] ( move 4 , ul ; move ul , ul ; move ua + ul , 4 )  
[7759] ( move 4 , ul ; move ul , ul ; move ul - 2 , ul )  
[7760] ( move ul , 3 ; move ua / 3 , ul ; move ua , ul )  
[7761] ( move ul , ul ; move ul , 4 ; move 4 , ua + ul )  
[7762] ( move ua , ul ; move ul , ul - ua ; move 4 , 4 )  
[7763] ( move 2 , ul ; ( move ua , ul ; move ua , ul ) )  | ( move ul + ul , ul ; move ua , ul ; move ua , ul - ua )  
[7764] ( move ul / 2 , ul ; move ul , ul ; move 3 , ul )  
[7765] ( move 3 , ul ; move ul , ul ; move ul , 3 / ua )  
[7766] ( move 4 , ua * ua ; move ul , 4 ; move ul , ul )  
[7767] ( move 4 , ul ; move ul , 2 / ua ; move ul , ul )  
[7768] ( move ul + ul , 4 ; move ul , ul ; move 4 , ul )  
[7769] ( move ul , 4 ; move ul - ua , ul ; move ul , 4 )  
[7770] ( move ul , ul ; move 2 , ua / 4 ; move ul , ul )  
[7771] ( move ul - ua , ul ; move ul , 4 ; move ul , 4 )  
[7772] ( move ul , ul / ua ; move ul , 4 ; move 2 , ul )  
[7773] ( move ul , ua ; move ua , ul ; move ul , 4 / 3 )  
[7774] ( move ul , 4 ; move 4 , ul ; move ul , ua * ua )  
[7775] ( move ul , ua - ul ; move 4 , 4 ; move ul , ul )  
[7776] ( move ul / 4 , ul ; move ua , ua ; move 3 , ul )  
[7777] ( move ul , ul ; move ul , 4 ; move ua , 4 / ua )  
[7778] ( ( pen ua ; move 3 , 0 ; pen 0 ) ; move 4 , 3 )  
[7779] ( move ul , 4 ; move ua - ul , ul ; v0 = ul )  | ( ( move ul , 4 ; move ua - ul , ul ) ; v0 = ul )  | ( ( move ul , 2 + 2 ; move ua - 2 , ul ) ; move ul , 0 )  | ( move 4 - 3 , ul ; move ul , 3 ; move ua - ul , ua + ul )  
[7780] ( move ua , ul ; ( move ul , 3 ; move ua , ul ) )  
[7781] ( move ul , ul ; move 4 - ul , ul ; move 4 , ul )  
[7782] ( move ua , 0 ; pen 2 ; move ul - ua , ua * ua )  
[7783] ( move 2 , ua * ua ; move ua , ul + ul ; pen 0 )  | ( move ul + ul , ua * ua ; ( move ua , 2 ; move ul , 4 ) )  
[7784] ( move 3 , 0 - ul ; v0 = 4 ; move ua , v0 )  | ( v0 = 3 ; move v0 , ua - ul ; move ua , 4 )  | ( ( move 3 , ua - ul ; v0 = ua + 4 ) ; move ua , v0 )  
[7785] ( move ua / 4 , ul ; move ul , ul ; move 4 , ul )  
[7786] ( move ua , 0 ; v0 = ua - 4 ; move v0 , 4 )  
[7787] ( pen 2 ; move ua , ua ; move ua + 2 , ua * ua )  | ( move ua , 0 ; ( pen ul ; move ua + 2 , ua * ua ) )  
[7788] ( move ul , ul ; move 4 , ul / 3 ; move ul , ul )  
[7789] ( v0 = ua ; move ua , 3 / v0 ; move 2 , 2 )  
[7790] ( move ul , ul ; move ul , ul / 4 ; move 4 , ul )  
[7791] ( ( move ua , 4 ; move ul , ul ) ; move ul , ul )  
[7792] ( move 3 + 2 , ul - 4 ; move 0 - ua , 2 - ua )  
[7793] ( pen ua ; move 3 - ua , 0 - ul ; move ua , ul )  
[7794] ( pen ul ; move 3 , 2 ; ( pen 0 ; move 4 , 2 ) )  
[7795] ( move ul - ua , 2 ; v0 = 3 ; move v0 , 3 )  
[7796] ( move ua + 3 , ua + ul ; move ua , 2 ; pen ul )  | ( move ua + 3 , ul ; move ua , 3 - ul ; pen ul )  | ( pen 3 + ul ; move ua + 3 , ul ; move ua , 3 - ul )  | ( v0 = ul ; move ua + 3 , v0 * v0 ; move ua , 2 )  | ( ( pen 2 ; move ua + 3 , ul ) ; move ua , 2 ; move 0 , 3 )  
[7797] ( move ul , ua * ua ; pen 0 ; move 3 , ua + ul )  | ( move ul , ua * ua ; pen 0 ; ( move 3 , ul ; pen ua + ul ) )  
[7798] ( move ul + ul , 4 + 3 ; move 0 - 3 , ua + 2 )  
[7799] ( move 3 + ul , ua * ua ; pen 0 ; move ua , ul )  
[7800] ( move ua + ul , 3 ; move ua , ua - 2 ; pen ua )  
[7801] ( ( move ul , ul ; move ul , 4 ) ; move ua , ul )  
[7802] ( v0 = ua - 3 ; move v0 , 3 ; move 3 , ul )  | ( ( v0 = 3 ; move ua - v0 , v0 ) ; move v0 , ul )  
[7803] ( move ua + ul , ua ; pen 0 ; move 4 - ul , ul )  
[7804] ( pen ul ; move ua + 3 , ul ; move 0 - ul , ul )  
[7805] ( move ul , 4 + ul ; pen ul - ua ; move ua , 0 )  
[7806] ( move 3 , ul ; v0 = 4 ; move v0 + ul , 2 )  | ( move 3 , ul ; ( move 4 + ul , ul + ul ; pen ul ) )  
[7807] ( move 4 - ul , ua ; pen 0 ; move ua , ul + ul )  | ( ( move ul , ua ; move 2 , ua ) ; pen 0 ; move ua , 2 )  
[7808] ( move 4 + ul , ul ; pen 0 ; move ua , ul + ul )  
[7809] ( move 0 - ua , 2 / 3 ; move 3 + ul , 2 + ul )  
[7810] ( move ua + ul , ua ; pen 3 ; move 2 , ua * ua )  
[7811] ( move 3 , ua / 3 ; v0 = 2 ; move ua , v0 )  
[7812] ( move 4 + 3 , 2 ; v0 = ul ; move ul , v0 )  | ( move ua + ul , 2 ; pen 4 + 2 ; move ul , 3 / 2 )  
[7813] ( pen 2 ; move ua , ul ; move ua - 2 , ul + ul )  
[7814] ( move ua , 0 ; pen 3 / ua ; move ua , ua * ua )  
[7815] ( move ua - ul , ul ; pen 0 ; move ua , 3 - ul )  
[7816] ( move ul , ua * 3 ; pen 0 ; move ul - ua , ul )  | ( move ul , ua * 2 ; ( pen 0 ; move ul - ua , ul ) )  
[7817] ( v0 = 2 ; move 4 - ua , ul ; move 4 , v0 )  
[7818] ( move 2 , ua * ua ; pen ul - ua ; move 2 , ul )  
[7819] ( move ua , 2 ; v0 = 3 / 4 ; move ua , v0 )  
[7820] ( move ua , ul / ua ; move ua - 3 , ul ; pen 0 )  
[7821] ( move ua - 2 , 2 ; pen ul ; move ua - ul , ul )  
[7822] ( move ul , 3 ; pen ul ; move ul - ua , 0 - ul )  
[7823] ( move ul , ul ; pen 0 - ul ; move ul - ua , 3 )  
[7824] ( move ua + 2 , ul ; pen ul ; move 3 , ua - ul )  
[7825] ( move ua + ul , ua ; move 2 , ul - 4 ; pen ua )  
[7826] ( move 3 , 2 ; v0 = ul ; move v0 - 4 , ul )  | ( pen ua ; ( move 2 , 2 ; move ul , ua ; move ul - 4 , ul ) )  
[7827] ( move ul , ua ; pen 0 ; move ul - ua , ua * 4 )  
[7828] ( move ua , 4 ; v0 = 4 + 4 ; move ua , v0 )  
[7829] ( move 0 , ua * ua ; move ua - ul , 4 ; pen ul )  | ( move 0 , 3 ; v0 = ul - ua ; move v0 , v0 * v0 )  
[7830] ( move 4 + 2 , 2 * 2 ; move ul - ua , 2 + ul )  | ( move ua , 4 ; move ul - ua , 3 ; move 2 + ul , 0 )  
[7831] ( move ua , 4 ; pen ul ; move 2 - ua , ua + ul )  
[7832] ( move 2 - ua , ua * ua ; move 2 , ul ; pen ul )  
[7833] ( move ua + ul , ua * ua ; pen ua ; move 2 , 4 )  
[7834] ( move ul - 4 , ua ; move ua , ua - 2 ; pen ua )  
[7835] ( move 4 - ua , ua ; v0 = 4 ; move 3 , v0 )  
[7836] ( move ul , 4 ; pen 2 - ua ; move ua + ul , ua )  
[7837] ( move ua , ul / ua ; pen ul ; move ua + 2 , 2 )  
[7838] ( move 2 * 2 , ua + ul ; move 2 + ul , 3 / 2 )  
[7839] ( move ul , ul ; pen ul - 2 ; move 2 - ua , ul )  
[7840] ( move ua , ul ; pen ul - ua ; move ul , 2 - 3 )  
[7841] ( move ul , 3 / 2 ; v0 = ul ; move 3 , v0 )  | ( move ul , 3 / 2 ; v0 = 3 ; move v0 , ul )  
[7842] ( move 4 , ul ; v0 = ua ; move 4 , v0 - 3 )  
[7843] ( pen ul ; move ua , ua - 2 ; move 4 - ua , ul )  
[7844] ( move 2 - ua , ua * ua ; pen ua ; move 4 , ul )  
[7845] ( move ul , ul ; move ua - ul , 4 + 2 ; pen ua )  
[7846] ( move ua - ul , 3 ; move ul - ua , ul ; pen 2 )  
[7847] ( move 4 + ul , ua * ua ; pen ua ; move 2 , ul )  
[7848] ( pen 2 ; move ul - ua , ua ; move ua - 4 , ul )  
[7849] ( move 3 , ua * ua ; pen ul - 2 ; move ua , ul )  
[7850] ( move 3 , 4 ; v0 = ul - 4 ; move ua , v0 )  
[7851] ( move 4 , ua * ua ; move ua + ul , 3 ; pen ua )  | ( move 4 , ua * ua ; move 3 / ua , 3 ; move ua , 0 )  | ( move 4 , ua * ua ; move 0 , 2 ; move ua + ul , ul )  
[7852] ( move ua + 4 , 4 - ua ; move 2 - 3 , ua + 3 )  
[7853] ( move ua + ul , 4 + 3 ; pen ul ; move ul , ul )  | ( move ua + ul , 4 + 3 ; v0 = 0 ; move ul , ul )  
[7854] ( move ul , 3 * 3 ; v0 = ul ; move 4 , v0 )  
[7855] ( move 0 - 4 , ul ; move ua , ul ; pen ul / ua )  
[7856] ( pen ul ; move ua , ul ; move 2 - ua , ul / 2 )  
[7857] ( v0 = ul - 2 ; move ua / v0 , v0 / 3 )  | ( v0 = ul ; v1 = ul - 4 ; move ua , v0 / v1 )  
[7858] ( v0 = 4 ; move ul , ul ; move 3 , 3 * v0 )  
[7859] ( pen ul ; move ul - ua , 3 ; move ul + ul , 3 )  | ( pen 4 + ul ; move ul - ua , 3 ; ( move 2 , 3 ; pen ua ) )  
[7860] ( move 4 + ul , 2 ; move ul - ua , ul ; pen ul )  | ( move 4 + ul , ul + ul ; pen ul + ul ; move ul - ua , ul )  
[7861] ( move ua - 2 , ul / 2 ; pen ul ; move ua , ul )  
[7862] ( move 2 + ul , 4 + ul ; move 0 - ul , 2 / 4 )  
[7863] ( move ul , ul ; pen ul / 3 ; move ua , 0 - ul )  
[7864] ( move 3 - ul , ul - 3 ; move 4 - ul , 2 + 2 )  | ( move 3 - ul , ul - 3 ; ( move 3 , 4 ; pen ul ) )  
[7865] ( pen ua ; move ua / 4 , ul ; move ul - ua , 2 )  
[7866] ( move 2 , ul ; move ua + ul , ua / 4 ; pen ul )  
[7867] ( v0 = 4 ; move 4 , ul ; move ua , v0 / 3 )  
[7868] ( move ua , ul + ul ; pen 4 ; move ul , ua - 4 )  | ( move ua , 2 ; move ul , ua - 4 ; v0 = 3 * 2 )  
[7869] ( move ua , ul ; pen ul - ua ; move 4 , 4 + ul )  
[7870] ( move ua , ua * ua ; pen 4 ; move 4 , ul + ul )  
[7871] ( move 4 + ul , ul ; pen ua ; move 2 , ul / ua )  
[7872] ( move ul - 3 , ua * 4 ; move 0 - 2 , ua / 3 )  
[7873] ( move ul , 2 ; pen ua ; move ua + ul , ul / 4 )  
[7874] ( move 3 - ua , ua / 3 ; move ul , ua ; pen ul )  
[7875] ( move ul , 4 ; pen ul / ua ; move ua - 2 , ua )  
[7876] ( move 4 / ua , 4 ; v0 = 4 ; move ua , v0 )  | ( v0 = 4 ; move v0 / ua , v0 ; move ua , v0 )  
[7877] ( pen ua ; move ua - ul , ul ; move 4 , 4 + ul )  
[7878] ( move 4 + ul , 3 ; move ua - ul , ul ; pen ul )  | ( move ul , 3 - ua ; ( move 4 , 0 ; move ua - ul , ul ) )  
[7879] ( move 3 , ua * ua ; pen ul ; move ua , 3 / ua )  
[7880] ( move 3 , ul ; pen ul ; move ua - ul , 4 + ul )  
[7881] ( move 4 + ul , 4 ; move ua - ul , ul ; pen ua )  
[7882] ( v0 = 4 ; move 4 , ua / 4 ; move v0 , ul )  
[7883] ( move ua , ul + ul ; move 4 , ua / 4 ; pen ua )  
[7884] ( move ul , ua - 4 ; pen ul ; move 4 , ul + ul )  | ( move ul , ua - 4 ; ( move 3 , 2 ; move ul , 0 ) )  
[7885] ( pen ul ; move ua , ua / 4 ; move 3 + ul , ul )  
[7886] ( pen ua ; move ua + ul , ul / 3 ; move 4 , ul )  | ( move ua + ul , ul / 3 ; pen ul ; move 4 , ul )  
[7887] ( ( move 0 , ul ; pen ul / ua ) ; move ua , ua )  
[7888] ( move ua , ul - 2 ; move ul , ul / 3 ; pen ul )  | ( move ua , ul - 2 ; move ul , ul / 3 ; pen ua / 4 )  | ( move ua , ua - ul ; move ul , ul / 3 ; v0 = 4 + 3 )  
[7889] ( move 4 , ua * ua ; move ua , 3 / ua ; pen ul )  
[7890] ( move ua + ul , ul ; pen ul ; move ul , 4 * 3 )  
[7891] ( move 4 , ua - 3 ; move ul / ua , ul ; pen ul )  
[7892] ( move 4 , ul / ua ; pen ul ; move ua , 4 + ul )  
[7893] ( move ul - 4 , ul - 3 ; move 3 + 2 , 4 - ul )  
[7894] ( move ul - 4 , ua ; move ul , ul - 4 ; pen ul )  
[7895] ( move ul , ul ; pen ul / ua ; move 4 * 2 , ua )  
[7896] ( move ul , ul ; pen ul ; move ul - ua , 4 * 3 )  
[7897] ( move ul , ua / 4 ; pen ua ; move 4 , ul + ul )  
[7898] ( move ul , ul ; pen ul - 4 ; move ul - ua , 4 )  
[7899] ( pen ul ; move ul - 4 , ul - 4 ; move ua , ul )  
[7900] ( move ul - 2 , 4 - 3 ; move 4 - ul , 2 / ua )  
[7901] ( move ul / 3 , ul - 4 ; pen ul ; move ua , ul )  | ( move 0 , ul ; move ul / 4 , ua - 4 ; move ua , ul )  
[7902] ( move 3 / ua , ul / ua ; move 4 , ul ; pen ua )  
[7903] ( move 3 , ua ; pen ul / ua ; move ua / 4 , ul )  
[7904] ( pen ul ; move ua / 4 , ul ; move ua , ul / 2 )  
[7905] ( move ul , ul ; ( pen ul / 2 ; move ua , ua ) )  
[7906] ( move 3 , ul / ua ; pen 4 ; move ul , ul / ua )  | ( v0 = ul - 4 ; move v0 , v0 ; move ul , v0 )  
[7907] ( v0 = 0 - 4 ; pen ua ; move ua , 3 / v0 )  
[7908] ( move 4 , 0 ; move 4 , 4 - 3 ; move 2 - 4 , 2 )  
[7909] ( move 3 , 4 ; move 3 * 2 , 2 - 4 ; move 0 , 4 )  
[7910] ( move ua , ul ; move ul - ua , ul ; move ua , 0 )  
[7911] ( move ua + ul , 0 ; move ul , ul ; move ua , ul )  
[7912] ( move ul , ua ; move ua , ua + ul ; move 2 , ul )  | ( move ul , 0 ; move ua , ul ; move ul + ul , ul )  | ( move ul , ua * 2 ; ( move ua , ul ; pen ua ; move 2 , ul ) )  
[7913] ( move ua , ua ; move ua , ua - 3 ; move ul , ul )  
[7914] ( move ua , ua ; move ul + ul , ul ; move ul , 2 )  
[7915] ( move ua , ul ; move 2 , ul ; move ul , ua + ul )  
[7916] ( move ul , ua - ul ; move ua , ul ; move 2 , ua )  | ( ( move ul , 0 - ul ; move ua + 2 , ul ) ; v0 = 2 )  | ( move ul , ua - ul ; move ua + ul , ul - ua ; move ul , 0 )  
[7917] ( move ul , 2 ; move ul , ul ; move ua , ul + ul )  
[7918] ( move ul , ua ; move ul , ua + 4 ; move ua , ul )  
[7919] ( move ul , ua ; move ul , ul - 2 ; move ua , ul )  
[7920] ( move ua , 3 ; move ul , ul ; move ua , ul + ul )  | ( move ua , 3 ; ( v0 = 0 ; move ul , ul ) ; move ua , 2 )  
[7921] ( move ua , ul ; move ul , ua ; move ua , ua - 4 )  
[7922] ( move ul , ul ; move 3 , ua + ul ; move ua , ul )  
[7923] ( move ua , 3 ; move ul , ua * ua ; move ua , ul )  
[7924] ( move ul , ul ; move 2 , ua + ul ; move ul , ul )  | ( move ul , ul ; move 2 , ul - ua ; move ul , ul )  | ( move ul , ul ; move ul + ul , ul ; move ul , ul )  
[7925] ( move ul , ua ; move ua , ul ; move ua + ul , 4 )  
[7926] ( move 2 , ua ; move ua - ul , ul ; move ul , ul )  
[7927] ( move 2 , ua * ua ; move ul , ul ; move ua , ul )  
[7928] ( move ua , ua ; move ul , ul - 2 ; move ul , ul )  
[7929] ( move ul , ul ; move ua , ul + ul ; move 2 , ul )  
[7930] ( move ul - ua , ua ; move 2 , ul ; move ul , ul )  
[7931] ( move ul , ua ; move ul , ul ; move ua - 2 , ul )  
[7932] ( move ua , ul ; move ul , 3 + ul ; move ul , ul )  | ( ( move ua , ul - ua ; move ul , 4 ) ; move ul , ul )  
[7933] ( move ul , ul ; move ua , ul ; move ua + ul , 4 )  
[7934] ( move ua , ul ; move ua , 4 ; move ul , ul - ua )  
[7935] ( move ul , ul ; move ul , ul ; move ua + ul , 3 )  
[7936] ( move ua , ul ; move ul - 4 , ua ; move ua , ul )  
[7937] ( ( move 3 / 2 , 4 ; move 3 , 0 ) ; move 4 , 2 )  
[7938] ( move ua + ul , 4 ; move ul , ul ; move ua , ul )  
[7939] ( move ul , ua ; move ua , ul ; move ul , 2 / ua )  
[7940] ( move ul , ul ; move 4 , ul ; move ul - ua , ua )  
[7941] ( move ua , ua ; move ul , 4 / ua ; move ul , ua )  
[7942] ( move ua , 4 + ul ; move ul , ul ; move ul , ul )  
[7943] ( move ua , ul ; move 4 , ul ; move ul - ua , ul )  
[7944] ( move ul - ua , ua ; move ul , ul ; move 4 , ul )  
[7945] ( move 4 , ul ; move ul , ua ; move ul - ua , ul )  
[7946] ( move 2 / ua , ul ; move ul , ul ; move ua , ul )  
[7947] ( move ul , ul ; move ul , ua * ua ; move ua , 4 )  
[7948] ( move 4 , ua ; move ul , ul ; move ul , ua - ul )  
[7949] ( move ul , ul ; move ua , ul ; move ul / ua , 2 )  | ( move ul , ul ; move ua , ul ; move ul / 4 , ua / 3 )  
[7950] ( move ul , ua ; move 4 , ul ; move ul , ul + ul )  
[7951] ( move ul , ul / 2 ; move ua , ul ; move ul , ul )  
[7952] ( move ua , ua ; move ul , ul ; move 4 / ua , ul )  
[7953] ( move ul , ul ; move ua / 3 , ul ; move ua , ul )  
[7954] ( move ul , ua ; move ul / ua , ua ; move 4 , ul )  
[7955] ( move ua , 3 ; move ul , ul / ua ; move ul , ul )  
[7956] ( move ua / 3 , ul ; move ul , ul ; move ua , ul )  | ( move 2 , 2 - ul ; move ul , ul ; move ua , 4 - 3 )  
[7957] ( move ua , ul ; move ul , ul ; move ul - 4 , ul )  
[7958] ( move ul , ul ; move ua , ul ; move ul - 4 , ul )  
[7959] ( move ul , ul ; move 4 - ua , ul ; move ul , ul )  | ( pen 4 ; move ul , ul ; ( move 4 - ua , ul ; move ul , ul ) )  
[7960] ( move ul , ul / ua ; move ua , ul ; move 3 , ul )  
[7961] ( move ul , ua ; move ul / 4 , ua ; move ua , ul )  | ( move 0 , ua ; move 4 / 3 , 0 ; move 3 * 2 , ul )  
[7962] ( move ul , ul ; move ua , ul ; move 4 / ua , ul )  | ( move ul , ul ; move ua , ul - ua ; move 4 / ua , ul )  
[7963] ( move ul , ul ; move 3 , ul / ua ; move ul , ul )  
[7964] ( move ul , ul ; move ul / ua , ul ; move 3 , ul )  
[7965] ( ( move 4 , 4 + 2 ; move 4 , 2 ) ; v0 = 4 )  
[7966] ( v0 = ua ; move ua - 2 , ul ; move v0 , 2 )  
[7967] ( ( move ua , ul ; move ul , ul ) ; move ua , ul )  | ( move ua , ul - ua ; move ul , ul ; move ua , ul )  
[7968] ( ( move ul , ua ; move ua , ul ) ; move ul , ul )  | ( move ul , ua ; move ua , ua + ul ; move ul , ul )  | ( ( move ul , ua ; move ua , ul ; pen ul ) ; move ul , ua + ul )  
[7969] ( move ua , ul ; v0 = ua ; move 3 - v0 , 2 )  
[7970] ( ( move ua , 3 ; pen 0 ; move ua , 3 ) ; pen 4 )  
[7971] ( v0 = 3 ; move 2 , ua * ua ; move v0 , ul )  | ( move 2 , ua * ua ; v0 = ul ; move 3 , ul / v0 )  
[7972] ( ( pen 0 ; move 3 , 2 ) ; pen 3 ; move ul , ul )  
[7973] ( move 0 - 3 , ul / 2 ; move 0 - ua , ul - ua )  
[7974] ( move 2 - ua , ua ; move ua - ul , ul ; pen ua )  
[7975] ( move ul , 3 ; pen ul ; ( pen 0 ; move 3 , 3 ) )  
[7976] ( move ua + ul , 2 ; pen ua ; move ul - ua , ul )  
[7977] ( move ua , ua ; pen 3 - ua ; move ul + ul , ua )  | ( move ua , 0 ; ( pen 0 ; move 2 , ua ; v0 = ul ) )  
[7978] ( move 2 + ul , ua - 2 ; move ua - 4 , ua - 2 )  
[7979] ( pen ul ; move 2 , ua ; move ul - ua , ua - ul )  | ( move 2 , ua * 2 ; move ul - ua , ul - 2 ; pen 2 )  
[7980] ( move ul - 3 , 2 - 4 ; move ua + ul , ua + 2 )  
[7981] ( pen ul ; move ua + ul , ua * ua ; move 2 , ul )  | ( move ua + ul , ua * ua ; move ul , 2 - ul ; move ul , 0 )  
[7982] ( move ua - ul , 0 - ua ; move 3 / 4 , ua + 2 )  
[7983] ( move ua , ul ; move 2 - ua , ua * ua ; pen ul )  
[7984] ( move 2 , ul ; pen ul - ua ; move ul - ua , ua )  
[7985] ( move ul - ua , ua ; move ul - ua , ul ; pen 2 )  | ( move ul - ua , ua + ua ; move ul - ua , ul ; move 0 , ua )  | ( v0 = ua - ul ; move v0 , ua + ul ; move v0 , v0 )  | ( v0 = ul - ua ; move v0 , ua ; move v0 , v0 - ua )  
[7986] ( move 0 - ua , 3 / 4 ; move ua + 2 , ua - ul )  
[7987] ( move ua - 4 , 3 - ul ; move ua + ul , 0 - 3 )  
[7988] ( move 2 + ul , 2 - 4 ; move 2 - ua , ul + ul )  
[7989] ( move ul / ua , 2 + 2 ; move 3 + 2 , ul + ul )  
[7990] ( v0 = 4 ; move ul - ua , ul ; move 3 , v0 )  
[7991] ( move ul , ul ; pen ul / ua ; move ua , 0 - ul )  
[7992] ( move ul - ua , 4 + 2 ; move 4 + ul , 2 - ua )  
[7993] ( move 2 , 4 ; move 2 + ul , 4 + 3 ; move 0 , 0 )  | ( move ul + ul , 3 + ul ; v0 = 4 + 3 ; move 3 , v0 )  
[7994] ( move ua , 3 ; move ua - ul , ua * ua ; pen ul )  
[7995] ( move ul - 3 , 2 / ua ; move 0 - 3 , ua * ua )  
[7996] ( ( move 3 , 4 ; pen ul ) ; pen 0 ; move 4 , ul )  
[7997] ( pen ul ; move ul - ua , ul - 2 ; move ua , ul )  
[7998] ( move ul - 3 , ua / 2 ; move 2 + ul , ua - 2 )  
[7999] ( move ua + 2 , ul - ua ; move 4 / ua , 3 + 2 )  
[8000] ( move 2 + ul , 3 + ul ; move ul - 2 , 3 / ua )  | ( move 3 , 4 ; v0 = 4 ; move ul , v0 * v0 )  
[8001] ( move ua + ul , ua * ua ; pen ul ; move ul , 4 )  
[8002] ( move 2 - ua , ul / 3 ; move 0 - 4 , ul + ul )  
[8003] ( move 2 - ua , 2 / ua ; move 2 - ul , 3 - ul )  
[8004] ( move ul - ua , ua ; move ul - ua , 4 ; pen ul )  | ( v0 = ul - ua ; move v0 , 0 ; move v0 , 4 )  
[8005] ( pen ul ; move ua - ul , ua * ua ; move 3 , ul )  
[8006] ( move 4 + ul , ua * ua ; move ul , ul ; pen ua )  
[8007] ( v0 = 4 ; move 3 + v0 , 2 ; move v0 , 2 )  
[8008] ( move 3 + ul , 3 ; move 4 + 2 , 2 ; move 0 , 2 )  
[8009] ( move 4 - ua , 4 + ul ; move 3 + ul , 2 + ul )  
[8010] ( move ul , 3 / ua ; pen ua ; move ua , ua * ua )  | ( move ul , ul / 2 ; move ua , ua * ua ; pen 0 - ua )  
[8011] ( move ul - ua , 2 + ul ; move 3 + 2 , 4 / ua )  
[8012] ( pen ul ; move ul - ua , ul ; move ua , 2 / ua )  
[8013] ( move 4 , 0 - 3 ; move 2 + ul , 2 ; v0 = 0 )  
[8014] ( move 4 + ul , 4 / 3 ; move 0 - ua , ul + ul )  
[8015] ( move ul , 3 ; pen ul / ua ; move ua - ul , ua )  
[8016] ( move 4 + ul , ua * ua ; move 3 + 2 , 4 - ul )  
[8017] ( move 4 - ul , 3 + ul ; move ua + ul , 3 * 2 )  
[8018] ( move 3 + 2 , 4 ; move 0 , 0 ; move 4 + ul , 4 )  
[8019] ( move 4 - ul , ua + 3 ; move ua - 3 , 4 - ua )  
[8020] ( v0 = 3 * 2 ; move v0 , 3 ; move v0 , 2 )  
[8021] ( pen ul ; move 3 , ua ; move ul - ua , ul / ua )  
[8022] ( v0 = 3 ; move 3 , 0 ; move 4 , v0 * v0 )  
[8023] ( move 4 , 4 ; move 0 , 3 / 2 ; move ua + 2 , 0 )  
[8024] ( move ua + ul , ua ; move 4 / ua , ul ; pen ul )  
[8025] ( move 4 , 0 ; v0 = 4 + 4 ; move v0 , v0 )  
[8026] ( move ua , 4 ; pen ul / ua ; move ul + ul , ul )  | ( move ua , 4 ; ( pen 0 - 3 ; move 4 , ua * ua ) )  | ( move ua , 3 + ul ; pen ul - 3 ; move ul + ul , ul )  
[8027] ( move ul + ul , 2 + ul ; move ua - 4 , 4 * 3 )  
[8028] ( move ul , ul + ul ; pen ul / ua ; move 3 , ul )  
[8029] ( move ua / 2 , ua - 4 ; move ua - 2 , ul - 4 )  
[8030] ( move 2 , 2 ; move 2 , 2 + ul ; move 2 , 4 + 4 )  
[8031] ( move 3 * 2 , 4 - ul ; move ua - ul , ul - 2 )  
[8032] ( move 2 , 4 ; v0 = 4 + 3 ; move v0 , v0 )  
[8033] ( move 3 + 3 , ul ; move 2 , 0 - 4 ; v0 = 0 )  
[8034] ( move 2 / 3 , ua ; move 2 , 2 ; move 3 , 0 - 4 )  
[8035] ( move 3 - ul , 2 / 4 ; move ul - ua , 3 + ul )  
[8036] ( move 4 - ua , ua + ul ; move 4 + 3 , ul / 3 )  
[8037] ( move 4 - ua , ul - 2 ; move 4 + ul , 4 - ul )  
[8038] ( move 4 + 4 , 4 ; v0 = 2 ; move v0 , v0 )  
[8039] ( v0 = 3 * 3 ; move v0 , v0 ; move 4 , 2 )  
[8040] ( move 0 - 4 , ul / 4 ; move 3 - ul , ul + ul )  
[8041] ( v0 = 4 + 4 ; move 4 , 3 ; move v0 , v0 )  
[8042] ( move 2 / ua , 2 ; move 3 , 3 ; move 3 , 3 + 2 )  
[8043] ( move ul , ul ; pen ul / ua ; move ul - 4 , ul )  
[8044] ( move ua - 3 , ul + ul ; move 3 / 4 , 4 + ul )  
[8045] ( move 0 , 3 + 3 ; move ua + 4 , 4 ; v0 = 2 )  
[8046] ( move ul , ua / 4 ; pen ul / ua ; move ua , ul )  
[8047] ( move 2 - 4 , 4 ; move 3 * 2 , ul ; move 0 , 2 )  
[8048] ( move 2 - 3 , 0 ; move 4 , 0 - 4 ; v0 = ul )  
[8049] ( move 2 , 0 ; move 0 - 4 , 4 ; v0 = ua - 4 )  
[8050] ( move ua - 3 , ua * 4 ; move ua + ul , 3 / 4 )  
[8051] ( move 4 , ua ; move 4 , 2 / 3 ; move 0 , 2 * 2 )  
[8052] ( ( move 2 , ul ; move 2 , 0 ) ; move 2 , 4 + 3 )  | ( move 4 , ul ; move ul + ul , 4 + 3 ; v0 = ul )  
[8053] ( move 4 , 3 ; v0 = 4 ; move v0 , 4 * v0 )  
[8054] ( move 3 + 3 , 4 + 3 ; move 4 , ul ; move 2 , 4 )  
[8055] ( move 4 / 2 , 4 ; move ul / 2 , 2 ; move 3 , 0 )  
[8056] ( ( move ua + 2 , 0 ; move 3 , 4 ) ; move 4 , 4 )  
[8057] ( ( move 4 , 3 - ul ; move 2 , 0 ) ; move 4 , 2 )  
[8058] ( move 3 / 2 , 4 ; move 4 , ul ; v0 = 0 - 2 )  
[8059] ( move ua , ua ; move ul , ul ; move ua + ul , ul )  | ( move ua , ua * 4 ; move ul , ul ; move ua + ul , ul )  | ( move ua , ua ; ( move ul , ul ; move ua + ul , ul ) )  
[8060] ( move 2 , 2 ; ( move 3 , 4 * 4 ; move 0 , ua ) )  
[8061] ( move 2 , 3 ; move 2 , 4 * 3 ; move 4 , ul - 3 )  
[8062] ( move ua , ua ; move ua , ua * ua ; move ul , ul )  
[8063] ( move ul , ua ; move ua , ul ; move ul , ua - ul )  
[8064] ( move ul , ul ; move ua , ul ; move ua , ul + ul )  
[8065] ( move ua + ul , ua ; move ul , ul ; move ul , ul )  
[8066] ( move ul , ul ; move ua , ul ; move ul , ua - ul )  
[8067] ( move ul + ul , ua ; move ul , ul ; move ul , ul )  | ( move ul + ul , 0 ; ( move ul , ua + ul ; move ul , ul ) )  
[8068] ( move 0 , 3 ; ( move 4 , 4 + 3 ; move 4 , ul ) )  
[8069] ( move ul , ul ; move ua - ul , ul ; move ua , ul )  
[8070] ( move ul , ul ; move ua , ul + ul ; move ul , ul )  | ( ( move ul , ul ; move ua , 2 ) ; move ul , ul ; pen ul )  
[8071] ( move 3 , ul / 4 ; ( move 3 , 2 ; move 0 , 4 ) )  
[8072] ( move ul / 2 , 4 ; move 4 + 3 , 4 ; v0 = 2 )  
[8073] ( move 2 , 4 ; ( move 4 , 2 ; move 4 - ul , 3 ) )  
[8074] ( move 2 , 3 ; ( move 2 , ul / 4 ; move 4 , 2 ) )  
[8075] ( move ua / 3 , 3 ; move 2 , 4 / 3 ; v0 = 3 )  
[8076] ( move 3 , 2 ; ( move 3 , ul ; move 4 , 4 / 2 ) )  
[8077] ( move 4 , 4 / 3 ; move 4 , 4 + ul ; v0 = 4 )  
[8078] ( move 3 , 3 * 3 ; pen 4 + 3 ; move 2 , 3 - ua )  
[8079] ( move 3 + 2 , ua + 2 ; move ul - ua , ul + ul )  
[8080] ( ( move 3 , 4 ; move ua , 4 ) ; move 4 / 3 , 4 )  
[8081] ( ( move 3 / 2 , 4 + 2 ; pen 0 ) ; move ua , 2 )  
[8082] ( move ua , 3 + 2 ; move 0 , 2 ; move ua - 3 , 0 )  
[8083] ( move 4 , 4 * 4 ; move 3 , ul / 4 ; v0 = 3 )  
[8084] ( move ul + ul , ua - ul ; move 3 + 2 , 2 - ua )  | ( move 2 , ua - ul ; move 4 + ul , 2 ; pen 0 - ua )  
[8085] ( move 2 , 3 ; move 0 - ua , 0 ; move 3 - ua , 2 )  
[8086] ( move ul + ul , 3 + 3 ; move 2 + ul , ua + ul )  
[8087] ( move ua + 3 , ua + 4 ; move ua - 2 , ul + ul )  
[8088] ( move 0 - ul , ua + ul ; move 3 + ul , ua / 3 )  
[8089] ( move 4 + 3 , 2 ; move ua + 2 , 2 ; move 0 , ua )  
[8090] ( v0 = ul - ua ; move v0 + ul , ul / v0 )  
[8091] ( move 0 - 3 , 0 ; move 2 - ua , ul ; v0 = 0 )  
[8092] ( pen 3 * 2 ; move 4 + 3 , 3 * 3 ; move 3 , ul )  
[8093] ( move 4 + ul , ua + 2 ; move ul - 3 , ua - ul )  
[8094] ( move 3 , 2 ; ( pen 3 - ua ; move 4 * 2 , 2 ) )  
[8095] ( move 3 + 3 , ua + ul ; move ua - ul , 3 - ul )  
[8096] ( move 2 / ua , ua - ul ; move ua + 2 , 4 + ul )  | ( ( move ul - 2 , ul ; v0 = ua + ul ) ; move v0 , 3 )  
[8097] ( move ul , 3 ; pen 3 * 3 ; move 4 * 2 , 3 * 2 )  
[8098] ( ( move 2 , 2 / 4 ; move ua - 4 , 3 ) ; pen 0 )  
[8099] ( move ul - 4 , ul - ua ; move ua + ul , 0 - 4 )  
[8100] ( move 4 * 2 , ua / 4 ; pen 3 ; move 3 * 2 , 2 )  
[8101] ( move ua - 3 , 4 + ul ; move 2 + ul , ua - ul )  
[8102] ( move 3 , 0 ; move 0 , ul ; move 4 + 2 , 4 + ul )  
[8103] ( move ua + ul , 3 / 2 ; move ua - ul , ua + 4 )  
[8104] ( move ua + 2 , ul / 3 ; move 2 / ua , ua + ul )  
[8105] ( move 4 - ua , 0 ; v0 = 4 ; move v0 , v0 )  | ( v0 = 4 ; move v0 - ua , ua ; move v0 , v0 )  
[8106] ( move 3 , 4 ; ( pen 0 - 4 ; move ua / 2 , 3 ) )  
[8107] ( move 3 + 2 , 0 ; move ul , 3 ; move ua , 2 * 2 )  
[8108] ( move 2 , ul - 2 ; move 3 + 3 , 2 ; move ul , 0 )  | ( move 2 , ua - ul ; move 4 + 3 , ul + ul ; pen ua + ul )  
[8109] ( move 3 , 0 ; move 0 - 4 , 2 ; move 4 , ua + ul )  
[8110] ( move 3 , ul - 4 ; ( move 2 , 0 - 4 ; pen 4 ) )  
[8111] ( move 4 * 2 , 0 ; move ua , 2 ; move 3 , 0 - ul )  
[8112] ( move ul , 3 + 3 ; move 0 , 0 ; move ua , 4 * 2 )  
[8113] ( move 3 * 2 , 3 + ul ; move ul + ul , ul - ua )  | ( ( move 3 * 2 , 4 ; move ul , ul ) ; move ul , 0 ; pen 0 )  
[8114] ( move 3 + ul , ul / ua ; move 4 - ul , ua + 2 )  
[8115] ( v0 = 4 ; move 2 , v0 * v0 ; move ua , 2 )  
[8116] ( move ua + ul , ua * 4 ; move ua / 4 , 0 - ul )  
[8117] ( move 3 , 4 ; move 2 , 0 - ua ; move 3 , 2 - ua )  | ( move 4 + ul , 2 + 2 ; pen ua ; move 3 , 3 - ul )  
[8118] ( move 3 , 0 ; move 2 , ul ; move 3 * 2 , ua + 3 )  
[8119] ( move ua + 3 , 4 ; move 4 , ua - 4 ; move 0 , 0 )  
[8120] ( move 2 - ua , 4 ; v0 = 3 ; move v0 , v0 )  
[8121] ( move ua + 3 , ul + ul ; move ul - 4 , 4 + ul )  
[8122] ( move 3 , 0 ; move 4 , 0 ; move 2 - 4 , ul + ul )  
[8123] ( move ua , 2 ; move 3 , 3 * 2 ; move ul , 0 - 2 )  
[8124] ( move 2 + ul , ua + ua ; move 4 - ul , ua / 4 )  
[8125] ( v0 = 0 - 4 ; move v0 + v0 , ul / v0 )  
[8126] ( move 3 / 2 , ua + 4 ; move ul - ua , ul - ua )  
[8127] ( move 0 , ua ; move 4 , ul - 3 ; move 0 - 4 , 2 )  
[8128] ( move ul , 3 + 2 ; v0 = 4 ; move v0 , v0 )  
[8129] ( move 2 - ua , 3 ; move 4 , 0 ; move 2 - ua , 4 )  
[8130] ( move 2 , ua / 3 ; v0 = 3 ; move v0 , v0 )  
[8131] ( v0 = 0 ; move 3 , ul ; move ua + 2 , 4 + 2 )  
[8132] ( move ua / 3 , 0 ; move 0 , 3 ; move ua , 2 / 3 )  
[8133] ( move 4 + ul , ua - ul ; move ua - 2 , 4 / ua )  
[8134] ( move ua + 4 , 4 ; move 3 , 2 ; move 0 , ua * 2 )  
[8135] ( v0 = 3 * 2 ; move 3 , v0 ; move v0 , ul )  
[8136] ( move 2 , ul / 3 ; v0 = 2 ; move v0 , v0 )  | ( move 4 - 2 , 2 / ua ; move ul , 2 ; move ul , 0 )  
[8137] ( move ul , 3 + 2 ; move 0 , 3 * 2 ; move ua , 4 )  
[8138] ( move ul , 4 ; move ua - 2 , 0 - 2 ; move 2 , 4 )  
[8139] ( move 0 , ul / 4 ; move 0 - 3 , ul ; move 2 , 2 )  
[8140] ( move 2 , 4 - ua ; move 0 , 3 ; move 2 - ua , 4 )  
[8141] ( move ua + ul , 3 / 4 ; move ua + ul , 4 - ua )  
[8142] ( v0 = 4 ; move v0 , 3 ; move 2 - v0 , ul )  | ( ( ( move 4 , 3 ; pen 4 ) ; move ul - 3 , ul ) ; pen 0 )  
[8143] ( move 2 + ul , 4 ; move 3 , 0 - 2 ; move 4 , ua )  
[8144] ( move 2 , ua ; move 0 - 3 , 2 ; move 4 , ua - 4 )  
[8145] ( move 2 + 2 , 4 + 3 ; v0 = 0 ; move ua , ul )  | ( ( move ul , 3 ; move 4 , 4 ) ; move ua , ul ; move 0 , ul )  
[8146] ( v0 = 2 - ua ; move 4 , v0 ; move v0 , 4 )  
[8147] ( pen 2 - ul ; ( move 4 , 3 / 4 ; move 2 , 2 ) )  
[8148] ( move 3 - ul , ua * ua ; move ua - 2 , ul / 3 )  
[8149] ( v0 = 3 * 3 ; move v0 , ua ; move v0 , 3 )  
[8150] ( v0 = 4 ; move 3 , 3 ; move v0 - ua , v0 )  
[8151] ( move 3 * 2 , 4 / ua ; move 3 , 3 / 4 ; pen 3 )  
[8152] ( move 3 , 0 ; move 0 , 3 + ul ; move ua , 4 / 3 )  
[8153] ( move 0 , 2 ; move ua - 3 , ua ; move 3 * 2 , 4 )  
[8154] ( move 2 + 2 , 2 ; move 2 , ul / 2 ; move 2 , ul )  
[8155] ( move 4 + 3 , ul ; v0 = 4 ; move v0 , v0 )  
[8156] ( v0 = 4 ; move 4 , v0 * 2 ; move ua , v0 )  
[8157] ( move 3 , 3 - 4 ; move 4 , 0 ; move ul , 0 - ul )  
[8158] ( move 2 , ua ; v0 = 4 ; move v0 , v0 / 3 )  
[8159] ( move 0 , ul / 3 ; move 3 - ua , 3 ; move 2 , 2 )  
[8160] ( move 0 , ul / 4 ; move ul , 0 - 2 ; move 3 , 3 )  
[8161] ( move ul - ua , ul / 3 ; move ul - 3 , 3 + ul )  
[8162] ( move 4 , ul - 3 ; v0 = 3 ; move v0 , v0 )  
[8163] ( ( move 2 , 3 + 2 ; move ua , ul ) ; move 0 , 2 )  | ( ( move 2 , 4 + ul ; move ua , ul ) ; move 2 , ua + 3 )  
[8164] ( move 3 , ua - 3 ; move 2 , 3 ; move 4 , 0 - ul )  
[8165] ( move 2 , 4 * 3 ; move 0 , 3 ; move 4 , ua + ua )  
[8166] ( move ul , 2 ; move 2 , 2 - 3 ; move 4 + ul , 2 )  
[8167] ( move 0 , ua ; move 3 - ul , 2 / 3 ; move 3 , 2 )  
[8168] ( move 4 , 0 ; v0 = 4 ; move v0 , ul / v0 )  
[8169] ( move ua , 2 ; move 0 , 3 / 2 ; move 3 , ul - 3 )  
[8170] ( move 3 , ua / 3 ; v0 = 3 ; move v0 , v0 )  
[8171] ( move 4 / 2 , 0 ; move 4 , ul ; move 2 , ua + 3 )  
[8172] ( move 0 , ul ; move 2 , 3 / 2 ; move 3 , 2 / ua )  
[8173] ( move 4 + 2 , 0 ; move 3 , 3 ; move ua , ua / 4 )  
[8174] ( ( move ul - 3 , 0 ; move 4 , 2 ) ; move 0 , ua )  | ( move ul / 3 , ua ; move ul - 3 , ua ; move 2 * 2 , 2 )  
[8175] ( move ua / 4 , ua - 4 ; move ul - ua , 4 + ul )  
[8176] ( move 4 + ul , ua ; move 3 , 4 + 2 ; v0 = 0 )  
[8177] ( move ua , ul ; move 3 / 4 , 2 ; move 4 + 2 , 0 )  
[8178] ( move 3 , ua / 3 ; v0 = 4 ; move v0 , v0 )  
[8179] ( move ua , 2 ; move ua / 3 , 3 + 3 ; move 3 , 2 )  
[8180] ( move ua , 2 - ul ; move 0 , 4 ; move 4 , 4 + 4 )  | ( ( pen ua + 3 ; move ua , ul ) ; pen ua ; move 4 , 4 * 3 )  
[8181] ( move ul / 3 , 0 ; move ua + 2 , 3 ; move 4 , 4 )  
[8182] ( move 2 , 4 ; move 4 + 4 , ua - 2 ; move ul , 2 )  
[8183] ( move 2 , 4 * 4 ; move 0 , ul ; move 3 - ua , 3 )  
[8184] ( move ul , 0 ; move 3 , 3 + 3 ; move 2 , ul / 4 )  
[8185] ( move ul , 2 ; move 3 , 4 ; move 3 + ul , 3 - 2 )  
[8186] ( move 2 , ul ; move ua , 3 + 2 ; move 4 * 2 , 4 )  
[8187] ( v0 = 4 * 3 ; move 4 , v0 ; move ul , v0 )  
[8188] ( move 4 , 2 ; move 0 - 3 , ua + ul ; v0 = 4 )  
[8189] ( move 3 , ul / 3 ; move ua + 2 , 3 ; v0 = 0 )  
[8190] ( move 2 , ua - 4 ; move 3 , 4 * 3 ; move 0 , ul )  
[8191] ( move 4 , 3 ; move 3 , 3 - 4 ; move ul - ua , 0 )  
[8192] ( move 3 , 0 ; move ua , 2 ; move 3 - ul , 3 / 4 )  
[8193] ( move 3 , 3 + 3 ; move 4 - 3 , 3 ; move ua , ua )  
[8194] ( move ua , 3 ; move 0 , 2 / 4 ; move 4 - ul , 3 )  
[8195] ( move 2 , 3 ; move 3 - ua , 4 + 2 ; v0 = ul )  
[8196] ( move 4 + 2 , ul ; move 2 , 3 ; move 3 , ul - 4 )  
[8197] ( move ua , 0 ; ( move 3 , 4 ; move 4 , ua + 2 ) )  
[8198] ( ( move 0 , 4 + 2 ; move 2 , ul ) ; move 3 , ul )  
[8199] ( move ua - 4 , 0 ; move 3 , ua / 2 ; move 4 , 4 )  
[8200] ( move 3 , ul / 2 ; move 2 + ul , 4 ; v0 = 0 )  
[8201] ( move 2 - 4 , 0 ; move 4 - ua , 4 ; move ul , 4 )  
[8202] ( move 2 - ua , ul ; v0 = 4 ; move 2 - 3 , 2 )  | ( move 2 - ua , ul ; move ul , ul - 2 ; v0 = 4 )  
[8203] ( move ul , 2 ; move ua , 4 + 2 ; move 4 + 4 , 4 )  
[8204] ( move 2 , 4 ; move ul , 3 ; move 4 * 2 , 2 + ul )  
[8205] ( ( move 0 , 4 ; move 2 , ul ) ; move 4 , 0 - ul )  
[8206] ( move 4 , 4 ; move 2 , 4 + 2 ; move ua - ul , 3 )  
[8207] ( move ua , 4 ; move 0 - 3 , 4 ; v0 = 3 + ul )  
[8208] ( ( move 2 , 4 ; move ul , 2 ) ; move ul , 0 - 2 )  
[8209] ( ( move ul , 4 ; move 0 , 3 ) ; move ua - 2 , 2 )  
[8210] ( move 3 , 3 ; move ul , 4 ; move 0 - 4 , ua * 3 )  
[8211] ( move 2 , ua * 2 ; move ul , 4 / 3 ; move 2 , 3 )  
[8212] ( move 2 , 3 * 2 ; move ul - 3 , 2 ; v0 = ul )  
[8213] ( ( move ua , ua ; move 2 , 2 ) ; move 4 , 4 + 2 )  
[8214] ( move 3 , 4 ; move ua , 4 + 4 ; v0 = 0 - ul )  | ( v0 = 4 ; move 3 , v0 ; move ua , v0 + v0 )  
[8215] ( move 2 , 2 - 4 ; move 2 / ua , 4 ; move 3 , ul )  
[8216] ( move 3 , 2 - ul ; move ul , 2 ; move 2 , 4 / 3 )  
[8217] ( move 2 , ul ; move 2 , 2 - 4 ; move 4 , ul - 4 )  
[8218] ( move ua / 3 , 0 ; move 4 , 3 ; move ul , 3 - 4 )  
[8219] ( move ua , 3 * 3 ; move 2 , 2 ; move 4 / 2 , ul )  
[8220] ( move 4 + 2 , ul ; move 4 , ua - 3 ; move 4 , 3 )  
[8221] ( move 3 / 4 , 3 ; move 3 , ul ; move 4 + ul , 0 )  
[8222] ( move 4 , ul / 3 ; move 3 , ul / 4 ; move 0 , 0 )  
[8223] ( move 2 , 4 + 4 ; move 2 , ua * ua ; v0 = 3 )  
[8224] ( move 2 , 4 + ul ; move 4 + 3 , ua ; move 4 , 4 )  
[8225] ( move 2 , 2 ; move 4 / 2 , 2 ; move ua , ul / 3 )  
[8226] ( move 0 , 3 ; move ua / 4 , ul ; move 4 , 4 - 2 )  
[8227] ( move 2 , 3 * 3 ; move 4 , ua - 2 ; v0 = ul )  
[8228] ( move 2 , 4 - ua ; move ua , 3 * 2 ; v0 = 4 )  
[8229] ( move 0 , ul ; ( move 3 , 4 ; move ua , 4 + 3 ) )  
[8230] ( move 4 + ul , 2 ; move 3 , 3 * 3 ; v0 = ua )  
[8231] ( move 2 , 3 ; move 4 , ul ; move 2 + ul , 4 * 4 )  
[8232] ( move ua , ul - 2 ; ( move 0 , 4 ; move 4 , 3 ) )  
[8233] ( move 2 , 0 ; ( move 4 - ua , 2 ; v0 = ul ) )  
[8234] ( move ul - 3 , 0 ; move ul , 4 ; move 4 , 2 / 4 )  
[8235] ( move 3 , ul ; move 3 , 3 - 4 ; move 4 + ul , 3 )  
[8236] ( move 4 , ul ; move 2 / ua , 4 ; move 4 + 3 , 2 )  
[8237] ( move 3 , 3 ; move ul / 2 , 0 ; move 4 / 3 , ul )  
[8238] ( move 4 , 2 / ua ; ( move 0 , 3 ; move 3 , ua ) )  
[8239] ( move ua + 2 , ul / 3 ; move 4 , 3 ; v0 = 2 )  
[8240] ( move 4 , 2 / ua ; move 3 - ul , 4 ; v0 = 0 )  
[8241] ( move ul , 4 * 2 ; move 4 , ul / 3 ; move 0 , 3 )  
[8242] ( move ua , 4 ; move 2 , 4 ; move 3 + ul , 4 * 3 )  
[8243] ( ( move ul - ua , 4 ; move 3 , 4 ) ; move 2 , 0 )  
[8244] ( move 4 , ul - 3 ; move 3 , 2 ; v0 = 3 + ul )  
[8245] ( ( move 0 , ul ; move 2 , ul ) ; move 3 , 3 - 4 )  
[8246] ( ( move 3 , 0 ; move 3 + ul , 4 ) ; move ua , 4 )  
[8247] ( move 4 - ul , 3 * 2 ; move 2 , 2 ; v0 = ul )  | ( move 0 - ul , 3 ; move 2 , ua + 3 ; move 2 , ul + ul )  
[8248] ( move ua / 2 , 3 / 2 ; v0 = 2 ; move ul , 2 )  
[8249] ( move ul , 0 ; move 4 , 4 * 4 ; move 3 , ua / 3 )  
[8250] ( ( move ul , ul ; move 4 + 2 , 3 ) ; move 3 , 2 )  
[8251] ( ( move ul , 3 ; move ua , 4 ) ; move 3 + 2 , 3 )  
[8252] ( move 4 * 2 , 2 ; v0 = ul - ua ; move 3 , 4 )  
[8253] ( move 3 , ul ; ( move 0 , 4 ; move 4 + ul , 3 ) )  
[8254] ( move ua , 3 ; ( move 2 , 3 ; move ul , 2 - 4 ) )  
[8255] ( ( move ua , 4 / ua ; move 3 , 2 ) ; move 0 , 4 )  
[8256] ( move ul , 2 ; ( move 4 , 2 ; move ul , 2 * 2 ) )  
[8257] ( move ua , 2 ; move ul / 4 , 3 ; move 2 , 4 * 3 )  
[8258] ( pen 3 - 2 ; move 0 - 3 , 0 ; move ul - ua , 3 )  | ( move ul - 4 , ua * 2 ; pen ua ; move ul - ua , 3 )  | ( ( move 4 + ul , 3 ; move 3 , ul - 4 ) ; v0 = ul )  
[8259] ( ( move 4 , ua ; move 4 , 3 + ul ) ; move 2 , 2 )  
[8260] ( move 0 , 3 + 2 ; pen 0 ; move 3 + ul , 4 - ul )  
[8261] ( move ua - 3 , 3 * 3 ; move 3 , ul ; v0 = 3 )  
[8262] ( move 2 , ul - 2 ; move 3 , 3 / 4 ; v0 = ul )  
[8263] ( move 4 , ua ; move 2 / 3 , 4 ; move ul , 3 - 4 )  
[8264] ( ( move 4 , 3 ; move ul , 3 - 2 ) ; move 2 , ul )  
[8265] ( move 4 , 2 - ua ; ( move 4 , 3 ; move ul , 2 ) )  
[8266] ( v0 = ul / 4 ; move ua , v0 / ua ; pen ua )  | ( v0 = ul / ua ; move ua , v0 / 3 ; move v0 , v0 )  
[8267] ( move 2 , 4 + ul ; ( move 3 , 2 ; v0 = ua ) )  
[8268] ( move 4 , ua ; ( move 3 , ul - 2 ; move 3 , 3 ) )  
[8269] ( move ul + ul , 4 ; move 4 , 3 * 3 ; v0 = 2 )  
[8270] ( move 3 , 3 ; ( move 4 , ul ; move 2 , ua - 4 ) )  
[8271] ( move ul , 3 * 2 ; move ul , 4 * 4 ; move 4 , 3 )  
[8272] ( ( move 4 , ul ; move 2 , 4 ) ; move ul , 2 - 3 )  
[8273] ( move 3 , ua / 2 ; ( move 2 , 4 ; move ua , 4 ) )  
[8274] ( move 3 + ul , 2 ; pen 3 ; move 0 - 4 , ua - 2 )  
[8275] ( ( move 4 , ul ; move ua , 3 * 2 ) ; move 3 , 3 )  
[8276] ( move 3 , ua ; ( move 0 , 4 * 4 ; move 4 , ul ) )  
[8277] ( move 3 - 4 , 4 ; move ul , 3 / ua ; move 3 , 4 )  
[8278] ( move 4 , 2 ; pen 0 - 2 ; move 2 * 2 , ul - ua )  
[8279] ( ( move 3 , ul ; move ul , 3 ) ; move 4 , 2 * 2 )  
[8280] ( move ua / 3 , 0 - ul ; pen 0 ; move 2 , 4 * 2 )  
[8281] ( ( move 3 , ul ; move 3 , 4 / ua ) ; v0 = 0 )  
[8282] ( ( move ua + 2 , 2 ; pen 0 ) ; move ua , 2 * 2 )  
[8283] ( move 2 , 4 ; ( move ua , 3 / 4 ; move ul , 2 ) )  
[8284] ( move 0 - 4 , 4 + ul ; move 3 + 2 , 4 ; pen ua )  
[8285] ( ( move 4 , 2 ; v0 = ul ) ; move ul - 3 , 3 )  
[8286] ( move 3 + 2 , 3 ; pen ul ; move 4 + 4 , 0 - ul )  
[8287] ( move 2 , 0 - 4 ; pen 3 + ul ; move ua , 4 * 2 )  
[8288] ( move 2 * 2 , 3 ; move 2 + ul , 4 + 2 ; pen ul )  
[8289] ( pen 3 ; move 4 + ul , 0 ; move 0 - 2 , ul / 4 )  
[8290] ( move ul - ua , 0 - ua ; move 0 - ul , ua * ua )  
[8291] ( ( move ul - 4 , 4 ; v0 = 4 ) ; move ua , 2 )  | ( ( move 0 - 3 , 4 ; pen 4 ) ; move ua , ua + 2 )  | ( move ul - 4 , 2 + 2 ; move ua , 2 ; move ul / 4 , 3 )  
[8292] ( ( pen 0 ; move ua , ua ) ; pen ua ; move 3 , ul )  
[8293] ( ( move 3 , 3 ; move 4 / ua , 4 ) ; move 3 , ul )  
[8294] ( pen 3 ; move 4 + 2 , ua ; move ua - 4 , 2 - 4 )  
[8295] ( move ua , 0 ; pen 3 - 4 ; move 4 + 3 , ua / 3 )  
[8296] ( ( move 4 , 3 ; move 0 - 3 , ua + 2 ) ; pen ua )  
[8297] ( ( move 3 + 2 , ul ; pen 3 - ua ) ; move 3 , 0 )  
[8298] ( move 2 - ua , ul ; pen 4 - 2 ; move 2 , 4 * 2 )  
[8299] ( move 2 , 0 ; ( pen ul - 2 ; move 3 + ul , 4 ) )  
[8300] ( move 4 , 2 - ul ; pen 3 - ul ; move 3 * 2 , 2 )  | ( ( move 4 , ul ; move 0 , 3 - ul ) ; move 4 + 2 , ua )  
[8301] ( pen 0 ; ( move ua , ul ; pen 4 ) ; move ul , ua )  
[8302] ( move 4 , 4 + ul ; move 2 - 4 , 2 - 3 ; pen ul )  
[8303] ( pen ua * 2 ; move 4 + 3 , ul ; move 2 , 4 * 3 )  
[8304] ( pen ua + 4 ; move ul - 3 , 4 ; move 2 , 4 * 2 )  
[8305] ( move ul , 0 ; move 0 - ua , 0 ; move 3 * 2 , ul )  
[8306] ( move 2 , 0 ; move ua + 2 , ua - 2 ; move ul , 2 )  
[8307] ( ( pen 3 ; move 3 + 3 , ua - 2 ) ; move 2 , ul )  
[8308] ( move ua + ul , ua + ua ; move 4 / ua , 0 - ul )  
[8309] ( ( move 2 , ul - 4 ; pen ul - 2 ) ; move 4 , 0 )  
[8310] ( move ua + 4 , ul ; move 2 , ul - 2 ; move 0 , 0 )  | ( ( move 4 , ul ; move ua , ua ; move 2 , 0 - ul ) ; pen ua )  | ( ( move 4 , ul ; move ua , ua ) ; pen ul ; move 2 , 0 - ul )  
[8311] ( move 3 , ua + ul ; move 2 + 2 , 0 ; move ua , 3 )  | ( move 4 + 3 , ul ; move ua , 2 + ul ; v0 = ua + ul )  | ( ( move 4 + 3 , ul ; pen ul ) ; pen ua ; move ua , 2 + ul )  
[8312] ( pen 0 ; ( move ul , ul ; pen ul ; move 4 , ul ) )  | ( pen 0 ; move ul , ul ; ( pen 4 + 4 ; move 4 , ul ) )  
[8313] ( move 2 , 3 + ul ; pen 4 / 3 ; move ul - 4 , 2 )  | ( pen 4 - 3 ; move ul + ul , 4 ; move ul - 4 , 2 )  
[8314] ( move 0 , ua * 2 ; move 2 , ua ; move 2 - ua , 2 )  
[8315] ( move 2 + ul , ul + ul ; move ul - ua , ua + 4 )  
[8316] ( move 0 - ua , ul ; v0 = 3 ; move v0 , v0 )  | ( move 0 - ua , ul ; move 0 , 4 - ul ; move 3 , ua )  
[8317] ( move 2 , 0 ; move 2 , 3 ; move 2 + ul , ua - ul )  
[8318] ( v0 = 3 ; move v0 + ua , 2 ; move v0 , ul )  
[8319] ( move 3 , ua - 4 ; ( pen 4 ; move 2 + ul , 2 ) )  | ( ( pen ul ; move 2 , 0 - 4 ; move ul , 0 ) ; move 3 , 2 )  
[8320] ( move 0 , 3 ; move ua , ua + 2 ; move 4 + 2 , ul )  
[8321] ( move ua - 2 , 4 - ul ; move ua + ul , ua - ul )  
[8322] ( move ua + 2 , ul / 3 ; move 0 , 0 ; move ul , 2 )  
[8323] ( v0 = ua + 2 ; move v0 + ul , v0 * v0 )  
[8324] ( move ua + ul , 3 ; v0 = 2 ; move v0 , v0 )  | ( ( move ua , 3 ; move ul , 0 ; pen ua ) ; move 2 , 2 )  
[8325] ( v0 = ua ; move ua , 2 ; move 2 , v0 * v0 )  
[8326] ( move 4 * 2 , 3 ; pen 2 / ua ; move 4 + ul , 4 )  
[8327] ( move ul + ul , ua * ua ; move ua + 3 , 3 - ul )  
[8328] ( move ua - ul , ul / ua ; move ua - 3 , 0 - ul )  
[8329] ( move 4 + ul , ua + ul ; move 4 - ua , ul + ul )  
[8330] ( v0 = ul - 3 ; move 2 , v0 ; move ua , v0 )  
[8331] ( move 3 + 3 , ul ; move 0 , 0 ; move ua , ua / 3 )  
[8332] ( v0 = 4 + ul ; move 2 , v0 ; move ua , v0 )  
[8333] ( move 2 , 0 ; move 3 , 2 ; move ul - ua , ua + 4 )  
[8334] ( move ua + 3 , 2 ; move ua , 0 - 2 ; v0 = ua )  
[8335] ( v0 = 3 ; move 2 , v0 ; move v0 - ua , ul )  
[8336] ( move 3 , 2 ; v0 = ua - ul ; move v0 , v0 )  | ( v0 = ul - ua ; move v0 , ul ; move ul - 4 , v0 )  
[8337] ( move ul + ul , 2 ; move 2 , 2 / ua ; move 0 , 2 )  
[8338] ( move 2 - ua , ua + 3 ; move ua , 2 ; v0 = 0 )  
[8339] ( move ua - ul , ul / 2 ; move 2 - ul , ua + ul )  
[8340] ( move 0 , ul ; move 3 + ul , 3 + ul ; move 2 , 2 )  
[8341] ( move ul + ul , ua - 2 ; move 3 + ul , ul / ua )  
[8342] ( ( move 2 + ul , 4 ; move 4 , 3 + 3 ) ; pen ul )  
[8343] ( move 0 , 4 ; move ua + 2 , 0 ; move ul - 4 , ul )  
[8344] ( move 2 , ua + ul ; move 4 , 0 - 2 ; move 3 , ua )  
[8345] ( move ul - ua , ul - ua ; move 3 + ul , 4 + ul )  
[8346] ( move 0 , ul ; move 3 , ua ; move 3 * 2 , 0 - ul )  | ( pen ul ; move 4 - ul , ul ; move 3 + 3 , 3 - 4 )  
[8347] ( move ua - 4 , 0 ; move 3 - ua , 4 ; move 0 , ua )  
[8348] ( move ua , 3 ; v0 = 2 ; move v0 , ul - v0 )  | ( move ua , ua + 3 ; move 2 , ua - ul ; move ul - 2 , ul )  
[8349] ( v0 = ua - 2 ; move ua , 4 ; move v0 , v0 )  
[8350] ( move ul , ul ; move 3 , 0 - 2 ; move 4 + ul , 0 )  
[8351] ( move 2 , 2 ; move 0 - ul , 3 ; move 2 + ul , ul )  
[8352] ( move 0 - 4 , 4 ; move 0 , 2 ; move ul , ua * ua )  
[8353] ( v0 = 4 * 2 ; move v0 , ua ; move ua , v0 )  
[8354] ( move 2 + ul , 2 ; move 2 , ul + ul ; move 2 , 3 )  
[8355] ( move 4 , 0 - 2 ; move 4 - ua , ul ; move ul , 0 )  
[8356] ( ( move ua , ua ; move 2 , 0 - 3 ) ; move ua , 0 )  | ( move 0 , ua ; move ua , ua * 4 ; move ua + 2 , ua - 3 )  
[8357] ( move ul , 2 + ul ; move 0 - ul , 3 ; move 2 , 3 )  
[8358] ( v0 = 4 + 3 ; move v0 , ua ; move ul , v0 )  
[8359] ( move 0 - 2 , 2 ; move ul , ul ; move 3 + ul , 3 )  
[8360] ( move ul - 3 , ul ; move 2 , ua + 2 ; move 4 , 0 )  
[8361] ( move 4 + 3 , 0 ; move 0 , ul ; move ul - ua , 4 )  
[8362] ( move 0 - ua , ua * 4 ; move ul , 4 ; move 2 , 0 )  | ( move ul , ul ; move 0 - ua , ua - ul ; move 3 , 4 )  
[8363] ( move ua , ua + 3 ; move 0 , 4 * 2 ; move 3 , ua )  
[8364] ( move ua , 0 - ul ; move 3 , 3 / ua ; move 0 , 3 )  
[8365] ( move 3 , 4 + ul ; move 2 , 0 ; move ul , ua - 2 )  
[8366] ( move ua , 2 ; move 2 - ua , 0 - 2 ; v0 = ul )  | ( v0 = 2 - ua ; move ua , v0 ; move v0 , 0 - 2 )  
[8367] ( move 4 , 0 - ul ; move 2 , ul ; move ua + 2 , 3 )  
[8368] ( move ul + ul , ua / 4 ; move ua - 3 , ua + ul )  | ( move 2 , ua / 4 ; v0 = 0 ; move 3 , ul / v0 )  
[8369] ( move 0 - 3 , 2 ; move ua , 3 - ul ; move ua , 3 )  
[8370] ( move 2 , 3 ; move 2 , ua - 4 ; move ua + 2 , ua )  
[8371] ( move 4 + 3 , 3 / 4 ; move 4 , ua - ul ; pen 4 )  
[8372] ( move 4 + 3 , 2 ; move ul , 2 ; move ua , ua + 2 )  
[8373] ( move ul - ua , ua / 4 ; move 2 + ul , ul + ul )  
[8374] ( move 3 + ul , 3 ; move 2 , 2 ; move ua , 2 + ul )  
[8375] ( pen 3 + ul ; move 4 + ul , 4 / 3 ; move 4 , 4 )  
[8376] ( move 4 , 2 ; move 0 - 2 , 4 ; move ua , ul - ua )  
[8377] ( move ul , 2 ; move 0 , ua / 4 ; move ua , 3 + 2 )  
[8378] ( move ua , 0 ; move ul , 4 ; move 0 - 4 , ua * 3 )  
[8379] ( move 2 , 0 ; move 4 , ua - 2 ; move 2 / ua , ul )  
[8380] ( move 3 + ul , 3 ; move ua , 0 - 4 ; move ul , 2 )  
[8381] ( move ua + 2 , 0 - 4 ; move 2 , 4 ; move ul , ul )  
[8382] ( move 3 - ua , ul ; move 0 , 2 ; move 3 + ul , 4 )  
[8383] ( move ua , ua - ul ; move 0 , 3 * 2 ; move 3 , 3 )  
[8384] ( move 2 , 4 * 2 ; move 3 , 2 ; move ua , ua + ua )  
[8385] ( move 0 - 3 , ua * ua ; move 3 , ul ; v0 = 0 )  
[8386] ( move 4 , 4 + 2 ; move 2 , 2 - ua ; move ua , ua )  
[8387] ( move 2 , 0 ; move ul , 3 - 4 ; move ul , 2 - ua )  
[8388] ( move 3 , 4 + ul ; move 2 , 4 + ul ; move ua , 0 )  
[8389] ( ( pen ua * 2 ; move ul , 3 ) ; move 3 , 4 * 3 )  
[8390] ( move 2 * 2 , ul ; move 2 , 3 ; move ul , 0 - ul )  
[8391] ( move ua , ul - 4 ; move 4 , ua - 2 ; move 2 , 0 )  
[8392] ( move 3 * 2 , ul ; move 2 , 2 + ul ; move ua , 2 )  
[8393] ( move 4 / 3 , 2 ; pen ul / 4 ; move ua , 3 * 3 )  
[8394] ( move 0 , ul ; move ua + ul , 0 ; move 4 , 4 * 3 )  
[8395] ( move ua , 2 ; move ua , 3 - 2 ; move ua , 4 - 2 )  | ( move ua , 2 - ua ; ( move ua , ul ; move ua , 2 ) )  
[8396] ( move ua - 2 , 0 ; move ul , 2 ; move 3 , 3 / ua )  
[8397] ( move ua , 0 ; move 3 , 4 - ua ; move 2 , 3 - ul )  
[8398] ( move ua - 4 , ua * 4 ; move ua - ul , ua - ul )  
[8399] ( move 3 , 4 + 2 ; move 2 , 2 ; move ul + ul , ua )  | ( move ul , 3 * 2 ; move ul + ul , ua ; move 4 , 2 )  
[8400] ( move 0 - ul , 3 ; move 0 , 4 / ua ; move 3 , ua )  
[8401] ( move 2 - ua , 3 ; move 2 , 3 - ua ; move ua , 3 )  
[8402] ( move ua , 2 ; move ul - 2 , 3 / 2 ; move ul , 0 )  
[8403] ( ( move 4 , 3 ; move ua - 2 , 4 ) ; pen ua / 3 )  
[8404] ( move ul , 0 ; move 3 * 2 , ul ; move 3 , ua + 3 )  
[8405] ( move ua - ul , ul + ul ; move ul + ul , 4 * 3 )  
[8406] ( v0 = ua + 4 ; move ul - v0 , v0 * v0 )  
[8407] ( move 3 + ul , ul - ua ; move ua - ul , ua / 4 )  
[8408] ( move 3 - ul , ua * ua ; move 2 , 0 ; move 3 , 4 )  
[8409] ( move ua , 0 ; move ua + 3 , 2 - 4 ; v0 = ul )  
[8410] ( move ua - 2 , 4 ; move 2 / ua , ul ; move 3 , 0 )  
[8411] ( move 3 , 0 ; move 3 , 4 ; move ul + ul , ua + 4 )  
[8412] ( move 4 + ul , ua ; move ua + 2 , 4 ; v0 = 0 )  | ( move ul , ua ; move 4 , ua ; move ua + 2 , 3 + ul )  
[8413] ( move 4 , ua ; v0 = 0 ; move ul - ua , 0 - 4 )  
[8414] ( move 4 , 4 ; move ua , 0 - ul ; move 2 + ul , 3 )  
[8415] ( move 4 , ua ; v0 = ul - 4 ; move v0 , v0 )  | ( move 4 , ua * 4 ; move 0 , ua ; move 3 , ul / ua )  | ( move 4 , ua ; v0 = ul / ua ; move 3 + v0 , v0 )  | ( ( move 4 , ua ; move 3 , ul / ua ) ; move 0 , 3 + ul )  
[8416] ( move 4 - 2 , 0 ; move ul , ul - 2 ; move 3 , ul )  
[8417] ( move 4 / 3 , ua * ua ; move 0 , 0 ; move 3 , ul )  
[8418] ( move 3 - ul , 3 / ua ; move ua + ul , ul / ua )  
[8419] ( move 2 , ua + ul ; move 4 , 0 ; move 4 + ul , 4 )  
[8420] ( move ua - ul , 0 - 3 ; move ul , 2 ; v0 = 2 )  
[8421] ( move 3 , ul ; move 2 , 0 - ul ; move ua , 3 * 3 )  
[8422] ( v0 = ua / 3 ; move v0 * v0 , ul + v0 )  
[8423] ( move ua , 2 ; move 2 , 2 - ua ; move ua , 2 / 4 )  
[8424] ( move ua + 2 , 3 / ua ; move 0 , 4 ; move 4 , ua )  
[8425] ( move 3 + ul , 0 ; move ua - 3 , 3 ; move 4 , ul )  
[8426] ( move ul , 0 ; move ul , 4 ; move 4 + 3 , ua - 2 )  
[8427] ( move ul , 2 ; move 3 , ul ; move 0 - 3 , 4 - ua )  
[8428] ( move 2 , 0 - ul ; move 4 - ua , 4 ; move ul , 2 )  
[8429] ( move ua , 3 + ul ; move 2 - 4 , ua ; move 3 , 2 )  
[8430] ( move ua , ul ; move 4 / 2 , 3 ; move ua + 3 , 0 )  
[8431] ( move ul - 3 , 2 ; move 0 - 4 , ua ; move ua , 4 )  
[8432] ( ( pen 4 ; move 4 , ua / 4 ) ; move 2 + ul , 3 )  
[8433] ( move 3 , 4 - ua ; move ua , 3 ; move 2 + ul , 3 )  
[8434] ( move 3 , ul / ua ; v0 = 4 ; move v0 , v0 )  
[8435] ( move ul , 0 ; move ul , 4 + 4 ; move 3 , 2 - ul )  
[8436] ( move 3 , ua ; move 2 , 2 ; move 3 - ua , ua * 4 )  
[8437] ( move 3 , ul + ul ; move 0 , 4 * 2 ; move 4 , ua )  
[8438] ( move 3 , 2 ; move ul , 0 ; move ua - ul , 4 / 2 )  
[8439] ( move ul , 2 ; move ul , 4 + 2 ; move ua , 4 + 3 )  
[8440] ( move 3 , ua - 4 ; move ul , 3 ; move 4 , 0 - ua )  
[8441] ( move 4 , 3 + ul ; move ul - 4 , 3 ; move 0 , ua )  | ( move 3 + ul , 4 ; v0 = 3 - ua ; move v0 , v0 )  
[8442] ( move 2 , 4 ; move 3 - ul , 0 ; move ua , ua / 3 )  
[8443] ( move 2 + ul , ul ; move 4 , 3 + ul ; move 3 , 2 )  
[8444] ( move 4 - ua , 2 ; move 4 , ua + 2 ; move ul , 3 )  
[8445] ( move 3 , 4 + 4 ; move ul , ua ; move 2 - ua , 2 )  
[8446] ( move 3 * 3 , ul - 2 ; move ul , 0 ; move 3 , ul )  
[8447] ( move 2 - ua , 4 ; move 0 , ua ; move 4 , ul / 2 )  
[8448] ( move ul - 4 , 4 / 2 ; ( pen ul ; move 4 , 2 ) )  
[8449] ( move ul , ua - 3 ; v0 = 0 ; move ua , 4 + 3 )  
[8450] ( move 3 , ua ; move 2 - 4 , ul ; move ua , 3 - 2 )  
[8451] ( move 4 , 4 + ul ; move 0 , 4 ; move 4 , ua + ua )  
[8452] ( move ua - ul , ua * 4 ; move 4 / ua , ul - ua )  
[8453] ( move 3 * 2 , 3 ; move ul - 3 , 0 ; move ul , ul )  
[8454] ( move ul , 2 ; move ul , 4 * 2 ; move 4 , 0 - ua )  
[8455] ( move 2 , 4 * 4 ; move ua , ua + 2 ; move ul , 2 )  
[8456] ( move ua - 3 , 2 ; move 0 , 4 ; move ua , ul / 3 )  
[8457] ( move ua , 4 + ul ; move 0 , 4 * 3 ; move 2 , ul )  
[8458] ( move 0 - 2 , ul ; move ul , 2 ; move ul , 2 / 4 )  
[8459] ( move ua / 3 , 0 ; move 2 , ul ; move ul - 2 , 4 )  
[8460] ( move 4 , 4 * 3 ; move ul , ua + ul ; move 2 , 0 )  
[8461] ( move 4 + ul , 2 ; move 0 - 3 , ul ; v0 = ua )  
[8462] ( move ua / 3 , ul / 4 ; move ua + ul , ul + ul )  
[8463] ( move 2 , ua + 4 ; move 4 , ua + 3 ; move ua , 4 )  
[8464] ( move 0 , 4 + ul ; move ul , 2 ; move 4 + ul , 4 )  
[8465] ( move 3 + ul , 2 ; move 2 , 4 + ul ; move 3 , ul )  
[8466] ( move 0 , ul ; move 4 + ul , ua / 3 ; move 3 , 2 )  
[8467] ( ( move 4 , 4 + ul ; pen 2 ) ; move 4 / 3 , ul )  
[8468] ( move ua , 0 ; ( move 4 + ul , 2 ; move ua , 2 ) )  
[8469] ( move ul - 3 , ul ; move 0 , ul / 4 ; move 3 , 0 )  
[8470] ( move 0 , 2 ; move 4 + ul , 3 ; move ul , ul / 3 )  
[8471] ( move 0 , ua + ul ; move ua , 3 ; move 4 , 4 / 3 )  
[8472] ( move 0 - 4 , ul - 4 ; move ua , 4 ; move 2 , ul )  
[8473] ( move 2 , 4 + 2 ; move 3 , ul ; move 4 , ul - ua )  
[8474] ( move 2 + 2 , ul ; move ul , 2 ; move ul - 4 , 4 )  
[8475] ( move 4 , ua ; move 0 , 4 / 3 ; move 2 + ul , ul )  
[8476] ( move ua , ua - 4 ; move 0 , 4 - ul ; move 3 , 4 )  
[8477] ( move ul + ul , 3 ; move 0 , ua ; move 3 , 4 / 3 )  
[8478] ( move 4 / 2 , 2 + ul ; move ul , 3 ; move ua , 2 )  
[8479] ( move ul + ul , ul ; move 3 * 3 , 2 ; v0 = 0 )  
[8480] ( move 3 , ul ; move 2 , 4 - ul ; move ua , 4 + 2 )  
[8481] ( move ua , 4 ; move ul , 0 ; move 4 * 2 , 4 - ua )  
[8482] ( move 3 / 2 , ua ; move 2 , 2 ; move ul , ua * 3 )  
[8483] ( move ul - 4 , 4 ; v0 = 0 ; move 2 , ua + ul )  | ( move ul - 4 , 4 ; v0 = ul + ul ; move v0 , ul )  
[8484] ( move ul , ul - 3 ; move 2 , 4 + ul ; move 2 , 3 )  
[8485] ( move ua + 3 , 4 * 4 ; move 0 , ul ; move ul , 3 )  
[8486] ( move 2 , 3 * 2 ; move 3 - ua , 3 ; move ul , ul )  
[8487] ( move ua - 4 , 0 ; move ul , 3 ; move 2 , 4 / ua )  
[8488] ( move 3 , 2 ; move 4 + ul , ua - 3 ; move ul , 3 )  
[8489] ( move ul , 4 + 3 ; move 2 - 4 , ul ; move ua , 2 )  
[8490] ( move ua , 4 ; move 4 + ul , 4 * 2 ; move 0 , ul )  
[8491] ( ( move 2 + ul , ul ; move 2 , 2 ) ; move ua , 2 )  
[8492] ( move 2 , 0 ; ( move 4 , 2 ; move ua + ul , ul ) )  
[8493] ( move 4 + ul , 2 ; move ul - 3 , 2 ; move ul , 3 )  
[8494] ( move ul , 4 * 3 ; move ul - 3 , 0 ; move ul , 2 )  
[8495] ( move 4 , 4 ; move 4 , ul ; move ua + 2 , ua + 3 )  
[8496] ( move 2 , ul / ua ; move 0 , 3 ; move 4 , ua / 2 )  
[8497] ( move 4 , ul ; v0 = ua / 4 ; move v0 , v0 )  
[8498] ( move 0 , ul ; move 2 , 4 ; move ua + ul , 4 * 4 )  
[8499] ( move 4 , ua ; move 4 + ul , 2 ; move ua , 3 / 2 )  
[8500] ( move 2 , ua - 3 ; move 3 , 3 + ul ; v0 = ul )  
[8501] ( move ua , ul ; move 2 - 4 , ul / 3 ; move 4 , 0 )  
[8502] ( move 4 , ul - 2 ; move 2 , ua * ua ; v0 = 2 )  
[8503] ( move 0 - 2 , ul ; move 3 / 4 , ua ; move 4 , ul )  
[8504] ( move ul / 4 , 2 ; move ua - 2 , ul ; move 2 , 3 )  
[8505] ( move 4 / 2 , ul ; move 2 , ua + 2 ; move ul , 4 )  
[8506] ( move 0 , ul / 2 ; move 4 , ul ; move 3 - ul , 3 )  
[8507] ( move 4 / 3 , ua * 4 ; move ua , ul ; move 2 , 0 )  
[8508] ( move 4 , ua * 2 ; move 2 , 4 ; move 3 + ul , ul )  
[8509] ( ( move ul , 2 ; move 2 , 2 ) ; move ua , ua + 4 )  
[8510] ( ( pen 4 ; move 2 / 3 , ul / 3 ) ; move 4 , ul )  
[8511] ( move ua , 0 ; move 3 / 2 , 4 * 3 ; move ul , ul )  
[8512] ( move 3 , ua + 4 ; move ul - 2 , 4 ; move 3 , ul )  
[8513] ( move 3 , 3 / ua ; move 3 , 2 ; move 3 + ul , ul )  
[8514] ( move 3 , 3 ; move ua - ul , 0 - 4 ; v0 = ul )  
[8515] ( move ul , ua ; move 4 , 3 * 2 ; move ua + 3 , 4 )  
[8516] ( move 2 * 2 , ua - 3 ; v0 = ul ; move ul , 2 )  | ( move ul , ua - 4 ; v0 = 0 ; move v0 - 4 , ul )  
[8517] ( move ul , ul ; move 4 * 2 , 0 - 4 ; move ua , 4 )  
[8518] ( move ua , ua * 3 ; move 4 , 4 ; move 2 , 2 - ul )  
[8519] ( move ul , 4 * 2 ; move ua , 4 ; move 3 + ul , 2 )  
[8520] ( move ua - 4 , 3 ; move ul - 3 , ul ; v0 = 0 )  
[8521] ( ( move 2 , 2 ; move 0 , ul / 2 ) ; move ua , ul )  
[8522] ( move ul , 2 ; move 3 + ul , 4 ; move ul , 3 * 2 )  
[8523] ( move ul - 4 , 3 / ua ; move ua , 2 ; v0 = 0 )  
[8524] ( move ua , 2 + ul ; move ul - 4 , 2 ; v0 = 3 )  
[8525] ( move ua , 2 ; move 2 , ul ; move 4 / 3 , ul - 2 )  
[8526] ( move ul / 2 , 4 + 3 ; move ul , 0 ; move 4 , ul )  
[8527] ( move 2 + ul , ua ; move 4 , 2 ; move 3 , 4 / ua )  
[8528] ( move ul , ua / 4 ; ( pen 4 ; move 3 , 4 / 2 ) )  
[8529] ( move 2 , ul ; move ua - 3 , ua ; move 4 , 3 * 3 )  
[8530] ( move 3 - ua , 0 ; ( move ul , 3 ; move ul , 2 ) )  
[8531] ( move ul , ul - 4 ; move 0 - 3 , 4 ; move 3 , ul )  
[8532] ( move ua , 3 ; move 4 , ua - 2 ; move ua / 4 , 2 )  
[8533] ( move ul , ul ; move 3 / 2 , 0 ; move 3 / 2 , ul )  
[8534] ( move ua , 3 ; ( move 0 - 2 , ul ; move ua , 4 ) )  
[8535] ( move 0 , 4 * 3 ; move ul , ua ; move ua , 2 / 4 )  
[8536] ( ( move 2 , ua - 3 ; move ua , 2 ) ; move ul , 2 )  
[8537] ( move ua , ul + ul ; move 4 + 3 , 2 ; v0 = 3 )  
[8538] ( ( move ul , 0 ; move ua , 3 * 2 ) ; move ua , 4 )  
[8539] ( move 4 , 4 ; move ul - ua , ul - 2 ; move 3 , 3 )  
[8540] ( move 2 - ul , 2 / 3 ; move ua , 2 ; v0 = ul )  
[8541] ( move ul , 0 ; move 2 , 2 / 4 ; move 4 , ul / ua )  
[8542] ( move ua , 3 ; ( move ul , 3 + ul ; move 2 , 2 ) )  
[8543] ( move 4 - ua , ul ; move ul , 3 ; move 4 - 2 , 3 )  
[8544] ( ( move ul , ua ; move 3 , 2 - ul ) ; move 2 , 2 )  
[8545] ( move 2 * 2 , ul ; move ul , 4 ; move ul , 2 - 4 )  
[8546] ( move 0 , ua ; ( move 3 , ua ; move 4 - ua , 4 ) )  
[8547] ( move ul , 4 + 2 ; v0 = ua ; move 3 - ua , 4 )  
[8548] ( move 3 , 3 / ua ; move ua + ul , 4 ; move 3 , 3 )  
[8549] ( move ua , 2 ; move 4 / 2 , 3 ; move ul + ul , 4 )  
[8550] ( move ua , ul ; move 2 , 4 * 2 ; move 4 * 2 , ul )  
[8551] ( move 4 , ua ; move 4 , 3 + ul ; move ul , 2 - 4 )  
[8552] ( move ul / 2 , ul ; move 3 , 0 ; move 3 , ua / 4 )  
[8553] ( move 2 , 4 ; move ul / ua , 2 ; move ua , 4 - 3 )  
[8554] ( move ua , 0 ; ( move ul , ul ; move 3 , 2 - 4 ) )  
[8555] ( move ua - 2 , ua ; ( move 4 , ua ; move 3 , 2 ) )  
[8556] ( ( move ua , ul ; move 0 , 0 ) ; move 3 , ul / 4 )  
[8557] ( move 4 , ua + 3 ; move 2 , ul ; move 3 / 4 , ua )  
[8558] ( ( move ua , 3 ; move 0 , 4 + ul ) ; move ua , 4 )  
[8559] ( ( move ua , ua ; move 3 , 3 ) ; move 2 + ul , 3 )  
[8560] ( move 4 , 2 ; move 2 , ua ; move ua / 3 , ul - 4 )  
[8561] ( ( move ua , 0 ; move 4 , 4 ) ; move 2 , ul + ul )  
[8562] ( move 2 , ul / ua ; move ul , 4 ; move 3 + 2 , 4 )  
[8563] ( move ua , 3 ; move ul / ua , 3 ; move 4 , 4 + 2 )  
[8564] ( move ul , 4 - ua ; move 4 , 2 ; move 3 - ua , 4 )  
[8565] ( move ua + 2 , ul / 2 ; move 3 , ul ; v0 = 3 )  
[8566] ( move 3 * 3 , ua ; move 3 + ul , 3 ; move 4 , ul )  
[8567] ( move 2 + ul , ua ; move 4 , 4 - ua ; move 4 , 4 )  
[8568] ( move 3 , ua ; ( move ul , 0 - ul ; move 2 , 4 ) )  
[8569] ( move 3 , 4 ; move ua - 3 , 3 ; move 4 , ul + ul )  
[8570] ( move 4 , 2 ; ( move ul , 3 ; move 0 - ul , ua ) )  | ( move 0 , ua ; move ua - 2 , 2 ; move ul - 2 , 3 * 2 )  
[8571] ( ( move 3 , ul ; move ua + 3 , 3 ) ; move 2 , ua )  
[8572] ( move 2 , ua ; ( move 3 - ua , 3 ; move ul , 2 ) )  
[8573] ( move ul , 3 ; move ua / 4 , 2 - 4 ; move 2 , ul )  
[8574] ( ( move 3 , 2 ; move ua , ua ) ; move ul / 2 , 2 )  
[8575] ( move ua , 3 * 3 ; ( move ul , 2 ; move 2 , ua ) )  
[8576] ( move 0 , ul + ul ; pen 0 ; move 3 + 2 , ul - 3 )  
[8577] ( move 4 , ua / 4 ; move ul , ua ; move 3 + 3 , 3 )  
[8578] ( move 3 - 4 , 2 - 4 ; move ua , ul ; v0 = ua )  | ( move ul - 2 , ua - 2 ; pen ul / 2 ; move ua , ul )  
[8579] ( ( move 0 , ul / 4 ; move ua , 2 ) ; move ul , 2 )  
[8580] ( move 4 + ul , 4 ; move ul , 4 ; move 2 , 4 + ul )  
[8581] ( move 4 , 3 ; move ua , 4 + 4 ; move ua , 4 - ul )  
[8582] ( ( move 3 - ua , 3 ; move ul , 4 ) ; move ul , 0 )  
[8583] ( move 4 + ul , ul / 4 ; move 4 , 3 ; move 0 , ul )  
[8584] ( move 4 , 4 + ul ; move 3 , ul ; move 3 , ua * 3 )  | ( move 4 , 4 + ul ; move 3 * 2 , ul ; pen ua * 3 )  
[8585] ( move 3 , 4 + 3 ; v0 = 3 - ul ; move ua , ul )  
[8586] ( move 4 , ua * ua ; ( move 4 , ul ; move 2 , 0 ) )  
[8587] ( move 2 , ua + 4 ; move ua / 3 , 4 ; v0 = ua )  
[8588] ( move 2 + ul , ul ; move 4 , 4 + 3 ; v0 = ul )  
[8589] ( ( move ua , 0 ; move 3 , 4 ) ; move ul - ua , 4 )  
[8590] ( move ua , ul / 4 ; v0 = ul ; move 2 , 3 + 2 )  
[8591] ( move 4 , ua - ul ; move 4 , 2 ; move ul - 3 , 4 )  
[8592] ( ( move 3 , 4 ; move ul - ua , 0 ) ; move 3 , ul )  
[8593] ( move 4 , 3 ; move 4 , 4 - ul ; move ua + ul , 3 )  
[8594] ( move 2 , 2 ; ( move 4 , ua ; move ua , ua - 4 ) )  
[8595] ( move ul , 3 + ul ; move 4 - ul , 2 ; move 4 , 4 )  
[8596] ( ( move 3 , 0 ; move ul , ul ) ; move 3 , 3 - ul )  
[8597] ( move ua , ul ; move 2 , 4 + 4 ; move 2 , ul / 4 )  
[8598] ( ( move 3 , 3 ; move ul - ua , 3 ) ; move 2 , ul )  
[8599] ( move 4 , ul ; move 2 , 4 / 3 ; move 2 / ua , ua )  
[8600] ( move 3 / 2 , ul ; ( move ua , 2 ; move 2 , ul ) )  
[8601] ( move 2 , ua * 3 ; move ul - 4 , ul ; move 4 , 4 )  
[8602] ( ( move 2 , ul / 2 ; move 2 , ua ) ; move ua , 4 )  | ( move 4 , ul / 2 ; ( pen ua ; pen ul ) ; move ua , 4 )  
[8603] ( move ua , ua ; ( move ul , 3 - 4 ; move 3 , 2 ) )  
[8604] ( ( move ul , ul ; move ul , 0 ) ; move 4 , 4 + 3 )  
[8605] ( move ul / 4 , ul ; move 4 + 4 , 4 ; move ul , 0 )  
[8606] ( move 3 , ul ; ( move 2 , ul ; move ul , 2 - 3 ) )  
[8607] ( move 4 + ul , 0 - ua ; pen 0 ; move 2 + ul , 4 )  
[8608] ( move ua + ul , 4 + 3 ; move 4 , 4 ; v0 = ul )  
[8609] ( move 3 , 2 ; move 3 , 4 ; move ul / ua , ul / 2 )  
[8610] ( move 3 , 4 ; ( move 3 , ua + 3 ; move ua , ul ) )  
[8611] ( move 0 - 4 , 4 ; ( move ul , ua ; move ua , 4 ) )  
[8612] ( move 4 + ul , 4 ; v0 = ua / 3 ; move ua , 2 )  
[8613] ( move 3 , ua ; ( move 4 , 4 ; move 0 - ul , ul ) )  
[8614] ( move ul , 3 / 2 ; move ua , 4 * 4 ; move ul , 2 )  
[8615] ( move 3 , 2 ; ( move ua , 2 ; move ul , ul / 2 ) )  
[8616] ( move 2 / ua , ul ; move 3 , 4 ; move 4 - 3 , ul )  
[8617] ( move ua , 3 * 2 ; ( move ua , 4 ; move ua , 3 ) )  
[8618] ( move ul - 3 , 2 ; move 3 , 4 * 4 ; move ul , ul )  
[8619] ( move 4 , 3 ; move ul / 4 , ua ; move 2 , ul / 2 )  
[8620] ( move 4 + ul , ua ; move 4 , ua - 4 ; v0 = 4 )  
[8621] ( move 4 , ul / 3 ; move ua , ua + 4 ; move 4 , 4 )  
[8622] ( move 3 , 3 / 4 ; move ul , ul ; move ua , 4 + 4 )  
[8623] ( move 4 + 4 , ul ; move 4 * 2 , 4 ; move ul , ul )  
[8624] ( move 4 , 4 + ul ; move 4 * 2 , ul ; v0 = ua )  
[8625] ( move 2 , 3 * 3 ; move 4 , ul ; move ua / 4 , ul )  
[8626] ( move 3 , 3 ; ( move ul , ul ; move 2 , 2 / ua ) )  
[8627] ( ( move 3 , ul ; move ua - 3 , 2 ) ; v0 = ua )  
[8628] ( pen 4 ; move 0 - ua , 0 ; move 3 + ul , 4 + ul )  
[8629] ( ( move ul , 2 ; move 4 , ul ) ; move 4 , 2 + ul )  
[8630] ( move 3 * 3 , ul ; move ul , ul ; move 4 , 4 * 2 )  
[8631] ( move 2 , ua ; ( move 3 , 2 / ua ; v0 = ua ) )  | ( move 2 , 0 ; v0 = 2 + ul ; move v0 , ul / v0 )  
[8632] ( move 3 + 2 , 2 - ua ; pen 0 ; move ua , ul / 2 )  
[8633] ( move 4 , 4 ; move ul - ua , ul ; move 3 , 4 * 3 )  
[8634] ( move 0 - ua , ua ; pen 3 - 4 ; move ul - 3 , 0 )  
[8635] ( move ua , 0 ; ( v0 = ul ; move 3 , ua / 3 ) )  
[8636] ( move ul , 2 ; ( move 2 - ua , 4 ; v0 = ua ) )  | ( move ul , 3 - ul ; move 2 - ua , 3 + ul ; move 3 , ua )  
[8637] ( move 2 , ua / 3 ; move 4 , ul ; v0 = 4 + ul )  
[8638] ( move ul , 4 ; ( move ua , 2 ; move 4 , ua + 4 ) )  
[8639] ( move 2 , ul / 2 ; move ua , 4 / 3 ; v0 = ua )  
[8640] ( move 3 - ul , ul ; move ua , 3 * 3 ; v0 = 4 )  | ( move 2 , ul ; ( v0 = 3 ; move ua , v0 * v0 ) )  
[8641] ( move ul , 0 ; ( move 3 , ul ; move 4 , ul - 4 ) )  
[8642] ( move ua , ul ; move 4 - 2 , 4 * 3 ; v0 = ul )  | ( ( move ua , ul ; pen ul ) ; ( pen ua ; move 2 , 4 * 3 ) )  
[8643] ( move 3 - 4 , 3 ; move 3 , ul ; move ul , ua / 4 )  
[8644] ( move ua , 4 * 4 ; move ul , 4 ; move 3 , ua / 2 )  
[8645] ( move 4 , 0 ; move 4 / 3 , ul / 3 ; move ul , ul )  
[8646] ( move 2 , 4 ; ( move ul , 2 - 3 ; move ul , ul ) )  
[8647] ( pen ua + 2 ; move 2 , 0 ; move 2 + ul , 4 / ua )  
[8648] ( move ul - 4 , 4 ; move 4 , 4 ; move ua , 4 - ua )  
[8649] ( move ul / 3 , 2 - ua ; pen 0 ; move 2 - ua , 2 )  
[8650] ( ( move 2 , ul / 2 ; move ul , 4 ) ; move 3 , ua )  
[8651] ( move ua - 3 , 4 + 2 ; pen 0 - ua ; move ua , 4 )  
[8652] ( move ul , ul / 2 ; move 4 * 2 , ul ; v0 = 3 )  
[8653] ( move 2 , 3 ; ( move 3 , ul ; move ul - 4 , ul ) )  
[8654] ( ( move 4 / 3 , ul ; move 4 , ul ) ; move 0 , ua )  | ( move 3 / 2 , ul ; move 3 + ul , ul ; v0 = ul - 4 )  
[8655] ( move ua , 2 / 4 ; move ul , 4 + ul ; v0 = 4 )  
[8656] ( move ul - 3 , 2 ; move 3 , ul / 4 ; v0 = ul )  
[8657] ( ( move ua , ul / 4 ; move 2 , ua ) ; move 3 , 3 )  
[8658] ( move 3 + 2 , ul ; pen 0 ; move ul + ul , 4 + 3 )  
[8659] ( move 4 + 2 , 3 ; move ua + ul , 3 - ul ; pen 0 )  
[8660] ( move 3 - ul , 2 + ul ; pen 0 ; move 2 + ul , 4 )  | ( pen 4 ; move 2 , 3 ; ( pen 3 - ua ; move 3 , 3 + ul ) )  
[8661] ( ( move 2 , ul ; move 2 , ul / 2 ) ; v0 = ua )  | ( v0 = 2 ; move v0 , ul ; move v0 , ul / v0 )  
[8662] ( move 4 - ua , ua * 2 ; pen 0 ; move 4 , ua + 2 )  
[8663] ( move 4 / 3 , ul ; ( move ua , ul ; move 2 , 2 ) )  
[8664] ( ( move 2 , ua * 4 ; move 4 , ul ) ; move ul , 2 )  
[8665] ( ( move 3 + 3 , ua ; move 4 , ul ) ; move ul , 4 )  
[8666] ( move 3 , ul - 3 ; move ul , ua / 4 ; v0 = 3 )  
[8667] ( move ul , 3 ; ( move ua , ul ; move 2 , 4 * 4 ) )  
[8668] ( move ua , ua * 3 ; ( move 4 , 4 ; move 3 , ul ) )  
[8669] ( move 3 , 4 ; ( move ul , 2 / 3 ; move ua , ul ) )  
[8670] ( move ul , ul / 4 ; move 4 + ul , 2 ; v0 = 4 )  
[8671] ( move 2 , 2 + ul ; pen 2 - 4 ; move 3 - ua , ua )  
[8672] ( move 3 / ua , ul ; ( move ua , 2 ; move 4 , 4 ) )  
[8673] ( ( move 3 + 2 , 0 ; pen 0 ) ; move ul , ua - ul )  
[8674] ( move 4 , 4 * 4 ; move ua , ul ; v0 = ul - 3 )  | ( v0 = 4 ; move v0 , v0 * v0 ; move ua , ul )  
[8675] ( move 2 , ul ; move ul - 4 , ul / 3 ; v0 = 4 )  
[8676] ( ( pen ul + ul ; move 2 , 0 ) ; move 0 - ua , 3 )  
[8677] ( pen 3 ; move 2 + ul , 2 + ul ; move 4 - ua , 2 )  
[8678] ( move ul - 3 , 4 ; move 4 , ul / 3 ; v0 = ua )  
[8679] ( move 2 , ul - 2 ; move 4 + 2 , ua + ul ; pen 4 )  
[8680] ( pen ua ; ( move 2 , ua ; move ua + 2 , 3 + 2 ) )  
[8681] ( move ul - 3 , 2 ; ( v0 = ul ; move 4 , ul ) )  
[8682] ( move ul - 4 , 4 + ul ; pen 0 ; move 4 , ua + 2 )  
[8683] ( move ul , 0 - 3 ; move 4 + 2 , ul - 3 ; pen ul )  | ( ( move 0 , ul ; move ua , 4 * 4 ) ; move ul , 4 / 2 )  
[8684] ( move 4 , 3 + ul ; pen 0 ; move ua - 2 , ul - 4 )  
[8685] ( move ul , ul ; ( move 3 , 4 ; move 3 , ul / 2 ) )  
[8686] ( pen 2 ; move 2 - ua , 4 ; move 4 + ul , 2 + ul )  
[8687] ( move 3 , ul + ul ; ( move 4 , ul ; move 4 , 4 ) )  
[8688] ( move ul , 3 + 2 ; pen 3 / ua ; move ua + 3 , 2 )  
[8689] ( move 3 - ua , ua + 2 ; move 2 - 4 , 4 ; pen ul )  
[8690] ( move 0 - 3 , ua ; pen ua ; move 4 * 2 , ul / 2 )  
[8691] ( move ua - 4 , 4 ; ( move 3 , ul ; v0 = ul ) )  
[8692] ( ( move 4 , 4 * 4 ; move 2 , ul ) ; move ul , ul )  
[8693] ( pen 4 ; move ua , 3 + ul ; move 4 * 2 , ua + 2 )  
[8694] ( move ul , 3 ; ( move 4 , ua / 4 ; move ua , 4 ) )  
[8695] ( ( move ul , 0 ; pen 0 - 2 ) ; move ua , 3 / ua )  
[8696] ( move ul , 3 ; ( move 4 , ul / 2 ; v0 = ua ) )  
[8697] ( move ul - 4 , 3 * 2 ; pen 0 ; move ua , 3 - ul )  
[8698] ( pen ul ; v0 = 4 + 4 ; move v0 , ua / v0 )  | ( pen 4 + ul ; v0 = 4 * 2 ; move v0 , ua / v0 )  
[8699] ( ( move 3 , ul ; move ul , ul ) ; move 4 , 2 / 4 )  
[8700] ( ( move ua , 3 / ua ; v0 = ul ) ; move 3 , 4 )  
[8701] ( move ua + ul , ua ; ( pen 0 ; move 4 , 3 + 2 ) )  
[8702] ( move 4 + 3 , 3 / ua ; pen 0 ; move ul , 4 + ul )  
[8703] ( pen ua ; move 3 , ul - 3 ; move ua - 4 , 2 - 3 )  
[8704] ( move 3 , 3 + ul ; move ua + 2 , ua / 3 ; pen 4 )  
[8705] ( move ul / 4 , ua * 4 ; pen 0 ; move ua + 2 , 3 )  
[8706] ( move 2 - ul , 3 ; pen ul ; move ua + 4 , 2 - 4 )  
[8707] ( move 3 , 3 / 4 ; move ua , 2 - ul ; pen 0 - ul )  
[8708] ( pen ul ; move 3 , 2 + ul ; move ul - 2 , 4 * 2 )  
[8709] ( move 3 , 0 ; pen ul / ua ; move 3 * 3 , ua + 4 )  
[8710] ( move ua , ua * ua ; pen 4 + 2 ; move 2 - 4 , 4 )  
[8711] ( move 3 , ua * 4 ; move 2 - ua , 3 ; pen 3 + ul )  
[8712] ( move 2 , ua ; move ul , ua + 2 ; move 0 - ul , 0 )  
[8713] ( move ul , ua + 3 ; pen ul / 4 ; move 4 , 0 - 3 )  
[8714] ( move ul / 2 , ua / 3 ; move 4 + 3 , ul ; pen 0 )  
[8715] ( move 2 , ua + ul ; move 3 , 4 * 3 ; pen ua / 2 )  
[8716] ( move ul / 2 , 0 ; pen 4 + ul ; move 4 * 2 , ul )  
[8717] ( pen ua + 4 ; move ul - ua , 4 * 2 ; move 4 , 2 )  
[8718] ( move 4 , ua * 3 ; move ua - 3 , 3 + ul ; pen 3 )  
[8719] ( pen ul ; move 2 , 4 + 4 ; move 3 + ul , 4 - ua )  
[8720] ( ( pen 2 ; move 3 - ua , 0 ) ; move ul , 4 + ul )  
[8721] ( ( move 3 , ul + ul ; move 0 - ua , 3 ) ; pen 3 )  
[8722] ( move 3 , ua ; ( pen ua - 3 ; move 2 - ua , 2 ) )  
[8723] ( pen ua + ul ; move 3 - ul , 2 ; move 4 , 2 / 3 )  
[8724] ( ( move ua - ul , 2 ; move ul - 2 , 4 ) ; pen 0 )  
[8725] ( move 3 , ua / 3 ; move 2 - 4 , ua + ul ; pen 4 )  
[8726] ( move 4 + ul , ua + 4 ; ( pen 0 ; move 3 , ul ) )  
[8727] ( move ua / 2 , 4 - ua ; ( pen 0 ; move 2 , ul ) )  
[8728] ( ( move ul , ua ; pen 0 ) ; move 4 + 4 , ua - 3 )  
[8729] ( move ua , 0 - ua ; move 0 - 3 , ul ; move ua , 2 )  
[8730] ( pen 4 * 3 ; move ua , 2 ; move ul + ul , 3 / 2 )  
[8731] ( move 4 + 3 , ua ; move 4 + ul , 4 + ul ; pen 4 )  
[8732] ( pen 3 + ul ; move 4 , ul - 2 ; move 3 , ul / 2 )  
[8733] ( ( move 2 , ua + ul ; move ua , 3 / 2 ) ; pen 2 )  
[8734] ( move ua - ul , 0 - ul ; move ua - ul , ul + ul )  
[8735] ( pen 4 + 3 ; move ul , 4 * 2 ; move 3 - ua , ul )  
[8736] ( ( move 3 , ul + ul ; pen 0 ) ; move 2 - 4 , ul )  
[8737] ( v0 = ua - ul ; move v0 , 0 ; move ua , v0 )  | ( move ua - ul , ua * 3 ; move ua , 0 - ul ; pen 0 )  
[8738] ( move 4 , ua / 2 ; move 4 / ua , ul - 3 ; pen 0 )  
[8739] ( move ua / 2 , 4 + 3 ; move ua / 3 , 2 ; pen ul )  
[8740] ( ( move 3 , ua / 2 ; pen ul - ua ) ; move 3 , 0 )  
[8741] ( ( move 3 , 4 ; pen 0 ) ; move ua / 3 , ua + ua )  
[8742] ( pen 3 ; move ul , ua - 4 ; move 2 + ul , 4 / 3 )  
[8743] ( move ul , 0 - ua ; move ul , ul ; move 0 - 2 , 2 )  
[8744] ( pen ua ; move 3 / 4 , ua + ul ; move 4 + 3 , 4 )  
[8745] ( ( move ua / 4 , 3 ; pen 0 ) ; move ua , 3 + ul )  
[8746] ( move ua , ul ; move 2 + ul , 0 ; move 3 , ua + 2 )  | ( move ua + ul , ul ; ( move 2 , ua ; move 3 , 2 ) ; pen ua )  
[8747] ( ( pen 2 ; move ua , 2 ) ; move 2 + ul , ua / 4 )  
[8748] ( move ua - ul , ua - ul ; move ul + ul , ua + 3 )  | ( ( move ua - ul , ua - ul ; pen 3 ; pen 4 ) ; move 2 , 3 )  
[8749] ( move ua + ul , 0 ; move ul , 4 + ul ; move 2 , 0 )  | ( move ua + ul , 0 ; move ul / ua , ul ; move 3 , 4 )  
[8750] ( move 3 + ul , 4 ; move ua , ua / 4 ; pen 4 + 3 )  
[8751] ( move 3 , 0 - ua ; move 2 , 2 ; move ua , ua + ul )  
[8752] ( pen ua + ua ; move 3 , 2 / 3 ; move ul , 4 / 3 )  
[8753] ( move 3 , 0 ; move 2 , 0 - ul ; move ul , ua + ul )  
[8754] ( move 4 , 3 * 3 ; move ua , 2 - ul ; pen 4 / ua )  
[8755] ( move 2 , ua - ul ; move ua , 0 ; move 2 , ul - 2 )  
[8756] ( move 4 - ul , 3 * 2 ; pen ul - 4 ; move 4 , ua )  
[8757] ( move 4 , 3 + ul ; pen 0 ; move ua / 4 , ul / 4 )  
[8758] ( move ua + 3 , ul ; move 0 , ua - 2 ; move 3 , ua )  
[8759] ( move 2 - ul , 0 ; move ua , 0 ; move ul - 3 , ul )  
[8760] ( move 3 / ua , 0 ; move 4 + 4 , ul / 4 ; pen ul )  
[8761] ( move 0 - 3 , ul ; move 2 - ua , ul ; move ul , 0 )  
[8762] ( move 3 , ua - ul ; move 0 - 3 , ul ; move 0 , ua )  
[8763] ( move ul , 3 ; move 0 , ul - 2 ; move ua + 2 , ua )  
[8764] ( move ul , 0 - ul ; move ua , 0 - ul ; move 2 , 3 )  
[8765] ( ( move ul - 2 , 4 / 3 ; pen 0 ) ; move ua , ul )  
[8766] ( move 4 + ul , ua ; move ua + ul , 2 ; move 0 , 2 )  | ( move 4 + ul , ua * 2 ; move ul , 3 - ul ; move ua , 0 )  
[8767] ( move ul + ul , ul - 2 ; move ul + ul , ua * ua )  
[8768] ( ( move ua , ul - 4 ; move ul , 3 + 2 ) ; pen 3 )  
[8769] ( ( move ua , 3 ; move ua - 2 , 4 * 2 ) ; pen ul )  
[8770] ( move 2 / ua , 0 ; move ua + 3 , ul ; move 0 , ul )  
[8771] ( ( move 2 , 4 + 2 ; pen 3 / ua ) ; move ua , ul )  
[8772] ( move ua , 4 ; move 0 , 2 + ul ; move ua + 2 , ul )  | ( ( pen 0 ; pen 2 ; move ua , 4 ) ; move ua + 2 , 4 )  
[8773] ( v0 = ua - 3 ; move v0 , v0 ; move ua , ul )  
[8774] ( move ua , ua ; move ua , 2 ; move 2 - 4 , ua + 2 )  
[8775] ( ( pen ua * ua ; move 4 + 3 , 2 ) ; move 4 , ul )  
[8776] ( move ul - ua , ua - 4 ; move ul - ua , ul + ul )  
[8777] ( move ua + ul , 0 - ul ; move ul , 2 ; move 3 , 2 )  
[8778] ( move ua + ul , 0 ; move 4 , ul + ul ; move 2 , 2 )  
[8779] ( move 0 , 4 + ul ; move ul , 2 ; move ua + 2 , ul )  
[8780] ( ( pen 2 ; move ul - 2 , ul ) ; move 4 * 2 , ul )  | ( move 0 - ul , ul ; move 4 * 2 , ul ; v0 = ul )  
[8781] ( move 2 , ul ; move ua + 2 , 4 ; move 0 - ua , ul )  
[8782] ( v0 = 4 + ul ; move v0 , ua ; move ua , v0 )  
[8783] ( move 0 - 3 , ul / 4 ; move ul , ul ; pen 4 * 4 )  | ( pen ua - ul ; move ul - 4 , ul / 4 ; move ul , ul )  
[8784] ( move 2 + 2 , 0 ; move ua , 3 - ul ; move ul , ul )  
[8785] ( ( move 3 / ua , 4 + 3 ; move ua , 2 ) ; pen ul )  
[8786] ( ( move 3 , ua + 4 ; move ul , 4 * 2 ) ; pen ua )  
[8787] ( move ua - 4 , 2 ; move 0 - ul , 0 ; move ul , ul )  
[8788] ( move 0 , 0 ; move ua , 4 / ua ; move ua , 3 + ul )  
[8789] ( move 2 , ul ; move 0 - ul , 4 - ua ; move ul , 0 )  
[8790] ( move ul , 4 / 3 ; pen ua + 3 ; move ua , 4 * 4 )  
[8791] ( ( move 4 / 2 , ul ; pen 0 ) ; move 4 + ul , ul )  | ( move 2 , ua + ul ; ( pen 0 - ua ; move 3 + 2 , ul ) )  
[8792] ( move 3 + ul , ua ; move ua + ul , 2 ; move 2 , 2 )  
[8793] ( move 0 , 0 ; move ua + 4 , ul ; move ul - 3 , ul )  
[8794] ( ( pen ul ; move 4 + ul , ul ) ; move 2 , 3 * 2 )  
[8795] ( move 3 , ul ; move 0 , ul / ua ; move 0 - 3 , ua )  
[8796] ( move 0 , ua + ul ; move 4 , ul ; move ua + 4 , 2 )  
[8797] ( move ua , ua ; move 2 , ua + ul ; move 4 + 2 , 3 )  
[8798] ( move 0 - 3 , 4 ; move ua - ul , ul ; move 0 , ul )  
[8799] ( move 2 , 2 ; move ua , 2 ; move 3 + ul , ua * ua )  
[8800] ( ( move ua - 4 , 4 ; pen ua ) ; move 3 - ua , 4 )  
[8801] ( move 2 - ua , 2 ; move ua , ul ; move ul , 0 - 4 )  | ( move 2 - ua , 2 - ua ; move ua , ul ; pen ua / 4 )  | ( ( move 2 - ua , ul + ul ; pen ua ) ; move ua , ul )  
[8802] ( move 2 , 0 ; move 2 - 3 , ul + ul ; move ul , ul )  
[8803] ( ( move 2 , ul ; pen ul / 4 ) ; move 2 * 2 , ua )  
[8804] ( move ua + 2 , ua ; move ul - 3 , 0 ; move ul , 4 )  
[8805] ( move 2 / 4 , 3 + ul ; pen ul / 4 ; move ua , 4 )  
[8806] ( move 2 , ul ; move 3 , 0 ; move ul - ua , ul - 2 )  
[8807] ( move ul , ua + 4 ; move 0 , 3 ; move ua + ul , 3 )  
[8808] ( move 2 , ul ; move ua + 2 , 3 ; move 2 , ua - ul )  
[8809] ( move ua , ul ; move 0 - ua , ul - 2 ; move 4 , 2 )  
[8810] ( move ul , 2 + ul ; move 4 - ua , 2 ; move ul , 0 )  
[8811] ( move ua - ul , 3 ; move 2 - ua , ul ; move 3 , 0 )  
[8812] ( move ua , ua ; move 2 - 3 , 0 - ul ; move 3 , ul )  
[8813] ( move 2 + ul , ua ; move 2 , 3 ; move ua , 3 + ul )  
[8814] ( v0 = ul / 2 ; move ua , v0 ; move ua , v0 )  
[8815] ( move ua / 2 , ul ; ( pen ul - 4 ; move 3 , 2 ) )  
[8816] ( move 4 , 0 ; move 4 , ua * ua ; move ua , ua + 2 )  
[8817] ( move ul , 0 - ul ; move 2 / 3 , 0 ; move ua , ul )  
[8818] ( move ul - 3 , ul ; pen 4 / 3 ; move ua - 4 , 4 )  
[8819] ( move 2 , 4 ; move 0 , ua * ua ; move 3 - ua , ua )  
[8820] ( move ul , 0 ; move 2 - 4 , ua ; move 2 , ua * ua )  
[8821] ( move 2 , 2 ; move ul , 4 + ul ; move ua , ua + 2 )  
[8822] ( move 3 , ua + ua ; move ul , 3 ; move ul - 3 , 0 )  
[8823] ( v0 = ul / ua ; move ua , v0 ; move 2 , v0 )  
[8824] ( move 0 , ul ; move ul , 3 - ul ; move 2 - ua , 2 )  
[8825] ( move ua , 4 + 2 ; move 0 , ul ; move 3 - ua , ul )  
[8826] ( move 0 - 4 , 0 ; move ul - ua , 3 ; move ul , ul )  
[8827] ( move ua , ul ; v0 = 4 + ul ; move v0 , v0 )  
[8828] ( move 0 , ua + 4 ; move 2 , ul ; move ua , 2 / ua )  
[8829] ( move 2 , 4 + ul ; ( move 3 , ul - 4 ; pen ul ) )  
[8830] ( ( move 3 , 4 ; v0 = 3 ) ; move 3 , 4 / v0 )  
[8831] ( move ua , ua + ua ; move 3 - ua , 4 ; move 4 , 0 )  
[8832] ( ( move ul - ua , ul ; pen 3 ) ; move 2 , 4 * 3 )  
[8833] ( move ua , ua - 3 ; move 0 , ul ; move 3 , 4 - ua )  
[8834] ( move ul , 3 ; move 0 - 3 , ua ; move ua + ul , 4 )  
[8835] ( move 3 - 2 , ua ; move ua + 3 , ul ; move ul , 2 )  
[8836] ( move 0 , 2 / ua ; move ua - 3 , 2 ; move ul , ul )  | ( move ua - 3 , ua - 4 ; v0 = ul ; move v0 , v0 )  
[8837] ( move 4 + ul , 4 ; ( pen 0 ; move ul , ul / 4 ) )  
[8838] ( move 4 - ul , ul ; ( pen ua ; move 2 , 4 * 3 ) )  
[8839] ( move ua + 2 , 0 ; move ul - 4 , ul ; move ul , 3 )  
[8840] ( move 2 , ul / 3 ; ( move ul - ua , 4 ; pen 3 ) )  
[8841] ( move 0 , ul / 2 ; move 0 , ul ; move 4 + ul , ul )  | ( v0 = 4 + ul ; ( pen 3 ; move v0 , v0 / 2 ) )  
[8842] ( move ul , 0 ; move ua , 3 + 3 ; move ua , ul - 4 )  
[8843] ( move 0 , ul ; move 4 , ua + 4 ; move ua , ua - 3 )  
[8844] ( pen ul ; ( move ua , ul - 4 ; move 3 , 4 * 2 ) )  
[8845] ( move 0 - ua , 3 + ul ; move 2 , ul ; v0 = ua )  | ( move 0 - ua , ua + 4 ; move ua / 3 , ul ; v0 = 4 )  | ( move 4 - ua , 3 + 2 ; move ua , ua - ul ; move 0 , ua )  | ( move 0 - ua , 3 + ul ; ( move 2 , ul ; pen 0 ) ; pen ul )  
[8846] ( move 4 / ua , 0 ; move ul , 4 + ul ; move ua , 0 )  
[8847] ( move ua , ul ; move 2 , 3 - ua ; move 2 , 3 + ul )  
[8848] ( ( move ua , 0 ; move 0 - ua , ul ) ; move 2 , ul )  
[8849] ( move 0 , 2 / ua ; move ua , ua - ul ; move 4 , 2 )  
[8850] ( move ua + 2 , 0 - ua ; move ua , 4 ; v0 = ul )  | ( move ua + 2 , ua ; pen ul + ul ; move ua , 4 - ua )  
[8851] ( move ua , 4 + ul ; move 2 , ul ; move 2 + ul , 2 )  
[8852] ( move 2 + ul , 0 ; move ul - 4 , ul ; move 2 , ul )  
[8853] ( move ul - 4 , 0 ; move ua , ua + 4 ; move ua , 3 )  
[8854] ( move ul , 0 ; move ua - 2 , 3 ; move ul , 4 + ul )  
[8855] ( move 3 - 4 , 0 ; move 2 , ul ; move ul , ua + ul )  
[8856] ( v0 = ul / 2 ; move ul , v0 ; move ua , v0 )  
[8857] ( move 4 , 0 ; move 2 , ul ; move ul + ul , ul - 2 )  
[8858] ( move ua - ul , 3 ; move 0 , ul ; move 2 , 4 + ul )  
[8859] ( move ul , ua ; move ua + 3 , 2 - ul ; move 3 , 2 )  
[8860] ( move 0 , ul - 2 ; move ul - ua , ua ; move 4 , 3 )  
[8861] ( move 4 , 0 ; move ul , ua + 4 ; move ua + ul , 3 )  | ( move 4 , ua + ua ; move ul , 4 ; move ua + ul , 3 )  
[8862] ( move ua , 0 ; move ul + ul , 4 ; move 3 - ul , 2 )  
[8863] ( move ua , 2 ; move ul + ul , 4 + ul ; move 2 , 2 )  
[8864] ( move ua , 4 ; move 2 , ua + ul ; move 2 , 3 + ul )  
[8865] ( move ua , 2 ; move ua / 2 , 3 ; move ua , ua + 3 )  
[8866] ( move ua + 3 , ul ; move ua + 2 , 3 ; move ua , 4 )  
[8867] ( move 0 - ul , 2 ; move 4 - ua , ul ; move ul , 2 )  
[8868] ( move 2 , 0 ; move 2 / ua , ua ; move ua , 3 / ua )  
[8869] ( move ul , ua * ua ; move 0 - 2 , ul ; move 2 , 4 )  
[8870] ( move ul , ul ; move 3 , ua + 2 ; move ul , 3 + 2 )  
[8871] ( ( move 2 / 4 , ul ; pen ul ) ; move ua , 3 * 2 )  
[8872] ( move ua + 2 , ua ; move 4 - ua , ul ; v0 = 0 )  
[8873] ( move 4 , ua - ul ; move 4 , ua + 2 ; move 0 , ul )  
[8874] ( move ul , 0 ; move 4 + 3 , 3 ; move ul - ua , ul )  
[8875] ( move ua + ul , ul ; move 2 , ua - 2 ; move 3 , 4 )  
[8876] ( move 4 + ul , ua ; ( pen 3 ; move 4 / 3 , ul ) )  
[8877] ( move 0 , ua * ua ; move 3 , 2 ; move ua / 3 , ul )  
[8878] ( ( move ua - 3 , 0 ; move ua , ul ) ; move ul , 0 )  
[8879] ( move ua , 0 ; move 4 / ua , ua + ul ; move 3 , 3 )  
[8880] ( move ul , 0 ; move 2 / 4 , 2 ; move ua + ul , ul )  
[8881] ( move 4 , 0 ; move ua - 4 , ul ; move ua , ua + 4 )  
[8882] ( move 2 , 0 ; move 4 , 3 / ua ; move ul - ua , ua )  
[8883] ( move 3 , 2 ; move ul - ua , 2 - 3 ; move ua , ul )  
[8884] ( move 3 , ua + 2 ; move ul , 3 ; move 3 , ua - ul )  
[8885] ( move 2 , ua ; move ul , 2 - ul ; move 3 , 3 - ua )  
[8886] ( move ua , ul ; v0 = ua / 4 ; move v0 , v0 )  
[8887] ( move 0 - ua , 4 ; move ul , ua ; move 4 + ul , 3 )  
[8888] ( move 0 , ul ; move ua , ul ; move 3 + ul , 2 / 3 )  
[8889] ( move ul , 0 ; move 0 , 4 ; move ul - ua , ul / 3 )  
[8890] ( move 4 - ua , ua + ul ; move 4 , 2 ; move ua , 2 )  
[8891] ( move ua , ul - 2 ; move 3 , 0 ; move ul , ul / 2 )  
[8892] ( move ul , ul ; move 3 , ul - 3 ; move ua + 2 , 2 )  
[8893] ( move ua - 3 , ul / ua ; move 0 , ua ; move 2 , 4 )  
[8894] ( move ua - 3 , ua ; move ua , ua - 2 ; move 3 , 4 )  
[8895] ( move 3 , ul ; move 4 + ul , 2 / ua ; move 0 , ua )  
[8896] ( move 2 , ua ; move 4 - ua , ua + ul ; move 2 , 4 )  
[8897] ( move 3 , ua / 4 ; move 0 , ua ; move ua , 3 + ul )  
[8898] ( move 4 , ul ; move 0 - ua , 4 + ul ; move ul , 2 )  
[8899] ( pen 3 * 2 ; ( move ul , ul / ua ; move 4 , 3 ) )  | ( move 2 / ua , ua ; move ul , ul / ua ; move 4 , 3 - ua )  
[8900] ( move 2 , 2 ; move 4 + ul , 3 + ul ; move ul , ul )  
[8901] ( move ul - 3 , 4 ; move ul - 3 , ul ; move 0 , ua )  
[8902] ( move ul , 3 ; move 4 + ul , 4 + ul ; move ul , 0 )  
[8903] ( move ua , ul ; move 2 - 3 , ua * ua ; move 3 , 3 )  
[8904] ( move 4 * 2 , ua ; move ul , ua * 2 ; move ua , 2 )  
[8905] ( move ua - ul , 2 ; move ua , 3 ; move 4 + 3 , ul )  
[8906] ( move ul / ua , 0 ; move 2 + ul , ua ; move 4 , 4 )  
[8907] ( move ua - 3 , 4 ; move ul , 0 ; move 4 , ul + ul )  
[8908] ( move 0 - 3 , ua * ua ; move ul , 3 ; v0 = ua )  
[8909] ( move 3 , 0 ; move ul , ul / ua ; move 2 + ul , 4 )  
[8910] ( move ul , ua ; move 4 , 3 + 2 ; move ul - 2 , ul )  
[8911] ( move 3 , 3 ; move ul / ua , 2 ; move ul , ua + 2 )  
[8912] ( move ua , ul + ul ; move ul , 4 + 3 ; move 3 , 2 )  
[8913] ( move 2 , 4 ; move 2 - ua , 4 ; move ua , ul - ua )  
[8914] ( move 3 , ua ; move 0 - 3 , ul ; move 3 , ul / ua )  
[8915] ( move 3 , ua * 4 ; move 0 - ul , ul ; move ua , 3 )  
[8916] ( move ul , ua ; move 0 , 4 ; move 4 + ul , 4 + ul )  
[8917] ( move 2 , ua + ul ; move 3 , 2 ; move ul , 3 / ua )  
[8918] ( move ul , 4 ; move ua + 2 , ua ; move ul , 3 * 2 )  
[8919] ( move ul - 4 , 0 ; move 2 * 2 , ul ; move ul , ul )  
[8920] ( move 3 , 0 ; ( move ua , ul ; move 2 , ua + ul ) )  
[8921] ( move 3 , 0 ; move ul , ul / 2 ; move ul , ul - 2 )  
[8922] ( move ua , 2 - ul ; move 3 , 2 ; move ul / 2 , ua )  
[8923] ( move ua , 2 ; move ua , 3 ; move 4 * 2 , ul + ul )  
[8924] ( move 3 , 4 ; move ul , ul - 4 ; move ua + ul , 0 )  
[8925] ( move 3 , ua + ul ; move 2 - 4 , ul ; move ul , 2 )  
[8926] ( move ua + 2 , 3 ; move 3 , ua * ua ; v0 = ua )  
[8927] ( move ua , ua ; move 2 - ul , 3 ; move ua , 3 - 4 )  
[8928] ( move 2 , ul - 2 ; move ua / 3 , ul ; move ua , 2 )  
[8929] ( move ul / ua , 4 + 3 ; move 2 , ua ; move ua , 2 )  
[8930] ( move 2 , 3 ; move ul , ul ; move 3 + ul , 2 - ul )  | ( move 2 , 3 - ua ; move ul , ua + ul ; move 4 , ul )  
[8931] ( move ua + ul , 2 - 3 ; move 3 , 4 ; move ul , ua )  
[8932] ( move ua , 0 ; move 3 + ul , ul ; move 4 / 2 , ul )  
[8933] ( move ua , ua * ua ; move ul , 4 * 2 ; move 0 , 4 )  
[8934] ( move ua / 4 , 3 ; move ul , 0 ; move 2 , ul - ua )  
[8935] ( move 0 , ul / 4 ; move ua + ul , 4 ; move ua , 2 )  
[8936] ( move ua , ul ; move 2 - ul , 4 + 3 ; move 2 , ul )  | ( move ua , ul ; ( move ul , 4 + 3 ; move 2 , ul ) )  
[8937] ( move ua + ul , 2 ; move 3 - 2 , ul ; move 4 , ul )  
[8938] ( move 2 + ul , 4 ; move ul , 2 + ul ; move 3 , ul )  
[8939] ( move 3 , 0 ; move ua - 4 , ul - ua ; v0 = ua )  
[8940] ( move 3 - ua , ua * 4 ; move ul , 4 ; move ua , 0 )  
[8941] ( move 0 - 3 , ul + ul ; move ua , 4 ; v0 = ua )  
[8942] ( move ua , ua ; ( move ua , 2 ; move ua + 3 , 2 ) )  
[8943] ( move ul , ul ; move 4 , ua + ul ; move 2 , 4 + 2 )  
[8944] ( move ua , ul ; move ua - 3 , ua + 3 ; move 4 , 3 )  
[8945] ( move ul , ua - 3 ; move ua + 4 , 2 ; move 3 , ul )  
[8946] ( move ua / 4 , 0 ; move 4 , ua + ul ; move ul , 2 )  
[8947] ( move 4 , ua ; move ua , 3 - ul ; move 3 + 2 , ul )  
[8948] ( move ul , 3 - ua ; move 0 , 3 ; move ua , ua / 4 )  
[8949] ( move ul , 3 / ua ; move 2 + 2 , 2 ; move ul , ul )  
[8950] ( move 3 , 2 / ua ; move ul , ul + ul ; move 2 , 2 )  
[8951] ( move ul , ua + ul ; move 4 , 4 * 2 ; move ul , 0 )  
[8952] ( move ua / 3 , ua ; move ua - 2 , ul ; move 2 , 3 )  
[8953] ( move 2 , 3 ; move ul / ua , ua ; move 3 + ul , 2 )  
[8954] ( move ul , 0 - 3 ; move ua / 3 , 2 ; move ul , ul )  
[8955] ( move ul , 4 + ul ; move ul , ua + 2 ; move 4 , 3 )  
[8956] ( move 3 , ul ; move ul , 4 + ul ; move 3 , 2 + ul )  
[8957] ( move 3 + 3 , ul ; move 2 , ul ; move 4 + ul , ul )  
[8958] ( move ul , ul ; move 4 , 2 * 2 ; move 3 , ua + ul )  
[8959] ( move ul , ul - 3 ; move 4 * 2 , ul ; move 0 , ul )  
[8960] ( move ul , 4 ; move ul , 4 + 2 ; move ua , ul - 2 )  
[8961] ( move 4 , 0 ; move 4 - ua , ua ; move ul , ul / 2 )  
[8962] ( move ul + ul , 4 * 2 ; move 4 , ul ; move ul , 0 )  
[8963] ( move ul - 4 , 0 ; move 3 , 4 + ul ; move ul , ul )  
[8964] ( move 3 , ul / ua ; move 3 , 2 ; move ul - ua , 2 )  
[8965] ( move ua , 3 - ua ; move ul , 3 + 3 ; move ul , 4 )  
[8966] ( move 2 , ua ; ( move 2 , 2 ; move ul - ua , ua ) )  
[8967] ( move 3 , 4 ; move 4 , ua + ua ; move ua + ul , 4 )  
[8968] ( move ul , 2 ; move 4 , ua + ul ; move ua - 4 , 3 )  
[8969] ( move ua , ul ; move 3 - ua , 4 + 2 ; move ul , 4 )  
[8970] ( move 3 + ul , 3 ; move ul / 4 , ul ; move ua , 0 )  
[8971] ( move 4 , 2 ; move ul , 4 - ua ; move ua + ul , 3 )  
[8972] ( move ua + ul , ul ; move ul , 4 * 3 ; move 2 , 2 )  
[8973] ( v0 = 3 ; move 2 , v0 + v0 ; move 4 , v0 )  
[8974] ( move ul , 0 ; move ul - 3 , ul - ua ; move 4 , 4 )  
[8975] ( move ua , ua ; move ua , 3 ; move ul - 3 , 4 * 2 )  
[8976] ( move ua , ul ; move ua - ul , 4 ; move 2 - 4 , 2 )  
[8977] ( move ua , 4 ; move 2 / ua , ul ; move 0 - 4 , ul )  
[8978] ( move ul , ua ; move ua , ul ; move 4 - 2 , 3 * 2 )  
[8979] ( move ul , 2 ; move 3 , ua ; move ua + 4 , ul - 4 )  
[8980] ( move 4 + ul , 4 - ua ; move ul , 3 ; move ua , 2 )  
[8981] ( move 4 , ul ; move ua - ul , 2 - ua ; move 4 , 2 )  
[8982] ( move ua , 3 ; move 3 , ul - 2 ; move 4 - ul , ua )  
[8983] ( move 2 , ua * ua ; move 2 , ul ; move 4 , ul - 3 )  
[8984] ( move 3 , ua - 2 ; move 4 , ua ; move ul , 4 + ul )  
[8985] ( move ua , ul / 4 ; move ua , 4 ; move 0 , 2 - ul )  
[8986] ( move 4 - ul , 4 ; move ua , 2 ; move 2 , ul - ua )  
[8987] ( move 3 + ul , ua - 3 ; move ul , 3 ; move ua , 4 )  
[8988] ( move 2 , ua ; move ua , 4 * 2 ; move 2 , ul / ua )  
[8989] ( move ua , 2 / ua ; move 4 , 2 + ul ; move ua , 4 )  
[8990] ( move ua , 3 - ua ; move 4 , 2 ; move 4 - ul , ua )  | ( ( pen ua * 4 ; move ua , 3 ) ; move 3 , 2 ; move 4 , 0 )  
[8991] ( move ul , ua - 4 ; move ua + 2 , ul ; move 4 , 3 )  
[8992] ( move ul , ul ; move 4 , 3 - ul ; move ua - 2 , 2 )  
[8993] ( move 3 / ua , 2 ; move ul , 2 + ul ; move ua , 4 )  
[8994] ( move 2 , ul ; move ua , 4 ; move 4 - ul , ua - 2 )  
[8995] ( move ua - ul , ua - 4 ; move 0 , 4 ; move 4 , ul )  
[8996] ( move ul - 4 , 3 ; move ua , ul ; move 4 , ua + 2 )  
[8997] ( ( pen 4 ; move 3 , ul ) ; move 4 / 2 , ul / ua )  
[8998] ( move 3 , ul ; move ul , 3 + ul ; move 2 , ua / 2 )  
[8999] ( move 3 - 4 , ua ; move 3 + ul , ul ; move 2 , ul )  
[9000] ( move 2 , ua ; move ul / 2 , 4 + ul ; move 2 , ul )  
[9001] ( move ul , 4 - ua ; move 2 , 4 ; move 2 , ua - ul )  
[9002] ( move ua , ul ; move 3 , ul ; move 2 + ul , 4 * 2 )  
[9003] ( move ua , 0 ; move ul / 4 , 4 + ul ; move ua , 3 )  
[9004] ( move 3 - ua , ul / 3 ; move ul , ul ; move 3 , 0 )  
[9005] ( move 3 , ua + ul ; move 3 , 2 ; move ul , 3 / ua )  
[9006] ( move ul / 3 , ul ; ( move 4 + 4 , 4 ; pen ul ) )  | ( ( pen ua ; move 2 / ua , ul ) ; move 2 , 4 ; move ua , 0 )  
[9007] ( move 3 + ul , 2 ; move ul , ul ; move 2 , 4 - ul )  
[9008] ( move ul - ua , ul ; move 0 , 3 ; move ul - 4 , 4 )  
[9009] ( ( move 0 - ul , 3 ; move ua , ul ) ; move 2 , ua )  
[9010] ( move ul , 3 ; move ul - 2 , 3 + ul ; move ua , 4 )  
[9011] ( move 0 , 4 ; move ul , 3 / ua ; move 3 + ul , ul )  
[9012] ( move 4 , ul + ul ; move 3 - ua , 2 ; move 3 , ul )  
[9013] ( move 3 , 3 ; move ua , 4 ; move ul - 3 , ua + ul )  
[9014] ( move ua + 2 , ul ; move 4 - ua , ul ; v0 = 2 )  
[9015] ( move ua , 2 ; move 2 , 2 / ua ; move ul , ua * 4 )  
[9016] ( move ul , ua - 3 ; move ul , 2 ; move ua , 4 * 3 )  
[9017] ( move ul , 3 ; move ul , ua * 2 ; move 3 - ua , 4 )  
[9018] ( move 3 , ua * 4 ; move ua , ul ; move 3 , 3 + ul )  
[9019] ( move 4 - ul , ul ; move 4 , 0 ; move 4 , ul + ul )  
[9020] ( move 2 - 4 , ua + ul ; move 4 , ul ; move 3 , ul )  | ( move ul - 3 , 2 - ul ; move 4 , ua + ul ; move 3 , ul )  
[9021] ( move 0 - 4 , ua ; ( move ul , ua ; move 2 , ul ) )  
[9022] ( move ul + ul , ul ; move ul , 3 + 2 ; move 4 , 4 )  
[9023] ( move 4 , 4 + ul ; move ua , ul ; move 3 , ul - 2 )  
[9024] ( move 2 , ul / 3 ; move 2 , 3 + ul ; move ul , ul )  
[9025] ( move 3 + ul , ua / 4 ; move ua , 2 ; move ul , 3 )  
[9026] ( move 3 , 2 ; move 4 + ul , ua - 4 ; move ul , ul )  
[9027] ( move 2 , ua + ul ; ( move ul , 2 ; move 2 , ul ) )  
[9028] ( move 4 - ul , 3 ; move 2 , ul ; move 3 + ul , ul )  
[9029] ( move 3 , ua ; move 2 / ua , ul ; move 3 - 4 , ua )  
[9030] ( move ul / ua , ua + 4 ; move ul , 4 ; move 4 , 0 )  
[9031] ( ( move ua , 0 ; move ua - ul , 4 ) ; move ua , 3 )  
[9032] ( ( move ua , 2 ; move 2 , ua ) ; move ul , ua + 4 )  | ( ( move 2 , 2 ; pen ul ) ; move ua , ua ; move ul , 4 )  
[9033] ( v0 = 4 + 2 ; move 4 , v0 ; move v0 , v0 )  
[9034] ( move ua - ul , 3 * 2 ; move ul , 2 ; move 4 , ul )  
[9035] ( move ul , 4 ; move ua , 4 ; move 3 - ua , ul - 2 )  
[9036] ( move ua , 4 ; move 4 + 3 , 3 ; move ul , ul + ul )  | ( move ul , 3 ; move ua , ul ; ( move ua , 3 ; pen ua ) )  | ( ( move ul , 3 ; move ua , ul ) ; move ua , 3 ; v0 = 4 )  
[9037] ( move 0 , 4 + ul ; move ul , ul ; move 3 , ua / 4 )  
[9038] ( move ul - ua , 2 ; ( move 0 , 3 ; move ul , ul ) )  | ( ( pen ul ; move ul - ua , ul + ul ) ; move ul , 4 )  | ( move ul , 3 ; v0 = ua - ul ; move v0 , ua + v0 )  
[9039] ( move 4 , ua * 2 ; move ua , ul ; move ul , 2 - 4 )  
[9040] ( move 3 , ua - 3 ; move 4 , ua * ua ; move ua , 4 )  
[9041] ( move 3 , ul - 4 ; move ua , 4 ; move 2 - ul , ua )  
[9042] ( move ua , ua - 2 ; move 2 , 4 / ua ; v0 = ua )  
[9043] ( move ul , 2 ; move 4 - ul , ua ; move ua , 3 / 2 )  
[9044] ( v0 = 4 ; move 2 , 4 ; move v0 , v0 + v0 )  | ( v0 = 4 ; move 2 , v0 ; move v0 , v0 + v0 )  
[9045] ( move 0 , ul ; move 4 + ul , 4 ; move ua , ua / 4 )  
[9046] ( move 3 / 4 , 2 ; move ua , ul + ul ; move ul , 2 )  
[9047] ( move 4 , ul ; move 4 - ua , 2 ; move 4 , ua + ul )  
[9048] ( move 0 , 4 ; move ua , ua / 2 ; move ua / 4 , ul )  
[9049] ( move ua - ul , 2 ; move ua , 4 + 4 ; v0 = ua )  
[9050] ( move 4 , 3 * 2 ; move ua + ul , 4 ; move ul , ua )  
[9051] ( move 2 , 3 / ua ; move ul / 3 , ua ; move ua , 2 )  
[9052] ( move ul , 4 + 3 ; move ua , ua - 4 ; move ua , 4 )  
[9053] ( move 3 , ua + ul ; move ul , 3 / ua ; move 3 , 3 )  
[9054] ( move 3 , ul ; move 3 - ul , 3 ; move 3 , ua * ua )  
[9055] ( move ul , 3 ; move 3 , ua ; move 3 + ul , ua / 3 )  
[9056] ( move 2 , ua - 3 ; move 4 - ul , ua ; move ul , 4 )  
[9057] ( ( move ul - 4 , 0 ; move ul , 0 ) ; move ul , ul )  
[9058] ( move ul , 2 - 4 ; move ul + ul , 2 ; move ul , 4 )  
[9059] ( move 3 , ua + ul ; move ul , 4 ; move 4 , 3 - ua )  
[9060] ( move ul , ul ; move ul , 4 - 2 ; move 3 , 2 - ul )  
[9061] ( move 3 + 3 , ul ; move ua , ua - 3 ; v0 = ul )  
[9062] ( move ul / 4 , 4 * 2 ; move 0 , ua ; move ua , ul )  
[9063] ( move ua / 3 , 2 ; move ul , ua + 3 ; move 4 , ul )  
[9064] ( move ul / 2 , ua + ul ; move 4 , ul ; move 3 , 2 )  
[9065] ( move 4 / 2 , ua + 4 ; move 2 , ul ; move ua , ul )  
[9066] ( move 4 + 2 , ul ; move ul , ul ; move ul - 4 , 2 )  
[9067] ( move 3 , ul ; move 3 , ul - ua ; move ul - 4 , 2 )  
[9068] ( move 2 + ul , ul ; move ua - 3 , 4 ; v0 = ua )  
[9069] ( move 3 , ul / 2 ; move ul , ul ; move 2 , 3 + ul )  
[9070] ( move ul , ul - 2 ; move 2 , 3 / ua ; move 4 , ul )  
[9071] ( move ul - ua , 3 ; move 3 , ua * 4 ; move ua , 4 )  
[9072] ( move ul , ua * 2 ; move 2 , 3 / ua ; move 4 , ul )  
[9073] ( move 2 , ul ; move ul / 3 , 3 ; move 3 , ua - ul )  
[9074] ( move ul , 3 ; move 0 , ul / 4 ; move ua , ua / 3 )  
[9075] ( move 4 , ua * ua ; v0 = 2 ; move ua - ul , 3 )  
[9076] ( move ul , 4 ; move ua , 4 / 3 ; move 2 , ua + ul )  
[9077] ( move ua , 3 / ua ; move 4 - ua , ul ; move 2 , 4 )  
[9078] ( move 4 - ua , ua ; move ua + ul , 4 ; v0 = 3 )  
[9079] ( move 2 , ul ; move 4 - ua , ul ; move 4 , 2 / ua )  
[9080] ( move ua , 4 + 4 ; move 4 , ul - 3 ; move ul , ua )  
[9081] ( move ua - ul , ua ; move 4 , 4 + 3 ; v0 = ua )  
[9082] ( ( move 4 , 0 ; move ul , 3 + ul ) ; move ua , ul )  
[9083] ( move ul , ul / 2 ; move 4 , 2 - ul ; move ua , 3 )  
[9084] ( move 2 , 4 ; move ul , ul - ua ; move ul , 2 / 3 )  
[9085] ( move ul , ul / 2 ; move 4 , ua ; move 4 , 2 + ul )  
[9086] ( move 4 , 4 ; move ul , ul ; move ul / 3 , 0 - ua )  
[9087] ( ( move ul , ul ; move 2 , ul ) ; move 0 - 3 , ul )  
[9088] ( move 3 , ul / ua ; move 3 , 3 + ul ; move 3 , ul )  
[9089] ( move ua - 3 , 0 ; ( move ua , 4 ; move ul , ul ) )  
[9090] ( move 2 , ul ; ( move ua , 4 ; move ua , ua - 2 ) )  
[9091] ( move 0 , ul ; move ua + ul , 4 / 3 ; v0 = ul )  | ( pen ua / 4 ; move 0 , ul / 3 ; move ua + ul , 2 )  
[9092] ( move 2 , ua ; move ua + ul , 4 * 4 ; v0 = ua )  
[9093] ( move 4 - ul , 4 ; move ul , 2 ; move ul , 2 - ul )  
[9094] ( move ul / 3 , ul ; move ua , 3 + 3 ; move ua , 4 )  
[9095] ( move 0 - ua , ul / 3 ; move 4 , ul ; v0 = ua )  
[9096] ( ( move ua , 3 ; move ua - ul , 2 ) ; move ul , 2 )  
[9097] ( move 4 , ul - 4 ; move 2 , ua - ul ; move 4 , ua )  
[9098] ( move ul , 3 / 4 ; move 2 - ul , ua ; move ua , 3 )  
[9099] ( move 2 , 4 ; move 2 , ul + ul ; move ul , ua / 4 )  
[9100] ( move ua , 4 + ul ; ( move ul , 0 ; move 3 , ul ) )  
[9101] ( move ul , 2 / 4 ; move ua , ul - 2 ; move ul , 3 )  | ( move ul , ul / 2 ; move ua , ua - ul ; pen 3 + ul )  
[9102] ( move 2 - 3 , ul ; move ua , ua / 4 ; move ua , 4 )  
[9103] ( move ul / 2 , ua ; move ua , 4 + 3 ; v0 = ua )  
[9104] ( move ul , ul ; ( move 4 + ul , 0 ; move ua , 3 ) )  | ( move 4 + 2 , ul ; v0 = ua ; move ua , 3 - v0 )  | ( v0 = ua ; move 4 + 2 , ul ; move v0 , v0 + 3 )  | ( ( move 3 * 2 , ul - ua ; move ua , 3 ) ; v0 = ul )  
[9105] ( ( move ul , ul ; move ul , 4 ) ; move 2 - ua , 0 )  
[9106] ( move 2 - ua , 3 * 2 ; move ul , ul ; v0 = ul )  
[9107] ( move 4 - ua , ua ; move 3 , ul - 3 ; v0 = ua )  
[9108] ( move ul , 2 ; move ul , 2 ; move 3 + ul , ul / 4 )  
[9109] ( ( move 3 , 2 ; move ul , 0 - ul ) ; move ul , ul )  
[9110] ( move ul , 3 ; move 3 , 2 / ua ; move 4 , ua - ul )  
[9111] ( move 4 / ua , 3 ; move ua , ul ; move ua - 3 , 3 )  
[9112] ( move ul , 3 + ul ; move 3 , 4 ; move ul , 4 + ul )  
[9113] ( move 4 - 2 , ul ; move 3 , ul ; move 4 - ua , ul )  
[9114] ( move 2 , 0 - 3 ; pen 0 ; move ul - ua , ua + ul )  
[9115] ( move 2 * 2 , ua ; move 4 , 4 / ua ; move ua , ul )  
[9116] ( move 3 , 2 - 4 ; move ul , ua - 4 ; move ul , ul )  
[9117] ( move 4 , ua * 3 ; move ul , ul ; move ua - 3 , 3 )  
[9118] ( move 4 , ul + ul ; move 4 , 2 ; move ul , ul - 3 )  
[9119] ( move 2 + ul , 4 ; move ul , 3 / ua ; move ua , 4 )  
[9120] ( move ul , 4 ; move ua , ul + ul ; move 2 / 3 , 4 )  
[9121] ( move 3 , ul + ul ; move ua , ul - 3 ; v0 = 4 )  | ( move ua , ua / 2 ; v0 = ul ; move 3 , v0 + v0 )  
[9122] ( move 3 , 4 ; move ua - 3 , ua ; move ul , ua / 4 )  | ( move ua , 4 ; ( move 0 , ua / 4 ; move ul , 0 ; pen 3 ) )  
[9123] ( move ul , 2 ; move ul / 4 , 4 ; move 3 , ua + ul )  
[9124] ( move 2 + ul , ua ; ( move ua , 4 ; move ua , 4 ) )  
[9125] ( move ua , ua / 3 ; v0 = 2 ; move ua , ua / 3 )  
[9126] ( ( move 3 , ul ; move 2 - ua , ul ) ; move ul , 2 )  
[9127] ( move 3 , ua + ul ; pen 0 ; move ua - 2 , ua + 3 )  
[9128] ( move 0 - 2 , ua + ua ; move ua , ua / 4 ; pen 0 )  
[9129] ( move ul , ua + ul ; move 4 , 4 * 4 ; move 3 , ua )  | ( move ul , ul ; ( move ua + ul , 4 * 4 ; pen 4 ) )  
[9130] ( move 4 , ua / 4 ; move ul - 2 , 2 ; move ul , ul )  
[9131] ( move ul / 2 , ua + ul ; move 4 , ua ; move 4 , 4 )  
[9132] ( ( move 3 , ua ; move 2 , ul ) ; move 3 , ul - ua )  | ( move 4 - ul , 0 ; move 2 , ul - ua ; move 3 , ua + ul )  
[9133] ( move 4 , ul - 4 ; move 2 , ua - ul ; move ul , 4 )  
[9134] ( move ul , 4 ; move 3 - ua , ul - 4 ; move 3 , ul )  
[9135] ( move ul , 4 * 2 ; move ul , 4 - 3 ; move ua , ul )  
[9136] ( move ua / 4 , 3 ; move ul + ul , ul ; move 3 , 3 )  
[9137] ( v0 = 4 ; move v0 , 4 ; move v0 + 4 , v0 )  | ( v0 = 4 ; move v0 , v0 ; move 4 + v0 , v0 )  | ( v0 = 4 ; move v0 , 4 ; move v0 + v0 , v0 )  
[9138] ( move 4 , 4 * 2 ; move ul , ul ; move ua , 3 - ul )  
[9139] ( move ua , 4 ; move ua / 2 , 4 ; move ul , ul - 3 )  
[9140] ( move 0 , ul / 4 ; move ua , ul ; move ul - 4 , 4 )  
[9141] ( move ua , 3 ; ( move 4 , 2 + ul ; move ua , ul ) )  
[9142] ( move ua , 3 ; ( move ul , 2 - 4 ; move ua , ua ) )  
[9143] ( move ul , ua ; move 3 , ul - 3 ; move 2 / 4 , ul )  
[9144] ( ( move 3 , ua ; move 3 , ul ) ; move ua , 3 + ul )  
[9145] ( move ua , ul ; move ul , ul ; move 2 - 4 , 4 * 3 )  
[9146] ( move ua / 4 , ul ; v0 = ua + ul ; move 3 , 2 )  
[9147] ( move ua / 3 , 4 ; move ua , 3 + ul ; move ul , 4 )  
[9148] ( move ul , ul + ul ; move ul , 2 / 4 ; move 3 , 3 )  
[9149] ( move ua , 4 * 3 ; move 3 , 2 ; move ul , ul / ua )  
[9150] ( move 3 , ul ; move ua + ul , 3 ; move 3 / 4 , ul )  
[9151] ( ( move 0 , ua ; move 4 , ua ) ; move ua , ua / 4 )  
[9152] ( move ul , ua ; move 4 , 4 ; move ua + ul , 4 / 2 )  | ( move 0 , 3 - 2 ; ( move 4 , 3 ; move ua + ul , 2 ) )  | ( move 4 , 4 ; ( pen ul ; move ul , ua + 2 ) ; move ua , ua )  
[9153] ( move ua - 3 , 3 ; move ua , 4 / ua ; v0 = ul )  
[9154] ( move 3 , 4 + ul ; move ul , 4 ; move ul / ua , 3 )  
[9155] ( ( move 4 , 3 ; move ua , ul + ul ) ; move 3 , ua )  
[9156] ( ( move 2 , ua ; move ul , 4 / ua ) ; move ua , 2 )  
[9157] ( move ua - ul , 3 ; move ul - 4 , ul ; v0 = 3 )  
[9158] ( move ua , ul ; ( move ua , 2 ; move 3 , 4 - ul ) )  
[9159] ( move ua , 2 ; ( move ul , ua + ul ; move 4 , 4 ) )  
[9160] ( move ua , 4 ; move 3 / ua , 3 ; move ua , ua / 4 )  
[9161] ( move ua , ul / 4 ; move 3 , ua ; move 2 , ua / 4 )  
[9162] ( move 2 , 4 * 3 ; move ul , ul / ua ; move 4 , ua )  
[9163] ( ( move ua + ul , ul ; move ul , 3 ) ; move 4 , 2 )  
[9164] ( move ul , ul ; ( move 4 , ul ; move ua , 3 + 2 ) )  
[9165] ( move 3 , ua ; ( move 4 , ul ; move ua , ua + 4 ) )  
[9166] ( move 2 + ul , 2 / ua ; pen 0 ; move ua , ua + 3 )  
[9167] ( move 0 , ua + ul ; pen 0 ; move 4 * 2 , ul - ua )  
[9168] ( move ul - ua , 0 ; move 2 , ua - 2 ; pen ul - 2 )  
[9169] ( move ul - 3 , 4 ; move 3 , ul ; v0 = ul + ul )  | ( pen 4 * 2 ; ( move ul - 3 , 4 ; move 3 , ul ; pen ul ) )  
[9170] ( move 4 + ul , ua ; move ul , 4 ; move ul , 4 * 3 )  
[9171] ( move 4 , ul ; move 0 , ul ; move 4 / 3 , ul / ua )  
[9172] ( move 0 , ul ; ( move 4 , ul ; move ul - 3 , ul ) )  
[9173] ( move ul , 4 ; move ul - 4 , ua ; move 2 / ua , 4 )  
[9174] ( move 4 , ul ; move ua - 4 , ul - 3 ; move 4 , ul )  
[9175] ( move 2 , 4 + ul ; move ul - 4 , ul ; v0 = ul )  
[9176] ( move ua - 3 , ul ; move 4 + ul , ul ; v0 = 4 )  
[9177] ( move ua , ul ; ( move ua , 3 ; move 4 , ua + 4 ) )  
[9178] ( ( move 3 , 3 + ul ; move 3 , ul ) ; move ua , ul )  
[9179] ( move ua , ua / 4 ; move 2 - ua , ul ; v0 = 4 )  
[9180] ( move 4 , ua ; ( move ul , 3 + 2 ; move ul , ul ) )  
[9181] ( move 4 , ul ; move 3 - ul , ul ; move ua - 4 , 4 )  
[9182] ( ( move ul , 3 ; move 2 , ul ) ; move 4 - ua , ua )  
[9183] ( move 0 , ul / ua ; ( move 3 , ul ; move 3 , ul ) )  
[9184] ( move ua , ul ; move ua , 4 ; move 4 / 2 , ul / 2 )  
[9185] ( move ua , ul ; ( move ul , 3 ; move 4 , 2 + ul ) )  
[9186] ( move 4 + 3 , ul ; ( move ul , 2 ; move ul , ul ) )  
[9187] ( move 0 , ul / 4 ; ( move ua , 4 ; move ul , ua ) )  
[9188] ( ( move ul , 2 ; move ul , 4 - 3 ) ; move ua , ul )  
[9189] ( move ul , ul ; ( move 2 , ul - 2 ; move ul , 4 ) )  
[9190] ( ( move ul - 3 , ul ; move 3 , 2 ) ; move ul , ul )  
[9191] ( move ul - 4 , ua / 4 ; v0 = ul ; move ua , 2 )  
[9192] ( move ua , 4 - ul ; move ul , 4 * 4 ; move 3 , ul )  
[9193] ( move 3 , 4 ; v0 = 4 + 2 ; move ua + 2 , v0 )  
[9194] ( move ua + 2 , ul ; pen 0 ; move 3 + ul , 4 + ul )  
[9195] ( move ua , ul ; move 4 - ua , 3 ; move 4 , ul / 4 )  
[9196] ( move 2 + ul , ua + ua ; move ua + 2 , 4 ; pen 3 )  
[9197] ( ( move ul , ul ; move 4 , 3 + ul ) ; move ul , 2 )  
[9198] ( move ua - 4 , ul / 3 ; move ul , ul ; move 4 , 3 )  
[9199] ( move 4 * 2 , 3 ; v0 = 0 - ul ; move v0 , 2 )  
[9200] ( move 2 , ua ; ( move 3 / 2 , ul ; move ul , ul ) )  
[9201] ( pen 2 ; move 2 , ua - ul ; move ua + 3 , 2 - ua )  
[9202] ( move ua - 3 , ua + 2 ; pen 3 - ua ; move 2 , ua )  
[9203] ( move ua , 4 / 3 ; move ua - 4 , ul ; v0 = ua )  
[9204] ( move ua / 4 , ua ; move ua , ul / 2 ; move 4 , 4 )  
[9205] ( move 0 , ul ; ( move 3 , ul ; move ul , 4 / ua ) )  
[9206] ( ( move ul , 3 ; move ua , 2 ) ; move ul / 3 , ul )  
[9207] ( move 3 , ul ; ( move 3 + ul , ul ; move ul , 4 ) )  
[9208] ( ( move 3 , ua ; move 4 , ul ) ; move ua - ul , 4 )  
[9209] ( move 3 - ul , 4 / ua ; move ul , 4 ; move 4 , ul )  
[9210] ( pen ua + ul ; move ua , 3 + ul ; move 2 , 4 + 2 )  
[9211] ( ( move ul , ua ; move 3 , 4 + ul ) ; move ul , 4 )  
[9212] ( move 3 , ua - 4 ; pen 0 ; move ul + ul , 2 - ua )  
[9213] ( move 4 , ua / 2 ; move 3 , ul / ua ; v0 = ul )  
[9214] ( move 3 , 4 - ul ; move ul / 3 , ul ; move 4 , ul )  
[9215] ( move ul - ua , 3 ; move 4 / ua , ul ; v0 = 4 )  
[9216] ( v0 = 3 ; move 2 + v0 , 2 ; move 4 - ua , 4 )  
[9217] ( pen ul ; move 3 , 0 - ul ; move ul + ul , 3 + 2 )  
[9218] ( ( move 4 , 2 / ua ; move ul , 4 ) ; move ua , ua )  
[9219] ( move ul , ul ; ( move ul , ua - 2 ; move 4 , 4 ) )  
[9220] ( move ul , 4 ; move 3 , ul / 4 ; move ul , ul - 3 )  
[9221] ( pen 2 / ua ; move ua + 2 , 0 ; move ul , ul - 3 )  
[9222] ( move ul - 4 , ul ; move ul , 4 / 3 ; v0 = ua )  | ( move ul - 4 , ua + ul ; move ul , 4 / 3 ; pen 3 / 4 )  
[9223] ( move ua , ua / 3 ; pen ua ; move 2 + 2 , ua - 3 )  
[9224] ( pen 2 + ul ; move ua + 2 , ua - ul ; move 4 , 3 )  
[9225] ( ( move ul , 2 / ua ; move 3 , ul ) ; move 4 , ul )  
[9226] ( move ua - 4 , ua * ua ; pen 2 ; move 0 - 3 , ul )  
[9227] ( move ua + 3 , 0 - 4 ; move 3 , ul + ul ; pen ul )  
[9228] ( move 3 + ul , ul ; ( move 4 , 4 ; move ul , ul ) )  
[9229] ( move ul , ua / 3 ; ( move ul , 3 ; move 3 , ul ) )  
[9230] ( move ul - ua , 3 + 2 ; pen 3 ; move ua - 2 , ul )  
[9231] ( move 4 + ul , ua ; pen 4 ; move ua - 2 , ua + 2 )  
[9232] ( ( move 4 , ua ; move ul , 4 ) ; move ul , 3 - ul )  
[9233] ( move 4 + ul , ua - 4 ; pen 0 ; move ul + ul , 2 )  
[9234] ( pen 3 + ul ; move ul , 4 + 2 ; move ua + ul , 2 )  
[9235] ( ( move 4 , 3 ; move ua , ua * ua ) ; v0 = ul )  | ( move 0 , 3 - ul ; move 4 , ua + ul ; move ua , ua * ua )  
[9236] ( move 0 , ua * ua ; pen 3 - 4 ; move ua , ua * 2 )  
[9237] ( move ua , 0 ; move ua / 2 , 4 + ul ; pen ua + 4 )  
[9238] ( ( move ul , 3 ; move 3 , ul - 4 ) ; move ul , ul )  
[9239] ( ( move 2 , ul ; move ua , ul / 4 ) ; move ua , 4 )  
[9240] ( pen 4 + ul ; move ul - 2 , ul ; move ua - 2 , 2 )  
[9241] ( ( move ul , 3 ; move 4 , ul / ua ) ; move 4 , ua )  
[9242] ( ( move ua , ul ; move 4 / ua , 4 ) ; move 3 , ul )  
[9243] ( move 4 + ul , 4 ; pen 0 ; move ua - ul , 2 - ul )  
[9244] ( ( move 4 , ua * ua ; v0 = ua ) ; move ul , 4 )  
[9245] ( pen 2 ; move 2 , ua * ua ; move 4 - ul , ua + 3 )  
[9246] ( move ua + 3 , 3 + 3 ; pen ul ; move 3 , ul + ul )  
[9247] ( move 2 , ua - 2 ; move ua - 3 , 4 ; pen ul + ul )  
[9248] ( move ul , 3 ; ( move ul , ua / 4 ; move 3 , ul ) )  
[9249] ( move ua , 4 + 3 ; v0 = 3 / 2 ; move 3 , v0 )  
[9250] ( move ul , ul / 2 ; ( move 4 , ua ; move ul , 4 ) )  
[9251] ( move ua + ul , 2 / 3 ; pen ua + 4 ; move 2 , ul )  
[9252] ( move 3 , ua * ua ; pen 3 ; move 4 + 2 , ul + ul )  
[9253] ( pen 4 ; move ua + 3 , ua - ul ; move 4 , ua - 2 )  
[9254] ( move ua + 2 , ua / 3 ; move 3 , 3 - ul ; pen ua )  
[9255] ( move ua + 4 , ul ; pen ua - 3 ; move 2 , 4 + ul )  
[9256] ( move 3 + 3 , 3 ; v0 = 4 * 4 ; move ua , v0 )  
[9257] ( move 0 , ul / 4 ; move 4 + ul , ul ; pen ua + 2 )  
[9258] ( move ul + ul , 4 ; move 2 - 4 , ua - 2 ; pen ua )  | ( v0 = 2 ; move v0 , v0 ; move ul - 3 , v0 )  
[9259] ( pen ua + 3 ; move 3 * 2 , ul ; move 3 - ua , ul )  
[9260] ( move ua + 3 , ua - ul ; move 3 , 3 ; pen 4 - ua )  
[9261] ( move ul - ua , 3 * 2 ; pen ul ; move 3 , ua - 2 )  
[9262] ( move ua , 4 + 2 ; move 3 - ua , ul ; pen 4 + ul )  
[9263] ( move 3 , ul - 2 ; move 3 , ul + ul ; pen 2 - ul )  
[9264] ( move 3 , 3 ; move 2 + ul , ul / 3 ; pen ua + ua )  
[9265] ( move ua , 3 ; move 0 - ua , ul / 4 ; pen ua * 2 )  
[9266] ( ( move ua - ul , ua + 3 ; pen 0 ) ; move ua , 3 )  
[9267] ( ( move 0 , ul ; pen 2 - ua ) ; move ua , 3 + ul )  | ( move 0 , 4 ; ( pen ul ; pen 0 ) ; move ua , ua + ul )  
[9268] ( move 3 , 3 - ul ; pen ul - 3 ; move 3 , ua + ul )  
[9269] ( move 4 , ua * ua ; move 2 - 4 , ua + ul ; pen 3 )  
[9270] ( move ua , 4 / ua ; move ua + 2 , 3 + ul ; pen 4 )  
[9271] ( move 3 - ua , 3 ; move ua , ul - 2 ; pen ua / 3 )  
[9272] ( pen ua - ul ; move ua + 4 , ua + 4 ; move 3 , 4 )  
[9273] ( move 4 - ul , ul ; pen ul / ua ; move 0 - 2 , 3 )  
[9274] ( pen ul ; move 3 , ua - ul ; move 3 * 3 , 2 + ul )  
[9275] ( pen 2 ; move 4 / ua , ua - 3 ; move ua + 3 , ul )  
[9276] ( move 2 + ul , ul / 2 ; pen ul + ul ; move 3 , 3 )  
[9277] ( move ua , 3 * 3 ; move ul , 4 + ul ; pen 2 + ul )  
[9278] ( move 4 * 2 , ul + ul ; pen 2 + ul ; move 3 , ul )  
[9279] ( pen ul ; move 2 - ua , 3 + ul ; move 2 , ul / 3 )  
[9280] ( pen 4 ; move ua , 3 - 4 ; move ua - ul , ua - 3 )  
[9281] ( move 3 + 3 , ua * ua ; pen ua / 3 ; move ua , 4 )  
[9282] ( move ua / 4 , ua - 4 ; pen ua ; move 3 , 2 + ul )  
[9283] ( move 3 * 3 , ua ; move 3 , ul + ul ; pen 4 + ul )  
[9284] ( pen ul ; ( move ua , ua - 2 ; move ua - 3 , 2 ) )  
[9285] ( move 4 + ul , ua - ul ; move 2 , 3 - 4 ; pen ul )  
[9286] ( move ua , ua - 2 ; move 4 + ul , 4 ; pen 4 - ul )  
[9287] ( move 3 * 2 , ul / ua ; pen 2 ; move 3 , ul + ul )  
[9288] ( move ul , ul / 2 ; pen 2 ; move ua + ul , 4 * 2 )  
[9289] ( ( move ul , 4 ; move ua + 3 , ua + 2 ) ; pen ua )  | ( move ul , 3 + ul ; move ua + 2 , ul + ul ; move ul , 0 )  | ( move ul , 3 + ul ; move 4 , ua + 2 ; move ua - ul , ua )  | ( move ul , 3 + ul ; ( pen 4 ; move 3 , 2 ; move ua , 0 ) )  
[9290] ( move ul , ua - 3 ; ( move ua + 3 , 2 ; pen ua ) )  
[9291] ( pen ul + ul ; move 4 , ua - 4 ; move ul , 4 + 2 )  
[9292] ( move 4 , 4 - ul ; pen 2 ; move ul - ua , ul - 2 )  
[9293] ( move ul + ul , ul ; pen 2 / 4 ; move 4 + 3 , ua )  
[9294] ( move ul , ua - ul ; ( move 4 + 3 , ul ; pen 0 ) )  | ( move ul , 3 - 4 ; ( move 0 , ul ; move ua + ul , 0 ) )  
[9295] ( pen ul ; move ua - ul , ul - 3 ; move 3 , 4 + 4 )  
[9296] ( move ua , ua ; move 0 , ua * ua ; move 3 - ua , 0 )  
[9297] ( move 4 , ul ; pen ul - ua ; move 2 - 3 , 4 - ul )  
[9298] ( move ua + ul , ua + 2 ; move ul , 2 ; move ua , 0 )  | ( move ua + ul , 2 ; v0 = ua + ul ; move v0 , 2 )  
[9299] ( move ua / 3 , 3 / 2 ; move ul - 3 , ua ; pen ua )  
[9300] ( move ul , ul ; pen ua * 3 ; move 3 + ul , 4 * 2 )  | ( move ul , ul ; v0 = 3 + ul ; move v0 , v0 + v0 )  
[9301] ( move 2 , ul + ul ; ( pen 0 ; move ua , 4 / ua ) )  
[9302] ( pen 4 - 3 ; move ul , ua ; move 4 + ul , ul - 3 )  | ( v0 = 3 ; move v0 - 4 , ua - 3 ; move ua - ul , ul )  
[9303] ( move ua , ua + ua ; move 4 - ua , ul ; move 0 , 0 )  | ( move ua , ua ; move 4 - ua , ul - ua ; v0 = ul )  
[9304] ( ( move ua , 2 / 3 ; v0 = 2 ) ; move 4 , v0 )  | ( ( move ua , 2 / 3 ; move 3 + ul , 2 ) ; move 0 , 3 )  
[9305] ( move ua / 3 , 4 + ul ; pen ul ; move 2 , 4 + ul )  
[9306] ( move 3 , ua ; ( pen ul / ua ; move ua , 0 - 3 ) )  
[9307] ( move ua - 4 , ua ; ( pen ua ; move 2 , 2 - ul ) )  
[9308] ( move ul , 3 ; pen ul + ul ; move ul - 4 , 3 * 2 )  
[9309] ( move ul , ul - ua ; move 3 + 2 , 4 * 4 ; pen ul )  
[9310] ( pen 2 + ul ; move ul , ua / 4 ; move ua , 4 * 2 )  
[9311] ( pen ua + ul ; move ul - 4 , 3 ; move ul - 4 , 4 )  
[9312] ( pen ua ; ( move ua + 2 , 4 * 2 ; move ul , ul ) )  
[9313] ( ( move ul - ua , 3 ; pen 3 ) ; move ua + 3 , ul )  | ( move ul - ua , 3 ; move ua + 2 , ul ; move ul , ua )  
[9314] ( move 3 , ul / 3 ; move ul - 4 , 2 ; pen ua - ul )  
[9315] ( move 3 , ua ; move 0 - ul , 0 - ua ; move ua , ul )  
[9316] ( ( move 4 , ua ; pen 0 ) ; move ul + ul , ua / 3 )  
[9317] ( pen ua ; move 2 , 4 / ua ; move ua + 3 , ul / 4 )  
[9318] ( move 0 , ua ; ( pen ul / ua ; move ua , 4 + 4 ) )  
[9319] ( pen ua * 4 ; move 3 , 3 ; move ua / 3 , ua - ul )  | ( move 3 , 4 - ul ; ( pen ul ; move 2 , ua - ul ) )  
[9320] ( move ua - ul , ua / 2 ; pen 3 ; move 4 , 3 / ua )  
[9321] ( v0 = 4 + 2 ; ( move 4 , ul ; move v0 , 4 ) )  | ( move 4 , ul ; v0 = 4 - ul ; move v0 + v0 , 4 )  
[9322] ( ( move ua - ul , 4 ; move 3 + ul , 2 ) ; pen ua )  
[9323] ( pen ul ; move 4 + 3 , ua / 3 ; move ul , 4 + ul )  
[9324] ( move ua , 3 / ua ; ( move 0 - ul , 3 ; pen ul ) )  
[9325] ( move ua , 0 - 3 ; move ul , ul + ul ; move ua , 0 )  
[9326] ( move 4 / ua , ul - 3 ; move ua , 4 - 2 ; pen ul )  
[9327] ( pen ua / 3 ; move ul - 3 , ul ; move ua - 3 , 4 )  
[9328] ( move 2 - ua , 2 - ua ; ( move 4 , ul ; pen ul ) )  
[9329] ( move 0 - ul , ua ; move 2 , 0 ; move ul , ua - ul )  
[9330] ( move 3 , ul + ul ; pen 4 / ua ; move 3 / 2 , ul )  
[9331] ( move 0 - 3 , ua * ua ; move 0 , ul ; move ul , ua )  
[9332] ( move ua / 4 , 4 ; pen ul / 2 ; move 2 + ul , ul )  
[9333] ( move 0 - ua , ul ; move 3 , ua * ua ; move 0 , ul )  
[9334] ( move ua , 0 - ul ; move 0 , ul - 4 ; move ua , ua )  
[9335] ( move 3 - ul , ul ; move ua , ua * ua ; move 0 , 0 )  
[9336] ( ( pen ul ; move ua , ua ) ; move 4 + 3 , ul - 3 )  
[9337] ( pen ul ; move 4 - ul , 3 + ul ; move 3 , ua / 4 )  
[9338] ( ( move ul , 4 * 3 ; v0 = 4 ) ; move v0 , 2 )  
[9339] ( move ul - ua , 3 / 4 ; ( move ua , ul ; pen 0 ) )  
[9340] ( move ua , ua ; move ua , 2 - ua ; move ua - 2 , 2 )  
[9341] ( move 3 , ul - ua ; move 0 - ul , 0 ; move ua , ul )  
[9342] ( ( move 4 , ul - 3 ; pen 2 - ua ) ; move ua , ul )  
[9343] ( move ua , ua - 2 ; ( pen ul ; move 4 , ul - 3 ) )  
[9344] ( ( pen ua ; move ul , ua - 4 ) ; move 4 + ul , 2 )  
[9345] ( move 4 , 0 - ul ; move ua , ua * ua ; move 0 , ua )  
[9346] ( move 3 , ul / ua ; pen 3 - 4 ; move ua , ul - 4 )  
[9347] ( move ua - ul , 0 ; move ul , ua + 3 ; move ua , 2 )  
[9348] ( move ua , ul / 4 ; pen ua + ul ; move 4 , 3 / 2 )  
[9349] ( move 2 + ul , 0 ; move ul - 3 , ua ; move ua , ul )  
[9350] ( pen ua * 4 ; move 4 + 4 , 3 / ua ; move ul , ul )  
[9351] ( move ul , 0 ; move ua , ul - 3 ; move ua + ul , 2 )  
[9352] ( move ua + 2 , 0 ; move ul , 3 - ua ; move ul , ul )  
[9353] ( move 2 , 2 ; move ua , 0 - ul ; move ul , ul + ul )  
[9354] ( move 4 + 4 , ua ; ( move ua + ul , 4 ; pen ul ) )  | ( move 4 * 2 , ua ; ( move ua + ul , 4 ; pen 3 + 3 ) )  
[9355] ( move ul - ua , ua + ul ; move ul + ul , ul / ua )  
[9356] ( move ua , ua * ua ; move ul + ul , 2 ; move 3 , 0 )  
[9357] ( move ua - ul , ua ; move 0 , ua ; move 4 , ua - 2 )  
[9358] ( ( move ul + ul , 4 + 3 ; move 4 , ul ) ; pen ua )  
[9359] ( move ua + ul , 3 ; move ua , ua + 2 ; move 3 , ua )  
[9360] ( move ul , ua ; move ul , 2 - ua ; move 0 - 3 , ua )  
[9361] ( move 2 - ua , 4 * 3 ; ( move ul , ul ; pen ua ) )  
[9362] ( move 2 , ua + ua ; move ua , ul ; move 0 - 4 , ul )  
[9363] ( ( move 2 , 3 - 4 ; pen ul / ua ) ; move ua , ua )  
[9364] ( move ua / 2 , 4 ; ( pen ul / ua ; move ul , 0 ) )  
[9365] ( move ua , 2 / 4 ; move 3 , ul / 4 ; pen ul - ua )  
[9366] ( ( move ul / 4 , 4 + ul ; pen 0 ) ; move ua , ul )  
[9367] ( move ul , 0 - ua ; move 2 , ua - 4 ; move ua , ua )  
[9368] ( pen ua ; ( move 4 - ua , 4 ; move 3 , ul + ul ) )  
[9369] ( move ua , ul ; move 2 , ul ; move ua + 2 , 2 + ul )  
[9370] ( move ua , 0 ; move 0 , ul ; move ua + ul , ua / 4 )  
[9371] ( move ua , 0 ; move ua + ul , 2 ; move ua , ua / 3 )  
[9372] ( ( move 3 , ua / 2 ; move ua - ul , 4 ) ; pen ua )  
[9373] ( ( pen ul ; move 2 , ul ) ; move ul - ua , 4 * 2 )  
[9374] ( move ul , 0 ; move 0 , ua * ua ; move 4 , ul + ul )  
[9375] ( move ua , 0 ; move ua - 3 , ul ; move 2 + ul , ul )  
[9376] ( move ua + ul , 0 ; move 3 , ul ; move 2 , ul + ul )  
[9377] ( move ua , 2 ; move ua - ul , ul ; move 0 - 3 , ul )  
[9378] ( move 2 , 3 ; move ul , ul ; move 0 - ua , ul - ua )  
[9379] ( pen 4 ; ( move ua - 3 , ul + ul ; move 4 , ul ) )  
[9380] ( ( move 4 , ul ; move 3 , 4 + ul ) ; pen ul + ul )  
[9381] ( ( pen ul + ul ; move 4 , 2 / 3 ) ; move ua , ul )  
[9382] ( move ua , 2 + ul ; move ul , 2 / ua ; move ul , 0 )  | ( move ua , 3 ; ( v0 = 2 ; move v0 , v0 / ua ) )  
[9383] ( move ul , ua ; move 4 + ul , ua + 4 ; move ua , 0 )  | ( move ul , ua ; move ua , 4 ; move ua - ul , ua * 2 )  
[9384] ( move ua , ua ; move 2 , 3 + 2 ; move ul , ul + ul )  
[9385] ( move ua , 2 ; move ul , ul ; move 0 - 4 , ua + ul )  
[9386] ( move 3 , ua + ul ; move ul , 4 + ul ; move ua , 0 )  
[9387] ( move 2 + ul , 2 ; move ul , ul ; move ua + 2 , ul )  
[9388] ( move ua , ul ; move ua , 4 ; move 0 - ul , 2 + ul )  
[9389] ( move ul , ua ; move ua , ua + 2 ; move ua - 4 , 2 )  
[9390] ( move 2 , 0 ; move ua - 4 , ul ; move ua , ua * ua )  
[9391] ( move ua - 4 , 3 ; move 0 , ua ; move ua + ul , ul )  | ( pen ua ; pen 3 ; ( move ua - 4 , 3 ; move ua + ul , ul ) )  
[9392] ( move ua , ua ; move ul + ul , 2 ; move ul , 3 + 2 )  
[9393] ( pen ua - ul ; ( move 4 , 3 ; move ua - 4 , ul ) )  
[9394] ( move ul , ul ; pen ul / 3 ; move 4 - ul , 3 / 2 )  
[9395] ( move ua , 0 ; move ul , ul - 4 ; move ua + 2 , ul )  
[9396] ( move ua + 2 , ua ; move 3 , 3 ; move ua + ul , ul )  
[9397] ( move ua + 2 , ua * ua ; move 0 , ul ; move 4 , ul )  
[9398] ( move ua , 0 ; move ua , 4 ; move ua - ul , ua + 4 )  
[9399] ( move ul , ul ; move ua , 0 - ul ; move 4 , 0 - ul )  
[9400] ( move 3 - ua , ul / ua ; move 4 , ul ; pen 4 * 4 )  
[9401] ( move 0 - ul , ua - ul ; move ul , 3 ; move 2 , ua )  
[9402] ( move ul , 3 + 2 ; move 0 , ul ; move ul - ua , ul )  
[9403] ( move ua , ul / ua ; move ul , 0 ; move ua , 0 - 4 )  
[9404] ( move ul , ul ; move ua , ua - 2 ; move 2 + 2 , ul )  
[9405] ( move ua + 2 , 2 ; move ul , ua - ul ; move ua , 3 )  
[9406] ( move 0 , ul ; move 0 - ul , ul / ua ; move 3 , ul )  
[9407] ( move ua , 4 ; move ua , 3 - ua ; move 0 - ul , ul )  
[9408] ( move ul , 3 ; move ul + ul , ul ; move 0 - 2 , ul )  
[9409] ( move ul , 3 ; move ua , 0 ; move ul + ul , ua - 4 )  
[9410] ( move ua , 3 ; move 3 - ul , 0 ; move ul , ua - ul )  
[9411] ( move ua , 4 + 3 ; move ul , ua + 2 ; move ul , ua )  
[9412] ( move ua , 2 - ua ; move 3 - ul , ul ; move ua , 2 )  
[9413] ( move 2 , ul / ua ; move ua , 0 - 3 ; move ul , ua )  
[9414] ( move ua , ua - 2 ; move 3 , 3 ; move ul + ul , ua )  
[9415] ( move 0 - 2 , ua * 3 ; move ul , ul ; move ua , ul )  
[9416] ( move 4 + ul , 0 ; move ua + ul , 3 ; move ul , ul )  
[9417] ( move ul , 3 ; move ua + ul , ul ; move 2 + ul , 2 )  
[9418] ( move ua + 2 , 3 ; move ul , 2 ; move ul , ul - ua )  
[9419] ( move 2 + ul , ua * ua ; move 2 , ul ; move 3 , ua )  
[9420] ( move ua , 0 ; move 4 / ua , ul ; move ua , 2 + ul )  
[9421] ( move 0 - ua , ul / ua ; v0 = 0 ; move ua , ul )  
[9422] ( move ua , ul ; move 2 , ua + 3 ; move ul + ul , 3 )  
[9423] ( move ua , ua ; move 0 , 4 / ua ; move ua , ua + 4 )  
[9424] ( move ua , ua + ul ; move 3 + ul , 3 ; move 2 , ul )  
[9425] ( move ul - ua , ul ; move 3 , 2 ; move 2 , ua + ul )  
[9426] ( move ua , 0 ; move 4 + ul , ul ; move ua - 3 , ul )  
[9427] ( move ul , 4 - ul ; move 0 - 2 , ul ; move ua , ua )  
[9428] ( move ul , ua ; move 2 , ul + ul ; move 4 , 0 - ul )  
[9429] ( move ul , ua ; move 2 - ua , ul - 2 ; move 2 , ul )  
[9430] ( move 2 - ua , 3 ; move ul - ua , 2 ; move ua , ul )  
[9431] ( move ua - 3 , ul ; move ul - 3 , ul ; move ua , 0 )  
[9432] ( move ua , ul ; move 2 , 0 - 4 ; move ua - ul , ul )  
[9433] ( move ua , ua + ul ; move ul , 3 + ul ; move 2 , 3 )  
[9434] ( move 2 , ua - ul ; move ul - ua , 0 ; move ul , 4 )  
[9435] ( move 0 , ul - 4 ; move ul , ua ; move ua + 3 , ul )  
[9436] ( move 2 - ua , ul ; move 0 , ul + ul ; move 4 , ul )  
[9437] ( move ua , 2 ; move 2 , ul ; move ul + ul , ul - 2 )  
[9438] ( move ua , ul - 2 ; move ul , ua + 2 ; move 4 , ua )  
[9439] ( move 3 , ua + ul ; move 2 , ul ; move 2 + ul , ul )  
[9440] ( move 2 - ul , ul ; move ua , ul ; move 2 / ua , 0 )  
[9441] ( move ul - ua , 0 ; move ul , ua ; move 4 , ul - 2 )  
[9442] ( move ul , ua ; move 2 + 2 , ul - 2 ; move ul , ul )  
[9443] ( move 0 - 2 , ua ; move 2 , ul ; move ul / ua , ul )  
[9444] ( move 3 + ul , 3 ; move ul , 2 ; move ua , ua + ul )  
[9445] ( move 0 , ua ; move ua , ua * ua ; move ua - 4 , 4 )  
[9446] ( ( move 0 , ua ; pen ul / ua ) ; move 4 , ul / 4 )  
[9447] ( move ua , ua ; move ul , ul - 2 ; move 2 * 2 , ua )  
[9448] ( move ul , ua + 2 ; move 3 , ul ; move ua , 3 + ul )  
[9449] ( move 0 - ua , ua ; move ul , 3 ; move ul - 4 , ua )  
[9450] ( move ua + ul , 2 ; move 0 , 4 / ua ; move ua , ul )  
[9451] ( move ul / 2 , ua * ua ; move ua , ul ; move 2 , 0 )  
[9452] ( move 2 , ua ; move 2 + ul , ua - 3 ; move ul , ul )  
[9453] ( move ul + ul , ua - ul ; move 3 , 3 ; move ul , 0 )  
[9454] ( move ul , 0 ; move ul , ua - 2 ; move ua , 3 / ua )  
[9455] ( move ua , ul ; move ua - ul , ul - 3 ; move 0 , 4 )  | ( move ua , ul ; move ua - ul , ua - 2 ; pen ul + ul )  
[9456] ( move 4 , ua ; move ua + ul , ua / 3 ; move 0 , ul )  
[9457] ( move 3 , 3 - ua ; move ul , ul ; move ua + ul , 2 )  
[9458] ( move ua , 2 - ul ; move ul , 2 - ul ; move ua , 3 )  
[9459] ( move ul , 0 ; move 2 , ul ; move ua - ul , 3 / ua )  
[9460] ( move ul - ua , ua ; move 2 , 2 ; move ul + ul , 4 )  
[9461] ( move 2 + ul , 3 ; move ua , 4 ; move ul , ua + ul )  
[9462] ( move 4 , 3 ; move ul , 0 ; move ul + ul , ul + ul )  | ( move 4 + ul , 3 ; move 4 - 2 , ua + 2 ; move 0 , 0 )  
[9463] ( move 0 , ul ; move 3 + ul , 4 ; move ul - ua , ul )  | ( move 4 , 4 + ul ; v0 = ul ; move ul - ua , v0 )  
[9464] ( ( move 4 - 3 , ul ; pen ul / 3 ) ; move ua , ul )  | ( pen ua ; ( move ul , ul ; pen ul / ua ; move ua , ul ) )  
[9465] ( ( pen 4 ; move 2 , 0 ) ; move 3 , 4 ; move 3 , ul )  
[9466] ( move ua + ul , ul ; move ul - 2 , 4 ; move 2 , ua )  
[9467] ( move 0 , ua ; move ul , ua - 2 ; move 4 , ul / ua )  | ( move ul , ul ; move ul , ua - 3 ; move 4 , ul / ua )  
[9468] ( move 4 , 0 ; move ul / 2 , ua ; move ua , ul + ul )  
[9469] ( move ul , ul ; move 2 , ul ; move 3 - ul , 0 - ul )  
[9470] ( move 3 - ua , ua ; move ul , ul ; move ul - 4 , 0 )  
[9471] ( v0 = ua - 2 ; move 2 , v0 ; move v0 , v0 )  
[9472] ( move 4 , ua ; move ul , ul - ua ; move ul , 2 + 2 )  | ( move 4 , ua ; ( move ul , ul ; move ul - 2 , ul ) ; pen ua )  
[9473] ( move ul , ua ; move 2 * 2 , ul + ul ; move ul , 2 )  
[9474] ( move ua + ul , 4 / ua ; move ua , 3 ; move 0 , ul )  
[9475] ( move ul - ua , 2 ; move 0 , ul ; move ua , ul / 3 )  
[9476] ( move ua , 2 ; move ul , 3 + ul ; move ua + ul , 4 )  
[9477] ( move 0 , ua * ua ; move 4 , ul ; move ul , 2 - ul )  
[9478] ( move 3 , ul ; move ul - 4 , 0 ; move ua + ul , ul )  
[9479] ( move 3 - ul , 0 ; move ul , ul / 2 ; move ua , ua )  
[9480] ( move 3 , 3 + ul ; move ul , ua + ul ; move ul , 2 )  
[9481] ( move ul , ul - 2 ; move 3 , ul ; move ul , 0 - ul )  
[9482] ( move 4 + ul , ua * ua ; move 0 , 4 ; move ul , ua )  
[9483] ( move 3 , ua ; move ul , ua + 2 ; move 4 + ul , ul )  
[9484] ( move ul , 3 + 2 ; move 2 , ul + ul ; move ul , ul )  
[9485] ( move ul , ua + ul ; move 2 , ul - 4 ; move ua , 2 )  
[9486] ( move ul - 4 , 0 ; move ua , 2 - ul ; move ul , ul )  
[9487] ( move ua , ul + ul ; move 3 , ua ; move 2 , ul - 3 )  | ( move ua / 2 , 2 ; ( move ua , ua ; move ul , ul - 3 ) )  
[9488] ( move 2 , ua + ua ; move ua , 4 ; move 2 , ul / ua )  
[9489] ( move ul , 4 + ul ; move ua , 2 ; move ul , 3 + ul )  
[9490] ( move ul , 3 + ul ; move ua , 2 * 2 ; move ul , ul )  
[9491] ( move 4 + ul , ul ; move 0 - ul , ul ; move 3 , ul )  
[9492] ( move ua + ul , ul ; move ul , 2 ; move 3 , 2 / ua )  
[9493] ( move 3 , ua ; move ua , ua * ua ; move 3 , 4 + ul )  
[9494] ( move 4 , 0 ; move ul + ul , 3 / ua ; move ua , ul )  
[9495] ( ( move ua , ua ; move ul , 2 ) ; move ua , ua + 2 )  
[9496] ( move ul , 3 / ua ; move 4 - ua , ua ; move ul , 0 )  
[9497] ( move ua , 2 ; move 4 + ul , ul + ul ; move 4 , ua )  
[9498] ( move ul , ul ; move ua , 3 / 2 ; move ua + ul , 2 )  
[9499] ( move 2 - ua , ua ; move 4 , ua + ul ; v0 = ua )  
[9500] ( move ul , ua * 4 ; move ua , 0 - ul ; move 3 , ul )  
[9501] ( move ul , ua ; move 3 + ul , ul ; move 4 + ul , 2 )  
[9502] ( move 4 + ul , ua ; move ul - 3 , ul ; move ua , 2 )  
[9503] ( move 3 , ul ; move ul , 2 ; move 3 + ul , ul + ul )  
[9504] ( move ul , ua + ua ; move ua / 2 , 2 ; move ul , 4 )  
[9505] ( move ua , ua ; ( move 0 - 2 , ul ; move ua , ul ) )  
[9506] ( move 2 , ua ; move ul + ul , ua + 4 ; move 4 , ul )  
[9507] ( move ul - ua , ua ; move ul - 3 , ul ; v0 = 0 )  
[9508] ( v0 = 3 ; move ua , v0 ; move 3 , v0 + v0 )  
[9509] ( move 0 - ua , 3 ; v0 = 0 ; move 2 + v0 , ul )  
[9510] ( move ua , ul ; move 3 , 4 + ul ; move 2 + ul , ul )  
[9511] ( move ua , ul ; move ul - ua , 2 ; move 4 + 3 , ul )  
[9512] ( move ul - ua , 3 ; move ua - ul , ul ; v0 = 0 )  
[9513] ( move 0 - ul , ua ; move ua , ua - 4 ; v0 = ul )  
[9514] ( move 4 , ul ; move ua , 4 ; move ua + ul , ua + 3 )  
[9515] ( move 4 , ua - ul ; move 4 , ul - ua ; move ul , 0 )  | ( move 4 , ua - ul ; v0 = 4 ; move ul + v0 , ul )  
[9516] ( move 3 , ul ; move ua , 2 ; move 4 + ul , ua - ul )  | ( move 3 , ul ; ( move ua , 2 ; move 3 + 2 , ua - ul ) )  
[9517] ( move ul , ua ; move 2 - ul , 4 ; move ua , ua - 3 )  
[9518] ( move ul , ul ; move 2 , 3 + ul ; move ua - 3 , ul )  
[9519] ( move ua , 2 - 4 ; move ul , ul / ua ; move ul , 0 )  | ( ( move ua , ul - 3 ; pen ul ) ; move 2 , ul / ua )  
[9520] ( move ua , 3 + ul ; move ul , 2 ; move ul , 4 + ul )  
[9521] ( move ua + ul , 2 ; move 2 , ua - ul ; v0 = ul )  
[9522] ( move 3 / ua , 4 + ul ; move 0 , ul ; move ua , ul )  
[9523] ( v0 = 2 ; move v0 , 3 ; move ua - v0 , v0 )  
[9524] ( v0 = 4 ; move ua , 2 ; move v0 + v0 , v0 )  
[9525] ( move 3 , ul + ul ; move 3 , ua + 3 ; move ul , ul )  
[9526] ( ( pen 4 ; move ul , ul / 4 ) ; move ua - 3 , ul )  
[9527] ( move ua , ua - 3 ; move 3 , ul ; move 4 , ua + ul )  
[9528] ( move ul , ul ; move 2 - ul , ul ; move 3 - ua , 2 )  
[9529] ( move ua , 3 ; move ul + ul , ua ; move 3 , ua - 4 )  
[9530] ( move 2 + ul , 0 ; move ul , ua / 4 ; move ul , ul )  
[9531] ( move 2 , 3 - ul ; move 4 , ul ; move ua , ua + ul )  
[9532] ( move 3 - ul , ua ; move ul , ul ; move 2 , ua + 4 )  
[9533] ( move 0 , ul ; move ua + ul , ul / 4 ; move ul , 2 )  
[9534] ( move ul , 0 ; move 4 , ul ; move ul - ua , ul - 3 )  
[9535] ( move ua , ua ; move 2 , ul - ua ; move 4 + ul , 4 )  
[9536] ( move ua , ul / ua ; move 0 , ul ; move 3 , 2 / ua )  
[9537] ( move 0 - 4 , ul ; move ua , ul ; move 4 , ul + ul )  
[9538] ( move ua , 2 + ul ; move 4 , 2 - ul ; move ul , ul )  
[9539] ( move 3 , 2 ; move ua , ua + ul ; move ul , ul / 2 )  
[9540] ( move ua + 3 , 2 / ua ; move ua , 4 ; move ul , ua )  
[9541] ( move ul / 3 , ua ; move ua + 2 , ul ; move ul , 2 )  
[9542] ( move ul , 4 ; move ul - ua , 0 ; move 4 + ul , ul )  
[9543] ( move ul / 2 , ul - 3 ; move ua , ul ; move 2 , ua )  
[9544] ( move ua , 4 ; move 0 , ua * ua ; move 4 , ul / ua )  
[9545] ( move 4 , ul ; move ul - 4 , 0 ; move ul , ul - ua )  
[9546] ( move 2 , ul ; move ul , 3 / ua ; move 2 + ul , ul )  
[9547] ( move 2 , ul - ua ; move 4 , 3 ; move ul + ul , ul )  
[9548] ( move ul - 4 , ua ; move ul , 0 ; move ua / 3 , ul )  
[9549] ( v0 = ua / 2 ; move v0 , v0 ; move v0 , 2 )  
[9550] ( move ua + ul , 4 + ul ; move 4 , 3 ; move ua , ul )  
[9551] ( move ul , ul ; move ua / 2 , ul - ua ; move 2 , 3 )  
[9552] ( move 2 , 4 / ua ; move ul , 3 ; move ua + ul , ua )  
[9553] ( move ul - ua , ua + 4 ; move ua , 3 ; v0 = ua )  | ( move ul - ua , ua + 4 ; move ua , 3 ; v0 = ul )  
[9554] ( move ul , 3 ; move ul , 2 - ua ; move 3 - ul , ul )  | ( ( move 3 - 2 , 2 + ul ; move ul , 2 ) ; move 2 , ul )  
[9555] ( move ul , ul + ul ; move 2 , 4 + 3 ; move ul , ul )  
[9556] ( move 4 , ua ; move ul , ul ; move ua - 2 , 4 - ua )  
[9557] ( move 0 , 3 ; ( move ua , ul ; move ua , ua * ua ) )  
[9558] ( move ua + 2 , ul ; move ul / 3 , ul ; move 2 , ul )  
[9559] ( move ul , 3 ; move 4 + ul , ul / ua ; move 0 , ul )  
[9560] ( move 4 , ua ; move ua + ul , 4 + ul ; move ua , 4 )  
[9561] ( move 2 , ul ; move 2 / ua , ul ; move ul - ua , 3 )  
[9562] ( move ul + ul , ua ; move 4 , 2 ; move ul , 4 - ua )  
[9563] ( move ul - 4 , 3 - 2 ; move ul , ua ; move ua , ul )  
[9564] ( move ua - ul , 3 + 2 ; move ul , ul ; move ul , 4 )  
[9565] ( move ul , ua ; move ul , 3 + ul ; move 2 , ua / 3 )  
[9566] ( move ul , ul ; move ul - 4 , 3 + 2 ; move ul , ua )  
[9567] ( move 2 , ul ; move ul , ua - ul ; move 4 , 2 - ul )  
[9568] ( move ua , 4 + ul ; move ua + ul , 3 ; v0 = ua )  
[9569] ( move ua , ul ; move ul - 3 , 4 + 3 ; move ua , ul )  
[9570] ( move ul + ul , 2 - 3 ; move ul , 4 ; move ua , ul )  
[9571] ( v0 = 4 ; move v0 , v0 ; move ua + v0 , 3 )  
[9572] ( move ua , 4 ; move ul , ua - 2 ; move ul , ua - 4 )  
[9573] ( move 2 , ua ; move ua , ua / 3 ; move ua , 4 - ul )  
[9574] ( move ua , ul / 4 ; move ua - ul , 2 ; move ua , 2 )  
[9575] ( move ul , ua ; move ul - 4 , 2 ; move ul , ua - 3 )  
[9576] ( move ul , ul + ul ; move 2 , ul ; move 2 - 4 , ul )  
[9577] ( move ul + ul , 2 ; move ul , 3 * 2 ; move ul , ul )  
[9578] ( move ua , 4 + ul ; move ul + ul , ul ; move 3 , 3 )  
[9579] ( move ua , 4 ; move ua , ua - 2 ; move ul / 3 , ua )  
[9580] ( move 4 - ua , ul ; move ul - 2 , 3 ; move ua , ul )  
[9581] ( move ua , ul ; move 4 - ul , ul - 2 ; move 2 , ul )  
[9582] ( move ul , ul ; move ua + 3 , 3 ; move ul + ul , 4 )  
[9583] ( move ul , ua ; move ua , ul / ua ; move 4 + 2 , 3 )  
[9584] ( move ua , 3 ; move ua + ul , ua * ua ; v0 = 3 )  
[9585] ( move ua + ul , ul ; move ul , 2 ; move 4 , ua * 3 )  
[9586] ( move ul , 4 - ul ; move ua - 3 , ua ; move 2 , ul )  | ( move ua - 2 , ua + 3 ; pen ul ; move ul + ul , ul )  
[9587] ( move 3 , ul ; move ul + ul , 3 + ul ; move 3 , ul )  
[9588] ( ( pen 4 ; move 2 , 4 ) ; move 3 , ul ; move 2 , 3 )  
[9589] ( move 4 , ua ; move ul + ul , 4 + 3 ; move ua , ul )  
[9590] ( move ul / 3 , ul ; move 0 - ua , ul ; move ul , 3 )  | ( move ul , ul + ul ; move ua , 0 ; move 2 / 4 , 2 - ua )  
[9591] ( move ul , ul ; move ua , ul + ul ; move 2 - 4 , 3 )  
[9592] ( move 4 - 2 , ul ; move ua , 4 ; move ua , ul + ul )  
[9593] ( move 2 + ul , 4 + ul ; move ua , 4 ; move ul , ul )  
[9594] ( move ul - ua , ul ; move ul , 4 ; move 2 , 3 + ul )  
[9595] ( move ua , 2 ; move ul , ul / ua ; move 3 + ul , 3 )  
[9596] ( move ul , ua ; move 3 , 2 ; move ua / 4 , ua - ul )  
[9597] ( move ul , ua ; ( move ul , ul ; move 0 - 2 , ul ) )  
[9598] ( move 3 , ul ; move 4 / ua , ul ; move 2 , ua + ul )  
[9599] ( move ul + ul , ul ; move 4 , 2 ; move ul - ua , 4 )  
[9600] ( move ul , ul ; move 4 , ua + 4 ; move 3 + ul , ul )  
[9601] ( move ul , 2 ; move ua , 4 ; move ul + ul , 3 / ua )  
[9602] ( move ua - 2 , 3 - ul ; move ul , ul ; move 4 , ul )  
[9603] ( move 2 , ua + ua ; move ul , ul ; move ua / 4 , 4 )  
[9604] ( move 4 , 2 ; v0 = ua ; move v0 , v0 * v0 )  
[9605] ( move ul , 3 - ua ; move 2 , ul ; move ua / 4 , ua )  
[9606] ( move ua , ul / 3 ; move ul , ua - ul ; v0 = 0 )  
[9607] ( move 2 - ul , 3 ; move ul + ul , ul ; move 4 , ul )  
[9608] ( move ua , 3 ; move 4 - ua , ul ; move ul , 2 / ua )  
[9609] ( move ua , ul ; ( move 3 , ul ; move ul - ua , 0 ) )  
[9610] ( move ua , ua ; move ua / 4 , 2 ; move ul , 3 - ul )  | ( move ua , 0 ; ( v0 = ua / 4 ; move v0 , 2 - ua ) )  
[9611] ( move 4 , ul ; move ua , ua - 4 ; move 3 , ua * ua )  
[9612] ( v0 = 4 ; move ua , 4 + v0 ; move v0 , v0 )  | ( move ua , 4 * 2 ; ( move 4 , 4 ; v0 = ua + ua ) )  
[9613] ( move ul , ua - 4 ; move ua , 4 ; move 2 - ul , ul )  
[9614] ( move 3 + ul , ul ; move ua / 3 , 2 ; move ul , ul )  
[9615] ( move ul - 3 , 4 ; move ul , ul ; move 4 , ua + ua )  
[9616] ( move ua / 2 , ua / 3 ; move ua , ul ; move ua , 3 )  
[9617] ( move ua , ul ; move 2 , ul - ua ; move 4 , ul - 4 )  
[9618] ( move 4 , 4 - ua ; move ul + ul , 4 ; move ua , ua )  
[9619] ( move ul , 2 / 4 ; move ul - ua , ul ; move ua , 2 )  
[9620] ( move 4 , 3 ; move ua , 4 + ul ; move ul , ul + ul )  
[9621] ( move 4 , ua ; move ua , ua - ul ; move ul , 4 + 4 )  
[9622] ( move ul , ul ; move 4 , 4 ; move ua + ul , 2 - ul )  
[9623] ( move 3 , ul ; move ul - ua , ua + 4 ; v0 = ua )  | ( move 3 , ul ; ( move ul - ua , ua + 4 ; v0 = 4 ) )  
[9624] ( move ul , 3 ; move ua , 3 - 4 ; move ul , ua - ul )  
[9625] ( move ul , 3 ; move ul - 3 , ul ; move ua , ul - 3 )  
[9626] ( move ul , ul ; move ua , 3 - ul ; move 2 - 4 , ul )  
[9627] ( move 3 , ul ; move ul , ul / 3 ; move 2 - ua , ua )  
[9628] ( move 4 , 3 ; move ul / ua , ul ; move ul , ua + 2 )  
[9629] ( v0 = 4 + 3 ; move v0 , v0 ; move ul , v0 )  
[9630] ( move 2 , ul ; move 4 / ua , ua + ul ; move 3 , ul )  
[9631] ( v0 = 2 ; move v0 * 4 , v0 ; move ua , v0 )  
[9632] ( move ul , 2 ; move 3 / 2 , ul ; move ul + ul , ul )  
[9633] ( move ua - ul , 3 ; move 2 , ul ; move ua / 3 , ul )  
[9634] ( move 3 , ua ; move ul , ua - 4 ; move ul / ua , 2 )  
[9635] ( move ul , 3 + ul ; move ul - 4 , 4 ; move ua , ua )  
[9636] ( move ul , 4 ; move ua - ul , ua / 3 ; move ua , 2 )  
[9637] ( move 2 , 4 ; move ua / 4 , ul ; move ul , ua + ua )  
[9638] ( move 2 - ua , ua ; move ul , ua ; move 4 , ua / 4 )  
[9639] ( move ul , ul / 3 ; move ua - 2 , 3 ; move ua , ul )  
[9640] ( move 4 , ul - 4 ; move 2 , ua ; move ul + ul , ul )  
[9641] ( move ul , ul - 2 ; move ul , ul - ua ; move 4 , 3 )  
[9642] ( move 3 / 2 , 4 ; move ul , ua ; move ua + ul , ul )  
[9643] ( move ul , 4 ; move 2 + ul , ua - 4 ; move ul , ul )  
[9644] ( move ul , ua + 4 ; move ua , ul ; move ul / 3 , 2 )  
[9645] ( move ul , 0 ; ( pen 2 + 2 ; pen 0 ; move 3 , 3 ) )  
[9646] ( move 3 , ua * 2 ; move ul + ul , ul ; move 4 , ul )  
[9647] ( move 2 , 3 ; move ua + ul , 4 ; move ul / ua , ul )  
[9648] ( move 4 , ul - ua ; move 3 , 4 + ul ; move ul , ul )  
[9649] ( move 4 / ua , ul ; move ul , ul ; move ua , 3 + 3 )  
[9650] ( ( move 2 , ul ; move ul , ul + ul ) ; move ua , 2 )  
[9651] ( move ul , ua ; move ua , ul ; move 3 - 4 , 4 - ul )  
[9652] ( move ul , 4 ; move ua , 3 + ul ; move ul , ua / 3 )  
[9653] ( move ul , 2 / ua ; move 3 , ua ; move ua , ul / 3 )  
[9654] ( move ul - ua , ul / 3 ; move 3 , ul ; move ua , 3 )  
[9655] ( move ul / ua , ua ; move ua , 4 + 3 ; move 4 , ul )  
[9656] ( move ul , ua ; move 3 - ua , ul / 2 ; move 4 , ul )  
[9657] ( ( move ua , ul ; move ul , 0 ) ; move ua - 4 , ul )  
[9658] ( move 4 , ua - ul ; move ul , 0 ; move ul / 4 , ul )  
[9659] ( move ua , ul ; move 4 , 4 * 3 ; move ul + ul , ua )  
[9660] ( move 3 , ul ; move ua , ul / ua ; move 3 , ua - 4 )  
[9661] ( move 4 - ul , 3 ; move ul , ua - ul ; move 3 , ul )  
[9662] ( move ua + ul , ul - 4 ; move ul , 3 ; move 4 , ul )  
[9663] ( move 4 , ua / 3 ; move ul , ul ; move ua - 3 , ua )  
[9664] ( v0 = 4 + 3 ; move ua + ul , 0 ; move v0 , 2 )  
[9665] ( move ua + 4 , ul ; move ua , ul - 3 ; v0 = ul )  
[9666] ( move ul / 4 , ul ; move ua , ua + ul ; move 4 , 2 )  
[9667] ( move 2 , 2 / ua ; move ul , ul ; move ul - 4 , ul )  
[9668] ( move ul - ua , ul ; move ul / 3 , 2 ; move ua , 4 )  
[9669] ( move 4 , 3 + ul ; move ul , 4 + ul ; move ul , ul )  
[9670] ( move 2 , ul / 4 ; move ua , 4 ; move ul + ul , ua )  
[9671] ( move ul + ul , 4 - ul ; move 4 , ul ; move 2 , ul )  
[9672] ( move ul + ul , ul ; move ua - 4 , 2 ; v0 = ul )  
[9673] ( move 2 , ul ; move ul - ua , ul / 3 ; move 3 , ul )  
[9674] ( move ul , ul ; move ul , ua / 4 ; move 2 + ul , 3 )  
[9675] ( v0 = 2 ; move 4 , 0 - ul ; move ua + v0 , 2 )  
[9676] ( move ul , ua * 4 ; move 2 , ua / 3 ; move ua , ul )  
[9677] ( move ul - ua , 3 ; move ul , 4 / ua ; move 2 , ul )  
[9678] ( move ul , ul ; move ul , 3 + ul ; move 4 + ul , 4 )  
[9679] ( move ul , 3 * 2 ; move ul - ua , ul ; move 4 , ul )  
[9680] ( move ua , ul ; move ul , ul ; move ul - 3 , 4 + 4 )  
[9681] ( v0 = 4 ; move v0 , 4 ; move v0 + ul , v0 )  
[9682] ( ( move ul , ul ; move ul , ul ) ; move ua , 2 + 2 )  
[9683] ( move 4 , ul ; move 4 + ul , ul ; move ul , ul - 2 )  
[9684] ( ( move ul , ua * ua ; move 0 , 4 ) ; move ua , ul )  
[9685] ( move 4 + 3 , ul ; move 3 - ul , ul ; move ul , ul )  
[9686] ( move 4 , ul + ul ; move ul , ua - ul ; move 3 , 4 )  
[9687] ( move ul - 4 , ua ; move 2 , ul ; move 4 - ul , ul )  
[9688] ( ( move ul , ul ; move 3 , ua + ul ) ; move 2 , ul )  
[9689] ( move ul - 4 , 4 + ul ; move ul , 3 ; move ul , ul )  
[9690] ( move 4 , ua - ul ; move ul - ua , 4 ; v0 = ua )  
[9691] ( ( move ua , 4 ; move ul , 2 + ul ) ; move ua , ul )  
[9692] ( move ul , 3 / ua ; move 4 , ua ; move 4 + ul , ul )  
[9693] ( move ul , 4 ; move 4 - ua , ul ; move 4 - ul , ua )  
[9694] ( move ua + ul , 4 * 2 ; v0 = ul ; move ul , ul )  
[9695] ( move 3 * 3 , ul ; move ul , ua ; move ul - 4 , ul )  
[9696] ( move ul - 4 , ul ; move ul , 2 ; move 3 / ua , ul )  
[9697] ( move ul , 4 - ul ; move ua , 4 ; move 4 , ua * ua )  
[9698] ( v0 = 4 ; move v0 , v0 ; move ul , v0 * 3 )  
[9699] ( v0 = 4 ; move v0 , 3 ; move v0 / ua , v0 )  
[9700] ( move ul , ua + ul ; ( move ul , ul ; move 3 , 2 ) )  
[9701] ( move ul , ua ; move 4 + ul , ua / 3 ; move ul , 4 )  
[9702] ( move ul , ul ; move ul / 3 , ua * 2 ; move 3 , ul )  
[9703] ( ( move ul , ul ; move ua , ul ) ; move 2 , 3 + ul )  
[9704] ( move 4 , ul - ua ; move 4 , ua - ul ; move 4 , ul )  
[9705] ( move ua , ua / 3 ; move ua , ua * ua ; v0 = 4 )  
[9706] ( move 2 , 4 / ua ; move ua , ul ; move 3 / ua , ul )  
[9707] ( move ua , ul ; move 4 , ul ; move 4 + ul , ul - 4 )  
[9708] ( move ul , 3 + ul ; move ul , 4 / 3 ; move ua , ul )  
[9709] ( ( move ul , ua ; move 2 , ua * ua ) ; move 3 , ul )  
[9710] ( move ul , 3 - ul ; move 3 , ul ; move 3 / ua , ul )  
[9711] ( move ul , 3 - 4 ; move 3 - ul , ul ; move ul , ul )  
[9712] ( move 3 , 4 + ul ; move ul - ua , ul ; v0 = ul )  
[9713] ( move ul , ua ; move ul - ua , 4 * 3 ; v0 = ua )  
[9714] ( move 4 + 2 , ua ; v0 = 3 ; move ua , 2 + v0 )  
[9715] ( move ua + ul , 4 * 4 ; move ul , ul ; move 4 , ua )  
[9716] ( ( move 4 + ul , 0 ; move ul , ul ) ; move ul , ul )  
[9717] ( move ua , 3 + ul ; ( move ul , 2 ; move ul , ul ) )  
[9718] ( move ul , ul ; move ul , 3 * 3 ; move ua - ul , 4 )  
[9719] ( move ul , ul ; move 2 / ua , ul ; move 3 , ul - 4 )  
[9720] ( move 3 , 2 ; v0 = 4 + ul ; move 0 - ua , v0 )  
[9721] ( move ul - 4 , 4 ; move ua + ul , ul ; v0 = ua )  
[9722] ( move ul , ua ; move 4 - ul , 2 / 4 ; move ua , ul )  
[9723] ( move 4 , ua ; move 4 , ul / ua ; move ua , ul - 3 )  
[9724] ( move 4 , ul ; move ul / 3 , ul ; move 3 + ul , ua )  
[9725] ( ( move ua , 3 ; move ul , ua + 4 ) ; move ua , ul )  
[9726] ( move ul , 3 ; move ua , 4 - ul ; move ul - 4 , ul )  
[9727] ( ( move ua , 3 ; move ul + ul , ul ) ; move ua , 3 )  
[9728] ( move ul , 2 ; ( move 4 , ua + ul ; move ua , ul ) )  
[9729] ( move ul , ul ; move 4 - ua , 4 ; move ul , ul - 3 )  
[9730] ( ( move ua + ul , 3 ; move ul , 4 ) ; move ul , ua )  
[9731] ( move 4 , ul ; move 4 / ua , ul ; move ul , ul - 2 )  
[9732] ( move ul - ua , ul ; move ua - 4 , ul ; v0 = 4 )  
[9733] ( move ul , 4 * 4 ; move ul , 4 + ul ; move ua , ul )  
[9734] ( ( move ul , 3 ; move 2 , ul + ul ) ; move ul , ul )  
[9735] ( move 3 , 3 / 4 ; move ul + ul , ul ; move ul , ul )  
[9736] ( move 0 , 0 ; ( pen 0 ; move ua , 0 ) ; move ul , 0 )  | ( move 0 , ul ; ( pen 0 ; move ua + ul , ul - 2 ; pen 0 ) )  
[9737] ( v0 = 4 / ua ; move 4 , v0 ; move v0 , v0 )  
[9738] ( ( move ul , ul ; move 2 , ul ) ; move ul - 3 , ua )  
[9739] ( ( move 3 , ul ; move ul , 3 ) ; move ua + ul , ul )  
[9740] ( move ua , ul ; move ul , 4 * 2 ; move ua , ul / 4 )  | ( move ua , ul ; ( move ul , ua * ua ; move ua , ul / ua ) )  
[9741] ( ( move ul , ul ; move ul + ul , 2 ) ; move 3 , ul )  
[9742] ( move 2 , 4 ; move ul , ul / 3 ; move ua , ul / ua )  
[9743] ( move ul , ul / ua ; move ua + 3 , 4 ; v0 = ul )  
[9744] ( ( move ul , 2 ; move ua + ul , 4 ) ; move ul , ul )  
[9745] ( move ua - 4 , 0 ; v0 = ua - 2 ; move v0 , 4 )  
[9746] ( move ua , 3 ; move ua - ul , ua / 4 ; v0 = ul )  
[9747] ( move ul , ua + ul ; ( move 2 , ul ; move 4 , ul ) )  
[9748] ( ( move ua , ul ; move 2 / ua , 2 ) ; move ul , ul )  
[9749] ( ( move 4 , ua ; move ul , 2 ) ; move ul - ua , ul )  
[9750] ( move ua , ul / 4 ; move ul , 3 ; move ul - 3 , ul )  
[9751] ( move ul , 4 / 3 ; move ua , ul + ul ; v0 = ua )  
[9752] ( move ul , 4 * 2 ; move ua - ul , ul ; v0 = ul )  
[9753] ( move 4 , ua - ul ; move ul , ul / 2 ; v0 = ul )  
[9754] ( move ul , 0 ; move ua + ul , ua / 3 ; pen ua + 2 )  
[9755] ( move 3 , 4 ; ( move ul , ul ; move ua , ua * ua ) )  
[9756] ( move ua - 2 , 0 ; move ua + ul , 4 + ul ; pen ul )  
[9757] ( ( move ua , ua ; move 4 , 4 ) ; move ua - ul , ul )  
[9758] ( move ul / 2 , ul ; move 4 , ul ; move ul , 3 / ua )  
[9759] ( ( move 3 / ua , ul ; move ua , ul ) ; move 2 , ul )  
[9760] ( move ul , ua - ul ; ( move ul , 4 ; move 2 , ul ) )  
[9761] ( move ua , 3 ; move ua + 3 , ul + ul ; pen 0 - ul )  
[9762] ( move ul , ul ; ( move ua , 4 * 2 ; move ul , ua ) )  
[9763] ( ( move ul - ua , ul ; move ul , 2 ) ; move 4 , ul )  
[9764] ( ( move ua - 2 , ul ; move 4 , ul ) ; move ul , ul )  
[9765] ( ( move 3 - ul , 2 ; move ul , ul ) ; move ul , ul )  
[9766] ( ( move ul , ua ; move ua , 3 - ul ) ; move 4 , ul )  
[9767] ( ( move ua , ua ; move ul / 4 , ul ) ; move ua , 2 )  
[9768] ( ( move ul , ul ; move ul - 3 , ua ) ; move ul , 3 )  
[9769] ( move 3 / ua , ul ; move ul - ua , 4 ; v0 = ul )  
[9770] ( move 3 , ul ; ( move ul - ua , ul ; move ul , 3 ) )  
[9771] ( move 4 + 2 , 3 / ua ; v0 = ua ; move v0 , 2 )  
[9772] ( move 3 / ua , 4 ; move ul , ul ; move 4 , ul / ua )  
[9773] ( ( move ul , ul ; move ul , ul - 4 ) ; move 2 , ul )  
[9774] ( move 3 , ua + 2 ; v0 = 4 + 4 ; move ul , v0 )  | ( v0 = 2 ; move v0 + ul , v0 ; move ul , v0 * 4 )  
[9775] ( pen 4 ; move ul - ua , 0 - ul ; move ul , ua + 2 )  | ( pen ua * ua ; move ul , 0 - 2 ; move ua - ul , ul )  
[9776] ( move ul , 2 ; ( move ul , ul ; move ua , ul / 3 ) )  
[9777] ( move ua + ul , ua - ul ; pen ul ; move 3 + 2 , 2 )  
[9778] ( move ul - ua , ul ; v0 = ul ; move ua / 4 , 4 )  
[9779] ( move 2 , ua ; ( move ul , ul / 3 ; move ul , ul ) )  
[9780] ( move ul , 4 ; ( move ua , ul / 2 ; move ul , ua ) )  
[9781] ( move 3 + ul , ua - ul ; pen 0 ; move ua + ul , 4 )  
[9782] ( move ua + 3 , ua / 3 ; move ua , ul + ul ; pen 0 )  
[9783] ( move ul , 0 - 3 ; pen ul - 2 ; move ul - ua , ul )  
[9784] ( pen ua ; move ua , ua + 2 ; move 2 + ul , 4 / ua )  
[9785] ( move ua - ul , 2 ; pen ul / ua ; move 2 - ul , 0 )  
[9786] ( ( move ul , ul ; move 3 , ua / 4 ) ; move ua , ul )  
[9787] ( move 4 - ua , ul ; v0 = 0 ; move 4 , v0 - 4 )  
[9788] ( move 2 - ua , ua ; move 2 - ua , ua / 3 ; pen ua )  
[9789] ( move 4 , 3 ; v0 = 4 + ul ; move 2 - ua , v0 )  
[9790] ( move 3 / ua , 4 ; ( move ul , ul ; move ua , ul ) )  
[9791] ( move 3 - ul , ul ; ( move 4 , ul ; move ul , ul ) )  | ( move ul + ul , ul ; ( move 4 , ul ; move ul , ul ) )  
[9792] ( move 2 , 4 * 2 ; v0 = ua ; move 3 , ua * v0 )  
[9793] ( ( move ua , ua ; pen 0 ) ; move ua + ul , 2 - ua )  
[9794] ( ( move 4 , ua ; move ul , ua ) ; move ul , 4 / ua )  
[9795] ( ( move ul / ua , ua ; move 4 , ul ) ; move 3 , ul )  
[9796] ( ( move ul , ul / ua ; move 4 , ul ) ; move 2 , ul )  
[9797] ( pen ul ; move ua , 0 - 3 ; move 2 / ua , ul + ul )  
[9798] ( move ua + ul , ua ; move ul , ul / 2 ; pen 0 - 3 )  
[9799] ( move ua + 2 , ua - 4 ; pen 0 ; move ul , ul / ua )  
[9800] ( move ua + 2 , ua + ul ; pen ua ; move ul , 4 * 2 )  
[9801] ( move ua / 4 , ul + ul ; pen 0 ; move ua + ul , 3 )  
[9802] ( pen ua + 4 ; move ua / 2 , 2 ; move ua + ul , ul )  
[9803] ( move 3 , ul - 4 ; v0 = ua - 2 ; move v0 , 4 )  
[9804] ( move 3 , ua / 4 ; v0 = ul ; move 2 , 2 - v0 )  
[9805] ( move ul , ul ; ( move ul , 3 / 4 ; move ua , ul ) )  
[9806] ( ( move 4 , 0 ; v0 = ul ) ; move ua - 2 , v0 )  
[9807] ( move ua - 3 , ua * ua ; pen ua ; move 3 - ul , 2 )  
[9808] ( move 0 - 4 , ua ; pen ul - ua ; move 4 - ua , ul )  
[9809] ( pen ul ; move ua - 3 , 0 ; move ul + ul , 3 / ua )  
[9810] ( v0 = 4 - ul ; move 2 , v0 ; move ua , 4 + 4 )  
[9811] ( move ul , 2 - 3 ; pen ua ; move 3 - ua , ua - ul )  
[9812] ( move ul / 3 , ul ; ( move ua , ul ; move 4 , ul ) )  
[9813] ( move 2 , ul / ua ; pen 3 ; move ua + ul , ua - 2 )  
[9814] ( move ua + ul , 3 / 2 ; pen ua - ul ; move 2 , ul )  
[9815] ( move ul , 3 ; ( pen 0 ; move 0 , 0 ; move ua , 2 ) )  
[9816] ( ( move ul , 4 ; move ul , ul ) ; move ua , ul / 4 )  
[9817] ( ( move ul - ua , ul ; pen 0 ) ; move 2 , ua + ul )  
[9818] ( move 2 - ua , ua ; move 3 , ua / 4 ; pen ua + ul )  
[9819] ( move ua , ua - 4 ; pen ua ; move 2 - 4 , ua * ua )  
[9820] ( move ul , 3 - ul ; pen ul ; move ua + ul , 4 + 2 )  
[9821] ( move 3 , ua * ua ; pen ul - 2 ; move 3 + ul , ul )  
[9822] ( move 3 * 3 , ul ; pen ul - ua ; move ua + ul , 2 )  
[9823] ( move ul , 4 ; v0 = ua + 4 ; move 3 - v0 , 4 )  
[9824] ( move ua , ua * ua ; move 4 + 3 , ul ; pen ua - 3 )  
[9825] ( pen ul ; move 2 * 2 , ul / ua ; move ua + ul , 2 )  
[9826] ( ( move ua + ul , 3 ; move 0 - ua , ul ) ; pen ul )  
[9827] ( move ua / 2 , ua ; move 3 - ua , 2 ; pen ul / ua )  
[9828] ( move ua , 2 / ua ; pen 4 ; move ua + ul , 4 - ua )  
[9829] ( pen ua + ua ; move ua , 3 / 4 ; move 3 - ua , ul )  
[9830] ( move ua - 2 , 3 - ul ; move ua , 3 / ua ; pen ul )  
[9831] ( move ul - 4 , ua ; v0 = 3 * 3 ; move v0 , 4 )  
[9832] ( move 3 , 4 * 3 ; v0 = 4 - ua ; move v0 , ul )  
[9833] ( move ul + ul , ul ; pen 3 / ua ; move ua , 3 - 2 )  
[9834] ( move ul + ul , 2 ; pen 4 ; move ul - 4 , ua + ul )  
[9835] ( pen 3 ; move ua , ua - ul ; move 3 + ul , ua / 3 )  
[9836] ( move 2 - ua , 4 ; ( v0 = 3 ; move ua , v0 ) )  
[9837] ( move ua - 2 , ul / 2 ; move 2 - ul , ul ; pen ul )  
[9838] ( move 4 - ua , 4 + ul ; move 3 + ul , ul ; pen ua )  
[9839] ( pen ua + 3 ; move 4 , ua - 4 ; move ua - ul , ul )  
[9840] ( move 2 , ua - 4 ; move ua , ul / ua ; pen ua - 3 )  
[9841] ( move 3 - ua , ua / 4 ; move ul , ul ; pen 2 - ua )  
[9842] ( move ul , 4 * 2 ; move 4 , ua * ua ; pen ua + ul )  
[9843] ( move ul - 3 , ul / 4 ; move ua , 2 + ul ; pen ua )  
[9844] ( pen ul ; ( move 4 , 0 ; move ua + ul , ua * ua ) )  
[9845] ( move ua - ul , ul ; pen ua + 4 ; move ul - 3 , 4 )  
[9846] ( move ua + ul , 4 * 2 ; move ul - 4 , ul ; pen ua )  
[9847] ( pen ul ; move ua + ul , 3 ; move ul + ul , 4 * 3 )  
[9848] ( move ua , ul ; pen 4 / ua ; move ua + 2 , ul - 4 )  
[9849] ( move 4 + ul , ua ; pen ul ; move 4 + ul , 4 + ul )  
[9850] ( move 4 + ul , ul ; pen ua * 2 ; move ua - 4 , ul )  
[9851] ( move ul , ua * 2 ; pen ul / 3 ; move 3 , ua + ul )  
[9852] ( move 4 / ua , 3 * 3 ; v0 = 4 ; move ua , v0 )  
[9853] ( move 4 - ul , ul ; move ua - ul , ul / 3 ; pen 0 )  
[9854] ( v0 = 4 + ul ; move ul - 4 , 4 ; move 4 , v0 )  
[9855] ( pen ul ; move 4 / 2 , ul ; move 2 + ul , ua * ua )  
[9856] ( move 3 - 4 , ua * ua ; pen ul - ua ; move 3 , ul )  
[9857] ( move ua , 4 / ua ; move 4 - ua , 3 ; pen ua + ul )  
[9858] ( ( pen 3 ; move 3 , 3 ) ; pen 4 ; move ul , 4 + 3 )  
[9859] ( move 4 , 4 ; pen ul / ua ; move 2 + ul , ul + ul )  
[9860] ( move ul - 2 , ul ; move 3 , ua / 4 ; pen ul - ua )  
[9861] ( move ua / 4 , ul ; pen ua + 3 ; move 4 + ul , ul )  
[9862] ( move ua - ul , ua / 4 ; move 2 , 2 ; pen ul / ua )  
[9863] ( v0 = ua ; ( move ua , 4 / v0 ; move 2 , 3 ) )  
[9864] ( move ul , 2 / ua ; pen ua * 4 ; move ua , 4 + ul )  | ( pen ul / ua ; move ul , ul / 3 ; move ua , 4 + ul )  | ( move ul , ul / 3 ; move ua , 3 + 2 ; v0 = 3 / ua )  
[9865] ( move ua , 3 ; ( pen 2 ; move ua - ul , ua - ul ) )  
[9866] ( move ua , 3 - ul ; pen ul ; move 4 + ul , ul - 4 )  
[9867] ( move ul , 4 - ul ; pen 3 ; move ua - ul , 4 + ul )  | ( move ul , 3 ; v0 = ua - ul ; move v0 , 4 + ul )  
[9868] ( pen 4 - ul ; move ul , 3 ; move ua / 2 , ua * ua )  
[9869] ( move 2 - ua , 3 ; move ua , ul / 3 ; pen ul / ua )  
[9870] ( move ul , 4 + ul ; move 4 + ul , 4 + ul ; pen ul )  | ( v0 = 4 + ul ; move ul , v0 ; move v0 , v0 )  
[9871] ( pen 2 + ul ; move ul , 3 / ua ; move ua , ua / 4 )  
[9872] ( ( move 4 , ul ; pen 0 ) ; move ul + ul , ua - ul )  
[9873] ( ( move 0 , 4 ; pen 0 ; move ul , 0 ) ; move 3 , ul )  
[9874] ( ( move ua - ul , ua ; pen ua ) ; move 3 , 2 / ua )  
[9875] ( ( move ua , 3 ; pen ul - ua ) ; move ua , ul - 3 )  
[9876] ( ( pen 2 ; move ul - ua , ul ) ; move 3 - ua , ul )  
[9877] ( move 3 , ua * ua ; ( move 2 , ua - ul ; pen ul ) )  
[9878] ( move 4 / 3 , ua - ul ; pen ul ; move 3 + ul , ul )  | ( v0 = ua - ul ; move v0 - 4 , v0 ; move 4 , ul )  
[9879] ( move 4 , 2 ; ( pen 0 ; move ul , 2 ) ; move 0 , ul )  
[9880] ( move ua , 3 - ua ; pen ul ; move ul - 4 , ua / 4 )  
[9881] ( move ul , ul - 3 ; pen 3 * 3 ; move ua , ul / ua )  
[9882] ( move 3 , ul / ua ; pen ul + ul ; move 3 , ul - 4 )  | ( v0 = 0 - 3 ; move v0 , v0 ; move v0 , v0 )  
[9883] ( pen ul / ua ; move ua + ul , 4 ; move 2 , ul / 3 )  
[9884] ( pen ul / ua ; move ul , 3 + ul ; move ul - 4 , 4 )  
[9885] ( move 0 , ul ; ( pen ul / ua ; move 4 + ul , ul ) )  
[9886] ( ( move ua - ul , 3 / ua ; pen ua ) ; move 2 , ul )  | ( move ua - ul , 2 / 4 ; ( move 2 , ul ; move 0 , 0 ) )  
[9887] ( pen ul ; move 4 , ul - 4 ; move ul + ul , ul / 2 )  
[9888] ( move ul , 4 / ua ; ( pen ua ; move ua + 2 , ul ) )  
[9889] ( move ul , ul ; move ua + 2 , ua * ua ; move 0 , ua )  | ( move ul , ul ; move ul , ua * ua ; move ua + ul , ua )  
[9890] ( ( move ua , 0 ; pen ua ; move 2 , 4 ) ; move 3 , 2 )  
[9891] ( ( move ua - ul , 3 ; move ua , 4 + ul ) ; pen ul )  
[9892] ( move 4 , ul / 3 ; move ul + ul , 3 - ul ; pen ul )  
[9893] ( move 4 - ul , 3 - ul ; move ua , ul / 3 ; pen ul )  
[9894] ( move ul + ul , ul ; pen ul ; move ul - 3 , 4 / 3 )  
[9895] ( move 4 + ul , 4 / ua ; pen ul ; move ul , 3 / ua )  
[9896] ( move 3 , ua ; move ul + ul , 0 - ul ; move ua , ua )  
[9897] ( move ua , ul ; move 0 - 2 , ul ; move ua + ul , ul )  
[9898] ( move ua , 0 ; move ul , 2 + ul ; move ul , ua - ul )  
[9899] ( move ul , 0 ; move ul , ua * ua ; move ua + 2 , ul )  
[9900] ( move ua , 0 ; move ul , 0 ; move ul - ua , ul / ua )  
[9901] ( move ua , ul ; move 0 - ua , ul ; move ul , ua + 4 )  
[9902] ( move ua + 2 , ul - ua ; move ua , 2 ; move ul , ul )  
[9903] ( move ul , ul / 3 ; ( move 3 , ul + ul ; pen ua ) )  
[9904] ( move ua , 2 ; move 3 - ua , ua ; move ul , ua + ul )  
[9905] ( move ul , 0 ; move 3 , ua + ul ; move ua - ul , ul )  
[9906] ( move ua , ua ; move 4 + ul , 2 ; move ua , ua + ul )  
[9907] ( move ul - ua , ua + 2 ; move 2 , ua ; move ul , ul )  
[9908] ( move 4 , 3 ; ( pen ua ; move 3 , 0 ; move 2 , ul ) )  
[9909] ( move ul , ua + 2 ; move 2 , ul - ua ; move ua , ul )  
[9910] ( move ul , ua - 3 ; move ul , ul ; move ua + ul , 0 )  
[9911] ( move ul , 2 ; move ua , ua - ul ; move ua , 2 + ul )  
[9912] ( move ua , ua ; move ul , ul ; move ua + ul , 0 - 4 )  
[9913] ( move ua , ua ; move 4 , ua * ua ; move ul , 0 - ua )  
[9914] ( move ul , ul ; move ua , 2 - ul ; move 0 - ua , ul )  
[9915] ( move ul , 0 ; move ua , ua * ua ; move ua - 3 , ul )  
[9916] ( move 2 , 2 * 2 ; move 3 + 2 , 4 * 3 ; v0 = 2 )  
[9917] ( ( pen ul ; move ul , ua - 3 ) ; move ua , 4 / ua )  
[9918] ( move ua , 0 ; move ul , ua * ua ; move ua , 2 / ua )  
[9919] ( move 4 , 4 ; ( move 3 , ua ; move ua , 2 ; pen 0 ) )  
[9920] ( move ua - ul , 0 ; move ul , ul ; move ua - ul , 2 )  
[9921] ( move ua - 2 , ua ; move ul , ua + ul ; move 2 , ul )  
[9922] ( move ul , ua ; move ul , 0 - 4 ; move ua , ua + ul )  
[9923] ( move ul , ua ; move ua - ul , 3 ; move ua , 0 - ul )  
[9924] ( move ul + ul , 2 ; move 0 , ul ; move ua - ul , ul )  
[9925] ( move ul , ua + ul ; move 3 , ul ; move ul , ua + 2 )  
[9926] ( move 2 + ul , ul ; move ua , ul ; move 2 - ua , ul )  
[9927] ( move ua + ul , ul ; move ua , 3 + ul ; move 2 , ul )  
[9928] ( move ul , ul ; move 3 + 2 , ul ; move ua , ua + ul )  
[9929] ( move ul + ul , ua ; move ul , ul ; move ua , 3 + 2 )  
[9930] ( move ua , 2 + ul ; move ul - ua , ul ; move 2 , ul )  
[9931] ( move ua - ul , ul ; move 2 , ua + ul ; move 2 , ul )  
[9932] ( move 2 , ul + ul ; move ua - ul , ul ; move ua , 2 )  
[9933] ( move ua , ua ; move ul + ul , 3 - ua ; move 2 , ul )  
[9934] ( move ua , ua + ul ; move ul , ul ; move 0 - 4 , ul )  
[9935] ( move 4 , ua * ua ; move 0 - ul , ul ; move ua , ua )  
[9936] ( move ul , 2 ; move ul , ua + ul ; move ua , 3 + ul )  
[9937] ( move ua , ua - ul ; move ua - 3 , ua ; move ua , 4 )  
[9938] ( move 4 , ul ; ( v0 = ul ; pen 0 ; move 4 , 0 ) )  
[9939] ( move ul , 2 ; move ul , ua + ul ; move ua , 4 + ul )  
[9940] ( move ul , 0 - ul ; move ul , 4 ; move ua , ul - ua )  
[9941] ( move ua , 2 ; move ua - ul , ul ; move 3 , ua * ua )  
[9942] ( move ua , ua * ua ; move ul , ul ; move 0 - ul , 4 )  
[9943] ( v0 = ua - 2 ; move v0 , ua ; move v0 , v0 )  
[9944] ( move ul , ua ; move ul , ua ; move ua + ul , 3 * 2 )  
[9945] ( move 3 , ua ; move 2 , ul ; move ua - ul , ul - ua )  
[9946] ( move ul - ua , ua ; move 0 , ul / ua ; move 4 , ua )  | ( move 3 , ua * 3 ; move ul - ua , ua ; move 4 , ul / ua )  
[9947] ( move ua , ua / 3 ; ( move 4 / ua , ul ; pen ul ) )  
[9948] ( move 2 , ua ; move ul - ua , ua - 4 ; move ul , ua )  
[9949] ( move ua , 3 ; move 3 - ua , ua - ul ; move ul , ua )  
[9950] ( move ua , 0 - ul ; move ul , ul ; move ul - ua , 4 )  
[9951] ( move ul , ul ; move ua , 0 - 4 ; move ul - ua , ul )  
[9952] ( ( move 4 , ul / 4 ; move ua , ua * ua ) ; pen ul )  
[9953] ( move 2 , ul + ul ; move ul , 3 ; move ua , ua - ul )  
[9954] ( move 4 , ua + 3 ; move ul , ua + ul ; move ua , ul )  
[9955] ( move 2 , ul ; move 2 , ul ; move ul + ul , ul + ul )  
[9956] ( v0 = ua - 2 ; move v0 , v0 ; move ua , v0 )  
[9957] ( move 4 , ul + ul ; move ua , ul ; move ua + ul , 2 )  
[9958] ( move ua + ul , ul ; move 3 - ua , ua ; move 3 , ul )  
[9959] ( move 3 , 2 ; move ul + ul , ua - ul ; move ul , ul )  
[9960] ( v0 = 2 - ua ; move v0 , v0 ; move v0 , ul )  
[9961] ( move ul + ul , ul ; move 3 , 2 ; move ul , ul - ua )  
[9962] ( move ua , ua - 4 ; move ul , ul ; move 2 , ua * ua )  
[9963] ( move ul , 4 + 2 ; move ul , ul ; move ua , ul + ul )  
[9964] ( move ua - ul , ua * 3 ; move ul , 2 ; move ua , ul )  
[9965] ( move 3 / ua , ua ; move ua , ua - ul ; move 3 , ua )  
[9966] ( move ua , ua ; move 4 , ul ; move ul - 2 , ul - ua )  
[9967] ( move 2 , ul ; move ul , ua ; move ul - ua , 4 + ul )  
[9968] ( move ul , ua ; move ua , ul / 3 ; move ul , 0 - ul )  
[9969] ( move ul , 3 ; move ua , ul ; move ua - 3 , ua - ul )  
[9970] ( v0 = ua - 2 ; move v0 , v0 ; move v0 , ul )  
[9971] ( move 2 , ul ; move 3 + ul , ul ; move ul - ua , ul )  
[9972] ( move 4 , ua ; move ul , ua + ul ; move 3 - ua , ul )  
[9973] ( move ua , ua ; move ua - 3 , ul ; move 3 - ul , ul )  
[9974] ( move ua , ul ; move ua , ul + ul ; move ua / 3 , 2 )  
[9975] ( move ua , 2 - 4 ; move ua , ul + ul ; move ul , ul )  
[9976] ( move 2 , ul ; move ua , ul ; move ul + ul , 4 + ul )  
[9977] ( move ul , ul ; move ul - 3 , ul ; move ua , 2 + ul )  
[9978] ( move ul , 2 ; move 3 + ul , ul ; move ul , ua - ul )  
[9979] ( move ul / 3 , ul ; ( pen ul / 3 ; move ua , ul ) )  
[9980] ( move ua , ua ; v0 = 4 ; move v0 + v0 , v0 )  
[9981] ( ( move 3 , 2 ; move ul , 3 ; move ul , 2 ) ; pen 4 )  
[9982] ( move ul , ul + ul ; move ul , ul ; move 2 , ua - 3 )  
[9983] ( move ua + ul , 2 ; move ul , ua * ua ; move ul , 4 )  
[9984] ( move ua + ul , ua - ul ; move 4 , ul ; move ul , 2 )  
[9985] ( move 4 , ul - 2 ; move ul , ua ; move ua , ul - ua )  
[9986] ( move ul , ua ; move ua / 3 , 2 ; move ul - ua , ua )  
[9987] ( move ua , ua + 3 ; move ul , ul - 4 ; move ua , ul )  
[9988] ( move 2 , ul / ua ; move ul , ul ; move ua , 2 - ua )  
[9989] ( move ul , 4 ; move ua + ul , 2 ; move ul , ul + ul )  
[9990] ( ( move ul , ul / ua ; move 4 , 3 / ua ) ; pen ul )  
[9991] ( move ul , 3 + ul ; move ua , ul + ul ; move ua , 4 )  
[9992] ( move ua + ul , 2 ; move ul , ul ; move 4 + ul , ul )  
[9993] ( move ul , ul ; move 2 , ul + ul ; move 4 , ua + ul )  
[9994] ( move 2 , ua - ul ; move ul - ua , 3 ; move ul , ul )  
[9995] ( move ua + ul , ua ; move 3 , ul ; move 4 , ul - ua )  
[9996] ( move ua , 3 ; move ul , ua ; move ua / 2 , ua * ua )  
[9997] ( move ua , ua ; move 2 + ul , ul ; move 4 - ul , ul )  
[9998] ( move ul , ul ; move ul , ul ; move 4 + ul , 2 + ul )  
[9999] ( move ul , ul ; move ul , 2 / ua ; move 2 + ul , ul )  
[10000] ( move 2 - ua , ua - ul ; v0 = ul ; move ua , ul )  
[10001] ( ( move 3 , 4 ; pen 3 ) ; move ua , ul ; move 4 , 2 )  
[10002] ( move ul , 2 / ua ; move 3 , ul - ua ; move ua , ul )  
[10003] ( v0 = ua - ul ; move v0 , v0 ; move v0 , 3 )  
[10004] ( move ua , 2 / ua ; move ul / ua , 2 ; move ua , ul )  
[10005] ( move ua / 2 , 2 / ua ; move ul , ua ; move ua , ul )  
[10006] ( move ul , ua ; move 4 + ul , ul ; move ua + ul , 4 )  
[10007] ( move ua , ua ; move ul - 4 , ua ; move ua - 4 , ul )  
[10008] ( v0 = 3 ; move ul - ua , v0 ; move v0 , v0 )  
[10009] ( move ul , ul ; move ua , 4 + 3 ; move ul + ul , ul )  
[10010] ( move ul , ul / ua ; move ua , 3 ; move 2 - ua , ul )  
[10011] ( move 2 , ua - ul ; move ul - 3 , ul ; move ul , ul )  
[10012] ( move ul , 4 - ua ; move 2 + ul , ul ; move ul , ul )  | ( move ul , 3 + ul ; move 3 , ul - ua ; move ul , ul )  
[10013] ( move ul , ul - ua ; move ul , 4 + ul ; move 2 , ul )  
[10014] ( move ul , ul ; move ul , 3 / 2 ; move ua + ul , ua )  
[10015] ( move ul + ul , ul ; move 2 , ul ; move 4 , ul - ua )  
[10016] ( move ul , ul ; move ua , ul - ua ; move ul , 3 * 2 )  
[10017] ( move ul , ua ; move ul , 4 + ul ; move ua , ul - 3 )  
[10018] ( move ul , 2 ; move 4 + ul , ua - ul ; move ul , ul )  
[10019] ( move 0 , ul / 4 ; move ua , ul ; move ul , ul + ul )  
[10020] ( move 3 , ua ; move ul , 4 + ul ; move ul - ua , ul )  
[10021] ( move ua - ul , ul - 3 ; move 3 , ua ; move ul , ul )  
[10022] ( move ul / ua , ua ; move 3 , ua ; move ua - 3 , ul )  
[10023] ( v0 = 3 ; move v0 , v0 ; move v0 - ua , ul )  
[10024] ( move ua , 2 / ua ; move ua , ul ; move 4 , ul + ul )  
[10025] ( move 4 , ua + ul ; move ul , ul ; move ua , 4 + ul )  
[10026] ( move ul + ul , ul ; move ul , 4 - 2 ; move ua , ul )  
[10027] ( move ua , 3 - ul ; move ua , ul ; move ul , ul - 3 )  
[10028] ( move ua , ul / 3 ; move 2 , ul ; move ua , ua * ua )  
[10029] ( move ul , ua ; move ul + ul , ul ; move 4 , 4 + ul )  
[10030] ( move ua , ul ; move ul - 4 , ua ; move ul , 4 + ul )  
[10031] ( move ul , ul ; move ul , ua ; move ul - 4 , 3 + ul )  
[10032] ( move ua / 3 , ua - ul ; move ul , ul ; move ul , 2 )  
[10033] ( move ua / 2 , ul ; move ul - 4 , ul ; move ua , ua )  
[10034] ( move ul , ul + ul ; move ul / 2 , 3 ; move ua , ul )  
[10035] ( move ul , ul ; move 4 , 4 - ua ; move ul , ua + ul )  
[10036] ( move ua / 3 , ua ; move ul , ul - ua ; move 3 , ul )  
[10037] ( move 4 , ul ; move ua , ua - ul ; move ul , ua - 4 )  
[10038] ( move ua - 3 , ul ; move ul , ua - ul ; v0 = ua )  | ( move ua - 3 , ul ; move ul , ua - ul ; v0 = ul )  | ( move ua / 2 , ua + ul ; pen 3 ; move ul , ua - ul )  
[10039] ( move ua , ua + ul ; move ul / 3 , ul ; move 3 , ul )  
[10040] ( move ul , ul ; move 4 - ua , 3 ; move ul - ua , ul )  
[10041] ( move ua , 4 ; move ul - ua , 2 / ua ; move ul , ul )  
[10042] ( move ul / 3 , ua ; move ua , ul ; move ul , 3 + ul )  
[10043] ( v0 = ua - ul ; move v0 , v0 ; move v0 , 4 )  
[10044] ( move ua , ua + ul ; move 2 , ul / 4 ; move ul , ul )  
[10045] ( move ua , ul ; move ua , ul - 4 ; move ul + ul , 4 )  
[10046] ( ( move ua , ul ; move ul - ua , 2 ) ; move ua , ua )  
[10047] ( v0 = 4 + ul ; move v0 , ul ; move v0 , v0 )  
[10048] ( move ua + ul , ul ; move ul - 3 , ul ; v0 = ua )  
[10049] ( move ua , ul ; move ul , 4 - ul ; move 3 - ua , ul )  
[10050] ( move ua , 3 - ul ; move 3 / ua , ul ; move ua , ul )  
[10051] ( move ua + ul , ua * 3 ; move ul , ul ; move 4 , ul )  | ( move ua + ul , ua ; move ul , ul ; move 4 , ua + ul )  
[10052] ( v0 = 4 ; move v0 , v0 ; move ul , ua - v0 )  
[10053] ( move ua , 4 * 3 ; move ul , ua ; move ul , ul + ul )  
[10054] ( move ul / ua , ul ; move ul , ul ; move 2 + ul , 4 )  
[10055] ( move ul , ul ; move 2 , ul ; move 4 - ua , ul / ua )  
[10056] ( move ua + ul , ul ; move 4 , ua * ua ; v0 = ul )  | ( move ul , ul ; move ua , ua + ua ; move 4 , ua * ua )  
[10057] ( move 4 , ul ; move ua / 3 , ul ; move ua + ul , ul )  
[10058] ( move 4 , ua - ul ; move ul , ul + ul ; move 4 , ul )  
[10059] ( move ua , ul ; move ul , 4 - ua ; move ul / 2 , ul )  
[10060] ( move ul , ua + ul ; move 3 / ua , ul ; move 4 , ul )  
[10061] ( move 4 , ul / ua ; move ua , 3 ; move ul + ul , ul )  
[10062] ( ( move ua , 0 ; move ul / ua , ul ) ; move ua , ul )  | ( move ua , ua ; ( move ul / ua , ul ; move ua , ul ) )  
[10063] ( move ul , 2 ; move ul / ua , ua * ua ; move 4 , ul )  | ( move ul , ul + ul ; v0 = 3 + ul ; move v0 , 3 * 3 )  
[10064] ( move ul - ua , ul ; move ua - 3 , ul ; v0 = ul )  
[10065] ( move ua , ul ; move ul / 2 , ul / 2 ; move ul , ua )  
[10066] ( move ua / 3 , ul ; move ua , ul ; move ul + ul , 4 )  
[10067] ( move ua , 0 - ul ; ( move ul , ul ; move ul , ul ) )  
[10068] ( move ul , ul ; move ul + ul , 4 ; move ua , 4 - ul )  
[10069] ( move ul , ul ; move ul , ua * ua ; move ua , 4 / 2 )  
[10070] ( move ua + ul , 4 ; move ul , ua * ua ; v0 = ul )  
[10071] ( pen 4 ; ( move ua , 3 ; move 3 , 3 ) ; v0 = ul )  | ( v0 = 3 ; move v0 + v0 , v0 ; move 3 , v0 )  | ( pen ua ; ( move 0 , 4 ; move ua , ua - ul ) ; move 3 , 3 )  
[10072] ( move ul , ua * ua ; move 3 , ua - ul ; v0 = ul )  
[10073] ( ( move ul , ua ; move ua + 2 , ul ) ; move ul , ul )  
[10074] ( move ul , 0 ; ( move ul - ua , ul ; move ul , ul ) )  
[10075] ( move ua + ul , 2 ; v0 = 3 ; move ua + 2 , v0 )  
[10076] ( ( move ul , ul ; move ua , ua - ul ) ; move ua , 3 )  
[10077] ( move ul + ul , ua ; move ul , 4 ; move ua , ul / 4 )  
[10078] ( move ul , ul ; move 4 + ul , ua / 3 ; move ul , ul )  
[10079] ( move ua - 2 , ua ; move ua + ul , ua + 2 ; pen ua )  
[10080] ( ( move ua , 3 ; pen 0 ; move 3 + 2 , 2 ) ; pen ul )  
[10081] ( v0 = 4 ; move v0 , v0 ; move ua , ul / v0 )  
[10082] ( move ua , ua ; ( move ul , ul ; move 3 - ua , ul ) )  
[10083] ( move ua , ul ; ( move ul , ua - 3 ; move ua , ul ) )  
[10084] ( move 0 - ua , ul ; v0 = ua - 4 ; move v0 , 2 )  
[10085] ( move ul , ul ; move ua - ul , ul ; move 4 - ul , 4 )  
[10086] ( move ul - ua , ul ; move ul , ul / ua ; move 3 , 4 )  
[10087] ( move ul , 4 ; move ul , ua * 4 ; move ua - ul , ul )  | ( ( move 2 , 4 ; v0 = ul ) ; move ua - v0 , ul )  
[10088] ( move ul , ua ; ( move ua , ua ; move 4 , ua * ua ) )  
[10089] ( v0 = 4 ; move ul , ul / v0 ; move v0 , v0 )  
[10090] ( move ul - ua , ul / ua ; move ul , 4 ; move ul , 4 )  
[10091] ( v0 = 4 ; move v0 , ul / v0 ; move ul , v0 )  
[10092] ( move ul , ul ; move ua , ul / ua ; move 3 , ua / 4 )  
[10093] ( move 3 , 4 * 2 ; ( move 2 / 4 , 3 ; move 2 , 4 ) )  
[10094] ( move ul , ua - 4 ; ( move ua , ul ; move ul , ua ) )  | ( move ul , ua - 4 ; v0 = ua + ul ; move v0 , v0 )  
[10095] ( move 3 , ua + 2 ; v0 = ua ; move ul - v0 , 3 )  
[10096] ( move ua , ua / 4 ; move ul / 3 , ul ; move ua , ul )  
[10097] ( ( move ua , ul / ua ; move ua , ul ) ; move 2 , ul )  
[10098] ( move ul , ua ; ( move ua , ul ; move ua - 4 , ul ) )  
[10099] ( ( move 3 , ua ; move ul , ul ) ; move ua - ul , ul )  
[10100] ( move 2 , ua ; v0 = 2 / ua ; move 2 , ul + v0 )  
[10101] ( move ul , ua ; ( move ua , ul / ua ; move 3 , ul ) )  
[10102] ( move 3 / ua , ua ; pen 0 - ul ; move ua , ua + ua )  
[10103] ( move ul , ua + ul ; pen ua ; move ua - 2 , ua - 2 )  | ( move 2 - ua , 0 - ul ; v0 = ul ; move v0 , 4 + ul )  
[10104] ( move ul + ul , ua ; ( move 4 , ul ; move ul , ul ) )  | ( pen 2 ; ( move 2 , ua ; move 4 , ul ; move ul , ul ) )  
[10105] ( ( move ul , ul ; move ua + ul , ul ) ; move 4 , ul )  
[10106] ( v0 = ul + ul ; move 4 + ul , 2 ; move 2 , v0 )  
[10107] ( move 4 - ul , ul ; move ul , ul ; move 4 / ua , ul )  | ( ( move 3 , ul ; move ul , ul ) ; move ul , ul ; v0 = ua )  
[10108] ( move ul , ul ; move 4 + ul , ul ; move ul , ul / 4 )  
[10109] ( move ua - ul , ul ; move ul / 4 , ul ; v0 = ua )  | ( pen ul / ua ; move 4 + ul , ul ; move ul / 4 , ul )  
[10110] ( move 2 , ul - 2 ; v0 = ua - 4 ; move v0 , ul )  
[10111] ( pen ul ; move 0 - ul , 4 ; move ua + ul , ua + ul )  
[10112] ( move 3 - ua , ua ; pen ua + ul ; move ua - 2 , ul )  
[10113] ( ( move ul , ul ; move ul - ua , ul ) ; move ul , 4 )  
[10114] ( ( pen 0 ; move 2 , ua ) ; pen 3 ; move ul - 3 , 4 )  
[10115] ( move 4 + 4 , ul ; v0 = 2 ; move ua + ul , v0 )  
[10116] ( move ua , ul - 3 ; v0 = 3 + ul ; move v0 , 3 )  
[10117] ( ( move 4 , ua ; move ul , ul / ua ) ; move ul , ul )  
[10118] ( pen ua ; move ua + 4 , ua - ul ; move 2 , ua * ua )  
[10119] ( pen ua ; move 4 + ul , ua - ul ; move ua + ul , 2 )  
[10120] ( move ua , 2 - ua ; v0 = 3 ; move 4 , ua / v0 )  
[10121] ( move ul , 3 + ul ; v0 = 3 ; move ua - v0 , 4 )  
[10122] ( move ul + ul , 3 ; v0 = 3 * 3 ; move ua , v0 )  
[10123] ( move 3 + 2 , 0 ; v0 = 4 ; move v0 , 2 - v0 )  | ( move 4 + ul , ua ; move 4 , ul - 3 ; v0 = ua * ua )  
[10124] ( move ua , ua ; v0 = 4 * 2 ; move ul + v0 , 4 )  
[10125] ( move 4 + ul , 0 ; pen ul + ul ; move ul - ua , ul )  
[10126] ( move ua + 2 , 2 / 4 ; v0 = ul ; move v0 , ul )  
[10127] ( move 0 - ua , ul ; v0 = ua / 4 ; move v0 , 4 )  
[10128] ( v0 = ua / 2 ; move 4 + ul , v0 ; move 2 , ul )  
[10129] ( move 3 , ul ; pen 0 ; ( move 3 * 3 , 3 ; pen ua ) )  
[10130] ( move 4 , 4 / ua ; v0 = 0 - ul ; move v0 , ul )  | ( ( move 4 , 4 / ua ; move ul , 4 ) ; v0 = 0 ; pen 0 )  
[10131] ( move 3 + ul , 3 ; move ua - ul , ul + ul ; pen ua )  
[10132] ( move ua / 2 , ua ; v0 = 4 ; move 4 + v0 , ul )  
[10133] ( move ua + ul , 3 + ul ; pen ul ; move ua + ul , 4 )  | ( move ua + ul , 3 + ul ; move ua + ul , 4 ; move 0 , ul )  
[10134] ( pen 0 ; move 2 , ul ; ( pen 4 ; move 4 , ua - 4 ) )  
[10135] ( move ul , 2 ; move ua - ul , 4 + ul ; pen ua + ul )  | ( ( move 0 , ua ; move ul , 2 ) ; move ua - ul , 4 + ul )  
[10136] ( move ua + 4 , ul ; move ua + ul , 3 + ul ; pen ul )  
[10137] ( v0 = 4 ; move 2 , ul + ul ; move 2 , ul / v0 )  
[10138] ( move ul - ua , ul ; pen ul - ua ; move ul - 4 , 0 )  
[10139] ( move 4 , 2 ; pen 2 ; ( move 4 + 3 , ul ; pen ul ) )  
[10140] ( move ul , ua + 4 ; pen ul - ua ; move 3 , ua - ul )  
[10141] ( move ua , ul - 3 ; v0 = ul ; move v0 - 4 , 4 )  
[10142] ( move ua , ua + ul ; move ul - 2 , 4 / ua ; pen ua )  
[10143] ( move 4 - ua , ul - ua ; v0 = 4 ; move v0 , 4 )  
[10144] ( move ul - 3 , ul - 3 ; v0 = 4 ; move v0 , ul )  
[10145] ( move ua , 4 ; pen 3 - ua ; move ul - ua , ua * ua )  
[10146] ( pen ua * ua ; move 3 , ul ; move ua + ul , 4 - ua )  | ( v0 = 3 ; move 3 , ul ; move ua + ul , v0 + ul )  | ( move 3 , ul ; ( move ua , 4 ; move ul , 0 ) ; v0 = ul )  
[10147] ( move ul - 2 , ua ; v0 = 4 ; move v0 , ul / 3 )  
[10148] ( move ul + ul , 4 ; pen ul / ua ; move ul + ul , 0 )  
[10149] ( pen ua ; move ul - ua , ua ; move 4 - ua , 4 - ul )  
[10150] ( move 4 + 2 , 3 * 2 ; move 2 * 2 , 2 ; move 0 , ua )  
[10151] ( move 3 , 3 / ua ; v0 = 4 ; move v0 - ul , ul )  
[10152] ( move 2 , 3 * 2 ; v0 = 3 + 3 ; move v0 , v0 )  
[10153] ( pen 0 ; ( move 4 , ul ; ( pen 4 ; move ul , 0 ) ) )  
[10154] ( move ul / ua , 0 ; move ua - ul , ua / 4 ; pen ua )  
[10155] ( move ul / ua , ul ; pen 2 / ua ; move 2 - ua , ua )  
[10156] ( move 2 - ua , ul ; move ul - ua , ul / 3 ; pen ul )  
[10157] ( ( v0 = ua - ul ; move ul , 4 ) ; move v0 , 2 )  
[10158] ( move ua + ul , ua / 3 ; pen ul ; move ul - ua , 4 )  
[10159] ( move ul , 3 ; ( v0 = ua - 4 ; move ua , v0 ) )  | ( move ul , ul ; move ul - 2 , 3 - 4 ; move ua , ua - ul )  
[10160] ( pen ua * 3 ; move ua , ul / ua ; move 3 , ua * ua )  
[10161] ( v0 = 4 * 2 ; move 0 , v0 ; move v0 , 3 * 3 )  | ( pen ua * ua ; move 0 , ua / 4 ; move 4 * 2 , 4 + 2 )  
[10162] ( move 4 , ua * ua ; pen ul - ua ; move 4 , ul + ul )  
[10163] ( move 3 , ua * ua ; pen ul - 4 ; move ua - ul , ul )  
[10164] ( v0 = 0 ; move 3 , v0 ; move 4 + v0 , 4 * 3 )  
[10165] ( move ua , ua - 3 ; move ul + ul , ul / 4 ; pen ul )  
[10166] ( move ua , ua * ua ; ( pen ul ; move 2 , ua * ua ) )  
[10167] ( move ul / 4 , 4 ; move ul - ua , ua + ul ; pen ua )  
[10168] ( move ua , ul ; move ua - ul , ua / 4 ; pen 4 + ul )  
[10169] ( move 2 / 4 , ul / 4 ; v0 = ul ; move ua , v0 )  
[10170] ( ( move ul , 0 ; pen ul / ua ) ; move ua + ul , ul )  
[10171] ( move 3 , ua - ul ; move ua / 4 , ul ; pen ul - ua )  
[10172] ( move ul - ua , ul - 3 ; pen ul ; move 3 / ua , ul )  
[10173] ( move 3 - ua , ul ; ( pen ua ; move ul - ua , ul ) )  | ( v0 = ua ; move 3 - v0 , ul ; move ul - v0 , ul )  
[10174] ( move 4 , 3 ; v0 = 2 - 4 ; move v0 , 2 * v0 )  
[10175] ( move ua / 4 , ua * ua ; move ua , ul / 2 ; pen ul )  
[10176] ( move 3 , ul ; move 0 , 4 / 3 ; move 3 * 2 , 0 - 2 )  
[10177] ( ( move ua , ul - 3 ; move ul - ua , ul ) ; pen ua )  
[10178] ( move 3 , 0 ; ( move ul , 2 + 2 ; move 2 / 4 , 0 ) )  
[10179] ( ( move ul , ul / ua ; move ua + 3 , ul ) ; pen ua )  
[10180] ( v0 = 4 ; move 3 , v0 * 2 ; move 3 * 3 , v0 )  
[10181] ( move ua - ul , 3 ; ( pen ul ; move ul , ua * ua ) )  
[10182] ( ( move ua , ua ; pen ul ) ; move ul - ua , ul / 2 )  
[10183] ( move ul / ua , ua + ul ; move 4 , ua / 4 ; pen ul )  
[10184] ( move ua , ul / ua ; ( pen 3 ; move ul - ua , ul ) )  
[10185] ( v0 = 0 - ul ; pen 2 + ul ; move ua , v0 / 4 )  
[10186] ( move 3 , 0 ; ( move 2 , ua / 3 ; move 4 , 0 - 2 ) )  
[10187] ( move ua , 4 ; ( pen 0 ; move 0 , 4 ) ; move ul , ul )  
[10188] ( move ua - ul , ua - ul ; ( pen ul ; move 4 , ul ) )  
[10189] ( move ul - ua , ul ; move 2 , ua ; move ua , ua + ul )  
[10190] ( move ul , ua ; move ua , ua ; move ua - ul , 2 - ua )  
[10191] ( v0 = 2 - 4 ; ( move v0 , v0 ; move 2 , 4 ) )  
[10192] ( move ul , ua ; move ul + ul , ul ; move ul - ua , 0 )  
[10193] ( pen ul ; ( move ua , 0 ; move 3 , ul ) ; move 2 , 4 )  
[10194] ( move ua + ul , ua ; move ul , ul ; move ua , 2 + ul )  | ( move ua + ul , ua ; move ul , ul ; move ua , 3 - ua )  
[10195] ( move ul , ua ; move ua + ul , ua + 2 ; move ul , ul )  
[10196] ( move ua , ua - ul ; move ua + ul , 2 ; move ul , ua )  
[10197] ( move ua - ul , ul + ul ; move ua , ul ; move ua , 2 )  
[10198] ( ( move 2 , ua ; move ua , 3 ; move 2 , ul ) ; pen 4 )  
[10199] ( move ul , ul ; move 0 , ul ; move ua - ul , ua * ua )  
[10200] ( move ua , ua * ua ; move ul + ul , ul ; move ua , 2 )  
[10201] ( move 2 , ul ; move ua , ul ; ( pen 0 ; move 4 , 4 ) )  
[10202] ( move ua + ul , 2 - ua ; move ul , ul ; move ua , ul )  
[10203] ( ( move 4 , 2 ; pen ua ) ; move ua , 3 ; move ua , 3 )  
[10204] ( move 3 , 3 ; ( v0 = 3 / 2 ; move v0 , v0 ) )  
[10205] ( move ul , ua ; move 3 , ul ; move ul - ua , ua + ua )  
[10206] ( move ua , ua ; move ul , ul ; move ua + ul , ua - 3 )  
[10207] ( move 4 * 2 , 3 / ua ; move 0 , 2 - 4 ; move 3 , 4 )  
[10208] ( ( pen ul ; move 2 , ua ) ; move ul , 3 ; move 2 , 3 )  
[10209] ( move ua - ul , ua ; move ul , 3 ; move ua , ua + ul )  
[10210] ( move ul , ul ; move ul , ua * ua ; move ul - ua , 0 )  
[10211] ( move ul - ua , ua ; move ul , ul ; move 2 , ua * ua )  
[10212] ( move ua , ul ; move ul , ul ; move ua + ul , 3 - ua )  
[10213] ( ( move 4 , 4 ; move 2 , 2 ) ; move ua , ul ; pen ua )  
[10214] ( move ua , ua + ul ; move ua - ul , 3 ; move ul , ul )  
[10215] ( move 4 , 4 ; ( v0 = 3 ; move v0 + 4 , v0 ) )  
[10216] ( move ul , 2 + ul ; move ua , ul ; move ul , ul - ua )  
[10217] ( move ul , ua + ul ; move ul , ua + ul ; move 3 , ul )  | ( ( move ul , ul ; move ul , ul ; move 3 , ul ) ; pen ua )  | ( move ul , ul ; ( move ul , ul ; move 3 , ul ; v0 = ul ) )  
[10218] ( move 0 - ul , ua ; move ua , ul ; move ul , ul / ua )  
[10219] ( move ul , 2 ; ( pen 3 ; move 3 , ul ) ; move 2 , ul )  
[10220] ( move ul + ul , ul ; move ua , ua - ul ; move ua , 3 )  
[10221] ( move ul - ua , 3 ; move ul , ua ; move ul , ua + ul )  
[10222] ( move ul + ul , ua ; move ul , ul ; move ul , 2 + ul )  
[10223] ( ( move 4 , ul ; pen 0 ) ; move ul , ul ; move 2 , 4 )  
[10224] ( move ul - ua , ua + 2 ; move ul , ul ; move ul , ul )  
[10225] ( move ul , ua ; move ul + ul , ul ; move 3 , ua - ul )  
[10226] ( move ul , ul + ul ; move ua , ul ; move 3 , ul + ul )  
[10227] ( move ua , ua + 4 ; move ul , ul ; move ul , ul + ul )  
[10228] ( v0 = ua - ul ; move v0 , ua ; move v0 , v0 )  
[10229] ( move ul , ul ; move ua - ul , ul ; move 2 + ul , ul )  
[10230] ( move 3 + ul , ua - ul ; move ua , ul ; move ul , ul )  
[10231] ( move ul , ul + ul ; move ua , ua ; move 4 - ua , ul )  
[10232] ( move ua , ua ; move ul , ul ; move 4 + ul , ul + ul )  
[10233] ( move 4 + 2 , 2 + ul ; move 3 , 2 / 4 ; v0 = 4 )  
[10234] ( move 2 , 2 / 4 ; ( move 3 * 2 , 0 ; move 3 , ul ) )  
[10235] ( move ua , ul ; move ul + ul , 3 - ul ; move ul , ul )  
[10236] ( move ul , 3 ; move ul - ua , ul ; move ul + ul , ul )  
[10237] ( ( move 3 * 2 , 4 * 2 ; move 2 , ul ) ; v0 = 0 )  
[10238] ( move ul - 3 , ul ; move ul , ul ; move ul , ua + ul )  
[10239] ( move ul + ul , ul ; move ul , ul / ua ; move ua , 2 )  
[10240] ( move ul , ul ; move ua , ul - ua ; move ua / 2 , ul )  
[10241] ( move ua - ul , ua ; move ul + ul , ul ; move 4 , ul )  
[10242] ( move ua , ul - 3 ; move ul , ul ; move ul + ul , ul )  
[10243] ( move ul , ul ; move ul - ua , ul - ua ; move ua , 4 )  
[10244] ( move ua , 2 ; move ul / ua , ua * ua ; move ul , ul )  
[10245] ( move ua , ul - 2 ; move ul / ua , ul ; move ua , ul )  
[10246] ( v0 = ua - ul ; move v0 , v0 ; move v0 , ul )  
[10247] ( move ul , 3 - ul ; move ul , ul ; move ua + ul , ul )  
[10248] ( ( move 3 , 0 - 4 ; move 3 , 4 + ul ) ; v0 = 3 )  
[10249] ( move ua - ul , ul ; move ul , ul - 4 ; move ua , ul )  
[10250] ( move ul , ul ; move ua , ul ; move ul + ul , ua / 3 )  
[10251] ( move 4 , ul + ul ; move ul , ua - ul ; move ul , ul )  
[10252] ( move ul , 4 - ul ; move ul , ul ; move ul - ua , ua )  | ( move ul , 2 + ul ; move ul , ua + ul ; move ul - ua , ua )  
[10253] ( move ul / 2 , ul ; move ul , ua ; move ua - ul , ul )  
[10254] ( move ul , ua / 3 ; move ul + ul , ul ; move ua , ul )  
[10255] ( move ul , ul ; move ua - ul , ul ; move ua , ua / 3 )  
[10256] ( move ul , ul ; move ua , 3 ; move ul - ua , ul / ua )  
[10257] ( pen 3 ; move 0 , ua ; ( pen 0 ; move 3 + ul , ua ) )  
[10258] ( move ua - ul , ul ; move 2 / ua , ul ; move ul , ul )  
[10259] ( move ul , ua / 3 ; move ul , ul ; move ul + ul , ul )  
[10260] ( v0 = ul ; move ua - 2 , ua ; move ua + 2 , v0 )  
[10261] ( move ul , ul / ua ; move ul , ul + ul ; move 3 , ul )  
[10262] ( ( move 4 , 2 ; move 4 + 3 , 4 ) ; move ua , 4 + 4 )  
[10263] ( ( move ul , ua ; move ul , ua * ua ) ; move ua , ul )  
[10264] ( v0 = 3 ; move 2 + v0 , v0 ; move v0 , v0 )  
[10265] ( move 0 - 2 , 0 ; move 3 , ua - 2 ; move 3 + ul , 0 )  
[10266] ( ( pen 2 - ua ; move 2 , ul ; pen ul ) ; move 3 , 0 )  
[10267] ( move ua + ul , 3 ; v0 = ua ; move ua , v0 + 4 )  | ( move ua , 3 ; move ul , ua ; ( move ua , 4 ; pen ua ) )  | ( move ua , 2 + ul ; ( move ul , ua * 3 ; move ua , 4 ) )  
[10268] ( v0 = ul ; move v0 - ua , 2 ; move ua , ul - 2 )  
[10269] ( move ua + ul , ul - 2 ; v0 = 2 ; move v0 , ul )  
[10270] ( ( move ul , ul ; pen 0 ; move 4 + ul , 3 ) ; pen 0 )  
[10271] ( ( pen 0 ; move ua , ul ) ; pen ul ; move 0 , 3 - 4 )  | ( pen 3 - ua ; ( move 4 + 2 , ul ; pen ul ; move 0 , ul ) )  
[10272] ( move 4 , 4 ; ( move ua / 4 , 2 - 4 ; v0 = 0 ) )  
[10273] ( move 4 , 0 ; v0 = 0 - 2 ; move v0 , ua + v0 )  
[10274] ( move ul - ua , ul / ua ; move ul , ul ; v0 = ul )  
[10275] ( move 3 , ua * ua ; v0 = ua + 2 ; move v0 , ul )  
[10276] ( move 3 , 0 - ul ; v0 = ul ; move ul , ua - v0 )  | ( move 4 - ul , 0 - ul ; move ul , 0 - ul ; pen 4 / ua )  
[10277] ( v0 = 3 ; move v0 , v0 ; move v0 * v0 , 2 )  
[10278] ( move ua , ul ; v0 = ua * ua ; move 4 , 2 + v0 )  
[10279] ( move 2 - ua , ua ; v0 = ul ; move ul , 4 + v0 )  
[10280] ( move ul - ua , ua ; v0 = 2 ; move ul - 3 , v0 )  
[10281] ( ( move ul , 4 ; pen 3 ) ; pen 0 ; move ua , 2 + ul )  | ( ( move ul , 4 ; pen ul ; pen 0 ) ; move ua , ua + 3 )  
[10282] ( move 3 , ul ; v0 = ua * ua ; move ua , 2 - v0 )  
[10283] ( move ul , 0 ; v0 = 4 ; move ua + ul , ua / v0 )  
[10284] ( v0 = 3 ; move 4 + v0 , v0 ; move v0 , v0 )  
[10285] ( move 4 + ul , ua ; v0 = ul - 3 ; move ua , v0 )  
[10286] ( ( move ua , ul / ua ; move ul , ul ) ; move ul , ul )  
[10287] ( move 3 - ua , ul ; v0 = ua - 3 ; move v0 , ul )  
[10288] ( pen ul ; ( move ul , 2 ; move 4 , 0 - 2 ; pen ul ) )  | ( move ul / 3 , 3 ; move ul , 0 - ul ; move 4 , ul - 3 )  
[10289] ( v0 = 3 ; move v0 * 3 , v0 ; move v0 , v0 )  
[10290] ( move 0 - ul , ua * ua ; pen ul ; move ua , ul - ua )  
[10291] ( move 4 + 3 , ul ; ( v0 = 4 ; move 2 , 4 * 4 ) )  
[10292] ( move ua + 2 , ua / 3 ; v0 = ul ; move v0 , ul )  
[10293] ( v0 = 4 ; move ua , ul - v0 ; move ua + ul , 4 )  
[10294] ( pen ua ; pen ul ; ( move 4 , ul ; move 0 - 4 , 2 ) )  
[10295] ( ( pen 3 ; move ua / 2 , 3 ; pen 0 ) ; move ul , ul )  | ( ( v0 = 3 ; move v0 , v0 ; pen 0 ) ; move ul , ul )  
[10296] ( move ua + ul , ua + 4 ; pen ul ; move ua , ua * ua )  
[10297] ( move ua , 0 ; pen 2 ; ( move 3 , ua / 4 ; pen ul ) )  
[10298] ( move 3 * 2 , ul ; ( pen ul ; pen 0 ) ; move ua , 4 )  
[10299] ( ( pen 3 ; move 4 , 2 ) ; pen 0 ; move ua , ul / ua )  
[10300] ( move ua - ul , ua / 2 ; pen ua ; move ua , ul + ul )  
[10301] ( v0 = 4 ; move 4 , v0 * v0 ; move v0 , v0 )  
[10302] ( move ul , 4 ; ( pen ul ; pen 0 ; move 3 , 4 - ua ) )  
[10303] ( ( move ua , 0 ; pen 3 ; move ul - 4 , 4 ) ; pen ul )  
[10304] ( move ua + 3 , ul ; pen ul ; move ul - ua , ua - ul )  
[10305] ( move 2 , 0 - ul ; v0 = 2 - 4 ; move v0 , v0 )  
[10306] ( pen 2 ; move ua - ul , 3 ; ( pen ul ; move 2 , 4 ) )  | ( pen ua / 3 ; move ua - ul , ua + 3 ; move 3 - ul , 4 )  
[10307] ( pen ul ; move ua + ul , 3 ; move ua - ul , ua * ua )  
[10308] ( v0 = 2 ; move 2 , 4 + ul ; move 2 + v0 , v0 )  
[10309] ( pen 4 ; ( move ul , 4 ; pen 0 ) ; move 4 + ul , ua )  
[10310] ( move 4 , 3 ; ( pen 0 ; move ul , 2 / ua ) ; pen ul )  
[10311] ( move ul , 0 ; v0 = 4 + 3 ; move v0 , v0 - 2 )  
[10312] ( move ul - ua , ul / ua ; move 2 , ul ; pen ua + ua )  
[10313] ( move ua , ua ; pen ul - 4 ; move ua - ul , ul + ul )  
[10314] ( move 3 * 3 , 0 ; v0 = 3 ; move v0 , ua - v0 )  
[10315] ( pen ul - 2 ; move 4 , ul ; ( pen 2 ; move ul , 3 ) )  
[10316] ( move ua + ul , ul - 4 ; pen ul ; move ua , ua * ua )  
[10317] ( move ul - ua , 4 + ul ; move ua , ul - ua ; pen ul )  
[10318] ( move 4 + 2 , ua - 3 ; v0 = 2 ; move v0 , v0 )  
[10319] ( pen ul ; ( move 3 , ua ; move 3 * 2 , 4 ; pen ua ) )  
[10320] ( move 0 - 3 , ul - 3 ; v0 = 3 ; move v0 , v0 )  
[10321] ( move 4 , ul ; v0 = ua - ul ; move 4 - v0 , ul )  
[10322] ( move ua , ua ; pen 3 / ua ; move ua - ul , ul + ul )  
[10323] ( ( move ua / 4 , 0 ; move 3 , 3 + 2 ) ; pen 2 / 3 )  
[10324] ( move ua - ul , 2 / ua ; pen ul ; move ul , ul - ua )  
[10325] ( move 0 , ua ; move 4 , 0 - 3 ; move ua - 3 , 2 - 4 )  
[10326] ( move ua , 3 ; v0 = 2 ; move v0 * 3 , 3 + v0 )  
[10327] ( pen ua + ul ; move ul , ul / ua ; move ua + ul , 4 )  | ( v0 = ua + ul ; move v0 , v0 ; move ul , v0 / 3 )  
[10328] ( move ua , 3 ; move 0 , 3 + ul ; move 4 + 2 , 4 + 2 )  
[10329] ( ( move ul , ua ; pen ul / 4 ) ; pen 0 ; move 3 , 4 )  
[10330] ( move ua , ua * ua ; pen ul - ua ; move 4 - ul , ul )  
[10331] ( move ua , ul ; v0 = 4 / ua ; move ua , 4 * v0 )  
[10332] ( move ua , ul / 3 ; pen ul - ua ; move ua - ul , ul )  
[10333] ( v0 = 4 + 3 ; move v0 - 2 , ua ; move 4 , v0 )  
[10334] ( move 2 * 2 , 0 - 2 ; move ul , ua - 4 ; v0 = 0 )  
[10335] ( move ul - ua , ul / ua ; pen ul ; move ua , 4 + ul )  
[10336] ( move 3 + ul , ul ; move ul - ua , ul / ua ; pen ul )  
[10337] ( move 3 , ua ; ( v0 = 0 - 2 ; move v0 , v0 ) )  
[10338] ( move ua - ul , ul ; pen ua - ul ; move 4 / ua , ul )  | ( move 3 + 2 , ul ; move ul , 2 / ua ; v0 = ua + 2 )  
[10339] ( ( pen 3 ; move 3 , ul ; pen ul ) ; move 4 , ua / 3 )  
[10340] ( ( move ul , ul ; pen 4 ; move ua , 3 / 4 ) ; pen 2 )  
[10341] ( v0 = 2 - 4 ; move v0 , 3 / v0 ; move ua , 2 )  
[10342] ( v0 = 4 + ul ; ( move v0 , 0 ; move 2 , v0 ) )  
[10343] ( v0 = 4 * 2 ; move v0 , 2 / v0 ; move 2 , ul )  | ( move 4 + 4 , ul / 4 ; pen ua + 4 ; move 2 , ua + ul )  
[10344] ( move 4 - 2 , 0 - 2 ; move 2 , ua ; move 3 , 4 / ua )  
[10345] ( move 2 , 2 ; move 0 , 3 - 4 ; move 4 + ul , 2 / ua )  
[10346] ( move 2 , 0 ; move 4 - ul , ua * 2 ; move 3 , 4 + 3 )  
[10347] ( move 2 / ua , 4 ; v0 = 4 ; move v0 , 4 + v0 )  
[10348] ( move 4 , 3 ; v0 = ul - 2 ; move 4 * v0 , v0 )  
[10349] ( ( move 2 , 3 + 3 ; move ul - 2 , 3 ) ; move ua , 0 )  
[10350] ( move 3 , 4 - 3 ; move ua , 3 + ul ; move 4 , 0 - 3 )  
[10351] ( move 0 , 3 / 2 ; ( move 0 - ua , ua ; move 2 , 4 ) )  
[10352] ( move 0 , 4 + ul ; move 3 , 4 * 3 ; move ua , 2 * 2 )  
[10353] ( ( move 3 , 3 - ua ; move ua + 2 , 4 ) ; move 2 , 0 )  
[10354] ( move ua , 4 * 2 ; v0 = 4 / 2 ; move v0 , v0 )  
[10355] ( v0 = 4 * 2 ; move v0 , v0 ; move 4 - ul , 3 )  
[10356] ( ( move 4 - ua , 2 ; move 3 - 2 , 0 ) ; move ul , 2 )  
[10357] ( move 0 , 2 ; ( move 3 , 3 + ul ; move ul , 2 * 2 ) )  | ( move 2 + ul , 4 + 2 ; ( pen ua ; move ul , ua + 4 ) )  
[10358] ( v0 = 2 / 4 ; move 4 , v0 / 2 ; move ua , v0 )  
[10359] ( move 2 , 2 - ua ; ( move 0 , 4 ; move 3 , 3 - ua ) )  
[10360] ( ( move ul , ul ; pen 0 ; move ua , 2 ) ; move 3 , ul )  
[10361] ( move 3 , ua ; ( move ua , 2 ; move ua , 2 ) ; pen ul )  
[10362] ( move 3 * 2 , ua ; move 2 / 4 , 0 ; move ua , 4 * 2 )  
[10363] ( move 3 , ua + 4 ; move 0 - 4 , 3 ; v0 = ua + 4 )  
[10364] ( move 3 , 2 + 2 ; move 4 , 2 + ul ; move 4 / 2 , ul )  
[10365] ( ( move 3 * 2 , ua ; move 2 , 2 + 2 ) ; move ul , 2 )  
[10366] ( move 4 + 2 , ua ; move 4 + 2 , 4 ; v0 = 2 + ul )  
[10367] ( move 4 , 4 + 2 ; move 3 , ua + 4 ; move 4 + ul , 2 )  
[10368] ( ( move 4 , 2 ; move 2 + 2 , ul - 2 ) ; move ua , 2 )  
[10369] ( ( move 3 - ua , 0 ; move ul , 2 - 4 ) ; move 2 , 3 )  
[10370] ( move ul , ua ; ( move 2 , 2 ; pen ua ; move 3 , ul ) )  
[10371] ( move ul / 3 , 4 ; move 4 + 2 , 2 ; move 3 , ua + 3 )  
[10372] ( move 2 * 2 , 3 * 3 ; move 3 , 2 ; move ul , ua / 2 )  
[10373] ( move 2 , ua ; ( move ul , 3 ; move ua , ul ) ; pen 2 )  
[10374] ( ( move 2 , 2 ; move 3 + 2 , 3 ) ; move 3 , ua * ua )  
[10375] ( move ua , ua ; move ul , ul ; move ul - ua , ua + ua )  
[10376] ( move 0 - 3 , 4 / 2 ; move ul - ua , 4 ; move 4 , 2 )  
[10377] ( move ul , 0 - 3 ; move 4 , 2 ; move 4 - ul , 2 / 3 )  
[10378] ( ( v0 = 3 ; move v0 * 2 , v0 ) ; move ua , 4 )  
[10379] ( move 0 , ua * 3 ; move 4 , 3 * 3 ; move 3 , 4 + ul )  
[10380] ( ( move ul , ua ; pen 0 ; move ua , 4 ) ; move ua , 4 )  
[10381] ( move 2 , 4 + 3 ; move 2 + ul , 3 ; v0 = 3 - ul )  
[10382] ( pen ua ; ( move ua , 3 ; move ul , 2 ) ; move 2 , ul )  
[10383] ( move 3 * 3 , 3 / 4 ; v0 = ul ; move v0 , v0 )  
[10384] ( move 4 , ul ; move 3 + 2 , 2 - 4 ; v0 = ul - 2 )  
[10385] ( move ua , ua + ul ; move ul , ul ; move ua , ul + ul )  | ( ( move ua , ul ; pen ua ) ; move ul , ul ; move ua , 2 )  
[10386] ( move 2 , ua ; pen ul ; ( move ul , 3 ; move ul , 2 ) )  
[10387] ( move 2 , ul ; ( move ul , 3 - 2 ; move 3 , 0 - 4 ) )  
[10388] ( ( move 4 , ua + 4 ; move 0 , ua ) ; move 2 , 3 / 2 )  
[10389] ( move ua + 2 , 4 ; move 2 + ul , 4 * 4 ; v0 = 2 )  
[10390] ( move ul , ua ; move ul , ul ; move ua + ul , ua + ul )  | ( move ul , ua ; ( move ul , ul ; move ua , ul ) ; move ul , 0 )  
[10391] ( move ul , 4 ; move 2 - ul , 4 * 4 ; move 2 , 0 - 4 )  
[10392] ( move 4 , 2 ; move 2 - ul , 2 / 3 ; move 4 - ul , 2 )  
[10393] ( move 4 , 3 / 2 ; ( move 0 , ua / 3 ; move ua , 0 ) )  
[10394] ( move ul - 4 , 2 + ul ; v0 = 4 * 2 ; move 3 , 2 )  
[10395] ( ( move 2 , 2 ; move ua - 4 , 2 ) ; move 3 , ua / 2 )  
[10396] ( move 4 + ul , 3 / 4 ; move ul , 0 - 2 ; v0 = 3 )  
[10397] ( move ul , ul ; ( move ua , 4 ; pen ua ) ; move 3 , 2 )  
[10398] ( move 2 / ua , 4 / 2 ; move 2 , ua / 4 ; move 2 , 2 )  
[10399] ( ( move 4 , 4 + 2 ; move 3 , ua + 2 ) ; move 4 , ua )  
[10400] ( ( move ua , 0 ; pen 4 ; move ul , ul ) ; move ul , 4 )  
[10401] ( move 2 + ul , 4 ; move ua - 3 , 3 ; v0 = 4 * 2 )  
[10402] ( ( move 2 , ul ; move ul , 4 ) ; pen ua ; move ua , 3 )  
[10403] ( move ul , ul / 4 ; move 2 , 4 + 2 ; move 3 - 2 , 4 )  
[10404] ( ( move ua , 4 ; move 4 - ua , 2 ) ; move 0 , 3 / 2 )  
[10405] ( ( move 3 , ul ; move ul , ul ; move ul , 2 ) ; pen 3 )  
[10406] ( move ua , ul + ul ; move ul , ul ; move ul + ul , ul )  
[10407] ( move ul - 3 , 2 ; move 3 + ul , 4 / 3 ; move 4 , 3 )  
[10408] ( move 0 , 2 / 3 ; ( move 4 + 2 , ul ; move 4 , ul ) )  
[10409] ( move 3 , 2 - 4 ; move 3 , 4 + ul ; v0 = ua / 2 )  | ( move 3 , ua - 2 ; move 3 , 4 + ul ; move 0 , ua + 4 )  
[10410] ( move ul , 4 ; pen ua ; ( move 2 , ul ; move ua , 4 ) )  
[10411] ( v0 = ua / 3 ; ( move 4 , v0 ; move 4 , v0 ) )  
[10412] ( ( move 2 , ul ; pen ul ) ; move ua , ul ; move 3 , 4 )  
[10413] ( move ul - ua , ua ; move ul , ul / ua ; move ua , ua )  
[10414] ( ( move 3 , 4 ; move 2 - ua , ul - 3 ) ; v0 = 0 )  
[10415] ( move 4 , 4 / 2 ; move 3 + 2 , ua - 3 ; v0 = ul )  
[10416] ( move 4 , 3 / ua ; move 3 , 2 + ul ; v0 = 4 + 3 )  
[10417] ( move ul + ul , 3 * 3 ; move 3 , 3 * 2 ; v0 = 4 )  
[10418] ( move 3 - 4 , 3 ; move 4 , ul / 2 ; move ua - 4 , 3 )  
[10419] ( move 3 / 2 , 4 + 2 ; move 4 + ul , ul ; v0 = 4 )  
[10420] ( move ua + ul , ul / ua ; move ul , ul ; move ua , ul )  
[10421] ( move ua , ua + 3 ; ( move 3 / 4 , 2 ; move 3 , 3 ) )  
[10422] ( move 0 - 4 , 4 ; ( move 4 - ua , 3 ; move 3 , ul ) )  
[10423] ( ( move ul , 2 ; move ua / 2 , 4 + 2 ) ; v0 = 3 )  
[10424] ( ( move 3 , 4 * 3 ; move 0 , 3 ) ; move ul - 4 , ul )  
[10425] ( move 4 / 3 , 3 ; ( move ul , 0 ; move 4 , 2 - ul ) )  | ( move ua - 4 , 3 ; ( pen 3 + 2 ; pen ua ; move 4 , ul ) )  
[10426] ( ( move 4 , 3 ; move 4 , ul ) ; move 4 - 3 , ua + 2 )  
[10427] ( move 2 - ua , 0 - 4 ; move 3 + ul , 2 ; pen 3 * 2 )  
[10428] ( move 3 , 3 ; ( move ul - ua , 3 ; v0 = 3 - 2 ) )  
[10429] ( move 4 - ul , 3 ; move 0 - 4 , 4 / ua ; v0 = 4 )  
[10430] ( ( move ua + ul , 2 ; pen ul ; pen 0 ) ; move ul , 0 )  
[10431] ( move 4 + ul , ul - 4 ; ( v0 = 0 ; move 4 , 2 ) )  
[10432] ( ( move ul , 4 ; move ul , ul ) ; pen ua ; move 3 , 4 )  
[10433] ( v0 = ua + 2 ; move v0 , v0 ; move v0 , v0 )  | ( v0 = ua + 2 ; move v0 , ul + ul ; move v0 , 2 )  
[10434] ( move 3 , 0 ; ( move 3 + ul , 4 / 3 ; v0 = ul ) )  
[10435] ( move ul , ul ; ( move 0 , 4 ; move 4 * 2 , 4 / 2 ) )  
[10436] ( move ul , 0 ; ( pen 0 ; move ua , 4 + ul ; pen ua ) )  
[10437] ( ( move 2 , ua + ul ; pen ul ; pen 0 ) ; move ua , 2 )  
[10438] ( move 4 - ul , 3 ; move 2 - 4 , 4 * 3 ; v0 = ul )  
[10439] ( move 4 , 2 ; ( move 2 - ua , 4 - 3 ; v0 = ul ) )  
[10440] ( move ul , 2 ; ( move 4 + ul , 3 ; move 3 * 3 , 4 ) )  
[10441] ( v0 = 2 ; move ua + v0 , v0 ; move v0 , v0 )  
[10442] ( v0 = 2 - ua ; move v0 , v0 ; move v0 , v0 )  | ( v0 = ua - 2 ; move v0 , ua + 4 ; move v0 , v0 )  
[10443] ( move ua , 3 * 2 ; pen ul - 2 ; move 3 * 2 , 3 + 2 )  
[10444] ( ( move ul , 4 + 2 ; move 4 , 3 * 2 ) ; v0 = ul )  
[10445] ( move 4 - 3 , 0 ; pen ul - 4 ; move 3 + ul , 0 - 4 )  
[10446] ( move 4 / 3 , 3 ; ( move 3 , 2 ; move ul , ua - 4 ) )  
[10447] ( v0 = ua - 2 ; move v0 , v0 ; move v0 , v0 )  
[10448] ( move 4 , ua / 4 ; move 4 , 2 / ua ; v0 = 3 * 2 )  
[10449] ( move 4 + 3 , ua + ul ; pen 4 + 2 ; move 2 , 3 / 2 )  
[10450] ( ( move ul , 4 ; move 3 , 4 ) ; move 3 * 3 , 4 + ul )  
[10451] ( ( move 2 , 4 ; move 4 , 2 / 4 ) ; move 2 , ul / ua )  
[10452] ( pen 0 ; ( move ua , ul ; pen ul ) ; move 3 , ua + 3 )  
[10453] ( move ua , 4 ; ( move 2 - 4 , 4 * 4 ; move 4 , ua ) )  
[10454] ( move ua + ul , ua ; v0 = 3 - ua ; move v0 , ul )  
[10455] ( pen 2 ; ( move ul , ul ; pen 0 ) ; move ua - ul , 2 )  
[10456] ( v0 = 4 ; move v0 - ua , v0 ; move v0 , v0 )  
[10457] ( v0 = 3 ; move v0 , ua ; move v0 * v0 , v0 )  
[10458] ( move 2 - ua , 0 ; v0 = 2 ; move ua - v0 , v0 )  
[10459] ( ( move ua , ul - 3 ; pen 0 ; move ua , 3 ) ; pen ul )  
[10460] ( v0 = 4 + ul ; move v0 , v0 ; move v0 , v0 )  
[10461] ( move ul , ua ; ( pen ua ; pen 2 / ua ; move 3 , 0 ) )  
[10462] ( v0 = ul - 3 ; move ua , ul ; move ua + ul , v0 )  
[10463] ( v0 = 3 ; move v0 , v0 ; move v0 , ul - v0 )  
[10464] ( v0 = 4 ; move ul + v0 , v0 ; move v0 , v0 )  | ( v0 = 4 ; move v0 + ul , v0 ; move v0 , v0 )  
[10465] ( v0 = ua - 4 ; move v0 , v0 ; move v0 , v0 )  
[10466] ( move ul , ul ; v0 = ua * ua ; move ua , v0 - 2 )  
[10467] ( v0 = 3 ; move v0 , v0 ; move ua , v0 * v0 )  
[10468] ( v0 = 4 ; move v0 , v0 ; move v0 - ua , v0 )  
[10469] ( pen 0 ; ( move ua , ua ; pen ul / 4 ; move 0 , ul ) )  | ( ( pen 0 ; move ua , ua ) ; pen ua ; move ul / 3 , ua * ua )  
[10470] ( v0 = 4 ; move v0 , ul ; move v0 , v0 + v0 )  
[10471] ( ( move 2 , ua / 2 ; pen 0 ) ; move ua + 2 , 4 + 4 )  
[10472] ( v0 = 3 ; move v0 , ua ; move v0 , v0 * v0 )  
[10473] ( ( move ua / 2 , ua / 4 ; v0 = 4 ) ; move 2 , 3 )  
[10474] ( pen 3 ; move ul , ul ; ( pen 0 ; move ua , ua + 4 ) )  
[10475] ( move 4 + 3 , 0 - 4 ; move ul , ul - 3 ; pen 3 * 2 )  
[10476] ( ( pen ul ; move 3 , ua ) ; move 3 , ua - 2 ; pen ua )  
[10477] ( move 2 , 0 ; v0 = ua - 2 ; move ul - v0 , v0 )  
[10478] ( ( move ul / 4 , 2 ; move 4 + ul , 0 - 2 ) ; pen 0 )  
[10479] ( v0 = 3 ; move v0 , v0 * v0 ; move ul , v0 )  
[10480] ( pen 2 - ua ; move ua , ua ; ( pen 3 ; move ul , 4 ) )  
[10481] ( move ua , ua * ua ; pen ua ; move ul - ua , ua - ul )  
[10482] ( move ua + 2 , 0 ; v0 = ul ; move v0 - 4 , v0 )  
[10483] ( v0 = ua ; move v0 - 2 , ul ; move v0 , 3 + 2 )  
[10484] ( move ul , 4 / ua ; v0 = ua + ul ; move v0 , ul )  
[10485] ( v0 = 4 ; move v0 , ul / v0 ; move v0 , v0 )  
[10486] ( ( pen ua ; move 3 - ua , 2 ) ; pen ul ; move 4 , ul )  | ( move 3 - ua , ul + ul ; move 4 , ul ; move ul / 4 , 4 )  
[10487] ( move ua , ua - ul ; v0 = 3 ; move ul / v0 , ul )  
[10488] ( move ul - 3 , 0 ; move ul - ua , 0 - 2 ; v0 = 0 )  
[10489] ( move 2 - 3 , ua + 2 ; move ua , 0 ; move ua , 4 + 3 )  
[10490] ( move 4 - ul , ul ; pen 3 + 2 ; move 4 + 3 , 4 / 3 )  
[10491] ( move 4 , 3 + 2 ; move ua - 2 , 2 - ul ; move 0 , ua )  
[10492] ( move 3 , 4 + ul ; v0 = ua + 2 ; move v0 , v0 )  
[10493] ( move 0 - 2 , 0 ; move ul , 2 - ul ; move ul , 4 + 3 )  
[10494] ( move 2 + ul , 2 ; move ul - 2 , 4 - ua ; move 2 , 0 )  
[10495] ( move 4 + 3 , ul ; move 0 - 2 , 3 ; move ua , 0 - ul )  
[10496] ( v0 = ua - 2 ; move 3 - ua , 3 ; move v0 , v0 )  
[10497] ( move ul - 3 , 0 ; move 2 - ua , 2 - 4 ; move 0 , ul )  
[10498] ( move ua , 2 + 2 ; move 3 , 2 - ua ; move ul , 4 + 2 )  
[10499] ( move 0 , ua ; move 3 , 4 + 3 ; move 2 - 3 , ua + ul )  
[10500] ( move ua , ua - 2 ; v0 = 4 * 2 ; move v0 , v0 )  
[10501] ( move ua + 2 , ul ; v0 = 2 ; move v0 , 3 / v0 )  
[10502] ( v0 = 4 + 3 ; move ua , ua ; move 3 - v0 , v0 )  
[10503] ( move 2 , 0 ; move 2 * 2 , 4 + ul ; move ua , 3 - ua )  
[10504] ( move ul , 2 ; v0 = ua ; move 3 * 2 , v0 * v0 )  
[10505] ( move 2 , 0 - ua ; move 2 , 3 + 3 ; move ul , 3 / ua )  
[10506] ( ( pen ul ; move ua , ul ) ; move 4 , 3 * 3 ; pen ul )  
[10507] ( move ua , 2 ; move 2 + ul , 2 * 2 ; move 3 + 3 , ul )  
[10508] ( move 2 + ul , 2 ; move ul , 4 + 2 ; move 3 + 2 , ul )  
[10509] ( move 3 , 0 - 2 ; move ua , 4 + ul ; move 0 , ul / 3 )  
[10510] ( move 0 , 0 ; move 3 * 2 , ul - 4 ; move 4 , ua + ul )  
[10511] ( ( pen ua ; move ua / 2 , 3 - 4 ) ; move 2 , 3 - 4 )  
[10512] ( move 4 + 2 , 0 ; move 0 , ua / 4 ; move 2 - ul , ul )  
[10513] ( v0 = ul - ua ; move v0 , 4 * 2 ; move v0 , 2 )  
[10514] ( move 3 + 2 , 0 ; move 3 , 4 + ul ; move 3 , ua - ul )  
[10515] ( move 4 - ua , ul ; v0 = 2 ; move v0 + 4 , v0 )  
[10516] ( move 0 , ua ; ( move 0 - ua , 0 ; move 4 , ua - 4 ) )  
[10517] ( v0 = ul / 3 ; move 2 , v0 ; move 2 + ul , v0 )  
[10518] ( move ua , ua / 2 ; move 4 + 4 , 2 ; move 0 , 3 + ul )  
[10519] ( move 4 + 3 , ul ; move 2 , ua + 4 ; move ua / 2 , 0 )  
[10520] ( move 2 , ua / 4 ; v0 = 3 ; move v0 , v0 + ul )  
[10521] ( move 4 , 2 - ua ; move 0 , 4 ; move ua - 3 , ua - 3 )  
[10522] ( move ua , ua + 3 ; move 0 - ua , 4 / 3 ; v0 = 0 )  
[10523] ( move 4 , 0 - 3 ; move 0 , 4 / ua ; move ul , ua + 3 )  
[10524] ( move 2 + ul , 0 ; move ul - 3 , ua ; move 4 , 3 * 2 )  
[10525] ( move 2 + 2 , ul - 2 ; move ul , 0 ; move ua , 4 * 4 )  
[10526] ( move ua , 0 ; move ua , 4 * 2 ; move 4 - 2 , 3 + ul )  
[10527] ( move 4 , 3 / 2 ; v0 = ul ; move v0 , ua - v0 )  
[10528] ( move 2 - ua , 2 ; move ul , 2 - ua ; move 4 , 4 - 2 )  
[10529] ( move 3 / ua , 0 ; move 3 - ua , 2 - 3 ; move 3 , ul )  
[10530] ( move 2 , ul ; ( move 0 , 0 ; move 3 - ua , ua - 4 ) )  
[10531] ( v0 = ul - 4 ; move v0 , ua ; move v0 , 4 + 4 )  
[10532] ( move ul - 4 , 2 ; move ua , ua + 3 ; move 4 + 3 , 2 )  
[10533] ( move ua - ul , 4 ; move 2 + 2 , 2 - 4 ; move ua , 3 )  
[10534] ( move 0 , 2 / 4 ; move 3 , ul ; move ul + ul , 3 + 3 )  
[10535] ( move 3 , ua + 3 ; move ua , 4 - ua ; move 2 , 3 - 4 )  
[10536] ( move ul / 2 , ul ; move 4 - ul , 0 ; move 4 + 2 , 2 )  
[10537] ( move ul , 0 - 2 ; move 3 / 4 , ua - 4 ; move ua , 2 )  
[10538] ( ( move ul , 3 ; pen 0 ) ; move ul , ua ; move ua , ua )  
[10539] ( ( move ua , 2 ; move ul , ul ; pen 0 ) ; move ua , ul )  
[10540] ( move 2 + ul , ul ; ( move 2 , ua ; move 2 , 0 - 4 ) )  
[10541] ( move 2 - ua , 2 / 4 ; move 3 , ua + 3 ; move ul , 2 )  
[10542] ( move ua , ua + 3 ; ( move 0 - 4 , 0 ; move ul , 4 ) )  
[10543] ( move 2 - 4 , 3 * 3 ; move ul , 2 ; move ul , 0 - ul )  
[10544] ( move ul , ua * ua ; ( move 2 , 2 ; move 4 + 2 , 0 ) )  
[10545] ( move 0 - ua , 0 ; move ua + ul , 3 / 4 ; v0 = 4 )  
[10546] ( ( move ua , ua ; move ul , 3 ) ; pen 0 ; move ua , ul )  
[10547] ( v0 = 4 * 2 ; move ua , v0 ; move ul / 3 , v0 )  
[10548] ( move 2 - 4 , ua - 3 ; move ua , 2 / ua ; v0 = 0 )  
[10549] ( ( move 4 - ua , ul / ua ; move 3 , 2 ) ; move 0 , 0 )  
[10550] ( move ul , ul ; move 3 + 2 , ul - 3 ; move 2 - 4 , 3 )  
[10551] ( move ua - 3 , 3 - ul ; move 4 , 4 ; move ua - 4 , 0 )  
[10552] ( move 3 + 2 , ua ; move ul / 4 , 0 - 4 ; move 3 , ul )  
[10553] ( move ua , ua / 3 ; move 4 - 2 , ul ; move 4 , 2 + 2 )  
[10554] ( ( move ul , 0 ; pen ua ) ; move ul , ul ; move 2 , ul )  | ( pen ul ; ( move ul , ua ; move ul , ul ; move 2 , ua + ul ) )  
[10555] ( move ul , 0 - 4 ; move ua , ul - 4 ; move 4 + 3 , 3 )  
[10556] ( move 0 , 3 ; move 3 , ul - 2 ; move 3 / 2 , ul / ua )  
[10557] ( move 3 - 2 , ul ; move 3 , 2 ; move ul / 2 , ua * 2 )  
[10558] ( move 4 + ul , 2 / ua ; move 2 + ul , 4 ; v0 = 0 )  
[10559] ( move 3 + 2 , 2 + ul ; move 4 , ua / 4 ; move 2 , ul )  
[10560] ( move ua - ul , 0 ; ( move 2 - 4 , 2 ; move ul , 2 ) )  
[10561] ( move ua + ul , 4 ; ( move 0 , 3 ; move 3 , 2 + ul ) )  
[10562] ( move ua , ua / 3 ; ( v0 = 2 ; move v0 , v0 ) )  
[10563] ( move 3 , 0 ; ( move ua , ul ; move ul , ul ) ; pen ua )  
[10564] ( move 2 , ul - 3 ; move 2 , 3 ; move ua - ul , 3 * 3 )  
[10565] ( move ul , 2 + ul ; ( move 0 , 3 ; move ua , 4 + 3 ) )  
[10566] ( move ua , ua ; ( pen 0 ; move ul , ul ) ; move 4 , ua )  
[10567] ( move ua + 2 , 3 ; ( move 4 - ua , 0 ; move 3 , ul ) )  
[10568] ( move 4 + 3 , 2 ; move ua / 4 , ul ; move 0 - 3 , ul )  
[10569] ( move ua , 3 ; ( move ul , ul ; move ua , ul ; pen 0 ) )  
[10570] ( move 4 , 0 ; move ua , 4 - ul ; move 0 - ul , 4 / 3 )  
[10571] ( move 2 , ul ; move 4 + 3 , ua ; move 0 - ul , 4 / 3 )  
[10572] ( move ul , 4 + ul ; ( move 3 , 0 ; move ua - 3 , 2 ) )  
[10573] ( move 3 , 3 * 2 ; move 3 , ul / 4 ; move 0 , ul + ul )  
[10574] ( move 0 , 3 + 2 ; ( move 2 , 4 ; move ua , ul / ua ) )  
[10575] ( move 2 + 2 , 2 ; ( move ul , 3 - ul ; move 2 , ul ) )  
[10576] ( move ul , 2 - 3 ; move ua + 4 , 2 - ua ; v0 = 4 )  
[10577] ( move 4 + ul , ul ; move 3 , 2 ; move 3 + 2 , ul / 3 )  
[10578] ( move 4 , 4 + ul ; move 4 + 3 , ul - ua ; v0 = 0 )  
[10579] ( move 4 , ul / 2 ; v0 = ul / 3 ; move v0 , v0 )  
[10580] ( move ua + 3 , 4 * 4 ; v0 = 2 - ua ; move ua , 2 )  
[10581] ( ( move 0 - 2 , 0 ; move 4 , ul ) ; move ul , 3 / ua )  
[10582] ( ( move ul - 2 , 2 ; move ua , 3 / 2 ) ; move 0 , ul )  
[10583] ( ( v0 = 3 ; move ul , v0 ) ; move v0 , 4 + ul )  
[10584] ( move 4 + 3 , 3 ; move 3 - 4 , ua ; move ul , 2 - ul )  
[10585] ( move 2 + ul , 0 ; ( move ul , 3 ; move 3 + ul , 4 ) )  
[10586] ( ( move 2 , ul + ul ; move 2 , 3 - ul ) ; move 2 , 2 )  
[10587] ( move ul , 3 - 2 ; move ua + 3 , 3 * 2 ; v0 = ul )  
[10588] ( move 4 , 3 / 2 ; move 3 / 2 , ul + ul ; move ul , 0 )  
[10589] ( move 3 * 2 , 4 + ul ; move ua , 4 / 2 ; move 3 , ua )  
[10590] ( move 4 - ul , 3 - 4 ; move ua / 4 , 0 ; move 2 , ul )  
[10591] ( move 3 + 2 , 4 - ul ; move 2 - ua , 4 ; v0 = ul )  
[10592] ( move 2 * 2 , ua ; ( move 2 + ul , 4 ; move ua , 3 ) )  
[10593] ( move ul , 3 ; move ul - 2 , 4 / 3 ; move 3 + 2 , ul )  
[10594] ( move 4 , 3 ; move ua - 4 , 4 ; move ul - 2 , ua - 3 )  
[10595] ( move 4 , 3 + ul ; move 0 - 4 , ul ; move 4 / ua , 3 )  
[10596] ( ( move 3 , ua ; move 4 , 2 + 2 ) ; move ua , ua - 4 )  
[10597] ( move 4 + 4 , 2 ; move ul , ul + ul ; move 4 - 3 , 3 )  
[10598] ( move ul - 2 , 3 + ul ; move 3 / 2 , ul ; move 3 , 4 )  
[10599] ( move 0 , 4 + 4 ; move ul - 4 , 4 ; move ua , ua / 3 )  
[10600] ( move 3 , ua + ua ; v0 = 2 / ua ; move 3 , 3 / 2 )  
[10601] ( move 3 - ul , 4 + 3 ; move ul , 3 ; move 4 , ua + 4 )  
[10602] ( ( move ua - 4 , ul ; v0 = 4 ) ; move v0 , v0 )  
[10603] ( move ua - ul , ua ; move 3 , 3 * 3 ; move 4 - 3 , 3 )  
[10604] ( move 3 , ua * 3 ; move 4 , 4 / 3 ; move ul + ul , 0 )  
[10605] ( move 4 , ul / 2 ; move 0 , ul ; move 4 + ul , 4 - 3 )  
[10606] ( move 4 , 0 ; move 3 , 4 / ua ; move ua / 3 , ul - 3 )  
[10607] ( move 2 , ul ; move 4 + ul , 4 * 2 ; v0 = ul - 2 )  
[10608] ( ( move 4 , 2 ; move 3 + ul , 2 ) ; move ul , ul - 2 )  
[10609] ( ( v0 = 4 ; move v0 , 3 / ua ) ; move ul , v0 )  
[10610] ( move 2 , 2 / 4 ; move ua / 3 , ul / ua ; move 0 , 4 )  
[10611] ( move ul , 3 ; move 3 , ul ; ( pen ua ; move ua , ul ) )  
[10612] ( ( move 3 + 3 , ul ; move 2 , ul ) ; move 2 , 4 + ul )  
[10613] ( move 3 , ua ; move 3 - 4 , 3 ; move ul - 3 , ul / 2 )  
[10614] ( ( move ul + ul , ua ; move 4 , 4 ) ; move 4 + 3 , 0 )  
[10615] ( move 3 , ul ; move 2 - 4 , 4 / ua ; move 3 - ua , 3 )  
[10616] ( ( move 3 , 3 * 2 ; move 0 , ul / 2 ) ; move ul , ua )  
[10617] ( move 4 , ua ; move 2 * 2 , ua / 3 ; v0 = ul - 2 )  
[10618] ( move 4 * 2 , 4 ; move ua + ul , 3 ; v0 = 3 + ul )  
[10619] ( move 2 / 3 , ul ; ( move ua , 4 + 2 ; move ua , 2 ) )  
[10620] ( ( move ul , ul - 4 ; move 2 , 3 / 2 ) ; move ua , 0 )  
[10621] ( move 3 , 0 ; ( move 3 - ul , 2 / 3 ; move ua , ul ) )  
[10622] ( ( pen ua ; move ul , ul ) ; move ul , 4 ; move ua , 2 )  
[10623] ( move ul , 4 ; move 3 / ua , 3 / 4 ; move 0 - 3 , ul )  
[10624] ( ( move 4 , 0 ; move 3 - ua , 3 + ul ) ; v0 = ul )  
[10625] ( move 2 , ua / 3 ; move 4 , ul + ul ; v0 = 4 + 3 )  
[10626] ( move ul / ua , 3 * 3 ; move 4 , 4 ; move ua , 2 - 3 )  
[10627] ( move ua - 4 , 4 ; move 3 / ua , 2 ; move ua - 4 , 4 )  
[10628] ( move 4 , 4 + ul ; move 3 , 4 + ul ; v0 = ua + 4 )  
[10629] ( move 4 - ul , 4 + 4 ; move ua + ul , 3 ; v0 = 3 )  
[10630] ( move 4 , ua ; ( move 3 , ul ; pen ua ; move ul , ul ) )  | ( ( move 4 , 0 ; move 3 , ul ) ; move ul , ul ; v0 = ul )  
[10631] ( ( pen ua ; move ul , ua ; move ul , 4 ) ; move 3 , ul )  
[10632] ( ( pen ul ; move 3 , ua ; move ua , ul ) ; move 4 , ul )  
[10633] ( move ul / 4 , 2 ; move 4 + 3 , 2 ; move ul , ul / 2 )  
[10634] ( move ul , 4 ; move ul - 2 , 4 ; move 4 / 2 , ua + 4 )  
[10635] ( move ul , 0 ; move ua / 4 , 4 / 3 ; move 3 * 2 , ul )  
[10636] ( move 2 / 4 , 2 ; ( move ul + ul , 2 ; move 2 , ul ) )  
[10637] ( ( move 2 , 0 - ul ; move 4 , ul + ul ) ; v0 = 4 )  
[10638] ( move ul , ul ; ( move 2 , 3 / 4 ; move ul - 3 , 0 ) )  
[10639] ( move 3 , 3 - ua ; ( move 4 , ul + ul ; move 3 , 3 ) )  
[10640] ( move 3 - ul , 4 / ua ; ( move ua , 3 ; move 0 , 4 ) )  
[10641] ( move 4 , 4 ; move 4 + 2 , ua + ul ; v0 = ul / 3 )  
[10642] ( move ua / 4 , 2 / 3 ; move ua , ul ; v0 = 2 - 3 )  
[10643] ( ( move 3 , 4 * 3 ; move ua , ua - ul ) ; v0 = 0 )  
[10644] ( ( move 4 , ul ; move ua , 3 ; pen ul ) ; move ul , ul )  
[10645] ( ( move ul , 3 * 3 ; move 3 + 2 , 4 ) ; move ul , ua )  
[10646] ( ( move 0 , ul - 2 ; move 4 / 3 , 4 ) ; move ua , ul )  
[10647] ( move 4 - ul , 2 / ua ; move 3 , 4 ; v0 = ua * 2 )  
[10648] ( move 4 , ul / 3 ; ( move 0 , ul ; move 2 - 3 , ul ) )  
[10649] ( ( move ua , 0 - 4 ; move 4 , ua * ua ) ; v0 = 3 )  
[10650] ( move 3 + ul , 4 / ua ; move 4 , 4 ; v0 = 2 - ul )  
[10651] ( ( move 3 , 4 / ua ; move ua , 4 ) ; move 2 , 3 - ua )  
[10652] ( move 4 , ua ; move 3 / 4 , 4 ; move ul + ul , 4 * 2 )  
[10653] ( move 3 / 2 , ul ; ( move ua , 4 / 3 ; move 0 , ul ) )  
[10654] ( move 4 , 4 ; ( move ua - 2 , ul ; move ua / 3 , 2 ) )  
[10655] ( move ua , ua / 4 ; ( move ul , 4 ; move 3 * 3 , 0 ) )  
[10656] ( move 3 , 4 ; ( move ul , 4 ; move ua - 4 , ua + 3 ) )  
[10657] ( ( move ul , ul ; move 2 - 3 , 4 + 4 ) ; move ua , 4 )  
[10658] ( move 4 , ul ; ( move 4 + ul , 4 ; move 2 , ua + 4 ) )  
[10659] ( move 4 + 3 , ul ; move ul / 2 , 4 ; move ul / 2 , 4 )  
[10660] ( ( move 3 + 3 , ul / 4 ; move 2 , 2 ) ; move ul , ul )  
[10661] ( pen 2 ; move ua + 3 , 2 - ul ; move 2 + ul , 3 - 4 )  
[10662] ( ( move 0 , 4 ; move 4 + ul , ul ) ; move 3 / 4 , ul )  
[10663] ( ( move ua , ua / 2 ; move 4 + ul , 4 ) ; v0 = 2 )  
[10664] ( move 4 * 2 , 2 + ul ; pen 2 - ua ; move 3 + ul , 2 )  
[10665] ( move ul , 3 ; move ul / ua , 4 / 2 ; move 4 , 2 / 3 )  
[10666] ( move 3 - ul , 3 / ua ; move 4 , 3 / 2 ; v0 = ul )  
[10667] ( move ua + 4 , ul ; ( move ul , 4 ; move 3 - 4 , 4 ) )  
[10668] ( move ua , 3 ; ( move 3 / 4 , ul - 2 ; v0 = ua ) )  
[10669] ( move ua / 3 , 3 ; ( move 4 , ul / 2 ; move ul , 2 ) )  
[10670] ( ( move 4 , 4 * 2 ; move ul , ul ) ; move ua , 4 - 3 )  
[10671] ( move 4 , 4 + ul ; move 3 / 4 , ul ; v0 = ua * 3 )  
[10672] ( move 4 + ul , ul / 3 ; ( move ua , 3 ; v0 = 2 ) )  
[10673] ( ( move 2 , 3 / ua ; move 2 , ua / 4 ) ; v0 = ua )  
[10674] ( ( move ua , ua ; pen ul ) ; pen 0 ; move ul - ua , 2 )  
[10675] ( move ua - 3 , 4 + ul ; move 4 - ua , 2 * 2 ; pen 2 )  
[10676] ( ( move 3 * 2 , ul ; move ul / 4 , ul ) ; move 3 , 3 )  
[10677] ( move ul , ul ; ( move 2 , ua ; move 4 / 3 , 4 * 3 ) )  
[10678] ( pen 0 ; move ua + ul , ua ; ( pen ul ; move ul , 3 ) )  
[10679] ( ( move ul + ul , 3 ; move 4 , 4 / 3 ) ; move ul , 3 )  
[10680] ( move 3 + 2 , 0 ; move ua + 2 , ua + 2 ; move ul , ua )  
[10681] ( pen ua + 2 ; move ul - 3 , ua ; move 4 * 2 , 4 + 4 )  
[10682] ( ( move 4 - 3 , ua + ua ; pen 0 ) ; move 4 + 3 , ul )  
[10683] ( move 4 , ua * 3 ; ( move 4 , ul ; move 4 , ul / 3 ) )  
[10684] ( move 4 / 2 , ua * 2 ; move 2 , ua - 4 ; pen 3 + ul )  
[10685] ( move 3 , ul / 4 ; ( move ua , ul - 3 ; v0 = 4 ) )  
[10686] ( move ua + 2 , 3 ; ( move ua + 2 , 4 * 2 ; pen ul ) )  
[10687] ( pen 4 * 2 ; move ua + 3 , 4 + ul ; move 3 + ul , 4 )  
[10688] ( move ua / 4 , ua ; ( move 3 , ul ; move 4 , 4 / 3 ) )  
[10689] ( move 0 , 0 ; move 4 + 3 , ua ; move ua + 2 , ul + ul )  
[10690] ( move 3 * 2 , 0 ; move ua + 2 , ul + ul ; move 0 , ua )  
[10691] ( move 3 , ua + ul ; move 0 , 2 ; move 0 - ua , 4 - ua )  | ( move ua / 2 , 2 - ul ; pen ua ; move 0 - ua , 3 * 2 )  
[10692] ( move 2 , 3 + ul ; ( move 4 + 2 , ul - 2 ; pen ul ) )  
[10693] ( move 4 + 2 , 0 ; move 0 , ua - 2 ; move ul - ua , ul )  
[10694] ( move 3 , 4 - ul ; ( move ul / 4 , ul ; move 4 , 4 ) )  
[10695] ( v0 = ua + 3 ; move ua , 3 + v0 ; move ua , v0 )  
[10696] ( move ua , 4 + 2 ; ( move 2 , 3 + 2 ; pen ul / ua ) )  
[10697] ( move 3 - ua , 0 ; move ua + ul , ua + 2 ; v0 = 0 )  
[10698] ( ( pen ul - 2 ; move ua , ul ; pen ul ) ; move 4 , ua )  
[10699] ( move 2 , 3 ; move ul / ua , 0 ; move ua + ul , 0 - 2 )  
[10700] ( pen 4 ; ( move ua , 0 - 4 ; move ua - 4 , ua - 3 ) )  
[10701] ( move ua , 3 * 2 ; move 0 , ua + ua ; move ul , 3 + 2 )  
[10702] ( move 2 , ua + ua ; move 0 , ua / 3 ; move 3 + 2 , ua )  
[10703] ( move 0 , 0 ; move 4 + ul , 2 ; move ua - 3 , ul + ul )  
[10704] ( move ua , ua + 2 ; move 4 , ua + ul ; move 0 - 2 , 3 )  
[10705] ( move ul + ul , 0 ; v0 = 4 + ul ; move v0 , v0 )  
[10706] ( move 4 , ua * 4 ; ( pen 0 ; move 2 + ul , 4 + ul ) )  
[10707] ( move ua + 2 , ul ; ( pen ua + 4 ; move 3 , 3 * 3 ) )  
[10708] ( move ua , ua ; move 0 - 3 , ua ; move 3 + 3 , 2 - ua )  
[10709] ( move ua , 2 ; move 2 - ua , 0 ; move 4 - ul , ua + 2 )  
[10710] ( move 0 - 3 , 2 / 3 ; ( move ul , 4 ; pen ua - ul ) )  
[10711] ( move 2 , 2 - ua ; move 4 - ua , ua ; move ua + 2 , 2 )  
[10712] ( move ul , 4 + 3 ; ( pen ua * 2 ; move ua , 4 + 3 ) )  
[10713] ( move 4 + 2 , ul / 2 ; pen ul ; move 4 / 2 , 4 + ul )  
[10714] ( move ua - 2 , ul / 2 ; ( pen 3 ; move 4 + ul , 2 ) )  
[10715] ( move 0 , 2 - ul ; move ua + 2 , ul / 2 ; move ua , 2 )  
[10716] ( move ua + 2 , ua - ul ; v0 = 4 ; move v0 , v0 )  
[10717] ( move ua , ua ; move 0 - 2 , 3 - ul ; move ua / 2 , 2 )  
[10718] ( move 0 , ua - 4 ; move 2 , ua - 3 ; move ua - ul , 2 )  
[10719] ( v0 = ua ; move ul , v0 * v0 ; move ua + 2 , 4 )  
[10720] ( move 2 , ua ; move 4 + ul , ua - 3 ; move 3 + ul , 0 )  
[10721] ( ( move 4 * 2 , ua * 4 ; move ua , ua - 2 ) ; pen 3 )  
[10722] ( move 2 , ua ; move 0 , ul - 2 ; move 4 - ua , ul - 2 )  
[10723] ( ( pen ua ; move 4 , 4 + 2 ) ; move ul - ua , 4 * 2 )  
[10724] ( move 0 - 3 , ua - ul ; move ul , 4 + 3 ; move 0 , ul )  
[10725] ( move 2 / ua , 3 ; move ua - 2 , 0 ; move 2 - ua , ul )  
[10726] ( move ua , 3 * 2 ; move ua , 2 - ua ; move 3 - ul , 0 )  
[10727] ( move ul - 4 , 0 ; move 2 , 3 ; move ua + ul , 2 + ul )  
[10728] ( move 3 + ul , ul - ua ; move 2 , 3 ; move ul , 0 - 2 )  
[10729] ( move 2 - ua , ua ; move 3 + 3 , ua - 2 ; move ul , 2 )  
[10730] ( move ua , 3 ; v0 = 3 - ua ; move v0 , ua * v0 )  
[10731] ( move 4 , ua - 2 ; move 0 - 2 , 3 ; move ul , ua + ul )  
[10732] ( move 0 - 2 , 0 ; move ul - ua , 3 + ul ; v0 = ul )  
[10733] ( move 0 , 0 ; ( move ul - ua , 3 ; move ua , ua + 2 ) )  
[10734] ( move ul , 0 ; move ul + ul , 2 / ua ; move 2 + 2 , 3 )  
[10735] ( move ul , 2 - 3 ; move 3 + 2 , ua ; move ua , 2 + ul )  
[10736] ( move 2 - 4 , ul ; v0 = ua + ul ; move v0 , v0 )  
[10737] ( move 0 - 2 , 2 ; move ul , ul + ul ; move 2 , 2 / ua )  
[10738] ( ( move ua , ul - 4 ; move 2 , 4 * 2 ) ; pen 3 + ul )  
[10739] ( move ua + ul , 3 + 3 ; ( move 4 / 3 , ul ; pen 2 ) )  
[10740] ( move 2 , ua + 2 ; move 3 , 2 + ul ; move 3 , ul + ul )  
[10741] ( move ua , 2 ; move ul - 4 , 2 - ua ; move ua - 2 , 2 )  
[10742] ( move ua + 2 , ua ; move 0 , ul ; move 4 + ul , 2 / 3 )  
[10743] ( move 2 + ul , 4 + 3 ; move 0 , ul ; move 3 + ul , ul )  
[10744] ( move 2 - ua , 0 ; move 4 , 0 - ul ; move 4 - ul , ul )  
[10745] ( move ul , 4 + 4 ; v0 = ul ; move ua + v0 , v0 )  | ( ( move ul , 4 * 2 ; move ua , ul ) ; move 2 - ul , ua )  
[10746] ( move 2 , ua + ul ; move ua + 4 , 0 - 2 ; v0 = ul )  
[10747] ( move 4 / 2 , ul / ua ; move 3 * 3 , 4 * 2 ; pen ua )  
[10748] ( move 0 - ul , 3 ; move ua , ul ; move 3 - ul , 3 + 2 )  
[10749] ( move 3 * 2 , 2 + ul ; move 4 - ua , 0 ; move ua , ul )  
[10750] ( move ul - 2 , ul ; v0 = ul ; move 4 + v0 , v0 )  
[10751] ( move 2 + ul , 3 ; move ul , 4 ; move 0 - ua , 2 - ul )  
[10752] ( move 0 , ua ; move ul - 4 , 0 ; move ua + ul , 4 * 3 )  
[10753] ( move 0 - 3 , ua + 4 ; move ul , 4 ; move ul , 0 - ul )  
[10754] ( move 3 + ul , 4 - ua ; move ua + 3 , 3 ; move 0 , ul )  
[10755] ( ( pen 4 ; move 3 + 2 , ua - 3 ) ; move ua / 4 , ul )  
[10756] ( move 0 - ul , ua ; move 3 - ul , 4 ; move ul , 2 + 2 )  
[10757] ( move 4 , 3 ; v0 = ua * ua ; move ul , v0 + v0 )  
[10758] ( move 3 - ul , 0 ; move ul - ua , 3 ; move ul , 3 + 2 )  
[10759] ( move 3 , ul - 3 ; move 2 + ul , 2 ; move 2 + ul , ua )  
[10760] ( move 4 , 0 ; move 2 , ua - 3 ; move ul + ul , 3 + ul )  
[10761] ( move 2 + ul , ua ; move 3 , ua + 4 ; move 4 , ua - 2 )  
[10762] ( ( move ua , 3 - ul ; pen 2 - 3 ) ; move 4 , 4 / ua )  
[10763] ( move 2 + ul , ua ; move ul + ul , 4 ; move 3 / 2 , 0 )  
[10764] ( move 3 + ul , 2 ; move 2 , 3 - ua ; move ua + ul , 4 )  
[10765] ( move ua , 0 ; move ua , 3 + ul ; move ul - 4 , 4 + 3 )  
[10766] ( move 2 - ua , ua ; move ul / ua , 2 ; move 3 + 2 , 3 )  
[10767] ( move ua + ul , ua + 4 ; move ul - 2 , 4 ; move 2 , 2 )  
[10768] ( move 0 - ul , 4 ; move 4 , ua * ua ; move 2 + ul , 2 )  
[10769] ( move 0 , 0 ; move 4 + ul , ul ; move ul - 4 , 4 + ul )  | ( v0 = 4 + ul ; move v0 , ul ; move 2 - v0 , v0 )  
[10770] ( move ua - 3 , ua ; v0 = ua ; move v0 , v0 / 4 )  
[10771] ( move ul , 0 - 2 ; move 4 , ul ; move 4 + ul , 2 + ul )  
[10772] ( move ua + 2 , ul ; move 3 , 4 + 2 ; move ua + ul , 4 )  
[10773] ( move ua - 2 , ua ; move 2 , ua - 4 ; v0 = 0 - ul )  
[10774] ( move ua / 4 , 0 ; move ul / 2 , 2 - ul ; move ua , 0 )  
[10775] ( move ul , 4 ; v0 = ua + ul ; move 3 , v0 * v0 )  
[10776] ( move ua - 3 , 0 - ul ; ( move ul , 2 ; move ua , 0 ) )  
[10777] ( move 0 - ul , 3 - 2 ; move ul , ua - 4 ; move ua , 3 )  
[10778] ( move 4 , 0 ; move 2 + 2 , ul / ua ; move ua - ul , 3 )  
[10779] ( move 2 , ua + 4 ; move ul , 2 ; move ua + ul , 4 + 3 )  
[10780] ( move 4 - ul , 0 - ua ; move 2 , ua - 4 ; move 2 , ul )  
[10781] ( move 3 + 3 , ua ; ( move ul - ua , 2 ; move 0 , ua ) )  
[10782] ( move ul / ua , 0 ; move ua - 3 , 4 ; move 3 , ua - 2 )  
[10783] ( move ul - 2 , 3 / ua ; move ua , 4 ; move 2 , ua + 2 )  
[10784] ( move ua - 4 , ul ; v0 = ua ; move v0 , v0 / 3 )  
[10785] ( v0 = ua ; move 4 , v0 ; move ul - 4 , v0 - ul )  
[10786] ( ( move ul , 0 ; move ua , 0 - ul ) ; move 4 + ul , 2 )  
[10787] ( ( move 2 , 0 - ul ; move 2 , 0 - ul ) ; move ul , ul )  
[10788] ( move ua - ul , ul ; move 4 , 4 + 2 ; move ul - 3 , 0 )  
[10789] ( move ua / 4 , 3 * 2 ; move 0 , 0 ; move ua , ul / ua )  
[10790] ( move 4 , 4 - 2 ; ( move 2 , ua * ua ; pen ul / 4 ) )  
[10791] ( move 0 , ul - ua ; move 4 , 3 + ul ; move ua , 3 * 3 )  
[10792] ( move 3 , 2 ; move ul - 2 , ul - ua ; move 4 + 3 , ua )  
[10793] ( move 3 + ul , 0 ; move ua , ul - 3 ; move ul , 4 + 4 )  
[10794] ( move 4 , 0 - ua ; move 2 + ul , ul ; move 3 , 4 - ul )  
[10795] ( move 2 , ua + 2 ; move ul / ua , ul ; move 2 , 3 * 2 )  
[10796] ( move ul + ul , 2 ; move 3 , ul - ua ; move 4 + 2 , 3 )  
[10797] ( move ul , ua - 2 ; move 2 - ul , 4 + 3 ; move 2 , ul )  
[10798] ( move 3 , ua + ua ; move ul , ua + 4 ; move 3 * 2 , 3 )  
[10799] ( move 3 , ul ; move 3 + ul , 2 ; move ua + 2 , ul - 4 )  
[10800] ( move 4 , 0 ; move ua , ua - ul ; move 4 + ul , 2 - 4 )  
[10801] ( move ua , 4 + 3 ; move 0 , ul - 3 ; move 4 - ul , ul )  
[10802] ( v0 = ua ; move 3 - v0 , ul ; move 4 , ul / v0 )  
[10803] ( move ul , ua ; v0 = ua / 4 ; move v0 * 3 , v0 )  
[10804] ( move 2 / 4 , ul ; move ul - 3 , ua + 2 ; move ua , 2 )  
[10805] ( ( move ua , 2 + ul ; move ul , 3 ) ; move ua + 2 , 2 )  
[10806] ( move ul - 3 , ul ; move 0 - 3 , 3 ; move 4 , ua - ul )  
[10807] ( move ua / 4 , ul ; v0 = 4 ; move v0 + ul , v0 )  
[10808] ( ( move ua , ua ; v0 = ul - 3 ) ; move v0 , v0 )  
[10809] ( ( move 4 , 0 - ul ; move 0 , 4 + ul ) ; move ua , ua )  
[10810] ( move 3 , 3 / ua ; ( move ul - 4 , 3 ; pen ua * 4 ) )  
[10811] ( move 4 + ul , ul - 3 ; move 2 , ul - 4 ; move 0 , ul )  
[10812] ( move 4 + ul , 3 ; move 2 - 4 , ul ; move ua , 2 + ul )  
[10813] ( ( move 3 , ua ; v0 = ua - ul ) ; move v0 , v0 )  
[10814] ( move 0 - ua , 3 - ua ; move ua , 4 * 3 ; v0 = ua )  
[10815] ( move 2 , ul / 4 ; move 2 , 3 ; move ua + ul , ua - 2 )  
[10816] ( move 2 / 4 , 0 - 2 ; move 3 , ua - ul ; move ul , ul )  
[10817] ( move 0 , ua ; move 4 - ul , ul / 3 ; move 3 + ul , 2 )  
[10818] ( move ua + 3 , 4 ; move ua , 4 - ua ; move 4 - 2 , ua )  
[10819] ( move 0 , ua ; move ul - ua , 4 + 2 ; move 4 , ua / 4 )  
[10820] ( move ua + ul , ul ; move 3 + ul , 4 + 4 ; v0 = 0 )  
[10821] ( move 2 + ul , ua - 3 ; move 4 , 4 + ul ; move ul , 2 )  
[10822] ( move ul - 4 , 2 ; move 4 + ul , ua ; move ul , 3 + 2 )  
[10823] ( move 2 - ul , 4 + 2 ; move 2 , ul ; move ua , ua * 4 )  
[10824] ( move ua - 4 , 4 ; move ul , ua - 3 ; move 3 , ua + 2 )  
[10825] ( ( move 4 , ua ; move 2 - ua , 0 ) ; move ul - ua , 2 )  
[10826] ( move ua / 4 , ua + 4 ; move 0 , 3 + ul ; move 3 , ul )  
[10827] ( ( move 0 , 4 - ua ; move ua , ul ) ; move 2 , ua - 2 )  
[10828] ( move 4 + ul , ul / ua ; v0 = 4 ; move v0 , v0 )  
[10829] ( move ua , 4 * 4 ; move 0 , ua - ul ; move ua - 2 , 4 )  
[10830] ( move ul , 2 - 4 ; move 2 / ua , ul - ua ; move 4 , 0 )  
[10831] ( move 3 , ul ; move ua / 3 , 2 + ul ; move 3 , ua - 2 )  
[10832] ( move 3 * 2 , ua ; move 4 - ua , 3 - ua ; move ul , 2 )  
[10833] ( move 3 * 3 , ua * 3 ; move ul , 4 ; move ua - ul , 0 )  
[10834] ( move 3 , ua + 2 ; move ul - 3 , 3 - ul ; move ul , 4 )  
[10835] ( move ua / 4 , ul - 4 ; ( move 3 , ul ; pen 4 * 2 ) )  
[10836] ( move 2 , ua + ul ; move 3 + ul , 4 ; move 3 , ul - 4 )  
[10837] ( move ua , 2 ; ( move ua , 3 ; move 4 + ul , ua + 2 ) )  
[10838] ( move ua + 3 , 2 * 2 ; move ul - 3 , ul ; v0 = ua )  
[10839] ( ( move 4 - ul , 3 ; move ul - 3 , ul ) ; pen 4 / 3 )  
[10840] ( move ul , ua + 4 ; move 3 + ul , 4 ; move 3 , 3 - ua )  
[10841] ( move 3 , 3 + ul ; move 2 , ul - 3 ; move 4 , ul + ul )  
[10842] ( move ua , 0 ; move ul - ua , 2 / 3 ; v0 = 4 - ua )  
[10843] ( move ul , 4 - ul ; move ua , 0 - 4 ; move ua , 3 / 2 )  
[10844] ( move ua , 3 ; move 4 - ua , 0 - ul ; v0 = ul - 3 )  
[10845] ( move ul - ua , 3 ; move 2 , 4 + ul ; move 4 + 3 , ul )  
[10846] ( move 4 , 4 * 4 ; move 0 - ua , ul - 2 ; move ua , ul )  
[10847] ( ( v0 = ua - 3 ; move v0 , v0 ) ; move ul , ul )  
[10848] ( move 2 - ul , 0 ; move 4 , 3 / 4 ; move ul - ua , ua )  
[10849] ( move ua - 3 , 2 ; ( move 0 , 2 / ua ; move ua , ul ) )  
[10850] ( move ua / 3 , 2 - 3 ; move 2 , ua ; move ua , 3 / ua )  
[10851] ( ( move 0 , 3 ; move ua , 2 ) ; move ul - 4 , ua + ul )  
[10852] ( move 0 , ua ; ( move 3 , ul ; move ua - ul , 3 + 3 ) )  
[10853] ( move ua + ul , 0 ; ( move 2 / ua , 3 ; move 2 , ul ) )  
[10854] ( move ua / 2 , ul + ul ; move 3 , ul ; move 3 , 2 - 3 )  
[10855] ( move 3 , ul - 3 ; move 3 , ua + 4 ; move ua , 4 - ua )  
[10856] ( move 4 , ul ; move ua + ul , 2 ; move 4 - 2 , ua - 4 )  
[10857] ( pen ul / 2 ; ( move ul - 4 , 3 ; move 4 , ul / 2 ) )  
[10858] ( move ua - ul , 2 + ul ; move 3 , 2 * 2 ; v0 = ul )  
[10859] ( ( move ua , ul ; move ul , 4 ) ; move 2 + 2 , ua + 2 )  
[10860] ( ( move ul , 2 ; move 0 - 4 , 2 ) ; move ul , ua + ul )  
[10861] ( move ua , 3 / 4 ; move ul , 0 ; move ua + 4 , 4 - ul )  
[10862] ( move ul - 2 , 0 ; move 3 + ul , 4 ; move ul / 4 , ul )  
[10863] ( ( move ul , ua ; move 2 , 3 ) ; move ua - 2 , ul - 2 )  
[10864] ( move 0 - ul , ua * 2 ; move ua , ua / 4 ; v0 = 3 )  
[10865] ( move ua - 2 , 2 ; move ul , 4 ; move 3 - ul , ul - 4 )  
[10866] ( move ua , 4 + ul ; move ua , 2 + ul ; move 3 , 4 * 4 )  
[10867] ( move 2 - ua , 2 ; move ul - 2 , ul ; move ul , 3 / 4 )  
[10868] ( move ul , ua + 4 ; move ul , 4 * 2 ; move 2 , 4 + ul )  
[10869] ( move ul + ul , ua ; ( move ua , 3 + 2 ; move 3 , 3 ) )  
[10870] ( ( move ua , ua + ul ; move 4 , 2 ) ; move 2 + ul , 3 )  
[10871] ( move ul / 3 , 3 - ua ; move ul , 2 ; move 4 + 2 , ul )  
[10872] ( ( move 4 - ua , 2 ; move 2 , ul ) ; move 3 , ua + ua )  | ( move 4 - ua , 2 ; ( move 2 , ul ; pen ul ; move 3 , ua ) )  
[10873] ( move ul , ua ; move 4 / 2 , ul + ul ; move 2 , 4 + 3 )  
[10874] ( move ul - 2 , ua + ul ; move 2 , 3 / 4 ; move ua , 4 )  
[10875] ( move 0 , 4 ; ( move ua - 2 , 3 + ul ; move ul , ul ) )  
[10876] ( ( pen ul ; move 4 , ul / 4 ) ; move 3 + ul , 4 * 3 )  
[10877] ( move ua / 2 , ul / ua ; move 3 , ua + 2 ; v0 = 2 )  
[10878] ( move 0 , 3 / ua ; move ul , ua * 2 ; move 3 , 4 / ua )  
[10879] ( v0 = ua - ul ; ( move ul , v0 ; move 4 , v0 ) )  
[10880] ( move ul , 0 ; ( move 0 , ul / 3 ; move ua , 3 - ul ) )  
[10881] ( move ul , 4 + 3 ; ( move 0 , 4 ; move ua + ul , ua ) )  
[10882] ( move ua + 2 , 3 / ua ; v0 = 3 ; move ua , ul - 4 )  
[10883] ( move ua , 4 + ul ; ( move ua , 2 - ua ; move 4 , 2 ) )  
[10884] ( ( move 2 , 4 ; move 4 , 2 / 3 ; pen 0 ) ; v0 = 4 )  
[10885] ( move 4 + ul , 4 ; move ul , ua - 2 ; move ua - 4 , 4 )  
[10886] ( move 3 / 4 , ua ; move ua + ul , 4 ; move 4 , ua - 2 )  
[10887] ( ( move 3 , 0 - 3 ; move ul , 2 - ul ) ; move ul , ul )  
[10888] ( move 3 , 3 ; move 3 - ua , 4 - ua ; move ul / ua , 3 )  
[10889] ( move 2 - ul , 0 ; move 3 / 4 , ul ; move ua , 4 / ua )  
[10890] ( move 4 , ul / ua ; v0 = ul ; move v0 / 4 , v0 )  
[10891] ( ( move 4 + ul , 2 ; move ua , ua - 2 ) ; move ua , 4 )  
[10892] ( move ul , ul / 2 ; move 2 , 4 ; move ua + 2 , ua / 4 )  
[10893] ( move ul , ul / ua ; move ua , 3 + 2 ; move 4 / 2 , 3 )  
[10894] ( move 4 - ul , ul ; ( move 0 - 2 , ua ; move 3 , ul ) )  
[10895] ( move 3 , ul + ul ; move 2 * 2 , ul ; move 2 , ul / 4 )  
[10896] ( ( v0 = 0 - 3 ; move v0 , v0 ) ; move 3 , v0 )  
[10897] ( move ul , 3 - ua ; ( move 2 - ua , ul ; move 2 , 3 ) )  
[10898] ( ( move 0 , 4 * 3 ; move ua , ua ) ; move 4 , ua + ul )  
[10899] ( move 4 - ua , 3 / 2 ; move 3 , ua * ua ; move 4 , ua )  
[10900] ( move ul / ua , 0 ; move 4 , 4 / 3 ; move ul , ua + 3 )  
[10901] ( move 4 , ua ; move 4 / ua , ua * 2 ; move 2 + ul , 4 )  
[10902] ( ( move 2 , ua + ul ; move ua , 4 - ua ) ; move 3 , 4 )  
[10903] ( move 3 , ul ; ( move ul , 0 - ul ; move ul , 3 * 2 ) )  
[10904] ( move 3 * 3 , ul ; ( move 0 , ul ; move 4 , ua + ul ) )  
[10905] ( ( move 2 , 2 ; move ul , ul ) ; move ua - 4 , ua + 4 )  
[10906] ( move ul - 4 , 0 ; move 4 , ul / 3 ; move ua / 2 , ul )  
[10907] ( ( move 3 , ul ; move 2 + ul , 2 ) ; move ul , ul - 3 )  
[10908] ( move ul , ul ; ( move ua + 2 , ua / 4 ; move 0 , 4 ) )  
[10909] ( move ul + ul , ul / 2 ; move 2 , 4 - ua ; move 4 , 4 )  
[10910] ( move ua , ua / 3 ; move 4 / 3 , ul / ua ; move 3 , 0 )  
[10911] ( move 4 + 4 , 3 + ul ; move ua / 4 , ul ; move ua , 3 )  
[10912] ( ( move 2 - 4 , 4 ; move 2 , ul - ua ) ; move ua , ua )  
[10913] ( move ul - 4 , 3 / ua ; v0 = ul ; move 2 , 2 + ul )  
[10914] ( move 4 - ul , 2 ; move ul - 3 , 2 / 4 ; move ua , ul )  
[10915] ( move 4 + ul , 4 ; move ul , 4 / 2 ; move ua , ua * 2 )  
[10916] ( move 2 / 4 , ul ; move 3 , 4 ; move ul + ul , ua * 2 )  
[10917] ( move ua , 4 + ul ; ( move 0 , ul - 4 ; move 3 , ul ) )  
[10918] ( move ua / 4 , 3 ; move ua , ul ; move 3 - 4 , 2 - ul )  
[10919] ( move ul , ul ; ( move 2 + 2 , ul ; move 2 , ul - 4 ) )  
[10920] ( move 2 , ua + 4 ; move 4 / ua , 2 ; move ua , ul / 4 )  
[10921] ( ( move ul , 2 ; move ul , 2 - ua ) ; move 3 * 3 , ua )  
[10922] ( move 4 - 3 , ul - 2 ; move 4 , 4 ; move ul , ua * ua )  
[10923] ( ( move ua , 3 ; move ul , ua + 4 ) ; move 3 , ua + 4 )  
[10924] ( move 3 * 2 , 0 ; ( move 4 , ul - ua ; move ul , ul ) )  
[10925] ( move 4 , 4 ; move 3 - ua , ul - 4 ; move 4 , ua + ul )  
[10926] ( move 4 + ul , 4 ; move ua , 3 * 2 ; v0 = ua - ul )  
[10927] ( move ua / 4 , 2 ; ( move ul , 4 + ul ; move ua , 0 ) )  
[10928] ( v0 = 3 ; ( move v0 * v0 , 0 ; move v0 , 3 ) )  
[10929] ( move ua , 3 ; ( move 3 + ul , 2 + ul ; move 4 , ul ) )  
[10930] ( move ul , 3 - ul ; move 2 , ul / 4 ; move 2 , ul - 4 )  
[10931] ( move 3 , ul / 2 ; move 4 + ul , ul ; move ul / 2 , 3 )  
[10932] ( move ul , 4 ; move ua - 4 , ua ; move 4 + 3 , ul / 3 )  
[10933] ( move 4 / ua , 4 ; move ua - 3 , 4 ; move ul , 3 + ul )  
[10934] ( move 2 , 4 ; ( move ua - 2 , ul ; move 3 / ua , ua ) )  
[10935] ( move 4 , 0 ; ( move ua / 3 , ua + 4 ; move ul , ul ) )  
[10936] ( move ua / 2 , 4 ; move 2 - ua , ul ; v0 = ua * 4 )  
[10937] ( move ua - ul , 4 * 2 ; ( move ul , ul ; move 0 , 4 ) )  
[10938] ( move ua , ua - 2 ; ( move 4 + ul , 4 ; move ua , 4 ) )  
[10939] ( ( move ul , 2 - ul ; move 2 , 4 + 3 ) ; move ul , ul )  
[10940] ( move ul , 3 / 2 ; move ul / 2 , ua - ul ; move 3 , 4 )  
[10941] ( ( move ua - 3 , 3 - 2 ; move 4 , ul ) ; move ua , ul )  
[10942] ( ( move 2 , ul / 3 ; move ua + ul , ul ) ; v0 = 0 )  
[10943] ( move ua + 4 , 4 ; ( move ul + ul , 2 ; move 3 , ul ) )  
[10944] ( ( move 4 - ua , ua ; move 3 , ul - 3 ) ; move ua , 3 )  
[10945] ( ( move 3 , ua / 3 ; move ua - ul , 2 ) ; move 3 , ua )  
[10946] ( move 2 / 3 , 3 / ua ; move ua , ua - ul ; v0 = 3 )  
[10947] ( move 2 + ul , 3 ; ( move ul , 4 * 3 ; move ua , ua ) )  
[10948] ( ( move 3 / 2 , ul ; move ul - ua , 4 ) ; move ul , 0 )  
[10949] ( move 2 * 2 , 4 ; ( move 4 , ua ; move ua , ul + ul ) )  
[10950] ( ( move 4 , 3 ; move ul , 3 + 2 ) ; move ul , ul - ua )  
[10951] ( move ua , ua / 4 ; move 3 - 4 , ua ; move 2 , ul / 3 )  
[10952] ( move ua , ul - ua ; ( move 4 - ul , 3 ; move 3 , 2 ) )  
[10953] ( ( move 3 + ul , ul ; move 2 , ul ) ; move ua , 4 * 2 )  
[10954] ( ( move ua - 2 , ua - 2 ; move 3 , ul ) ; v0 = ul )  
[10955] ( move ul - 4 , ul ; move ua , 4 ; move 4 + ul , 4 * 2 )  
[10956] ( move ua / 3 , 2 ; ( move ua / 4 , 0 ; move ua , ul ) )  
[10957] ( move ul - ua , ul / 4 ; move 4 , 0 - ul ; v0 = 3 )  
[10958] ( move 2 , 4 + 4 ; move 0 - ua , ua + 2 ; pen ul - ua )  
[10959] ( ( move 2 , 3 ; move ul - 4 , ua ) ; move 3 - ul , ul )  
[10960] ( pen ul + ul ; v0 = ua + 2 ; move v0 , 3 / v0 )  
[10961] ( move 4 , 3 + ul ; ( move ul , ua + 3 ; move 4 , ul ) )  
[10962] ( move 3 , ua ; move ul / 4 , ua + ul ; move 4 , 4 / 2 )  
[10963] ( ( move ul , ul ; move 3 * 2 , ul / 2 ) ; move ua , 2 )  
[10964] ( pen ua + 3 ; move ua + 2 , 3 + ul ; move ua - 2 , 4 )  
[10965] ( move 4 , 4 / 2 ; move ua , 4 - ul ; move ul , ua - 4 )  
[10966] ( ( move ul , 3 * 2 ; move ua , 4 - ul ) ; move 2 , ul )  
[10967] ( move 4 , ul - ua ; ( move 3 , ul - 2 ; move 3 , ul ) )  
[10968] ( ( move ua , ua - 3 ; move ua , 4 + ul ) ; v0 = 3 )  
[10969] ( ( move ul , 3 ; move 4 - 3 , ua - ul ) ; move 2 , ul )  
[10970] ( ( move 3 + 2 , ul ; move ul , ul ) ; move ua / 3 , 3 )  
[10971] ( ( move 4 , 0 ; move 3 / ua , ul ) ; move ul , ua / 2 )  
[10972] ( move 2 , 4 + ul ; ( move ua , 4 ; move ul , 4 - ua ) )  
[10973] ( ( move 3 , 2 + ul ; move 4 , ul ) ; move ul , ul - 3 )  
[10974] ( ( move 4 , ul ; move 4 - ua , 2 ) ; move ul , 3 + ul )  
[10975] ( move ua , ua ; ( move ua + ul , 2 ; move 4 , 3 / 4 ) )  
[10976] ( ( move ua , 0 ; move 4 / 3 , 4 ) ; move ua - ul , ul )  
[10977] ( ( move 3 + ul , 3 ; move 4 + ul , 4 ) ; move ul , ul )  
[10978] ( move 2 * 2 , ul ; ( move 4 / ua , ul ; move 3 , ua ) )  
[10979] ( move ua , 3 ; ( move ul , ul ; move 4 + 2 , ua / 4 ) )  
[10980] ( ( move 3 - ua , 2 ; move ua - ul , ul ) ; v0 = 4 )  
[10981] ( move ul / 4 , ua ; move 3 , ul / 4 ; move 3 + ul , 3 )  
[10982] ( move 2 - ul , ul - 2 ; ( move ul , 4 ; move 4 , ul ) )  
[10983] ( move 3 + 2 , ul ; move ua / 3 , ul / 4 ; v0 = ul )  
[10984] ( move 2 , 3 ; ( move 3 , 3 ; move 0 , 4 ) ; move 2 , ul )  
[10985] ( move 4 , 2 ; move ua - ul , ul / 4 ; v0 = ua - 4 )  
[10986] ( move 3 , ul + ul ; ( move 3 , 4 + ul ; move 4 , ul ) )  
[10987] ( ( move ua + ul , 2 ; move ul , ul ) ; move 3 , 3 / 4 )  
[10988] ( ( move 4 , ul ; move ua / 3 , ul ) ; move 4 , 0 - ul )  
[10989] ( move ul , ul / 2 ; move 2 , 4 + 4 ; move ul , ul / 4 )  
[10990] ( move 2 , ul - 3 ; ( move 4 , 4 + ul ; move ul , ul ) )  
[10991] ( move ua / 2 , ul + ul ; move 3 , 4 ; move 4 , ul / 4 )  
[10992] ( move ua , 4 / 3 ; move 3 , 2 - ul ; v0 = ul / ua )  
[10993] ( ( move ul , ua - ul ; move 3 , 3 * 3 ) ; move ul , 4 )  
[10994] ( move 2 , 4 - ul ; move 4 / ua , ua ; move 4 , ul / 4 )  
[10995] ( move ua , 3 ; ( move 4 - 2 , ul ; move ul , ul / 3 ) )  
[10996] ( ( move ua / 3 , ul ; move 3 , 4 ) ; move ua , 4 + ul )  
[10997] ( v0 = 2 ; ( move v0 , 4 * v0 ; move 4 , v0 ) )  
[10998] ( move 0 - ul , 2 + 2 ; pen ul - ua ; move 3 , 4 / ua )  
[10999] ( move 4 , 4 ; move ul - ua , 4 / ua ; v0 = ua * 3 )  
[11000] ( move ul / 4 , ua * ua ; move 3 , ul / 4 ; move 2 , 4 )  
[11001] ( ( move ul , 2 - ul ; move 4 + ul , 4 ) ; move 4 , ul )  
[11002] ( ( move 3 - ul , ua * ua ; pen 0 ) ; move 2 + ul , 0 )  
[11003] ( move ul + ul , 4 ; move ul , 2 / 3 ; move 4 , ul / 4 )  
[11004] ( move ua / 3 , 3 ; ( move 4 , ul ; move ul , 2 - ul ) )  
[11005] ( move 4 / ua , 2 ; move ua , 4 + ul ; v0 = ul / 4 )  
[11006] ( ( move ul , ul ; move 3 , ul ) ; move ul - 4 , 3 * 2 )  
[11007] ( ( move 3 , 4 ; move 2 + ul , ua / 4 ) ; move ul , ul )  
[11008] ( move 4 / ua , 4 / ua ; move ua , 4 / 2 ; v0 = ua )  
[11009] ( move 4 , 4 ; ( move ul + ul , ul ; move 4 + ul , 4 ) )  
[11010] ( ( move 4 , 2 / ua ; move ul , 3 ) ; move ul , ua / 3 )  
[11011] ( move 3 * 2 , ua * ua ; pen 4 + 3 ; move ua + 2 , ul )  
[11012] ( ( move 4 , ua ; move ul , 4 * 4 ) ; move ua , 3 - ul )  
[11013] ( pen 2 - ul ; move ua + ul , 3 * 2 ; move ua - 4 , 2 )  
[11014] ( move 3 + 2 , 3 * 3 ; v0 = ul ; move 3 , 4 - v0 )  
[11015] ( ( move 4 , 3 - ul ; move ul - ua , ul ) ; v0 = 3 )  | ( move 4 , ul + ul ; ( move ul - ua , ul ; pen 4 + ul ) )  
[11016] ( move 4 , ul ; ( move 4 , ua / 3 ; move 3 - ua , ul ) )  
[11017] ( ( move 4 / ua , ul ; move 4 + ul , ul ) ; move 4 , 2 )  
[11018] ( move 4 , ua + 4 ; ( move ua / 3 , 4 ; move ul , ul ) )  
[11019] ( move 4 , ua ; ( move ul , 4 * 4 ; move 3 / ua , ua ) )  
[11020] ( move 4 , ul + ul ; ( move ul , 4 * 3 ; move ul , 4 ) )  
[11021] ( ( move 3 / 4 , ul ; move 3 , 4 ) ; move ul , ua * ua )  
[11022] ( move 4 , ul ; ( move ul / ua , 4 ; move ul , 4 + 3 ) )  
[11023] ( move 0 , ul ; move ua - ul , 0 ; move ua + ul , 0 - 2 )  
[11024] ( move ul , ul ; ( move ul / 2 , 2 ; move 3 , ul / 4 ) )  
[11025] ( ( move 4 , 3 - ul ; move 4 , ul / 2 ) ; move ul , ul )  
[11026] ( ( move ua - 3 , ua ; move ua , 3 + 2 ) ; pen 2 - ul )  
[11027] ( move 3 + ul , ul / 3 ; move 3 + 2 , ul ; pen ua * 2 )  
[11028] ( pen ua ; ( move 3 - ua , 3 ; move ua + ul , 3 + 2 ) )  
[11029] ( move 3 - 4 , ua / 4 ; pen 4 - ua ; move ua + ul , 0 )  
[11030] ( move 3 + ul , 2 + ul ; pen ul - 4 ; move 4 + ul , 3 )  
[11031] ( ( pen ua + 4 ; move ua , 3 - ul ) ; move ua , 0 - 4 )  
[11032] ( move ul / ua , 3 / 4 ; ( v0 = ua ; move ua , 4 ) )  
[11033] ( move ua + 3 , 3 - ul ; ( pen 0 ; move 3 - ul , ul ) )  
[11034] ( move 3 - 2 , ul ; move ua + 2 , ul / 3 ; pen 3 / ua )  
[11035] ( ( move 2 , 4 ; pen 0 ; v0 = 2 ) ; move v0 , v0 )  
[11036] ( move ua + ul , 4 * 4 ; move 3 + ul , 2 * 2 ; pen ul )  
[11037] ( move ua - 3 , 0 - 3 ; ( move 4 , ul ; pen ua + ul ) )  
[11038] ( move 4 - ua , 2 ; pen 4 / ua ; move 3 * 2 , ua + ul )  
[11039] ( move ua + ul , ua ; v0 = ua + 2 ; move v0 , v0 )  
[11040] ( move 3 , ul / 2 ; ( pen ul - ua ; move 2 + ul , 0 ) )  
[11041] ( ( move ua + 4 , ul ; pen ua * 2 ) ; move 3 - ua , 2 )  
[11042] ( move 3 , 0 ; move ul - ua , ua - 2 ; move 0 , ul + ul )  
[11043] ( ( move 3 , 0 - ua ; pen 2 / 4 ) ; move ua + ul , ul )  
[11044] ( move 3 + ul , ua + 4 ; ( move 0 - 4 , ul ; pen ul ) )  
[11045] ( move 4 - ua , ul ; pen 3 * 2 ; move 3 - ua , ul / 2 )  
[11046] ( move ul + ul , 4 ; move 4 + 3 , 4 + ul ; pen ua / 3 )  
[11047] ( move 0 - 2 , ua + 2 ; move 3 , ua + ul ; move ul , ul )  
[11048] ( pen 4 - ul ; move 4 + ul , 3 * 3 ; move ua + ul , 4 )  
[11049] ( move 2 , ua + ua ; move ul , 3 ; move ul - ua , 0 - 2 )  
[11050] ( move 0 , 0 ; move ua - 4 , ua - ul ; move ul + ul , 2 )  
[11051] ( move ul , 0 ; move 2 + ul , ua * ua ; move 2 / ua , 0 )  
[11052] ( move 0 , 0 ; move ua + ul , ua / 4 ; move ua , ua - 2 )  
[11053] ( move ua , ua - ul ; v0 = ua + 3 ; move v0 , v0 )  
[11054] ( move 4 , 0 - ua ; move ua + 2 , ul ; move ua , ua + 3 )  
[11055] ( move 0 , ul - 2 ; move ua + ul , 2 / ua ; move ul , 0 )  | ( pen ul / ua ; v0 = 3 * 3 ; move v0 , v0 * v0 )  
[11056] ( pen 4 ; ( move ua - ul , ua + ul ; move 3 * 2 , 2 ) )  
[11057] ( move ua - ul , ul - 4 ; ( move 2 , ul - 4 ; pen 0 ) )  
[11058] ( ( move ua - 4 , ua - 3 ; pen ua ) ; move 3 * 2 , ul )  
[11059] ( v0 = 3 - ua ; move ua + ul , v0 ; move v0 , ul )  
[11060] ( pen ua + 4 ; ( move ua , 4 * 4 ; move ul , 0 - ul ) )  
[11061] ( ( move 3 + ul , ul - 3 ; move ua - ul , 3 ) ; pen 3 )  
[11062] ( pen ul / 2 ; move ua - 3 , 4 ; move ua - 3 , ua / 4 )  
[11063] ( move 0 , 3 - ua ; move 3 , ul + ul ; move ua + 2 , ul )  
[11064] ( pen ul ; ( move 4 * 2 , ua ; move 2 - ua , 4 + ul ) )  
[11065] ( move ua + ul , ua ; v0 = ua - 4 ; move v0 , v0 )  
[11066] ( ( move 4 + 3 , ua + 4 ; move 3 , ua * ua ) ; pen ul )  
[11067] ( v0 = 4 ; move v0 , v0 + v0 ; move v0 , v0 )  
[11068] ( move ua , ua ; v0 = ua - 3 ; move ua , v0 * v0 )  
[11069] ( move ua - 2 , ua / 3 ; ( pen 3 - ul ; move 2 , ul ) )  
[11070] ( move ua , ua * 2 ; move ul + ul , 2 ; move ua + 2 , 2 )  
[11071] ( pen ul ; ( move ua + 2 , 4 - ua ; move 4 , ua - 4 ) )  
[11072] ( move ul + ul , ul + ul ; move 0 - 2 , 4 ; move ul , 0 )  
[11073] ( move ua , 2 ; move 2 , 2 - 3 ; move ua + ul , ua - ul )  
[11074] ( pen 4 + ul ; ( move ul , 4 * 2 ; move ua , ua + 4 ) )  
[11075] ( move ul - ua , 4 ; move 3 - ul , 0 - ul ; move ua , 0 )  
[11076] ( v0 = 3 ; move v0 , v0 ; move v0 , v0 * v0 )  
[11077] ( move 3 , 0 ; move ua + ul , 3 + ul ; move ua - ul , 3 )  
[11078] ( move ua - 2 , ua ; move ul - 4 , ul ; move 0 - 2 , ua )  
[11079] ( v0 = ua * ua ; move 4 , v0 ; move ua , ua - v0 )  
[11080] ( move 2 + ul , 0 ; move 2 , ul ; move ul / 2 , ua + ul )  
[11081] ( move ul + ul , ua * 2 ; move 0 - ul , ul ; move 4 , 0 )  
[11082] ( move 0 , ul / 2 ; move ua - 4 , 0 ; move ua , ua - ul )  
[11083] ( move ul - ua , 2 / 4 ; ( move 2 - ul , 2 ; pen ul ) )  
[11084] ( move ua , 3 ; v0 = ul - ua ; move v0 , ua * v0 )  
[11085] ( move 4 , 4 + ul ; ( pen ul ; move ul / 2 , ua + 2 ) )  
[11086] ( ( move ul / ua , ul ; pen 3 ) ; move ua + 2 , 2 / 3 )  
[11087] ( move ua , 3 ; move 3 / ua , 0 ; move 0 - ul , ul - ua )  
[11088] ( move ul + ul , ua ; v0 = ul - 3 ; move v0 , v0 )  
[11089] ( move 0 - ua , 4 + ul ; move ul , ua ; move ua , 4 + 2 )  
[11090] ( ( move 4 , 4 + ul ; move 2 * 2 , ul - ua ) ; pen ul )  | ( move 4 , 3 + 2 ; move 4 , ul ; ( move 0 , ul ; pen 0 ) )  
[11091] ( ( move ul , ul / 2 ; pen 3 ) ; move 2 - ua , 3 - ul )  
[11092] ( move ua / 4 , ua * ua ; ( pen 3 - ua ; move 4 , 2 ) )  
[11093] ( move 3 , ul / 4 ; ( move ul + ul , 3 + ul ; pen 2 ) )  
[11094] ( move 3 + 2 , ul - ua ; move 2 - ua , 3 ; move ul , ua )  
[11095] ( move ul , ua + 3 ; move 0 - ul , ul ; move 2 , ua - 4 )  
[11096] ( v0 = 2 ; move ul / v0 , ul ; move ua + ul , v0 )  
[11097] ( move 0 , ul - 3 ; move ua - 2 , 2 / ua ; move ua , ul )  
[11098] ( move 4 - ul , 4 - ul ; move 4 + ul , ul / 2 ; pen 4 )  
[11099] ( move ua - ul , 4 + 2 ; move 3 , ul ; move ul + ul , 0 )  
[11100] ( move ua + 2 , 2 ; move 3 - ua , ul ; move 4 - ua , ua )  
[11101] ( move 3 - 2 , ua ; move ul , 4 ; move 0 - ua , ul + ul )  
[11102] ( move 0 , 4 + ul ; move ua , ul ; move 4 + 2 , ua * ua )  
[11103] ( move ul + ul , ua / 4 ; move 0 , ul ; move 3 - ua , 0 )  
[11104] ( move 3 , 3 ; move 0 , ua + ul ; move ul - 3 , ul + ul )  
[11105] ( move ua - ul , 3 ; move 3 + 2 , 2 ; move ua , ul - ua )  
[11106] ( move ul , ul ; v0 = 4 ; move ul - ua , v0 + v0 )  
[11107] ( move 4 , ua * 2 ; move ul , ua + ul ; move 2 , ua + 2 )  
[11108] ( move 2 + ul , ua * ua ; move 0 , ua ; move 3 , ul / 2 )  
[11109] ( move 0 - 4 , 2 + ul ; move ul + ul , ul ; move 3 , ua )  
[11110] ( move 4 - ua , 0 ; move 3 , ua * ua ; move 4 , ua + ua )  
[11111] ( move ua , ua + 2 ; move 3 + 2 , ul ; move ul + ul , 4 )  
[11112] ( move ul / 2 , 4 + ul ; move ua + ul , 0 ; move ua , 2 )  
[11113] ( ( pen ua ; move ua , 4 / ua ) ; move ua - 3 , 4 * 2 )  
[11114] ( move 3 , 0 ; move ul / 2 , ua + ul ; move ul , 2 + ul )  
[11115] ( ( pen 2 ; move ul , ua / 3 ) ; move 3 + ul , ul - 4 )  
[11116] ( v0 = ua + ul ; move ul , v0 * v0 ; move 3 , ul )  
[11117] ( move 0 - 4 , 0 ; ( pen 4 ; move ul , 2 ) ; move 4 , 3 )  
[11118] ( move ua , 2 ; move ul , 4 + 2 ; move ua - 3 , ua + ul )  
[11119] ( move ul - 4 , ul ; move ua - 2 , ua ; move ua + 2 , 2 )  
[11120] ( move ua , ul + ul ; move 3 , 4 + 4 ; move 0 - ua , ua )  
[11121] ( move 4 + 4 , 4 * 2 ; pen ua * 4 ; move ul , ul / ua )  
[11122] ( move 0 - 3 , 3 - ul ; move ua , ua - ul ; move ul , 2 )  
[11123] ( move 3 / ua , ul ; v0 = ua ; move v0 , ua * v0 )  
[11124] ( pen 4 ; ( move 4 , 0 ; move 3 , 2 ; move ua , 4 + 3 ) )  
[11125] ( ( move 4 , ua * ua ; move ul , 3 - ul ) ; pen 2 / 3 )  
[11126] ( move 2 + ul , ua ; move 3 + 3 , ul ; move ul , ul - 2 )  
[11127] ( move ua / 4 , ua + ul ; move 2 , 4 ; move ua + ul , 0 )  
[11128] ( move ua + ul , 2 ; move ul , 2 * 2 ; move 3 - ua , ul )  
[11129] ( move ua / 2 , 0 ; move ua + 4 , ua + 4 ; move ul , ul )  
[11130] ( move ua , 4 + 3 ; move ua , ua - 2 ; move 3 - ua , ul )  
[11131] ( move ua + ul , ua - ul ; move 2 , 4 ; move 0 , ua * 4 )  
[11132] ( move ul , ua ; move 3 + ul , 0 - 3 ; move ua - 4 , ul )  
[11133] ( move 4 , ua + 4 ; move 3 , 2 + ul ; move ua , ua + ul )  
[11134] ( move 4 - ua , 0 ; move 2 , ua - ul ; move ul , 2 / ua )  
[11135] ( move 0 , 4 - ul ; move ul , ua ; move ua + 3 , ua - 4 )  
[11136] ( move ua , 0 - ul ; move 2 , 4 + ul ; move ul , 4 + ul )  
[11137] ( move ua + ul , ua - ul ; move ul , 3 / 2 ; move 3 , 0 )  
[11138] ( move 4 - ua , 3 / ua ; move ua , 2 + ul ; move 0 , ul )  
[11139] ( move ua , 2 + ul ; move ul , 4 + 3 ; move 2 , ul - ua )  
[11140] ( move ul - ua , 2 - 3 ; move 3 / ua , 0 ; move ua , ul )  
[11141] ( move ua + 2 , 2 ; move 4 - ul , ul ; move ua , 3 - ua )  
[11142] ( move 4 , ua * ua ; move ua , 0 - 4 ; move ua , 3 + ul )  
[11143] ( move 0 , 4 + 3 ; move ul - ua , ul ; move 4 , ua + ul )  
[11144] ( move ua + 2 , 4 ; move 3 / ua , ua ; move ul , ua + 2 )  
[11145] ( move 4 , ul + ul ; move 3 , 3 / ua ; move 0 - ua , ua )  
[11146] ( move ul + ul , 4 ; move 4 , ua + 3 ; move ua , ua + 3 )  
[11147] ( move ul , 3 / ua ; move ul + ul , 2 + ul ; move 2 , 2 )  
[11148] ( move ua / 3 , 0 - ua ; move 3 - ua , ul ; move ua , 4 )  
[11149] ( move 4 - ul , 0 ; move ua - ul , 4 ; move ua , ua + 4 )  
[11150] ( move 3 + ul , 3 + 2 ; move 3 , ul ; move ul , ul + ul )  
[11151] ( move 2 + ul , ua * 2 ; move 2 , ua / 4 ; move ua , ua )  
[11152] ( move 0 - ua , 3 ; move ul - 3 , ul ; move ul - 3 , ul )  
[11153] ( move ua , 2 / ua ; move ua , ul ; move 4 * 2 , ua + 2 )  
[11154] ( pen ul ; ( move 3 / 2 , 0 ; move 4 , 2 ; move 3 , 3 ) )  
[11155] ( move ul , ua ; move 0 - ua , 4 + 4 ; v0 = ua + ul )  
[11156] ( move 3 , ua - 3 ; move 2 / ua , ua ; move 2 + ul , ul )  
[11157] ( ( move ua , ua ; move 0 - ua , ua * ua ) ; v0 = 0 )  
[11158] ( move ul - 3 , ul + ul ; move 2 , 2 ; move 4 , ua + ul )  
[11159] ( move ul , ul ; ( move 0 - 3 , ul - ua ; move ua , 0 ) )  
[11160] ( move ul + ul , ua * ua ; move 0 - 4 , 4 ; move ul , 2 )  
[11161] ( move 3 , 0 - ul ; move ul / 2 , ul ; move ua , ua - 3 )  
[11162] ( move ul , ua + ul ; move 3 , 4 / 2 ; move ul - ua , 0 )  
[11163] ( ( move ua , 2 ; move 2 - ua , ua + 2 ) ; move ul , ua )  
[11164] ( move 3 - 2 , 4 ; ( pen 0 ; move ua , 2 ; v0 = 4 ) )  
[11165] ( move 4 , 3 ; move ua - ul , ua + ul ; move 4 , ua + 2 )  
[11166] ( move ua , 3 ; move ul , 4 * 3 ; move ua + ul , ua + 2 )  
[11167] ( move ua + 3 , ua - 4 ; move 2 , ua ; move ul - 3 , ul )  
[11168] ( move 4 , 2 / ua ; move ul - 3 , 0 ; move ua + ul , ul )  
[11169] ( move 3 - ua , 3 ; move ul , ua + 3 ; move ul + ul , 3 )  
[11170] ( move ua - 3 , 0 ; v0 = 4 ; move v0 , v0 * v0 )  
[11171] ( move 0 - 3 , ua ; move 4 + ul , ul + ul ; v0 = ul )  
[11172] ( move ua - 2 , 3 ; move 3 , 4 + ul ; move ul , ul + ul )  
[11173] ( move 0 - ul , ul ; move ul , ul ; move ul - 4 , 4 + 2 )  
[11174] ( move ul , 3 ; move ua + 4 , ul ; move 4 + ul , ua + 3 )  
[11175] ( ( pen 3 / ua ; move ul , 3 + ul ) ; move 4 , ul / 3 )  
[11176] ( move ul , 3 ; move ua + ul , 4 + 3 ; move 3 , ul + ul )  
[11177] ( move ul - ua , 3 ; move 2 - ua , 4 ; move 3 , ua - ul )  
[11178] ( move 4 + ul , ul ; move ua + ul , 4 + 4 ; move ua , 2 )  
[11179] ( move ul , ua * ua ; move 4 , 0 - ul ; v0 = ua - 2 )  
[11180] ( move 2 , ua - ul ; move ua - 3 , 4 ; move ua - 3 , ul )  
[11181] ( move ul , ua + 2 ; move 4 + 2 , 3 ; move ul / ua , ul )  
[11182] ( move ua , 3 + ul ; move 4 , 2 ; move ua - 4 , ul - ua )  
[11183] ( move ul , ul / ua ; move 0 - 3 , ua - 4 ; move 2 , ul )  
[11184] ( move ua , ua ; move ul - 2 , 4 * 2 ; move ul , ua + 4 )  
[11185] ( move ua , 4 - ua ; move ul , ua - ul ; move 4 , 0 - 4 )  
[11186] ( move 3 , ul ; move ua , 3 - ul ; move 4 + ul , ua + 3 )  
[11187] ( move 3 , ul / ua ; move 2 + ul , 3 ; move 2 + ul , ul )  
[11188] ( move ul , ul / 4 ; v0 = ul - ua ; move v0 , v0 )  
[11189] ( move 0 , ul ; move ul - ua , ua / 3 ; move 4 - 2 , ul )  
[11190] ( move 0 , 3 / 4 ; move ul - ua , ua ; move 3 - ua , ul )  
[11191] ( move ul , ua / 2 ; move ua + ul , ul ; move 2 , 2 - 4 )  
[11192] ( move ua , 0 ; move ul , 4 - ul ; move 4 * 2 , ua - ul )  
[11193] ( move 3 + 3 , ua - ul ; move ul , ul ; move 2 - ua , 4 )  
[11194] ( v0 = 4 + 2 ; move v0 , ua + 4 ; move v0 , v0 )  
[11195] ( move ul - 3 , 2 - ua ; move ua / 2 , 2 ; move ul , ul )  
[11196] ( ( ( move 4 , 2 ; pen 0 ) ; move 2 , ul ) ; v0 = 0 )  
[11197] ( move ua + 2 , ua * 3 ; move ua / 3 , 2 ; move ul , ul )  
[11198] ( move ua / 2 , 0 ; move 4 + ul , ul ; move ua , ua / 3 )  
[11199] ( move ua , ua * 4 ; move 4 - ua , 0 ; move 4 , ul + ul )  
[11200] ( move ul - ua , 3 ; move 3 + ul , ua ; move 2 - ul , 4 )  
[11201] ( move ul , ua + 3 ; move ua + 3 , ul ; move 4 + ul , 4 )  
[11202] ( move 2 , 4 ; move ua + 2 , ul + ul ; move ul , 3 / ua )  
[11203] ( move ua , ua * ua ; ( move 3 / ua , ul ; move 0 , 0 ) )  
[11204] ( ( move 4 , 0 ; move ul / 4 , 0 ) ; pen 2 ; move 4 , 4 )  
[11205] ( move 3 + ul , 4 / 3 ; move ul , ua + ul ; move ul , 0 )  
[11206] ( move 3 , ul - 2 ; move ul , ua * ua ; move 3 * 2 , ul )  
[11207] ( move 4 , 4 + ul ; move 0 - 3 , ul ; move ua , ul / ua )  
[11208] ( move ul , ua ; ( move ul , 0 - 2 ; move ua - 3 , ul ) )  
[11209] ( move 2 , ua - ul ; move ua / 3 , ul - 3 ; move ul , 2 )  
[11210] ( move 3 , ua - ul ; ( move 0 - ul , ul ; move ua , 2 ) )  
[11211] ( move 2 + ul , ua ; ( move ul , 2 ; move ua , 3 + ul ) )  
[11212] ( ( move ua , 2 + ul ; move ul / ua , 2 ) ; move ul , 0 )  
[11213] ( move ua + 2 , ua * ua ; ( move ul , 2 ; move 2 , ul ) )  
[11214] ( move 3 / ua , ul ; move 2 - 3 , 3 + ul ; move ua , ul )  
[11215] ( move ul , 0 - 3 ; move ua , 3 / ua ; v0 = ul - ua )  | ( move ul , ul - 4 ; move ua , ul / 2 ; move 0 , 4 - ul )  | ( ( move ul , ul - 4 ; move ua , ul / 2 ) ; v0 = ua )  
[11216] ( move 2 , ua * 4 ; move 2 , ua * ua ; move ul , 4 + ul )  
[11217] ( move 4 - ul , ua + 3 ; move ul , ua - 3 ; move ul , 3 )  
[11218] ( move ul , 3 ; move 4 / 3 , ua ; move ul + ul , ua + 2 )  
[11219] ( move ua , ua + 3 ; move ul , ul / 3 ; move 4 , ua + 3 )  
[11220] ( move 2 , 4 + ul ; move 4 + 2 , ua ; move ul , ul / ua )  
[11221] ( move 3 , 3 + ul ; move ul , ua - ul ; move 3 , 3 - ul )  
[11222] ( move ua - ul , 4 / ua ; move 3 , ul ; move 0 , ua - 4 )  
[11223] ( move 2 + 2 , ul ; move ul - ua , ul / 3 ; move 3 , ul )  
[11224] ( move ul - 3 , 2 ; move ua + ul , ua + ul ; v0 = 4 )  
[11225] ( move ua + 3 , ul - 3 ; move 3 - ua , ul ; v0 = ua )  
[11226] ( move 3 , ua ; ( move ua + 2 , ul + ul ; move ua , 3 ) )  
[11227] ( move 4 , ua + ul ; move 0 - ua , ul / 2 ; v0 = ul )  
[11228] ( move ua + ul , ua - 3 ; v0 = 3 ; move 3 - ua , ul )  
[11229] ( move ua , 4 - ul ; move ua , 3 ; move 4 - ul , 2 - ua )  
[11230] ( move ua , 3 - ul ; move ul , 4 * 3 ; move 2 , ua + ul )  
[11231] ( move ul , 2 + ul ; move 4 - ul , 4 - ua ; move 2 , ul )  
[11232] ( move ua , ul - 4 ; move ua , 4 - ul ; move 2 , ua * 2 )  
[11233] ( move 4 , 4 ; move 3 + 2 , ul - ua ; move ul , ua - ul )  
[11234] ( move 3 , 3 ; move ul - ua , ua - 4 ; move 4 + ul , ua )  
[11235] ( move ul / 2 , ua + 2 ; move 4 , 2 - ul ; move ul , ul )  
[11236] ( move 4 , 2 / ua ; move ul - ua , ul ; move 2 , 2 - ul )  
[11237] ( move ul + ul , 3 ; move 2 / 4 , 2 ; move ua , ua * ua )  
[11238] ( move ul - 2 , ua - ul ; move ua , 2 / 3 ; move ua , 4 )  
[11239] ( move ul - 2 , ua - 2 ; move 2 , ua / 4 ; move ul , ul )  
[11240] ( move 2 + ul , 2 - ul ; move 4 , 4 ; move ua - ul , ul )  
[11241] ( move ul , 2 ; move 2 , 3 / 4 ; move ua + ul , ul - ua )  
[11242] ( move 2 , 0 - ul ; ( move 3 , ul + ul ; move ua , ul ) )  
[11243] ( move ul + ul , 3 - 2 ; move 3 , ul ; move ul , 3 - ul )  
[11244] ( move ua + ul , ua ; move 4 + ul , 3 ; move 3 - ul , 4 )  
[11245] ( move 3 - ul , ua - ul ; move 4 + 2 , ul ; move ua , 4 )  
[11246] ( move ul + ul , 4 ; move ul - 3 , ul ; move 2 * 2 , ul )  
[11247] ( ( move ua + ul , ua - 3 ; move 2 , 3 ) ; move ua , ul )  
[11248] ( move 3 , 2 ; move ul - ua , ua + ul ; move ul / 4 , 3 )  
[11249] ( move 2 , 3 - ua ; ( move ul , ua ; move 2 - ua , ul ) )  
[11250] ( move 3 + ul , 4 ; v0 = 4 ; move v0 , v0 + v0 )  
[11251] ( move ul , ua ; move 3 , 4 + ul ; move 2 / 4 , ua + ul )  
[11252] ( move 3 , ul ; move 2 - ua , ua - ul ; v0 = 3 - ul )  
[11253] ( v0 = 4 + ul ; move 3 , v0 + v0 ; move v0 , 4 )  
[11254] ( move ua + ul , 0 ; ( move ul , ua / 2 ; move 3 , ul ) )  
[11255] ( move 2 - ua , ul ; move 4 - ua , 3 ; move ul , ul - 4 )  
[11256] ( move ul , 2 ; move 3 / ua , 4 - ua ; move 3 + ul , ul )  
[11257] ( move ua / 4 , ul - 2 ; move ua + ul , 2 ; move ul , 4 )  
[11258] ( move ua , ul ; ( move ua , 3 ; move ua + 4 , ua + 3 ) )  
[11259] ( move ua , ua * 4 ; move ua + ul , 2 ; move 4 , ul - 4 )  
[11260] ( move ua , 2 / ua ; move ul / 3 , ua + ul ; move 2 , 4 )  
[11261] ( move 3 - 4 , ul ; move 4 / ua , ua ; move ua + 2 , ul )  
[11262] ( move 2 - ua , ua ; move 4 , ua - ul ; move ul , 4 * 3 )  
[11263] ( move 4 , 4 ; move ul + ul , ua + ul ; move ul , 4 + 3 )  
[11264] ( move 3 , 3 * 3 ; move ul / ua , ua ; move ua , ua + 4 )  
[11265] ( move 2 + ul , ua ; move ul / 2 , ul - 3 ; move 4 , ul )  
[11266] ( move ua - 3 , 3 ; ( move ul , ua + 2 ; move ul , ua ) )  
[11267] ( move ua / 3 , ul / 2 ; move ua , ul ; move ul , 3 + 2 )  
[11268] ( move ul , ul ; ( move ua , 4 + 2 ; move ua , ua - 2 ) )  
[11269] ( move 2 / ua , 3 - ul ; move ul , ua ; move ua , 4 + 4 )  
[11270] ( move 2 , 2 + ul ; ( move ul , ul ; move ua , 2 - ul ) )  
[11271] ( move 0 , ul / ua ; move 3 * 3 , ul ; move 2 / ua , ul )  
[11272] ( move ul , ua * 4 ; move 3 - ua , ul ; move 2 - 3 , ul )  
[11273] ( move ul , 4 * 4 ; move ul , 4 + ul ; move 0 - ua , ul )  
[11274] ( move ul - 4 , ul ; move ul , 4 + ul ; move 0 , ua * 4 )  
[11275] ( ( move ul , 0 ; move ul - ua , 2 ) ; move ul - ua , 4 )  
[11276] ( move ul , ua + 4 ; ( move ua , 0 ; move ul - 3 , ul ) )  
[11277] ( move 3 , 3 ; move ua , ul - ua ; move 2 / ua , 3 / ua )  
[11278] ( move 3 / ua , 0 - 2 ; ( move ua , ul ; move ul , ua ) )  
[11279] ( move ul / 2 , ul ; move ua + 3 , 3 + ul ; v0 = ua )  
[11280] ( move ul + ul , 0 ; move ua / 4 , 4 - ul ; move ul , 4 )  
[11281] ( move ua , 3 / 4 ; move ua + ul , 4 - 2 ; move ul , ul )  
[11282] ( move ul , ul / 3 ; move 0 - ua , ul / 2 ; move ul , 4 )  
[11283] ( move ul - ua , 3 ; move 4 * 2 , ul + ul ; v0 = ua )  
[11284] ( move ul , 4 - 3 ; move ul , ua + ul ; move 4 , 4 + ul )  
[11285] ( move ua + ul , ua * 3 ; move ua , 4 ; move ul - 4 , 4 )  
[11286] ( move 2 , 0 ; ( move ua , ul / ua ; move ul / ua , 2 ) )  
[11287] ( ( move 3 + ul , ul ; move ul - 3 , ua ) ; move ua , 2 )  
[11288] ( move ua , ua * ua ; move 2 , ua / 3 ; v0 = 4 + ul )  
[11289] ( move 2 , 3 + ul ; ( move ua , ul ; move 4 , ua + ul ) )  
[11290] ( move 2 - ul , ul ; move ul - ua , 4 * 3 ; move 3 , ul )  
[11291] ( move 4 , 0 ; v0 = ua / 4 ; move v0 , v0 * v0 )  
[11292] ( move ua / 2 , 2 / ua ; move ul , ua ; move ul , 4 * 2 )  
[11293] ( ( move 0 - ua , ul ; move ul , 2 ) ; move ul , 3 / ua )  
[11294] ( v0 = 2 / 3 ; move v0 * 3 , v0 ; move ua , v0 )  
[11295] ( move ua , ua + 4 ; move 3 , 3 ; move ul - ua , ul / 4 )  
[11296] ( ( move 2 , ul ; move 3 + ul , ul ) ; move ua + ul , 3 )  
[11297] ( move 2 , 3 / ua ; move ua , ua / 4 ; move ul , ua * 2 )  
[11298] ( move ul - ua , 0 ; ( move ua - 4 , ua ; move 4 , ul ) )  
[11299] ( move 4 , ua - ul ; move 4 , 3 + ul ; move ul + ul , 4 )  
[11300] ( ( move ul , 0 - ul ; move ul , 2 - ul ) ; move ua , 4 )  
[11301] ( ( move ua , ua ; move ua - 4 , 3 ) ; move 2 + ul , ul )  
[11302] ( move ul - ua , 2 ; move 3 / 4 , ua ; move ul - ua , 4 )  
[11303] ( ( move 3 - ua , ua + 4 ; move 2 , ul ) ; move ul , ua )  
[11304] ( move ul , ul ; move 4 / 3 , 2 ; move 3 + ul , ul - ua )  
[11305] ( move 4 , ua ; move ul , 3 / ua ; move 3 * 2 , ul - ua )  
[11306] ( move ua / 3 , 3 ; move ul , ul / 2 ; move 3 + ul , ua )  
[11307] ( ( move ua , ua / 2 ; move ul , 4 + 2 ) ; move ul , ua )  
[11308] ( move ul - 4 , ul ; move 3 , 4 - ul ; move ua - 4 , ua )  
[11309] ( v0 = 3 * 2 ; move ul , 3 / v0 ; move v0 , v0 )  
[11310] ( move 2 / ua , ul ; move ua - 4 , ul ; move 3 , ul - 4 )  
[11311] ( ( move ua - 4 , 3 ; move ua , ul ) ; move 2 , ul - ua )  
[11312] ( move ul / 2 , ua ; move 4 , 4 / ua ; move ul , 2 - ua )  
[11313] ( ( v0 = ua - 2 ; move v0 , 3 ) ; move v0 , v0 )  
[11314] ( move ua , ua * ua ; ( move ul , 4 + 3 ; move ua , 3 ) )  
[11315] ( move ul - 4 , ul ; move ua - ul , 2 ; v0 = ua * 3 )  
[11316] ( move ua , 3 / ua ; ( move ua , ua / 3 ; move ul , 0 ) )  
[11317] ( move 4 , ul ; ( move 3 , ul + ul ; move ua , ua + 3 ) )  
[11318] ( move 4 + 3 , ul / ua ; move 4 , 4 ; move ul + ul , ua )  
[11319] ( ( move ul , ul ; move 0 , ua - ul ) ; move 3 , ul / 2 )  
[11320] ( move 3 , 0 ; move 4 , 3 ; ( move 0 , ua ; move 2 , ul ) )  
[11321] ( move ua , ul ; move ua + ul , 4 * 2 ; v0 = ul / 2 )  
[11322] ( ( move ul , ul ; move ua + ul , 0 ) ; move ua , 4 * 4 )  
[11323] ( ( move 2 , ua - ul ; move 4 , ul + ul ) ; move ul , 2 )  
[11324] ( move 4 + 3 , ul - 3 ; move ul , ul + ul ; v0 = ul )  
[11325] ( move 0 - ul , ua * 4 ; move ua , ul / 3 ; v0 = ul )  
[11326] ( move 2 - ua , ul ; move ul + ul , ua / 4 ; v0 = 3 )  
[11327] ( move 4 , ua + 4 ; move ul - ua , 4 ; move 4 - ul , ul )  
[11328] ( ( move ul , 0 ; pen 0 - ua ) ; move ua + 2 , ua + ul )  
[11329] ( v0 = 3 - ua ; ( move v0 , 3 ; move v0 , v0 ) )  
[11330] ( move 0 , ul ; ( move ul , ul / 4 ; move ua , 3 + ul ) )  
[11331] ( move 3 - ua , ul / 3 ; move ua , ul ; v0 = ua - 4 )  
[11332] ( move 4 / 3 , ul ; move 3 , ua - ul ; move ul - 4 , ua )  
[11333] ( ( move ul - 4 , ua ; move 3 + ul , ul ) ; move 3 , ua )  
[11334] ( move ul , 4 * 2 ; move ul + ul , ul / 3 ; move ua , 4 )  
[11335] ( ( move 3 , ua ; move ul , ul ) ; move ul - 4 , ua - 2 )  
[11336] ( move 4 / 3 , ul ; move ua , ul / ua ; move ul , 3 - 2 )  
[11337] ( move 4 + ul , ua ; ( move ua , 3 ; move ul - 3 , ul ) )  
[11338] ( move ul , ua / 4 ; move ul + ul , 4 * 2 ; move 3 , ul )  
[11339] ( move ua , ul ; ( v0 = ua ; move ua - ul , 3 + 3 ) )  | ( ( move ua , ul ; pen 4 ; move 4 + ul , 4 + 2 ) ; pen 4 )  
[11340] ( move 3 , 3 ; move ul , 4 / ua ; move 2 - ul , ul / ua )  
[11341] ( move ul , 4 + ul ; ( move ul , ul + ul ; move 3 , 2 ) )  
[11342] ( v0 = 4 + ul ; ( move v0 , v0 ; move 2 , v0 ) )  
[11343] ( move ua + 2 , ua * ua ; move ua - 4 , 3 + ul ; pen 0 )  
[11344] ( move ul , ul / 2 ; move ua , 4 + ul ; v0 = 4 - ua )  
[11345] ( ( move ul , 2 + ul ; move ul , 4 ) ; move ua , 4 + ul )  
[11346] ( ( move 2 , 2 ; move 0 , 4 ) ; move 2 , 2 ; move ul , ul )  
[11347] ( ( move 4 / ua , 3 ; move ua , ua + ul ) ; move 2 , ul )  
[11348] ( move 4 , ul / 3 ; move ul , ul ; move ua - 4 , 3 + ul )  
[11349] ( ( move ul , ul ; move 2 + ul , 2 - ul ) ; move ul , 4 )  
[11350] ( v0 = 4 + ul ; move v0 , v0 ; move 4 / 3 , v0 )  
[11351] ( move ua , 4 ; ( v0 = 3 ; move v0 + v0 , v0 ) )  
[11352] ( ( move ul - 3 , ua ; move ua - 2 , ul ) ; move 4 , ul )  
[11353] ( move 3 * 2 , 3 ; move ul , ul - 4 ; move ul , ul / ua )  
[11354] ( move 3 - ul , ua + ul ; pen 0 ; move ua - ul , 3 - 2 )  
[11355] ( move 2 + 2 , 0 ; move ua - ul , ua / 3 ; pen ul + ul )  
[11356] ( move 3 , ua ; ( move ua , ua / 3 ; move 3 - ul , ul ) )  
[11357] ( ( move 2 , ua ; move ua - ul , 4 - ul ) ; move 4 , ul )  
[11358] ( move ul , 4 ; ( move 2 + ul , ul ; move ul , 3 - ul ) )  
[11359] ( move 4 , ua - ul ; ( move 2 , ul ; move ul + ul , 4 ) )  
[11360] ( ( move ua + 3 , ul ; move ul , 4 - 3 ) ; move ul , ul )  
[11361] ( move 2 / ua , ua ; ( move 3 * 2 , ul ; move ul , ul ) )  
[11362] ( move ul - 3 , ua + ul ; ( move 3 , 4 ; move ul , ul ) )  
[11363] ( move ua + 2 , ua ; ( move ua - ul , ua + 2 ; pen 0 ) )  
[11364] ( move ul - ua , 3 - ul ; move ul - 4 , 4 ; v0 = ul )  
[11365] ( ( pen ua * 3 ; move 3 , 3 ; pen 0 ) ; move 4 + 2 , 2 )  
[11366] ( ( move ul , ul ; move ul , ul + ul ) ; move 4 + 2 , 4 )  
[11367] ( move ul , ul ; move ua , 4 * 3 ; move ul / 2 , ul / 2 )  
[11368] ( move 3 , ua - ul ; ( move 4 , ua ; move ul , 4 + ul ) )  
[11369] ( move ua - ul , 3 ; move ul / 4 , 4 * 2 ; move ul , ul )  
[11370] ( ( move 4 , 2 ; move ul , ua ) ; move 0 , 4 ; move 4 , 0 )  
[11371] ( move 3 - ul , 3 ; ( move ua - ul , ul ; move 3 , ul ) )  
[11372] ( ( move ua , 4 ; move 2 , ul ) ; move ua - ul , 4 - ul )  
[11373] ( move ul + ul , 0 ; pen ua * 4 ; move 0 - ua , 4 + ul )  
[11374] ( move 4 , ul / 3 ; move 4 , 4 - ul ; move ua , ul - ua )  
[11375] ( move 4 , ul ; move ul - 3 , 4 + 4 ; move ul , ul / ua )  
[11376] ( move ul , ul / 4 ; move ua , 2 / ua ; move 3 - ul , 4 )  
[11377] ( move ua , 3 ; ( move 2 + ul , 4 ; move ul / ua , ul ) )  
[11378] ( ( move ul / ua , 3 ; move ua + 4 , ul ) ; move ul , 2 )  
[11379] ( ( pen 4 ; move 4 , ua / 4 ) ; move 3 , 2 ; v0 = 4 )  
[11380] ( move ua - ul , ul / 3 ; move 3 , 4 ; move 4 , ul / ua )  
[11381] ( ( v0 = 4 ; move 2 , v0 ) ; move v0 , ua / v0 )  
[11382] ( move ul - ua , 3 - ul ; ( move ul , 4 ; move ua , 4 ) )  
[11383] ( move ul - 3 , ul / ua ; move 3 , 4 * 4 ; move ul , ul )  
[11384] ( move ua , ul / ua ; ( move 4 , 4 ; move ua , ua * 2 ) )  
[11385] ( move 4 , ul ; ( move 0 , ul ; move ul - ua , ul / 4 ) )  
[11386] ( move ul / ua , 4 * 3 ; ( move ua , ul ; move ua , 2 ) )  
[11387] ( pen 3 + ul ; move ua , ua / 4 ; move ua + 2 , ua + 2 )  
[11388] ( move ua - ul , ua + 3 ; move 3 , 3 + 2 ; pen ul - ua )  
[11389] ( ( move ua + ul , 3 * 3 ; move ul , ul ) ; v0 = ua )  
[11390] ( move ua , ul ; ( move ua , ul - 4 ; move 4 - ul , 3 ) )  
[11391] ( move 0 , 0 ; ( pen ul / 3 ; move 0 , 0 ; move ua , 0 ) )  
[11392] ( move ua + ul , 4 + 3 ; v0 = 2 ; move v0 - 4 , 3 )  
[11393] ( ( move 4 , ul + ul ; move ul , ul ) ; move ul , 3 * 2 )  
[11394] ( move 4 , ua + ua ; ( move ul , 4 * 4 ; move ul , ul ) )  
[11395] ( move ua , ua * ua ; ( move 4 * 2 , ul ; v0 = ul ) )  
[11396] ( move ul , ua - 4 ; ( move ul , 4 ; move ua , ul - 4 ) )  
[11397] ( move ua - ul , 3 / 4 ; move ul , ul / 3 ; move 4 , ul )  
[11398] ( move 3 * 2 , 4 * 2 ; v0 = ul - ua ; move v0 , 2 )  
[11399] ( ( move ua , ul ; move 2 , 2 ) ; move 4 , 3 ; v0 = 0 )  
[11400] ( ( move ul + ul , 3 ; move 3 , ul ) ; move ul , 4 / ua )  
[11401] ( move 4 + ul , ul ; pen ua + 4 ; move ul + ul , 0 - 3 )  
[11402] ( move 4 + ul , ul / 4 ; move 2 , ul ; v0 = ul / ua )  
[11403] ( ( move 2 , ul / 4 ; move ua - 4 , ua ) ; move ul , ul )  
[11404] ( move ul , ul ; ( move ua - 4 , 4 ; move ua , 3 / ua ) )  
[11405] ( move 4 , ul / 3 ; move ua , ua - 4 ; v0 = ul / ua )  
[11406] ( ( move ul - ua , 4 ; move ul , 4 - ua ) ; move 4 , ul )  
[11407] ( move 4 - ua , ul ; ( move ul - 3 , ul ; v0 = ua ) )  
[11408] ( move ua - 3 , ul ; pen ua + ul ; move 4 + ul , 2 - 3 )  
[11409] ( move 0 , ul ; ( move 3 , 4 ; move 2 , 3 ; move ul , 4 ) )  
[11410] ( v0 = 4 ; ( move v0 / 3 , ul ; move v0 , v0 ) )  
[11411] ( move ua - ul , ua / 3 ; pen 3 - ua ; move 3 - ul , 0 )  
[11412] ( ( pen 0 ; move 2 , 4 ) ; pen 3 * 2 ; move ul - 3 , 4 )  
[11413] ( pen 0 ; move 2 , 4 * 2 ; ( pen 3 * 3 ; move 3 , ul ) )  
[11414] ( move ul , ul + ul ; ( move ul - 4 , ul ; move 4 , 4 ) )  
[11415] ( v0 = 3 ; ( move v0 , v0 / 4 ; move v0 , ul ) )  
[11416] ( pen 3 + ul ; move ua - 2 , ul / ua ; move 3 + 2 , ul )  
[11417] ( move ua + ul , 4 + 3 ; pen ua * 2 ; move ul - 2 , ul )  
[11418] ( move ua + 4 , 0 - ul ; move ua - ul , 3 ; pen 4 - ul )  
[11419] ( move ua , ul ; ( move ua / 4 , ul ; move 4 - ul , 3 ) )  
[11420] ( move 4 , ul / ua ; ( move 3 , ul ; v0 = ul + ul ) )  
[11421] ( ( move 4 - 2 , 0 ; pen 0 ) ; move ua , 0 ; move ua , 3 )  
[11422] ( ( move 3 , 2 / ua ; move ul , ul / ua ) ; v0 = ul )  
[11423] ( move 3 / 4 , 3 - ul ; pen 0 ; move ul - ua , ua + ul )  
[11424] ( move ua - 4 , ua ; pen 2 - ul ; move 4 + 4 , ua + ul )  
[11425] ( move 3 - 2 , 2 ; pen 4 ; ( pen 3 - ua ; move 4 , 3 ) )  
[11426] ( move ul + ul , ua + ul ; pen ul / 2 ; move 3 , 4 + 2 )  
[11427] ( ( move 3 , 0 ; v0 = ua / 4 ) ; move 2 - ua , v0 )  
[11428] ( move 3 / ua , 4 - ua ; v0 = 3 ; move 4 , 3 + v0 )  
[11429] ( move ua , ul / ua ; ( move 4 , ua * ua ; v0 = 4 ) )  
[11430] ( move 3 , 4 ; ( move 2 , 2 ; move 4 , 3 ) ; move ul , ua )  
[11431] ( move ul - ua , 0 ; ( v0 = 4 ; move 4 , v0 + 3 ) )  
[11432] ( move ua , 4 + ul ; pen 0 - 4 ; move 4 - ul , ua - ul )  
[11433] ( ( move 2 , ul ; move 2 , 3 ) ; move 2 , ul ; v0 = 4 )  
[11434] ( move 4 - ua , ul ; move ua - 3 , 4 / 2 ; pen ua + ua )  
[11435] ( move 4 / 2 , 2 / 3 ; v0 = 3 + ul ; move v0 , ul )  | ( ( move 2 , 2 / 3 ; pen 3 ) ; move 2 , ul ; move 2 , ua )  
[11436] ( ( move ul , 3 ; pen 0 - ua ) ; move 2 + ul , ul / ua )  
[11437] ( ( move 4 , 0 - ul ; pen ul ) ; move 2 - ua , ua * ua )  
[11438] ( move 4 + ul , ua - 3 ; ( move ul , ua + 2 ; pen ua ) )  
[11439] ( pen ul - ua ; ( move ul , ul ; pen ua ) ; move ua , ua )  
[11440] ( move ul , ua * ua ; move 4 + 3 , 4 + ul ; pen 4 - ua )  
[11441] ( move ul / 2 , 4 + ul ; pen ul - 2 ; move ua , ul - 3 )  
[11442] ( move ua , 4 * 2 ; move 4 + ul , ua / 4 ; pen ua + ua )  
[11443] ( ( move ul - ua , ua ; pen ul - 3 ) ; move 0 - 3 , ul )  
[11444] ( ( move ua - ul , 2 ; pen 4 ) ; move ul + ul , ua + 2 )  
[11445] ( ( move 0 , ua ; pen ul / ua ) ; move ua + ul , 2 - 4 )  
[11446] ( move 4 , ua - 4 ; move 2 - ua , ua * ua ; pen ul / 2 )  
[11447] ( move ua + ul , ua - ul ; move ua / 3 , 2 ; pen 4 * 3 )  
[11448] ( ( move ua , ua + 4 ; move 2 , 3 ; pen 0 ) ; move 4 , 0 )  
[11449] ( move 4 , 3 ; ( move 2 , ul ; v0 = ul ) ; move 3 , 3 )  
[11450] ( move ul - 3 , 4 - ul ; pen ua ; move ul - 3 , 4 + ul )  
[11451] ( move 0 , ul ; ( pen 0 - 2 ; move 3 , 2 ) ; move 4 , ua )  
[11452] ( move ul , 4 + 4 ; v0 = 4 + ul ; move v0 , 4 * 4 )  
[11453] ( move 3 , 4 * 2 ; ( pen 0 ; move 0 , 0 ) ; move ul , ul )  
[11454] ( ( move 4 , 4 * 3 ; pen 2 ) ; ( move 2 , ul ; pen 0 ) )  
[11455] ( ( move 0 , ua - 4 ; move ua , 0 ) ; pen 3 ; move 3 , 2 )  
[11456] ( ( move ul , ul / 2 ; pen ua ) ; move ua - 3 , ua + 2 )  
[11457] ( ( pen ua ; move 3 - ua , ua + 4 ) ; move ua - ul , 3 )  
[11458] ( pen 4 ; ( move ua - 4 , ua + ua ; move 2 , ul + ul ) )  
[11459] ( ( move 4 - ua , 3 ; v0 = ua + 4 ) ; move 4 , v0 )  
[11460] ( move ua / 3 , 4 ; move ul - 3 , ul + ul ; pen ul - 3 )  
[11461] ( move ua , 0 - ul ; move ul , 0 ; move 3 + ul , ul + ul )  | ( ( pen ua ; move ul , ua - ul ; move ua , 0 ) ; move 4 , 2 )  
[11462] ( move 4 , 2 - 4 ; v0 = 3 / ua ; move ul / v0 , 4 )  
[11463] ( move ul , ua + 2 ; move 2 + 2 , ua ; move ua , ua * ua )  
[11464] ( ( move 3 , ul - 4 ; pen ua ) ; move ua - 3 , ua + ul )  
[11465] ( move 4 + ul , 4 + 2 ; ( move ua , ua * ua ; pen ul ) )  
[11466] ( move ua - 3 , ua * 4 ; move ua + ul , 4 / 3 ; pen ul )  
[11467] ( move 3 - ua , ua / 3 ; ( move ua , ua - 2 ; pen ul ) )  
[11468] ( pen ua + ul ; ( move ul , 2 ; move 4 * 2 , ua * ua ) )  | ( move ul , ua + ul ; move ul , ul ; move 4 * 2 , ua * ua )  
[11469] ( v0 = ua - 3 ; ( move 4 , 4 + ul ; move v0 , 4 ) )  
[11470] ( move 0 - ua , ua - ul ; move 2 , ua + ul ; move 2 , ul )  
[11471] ( move ua - ul , ua ; move 0 - ua , ul ; move 0 , 3 - ul )  
[11472] ( v0 = 4 ; move 3 , ul ; ( pen 0 ; move v0 , v0 ) )  
[11473] ( move 0 - 2 , ul ; move ua + ul , ul - ua ; move ul , 2 )  
[11474] ( move 2 , ul ; pen 2 ; ( move 2 , 4 + 3 ; move ul , 0 ) )  
[11475] ( move ua + ul , ua - ul ; ( move 3 - ul , 3 ; pen 4 ) )  
[11476] ( move ul , 4 + 2 ; move 0 , ua - ul ; move ua + ul , ua )  
[11477] ( move 3 , 0 ; ( pen 0 - 3 ; move 4 , ua ; move 3 , ul ) )  
[11478] ( ( move 4 + 3 , ua * ua ; pen ul ) ; move ua - ul , 3 )  
[11479] ( move 0 , 0 ; move ul + ul , ul / ua ; move ua , ua - 3 )  
[11480] ( move 0 , 4 * 3 ; move 0 , ul ; ( pen 0 ; move 4 , ul ) )  
[11481] ( ( move 0 , 0 ; move ua , ua / 3 ) ; pen 2 ; move 4 , 3 )  | ( ( move ua , ua / 3 ; pen 3 + ul ) ; move 3 , 3 ; pen 4 )  
[11482] ( ( move ul - 4 , ua ; pen ul + ul ) ; move 2 - ua , 4 )  
[11483] ( move ua + ul , ul ; ( move ua - 3 , ul - 3 ; pen 4 ) )  
[11484] ( move 2 , ua ; move ul , ul - 2 ; move ua + ul , 2 - ua )  
[11485] ( move ua + 2 , ul ; move ua - 4 , ua + 3 ; move ua , ua )  
[11486] ( move 0 , ul / 2 ; move ua , ul ; move ua + 2 , ul + ul )  
[11487] ( move ul , 0 - ul ; move 4 + ul , ul ; move ua , 0 - ul )  
[11488] ( move 0 , ua - ul ; move ua + ul , ul ; move ua , 2 - 4 )  
[11489] ( move ua , ul ; move 2 , ua + ua ; move ua - 2 , 3 - ul )  
[11490] ( move ua - ul , ul ; ( move 4 + ul , ua - 3 ; pen 4 ) )  
[11491] ( move ua - ul , 2 ; move ua + ul , ua + 3 ; move ua , 3 )  
[11492] ( move ul , 0 ; move 0 , 2 ; ( move ua , 4 * 3 ; pen 4 ) )  
[11493] ( move ul , 2 + ul ; move ua , ua ; move ua - 4 , ua + 2 )  
[11494] ( move 3 + ul , 0 ; move ua , ua + ul ; move ua , ua / 3 )  
[11495] ( ( move 3 , 4 ; move 2 , 2 ) ; pen 2 ; move 2 - ua , ua )  
[11496] ( move 0 , 2 - ua ; move ua + ul , ul / ua ; move ul , 3 )  
[11497] ( move 4 , 0 ; ( pen ul ; move 3 , 4 * 2 ) ; move 0 , ul )  
[11498] ( move 0 , ul ; move 3 + ul , ua + ul ; move ul , ua - 4 )  
[11499] ( move 2 , ua ; move ua - 4 , ul ; move 2 + ul , ua + ul )  
[11500] ( move 0 - ua , ua ; move ua + ul , ul ; move ua / 2 , 4 )  
[11501] ( v0 = ua - ul ; move 3 , 0 ; move v0 + v0 , v0 )  
[11502] ( ( move 0 - 4 , ua ; v0 = 3 ; move 2 , 2 ) ; pen ua )  
[11503] ( move 3 , 3 ; move ul - ua , ul + ul ; move 0 , ul - ua )  
[11504] ( move ul , ua * ua ; move ua , 3 + 2 ; move 2 , ua * ua )  
[11505] ( move 0 , ul ; move ul - ua , 4 / ua ; move 0 - ua , ul )  
[11506] ( move ua , 4 * 4 ; ( move 4 , ul - ua ; pen ua + ul ) )  
[11507] ( move 0 , 3 - ua ; move ul + ul , 4 ; move ua , ul - ua )  
[11508] ( move ua - 2 , ul + ul ; move 0 , ul ; move ua , ul / 2 )  
[11509] ( ( move 4 , ul ; pen 0 ; move 2 , 3 ) ; move 2 + ul , 4 )  
[11510] ( move ua , 4 + ul ; move 2 - ua , ul - 2 ; move ua , ul )  
[11511] ( move 3 , 3 ; ( move 0 , ul ; pen 0 ; move 4 , 4 / ua ) )  
[11512] ( move 0 , ul / ua ; move ua , ul ; move 3 + ul , 3 + ul )  
[11513] ( move ua + ul , ul ; move ua + ul , 3 ; move ul / 3 , 0 )  
[11514] ( move 0 , 3 / ua ; move 3 - ul , ul - ua ; move ua , ua )  
[11515] ( move 0 - ua , ul ; move ua / 4 , ua ; move 2 + ul , ul )  
[11516] ( move 2 + ul , 3 ; move ul , 3 + ul ; move ua , ua * ua )  
[11517] ( move ul , 0 ; move ua + 2 , ua - ul ; move ul / 3 , ul )  
[11518] ( move ua - 3 , ua + ul ; move ul , 3 ; move 2 , ul - ua )  
[11519] ( move ul , 2 + ul ; move ua + ul , ul + ul ; move 4 , 2 )  
[11520] ( move 2 , ua ; move ul , ua + ul ; move 4 + 3 , ua * ua )  
[11521] ( move 2 - ua , 3 + ul ; move ul - ua , ul ; move 3 , ua )  
[11522] ( move ua + ul , ua ; move 2 - ua , ul ; move 3 , ua - 4 )  
[11523] ( move ua , ua ; move ul + ul , 0 ; move ul / 2 , 4 + ul )  
[11524] ( move 2 - ua , ul ; move ul , 2 - ul ; move 2 , ul + ul )  
[11525] ( move ul - 2 , ua - 3 ; move ua , 3 ; move ul , ua + ul )  
[11526] ( move ul - 4 , 0 ; move ua - ul , 3 ; move ul , ua + ul )  
[11527] ( move ul , ul ; move 3 + 2 , 2 + ul ; move ul , ua * ua )  
[11528] ( move 0 - ul , 3 / ua ; move ua , ul ; move ua , ua - 3 )  
[11529] ( move 4 , 3 ; pen 4 ; ( move 4 , 2 ; move 0 - ua , ua ) )  
[11530] ( move ul , ul + ul ; move 3 , 2 - ul ; move ua + ul , 2 )  
[11531] ( move 0 , ul ; v0 = ua + 3 ; move v0 , v0 * v0 )  
[11532] ( move ua , 2 ; move ua - 3 , 3 ; move ua - ul , ul + ul )  
[11533] ( move ul , ua - ul ; move ul + ul , 4 ; move ua , 0 - 3 )  
[11534] ( move ul , ua - ul ; move ua - 3 , ua - 2 ; move ua , 4 )  
[11535] ( move ul + ul , ul ; move 3 - ul , ua * ua ; move 4 , 0 )  
[11536] ( move 3 , ua * ua ; move 2 - ul , ua - ul ; move 3 , ua )  
[11537] ( move ul , ua + ua ; move ua , ua ; move 2 + ul , 4 / 3 )  
[11538] ( move ua - 3 , ul ; v0 = 2 ; move v0 , v0 + v0 )  
[11539] ( pen ua ; move 4 , 0 ; ( move 4 , 2 / ua ; move 3 , 3 ) )  
[11540] ( move 3 + ul , 3 ; move ul , 0 - ul ; move ul / ua , ua )  
[11541] ( move ua + ul , ua - 4 ; move 3 / ua , 0 ; move ul , ul )  
[11542] ( v0 = ul ; move ua , v0 + v0 ; move 2 , v0 + 4 )  
[11543] ( move ua , ua * ua ; move 2 , 4 ; move ul / 2 , ua + ua )  
[11544] ( move ua + ul , 0 ; move ul , 3 / ua ; move ua , 4 - ul )  
[11545] ( v0 = ua - 2 ; move 3 , ua - v0 ; move v0 , v0 )  
[11546] ( move ul , ua ; move ul , ul - 2 ; move ua - 3 , ua + 4 )  
[11547] ( move ua , 0 ; move ul , ul - 3 ; move ul - ua , ua * 4 )  
[11548] ( move 2 + ul , ul ; move ul , ua / 2 ; move ua + ul , 3 )  
[11549] ( move ul , ul - 4 ; move 0 - 4 , ul ; move ua + ul , ua )  
[11550] ( v0 = 4 ; move 2 - ua , v0 ; move ua , v0 + v0 )  
[11551] ( v0 = ua ; move ua , v0 * v0 ; move v0 - 2 , 2 )  
[11552] ( move ul , 3 ; move ua + ul , ul - ua ; move ul - 3 , 2 )  
[11553] ( move ua + 2 , ua ; move 3 , ua * ua ; move ul , ul / 2 )  
[11554] ( move ua / 2 , ua - 3 ; move ul , ua + ul ; move 2 , ul )  
[11555] ( move 3 , ua + 3 ; move ua + 2 , ul ; move ul / ua , ul )  
[11556] ( move 3 , ua ; move ua - ul , 3 - ul ; move ua - ul , 2 )  
[11557] ( move ul , ua - 4 ; move 2 , ul - 3 ; move ul , ua + ua )  
[11558] ( move ua + ul , ua / 3 ; move ul , ul ; move 3 , ua + 2 )  
[11559] ( move ul , ul ; move 0 , 4 / ua ; move ua + 4 , ua + ul )  
[11560] ( move ua , ua ; move 3 - ua , ua / 3 ; move ul , ua + 3 )  
[11561] ( move ua / 3 , ua ; move 4 + ul , ua ; move ua + ul , 2 )  
[11562] ( move ua , ua + 4 ; move 4 , ul + ul ; move ua , 2 - ul )  
[11563] ( move 0 , 4 ; ( pen 3 ; move 4 , 4 ; move 2 , ul + ul ) )  
[11564] ( move ua - ul , ul ; move ua , 3 ; move 2 + ul , ua - 4 )  
[11565] ( move ul , ua ; move 0 - ul , ul ; move 3 + ul , ul - 4 )  
[11566] ( move ul , 3 ; pen 2 * 2 ; ( move 3 , 4 ; move ua , 2 ) )  
[11567] ( move ul - 2 , ul ; move ua - ul , 3 ; move ua + ul , 3 )  
[11568] ( move ul , ua ; move 2 / 4 , 2 - ul ; move ua , ua + ul )  
[11569] ( move 2 , ul ; move ul - 3 , ul - 3 ; move ua , ua - ul )  
[11570] ( move ul , ul ; move ul - 4 , ua + ul ; move 3 - ua , 2 )  
[11571] ( v0 = 4 ; move ua - 2 , v0 ; move v0 , ua - v0 )  
[11572] ( move ua , ua ; move 3 / 2 , 0 ; ( pen 4 ; move 4 , 4 ) )  
[11573] ( move ua + ul , 4 / ua ; move ul - 2 , ua ; move ul , 2 )  
[11574] ( move 4 - ua , ul ; move 3 , ua ; move 3 - ua , ua - ul )  
[11575] ( move ua , ul ; move ul - ua , ul / 2 ; move 2 , ua + 4 )  
[11576] ( v0 = ua + 2 ; move 4 , v0 * v0 ; move ua , v0 )  
[11577] ( ( move ua , 0 - 2 ; pen 0 ; pen 0 ) ; move 4 , 3 + ul )  
[11578] ( move 3 , 2 ; move ua , 3 / ua ; move ul - ua , ua - ul )  
[11579] ( v0 = ua - 4 ; move ua - v0 , v0 ; move 2 , v0 )  
[11580] ( move ua + ul , ul ; move 4 + ul , 4 ; move 3 + ul , ua )  
[11581] ( move 2 , ua * 4 ; move ul , ua + ul ; move 4 , ua + ul )  
[11582] ( v0 = 4 - ua ; move 2 - v0 , v0 ; move ua , v0 )  
[11583] ( move 2 , ul ; move 2 - ul , 4 + ul ; move ul , ul + ul )  
[11584] ( ( move 4 , 0 ; pen 3 ) ; move ul , 4 + 3 ; move ul , 4 )  
[11585] ( move ul , ua * 3 ; move 2 - ua , ul - 3 ; move ul , ua )  
[11586] ( move ua - 3 , ul / 2 ; move ul , ua ; move 2 , ul + ul )  
[11587] ( move ul , 3 + ul ; move ua , ul ; move ul + ul , 4 + 3 )  
[11588] ( move 0 - ul , ul + ul ; move 3 , ul ; move 4 - ul , ul )  
[11589] ( move ua - 4 , 2 ; move ul - 3 , ul ; move ua + ul , ul )  
[11590] ( move 0 - ul , ul ; move 2 / ua , ua ; move ua , 4 / ua )  
[11591] ( move ua + ul , 2 ; move ul , 4 - ul ; move 4 , ua + ul )  
[11592] ( move ul + ul , ua ; move ul , 4 + ul ; move 3 , 4 + ul )  
[11593] ( move ua , 4 ; v0 = ua - 2 ; move v0 , v0 * v0 )  
[11594] ( move ul , ua * ua ; move ua , 4 * 2 ; move 2 - ul , ul )  
[11595] ( move 3 + ul , 4 + ul ; move 4 , ua - ul ; move ul , ua )  
[11596] ( v0 = ua + 4 ; move v0 - ul , v0 ; move 3 , v0 )  
[11597] ( move ul , ua + ul ; move ua , 4 - 2 ; move ul , ua / 3 )  
[11598] ( ( move 2 , 2 ; pen ul ) ; move 3 , 4 * 2 ; v0 = ua )  
[11599] ( move ua + ul , 3 ; move ul / 3 , ul + ul ; move ul , 2 )  
[11600] ( move 4 - 2 , ua ; move ul , ua / 3 ; move ul , ua + ul )  
[11601] ( move ua - 4 , ua * 2 ; move ul , 4 + ul ; move ua , ul )  
[11602] ( v0 = 3 ; move 3 , v0 * v0 ; move v0 , ua + ul )  
[11603] ( move ua - ul , ul ; move 0 , ua + ul ; move 4 , ul / 4 )  
[11604] ( move ul , 4 + ul ; move 2 - 4 , ul ; move ua , ua - ul )  
[11605] ( move ua , ua / 4 ; move ul , 4 + ul ; move ua , ua + 3 )  
[11606] ( move ul - 3 , ul ; move ua , 4 ; move 2 / ua , ua + ul )  
[11607] ( move 2 + ul , ua - 4 ; move ul , ul ; move 4 + ul , ul )  
[11608] ( move 4 + 4 , ua * ua ; move 2 , ul ; move ul , ul + ul )  
[11609] ( move ua , 4 + ul ; move ua - 4 , ul + ul ; move 3 , ul )  
[11610] ( move ul , ua ; move 3 , 2 / ua ; move 4 - ua , ul - ua )  
[11611] ( move ul , ua - ul ; move ua + 4 , ua * ua ; v0 = 2 )  
[11612] ( move ul , 4 + ul ; move ul , ul ; move ul + ul , 4 + 2 )  
[11613] ( move ul , 2 ; v0 = 3 ; move v0 + v0 , v0 / ua )  
[11614] ( v0 = ul / 3 ; move 2 , v0 ; move v0 + ua , v0 )  
[11615] ( move 3 , ul + ul ; move ua - 4 , ul ; move ul , ua + 4 )  
[11616] ( v0 = 2 ; move 4 , v0 ; move v0 - ua , ul - v0 )  
[11617] ( move 3 , ul ; ( pen 3 ; move ua , 3 / 4 ; move 2 , 2 ) )  
[11618] ( move ul , ua / 4 ; move 3 - ua , ua ; move 3 , ua + ul )  
[11619] ( v0 = 4 ; move v0 - ua , v0 ; move 3 - ua , v0 )  
[11620] ( move 2 - ul , ul ; move 3 , ul - ua ; move ul , 4 + ul )  
[11621] ( move 4 - ua , ul - 3 ; move 3 - ul , ul ; move ua , ua )  
[11622] ( ( move 0 , ul ; move ul - 2 , ul ) ; move ua , ul + ul )  | ( ( move 0 - ul , 2 ; move ua , 2 ; pen 4 ) ; move 0 , ul )  
[11623] ( move ua , ua * 2 ; move 4 + ul , ul ; move 3 - ul , ul )  
[11624] ( ( move 4 , ua ; move ul , 3 * 3 ) ; move 4 , 0 ; pen 4 )  
[11625] ( ( move ua , ua ; move ul , ua + 2 ) ; move 3 , ua - ul )  
[11626] ( move 2 - ua , ua - 3 ; move ul , ua * ua ; v0 = ul )  
[11627] ( move ua , 3 - ul ; move 4 + ul , ul + ul ; move ua , 4 )  
[11628] ( v0 = ul / 3 ; move v0 , v0 ; move ua , v0 + 3 )  
[11629] ( v0 = ua - ul ; move v0 , 3 / v0 ; move 2 , v0 )  
[11630] ( v0 = 3 ; move ul , v0 * v0 ; move ua , v0 * 2 )  
[11631] ( v0 = ua + ul ; move v0 , v0 * v0 ; move 4 , 3 )  
[11632] ( move 4 + 3 , ua ; v0 = ul + ul ; move ul - ua , ul )  
[11633] ( v0 = ua + ul ; move v0 , 2 ; move v0 / 4 , v0 )  
[11634] ( move ul , ua + ul ; move 3 - ua , 4 / ua ; move ua , 4 )  
[11635] ( move ul , ua * ua ; move ul , 3 ; move 3 + ul , ua / 3 )  
[11636] ( move ul , ua - 4 ; move ul , 3 - ul ; move ua , 4 - ua )  
[11637] ( ( move ua , 4 ; pen 3 ) ; move 2 , 3 - ul ; move 4 , 4 )  
[11638] ( move ua - 2 , ua * 2 ; move ul , ua / 4 ; move ul , ul )  
[11639] ( v0 = ul - 4 ; move v0 , ul - v0 ; move v0 , 2 )  
[11640] ( move ua - ul , ul - 4 ; move 2 , ul ; move ua / 2 , ul )  
[11641] ( move 4 , ua - 3 ; move ua , ul - ua ; move 3 / ua , ul )  
[11642] ( move ua , 2 / 3 ; move ul / ua , ua + ul ; move 3 , ul )  
[11643] ( ( move ul - ua , ua ; move ul , ul + ul ) ; move 2 , 2 )  
[11644] ( ( move ua , ua - ul ; move ua , 3 ) ; move 2 + ul , ul )  
[11645] ( move ua , ul - ua ; ( move ul , 2 + ul ; move 2 , ul ) )  
[11646] ( move ul , ul ; move 3 / ua , ua - 3 ; move ua , 4 + ul )  
[11647] ( move ul - 2 , ul ; move 4 , ul + ul ; move ul , ua - 4 )  
[11648] ( move 4 , ua ; v0 = ul - 4 ; move v0 , v0 + v0 )  
[11649] ( ( move 4 , 0 ; move 4 , 4 ) ; pen ul ; move 3 , ul / 2 )  
[11650] ( move ul + ul , ua ; move ua , ul - 3 ; move 2 , ul / 4 )  
[11651] ( move ua , 4 ; move ul , ul / ua ; move 4 + 2 , ua * ua )  
[11652] ( move 2 , ul + ul ; move ua , ul ; move 2 - ul , ul / 4 )  
[11653] ( ( move ua , ua ; move ul , ua * ua ) ; move ua , 3 - 2 )  
[11654] ( move ua / 4 , ul ; move 2 - ua , ua ; move 4 , ua - ul )  
[11655] ( move 3 , 3 + ul ; move ul , ua - ul ; move ul / 3 , ua )  
[11656] ( move ul , ul + ul ; move 3 , ua - 4 ; move ul / 2 , ua )  
[11657] ( v0 = 4 ; move v0 - ua , v0 ; move v0 , 3 - ul )  
[11658] ( ( move ua , ua + 2 ; move ul , ul + ul ) ; move 3 , ul )  
[11659] ( ( move ul , ua ; move ua + 4 , 0 - ul ) ; move ul , ul )  
[11660] ( move ua + ul , ua + ul ; move 4 / 2 , 4 ; move ul , ul )  
[11661] ( ( move ua + ul , ul ; move ul + ul , 2 ) ; move 2 , ul )  
[11662] ( move ul , 2 ; ( move ul + ul , ul + ul ; move ua , 2 ) )  
[11663] ( ( move ua , ua ; move 4 + ul , ul ) ; move ua - 2 , ul )  
[11664] ( move ua + ul , 4 * 2 ; move ul / ua , ul ; move 3 , ul )  
[11665] ( ( move ul , 4 ; pen 2 ) ; move 3 , 4 ; move 4 , 4 + ul )  
[11666] ( ( move ua , ua + ul ; move ua , 4 ) ; move ul , ul - 2 )  
[11667] ( move ul , ua ; ( move 2 , ua - ul ; move ua , 2 / ua ) )  
[11668] ( move 4 + ul , ul ; move ul , ul - 3 ; move ul - ua , 4 )  
[11669] ( v0 = 4 ; move v0 , v0 * v0 ; move ua , ua - 4 )  
[11670] ( move 4 , ua ; ( move ul , 0 - ul ; move ul , ul + ul ) )  
[11671] ( ( move 0 - ul , ul ; move ua - ul , ul ) ; move 4 , ua )  
[11672] ( move ua / 2 , ua + 2 ; v0 = 0 - 4 ; move ua , v0 )  
[11673] ( move ua , ul ; ( move ul , 4 + ul ; move 2 , ua + ul ) )  
[11674] ( ( move ul , ua ; move 4 , ul ; move 0 , 0 ) ; move 2 , 2 )  
[11675] ( move ua , 3 ; ( move ul - 4 , ua ; move ua , ua + ul ) )  
[11676] ( move ul , ul / ua ; move 3 + ul , ul ; move 2 - ul , 4 )  
[11677] ( ( move 3 + ul , ua ; move 2 - ul , ul ) ; move ua , ul )  
[11678] ( move ul - ua , 2 ; ( move 4 , ua - ul ; move ua , ua ) )  
[11679] ( move ul , ul ; move ul / 2 , 2 ; move ua + ul , 4 / ua )  
[11680] ( move ua , 3 / 4 ; v0 = ul ; move v0 + v0 , v0 )  
[11681] ( move ul - ua , 2 ; ( move ul , ul ; move ua , ua + 4 ) )  
[11682] ( move 3 , ua * 3 ; move ul - ua , 4 / ua ; move ua , ul )  
[11683] ( move ul - 3 , ul / ua ; move 4 , ua ; move 3 , ua - ul )  
[11684] ( move ua , ul ; move ul / 2 , 4 / ua ; move ua - ul , 2 )  
[11685] ( move 2 / ua , ua * 4 ; move ul , 4 + ul ; move ua , ul )  
[11686] ( move ua - ul , ul / ua ; ( move ul , 3 ; move ua , 0 ) )  
[11687] ( move ua , 4 / ua ; move ul / ua , ul ; move 2 + ul , 4 )  
[11688] ( move ul - 3 , ul ; ( move ul , ua - 2 ; move ul , ua ) )  
[11689] ( v0 = 3 ; move v0 , ua / 4 ; move v0 , ul - v0 )  
[11690] ( move ul , ul / 4 ; move 3 + 3 , ul ; move ul , ua - ul )  
[11691] ( move 4 - ua , ul ; move ul , ua * ua ; move 3 , ua / 4 )  
[11692] ( move ul + ul , ua + 4 ; v0 = 2 ; move v0 , 0 - 4 )  | ( move ul , 4 ; ( move ul , 0 ; pen ua ) ; move 2 , ua - 4 )  
[11693] ( ( move ua , ua ; move ua , 4 ) ; move ul - 4 , ua + ul )  
[11694] ( move ua + ul , 4 * 4 ; move ul , ua + ul ; v0 = ul )  
[11695] ( move 2 / 4 , ul ; move ua - 3 , ul / ua ; move ua , ul )  
[11696] ( v0 = 4 - ua ; move v0 * v0 , ul ; move v0 , 4 )  
[11697] ( v0 = 4 / ua ; move ul , v0 ; move 4 , v0 + v0 )  
[11698] ( move ul , 4 / ua ; move ua , 3 ; move ul / 3 , ua + ul )  
[11699] ( move 4 , ua ; ( move 0 , 0 ; move ul , 2 ) ; move 3 , ul )  
[11700] ( ( move 3 , 0 ; ( pen 0 ; move ua , 0 - ul ) ) ; pen 2 )  
[11701] ( move 3 - ul , ul ; move ul / 2 , 4 ; move ua - ul , ul )  
[11702] ( move 3 - ua , ua ; ( move ul , ul ; move ul , 3 + ul ) )  
[11703] ( move ul / ua , 4 - ua ; move ul , ul ; move 3 , 4 + ul )  
[11704] ( move ul , 4 + ul ; move 4 - ul , ul ; move ul , 4 - ua )  
[11705] ( move ul / ua , 4 / ua ; move ua - 3 , 3 ; move ua , ul )  
[11706] ( move ul , ul - 3 ; move ul + ul , ua ; move 4 , ul / 3 )  
[11707] ( move ua , 0 ; ( move 0 , 4 ; move 3 , ul ) ; move ul , 2 )  
[11708] ( move ua , ua + ul ; ( move ul , 4 ; move ua , 4 - ua ) )  
[11709] ( v0 = ul - 4 ; move 3 , v0 / ua ; move v0 , v0 )  
[11710] ( v0 = 3 / ua ; move ua + ul , 2 * v0 ; move 3 , 0 )  
[11711] ( move ul , ua / 4 ; move ul , ua / 3 ; move ua , 2 / ua )  
[11712] ( move ul , ua / 4 ; v0 = 3 ; move v0 * v0 , v0 )  
[11713] ( v0 = ul ; move v0 - 4 , v0 ; move ul , v0 / 3 )  
[11714] ( move 4 , ua ; move ua / 4 , ul / ua ; move ua , 4 - ua )  
[11715] ( move 2 , ul ; move ul / 4 , ul + ul ; move ua , 4 / ua )  
[11716] ( move ua , ul ; move 4 / ua , 3 / ua ; move ua , ul - 4 )  
[11717] ( ( move ul + ul , ul ; move ul , ua + 4 ) ; move 3 , ul )  
[11718] ( ( move ul , 2 ; move 0 , ul ; move 3 , ua ) ; move 2 , 3 )  
[11719] ( pen 2 ; ( move 4 , ul ; ( move 2 , 4 ; move ua , 4 ) ) )  
[11720] ( move ul , ul / ua ; move 4 , 4 * 3 ; move ul , ua + ul )  
[11721] ( move ul , ua ; move ua - 4 , ul / 4 ; move ul , ul - 3 )  
[11722] ( move ua , ua ; ( move ul , ua - ul ; move 4 , 4 - ua ) )  
[11723] ( ( move 3 , 2 ; move ua , 4 ; move ul , ua ) ; move 0 , 2 )  
[11724] ( move ul , ul + ul ; ( move ua , 4 + ul ; move 3 , ul ) )  
[11725] ( ( move ua , ua ; move ul / ua , ua ) ; move ua , 3 / 2 )  
[11726] ( move 3 , ul / 4 ; move 4 - ua , ul ; move ul , ul - ua )  
[11727] ( ( move ua , 2 ; move ul + ul , ul / 2 ) ; move ul , ul )  
[11728] ( move ul + ul , ua ; ( move 2 , ul ; move ul / 2 , ul ) )  
[11729] ( pen ua ; move 3 + ul , ua + ul ; move ua - 2 , 2 + ul )  
[11730] ( move ua - ul , 4 / ua ; move ul , ul ; move 3 / 2 , ul )  
[11731] ( ( move ua - 3 , ua - ul ; move ul , ul ) ; move 3 , ul )  
[11732] ( move 3 , ua ; ( move ul , ul ; move ul / 3 , ua + ul ) )  
[11733] ( v0 = 4 / 3 ; move ua , v0 ; move ul / v0 , v0 )  
[11734] ( move ul , ul ; move 2 / 4 , ul / ua ; move 4 , ul + ul )  
[11735] ( ( move 4 , ul + ul ; move ul , ul + ul ) ; move 3 , ul )  
[11736] ( ( pen 4 ; move 2 , ul ; pen 0 ) ; move ua - 2 , 4 + 3 )  
[11737] ( move ul / 4 , ul ; move ul - ua , ua - 4 ; v0 = ua )  
[11738] ( ( move ul , ul ; move ul - ua , ul ) ; move 4 + 3 , ul )  
[11739] ( move 4 , ul ; ( move ul , ua / 3 ; move ua , ua + ul ) )  
[11740] ( ( move ul , ua ; v0 = 3 ) ; move v0 , v0 * v0 )  | ( move ul , ua ; v0 = 2 + ul ; move v0 , v0 * v0 )  
[11741] ( v0 = ua / 4 ; move v0 * v0 , ul ; move v0 , 4 )  
[11742] ( move ul / 3 , ul / 3 ; v0 = ul + ul ; move ua , ul )  
[11743] ( ( move ul , ul ; move ul , 3 / ua ) ; move 3 , ua * ua )  
[11744] ( ( move ul , 4 / ua ; move ul , ul ) ; move ua , 2 - ul )  
[11745] ( move ua , ua / 3 ; ( move 4 , ul ; move ul , ul + ul ) )  
[11746] ( pen 2 ; ( move 3 , ul ; move 3 + 2 , 4 + 4 ) ; pen ua )  
[11747] ( move ul , 4 * 4 ; ( move ul , ul ; move ua , ua * ua ) )  
[11748] ( ( move 4 , 3 ; move ul , 2 ) ; move ul , 3 ; move ul , 0 )  
[11749] ( move 3 , 3 ; ( move ul , 0 ; move ul , 2 ) ; move ul , 4 )  
[11750] ( ( move ul , 0 ; pen ul - ua ) ; move ua + ul , 0 - ul )  | ( ( move ul , ua ; pen 0 ; pen 0 ) ; move ua + ul , ua - ul )  
[11751] ( pen ua + ua ; move 4 + ul , ul / ua ; move 2 + 2 , ul )  
[11752] ( ( pen 0 ; move ul , 2 - 4 ; pen 4 * 2 ) ; move 3 , ua )  
[11753] ( move ul , 2 ; ( move ul , ul ; move 2 , 0 ; move 4 , 4 ) )  
[11754] ( move 2 / 4 , ua * 2 ; v0 = ua ; move v0 , 4 + ul )  
[11755] ( move ua , 4 ; move 3 , ul ; ( move ua , 3 ; move 3 , 2 ) )  
[11756] ( move 2 - ul , ua - ul ; move 3 , ua * ua ; pen 3 - ua )  
[11757] ( move ul - ua , 3 - ul ; move 2 , ua - 4 ; pen ua + ul )  
[11758] ( move 3 , ul - 3 ; pen ua - ul ; move ul - ua , ua - 2 )  
[11759] ( ( move ul , ua * 4 ; move ul , ua ) ; move 4 , ul / ua )  
[11760] ( move 2 , 3 ; move 4 , ul ; ( move 3 , 2 ; move ul , ua ) )  
[11761] ( ( move ul , ul ; move ul - ua , 3 / ua ) ; v0 = ul )  
[11762] ( ( move 2 , 3 + ul ; v0 = ul ) ; move 2 - ua , v0 )  
[11763] ( ( move ul , ul ; move ul / 4 , 4 ) ; move ul - ua , ua )  
[11764] ( ( move 0 , 2 ; pen 0 ; move ua , 3 + ul ) ; move ul , 0 )  
[11765] ( move ua , 4 + ul ; move ua - ul , ua - 3 ; pen ua + 4 )  
[11766] ( ( move ul , ul ; v0 = 3 / 2 ) ; move 0 - ua , v0 )  
[11767] ( move 2 - ua , 4 / ua ; v0 = 4 + ul ; move 4 , v0 )  
[11768] ( move 4 + ul , 4 / ua ; v0 = 4 + ul ; move 2 , v0 )  
[11769] ( ( move ul , 4 ; move 0 , 4 ; move ul , ul ) ; move 3 , 3 )  
[11770] ( move ul + ul , 0 ; pen ul + ul ; move ua / 2 , ua / 4 )  
[11771] ( ( move 2 , 0 - ul ; move 3 , 0 ; pen 0 ) ; move ua , ul )  
[11772] ( ( move 2 , ua ; pen 0 ; move ul , 4 ) ; move ua + 2 , 0 )  
[11773] ( move ul , ua * ua ; pen ua - 4 ; move 2 - ua , 4 - ul )  
[11774] ( move ul , ua ; move 3 , 4 ; ( move 3 , 3 ; move ua , 4 ) )  
[11775] ( move 4 , 4 * 3 ; v0 = 4 + ul ; move v0 , ul + ul )  
[11776] ( move 3 , 4 ; ( move 2 , ul ; move ua , 3 ; v0 = ua ) )  
[11777] ( ( move 2 , 2 ; move 2 , ul ; move 4 , ul ) ; v0 = ul )  
[11778] ( move 3 , 4 * 4 ; v0 = ul - ua ; move 4 , ua * v0 )  
[11779] ( move 3 - ua , 4 * 2 ; pen ua ; move ul + ul , ul / ua )  
[11780] ( ( move 2 , 3 ; move ul , ua ; pen 0 ) ; move ua + 2 , 2 )  
[11781] ( ( move ua + ul , 4 ; pen ua ) ; move 2 - ua , ua - ul )  
[11782] ( move ua / 4 , ul + ul ; pen 4 + ul ; move 2 + ul , ul )  
[11783] ( move ua , ua - ul ; pen 2 / 3 ; move 3 + ul , ul / ua )  
[11784] ( move 3 , 0 ; pen 0 ; ( move ul - ua , 3 ; move 2 , ua ) )  
[11785] ( pen 0 ; ( pen ua ; ( move ul , 3 * 3 ; move 3 , 4 ) ) )  
[11786] ( ( move 0 , 4 ; move 2 , ua ) ; pen 0 ; move ul - ua , 3 )  
[11787] ( move ul , 0 ; ( pen 2 ; move 3 , ul ; move 3 - ua , 0 ) )  
[11788] ( move ua - ul , ua - ul ; move 2 / ua , ul / 4 ; pen 2 )  
[11789] ( ( move 3 , ua / 4 ; pen 3 ) ; move 4 , 4 ; pen 2 + ul )  
[11790] ( ( move 4 , ul - 2 ; v0 = 4 - ua ) ; move v0 , ul )  
[11791] ( pen 2 ; ( move 0 - ua , ua ; move 0 , ul ; move 3 , 4 ) )  
[11792] ( move ua , ul - 4 ; move 3 - ul , 3 / ua ; pen ul + ul )  
[11793] ( move 3 , 4 + ul ; ( move ua - ul , ua + ul ; pen ua ) )  
[11794] ( move ul , ua ; ( move 3 , ul ; pen 0 ) ; move 2 + 2 , 2 )  
[11795] ( move ua , ua / 4 ; move 4 + ul , ul + ul ; pen 3 - ul )  
[11796] ( move 3 , ua - ul ; ( pen ul / ua ; move ua , ua + 3 ) )  
[11797] ( move 2 , ua + ul ; ( pen 0 ; move 0 , ul ; move 4 , 4 ) )  
[11798] ( move ua , 0 ; ( pen ul ; move 4 , 2 ) ; move 2 + ul , 2 )  
[11799] ( pen ul + ul ; move ua / 3 , ul ; move 4 + ul , ul - 4 )  
[11800] ( ( pen 4 ; move 4 , 3 / 2 ; pen 3 + ul ) ; move 4 , ul )  
[11801] ( ( v0 = ul - ua ; move 3 , ua * v0 ) ; move 4 , 4 )  
[11802] ( move ul , 0 - ua ; ( pen 0 ; move 3 , 3 ; move 3 , ul ) )  
[11803] ( ( move 3 - ua , 2 / ua ; pen ua ) ; move ul , ul + ul )  
[11804] ( move 2 , 4 ; ( pen 0 ; move 2 , ua * ua ) ; move 2 , ua )  
[11805] ( ( move 3 , 4 ; pen 0 ; move ua , ul ) ; move 0 , ua + 4 )  
[11806] ( move ul , 3 * 3 ; ( move ua + ul , ul ; pen ua + ul ) )  
[11807] ( ( pen ul ; move 4 + 4 , ua ) ; move 4 , 4 / 3 ; pen 2 )  
[11808] ( move ua , 2 ; ( move 4 - ua , 2 ; move 0 , ua ) ; pen 4 )  
[11809] ( move 4 , 0 - ul ; ( move 2 , 4 ; move ua , ul ) ; pen 0 )  
[11810] ( ( move ul , 4 + ul ; pen 0 ; move ua , 2 ) ; v0 = 0 )  
[11811] ( move ul , ul - ua ; pen 0 ; ( move 2 , 0 ; move 4 , 4 ) )  
[11812] ( v0 = ul ; ( move 3 , ul / 2 ; move ul , 3 / v0 ) )  
[11813] ( move ua , 2 ; ( pen ul - 4 ; move ul , 2 ) ; move 3 , 0 )  
[11814] ( move ul , ul - ua ; move 0 - ul , ul ; move ua + ul , 2 )  
[11815] ( pen ua ; ( move ul - ua , ul / 4 ; move ua , ul - 2 ) )  
[11816] ( move ua , ua ; move ul + ul , ul ; move 2 + ul , ua + 3 )  
[11817] ( ( move ul - ua , ul / ua ; move 3 , ul + ul ) ; pen 3 )  
[11818] ( ( move 3 * 2 , ul ; pen 0 ; move 0 , ul ) ; move 4 , ul )  
[11819] ( move 2 , ua + ua ; move ul , ua * ua ; move ua , 3 + ul )  
[11820] ( move ua + 2 , 4 + ul ; move ul - ua , ua ; move ua , ul )  
[11821] ( move ua + ul , ul / ua ; move ul , 3 + ul ; move ua , 0 )  
[11822] ( ( move 4 , 4 ; move 0 - ul , ul ; pen ul ) ; move 3 , 0 )  
[11823] ( move ul , 3 ; ( move 2 , 3 ; move ua + 3 , ul ; pen 2 ) )  
[11824] ( move 3 + ul , ul + ul ; move ul , ua + 2 ; move ua , ul )  
[11825] ( move ua , ua - ul ; move 2 , ul ; move 3 + ul , ua + ul )  
[11826] ( move ul , ua ; ( move 2 , 4 ; pen 0 ) ; move ua , 3 - 4 )  
[11827] ( move 4 , ua / 3 ; ( v0 = 0 ; pen 0 ) ; move ua , ua )  
[11828] ( ( move ul , 2 ; pen 0 ) ; ( move 3 , 0 ; move ua , ul ) )  
[11829] ( move 4 - ua , ua ; move 2 , ul + ul ; move ua + ul , ua )  
[11830] ( move 3 , 2 / ua ; pen 0 ; ( move ul , 2 ; move 3 , ul ) )  
[11831] ( move ua , ul ; ( pen 3 - ul ; move ul - ua , ua / 4 ) )  
[11832] ( pen ul ; ( move 0 , 4 ; move ua , ua + 3 ) ; move 4 , 3 )  
[11833] ( move 3 - ul , ua - ul ; move ua , ua ; move ua , 2 + ul )  
[11834] ( pen ul ; ( move 2 + ul , 2 ; move 3 , ul ) ; move 3 , 2 )  
[11835] ( move ua - 3 , 0 - ul ; move ul , ua * ua ; move ua , ul )  
[11836] ( move ua , 0 ; move ul / ua , ul + ul ; move ul , ua + 3 )  
[11837] ( move ua , 2 ; move 2 - ul , 3 ; ( pen 3 ; move 3 , ul ) )  
[11838] ( move 2 , 2 ; pen 0 ; ( move 4 - ua , ul ; v0 = ul ) )  
[11839] ( ( move ul - ua , ul - ua ; move 3 / 4 , ul ) ; pen ul )  
[11840] ( move ua - ul , 3 - ua ; move ua , ul - 2 ; move ul , ua )  
[11841] ( move ul , 4 / ua ; move 0 , ul ; move ua + ul , ua + ul )  
[11842] ( ( move 3 , ul ; move ua - 3 , 3 ) ; pen 0 ; move ul , 4 )  
[11843] ( move 2 , ua + ua ; move ul , ua / 2 ; move ua - ul , ul )  
[11844] ( move ul , 3 / 4 ; ( move 3 , ul ; pen 0 ; move ul , 0 ) )  
[11845] ( move ul , ua + 3 ; move 3 , ul ; move ua - ul , ua + ul )  
[11846] ( move ua , 3 - ua ; move ul + ul , ul ; move 2 , ul + ul )  
[11847] ( move ua , 2 ; move 4 , ua + ul ; move ul - ua , ua - ul )  
[11848] ( move 0 - ul , ua - ul ; move ua , 4 + ul ; move ul , ul )  
[11849] ( ( pen ul ; move 3 , 2 ) ; move 3 * 2 , ul ; move ua , 2 )  
[11850] ( move 2 , 2 ; ( pen ul ; move 3 - ua , 2 ; v0 = ua ) )  
[11851] ( ( move 3 , 0 ; move ul + ul , 4 ; move 3 , ul ) ; pen 3 )  
[11852] ( move 0 - 4 , ul ; move ua , ua * ua ; move ul , ua * ua )  
[11853] ( move ul , ua ; move ul - ua , 4 ; move ul + ul , ua + 2 )  
[11854] ( move ul , ul ; move ua + 2 , ul ; move 3 / ua , ua + ul )  
[11855] ( move ul , ul - ua ; move ua , ua - ul ; move 2 + ul , 4 )  
[11856] ( move ua + ul , 4 + ul ; move ua - ul , ul ; move ul , 2 )  
[11857] ( move ua + ul , 4 * 2 ; move ul , ua + ul ; move ua , ul )  
[11858] ( move ua , ul + ul ; move ul + ul , ul - 3 ; move 2 , ul )  
[11859] ( move 3 , ul / 3 ; move 0 , ul ; ( move 2 , 4 ; pen ua ) )  
[11860] ( move ul , ua ; v0 = ua + 2 ; move v0 , v0 * v0 )  
[11861] ( move 4 , 4 ; ( move ul , 2 ; move ua - ul , 4 ) ; pen 0 )  
[11862] ( v0 = ua - ul ; move v0 , 3 ; move ua , v0 + v0 )  
[11863] ( move ul , ul + ul ; move 4 , 2 ; move ul + ul , ua + ul )  
[11864] ( move ua , ul ; move 2 - ul , ua * ua ; move 3 + ul , ul )  
[11865] ( ( pen ul ; move 4 , 2 ; move ul , ua / 4 ) ; move 2 , 0 )  
[11866] ( ( move 3 , ua * 4 ; move 3 , ul ; move 3 , ul ) ; pen 0 )  
[11867] ( v0 = 2 - ua ; move ua - ul , v0 ; move v0 , v0 )  
[11868] ( move 3 , 2 ; ( pen ua + ul ; move 4 , 3 ) ; move ua , 4 )  
[11869] ( ( move ul + ul , ul ; pen ul ) ; move 4 - ua , ul / 4 )  
[11870] ( ( move ul , 2 ; pen ua ; move 3 + 3 , ul ) ; move 3 , 4 )  
[11871] ( move ua , 3 - ua ; move ua - 4 , ul ; move ua , ul + ul )  
[11872] ( ( move ul , 0 ; move ul , 3 - 4 ; move 2 , ul ) ; pen 4 )  
[11873] ( move ul , ul ; ( move 3 * 2 , 4 ; pen 2 ; move ua , 2 ) )  
[11874] ( move 2 , ua * ua ; v0 = ua ; move v0 , v0 * v0 )  
[11875] ( move ua , 3 ; move ul - ua , ul ; move ul - ua , 3 - ul )  
[11876] ( move 2 , ua - 3 ; move ul / ua , ul ; move ul - ua , ua )  
[11877] ( move ua + ul , ul / 4 ; move 0 , ul ; move ul + ul , ul )  
[11878] ( move ul + ul , ul - ua ; move ua , 4 * 2 ; move ul , ua )  
[11879] ( move ua - ul , 2 ; move ul , ul - ua ; move 4 + ul , ul )  
[11880] ( move ul / ua , ua ; move ua - ul , 3 ; move ul - ua , 2 )  
[11881] ( move 3 , 4 ; ( move ua , 2 ; pen 2 / 3 ; move ul , ua ) )  
[11882] ( ( move ul , ua ; move ul , ul ) ; move 0 - ua , ua + ul )  
[11883] ( move ul , ul ; move ua - ul , 4 + ul ; move 3 , ua + ul )  
[11884] ( move ul , ul ; move ul + ul , ul / 3 ; move 0 - ua , ul )  
[11885] ( move ul , ul ; move 3 - ua , ua - ul ; move 3 , ua - ul )  
[11886] ( move ua , ul ; v0 = ua - 4 ; move v0 + v0 , v0 )  
[11887] ( move ul - ua , 4 ; move ul + ul , ua + ul ; move 3 , ul )  
[11888] ( move ul , ua ; move ul , ua - ul ; move 4 + ul , 2 - ul )  
[11889] ( move ul , 2 ; ( move 4 , 4 + ul ; move 3 , 3 ) ; pen ul )  
[11890] ( move 4 - ul , ua ; move ul , ul / ua ; move ua + ul , 2 )  
[11891] ( v0 = 2 - ua ; move ul , ul ; move v0 , v0 * v0 )  
[11892] ( move 2 , ul / 3 ; ( move 3 , 2 ; pen ul ) ; move 4 , ua )  
[11893] ( pen 4 ; move ua , ua / 4 ; ( move ua , 2 ; move 3 , 3 ) )  
[11894] ( move ua + ul , ua * ua ; move ua , 3 ; move ua / 4 , ul )  
[11895] ( move ul , 3 ; v0 = ua + ul ; move v0 , v0 * v0 )  
[11896] ( v0 = 4 - ua ; move v0 , v0 ; move ul - ua , v0 )  
[11897] ( move ul , ua - ul ; move ua , 4 / ua ; move ul + ul , 2 )  
[11898] ( move 4 , ul ; v0 = ua - ul ; move v0 , v0 + v0 )  
[11899] ( move 2 , ua ; ( move 4 , 2 / 3 ; pen ua ) ; v0 = ua )  
[11900] ( move ua , 2 ; ( pen 2 - 4 ; move 4 , ul ; v0 = ua ) )  
[11901] ( v0 = ua - 4 ; move ul - v0 , v0 ; move ua , v0 )  
[11902] ( move ul + ul , ua ; move ul / 2 , ua ; move 4 , ua * ua )  
[11903] ( move ul - 2 , ul ; move ul - 4 , ul ; move ua , ul + ul )  
[11904] ( v0 = 3 + ul ; move v0 , ul ; move ua , v0 * v0 )  
[11905] ( ( move ua , ua ; move ul , 3 ) ; pen 3 ; move 3 , 4 * 3 )  
[11906] ( ( move 0 - ul , ua + ul ; move ua , ul ) ; move ul , ul )  
[11907] ( ( move 3 , ua - 3 ; pen ua ) ; move 3 , 4 ; v0 = ua )  
[11908] ( ( move 0 , ul ; move 4 , ua / 3 ) ; move ul , 3 ; pen 4 )  
[11909] ( move ul , ul ; move 2 - ul , ul / 2 ; move ul - ua , ua )  
[11910] ( move ul , ua * ua ; move 2 - 4 , ul + ul ; move ul , ul )  
[11911] ( move 4 + 3 , ul ; move ul - ua , ul ; move ul , ul - ua )  
[11912] ( move ul , 3 ; move ul - 4 , ua * ua ; move ua + ul , ul )  
[11913] ( move ul , 0 ; ( move ul , 3 / 4 ; pen ua ) ; move 4 , 3 )  
[11914] ( move ul , 4 / ua ; move ua + 2 , ua ; move ul , ul / ua )  
[11915] ( move ua / 3 , 4 ; move ul , ua * ua ; move ua - ul , ua )  
[11916] ( move ua + ul , ul / 2 ; move 4 , ul + ul ; move ul , ul )  
[11917] ( ( move 4 , 4 ; pen 3 ) ; move 2 + ul , ul ; move 4 , ul )  
[11918] ( v0 = 3 + ul ; move v0 , ul / v0 ; move ua , v0 )  
[11919] ( ( move 3 , 4 ; pen ua ) ; move 4 , 3 ; move ua , ul / 2 )  
[11920] ( v0 = 3 ; move ua - v0 , v0 * v0 ; move ul , ul )  
[11921] ( move ul / 3 , ul + ul ; move ul , ua ; move ua , 4 + ul )  
[11922] ( move ua , ua * ua ; ( move ul , 2 ; move ul , ua + ul ) )  
[11923] ( move ul , ul ; move ul - ua , ua / 4 ; move 2 , ua * ua )  
[11924] ( ( move 4 , ul / 3 ; move 3 , 2 ; pen ul ) ; move ua , 3 )  
[11925] ( v0 = 4 + ul ; move ua , ua / v0 ; move v0 , v0 )  
[11926] ( move 4 + ul , ul ; v0 = ua ; move v0 , v0 * v0 )  
[11927] ( move 4 + ul , ul ; move 3 - ul , ua - ul ; move ul , ul )  
[11928] ( move 2 , ul ; ( move ul , 4 ; pen 4 ) ; move 4 * 2 , ua )  
[11929] ( move ul - 4 , 3 + ul ; move ul , ul ; move ul , ua - ul )  
[11930] ( move 4 - ua , 3 - ul ; move ul , ul - ua ; move ul , ul )  
[11931] ( move 4 - ua , ul / ua ; move ul , ua + 3 ; move ul , ul )  
[11932] ( move ul - ua , ul - ua ; move ul , 4 * 4 ; move ul , ua )  
[11933] ( move ua , ul ; ( move 3 + ul , ul + ul ; move ua , ul ) )  
[11934] ( v0 = ul ; move ua - v0 , v0 / 4 ; move ua , v0 )  
[11935] ( ( move ul , ul ; move ua , 4 ; move 4 , 4 * 2 ) ; pen 3 )  
[11936] ( move ul , 2 / ua ; move ul / 3 , ul ; move ua , ul + ul )  
[11937] ( pen ua - ul ; ( move 4 , 3 ; move 3 , ul ; move 4 , 4 ) )  
[11938] ( move ul / ua , ul ; move ua - ul , 4 ; move 3 , ua * ua )  
[11939] ( ( move ua , 3 ; move ul - ua , ua ) ; move ul + ul , ul )  
[11940] ( move ul , ua ; move ul / 2 , ul + ul ; move ul - 4 , ul )  
[11941] ( move 4 , ua * 4 ; move ua - ul , ul + ul ; move ul , ul )  
[11942] ( move ul , ua - 4 ; move ul , ul - ua ; move ua , ua / 4 )  
[11943] ( ( move ul + ul , ua + ua ; move ul , 3 ) ; move ul , ul )  
[11944] ( move ul , ua ; move ua - ul , ul - 3 ; move ul , ul / 3 )  
[11945] ( ( move ul , ua ; move 4 + ul , ul ) ; move ul , ua + ul )  
[11946] ( ( move ul , 3 ; move ua + ul , ul ) ; move ul - ua , ul )  
[11947] ( move ua , ua ; ( move ul , ul + ul ; move ua , 4 - ul ) )  
[11948] ( move ul + ul , ul ; ( move ul , 3 ; move ua + ul , ul ) )  
[11949] ( move ul - ua , ua * ua ; ( move 3 , ul ; move ua , ul ) )  
[11950] ( move ul / 4 , 4 ; move ul + ul , ul ; move ua + ul , ul )  
[11951] ( move ua , ua - ul ; ( move ul - ua , ul ; move 4 , ua ) )  
[11952] ( v0 = ua / 4 ; move ua , v0 * v0 ; move ul , v0 )  
[11953] ( move 2 - ua , 3 ; v0 = ul ; move ua - 2 , ua - v0 )  
[11954] ( move ua - 2 , ua ; v0 = ua + 3 ; move 3 , ul - v0 )  
[11955] ( ( move ul , ua ; move ul , ua + ul ) ; move 4 , ul + ul )  
[11956] ( pen 4 ; move 3 , ul ; ( move ua , 4 * 4 ; move ua , 4 ) )  
[11957] ( move 2 , ul + ul ; ( move ul + ul , ul ; move ul , ul ) )  
[11958] ( move 3 , ul / 2 ; ( move ul , ul ; pen 3 ) ; move 4 , 4 )  
[11959] ( move 3 , ul ; ( move ul + ul , ua + ul ; move ul , ul ) )  
[11960] ( ( ( move ua , ul ; pen 4 ) ; move ul , 4 ) ; move 2 , 2 )  
[11961] ( ( move ul , ua - ul ; move ua , ul ) ; move 4 , ua - ul )  
[11962] ( move 0 , 0 ; move ua , 4 ; ( move ul , ul ; move 3 , ul ) )  
[11963] ( move 2 , ul ; ( ( pen 3 ; move ul , ul ) ; move 4 , 3 ) )  
[11964] ( move 2 , ua - ul ; v0 = ul ; move ua - 3 , v0 + 3 )  
[11965] ( move ua , ul + ul ; ( move ua , ua * ua ; v0 = ul ) )  
[11966] ( pen 2 ; ( move 2 , ua - 4 ; pen 0 ) ; move 4 + ul , ua )  
[11967] ( move 2 + 2 , ua - ul ; v0 = 4 ; move ul - v0 , ul )  
[11968] ( ( pen 4 ; move ul , ua ) ; ( move 4 , ul ; move 2 , 4 ) )  
[11969] ( ( pen 2 - 3 ; move 2 - ua , 0 ; pen ul ) ; move ul , 4 )  
[11970] ( move 0 , 2 ; ( move ul , ul ; move ua , 4 ; move ul , 2 ) )  | ( move ul , 3 ; pen ul ; ( move ua , 4 ; move ul , ul + ul ) )  
[11971] ( move ul - 4 , ua ; v0 = ul - 3 ; move ua + 2 , v0 )  
[11972] ( move ul , ua ; ( move ul , 3 ; move ul + ul , ul / ua ) )  
[11973] ( move 3 , 0 ; move 4 , 0 ; ( move ul , ul ; move ul , ul ) )  
[11974] ( ( move ua + ul , ul ; move ul , ul ) ; move ul , ul - 4 )  
[11975] ( ( move ul - ua , ua ; move ul / 3 , ua ) ; move ul , ul )  
[11976] ( move 4 , ul ; ( pen 4 * 4 ; move ua , 4 ) ; move 4 , ul )  
[11977] ( move ul , ua ; ( move 2 , ua ; move 3 , 2 ; move 2 , ul ) )  
[11978] ( ( move ul , ua ; move ul , ul ) ; move 0 , 2 ; move 2 , 4 )  
[11979] ( pen 4 ; ( move 3 , 0 - ul ; move ua , ua / 4 ) ; pen 0 )  
[11980] ( ( move 4 , ul ; move ua , 0 ; move ua , 4 ) ; move ul , 2 )  
[11981] ( ( pen 0 ; move 2 , ua ) ; ( pen ua + 3 ; move 3 , ua ) )  
[11982] ( move 3 - ul , ul ; ( move ua , ul ; move ul / ua , ul ) )  
[11983] ( move ua + 4 , 2 - ul ; v0 = 4 ; move ua - ul , v0 )  
[11984] ( move ul , ul ; move 2 , 0 ; ( move ua , 4 ; move 3 , ul ) )  
[11985] ( ( move ul , 4 ; move ul , 4 ; move 0 , 2 ) ; move ua , ul )  
[11986] ( ( move 0 , ua ; pen 0 ) ; move ua + ul , 3 ; move 0 , ua )  
[11987] ( ( move 4 , ua ; move ul , ul ) ; move 0 , 3 ; move 4 , ua )  
[11988] ( move ul , ua ; v0 = ul / 2 ; move ua + v0 , 2 / 3 )  
[11989] ( move ul , 0 ; move 3 , ul ; ( move 3 , ul ; v0 = ua ) )  
[11990] ( move ul - 4 , ul / ua ; ( move ul , ul ; move ul , ul ) )  
[11991] ( ( pen ul ; move ul , 2 / 3 ) ; pen 0 - 3 ; move 4 , ua )  
[11992] ( pen ul ; move ua - ul , 4 + ul ; move ul + ul , 2 + ul )  
[11993] ( pen ua ; ( move 0 - 4 , ua ; pen ul / 3 ) ; move 3 , 3 )  
[11994] ( move 4 + ul , ul - 4 ; v0 = ua ; move v0 + ul , 4 )  
[11995] ( move ul - ua , ul ; pen ua - 2 ; move 4 + ul , ua * ua )  
[11996] ( move ua , ua * ua ; move ua - 2 , ua / 3 ; pen ua - ul )  
[11997] ( move 0 , 2 ; ( pen 0 ; move ua , ua ; move ul , 2 - ua ) )  
[11998] ( move 3 , ua ; move 3 , ul ; ( move 4 , ua ; move ua , 4 ) )  
[11999] ( pen ua ; move ua + ul , 3 / 4 ; move ul + ul , ua + ul )  
[12000] ( move 3 * 2 , ua + ua ; move ul - ua , ul / ua ; pen ul )  
[12001] ( move 4 , 2 - 3 ; pen ua ; ( move ul - ua , 3 ; pen 4 ) )  
[12002] ( ( move 4 + ul , ua ; move 3 , 4 * 3 ; pen ua ) ; pen 2 )  
[12003] ( move ua + ul , ua / 3 ; move ul - 2 , ul ; pen ul + ul )  
[12004] ( ( v0 = ua ; move ul , 4 ; move ua , ul ) ; move 3 , 2 )  | ( move ul , 4 ; pen 4 ; ( move ua , ul ; move 2 + ul , 2 ) )  
[12005] ( move ua , 4 ; move ul , ul ; ( move 4 , ul ; v0 = 0 ) )  
[12006] ( move 4 / 3 , 3 / ua ; v0 = ua + ul ; move v0 , ul )  
[12007] ( ( move 4 , ul ; pen 2 ; pen 2 / ua ) ; move 4 - ua , 3 )  
[12008] ( move 3 , 0 ; ( pen 0 ; move ua , 3 + ul ) ; move ul , ua )  
[12009] ( move ul - 4 , 4 ; ( pen ul ; move 3 - 2 , 4 ) ; pen ua )  
[12010] ( move 3 / 4 , 3 ; v0 = ul ; move ua + ul , ul / v0 )  
[12011] ( move ua - ul , ul / ua ; pen ul ; move 3 - ul , 3 + ul )  
[12012] ( ( pen ul ; move 0 , ul ) ; ( pen ul / 4 ; move 4 , 0 ) )  
[12013] ( move ul , 4 ; ( move 2 , 4 ; move ul , ul ) ; v0 = ua )  
[12014] ( move ua - 2 , ul ; pen 0 ; ( move 2 , 2 ; move ul , ua ) )  
[12015] ( move ua , 4 ; move ul , ul ; ( v0 = ua ; move 4 , 3 ) )  
[12016] ( move 3 , 0 - 2 ; move ul , ul ; ( pen ua ; move ua , 2 ) )  
[12017] ( ( move ul , ua * ua ; move ua - ul , ul - 2 ) ; pen ul )  
[12018] ( move ua , 0 ; ( move ul , 4 ; move ul , 3 + ul ; pen 0 ) )  
[12019] ( move ua - 3 , 3 ; ( move 2 , ul ; move 0 , ua ) ; pen ua )  
[12020] ( move ul / ua , ul / 4 ; pen ua ; move 4 + ul , ul - ua )  
[12021] ( ( pen ua ; move ua - 2 , ul ; move 0 , ul ) ; move 2 , 4 )  
[12022] ( move ul , 2 ; ( move ua , ul ; move ua , 2 - 4 ; pen 0 ) )  
[12023] ( move 2 , 0 ; ( pen ua ; move 2 , ul ; move ua , 3 / ua ) )  
[12024] ( pen ul / 3 ; ( move 3 , 4 ; pen 4 ) ; move ua , ua * 4 )  
[12025] ( ( pen ul ; move ua , 0 - 3 ) ; move ua , 2 ; move 4 , ul )  
[12026] ( move ua , 0 - ua ; move ul , ul - ua ; move ua - ul , ul )  | ( move ua , ua * 4 ; move ul , ul ; move ua - ul , ul - ua )  
[12027] ( ( move 3 , 2 ; move ul , ul ; pen 0 ) ; move 2 - ul , ul )  
[12028] ( pen ul / ua ; ( move ul - 3 , ul ; move ua , ua * ua ) )  
[12029] ( move 0 - ul , ul ; ( move ul , ua ; pen 0 ; move 4 , 4 ) )  
[12030] ( ( move ua + ul , 4 ; pen ul ) ; move ua , 3 ; move 3 , 0 )  
[12031] ( move ul , 2 ; ( move ul , ul ; move 3 , 3 ) ; pen 0 - ul )  
[12032] ( move 4 , ua ; ( move 2 , ul - 2 ; move ul , 2 ) ; pen ua )  
[12033] ( ( move ul , 0 ; pen ul ) ; move 2 , ul ; move 3 / 2 , ua )  
[12034] ( ( move 4 , ua ; pen ul / ua ) ; move 0 , 3 ; move ua , 2 )  
[12035] ( move ul , 0 ; ( move ua , 4 / ua ; move ua , 3 ; pen 2 ) )  
[12036] ( move ua , ua - ul ; move ul + ul , ua + 4 ; move ua , ua )  
[12037] ( move ua , ua ; move ul - 2 , ua * ua ; move ua + ul , ul )  
[12038] ( ( move 3 , 4 ; pen 0 ) ; move ua + ul , ua ; v0 = ua )  
[12039] ( ( move ua , ul ; move 3 + ul , 2 ) ; move 2 , 4 ; pen ua )  
[12040] ( move 2 , ul ; move ua + ul , ua * ua ; move ua , ua * ua )  
[12041] ( move ul + ul , ua ; move ul , ul ; move ul - ua , ua + 2 )  
[12042] ( move 3 + ul , 0 ; ( pen ul ; move 2 , ul ; move ul , 4 ) )  
[12043] ( move ul , 2 ; ( move 3 , 4 ; move ua , ua + ul ) ; pen 2 )  
[12044] ( ( move ul , ul ; pen 0 ; move ua , 4 + ul ) ; move 3 , 4 )  
[12045] ( ( move 4 , ul ; pen 0 ; move ul , 4 ) ; move 3 + ul , ua )  
[12046] ( move ua , ua * ua ; move ul , ua + ul ; move ua , 3 - ul )  
[12047] ( ( pen 3 ; move 0 - ul , ul ) ; move ul , ul ; move 4 , 2 )  
[12048] ( move ul , 4 ; ( pen 0 ; move 4 + ul , ul ; move 2 , ul ) )  
[12049] ( ( move 2 , ua ; move ul , 4 ; move ua , 3 ) ; pen 3 + ul )  
[12050] ( ( pen ul ; move 3 , 0 ; move ul , ul ) ; move 3 + ul , 4 )  
[12051] ( move ua , ul ; ( pen ul - 2 ; move ul , 2 ; move 2 , 4 ) )  
[12052] ( move ul , ua ; move 4 + 3 , 2 ; ( move 3 , ul ; pen ua ) )  
[12053] ( ( move 4 , ul ; pen 4 ; move ua , 2 ) ; move ua + ul , 2 )  
[12054] ( ( move 3 , 3 + 2 ; move 3 , ul ) ; move ul , ul ; pen ua )  
[12055] ( ( move 3 , 2 ; pen 0 ) ; move ul , ul / 2 ; move ul , ul )  
[12056] ( ( pen ua ; move 4 , 0 ) ; move ul , 4 ; move 3 , ua * ua )  
[12057] ( move 4 , ua + 2 ; ( move 2 , 4 ; move ua , ul ; pen ul ) )  
[12058] ( move ul , 4 ; ( pen ua ; move ul , 3 ) ; move ua + 3 , 2 )  
[12059] ( move ua , ul + ul ; move 4 - ua , ul ; move ua + ul , ua )  
[12060] ( ( move 3 - ua , ua ; pen ul ; move ul , 4 ) ; move 4 , 0 )  
[12061] ( move ua , ul ; move ul - ua , 2 - ua ; move ul + ul , ul )  
[12062] ( ( pen ua ; move 3 , 0 ) ; move ul + ul , 4 ; move ul , 4 )  
[12063] ( ( move ua , 3 ; move 4 , ul ; pen ua ) ; move 4 + 2 , ul )  
[12064] ( pen 2 ; ( move ul , ua - 3 ; move ul , ul ) ; move 2 , 4 )  
[12065] ( ( pen ua ; move ua , ua * 3 ; move ua , 4 ) ; move 2 , 4 )  
[12066] ( ( move 4 , ul ; pen ul ) ; move 4 , 2 ; move ua , 2 + ul )  
[12067] ( ( move ul , 2 ; pen ul ) ; move ua , 2 ; move 4 - ua , 4 )  
[12068] ( move ul , ul - ua ; move ua , ua ; move 4 + ul , ua * ua )  
[12069] ( pen 4 ; move 3 , 3 ; ( move ua + ul , 2 ; move ul , ul ) )  
[12070] ( move ul + ul , ua * 2 ; move ul , ul ; move ua + ul , ul )  
[12071] ( move ul , ua ; move 3 - ul , ua * ua ; move ul , ua + ul )  
[12072] ( move ua , 3 + ul ; pen ua ; ( move 3 , 4 ; move ua , 4 ) )  
[12073] ( pen 3 ; move 2 , ul ; ( move ul , 3 ; move 4 + ul , ul ) )  
[12074] ( move ul - 3 , ul - ua ; move ul + ul , ua ; move ul , ul )  
[12075] ( pen 2 ; ( move 2 , 4 ; move 2 , ul / ua ) ; move ul , ul )  
[12076] ( move ua , ua - ul ; move 3 , ul / ua ; move ul , ua + ul )  
[12077] ( move ul , 4 - ua ; pen ul ; ( move ua , 2 ; move 3 , 4 ) )  
[12078] ( ( move 4 , 2 ; move ua , ul - 3 ; pen ua ) ; move 4 , ul )  
[12079] ( v0 = ua - ul ; move v0 , ua ; move v0 , ul - v0 )  
[12080] ( pen ua ; move 4 , ua + 4 ; ( move ul , 2 ; move 4 , ul ) )  
[12081] ( pen ua ; move 3 , ua * 2 ; ( move ua , 4 ; move 4 , ul ) )  
[12082] ( move ua + ul , ul ; move ua , ul + ul ; move ua / 3 , ul )  
[12083] ( v0 = ua ; move v0 , ul ; move ul - v0 , ua * v0 )  
[12084] ( v0 = ua - ul ; move ua , v0 ; move v0 , v0 / ua )  
[12085] ( move ul , ua - ul ; move ul - ua , ua - ul ; v0 = ua )  
[12086] ( ( pen ul ; move 4 / ua , 2 ; move ua , ul ) ; move 3 , 3 )  
[12087] ( move ul / 3 , ua + ul ; move ul , ua * ua ; move ua , ul )  
[12088] ( move ul , ua - ul ; move ul , ul ; move ul - ua , ul - 3 )  
[12089] ( pen ua ; ( move ul , ul ; move ua , 4 ; move 3 , 4 - 3 ) )  
[12090] ( ( move ul , ua ; move 2 , 4 + ul ; move 4 , 4 ) ; pen ul )  
[12091] ( move 2 , ul ; ( pen ul ; move 4 / ua , ul ) ; move 2 , 3 )  
[12092] ( v0 = ul - ua ; move v0 , v0 / ua ; move v0 , ua )  
[12093] ( pen 3 ; ( move 3 , 3 ; move ul , ul ; move ua , ua / 3 ) )  
[12094] ( ( move ul , ul / 4 ; pen 0 ; move ua , 4 ) ; move ul , 4 )  
[12095] ( move ua , ua * ua ; ( move 3 , 4 ; move 4 , ul ; pen 4 ) )  
[12096] ( move 3 , ul / ua ; move ul , ua * ua ; move ul , ul + ul )  
[12097] ( move ua + ul , 2 ; v0 = ua + ul ; move v0 , ua + 3 )  
[12098] ( ( pen 0 ; move ua , 4 ; pen ul ) ; move 2 + ul , 0 - ua )  
[12099] ( ( pen 4 ; move 3 , 2 ; move ul / ua , ul ) ; move 4 , ul )  
[12100] ( move ul , 2 ; ( ( move 4 , ul ; move ul , 2 ) ; pen ua ) )  
[12101] ( move ua , ul ; move 2 , 2 ; ( move 0 , ua ; move ua , ul ) )  
[12102] ( move ua , 0 ; ( move ul , 2 ; move ul , ua ) ; move ua , 2 )  
[12103] ( move ul , 4 ; move 4 , 3 - 4 ; ( pen ua ; move ul , ul ) )  
[12104] ( move ul , ua ; move ua , ul ; ( move 2 , 0 ; move ua , 3 ) )  
[12105] ( ( move 4 , ua * 4 ; move ul , 4 ; pen ul ) ; move ua , 4 )  
[12106] ( pen ua ; move ua - ul , 0 - ul ; move ul + ul , ua + ul )  
[12107] ( ( pen 0 ; move ua + ul , ul ) ; pen 4 ; move 2 - ul , 2 )  
[12108] ( ( move ua - ul , ua ; pen 0 ; move 3 + ul , 3 ) ; pen 3 )  
[12109] ( move ul , ul / ua ; ( move ul , ul + ul ; move ua , ua ) )  
[12110] ( move ul , 0 - ul ; v0 = ua + ua ; move 4 , ul / v0 )  
[12111] ( move 0 , 3 ; ( move ul , ua ; move ul , ul ; move 2 , ul ) )  
[12112] ( move ua + ul , ul - ua ; pen ul ; move ua + ul , 2 + ul )  
[12113] ( ( move ul , 0 ; move 3 , 2 ) ; move ul , ul ; move ua , ul )  
[12114] ( v0 = ul / 4 ; move ua + ul , v0 ; move ua , ua + 2 )  
[12115] ( ( move ul , ua ; move ul , 2 ) ; move ua , 4 ; move 0 , ul )  
[12116] ( ( move 4 , ul ; move 4 / 3 , 4 ; pen ul ) ; move ul , ul )  
[12117] ( ( pen ul ; pen ua * 3 ; move ua + 2 , 2 ) ; move ul , 2 )  
[12118] ( move ul - 3 , 3 - ua ; v0 = ua + ul ; move v0 , ul )  
[12119] ( move 2 , ua ; move 4 , 0 ; ( move ul , ul ; move ua , ul ) )  
[12120] ( move 2 , 3 - ua ; pen ul ; ( move ua + 2 , 4 ; pen ua ) )  
[12121] ( ( move 0 - ua , ul ; pen 0 ; move 3 , ul ) ; pen 4 / ua )  
[12122] ( ( move ul , ul ; move ua , ul / ua ) ; move ul , ua - ul )  
[12123] ( v0 = ul + ul ; move ua - ul , v0 ; move 3 + ul , 4 )  
[12124] ( ( pen 0 ; move ua , 2 ; pen ul ) ; move ua / 3 , ua * 3 )  
[12125] ( ( pen 0 ; move 4 - ua , ua ) ; pen ul ; move ua , 3 * 3 )  
[12126] ( ( pen ua ; move ua - 3 , 0 ) ; move 3 * 3 , ul ; pen ul )  
[12127] ( move ul , 0 ; ( move 3 , ul ; move ua , ul ) ; move 4 , ul )  
[12128] ( pen ua + 3 ; ( move 2 , ul ; pen ul ) ; move ua , 2 / 3 )  
[12129] ( move ul , ul ; ( pen 2 + ul ; ( pen 0 ; move ua , 2 ) ) )  
[12130] ( ( pen 0 ; move ua + ul , 4 ) ; ( pen ul ; move ul , 0 ) )  
[12131] ( move ul - ua , ua / 3 ; v0 = ul + ul ; move v0 , 3 )  
[12132] ( pen 4 ; ( move ua , ul ; pen ul - 2 ) ; move 3 - ua , 2 )  
[12133] ( move ul , 4 ; pen ua ; ( pen 3 / ua ; move ua , 0 - 3 ) )  
[12134] ( move 4 - ua , ul - ua ; ( pen ul ; move 2 , 2 ) ; pen 4 )  
[12135] ( pen 4 ; ( pen ua ; move ua / 2 , 3 ) ; move ua - 2 , ul )  
[12136] ( move ua , ul ; ( move ua , 2 ; move 3 , ul ) ; move ul , 4 )  
[12137] ( pen 0 ; ( pen ul ; move 4 , 4 ) ; move ua + ul , ua / 3 )  
[12138] ( ( move 4 , ua ; move ua , ul ) ; move ul , ul ; move 3 , 2 )  
[12139] ( pen ul / 2 ; ( move 3 , 4 ; pen 2 ; move ul , ua + ua ) )  
[12140] ( ( pen 3 ; move ua - ul , 4 + 4 ) ; move ua , 2 ; pen ul )  
[12141] ( move 4 , ul ; pen ul ; ( move ul - 3 , ul / 2 ; pen 0 ) )  
[12142] ( move ul / 2 , ul / 2 ; v0 = ul / ua ; move ua , v0 )  
[12143] ( move ua + ul , ul / 3 ; move ul + ul , ul - ua ; pen ul )  
[12144] ( move ul , ul ; ( move ul , 4 ; move 2 , ul ; v0 = ua ) )  
[12145] ( move ul , ul ; move 4 , 3 ; ( move ul , ul ; move 3 , ul ) )  
[12146] ( move ul + ul , ul - 4 ; v0 = ul ; move 4 / v0 , ul )  
[12147] ( ( pen ul ; pen ul ; move 3 , 3 ) ; move 4 - ua , 3 / ua )  
[12148] ( move ua - 3 , 2 ; pen ul ; ( move 4 , ul / 4 ; pen ua ) )  
[12149] ( move ul , ul / ua ; ( pen 0 ; move ua , 0 ; move 0 , ul ) )  
[12150] ( move 0 - 4 , ua ; pen ul ; ( move 0 , ua ; move ua , ul ) )  
[12151] ( move ul , ul ; ( move ul , ul ; move 4 , 4 ) ; move 4 , ua )  
[12152] ( move 3 , 0 ; ( move ul , ua * ua ; move ul , 0 ; pen ua ) )  
[12153] ( pen ul ; ( move ul , 4 - 3 ; pen ul / 4 ; move ua , 2 ) )  
[12154] ( move ul / ua , 3 ; move ul - ua , ul / ua ; pen ua * ua )  
[12155] ( pen ul ; pen 4 ; ( move ua , ul / ua ; move 2 , 3 / 4 ) )  
[12156] ( move ul , 0 ; ( pen ul / 3 ; ( move ua , 4 ; pen ul ) ) )  
[12157] ( move 4 , ua ; ( move 3 , ua + ul ; move ua , ul ) ; pen 0 )  
[12158] ( ( move 4 , ua ; pen 0 ) ; move ul , ul ; move 2 , ua + ul )  
[12159] ( move ul , ul ; move ua , ul ; ( pen 2 ; move ua , 0 - 3 ) )  
[12160] ( pen ul ; ( move ul , 0 ; move ua , ul - 2 ) ; move ua , 3 )  
[12161] ( ( move 2 , ua ; pen ua ; move ua , ul ) ; move 2 , ua + 4 )  
[12162] ( ( pen ua ; move ul , 4 ; move ua + ul , 0 ) ; move ua , 4 )  
[12163] ( pen ul / 4 ; ( move ua , ul ; ( pen 2 ; move ul , 3 ) ) )  
[12164] ( move ua , ua ; ( move 2 , ul ; move ua , 3 - ua ) ; pen 4 )  
[12165] ( ( move 2 , ul ; pen ul ; move 2 - 3 , ul ) ; move ua , ua )  
[12166] ( ( move ua , 2 ; pen ua + ul ; move 3 , ul ) ; move 3 , ul )  
[12167] ( move ua , 3 ; ( move 3 , 3 ; pen ua ) ; move ua , ua - ul )  
[12168] ( move 4 , 2 ; move ua , ul ; ( move ua , 4 ; pen ua + ua ) )  
[12169] ( move ul , ua + ul ; move ua + ul , ul ; move ul , ua + ul )  
[12170] ( ( move ul , ua ; move 4 , ua ; pen 2 ) ; move ua , ul - 2 )  
[12171] ( ( pen ua + ul ; move 2 , 4 ) ; move ul , 2 ; move ua , ul )  
[12172] ( ( pen ul ; move 2 , ul ) ; move 0 , ul ; move 2 , ul / ua )  
[12173] ( move ua , 2 ; ( move 2 + ul , ul ; move ul , 4 ) ; pen ul )  
[12174] ( ( move ua , ua ; move ul , 3 ) ; pen 4 ; move ul , ua - 2 )  
[12175] ( move 2 , ul ; move ua + ul , 4 ; ( pen 2 ; move ul , ul ) )  
[12176] ( move ul , ua * 2 ; ( move ul , 3 ; move 2 , ul ; pen ua ) )  
[12177] ( ( move 3 , ua ; move ul , 2 + ul ; move ua , 4 ) ; pen ul )  
[12178] ( ( move ua - 2 , ul ; move 3 , ul ) ; pen ua ; move 3 , ul )  
[12179] ( ( move ua , ua * ua ; pen 0 ; move ul , ua ) ; v0 = 4 )  
[12180] ( ( move 0 , ul ; move 2 , ul ; move ua , ul / 4 ) ; pen ua )  
[12181] ( move ul , 0 ; move 3 - ul , ul ; ( move ua , 4 ; pen ul ) )  
[12182] ( ( move ul , ua - 3 ; pen ul ) ; move ua , 2 ; move 4 , ua )  
[12183] ( move 2 , ua ; ( pen 2 - ul ; move ua , ul ) ; move 4 , ul )  
[12184] ( pen ul ; move 4 - ua , ua ; ( move ua , 4 ; move ua , 2 ) )  
[12185] ( move ua , 2 ; ( move 3 - ul , ul ; pen ul ; move ua , 3 ) )  
[12186] ( ( move ul , ua ; pen ul ) ; move 3 , 4 + ul ; move 3 , ua )  
[12187] ( move 3 , ul ; pen ua ; ( move 4 , 3 ; move ul , ua + ul ) )  
[12188] ( move ul - ua , ul ; move ul + ul , ua ; move ul - ua , ul )  
[12189] ( move ua , ua - ul ; move ul - ua , ua ; move ua , ul / ua )  
[12190] ( move ul - ua , ul ; move ul , ul ; move ul + ul , ua + ul )  
[12191] ( move 2 , ua ; pen ul ; ( move ua - 4 , 4 ; move ua , ul ) )  
[12192] ( ( move 3 - ua , 3 ; move ul , 3 ; pen ua ) ; move ul , ul )  
[12193] ( move ul , ul ; ( pen 4 ; move 2 , ul ; move 2 + ul , ul ) )  
[12194] ( ( move ul , 3 ; pen ul ) ; move ul / 3 , ul ; move ua , 0 )  
[12195] ( ( move ua , 3 ; move 2 / ua , 2 ) ; pen ul ; move ul , ul )  
[12196] ( ( move 3 , 3 * 2 ; move ul , ul ; pen ul ) ; move ua , ua )  
[12197] ( move 2 , ul ; move 4 , 4 ; ( pen ua - ul ; move ua , ul ) )  
[12198] ( move ul , ul / ua ; ( pen 0 ; move 4 , ua ) ; v0 = ua )  
[12199] ( move 4 + 3 , ua ; ( pen ua ; move ul , ul ) ; move 4 , ul )  
[12200] ( move 3 / 2 , ul ; move ua , ul ; ( pen 3 ; move ua , ul ) )  
[12201] ( ( pen 3 ; move ul , 4 + 3 ; move ua , ul ) ; move ul , ul )  
[12202] ( pen 4 ; ( move ua , ul ; move ul , ul ) ; move 4 - ua , 3 )  
[12203] ( pen ua ; ( move 4 , ul ; move ul , ua ) ; move 4 , ul - 3 )  
[12204] ( ( move 4 , ul ; move 2 , ul / ua ) ; move ul , 2 ; pen ul )  
[12205] ( move ul , ul ; move 4 , ua ; ( pen 3 - ua ; move 4 , ul ) )  
[12206] ( ( move ua , ul ; move ul , ul ) ; move 4 + 3 , ul ; pen 4 )  
[12207] ( move ua , ul ; ( move ua / 4 , 4 ; pen ul ) ; move 2 , ul )  
[12208] ( move ul , ul ; ( pen 4 ; move 3 , ul ; move 3 / ua , ua ) )  
[12209] ( move ul , ul ; ( pen ul ; move 4 , ul ; move 3 + ul , 4 ) )  
[12210] ( move ul , ua ; ( move 4 , 2 ; move ul / ua , ul ; pen 4 ) )  
[12211] ( ( move ul , 4 ; pen ul ) ; move 4 , ul ; move 3 + ul , ul )  
[12212] ( ( pen ua ; move 4 , 4 ) ; move ul , ul ; move ul , ua / 4 )  
[12213] ( v0 = ua + 2 ; move ul - v0 , ua + ul ; move ul , ul )  
[12214] ( ( pen 0 ; move ua - ul , 4 + ul ) ; pen ua ; move ua , 3 )  
[12215] ( pen 0 ; move 3 + ul , ua ; ( pen 3 ; move ul , ul - ua ) )  
[12216] ( pen ul ; ( move ua + ul , 2 - 3 ; pen 0 ) ; move ul , ul )  
[12217] ( ( move ul , ul ; pen ul / 4 ; move 3 , ul ) ; v0 = ul )  
[12218] ( pen 0 ; move 4 + 3 , ul ; ( pen ua ; move ul + ul , ul ) )  
[12219] ( move 2 , ua ; ( move ua , ul ; move ul , ul ; move 2 , ul ) )  
[12220] ( pen 2 - 3 ; move ua , ua ; ( pen ul ; move ul , 3 - ua ) )  
[12221] ( move ua , ul + ul ; v0 = 4 + ul ; move ua , ua / v0 )  
[12222] ( ( move ua , ul / ua ; pen ul ) ; pen 0 ; move 2 , 2 / ua )  
[12223] ( move ua , ua ; ( move ul , 3 ; move ul , ul ) ; move ul , 2 )  
[12224] ( pen 0 ; ( move ul , 4 / ua ; pen ul ) ; move 2 - ua , ul )  
[12225] ( move ua , ul / ua ; v0 = ua - ul ; move 2 / v0 , ul )  
[12226] ( move ua - ul , ul ; ( move 4 * 2 , 2 ; pen ua ) ; pen ul )  
[12227] ( move ul , ua / 2 ; ( pen ul ; pen 2 / ua ; move ua , 2 ) )  
[12228] ( ( pen ul / ua ; move ua , 2 ; pen ul ) ; move 3 + ul , 3 )  
[12229] ( ( move ua , ua ; move ul , ul ) ; move 3 , 3 ; move ul , ul )  
[12230] ( ( move ua - 3 , ul ; pen ul ) ; pen ul ; move 2 - ua , 4 )  
[12231] ( pen ua ; pen 3 ; ( move ua / 4 , ul ; move ua , ua - 2 ) )  
[12232] ( move 3 - ua , ul ; ( pen ul ; ( pen 0 ; move ua , ul ) ) )  
[12233] ( ( pen ul ; pen ua ; move ul , ua - 3 ) ; move 4 , 3 - ul )  
[12234] ( move 4 / ua , ul ; ( pen ua ; move 4 , ua - 2 ; pen ul ) )  
[12235] ( pen ul ; pen 4 ; ( move ua , ua / 3 ; move ua , ul - 3 ) )  
[12236] ( move 0 , ul ; ( move ul - ua , ul ; pen 0 ) ; move ua , ul )  
[12237] ( move 3 , ul / 2 ; ( pen ul ; pen ul / 4 ) ; move ua , ul )  
[12238] ( move ua , 0 ; ( pen ua ; move ul , ul ; move ul , ua - 2 ) )  
[12239] ( ( pen ua ; move ua , ua ; move ua - 2 , ul ) ; move ua , 2 )  
[12240] ( move ua + ul , 0 ; ( move ul , ul ; move 3 , ul ) ; pen ua )  
[12241] ( move ul , 3 + ul ; ( pen 0 ; move ul , ul ) ; move ua , ua )  
[12242] ( pen ua ; ( move 0 - ul , ul ; move 2 , ul ) ; move ul , ul )  
[12243] ( move 2 , ua ; ( move 2 , ul ; pen ua ) ; move ul - ua , ul )  
[12244] ( ( pen 2 ; move ul + ul , ua ; move 2 , ul ) ; move ua , ul )  
[12245] ( move ul , ul ; ( pen ul / ua ; move ua , ua ) ; move 0 , 2 )  
[12246] ( pen ul ; move 0 , ul ; ( move 4 , ua * ua ; move ua , ul ) )  
[12247] ( move ul , ua ; ( move 2 - ua , 2 ; pen ul ; move ul , ul ) )  
[12248] ( move ul / ua , 0 ; move ua , ul ; ( pen ua ; move ua , 4 ) )  
[12249] ( ( move ua , 2 ; move ul , ul ) ; pen 2 + ul ; move ul , ul )  
[12250] ( ( move ua , ua ; move ul , ul ; move ua , 2 ) ; pen ul - 4 )  
[12251] ( ( move ua , ul / ua ; move ua , 2 ; move 2 , ul ) ; pen ul )  
[12252] ( ( move ul , ua ; pen ul ; move ua - 3 , 2 ) ; move ul , ul )  
[12253] ( move ua , 3 ; ( move ul , ul ; move ul , 2 ) ; pen ul + ul )  
[12254] ( ( move 4 - ua , ul ; pen 2 ; move ul , ul ) ; move ua , ua )  
[12255] ( move ul , ul ; ( pen ul / ua ; move ua , 3 ) ; move ua , 2 )  
[12256] ( ( move ul , ul ; move 3 , ua - ul ) ; pen ul ; move ul , 2 )  
[12257] ( ( move ul , 3 ; move 3 , ul ; pen ua + ul ) ; move ul , ul )  
[12258] ( pen ua ; move 2 , ul ; ( move 4 , ul ; move ul , ua - ul ) )  
[12259] ( move 3 , ul ; ( move ul , ul ; pen ul ; move ua , 3 - ul ) )  
[12260] ( ( move ul , 3 ; move ua , ul ; move ul / 2 , ul ) ; pen ua )  
[12261] ( ( move ul , 3 ; pen ul ) ; move ua , ul ; move ul , ul - 3 )  
[12262] ( move ua - ul , ul ; ( pen 2 ; move ul , 4 ; move ul , ul ) )  
[12263] ( ( move 2 , ua ; pen ua ) ; move ul , ul ; move ul , ua / 4 )  
[12264] ( move ul - 4 , 3 ; ( move ul , ul ; pen ua ) ; move ua , ul )  
[12265] ( ( move ul - ua , ul ; move ul , ul ) ; pen 4 ; move ul , 2 )  
[12266] ( move 2 , ua ; ( move 4 , ul ; pen ua ) ; move ul , ul / ua )  
[12267] ( ( move ul , ua ; move 3 , ul / ua ; move ua , ul ) ; pen 3 )  
[12268] ( move 4 , ua ; pen ul ; ( move ul , ul ; move ul , 3 - ul ) )  
[12269] ( move 3 , ul ; ( move ul , ua - 4 ; pen ul ; move ul , ul ) )  
[12270] ( ( move ua , 4 / ua ; move ul , ul ; pen 2 ) ; move ul , ul )  
[12271] ( ( move ul , ul / 4 ; pen ul ) ; move 3 , ul ; move ul , ul )  
[12272] ( move ul , 3 / ua ; ( pen ua ; pen 0 ; move ua , ua + ul ) )  
[12273] ( move ua - ul , ul - 2 ; pen ua ; ( move ua , 2 ; pen ul ) )  
[12274] ( move ua - ul , ul ; v0 = ul - ua ; move v0 + ul , ul )  
[12275] ( ( move ul , ua * ua ; pen 0 ; move ua , 4 ) ; pen ul / ua )  
[12276] ( ( move ul , 4 ; move ul , ul ) ; move ul , ul ; move ua , ua )  
[12277] ( ( move ul , ul ; pen 0 ) ; move ul , ua - ul ; move ua , ul )  
[12278] ( move 0 , ul ; ( pen ul / ua ; move ul , ul ; move ua , ua ) )  
[12279] ( ( pen ul ; move ul , ul ) ; move ul , ul ; move ua , ua + 3 )  
[12280] ( pen ua ; ( move 2 , ul ; move ul , ul ; move ua , ul / ua ) )  
[12281] ( ( move 4 , ul ; pen ua ) ; move ul , ul ; move ul - ua , ul )  
[12282] ( move ul , ul ; pen ua ; ( move 3 , ul ; move ul , ul / ua ) )  
[12283] ( move ul , ul ; ( move 4 - ul , ul ; move ul , ul ) ; pen ua )  
[12284] ( move ul , ul ; ( pen 3 ; move ua , ul ; move ul , ul / ua ) )  
[12285] ( ( move ul , ul / ua ; move ua , 4 ) ; pen ua ; move ul , ul )  
[12286] ( move ul , ul ; ( pen 0 ; pen ul / ua ) ; move ua , ua * ua )  
[12287] ( move ua , ul + ul ; ( move ul , ul ; pen ul ) ; move ua , ul )  
